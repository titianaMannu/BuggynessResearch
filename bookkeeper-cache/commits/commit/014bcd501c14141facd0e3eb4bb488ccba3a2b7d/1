{"sha":"014bcd501c14141facd0e3eb4bb488ccba3a2b7d","node_id":"MDY6Q29tbWl0MTU3NTk1NjowMTRiY2Q1MDFjMTQxNDFmYWNkMGUzZWI0YmI0ODhjY2JhM2EyYjdk","commit":{"author":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2012-02-17T11:50:23Z"},"committer":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2012-02-17T11:50:23Z"},"message":"BOOKKEEPER-174: Bookie can't start when replaying entries whose ledger were deleted and garbage collected. (sijie via ivank)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1245411 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"69bfea457f46215764d306387a2c5de3dc86373d","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/69bfea457f46215764d306387a2c5de3dc86373d"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/014bcd501c14141facd0e3eb4bb488ccba3a2b7d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/014bcd501c14141facd0e3eb4bb488ccba3a2b7d","html_url":"https://github.com/apache/bookkeeper/commit/014bcd501c14141facd0e3eb4bb488ccba3a2b7d","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/014bcd501c14141facd0e3eb4bb488ccba3a2b7d/comments","author":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"committer":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"parents":[{"sha":"bad375aa35a2c17c466d2be7481e7d16220d59b0","url":"https://api.github.com/repos/apache/bookkeeper/commits/bad375aa35a2c17c466d2be7481e7d16220d59b0","html_url":"https://github.com/apache/bookkeeper/commit/bad375aa35a2c17c466d2be7481e7d16220d59b0"}],"stats":{"total":97,"additions":71,"deletions":26},"files":[{"sha":"d5719b16d9236b66ec6fc7ae2cf2d69b75db87d0","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/014bcd501c14141facd0e3eb4bb488ccba3a2b7d/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/014bcd501c14141facd0e3eb4bb488ccba3a2b7d/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=014bcd501c14141facd0e3eb4bb488ccba3a2b7d","patch":"@@ -42,6 +42,8 @@ Trunk (unreleased changes)\n \n         BOOKKEEPER-169: bookie hangs on reading header when encountering partial header index file (sijie via ivank)\n \n+        BOOKKEEPER-174: Bookie can't start when replaying entries whose ledger were deleted and garbage collected. (sijie via ivank)\n+\n       hedwig-server/\n       \n         BOOKKEEPER-140: Hub server doesn't subscribe remote region correctly when a region is down. (Sijie Gou via ivank)"},{"sha":"d4ece9498cf709aa9bf5a218b759e9d7ee9245ac","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java","status":"modified","additions":25,"deletions":21,"changes":46,"blob_url":"https://github.com/apache/bookkeeper/blob/014bcd501c14141facd0e3eb4bb488ccba3a2b7d/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java","raw_url":"https://github.com/apache/bookkeeper/raw/014bcd501c14141facd0e3eb4bb488ccba3a2b7d/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java?ref=014bcd501c14141facd0e3eb4bb488ccba3a2b7d","patch":"@@ -340,30 +340,34 @@ public boolean accept(long journalId) {\n                 }\n                 recBuff.flip();\n                 long ledgerId = recBuff.getLong();\n-                if (LOG.isDebugEnabled()) {\n-                    LOG.debug(\"Relay journal - ledger id : \" + ledgerId);\n-                }\n-                LedgerDescriptor handle = getHandle(ledgerId);\n                 long entryId = recBuff.getLong();\n-                if (entryId == METAENTRY_ID_LEDGER_KEY) {\n-                    if (recLog.getFormatVersion() >= 3) {\n-                        int masterKeyLen = recBuff.getInt();\n-                        byte[] masterKey = new byte[masterKeyLen];\n-                        recBuff.get(masterKey);\n-                        handle.checkAccess(masterKey);\n-                        putHandle(handle);\n+                LedgerDescriptor handle;\n+                try {\n+                    handle = getHandle(ledgerId);\n+                    LOG.debug(\"Relay journal - ledger id : {}, entry id : {}.\", ledgerId, entryId);\n+                    if (entryId == METAENTRY_ID_LEDGER_KEY) {\n+                        if (recLog.getFormatVersion() >= 3) {\n+                            int masterKeyLen = recBuff.getInt();\n+                            byte[] masterKey = new byte[masterKeyLen];\n+                            recBuff.get(masterKey);\n+                            handle.checkAccess(masterKey);\n+                            putHandle(handle);\n+                        } else {\n+                            throw new IOException(\"Invalid journal. Contains journalKey \"\n+                                    + \" but layout version (\" + recLog.getFormatVersion()\n+                                    + \") is too old to hold this\");\n+                        }\n                     } else {\n-                        throw new IOException(\"Invalid journal. Contains journalKey \"\n-                                + \" but layout version (\" + recLog.getFormatVersion()\n-                                + \") is too old to hold this\");\n-                    }\n-                } else {\n-                    try {\n-                        recBuff.rewind();\n-                        handle.addEntry(recBuff);\n-                    } finally {\n-                        putHandle(handle);\n+                        try {\n+                            recBuff.rewind();\n+                            handle.addEntry(recBuff);\n+                        } finally {\n+                            putHandle(handle);\n+                        }\n                     }\n+                } catch (NoLedgerException nsle) {\n+                    LOG.debug(\"Skip replaying entries of ledger {} since it was deleted.\", ledgerId);\n+                    continue;\n                 }\n             }\n             recLog.close();"},{"sha":"17f5da27350c8cf860cb61cbef534402973e3879","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieJournalRollingTest.java","status":"modified","additions":44,"deletions":5,"changes":49,"blob_url":"https://github.com/apache/bookkeeper/blob/014bcd501c14141facd0e3eb4bb488ccba3a2b7d/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieJournalRollingTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/014bcd501c14141facd0e3eb4bb488ccba3a2b7d/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieJournalRollingTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieJournalRollingTest.java?ref=014bcd501c14141facd0e3eb4bb488ccba3a2b7d","patch":"@@ -79,7 +79,12 @@ public void tearDown() throws Exception {\n             lhs[i] = bkc.createLedger(digestType, \"\".getBytes());\n             ledgerIds[i] = lhs[i].getId();\n         }\n+        writeLedgerEntries(lhs, msgSize, numMsgs);\n+        // Return the ledger handles to the inserted ledgers and entries\n+        return lhs;\n+    }\n \n+    private void writeLedgerEntries(LedgerHandle[] lhs, int msgSize, int numMsgs) throws Exception {\n         // Create a dummy message string to write as ledger entries\n         StringBuilder msgSB = new StringBuilder();\n         for (int i = 0; i < msgSize; i++) {\n@@ -89,16 +94,13 @@ public void tearDown() throws Exception {\n \n         // Write all of the entries for all of the ledgers\n         for (int i = 0; i < numMsgs; i++) {\n-            for (int j = 0; j < numLedgers; j++) {\n+            for (int j = 0; j < lhs.length; j++) {\n                 StringBuilder sb = new StringBuilder();\n-                sb.append(ledgerIds[j]).append('-').append(i).append('-')\n+                sb.append(lhs[j].getId()).append('-').append(i).append('-')\n                   .append(msg);\n                 lhs[j].addEntry(sb.toString().getBytes());\n             }\n         }\n-\n-        // Return the ledger handles to the inserted ledgers and entries\n-        return lhs;\n     }\n \n     private void validLedgerEntries(long[] ledgerIds, int msgSize, int numMsgs) throws Exception {\n@@ -216,4 +218,41 @@ public void testJournalRollingWithoutSyncup() throws Exception {\n         validLedgerEntries(ledgerIds, 1024, 1024);\n     }\n \n+    /**\n+     * This test writes enough ledger entries to roll over the journals\n+     * without sync up\n+     *\n+     * @throws Exception\n+     */\n+    @Test\n+    public void testReplayDeletedLedgerJournalEntries() throws Exception {\n+        if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Testing replaying journal entries whose ledger has been removed.\");\n+        }\n+\n+        // Write entries\n+        LedgerHandle[] lhs = writeLedgerEntries(1, 1024, 10);\n+        // Wait until all entries are flushed and last mark rolls\n+        Thread.sleep(3 * baseConf.getFlushInterval());\n+\n+        // restart bookies with flush interval set to a large value\n+        ServerConfiguration newConf = new ServerConfiguration();\n+        newConf.setFlushInterval(999999999);\n+        // restart bookies\n+        restartBookies(newConf);\n+\n+        // Write entries again to let them existed in journal\n+        writeLedgerEntries(lhs, 1024, 10);\n+\n+        // delete them\n+        for (LedgerHandle lh : lhs) {\n+            bkc.deleteLedger(lh.getId());\n+        }\n+        // wait for gc\n+        Thread.sleep(2 * newConf.getGcWaitTime());\n+\n+        // restart bookies again to trigger replaying journal\n+        restartBookies(newConf);\n+    }\n+\n }"}]}

