{"sha":"0cb40cf90f13eedd54392ec954feadf8df28dede","node_id":"MDY6Q29tbWl0MTU3NTk1NjowY2I0MGNmOTBmMTNlZWRkNTQzOTJlYzk1NGZlYWRmOGRmMjhkZWRl","commit":{"author":{"name":"Flavio Paiva Junqueira","email":"fpj@apache.org","date":"2012-05-29T21:00:26Z"},"committer":{"name":"Flavio Paiva Junqueira","email":"fpj@apache.org","date":"2012-05-29T21:00:26Z"},"message":"BOOKKEEPER-270: Review documentation on bookie cookie (ivank via fpj)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1343981 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0f3fde715de7d127db6b3142d7e55680629eafa4","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/0f3fde715de7d127db6b3142d7e55680629eafa4"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/0cb40cf90f13eedd54392ec954feadf8df28dede","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/0cb40cf90f13eedd54392ec954feadf8df28dede","html_url":"https://github.com/apache/bookkeeper/commit/0cb40cf90f13eedd54392ec954feadf8df28dede","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/0cb40cf90f13eedd54392ec954feadf8df28dede/comments","author":{"login":"fpj","id":572920,"node_id":"MDQ6VXNlcjU3MjkyMA==","avatar_url":"https://avatars.githubusercontent.com/u/572920?v=4","gravatar_id":"","url":"https://api.github.com/users/fpj","html_url":"https://github.com/fpj","followers_url":"https://api.github.com/users/fpj/followers","following_url":"https://api.github.com/users/fpj/following{/other_user}","gists_url":"https://api.github.com/users/fpj/gists{/gist_id}","starred_url":"https://api.github.com/users/fpj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fpj/subscriptions","organizations_url":"https://api.github.com/users/fpj/orgs","repos_url":"https://api.github.com/users/fpj/repos","events_url":"https://api.github.com/users/fpj/events{/privacy}","received_events_url":"https://api.github.com/users/fpj/received_events","type":"User","site_admin":false},"committer":{"login":"fpj","id":572920,"node_id":"MDQ6VXNlcjU3MjkyMA==","avatar_url":"https://avatars.githubusercontent.com/u/572920?v=4","gravatar_id":"","url":"https://api.github.com/users/fpj","html_url":"https://github.com/fpj","followers_url":"https://api.github.com/users/fpj/followers","following_url":"https://api.github.com/users/fpj/following{/other_user}","gists_url":"https://api.github.com/users/fpj/gists{/gist_id}","starred_url":"https://api.github.com/users/fpj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fpj/subscriptions","organizations_url":"https://api.github.com/users/fpj/orgs","repos_url":"https://api.github.com/users/fpj/repos","events_url":"https://api.github.com/users/fpj/events{/privacy}","received_events_url":"https://api.github.com/users/fpj/received_events","type":"User","site_admin":false},"parents":[{"sha":"bfd09dd0bb5cb2d786d0f413f2c6bc8243d06d54","url":"https://api.github.com/repos/apache/bookkeeper/commits/bfd09dd0bb5cb2d786d0f413f2c6bc8243d06d54","html_url":"https://github.com/apache/bookkeeper/commit/bfd09dd0bb5cb2d786d0f413f2c6bc8243d06d54"}],"stats":{"total":49,"additions":36,"deletions":13},"files":[{"sha":"6c9c50dccf3c06e92f604f56351abbc000f0d1d7","filename":"doc/bookieRecovery.textile","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/apache/bookkeeper/blob/0cb40cf90f13eedd54392ec954feadf8df28dede/doc/bookieRecovery.textile","raw_url":"https://github.com/apache/bookkeeper/raw/0cb40cf90f13eedd54392ec954feadf8df28dede/doc/bookieRecovery.textile","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/doc/bookieRecovery.textile?ref=0cb40cf90f13eedd54392ec954feadf8df28dede","patch":"@@ -18,13 +18,13 @@ Notice:    Licensed to the Apache Software Foundation (ASF) under one\n \n h1. Bookie Recovery\n \n-p. When a bookie crashes, any ledgers with entries on the bookie potentially become underreplicated. For this reason, we provide a recovery tool which will ensure that all ledgers which had entries on the bookie are fully replicated. At the moment, this is not an automatic process. The administrator must run this tool manually when he sees that the bookie has died. \n+p. When a bookie crashes, any ledgers with entries on the bookie potentially become under-replicated. For this reason, we provide a recovery tool which will ensure that all ledgers which had entries on the bookie are fully replicated. At the moment, this is not an automatic process. The administrator must run this tool manually when he sees that the bookie has died. \n \n-To run recovery, with zk1.example.com as the zookeeper ensemble, and bk3.example.com as the failed bookie, do the following:\n+To run recovery, with zk1.example.com as the zookeeper ensemble, and 192.168.1.10 as the failed bookie, do the following:\n \n-@bookkeeper-server/bin/bookkeeper org.apache.bookkeeper.tools.BookKeeperTools zk1.example.com:2181 bk3.example.com:3181@\n+@bookkeeper-server/bin/bookkeeper org.apache.bookkeeper.tools.BookKeeperTools zk1.example.com:2181 192.168.1.10:3181@\n \n-It is necessary to specify the host and port portion of failed bookie, as this is how it identifies itself to zookeeper. It is possible to specify a third argument, which is the bookie to replicate to. If this is omitted, as in our example, a random bookie is chosen for each ledger fragment. A ledger fragment is a continous sequence of entries in a bookie, which share the same ensemble. \n+It is necessary to specify the host and port portion of failed bookie, as this is how it identifies itself to zookeeper. It is possible to specify a third argument, which is the bookie to replicate to. If this is omitted, as in our example, a random bookie is chosen for each ledger fragment. A ledger fragment is a continuous sequence of entries in a bookie, which share the same ensemble. \n \n The recovery process is as follows.\n \n@@ -37,5 +37,5 @@ The recovery process is as follows.\n ### the client reads entries that belong to the ledger fragment from other bookies in the ensemble and writes them to the selected bookie;\n ### Once all entries have been replicated, the zookeeper metadata for the fragment is updated to reflect the new ensemble;\n ### The fragment is marked as fully replicated in the recovery tool;\n-## Once all ledger fragements are marked as fully replicated, the ledger is marked as fully replicated;\n+## Once all ledger fragments are marked as fully replicated, the ledger is marked as fully replicated;\n # Once all ledgers are marked as fully replicated, bookie recovery is finished.\n\\ No newline at end of file"},{"sha":"be4ad1c06c8a6c422ec2dc72e126858c5db76370","filename":"doc/bookkeeperConfig.textile","status":"modified","additions":31,"deletions":8,"changes":39,"blob_url":"https://github.com/apache/bookkeeper/blob/0cb40cf90f13eedd54392ec954feadf8df28dede/doc/bookkeeperConfig.textile","raw_url":"https://github.com/apache/bookkeeper/raw/0cb40cf90f13eedd54392ec954feadf8df28dede/doc/bookkeeperConfig.textile","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/doc/bookkeeperConfig.textile?ref=0cb40cf90f13eedd54392ec954feadf8df28dede","patch":"@@ -20,19 +20,19 @@ h1. Running a BookKeeper instance\n \n h2. System requirements\n \n-p. A typical BookKeeper installation comprises a set of bookies and a set of ZooKeeper replicas. The exact number of bookies depends on the quorum mode, desired throughput, and number of clients using this installation simultaneously. The minimum number of bookies is three for self-verifying (stores a message authentication code along with each entry) and four for generic (does not store a message authentication code with each entry), and there is no upper limit on the number of bookies. Increasing the number of bookies will, in fact, enable higher throughput. \n+A typical BookKeeper installation comprises a set of bookies and a set of ZooKeeper replicas. The exact number of bookies depends on the quorum mode, desired throughput, and number of clients using this installation simultaneously. The minimum number of bookies is three for self-verifying (stores a message authentication code along with each entry) and four for generic (does not store a message authentication code with each entry), and there is no upper limit on the number of bookies. Increasing the number of bookies will, in fact, enable higher throughput.\n \n-p. For performance, we require each server to have at least two disks. It is possible to run a bookie with a single disk, but performance will be significantly lower in this case.\n+For performance, we require each server to have at least two disks. It is possible to run a bookie with a single disk, but performance will be significantly lower in this case.\n \n-p. For ZooKeeper, there is no constraint with respect to the number of replicas. Having a single machine running ZooKeeper in standalone mode is sufficient for BookKeeper. For resilience purposes, it might be a good idea to run ZooKeeper in quorum mode with multiple servers. Please refer to the ZooKeeper documentation for detail on how to configure ZooKeeper with multiple replicas. \n+For ZooKeeper, there is no constraint with respect to the number of replicas. Having a single machine running ZooKeeper in standalone mode is sufficient for BookKeeper. For resilience purposes, it might be a good idea to run ZooKeeper in quorum mode with multiple servers. Please refer to the ZooKeeper documentation for detail on how to configure ZooKeeper with multiple replicas.\n \n h2. Running bookies\n \n-p. To run a bookie, we execute the following command: \n+To run a bookie, we execute the following command:\n \n @bookkeeper-server/bin/bookkeeper bookie@\n \n-p. The configuration parameters can be set in bookkeeper-server/conf/bk_server.conf. \n+The configuration parameters can be set in bookkeeper-server/conf/bk_server.conf.\n \n The important parameters are:\n \n@@ -41,11 +41,11 @@ The important parameters are:\n * @journalDir@, Path for Log Device (stores bookie write-ahead log); \n * @ledgerDir@, Path for Ledger Device (stores ledger entries); \n \n-p. Ideally, @journalDir@ and @ledgerDir@ are each in a different device. See \"Bookie Configuration Parameters\":./bookieConfigParams.html for a full list of configuration parameters.\n+Ideally, @journalDir@ and @ledgerDir@ are each in a different device. See \"Bookie Configuration Parameters\":./bookieConfigParams.html for a full list of configuration parameters.\n \n h3. Upgrading\n \n-From time to time, we may make changes to the filesystem layout of the bookie, which are incompatible with previous versions of bookkeeper and require that directories used with previous versions are upgraded. If you upgrade your bookkeeper software, and an upgrade is required, then the bookie will fail to start and print an error such as;\n+From time to time, we may make changes to the filesystem layout of the bookie, which are incompatible with previous versions of bookkeeper and require that directories used with previous versions are upgraded. If you upgrade your bookkeeper software, and an upgrade is required, then the bookie will fail to start and print an error such as:\n \n @2012-05-25 10:41:50,494 - ERROR - [main:Bookie@246] - Directory layout version is less than 3, upgrade needed@\n \n@@ -68,8 +68,31 @@ BookKeeper uses \"slf4j\":http://www.slf4j.org for logging, with the log4j binding\n @export BOOKIE_LOG_CONF=/tmp/log4j.properties@\n @bookkeeper-server/bin/bookkeeper bookie@\n \n+h3. Missing disks or directories\n+\n+Replacing disks or removing directories accidentally can cause a bookie to fail while trying to read a ledger fragment which the ledger metadata has claimed exists on the bookie. For this reason, when a bookie is started for the first time, it's disk configuration is fixed for the lifetime of that bookie. Any change to the disk configuration of the bookie, such as a crashed disk or an accidental configuration change, will result in the bookie being unable to start with the following error:\n+\n+@2012-05-29 18:19:13,790 - ERROR - [main:BookieServer@314] - Exception running bookie server : @\n+@org.apache.bookkeeper.bookie.BookieException$InvalidCookieException@\n+@.......at org.apache.bookkeeper.bookie.Cookie.verify(Cookie.java:82)@\n+@.......at org.apache.bookkeeper.bookie.Bookie.checkEnvironment(Bookie.java:275)@\n+@.......at org.apache.bookkeeper.bookie.Bookie.<init>(Bookie.java:351)@\n+\n+If the change was the result of an accidental configuration change, the change can be reverted and the bookie can be restarted. However, if the change cannot be reverted, such as is the case when you want to add a new disk or replace a disk, the bookie must be wiped and then all its data re-replicated onto it. To do this, do the following:\n+\n+# Increment the _bookiePort_ in _bk_server.conf_.\n+# Ensure that all directories specified by _journalDirectory_ and _ledgerDirectories_ are empty.\n+# Start the bookie.\n+# Run @bin/bookkeeper org.apache.bookkeeper.tools.BookKeeperTools <zkserver> <oldbookie> <newbookie>@ to re-replicate data. <oldbookie> and <newbookie> are identified by their external IP and bookiePort. For example if this process is being run on a bookie with an external IP of 192.168.1.10, with an old _bookiePort_ of 3181 and a new _bookiePort_ of 3182, and with zookeeper running on _zk1.example.com_, the command to run would be <br/>@bin/bookkeeper org.apache.bookkeeper.tools.BookKeeperTools zk1.example.com 192.168.1.10:3181 192.168.1.10:3182@. See \"Bookie Recovery\":./bookieRecovery.html for more details on the re-replication process.\n+\n+The mechanism to prevent the bookie from starting up in the case of configuration changes exists to prevent the following silent failures:\n+\n+# A strict subset of the ledger devices (among multiple ledger devices) has been replaced, consequently making the content of the replaced devices unavailable;\n+# A strict subset of the ledger directories has been accidentally deleted.\n+\n h2. Setting up a test ensemble\n \n-Sometimes it is useful to run a ensemble of bookies on your local machine for testing. We provide a utility for doing this. It will set up N bookies, and a zookeeper instance locally. The data on these bookies and of the zookeeper instance are not persisted over restarts, so obviously this should never be used in a production environment. To run a test ensemble of 10 bookies, do the following.\n+Sometimes it is useful to run a ensemble of bookies on your local machine for testing. We provide a utility for doing this. It will set up N bookies, and a zookeeper instance locally. The data on these bookies and of the zookeeper instance are not persisted over restarts, so obviously this should never be used in a production environment. To run a test ensemble of 10 bookies, do the following:\n \n @bookkeeper-server/bin/bookkeeper localbookie 10@\n+"}]}

