{"sha":"0ccbc0e9c3e6a82d5e44b8347cc6567e043f253f","node_id":"MDY6Q29tbWl0MTU3NTk1NjowY2NiYzBlOWMzZTZhODJkNWU0NGI4MzQ3Y2M2NTY3ZTA0M2YyNTNm","commit":{"author":{"name":"Samuel Just","email":"sjust@salesforce.com","date":"2017-07-28T04:39:03Z"},"committer":{"name":"jiazhai","email":"zhaijia@live.com","date":"2017-07-28T04:39:03Z"},"message":"BOOKKEEPER-1104: Fix testWithDiskFullAndAbilityToCreateNewIndexFile\n\nThe usage threshhold was chosen to be very close to the actual disk\nusage at test time.  This made the test unnecessarily fragile in the\ncase that there other things concurrently using the disk.  Since we\naren't really testing that here, simply set the threshhold to be really\nlow.\n\nSigned-off-by: Samuel Just <sjustsalesforce.com>\n\nAuthor: Samuel Just <sjust@salesforce.com>\n\nReviewers: Jia Zhai <None>, Matteo Merli <None>\n\nThis closes #310 from athanatos/forupstream/BOOKKEEPER-1104","tree":{"sha":"1a42c6d5fb7ae01810ed10e836f516c4242f6959","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/1a42c6d5fb7ae01810ed10e836f516c4242f6959"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/0ccbc0e9c3e6a82d5e44b8347cc6567e043f253f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/0ccbc0e9c3e6a82d5e44b8347cc6567e043f253f","html_url":"https://github.com/apache/bookkeeper/commit/0ccbc0e9c3e6a82d5e44b8347cc6567e043f253f","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/0ccbc0e9c3e6a82d5e44b8347cc6567e043f253f/comments","author":null,"committer":null,"parents":[{"sha":"7a480d3f8e5ec5c8c3592c332cbcab19b4043dad","url":"https://api.github.com/repos/apache/bookkeeper/commits/7a480d3f8e5ec5c8c3592c332cbcab19b4043dad","html_url":"https://github.com/apache/bookkeeper/commit/7a480d3f8e5ec5c8c3592c332cbcab19b4043dad"}],"stats":{"total":2,"additions":1,"deletions":1},"files":[{"sha":"89404b6b81bae3235171dbbdd5d631b68e8f57fc","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieInitializationTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/0ccbc0e9c3e6a82d5e44b8347cc6567e043f253f/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieInitializationTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/0ccbc0e9c3e6a82d5e44b8347cc6567e043f253f/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieInitializationTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieInitializationTest.java?ref=0ccbc0e9c3e6a82d5e44b8347cc6567e043f253f","patch":"@@ -502,7 +502,7 @@ public void testWithDiskFullAndAbilityToCreateNewIndexFile() throws Exception {\n \n         long usableSpace = tmpDir.getUsableSpace();\n         long totalSpace = tmpDir.getTotalSpace();\n-        conf.setDiskUsageThreshold((1.0f - ((float) usableSpace / (float) totalSpace)) * 0.999f)\n+        conf.setDiskUsageThreshold(0.001f)\n                 .setDiskUsageWarnThreshold(0.0f).setReadOnlyModeEnabled(true).setIsForceGCAllowWhenNoSpace(true)\n                 .setMinUsableSizeForIndexFileCreation(Long.MAX_VALUE);\n         server = new BookieServer(conf);"}]}

