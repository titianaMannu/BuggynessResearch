{"sha":"0d198abad7b41d8326913384967aeb1239ab0528","node_id":"MDY6Q29tbWl0MTU3NTk1NjowZDE5OGFiYWQ3YjQxZDgzMjY5MTMzODQ5NjdhZWIxMjM5YWIwNTI4","commit":{"author":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2012-11-29T14:18:59Z"},"committer":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2012-11-29T14:18:59Z"},"message":"BOOKKEEPER-457: Create a format command for Hedwig to cleanup its metadata. (sijie via ivank)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1415176 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"926769d920879d6014302e11bdd4dcb55682a529","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/926769d920879d6014302e11bdd4dcb55682a529"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/0d198abad7b41d8326913384967aeb1239ab0528","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/0d198abad7b41d8326913384967aeb1239ab0528","html_url":"https://github.com/apache/bookkeeper/commit/0d198abad7b41d8326913384967aeb1239ab0528","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/0d198abad7b41d8326913384967aeb1239ab0528/comments","author":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"committer":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"parents":[{"sha":"9512c57d2c370604e732037c8a3cf262cb60b8a9","url":"https://api.github.com/repos/apache/bookkeeper/commits/9512c57d2c370604e732037c8a3cf262cb60b8a9","html_url":"https://github.com/apache/bookkeeper/commit/9512c57d2c370604e732037c8a3cf262cb60b8a9"}],"stats":{"total":197,"additions":167,"deletions":30},"files":[{"sha":"3499d85cde12068bdfd02834fd46949e0d2bc225","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/0d198abad7b41d8326913384967aeb1239ab0528/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/0d198abad7b41d8326913384967aeb1239ab0528/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=0d198abad7b41d8326913384967aeb1239ab0528","patch":"@@ -234,6 +234,8 @@ Trunk (unreleased changes)\n \n \tBOOKKEEPER-479: Fix apache-rat issues in tree (ivank via fpj)\n \n+        BOOKKEEPER-457: Create a format command for Hedwig to cleanup its metadata. (sijie via ivank)\n+\n       hedwig-client:\n \n         BOOKKEEPER-306: Change C++ client to use gtest for testing (ivank via sijie)"},{"sha":"3e78c6fa63be5836e5c63a18c22414b8293295aa","filename":"hedwig-server/src/main/java/org/apache/hedwig/admin/HedwigAdmin.java","status":"modified","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/apache/bookkeeper/blob/0d198abad7b41d8326913384967aeb1239ab0528/hedwig-server/src/main/java/org/apache/hedwig/admin/HedwigAdmin.java","raw_url":"https://github.com/apache/bookkeeper/raw/0d198abad7b41d8326913384967aeb1239ab0528/hedwig-server/src/main/java/org/apache/hedwig/admin/HedwigAdmin.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/main/java/org/apache/hedwig/admin/HedwigAdmin.java?ref=0d198abad7b41d8326913384967aeb1239ab0528","patch":"@@ -42,6 +42,7 @@\n import org.apache.hedwig.protocol.PubSubProtocol.SubscriptionData;\n import org.apache.hedwig.server.common.ServerConfiguration;\n import org.apache.hedwig.server.meta.MetadataManagerFactory;\n+import org.apache.hedwig.server.meta.FactoryLayout;\n import org.apache.hedwig.server.meta.SubscriptionDataManager;\n import org.apache.hedwig.server.meta.TopicOwnershipManager;\n import org.apache.hedwig.server.meta.TopicPersistenceManager;\n@@ -223,6 +224,15 @@ public ServerConfiguration getHubServerConf() {\n         return serverConf;\n     }\n \n+    /**\n+     * Return metadata manager factory.\n+     *\n+     * @return metadata manager factory instance.\n+     */\n+    public MetadataManagerFactory getMetadataManagerFactory() {\n+        return mmFactory;\n+    }\n+\n     /**\n      * Return bookeeper passwd used in hedwig admin\n      *\n@@ -520,4 +530,20 @@ public void operationFailed(Object ctx, PubSubException pse) {\n \n         return syncObj.value;\n     }\n+\n+    /**\n+     * Format metadata for Hedwig.\n+     */\n+    public void format() throws Exception {\n+        // format metadata first\n+        mmFactory.format(serverConf, zk);\n+        LOG.info(\"Formatted Hedwig metadata successfully.\");\n+        // remove metadata layout\n+        FactoryLayout.deleteLayout(zk, serverConf);\n+        LOG.info(\"Removed old factory layout.\");\n+        // create new metadata manager factory and write new metadata layout\n+        MetadataManagerFactory.createMetadataManagerFactory(serverConf, zk,\n+            serverConf.getMetadataManagerFactoryClass());\n+        LOG.info(\"Created new factory layout.\");\n+    }\n }"},{"sha":"407769bdd71d2ce5114b555416306fe8d7df56d8","filename":"hedwig-server/src/main/java/org/apache/hedwig/admin/console/HedwigCommands.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/apache/bookkeeper/blob/0d198abad7b41d8326913384967aeb1239ab0528/hedwig-server/src/main/java/org/apache/hedwig/admin/console/HedwigCommands.java","raw_url":"https://github.com/apache/bookkeeper/raw/0d198abad7b41d8326913384967aeb1239ab0528/hedwig-server/src/main/java/org/apache/hedwig/admin/console/HedwigCommands.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/main/java/org/apache/hedwig/admin/console/HedwigCommands.java?ref=0d198abad7b41d8326913384967aeb1239ab0528","patch":"@@ -260,6 +260,16 @@\n         \"  hello\",\n     };\n \n+    /* FORMAT: format metadata for Hedwig */\n+    static final String FORMAT = \"format\";\n+    static final String FORMAT_DESC = \"format metadata for Hedwig\";\n+    static final String[] FORMAT_USAGE = new String[] {\n+        \"usage: format [-force]\",\n+        \"\",\n+        \"  [-force] : Format metadata for Hedwig w/o confirmation.\",\n+    };\n+\n+\n     //\n     // List other useful commands\n     //\n@@ -314,6 +324,7 @@\n         CMD_SHOW (SHOW, SHOW_DESC, SHOW_USAGE),\n         CMD_DESCRIBE (DESCRIBE, DESCRIBE_DESC, DESCRIBE_USAGE),\n         CMD_READTOPIC (READTOPIC, READTOPIC_DESC, READTOPIC_USAGE),\n+        CMD_FORMAT (FORMAT, FORMAT_DESC, FORMAT_USAGE),\n         CMD_SET (SET, SET_DESC, SET_USAGE),\n         CMD_HISTORY (HISTORY, HISTORY_DESC, HISTORY_USAGE),\n         CMD_REDO (REDO, REDO_DESC, REDO_USAGE),\n@@ -387,6 +398,7 @@ static synchronized void init() {\n         addCommand(COMMAND.CMD_DESCRIBE);\n \n         addCommand(COMMAND.CMD_READTOPIC);\n+        addCommand(COMMAND.CMD_FORMAT);\n         addCommand(COMMAND.CMD_SET);\n         addCommand(COMMAND.CMD_HISTORY);\n         addCommand(COMMAND.CMD_REDO);"},{"sha":"0c0438fa9a9e22e284b09369a12558ccbcb70610","filename":"hedwig-server/src/main/java/org/apache/hedwig/admin/console/HedwigConsole.java","status":"modified","additions":27,"deletions":1,"changes":28,"blob_url":"https://github.com/apache/bookkeeper/blob/0d198abad7b41d8326913384967aeb1239ab0528/hedwig-server/src/main/java/org/apache/hedwig/admin/console/HedwigConsole.java","raw_url":"https://github.com/apache/bookkeeper/raw/0d198abad7b41d8326913384967aeb1239ab0528/hedwig-server/src/main/java/org/apache/hedwig/admin/console/HedwigConsole.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/main/java/org/apache/hedwig/admin/console/HedwigConsole.java?ref=0d198abad7b41d8326913384967aeb1239ab0528","patch":"@@ -672,6 +672,31 @@ private void printTopicSubscriptions(Map<ByteString, SubscriptionData> states) {\n \n     }\n \n+    class FormatCmd implements MyCommand {\n+\n+        @Override\n+        public boolean runCmd(String[] args) throws Exception {\n+            boolean force = false;\n+            if (args.length >= 2 && \"-force\".equals(args[1])) {\n+                force = true;\n+            }\n+            boolean doFormat = true;\n+            System.out.println(\"You ask to format hedwig metadata stored in \"\n+                               + admin.getMetadataManagerFactory().getClass().getName() + \".\");\n+            if (!force) {\n+                doFormat = continueOrQuit();\n+            }\n+            if (doFormat) {\n+                admin.format();\n+                System.out.println(\"Formatted hedwig metadata successfully.\");\n+            } else {\n+                System.out.println(\"Given up formatting hedwig metadata.\");\n+            }\n+            return true;\n+        }\n+\n+    }\n+\n     protected Map<String, MyCommand> buildMyCommands() {\n         Map<String, MyCommand> cmds =\n                 new HashMap<String, MyCommand>();\n@@ -694,6 +719,7 @@ private void printTopicSubscriptions(Map<ByteString, SubscriptionData> states) {\n         cmds.put(SHOW, new ShowCmd());\n         cmds.put(DESCRIBE, new DescribeCmd());\n         cmds.put(READTOPIC, new ReadTopicCmd());\n+        cmds.put(FORMAT, new FormatCmd());\n \n         return cmds;\n     }\n@@ -879,7 +905,7 @@ protected String getPrompt() {\n     }\n \n     protected boolean continueOrQuit() throws IOException {\n-        System.out.println(\"Press <Return> for more, or Q to cancel ...\");\n+        System.out.println(\"Press <Return> to continue, or Q to cancel ...\");\n         int ch;\n         if (null != console) {\n             ch = console.readCharacter(CONTINUE_OR_QUIT);"},{"sha":"b13a203584cae4abffcdb201518d652ed5ae718f","filename":"hedwig-server/src/main/java/org/apache/hedwig/server/meta/FactoryLayout.java","status":"modified","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/apache/bookkeeper/blob/0d198abad7b41d8326913384967aeb1239ab0528/hedwig-server/src/main/java/org/apache/hedwig/server/meta/FactoryLayout.java","raw_url":"https://github.com/apache/bookkeeper/raw/0d198abad7b41d8326913384967aeb1239ab0528/hedwig-server/src/main/java/org/apache/hedwig/server/meta/FactoryLayout.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/main/java/org/apache/hedwig/server/meta/FactoryLayout.java?ref=0d198abad7b41d8326913384967aeb1239ab0528","patch":"@@ -146,4 +146,21 @@ public static FactoryLayout readLayout(final ZooKeeper zk,\n \n         return new FactoryLayout(meta);\n     }\n+\n+    /**\n+     * Remove the factory layout from ZooKeeper.\n+     *\n+     * @param zk\n+     *          ZooKeeper instance\n+     * @param cfg\n+     *          Server configuration object\n+     * @throws KeeperException\n+     * @throws InterruptedException\n+     */\n+    public static void deleteLayout(ZooKeeper zk, ServerConfiguration cfg)\n+            throws KeeperException, InterruptedException {\n+        String factoryLayoutPath = getFactoryLayoutPath(new StringBuilder(), cfg);\n+        zk.delete(factoryLayoutPath, -1);\n+    }\n+\n }"},{"sha":"b1591aa7c456de29de75c9a1721412615fab83fb","filename":"hedwig-server/src/main/java/org/apache/hedwig/server/meta/MetadataManagerFactory.java","status":"modified","additions":59,"deletions":28,"changes":87,"blob_url":"https://github.com/apache/bookkeeper/blob/0d198abad7b41d8326913384967aeb1239ab0528/hedwig-server/src/main/java/org/apache/hedwig/server/meta/MetadataManagerFactory.java","raw_url":"https://github.com/apache/bookkeeper/raw/0d198abad7b41d8326913384967aeb1239ab0528/hedwig-server/src/main/java/org/apache/hedwig/server/meta/MetadataManagerFactory.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/main/java/org/apache/hedwig/server/meta/MetadataManagerFactory.java?ref=0d198abad7b41d8326913384967aeb1239ab0528","patch":"@@ -99,6 +99,16 @@ protected abstract MetadataManagerFactory initialize(\n      */\n     public abstract TopicOwnershipManager newTopicOwnershipManager();\n \n+    /**\n+     * Format the metadata for Hedwig.\n+     *\n+     * @param cfg\n+     *          Configuration instance\n+     * @param zk\n+     *          ZooKeeper instance\n+     */\n+    public abstract void format(ServerConfiguration cfg, ZooKeeper zk) throws IOException;\n+\n     /**\n      * Create new Metadata Manager Factory.\n      *\n@@ -118,38 +128,11 @@ public static MetadataManagerFactory newMetadataManagerFactory(\n         } catch (Exception e) {\n             throw new IOException(\"Failed to get metadata manager factory class from configuration : \", e);\n         }\n-\n-        MetadataManagerFactory managerFactory;\n-\n         // check that the configured manager is\n         // compatible with the existing layout\n         FactoryLayout layout = FactoryLayout.readLayout(zk, conf);\n         if (layout == null) { // no existing layout\n-            // use default manager if no one provided\n-            if (factoryClass == null) {\n-                factoryClass = ZkMetadataManagerFactory.class;\n-            }\n-            try {\n-                managerFactory = ReflectionUtils.newInstance(factoryClass);\n-            } catch (Throwable t) {\n-                throw new IOException(\"Fail to instantiate metadata manager factory : \" + factoryClass, t);\n-            }\n-            ManagerMeta managerMeta = ManagerMeta.newBuilder()\n-                                      .setManagerImpl(factoryClass.getName())\n-                                      .setManagerVersion(managerFactory.getCurrentVersion())\n-                                      .build();\n-            layout = new FactoryLayout(managerMeta);\n-            try {\n-                layout.store(zk, conf);\n-            } catch (KeeperException.NodeExistsException nee) {\n-                FactoryLayout layout2 = FactoryLayout.readLayout(zk, conf);\n-                if (!layout2.equals(layout)) {\n-                    throw new IOException(\"Contention writing to layout to zookeeper, \"\n-                            + \" other layout \" + layout2 + \" is incompatible with our \"\n-                            + \"layout \" + layout);\n-                }\n-            }\n-            return managerFactory.initialize(conf, zk, layout.getManagerMeta().getManagerVersion());\n+            return createMetadataManagerFactory(conf, zk, factoryClass);\n         }\n         LOG.debug(\"read meta layout {}\", layout);\n \n@@ -172,11 +155,59 @@ public static MetadataManagerFactory newMetadataManagerFactory(\n             }\n         }\n         // instantiate the metadata manager factory\n+        MetadataManagerFactory managerFactory;\n         try {\n             managerFactory = ReflectionUtils.newInstance(factoryClass);\n         } catch (Throwable t) {\n             throw new IOException(\"Failed to instantiate metadata manager factory : \" + factoryClass, t);\n         }\n         return managerFactory.initialize(conf, zk, layout.getManagerMeta().getManagerVersion());\n     }\n+\n+    /**\n+     * Create metadata manager factory and write factory layout to ZooKeeper.\n+     *\n+     * @param cfg\n+     *          Server Configuration object.\n+     * @param zk\n+     *          ZooKeeper instance.\n+     * @param factoryClass\n+     *          Metadata Manager Factory Class.\n+     * @return metadata manager factory instance.\n+     * @throws IOException\n+     * @throws KeeperException\n+     * @throws InterruptedException\n+     */\n+    public static MetadataManagerFactory createMetadataManagerFactory(\n+            ServerConfiguration cfg, ZooKeeper zk,\n+            Class<? extends MetadataManagerFactory> factoryClass)\n+            throws IOException, KeeperException, InterruptedException {\n+        // use default manager if no one provided\n+        if (factoryClass == null) {\n+            factoryClass = ZkMetadataManagerFactory.class;\n+        }\n+\n+        MetadataManagerFactory managerFactory;\n+        try {\n+            managerFactory = ReflectionUtils.newInstance(factoryClass);\n+        } catch (Throwable t) {\n+            throw new IOException(\"Fail to instantiate metadata manager factory : \" + factoryClass, t);\n+        }\n+        ManagerMeta managerMeta = ManagerMeta.newBuilder()\n+                                  .setManagerImpl(factoryClass.getName())\n+                                  .setManagerVersion(managerFactory.getCurrentVersion())\n+                                  .build();\n+        FactoryLayout layout = new FactoryLayout(managerMeta);\n+        try {\n+            layout.store(zk, cfg);\n+        } catch (KeeperException.NodeExistsException nee) {\n+            FactoryLayout layout2 = FactoryLayout.readLayout(zk, cfg);\n+            if (!layout2.equals(layout)) {\n+                throw new IOException(\"Contention writing to layout to zookeeper, \"\n+                        + \" other layout \" + layout2 + \" is incompatible with our \"\n+                        + \"layout \" + layout);\n+            }\n+        }\n+        return managerFactory.initialize(cfg, zk, layout.getManagerMeta().getManagerVersion());\n+    }\n }"},{"sha":"ac48e024623ce4c4a0ade74d465cfd1a3960c6fe","filename":"hedwig-server/src/main/java/org/apache/hedwig/server/meta/ZkMetadataManagerFactory.java","status":"modified","additions":15,"deletions":1,"changes":16,"blob_url":"https://github.com/apache/bookkeeper/blob/0d198abad7b41d8326913384967aeb1239ab0528/hedwig-server/src/main/java/org/apache/hedwig/server/meta/ZkMetadataManagerFactory.java","raw_url":"https://github.com/apache/bookkeeper/raw/0d198abad7b41d8326913384967aeb1239ab0528/hedwig-server/src/main/java/org/apache/hedwig/server/meta/ZkMetadataManagerFactory.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/main/java/org/apache/hedwig/server/meta/ZkMetadataManagerFactory.java?ref=0d198abad7b41d8326913384967aeb1239ab0528","patch":"@@ -29,8 +29,9 @@\n import org.slf4j.LoggerFactory;\n import org.apache.zookeeper.CreateMode;\n import org.apache.zookeeper.KeeperException;\n-import org.apache.zookeeper.ZooKeeper;\n import org.apache.zookeeper.KeeperException.Code;\n+import org.apache.zookeeper.ZKUtil;\n+import org.apache.zookeeper.ZooKeeper;\n import org.apache.zookeeper.ZooDefs.Ids;\n import org.apache.zookeeper.data.Stat;\n import com.google.protobuf.ByteString;\n@@ -824,4 +825,17 @@ public void safeProcessResult(int rc, String path, Object ctx) {\n             }, ctx);\n         }\n     }\n+\n+    @Override\n+    public void format(ServerConfiguration cfg, ZooKeeper zk) throws IOException {\n+        try {\n+            ZKUtil.deleteRecursive(zk, cfg.getZkTopicsPrefix(new StringBuilder()).toString());\n+        } catch (KeeperException.NoNodeException e) {\n+            logger.debug(\"Hedwig root node doesn't exist in zookeeper to delete\");\n+        } catch (KeeperException ke) {\n+            throw new IOException(ke);\n+        } catch (InterruptedException ie) {\n+            throw new IOException(ie);\n+        }\n+    }\n }"},{"sha":"5b06b398cf89aa783f137cdd957460ce7574c916","filename":"hedwig-server/src/test/java/org/apache/hedwig/server/meta/TestMetadataManagerFactory.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/apache/bookkeeper/blob/0d198abad7b41d8326913384967aeb1239ab0528/hedwig-server/src/test/java/org/apache/hedwig/server/meta/TestMetadataManagerFactory.java","raw_url":"https://github.com/apache/bookkeeper/raw/0d198abad7b41d8326913384967aeb1239ab0528/hedwig-server/src/test/java/org/apache/hedwig/server/meta/TestMetadataManagerFactory.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/test/java/org/apache/hedwig/server/meta/TestMetadataManagerFactory.java?ref=0d198abad7b41d8326913384967aeb1239ab0528","patch":"@@ -96,6 +96,10 @@ public SubscriptionDataManager newSubscriptionDataManager() {\n         public TopicOwnershipManager newTopicOwnershipManager() {\n             return null;\n         }\n+\n+        public void format(ServerConfiguration cfg, ZooKeeper zk) throws IOException {\n+            // do nothing\n+        }\n     }\n \n     private void writeFactoryLayout(ServerConfiguration conf,"},{"sha":"d582fb6602c75fea7349839c4e535a28d9529c6c","filename":"hedwig-server/src/test/java/org/apache/hedwig/server/persistence/TestBookKeeperPersistenceManager.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/apache/bookkeeper/blob/0d198abad7b41d8326913384967aeb1239ab0528/hedwig-server/src/test/java/org/apache/hedwig/server/persistence/TestBookKeeperPersistenceManager.java","raw_url":"https://github.com/apache/bookkeeper/raw/0d198abad7b41d8326913384967aeb1239ab0528/hedwig-server/src/test/java/org/apache/hedwig/server/persistence/TestBookKeeperPersistenceManager.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/test/java/org/apache/hedwig/server/persistence/TestBookKeeperPersistenceManager.java?ref=0d198abad7b41d8326913384967aeb1239ab0528","patch":"@@ -167,6 +167,11 @@ public SubscriptionDataManager newSubscriptionDataManager() {\n         public TopicOwnershipManager newTopicOwnershipManager() {\n             return factory.newTopicOwnershipManager();\n         }\n+\n+        @Override\n+        public void format(ServerConfiguration cfg, ZooKeeper zk) throws IOException {\n+            factory.format(cfg, zk);\n+        }\n     }\n \n     public TestBookKeeperPersistenceManager(boolean removeStartSeqId) {"}]}

