{"sha":"110d36673bcc393853aaab4bb423d785daa947c7","node_id":"MDY6Q29tbWl0MTU3NTk1NjoxMTBkMzY2NzNiY2MzOTM4NTNhYWFiNGJiNDIzZDc4NWRhYTk0N2M3","commit":{"author":{"name":"Flavio Paiva Junqueira","email":"fpj@apache.org","date":"2012-02-24T17:10:20Z"},"committer":{"name":"Flavio Paiva Junqueira","email":"fpj@apache.org","date":"2012-02-24T17:10:20Z"},"message":"BOOKKEEPER-172: Upgrade framework for filesystem layouts (ivank via fpj)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1293342 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"b8ed3e41a6d2189eda49f9b2edf7baf0d14c4c57","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/b8ed3e41a6d2189eda49f9b2edf7baf0d14c4c57"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/110d36673bcc393853aaab4bb423d785daa947c7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/110d36673bcc393853aaab4bb423d785daa947c7","html_url":"https://github.com/apache/bookkeeper/commit/110d36673bcc393853aaab4bb423d785daa947c7","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/110d36673bcc393853aaab4bb423d785daa947c7/comments","author":{"login":"fpj","id":572920,"node_id":"MDQ6VXNlcjU3MjkyMA==","avatar_url":"https://avatars.githubusercontent.com/u/572920?v=4","gravatar_id":"","url":"https://api.github.com/users/fpj","html_url":"https://github.com/fpj","followers_url":"https://api.github.com/users/fpj/followers","following_url":"https://api.github.com/users/fpj/following{/other_user}","gists_url":"https://api.github.com/users/fpj/gists{/gist_id}","starred_url":"https://api.github.com/users/fpj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fpj/subscriptions","organizations_url":"https://api.github.com/users/fpj/orgs","repos_url":"https://api.github.com/users/fpj/repos","events_url":"https://api.github.com/users/fpj/events{/privacy}","received_events_url":"https://api.github.com/users/fpj/received_events","type":"User","site_admin":false},"committer":{"login":"fpj","id":572920,"node_id":"MDQ6VXNlcjU3MjkyMA==","avatar_url":"https://avatars.githubusercontent.com/u/572920?v=4","gravatar_id":"","url":"https://api.github.com/users/fpj","html_url":"https://github.com/fpj","followers_url":"https://api.github.com/users/fpj/followers","following_url":"https://api.github.com/users/fpj/following{/other_user}","gists_url":"https://api.github.com/users/fpj/gists{/gist_id}","starred_url":"https://api.github.com/users/fpj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fpj/subscriptions","organizations_url":"https://api.github.com/users/fpj/orgs","repos_url":"https://api.github.com/users/fpj/repos","events_url":"https://api.github.com/users/fpj/events{/privacy}","received_events_url":"https://api.github.com/users/fpj/received_events","type":"User","site_admin":false},"parents":[{"sha":"014bcd501c14141facd0e3eb4bb488ccba3a2b7d","url":"https://api.github.com/repos/apache/bookkeeper/commits/014bcd501c14141facd0e3eb4bb488ccba3a2b7d","html_url":"https://github.com/apache/bookkeeper/commit/014bcd501c14141facd0e3eb4bb488ccba3a2b7d"}],"stats":{"total":306,"additions":301,"deletions":5},"files":[{"sha":"5b5dd494972084b241ab8a9631b7cc9a219b7eb3","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/110d36673bcc393853aaab4bb423d785daa947c7/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/110d36673bcc393853aaab4bb423d785daa947c7/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=110d36673bcc393853aaab4bb423d785daa947c7","patch":"@@ -63,6 +63,8 @@ Trunk (unreleased changes)\n \n         BOOKKEEPER-137: Do not create Ledger index files until absolutely necessary. (ivank)\n \n+\tBOOKKEEPER-172: Upgrade framework for filesystem layouts (ivank via fpj)\n+\n       hedwig-server/\n \n         BOOKKEEPER-77: Add a console client for hedwig (Sijie Guo via ivank)"},{"sha":"95bd396096fb60a01cb05f1237264644b0b2c44a","filename":"bookkeeper-server/bin/bookkeeper","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/apache/bookkeeper/blob/110d36673bcc393853aaab4bb423d785daa947c7/bookkeeper-server/bin/bookkeeper","raw_url":"https://github.com/apache/bookkeeper/raw/110d36673bcc393853aaab4bb423d785daa947c7/bookkeeper-server/bin/bookkeeper","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/bin/bookkeeper?ref=110d36673bcc393853aaab4bb423d785daa947c7","patch":"@@ -56,6 +56,7 @@ Usage: bookkeeper <command>\n where command is one of:\n     bookie              Run a bookie server\n     localbookie <n>     Run a test ensemble of <n> bookies locally\n+    upgrade             Upgrade bookie filesystem\n     help                This help message\n \n or command is the full name of a class with a defined main() method.\n@@ -126,6 +127,8 @@ elif [ $COMMAND == \"localbookie\" ]; then\n     NUMBER=$1\n     shift\n     exec java $OPTS org.apache.bookkeeper.util.LocalBookKeeper $NUMBER $BOOKIE_CONF $@\n+elif [ $COMMAND == \"upgrade\" ]; then\n+    exec java $OPTS org.apache.bookkeeper.bookie.FileSystemUpgrade --conf $BOOKIE_CONF $@\n elif [ $COMMAND == \"help\" ]; then\n     bookkeeper_help;\n else"},{"sha":"d1427b70faad0e02334d299454a0f935261ac9d2","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileSystemUpgrade.java","status":"added","additions":160,"deletions":0,"changes":160,"blob_url":"https://github.com/apache/bookkeeper/blob/110d36673bcc393853aaab4bb423d785daa947c7/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileSystemUpgrade.java","raw_url":"https://github.com/apache/bookkeeper/raw/110d36673bcc393853aaab4bb423d785daa947c7/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileSystemUpgrade.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileSystemUpgrade.java?ref=110d36673bcc393853aaab4bb423d785daa947c7","patch":"@@ -0,0 +1,160 @@\n+/*\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ *\n+ */\n+\n+package org.apache.bookkeeper.bookie;\n+\n+import org.apache.commons.cli.BasicParser;\n+import org.apache.commons.cli.Options;\n+import org.apache.commons.cli.CommandLine;\n+import org.apache.commons.cli.HelpFormatter;\n+import org.apache.commons.cli.ParseException;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.File;\n+import java.io.FilenameFilter;\n+import java.io.IOException;\n+import java.util.Scanner;\n+import java.util.NoSuchElementException;\n+\n+import java.net.MalformedURLException;\n+import org.apache.bookkeeper.conf.ServerConfiguration;\n+import org.apache.commons.configuration.ConfigurationException;\n+\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+/**\n+ * Application for upgrading the bookkeeper filesystem\n+ * between versions\n+ */\n+public class FileSystemUpgrade {\n+    static Logger LOG = LoggerFactory.getLogger(FileSystemUpgrade.class);\n+\n+    private int detectPreviousVersion(File directory) throws IOException {\n+        final AtomicBoolean oldDataExists = new AtomicBoolean(false);\n+        directory.list(new FilenameFilter() {\n+                public boolean accept(File dir, String name) {\n+                    if (name.endsWith(\".txn\") || name.endsWith(\".idx\") || name.endsWith(\".log\")\n+                        || name.equals(Bookie.VERSION_FILENAME)) {\n+                        oldDataExists.set(true);\n+                    }\n+                    return true;\n+                }\n+            });\n+        if (!oldDataExists.get()) { // no old data, so we're ok\n+            return Bookie.CURRENT_DIRECTORY_LAYOUT_VERSION;\n+        }\n+        File v2versionFile = new File(directory, Bookie.VERSION_FILENAME);\n+        if (!v2versionFile.exists()) {\n+            return 1;\n+        }\n+        Scanner s = new Scanner(v2versionFile);\n+        try {\n+            return s.nextInt();\n+        } catch (NoSuchElementException nse) {\n+            LOG.error(\"Couldn't parse version file \" + v2versionFile , nse);\n+            throw new IOException(\"Couldn't parse version file\", nse);\n+        } catch (IllegalStateException ise) {\n+            LOG.error(\"Error reading file \" + v2versionFile, ise);\n+            throw new IOException(\"Error reading version file\", ise);\n+        } finally {\n+            s.close();\n+        }\n+    }\n+\n+    public static void upgrade(ServerConfiguration conf) {\n+        LOG.info(\"Upgrading...\");\n+        // noop at the moment\n+        LOG.info(\"Done\");\n+    }\n+\n+    public static void finalizeUpgrade(ServerConfiguration conf) {\n+        LOG.info(\"Finalizing upgrade...\");\n+        // noop at the moment\n+        LOG.info(\"Done\");\n+    }\n+\n+    public static void rollback(ServerConfiguration conf) {\n+        LOG.info(\"Rolling back upgrade...\");\n+        // noop at the moment\n+        LOG.info(\"Done\");\n+    }\n+\n+    private static void printHelp(Options opts) {\n+        HelpFormatter hf = new HelpFormatter();\n+        hf.printHelp(\"FileSystemUpgrade [options]\", opts);\n+    }\n+\n+    public static void main(String[] args) throws Exception {\n+        org.apache.log4j.Logger root = org.apache.log4j.Logger.getRootLogger();\n+        root.addAppender(new org.apache.log4j.ConsoleAppender(\n+                                 new org.apache.log4j.PatternLayout(\"%-5p [%t]: %m%n\")));\n+        root.setLevel(org.apache.log4j.Level.ERROR);\n+        root.getLogger(FileSystemUpgrade.class).setLevel(org.apache.log4j.Level.INFO);\n+\n+        final Options opts = new Options();\n+        opts.addOption(\"c\", \"conf\", true, \"Configuration for Bookie\");\n+        opts.addOption(\"u\", \"upgrade\", false, \"Upgrade bookie directories\");\n+        opts.addOption(\"f\", \"finalize\", false, \"Finalize upgrade\");\n+        opts.addOption(\"r\", \"rollback\", false, \"Rollback upgrade\");\n+        opts.addOption(\"h\", \"help\", false, \"Print help message\");\n+\n+        BasicParser parser = new BasicParser();\n+        CommandLine cmdLine = parser.parse(opts, args);\n+        if (cmdLine.hasOption(\"h\")) {\n+            printHelp(opts);\n+            return;\n+        }\n+\n+        if (!cmdLine.hasOption(\"c\")) {\n+            String err = \"Cannot upgrade without configuration\";\n+            LOG.error(err);\n+            printHelp(opts);\n+            throw new IllegalArgumentException(err);\n+        }\n+\n+        String confFile = cmdLine.getOptionValue(\"c\");\n+        ServerConfiguration conf = new ServerConfiguration();\n+        try {\n+            conf.loadConf(new File(confFile).toURI().toURL());\n+        } catch (MalformedURLException mue) {\n+            LOG.error(\"Could not open configuration file \" + confFile, mue);\n+            throw new IllegalArgumentException();\n+        } catch (ConfigurationException ce) {\n+            LOG.error(\"Invalid configuration file \" + confFile, ce);\n+            throw new IllegalArgumentException();\n+        }\n+\n+        if (cmdLine.hasOption(\"u\")) {\n+            upgrade(conf);\n+        } else if (cmdLine.hasOption(\"r\")) {\n+            rollback(conf);\n+        } else if (cmdLine.hasOption(\"f\")) {\n+            finalizeUpgrade(conf);\n+        } else {\n+            String err = \"Must specify -upgrade, -finalize or -rollback\";\n+            LOG.error(err);\n+            printHelp(opts);\n+            throw new IllegalArgumentException(err);\n+        }\n+    }\n+}\n\\ No newline at end of file"},{"sha":"eb08479a93ab22dbb8bfa49d6559ef31f781975a","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/UpgradeTest.java","status":"added","additions":115,"deletions":0,"changes":115,"blob_url":"https://github.com/apache/bookkeeper/blob/110d36673bcc393853aaab4bb423d785daa947c7/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/UpgradeTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/110d36673bcc393853aaab4bb423d785daa947c7/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/UpgradeTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/UpgradeTest.java?ref=110d36673bcc393853aaab4bb423d785daa947c7","patch":"@@ -0,0 +1,115 @@\n+/*\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ *\n+ */\n+\n+package org.apache.bookkeeper.bookie;\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+import java.io.FileOutputStream;\n+import java.io.OutputStreamWriter;\n+import java.io.BufferedWriter;\n+import java.io.PrintStream;\n+\n+\n+import org.junit.Test;\n+import static org.junit.Assert.*;\n+\n+import org.apache.bookkeeper.conf.ServerConfiguration;\n+\n+public class UpgradeTest {\n+    static String newV1JournalDirectory() throws IOException {\n+        File d = File.createTempFile(\"bookie\", \"tmpdir\");\n+        d.delete();\n+        d.mkdirs();\n+        new File(d, Long.toHexString(System.currentTimeMillis()) + \".txn\").createNewFile();\n+        return d.getPath();\n+    }\n+\n+    static String newV1LedgerDirectory() throws IOException {\n+        File d = File.createTempFile(\"bookie\", \"tmpdir\");\n+        d.delete();\n+        d.mkdirs();\n+        new File(d, Long.toHexString(System.currentTimeMillis()) + \".log\").createNewFile();\n+        return d.getPath();\n+    }\n+\n+    static void createVersion2File(String dir) throws IOException {\n+        File versionFile = new File(dir, \"VERSION\");\n+\n+        FileOutputStream fos = new FileOutputStream(versionFile);\n+        BufferedWriter bw = null;\n+        try {\n+            bw = new BufferedWriter(new OutputStreamWriter(fos));\n+            bw.write(String.valueOf(2));\n+        } finally {\n+            if (bw != null) {\n+                bw.close();\n+            }\n+            fos.close();\n+        }\n+    }\n+\n+    static String newV2JournalDirectory() throws IOException {\n+        String d = newV1JournalDirectory();\n+        createVersion2File(d);\n+        return d;\n+    }\n+\n+    static String newV2LedgerDirectory() throws IOException {\n+        String d = newV1LedgerDirectory();\n+        createVersion2File(d);\n+        return d;\n+    }\n+\n+    @Test\n+    public void testCommandLine() throws Exception {\n+        PrintStream origerr = System.err;\n+        PrintStream origout = System.out;\n+\n+        File output = File.createTempFile(\"bookie\", \"tmpout\");\n+        System.setOut(new PrintStream(output));\n+        System.setErr(new PrintStream(output));\n+        try {\n+            FileSystemUpgrade.main(new String[] { \"-h\" });\n+            try {\n+                // test without conf\n+                FileSystemUpgrade.main(new String[] { \"-u\" });\n+                fail(\"Should have failed\");\n+            } catch (IllegalArgumentException iae) {\n+                assertTrue(\"Wrong exception \" + iae.getMessage(),\n+                           iae.getMessage().contains(\"without configuration\"));\n+            }\n+            File f = File.createTempFile(\"bookie\", \"tmpconf\");\n+            try {\n+                // test without upgrade op\n+                FileSystemUpgrade.main(new String[] { \"--conf\", f.getPath() });\n+                fail(\"Should have failed\");\n+            } catch (IllegalArgumentException iae) {\n+                assertTrue(\"Wrong exception \" + iae.getMessage(),\n+                           iae.getMessage().contains(\"Must specify -upgrade\"));\n+            }\n+        } finally {\n+            System.setOut(origout);\n+            System.setErr(origerr);\n+        }\n+    }\n+}\n\\ No newline at end of file"},{"sha":"f70cbc072c3a0ebb50e01a873da45fffb3726b52","filename":"doc/bookkeeperConfig.textile","status":"modified","additions":21,"deletions":5,"changes":26,"blob_url":"https://github.com/apache/bookkeeper/blob/110d36673bcc393853aaab4bb423d785daa947c7/doc/bookkeeperConfig.textile","raw_url":"https://github.com/apache/bookkeeper/raw/110d36673bcc393853aaab4bb423d785daa947c7/doc/bookkeeperConfig.textile","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/doc/bookkeeperConfig.textile?ref=110d36673bcc393853aaab4bb423d785daa947c7","patch":"@@ -14,7 +14,7 @@ Notice: Licensed under the Apache License, Version 2.0 (the \"License\");\n \n h1. Abstract\n \n-This document contains information about deploying, administering and mantaining BookKeeper. It also discusses best practices and common problems. \n+This document contains information about deploying, administering and maintaining BookKeeper. It also discusses best practices and common problems. \n \n h1. Running a BookKeeper instance\n \n@@ -35,13 +35,29 @@ p. To run a bookie, we execute the following command:\n p. The configuration parameters can be set in bookkeeper-server/conf/bk_server.conf. \n \n The important parameters are:\n- * @bookiePort@, Port number that the bookie listens on; \n- * @zkServers@, Comma separated list of ZooKeeper servers with a hostname:port format; \n- * @journalDir@, Path for Log Device (stores bookie write-ahead log); \n- * @ledgerDir@, Path for Ledger Device (stores ledger entries); \n+\n+* @bookiePort@, Port number that the bookie listens on; \n+* @zkServers@, Comma separated list of ZooKeeper servers with a hostname:port format; \n+* @journalDir@, Path for Log Device (stores bookie write-ahead log); \n+* @ledgerDir@, Path for Ledger Device (stores ledger entries); \n \n p. Ideally, @journalDir@ and @ledgerDir@ are each in a different device. See \"BookKeeper Configuration Parameters\":./bookkeeperConfigParams.html for a full list of configuration parameters.\n \n+h3. Upgrading\n+\n+From time to time, we may make changes to the filesystem layout of the bookie, which are incompatible with previous versions of bookkeeper and require that directories used with previous versions are upgraded. If you upgrade your bookkeeper software, and an upgrade is required, then the bookie will fail to start and print an error to the effect that an upgrade is required.\n+\n+BookKeeper provides a utility for doing the upgrade.\n+@bookkeeper-server/bin/bookkeeper upgrade@\n+\n+The upgrade application takes 3 possible switches, @--upgrade@, @--rollback@ or @--finalize@. A normal upgrade process looks like.\n+\n+# @bookkeeper-server/bin/bookkeeper upgrade --upgrade@\n+# @bookkeeper-server/bin/bookkeeper bookie@\n+# Check everything is working. Kill bookie, ^C\n+# If everything is ok, @bookkeeper-server/bin/bookkeeper upgrade --finalize@\n+# Start bookie again @bookkeeper-server/bin/bookkeeper bookie@\n+# If something is amiss, you can roll back the upgrade @bookkeeper-server/bin/bookkeeper upgrade --rollback@\n \n h3. Logging\n "}]}

