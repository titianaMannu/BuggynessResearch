{"sha":"132849503c0547d4d89d50cd14f700302b391ee2","node_id":"MDY6Q29tbWl0MTU3NTk1NjoxMzI4NDk1MDNjMDU0N2Q0ZDg5ZDUwY2QxNGY3MDAzMDJiMzkxZWUy","commit":{"author":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2012-05-17T14:05:02Z"},"committer":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2012-05-17T14:05:02Z"},"message":"BOOKKEEPER-224: Fix findbugs in bookkeeper-server component [missing changes] (ivank)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1339607 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"aa56185d3a6e4757a9bbacdc2feb109af930035d","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/aa56185d3a6e4757a9bbacdc2feb109af930035d"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/132849503c0547d4d89d50cd14f700302b391ee2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/132849503c0547d4d89d50cd14f700302b391ee2","html_url":"https://github.com/apache/bookkeeper/commit/132849503c0547d4d89d50cd14f700302b391ee2","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/132849503c0547d4d89d50cd14f700302b391ee2/comments","author":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"committer":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"parents":[{"sha":"ba0ab04216f94411bae27a52670c9c8b4da03476","url":"https://api.github.com/repos/apache/bookkeeper/commits/ba0ab04216f94411bae27a52670c9c8b4da03476","html_url":"https://github.com/apache/bookkeeper/commit/ba0ab04216f94411bae27a52670c9c8b4da03476"}],"stats":{"total":52,"additions":30,"deletions":22},"files":[{"sha":"56dc6e6dec09e6b4d19303159af01a5566d43792","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/NIOServerFactory.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/apache/bookkeeper/blob/132849503c0547d4d89d50cd14f700302b391ee2/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/NIOServerFactory.java","raw_url":"https://github.com/apache/bookkeeper/raw/132849503c0547d4d89d50cd14f700302b391ee2/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/NIOServerFactory.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/NIOServerFactory.java?ref=132849503c0547d4d89d50cd14f700302b391ee2","patch":"@@ -485,9 +485,8 @@ public InetSocketAddress getRemoteAddress() {\n         }\n \n         private class CnxnStats {\n-            int packetsSent = 0;\n-\n-            int packetsReceived = 0;\n+            long packetsSent = 0;\n+            long packetsReceived = 0;\n \n             /**\n              * The number of requests that have been submitted but not yet"},{"sha":"63d6a8dcbd2bd49b18905ce246d9aed8915612a3","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java","status":"modified","additions":28,"deletions":19,"changes":47,"blob_url":"https://github.com/apache/bookkeeper/blob/132849503c0547d4d89d50cd14f700302b391ee2/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java","raw_url":"https://github.com/apache/bookkeeper/raw/132849503c0547d4d89d50cd14f700302b391ee2/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java?ref=132849503c0547d4d89d50cd14f700302b391ee2","patch":"@@ -90,13 +90,13 @@\n      * because they are always updated under a lock\n      */\n     Queue<GenericCallback<Void>> pendingOps = new ArrayDeque<GenericCallback<Void>>();\n-    Channel channel = null;\n+    volatile Channel channel = null;\n \n     private enum ConnectionState {\n         DISCONNECTED, CONNECTING, CONNECTED\n             };\n \n-    private ConnectionState state;\n+    private volatile ConnectionState state;\n     private final ClientConfiguration conf;\n \n     public PerChannelBookieClient(OrderedSafeExecutor executor, ClientSocketChannelFactory channelFactory,\n@@ -174,29 +174,38 @@ public void operationComplete(ChannelFuture future) throws Exception {\n     void connectIfNeededAndDoOp(GenericCallback<Void> op) {\n         boolean doOpNow;\n \n-        synchronized (this) {\n-            if (channel != null && state == ConnectionState.CONNECTED) {\n-                doOpNow = true;\n-            } else {\n-                // if reached here, channel is either null (first connection\n-                // attempt),\n-                // or the channel is disconnected\n-                doOpNow = false;\n-\n-                // connection attempt is still in progress, queue up this\n-                // op. Op will be executed when connection attempt either\n-                // fails\n-                // or\n-                // succeeds\n-                pendingOps.add(op);\n-\n-                connect();\n+        // common case without lock first\n+        if (channel != null && state == ConnectionState.CONNECTED) {\n+            doOpNow = true;\n+        } else {\n+\n+            synchronized (this) {\n+                // check again under lock\n+                if (channel != null && state == ConnectionState.CONNECTED) {\n+                    doOpNow = true;\n+                } else {\n+\n+                    // if reached here, channel is either null (first connection\n+                    // attempt),\n+                    // or the channel is disconnected\n+                    doOpNow = false;\n+\n+                    // connection attempt is still in progress, queue up this\n+                    // op. Op will be executed when connection attempt either\n+                    // fails\n+                    // or\n+                    // succeeds\n+                    pendingOps.add(op);\n+\n+                    connect();\n+                }\n             }\n         }\n \n         if (doOpNow) {\n             op.operationComplete(BKException.Code.OK, null);\n         }\n+\n     }\n \n     /**"}]}

