{"sha":"16978d671b8d6d9e563edb3a6119a4be574245af","node_id":"MDY6Q29tbWl0MTU3NTk1NjoxNjk3OGQ2NzFiOGQ2ZDllNTYzZWRiM2E2MTE5YTRiZTU3NDI0NWFm","commit":{"author":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2013-10-14T14:43:24Z"},"committer":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2013-10-14T14:43:24Z"},"message":"BOOKKEEPER-605: Use static Logger objects everywhere for bookkeeper (sijie via ivank)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1531920 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"d1d906c398d6f70adb141ed4941583146a7bfbd2","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/d1d906c398d6f70adb141ed4941583146a7bfbd2"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/16978d671b8d6d9e563edb3a6119a4be574245af","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/16978d671b8d6d9e563edb3a6119a4be574245af","html_url":"https://github.com/apache/bookkeeper/commit/16978d671b8d6d9e563edb3a6119a4be574245af","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/16978d671b8d6d9e563edb3a6119a4be574245af/comments","author":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"committer":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"parents":[{"sha":"dc1f36e982f3fc2955141c8e0de5e04c6ac06053","url":"https://api.github.com/repos/apache/bookkeeper/commits/dc1f36e982f3fc2955141c8e0de5e04c6ac06053","html_url":"https://github.com/apache/bookkeeper/commit/dc1f36e982f3fc2955141c8e0de5e04c6ac06053"}],"stats":{"total":154,"additions":78,"deletions":76},"files":[{"sha":"b2ab1b0833c9c5e98dbf4042a3ebf1b4fa0d6235","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -48,6 +48,8 @@ Trunk (unreleased changes)\n \n       BOOKKEEPER-686: Bookie startup will fail if one of the configured ledgerDir is full and the same is used for replaying the journal (Rakesh via sijie)\n \n+      BOOKKEEPER-605: Use static Logger objects everywhere for bookkeeper (sijie via ivank)\n+\n       bookkeeper-server:\n \n         BOOKKEEPER-567: ReadOnlyBookieTest hangs on shutdown (sijie via ivank)"},{"sha":"cd8f01d49fb30d69db50e6cb8bd2b4db6a676832","filename":"bookkeeper-benchmark/src/main/java/org/apache/bookkeeper/benchmark/BenchBookie.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-benchmark/src/main/java/org/apache/bookkeeper/benchmark/BenchBookie.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-benchmark/src/main/java/org/apache/bookkeeper/benchmark/BenchBookie.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-benchmark/src/main/java/org/apache/bookkeeper/benchmark/BenchBookie.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -51,7 +51,7 @@\n import org.slf4j.LoggerFactory;\n \n public class BenchBookie {\n-    static Logger LOG = LoggerFactory.getLogger(BenchBookie.class);\n+    static final Logger LOG = LoggerFactory.getLogger(BenchBookie.class);\n \n     static class LatencyCallback implements WriteCallback {\n         boolean complete;"},{"sha":"eeefdda6684dd67d6f9f6b855070c2ee6f4a42b5","filename":"bookkeeper-benchmark/src/main/java/org/apache/bookkeeper/benchmark/BenchReadThroughputLatency.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-benchmark/src/main/java/org/apache/bookkeeper/benchmark/BenchReadThroughputLatency.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-benchmark/src/main/java/org/apache/bookkeeper/benchmark/BenchReadThroughputLatency.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-benchmark/src/main/java/org/apache/bookkeeper/benchmark/BenchReadThroughputLatency.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -56,7 +56,7 @@\n import org.slf4j.LoggerFactory;\n \n public class BenchReadThroughputLatency {\n-    static Logger LOG = LoggerFactory.getLogger(BenchReadThroughputLatency.class);\n+    static final Logger LOG = LoggerFactory.getLogger(BenchReadThroughputLatency.class);\n \n     private static final Pattern LEDGER_PATTERN = Pattern.compile(\"L([0-9]+)$\");\n "},{"sha":"6f540bdfe693fadbd54418ebe2019e50f08a3252","filename":"bookkeeper-benchmark/src/main/java/org/apache/bookkeeper/benchmark/BenchThroughputLatency.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-benchmark/src/main/java/org/apache/bookkeeper/benchmark/BenchThroughputLatency.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-benchmark/src/main/java/org/apache/bookkeeper/benchmark/BenchThroughputLatency.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-benchmark/src/main/java/org/apache/bookkeeper/benchmark/BenchThroughputLatency.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -59,7 +59,7 @@\n import static com.google.common.base.Charsets.UTF_8;\n \n public class BenchThroughputLatency implements AddCallback, Runnable {\n-    static Logger LOG = LoggerFactory.getLogger(BenchThroughputLatency.class);\n+    static final Logger LOG = LoggerFactory.getLogger(BenchThroughputLatency.class);\n \n     BookKeeper bk;\n     LedgerHandle lh[];"},{"sha":"ebea877076ec9125ac03e838366b4030cd4fa029","filename":"bookkeeper-benchmark/src/main/java/org/apache/bookkeeper/benchmark/MySqlClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-benchmark/src/main/java/org/apache/bookkeeper/benchmark/MySqlClient.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-benchmark/src/main/java/org/apache/bookkeeper/benchmark/MySqlClient.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-benchmark/src/main/java/org/apache/bookkeeper/benchmark/MySqlClient.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -35,7 +35,7 @@\n import org.apache.zookeeper.KeeperException;\n \n public class MySqlClient {\n-    static Logger LOG = LoggerFactory.getLogger(MySqlClient.class);\n+    static final Logger LOG = LoggerFactory.getLogger(MySqlClient.class);\n \n     BookKeeper x;\n     LedgerHandle lh;"},{"sha":"391489a6d099e1bc783a1b186f3009a5b0f2f8a3","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -80,7 +80,7 @@\n \n public class Bookie extends BookieThread {\n \n-    static Logger LOG = LoggerFactory.getLogger(Bookie.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(Bookie.class);\n \n     final File journalDirectory;\n     final ServerConfiguration conf;"},{"sha":"b4ff3573fc8b4e049a8ad2cfa7b234d0e4e009ac","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Cookie.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Cookie.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Cookie.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Cookie.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -64,7 +64,7 @@\n  * with the cluster. It's better to fail early and obviously.\n  */\n class Cookie {\n-    static Logger LOG = LoggerFactory.getLogger(Cookie.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(Cookie.class);\n \n     static final int CURRENT_COOKIE_LAYOUT_VERSION = 4;\n     private int layoutVersion = 0;"},{"sha":"80157613af1e51e7d152f1310f78941bdfda8ab1","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileInfo.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileInfo.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileInfo.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileInfo.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -54,7 +54,7 @@\n  * </p>\n  */\n class FileInfo {\n-    static Logger LOG = LoggerFactory.getLogger(FileInfo.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(FileInfo.class);\n \n     static final int NO_MASTER_KEY = -1;\n     static final int STATE_FENCED_BIT = 0x1;"},{"sha":"226a5a25196a8a446a441972b6746ef6f153c4de","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileSystemUpgrade.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileSystemUpgrade.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileSystemUpgrade.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileSystemUpgrade.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -63,7 +63,7 @@\n  * between versions\n  */\n public class FileSystemUpgrade {\n-    static Logger LOG = LoggerFactory.getLogger(FileSystemUpgrade.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(FileSystemUpgrade.class);\n \n     static FilenameFilter BOOKIE_FILES_FILTER = new FilenameFilter() {\n             private boolean containsIndexFiles(File dir, String name) {"},{"sha":"b566398ec3f3b32628f74caac3e35031d766f306","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/InterleavedLedgerStorage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/InterleavedLedgerStorage.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/InterleavedLedgerStorage.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/InterleavedLedgerStorage.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -40,7 +40,7 @@\n  * file and maintains an index file for each ledger.\n  */\n class InterleavedLedgerStorage implements LedgerStorage, EntryLogListener {\n-    final static Logger LOG = LoggerFactory.getLogger(InterleavedLedgerStorage.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(InterleavedLedgerStorage.class);\n \n     // Hold the last checkpoint\n     static class CheckpointHolder {"},{"sha":"6f27e0b9375ed4063e45207b6a0d6d06f06bbd1b","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Journal.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Journal.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Journal.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Journal.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -49,7 +49,7 @@\n  */\n class Journal extends BookieThread implements CheckpointSource {\n \n-    static Logger LOG = LoggerFactory.getLogger(Journal.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(Journal.class);\n \n     /**\n      * Filter to pickup journals"},{"sha":"e97da741872e4355744e08db21748a38048a1d1e","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/JournalChannel.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/JournalChannel.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/JournalChannel.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/JournalChannel.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -42,7 +42,7 @@\n  * information to the file.\n  */\n class JournalChannel implements Closeable {\n-    static Logger LOG = LoggerFactory.getLogger(JournalChannel.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(JournalChannel.class);\n \n     final RandomAccessFile randomAccessFile;\n     final FileChannel fc;"},{"sha":"d9814b667317517f80917e9fd7e7a370785881fe","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDescriptorImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDescriptorImpl.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDescriptorImpl.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDescriptorImpl.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -34,7 +34,7 @@\n  *\n  */\n public class LedgerDescriptorImpl extends LedgerDescriptor {\n-    final static Logger LOG = LoggerFactory.getLogger(LedgerDescriptor.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(LedgerDescriptor.class);\n     final LedgerStorage ledgerStorage;\n     private long ledgerId;\n "},{"sha":"7e0c3fbd7e5cea82f21cb7496d068a89fabc4972","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDirsManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDirsManager.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDirsManager.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDirsManager.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -39,7 +39,7 @@\n  * This class manages ledger directories used by the bookie.\n  */\n public class LedgerDirsManager {\n-    private static Logger LOG = LoggerFactory\n+    private final static Logger LOG = LoggerFactory\n             .getLogger(LedgerDirsManager.class);\n \n     private volatile List<File> filledDirs;"},{"sha":"71a21580294d18664fa9002bf1fb03bff6b1a78d","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/SyncThread.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/SyncThread.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/SyncThread.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/SyncThread.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -55,7 +55,7 @@\n  * </p>\n  */\n class SyncThread {\n-    static Logger LOG = LoggerFactory.getLogger(SyncThread.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(SyncThread.class);\n \n     final ScheduledExecutorService executor;\n     final int flushInterval;"},{"sha":"c5f5233e25e807f1f504d7b1ed34b22cd66ce01d","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeperAdmin.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeperAdmin.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeperAdmin.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeperAdmin.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -63,7 +63,7 @@\n  * Admin client for BookKeeper clusters\n  */\n public class BookKeeperAdmin {\n-    private static Logger LOG = LoggerFactory.getLogger(BookKeeperAdmin.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(BookKeeperAdmin.class);\n     // ZK client instance\n     private ZooKeeper zk;\n     // ZK ledgers related String constants"},{"sha":"cfb9128e843523759d4d19d4ee9f928359077a04","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerChecker.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerChecker.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerChecker.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerChecker.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -41,7 +41,7 @@\n  *Checks the complete ledger and finds the UnderReplicated fragments if any\n  */\n public class LedgerChecker {\n-    private static Logger LOG = LoggerFactory.getLogger(LedgerChecker.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(LedgerChecker.class);\n \n     public final BookieClient bookieClient;\n "},{"sha":"91f897c45f1f852a7067870ef312a6520f6ee2ca","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerEntry.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerEntry.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerEntry.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerEntry.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -35,7 +35,7 @@\n  */\n \n public class LedgerEntry {\n-    Logger LOG = LoggerFactory.getLogger(LedgerEntry.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(LedgerEntry.class);\n \n     long ledgerId;\n     long entryId;"},{"sha":"4a4eb4976ac689e82ca9c5a86dd473ecb1473d28","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerFragmentReplicator.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerFragmentReplicator.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerFragmentReplicator.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerFragmentReplicator.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -54,7 +54,7 @@ public LedgerFragmentReplicator(BookKeeper bkc) {\n         this.bkc = bkc;\n     }\n \n-    private static Logger LOG = LoggerFactory\n+    private final static Logger LOG = LoggerFactory\n             .getLogger(LedgerFragmentReplicator.class);\n \n     private void replicateFragmentInternal(final LedgerHandle lh,"},{"sha":"df09d527741b5c43ba7e3dbccf7ccdc763968ee0","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/client/MacDigestManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/MacDigestManager.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/MacDigestManager.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/MacDigestManager.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -31,7 +31,7 @@\n import static com.google.common.base.Charsets.UTF_8;\n \n class MacDigestManager extends DigestManager {\n-    final static Logger LOG = LoggerFactory.getLogger(MacDigestManager.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(MacDigestManager.class);\n \n     public static String DIGEST_ALGORITHM = \"SHA-1\";\n     public static String KEY_ALGORITHM = \"HmacSHA1\";"},{"sha":"4a86a8498a0bfaee6c89e1b98569fcd3ca007a01","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingAddOp.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingAddOp.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingAddOp.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingAddOp.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -37,7 +37,7 @@\n  *\n  */\n class PendingAddOp implements WriteCallback {\n-    final static Logger LOG = LoggerFactory.getLogger(PendingAddOp.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(PendingAddOp.class);\n \n     ChannelBuffer toSend;\n     AddCallback cb;"},{"sha":"38fa8acabe6c9e4e9a9f5fdeffffe9629ce073fb","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingReadOp.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingReadOp.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingReadOp.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/PendingReadOp.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -51,7 +51,7 @@\n  *\n  */\n class PendingReadOp implements Enumeration<LedgerEntry>, ReadEntryCallback {\n-    Logger LOG = LoggerFactory.getLogger(PendingReadOp.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(PendingReadOp.class);\n \n     final int speculativeReadTimeout;\n     final private ScheduledExecutorService scheduler;"},{"sha":"80f807d2516ebb7287e52fc5c4df7529a8246582","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/meta/AbstractZkLedgerManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/meta/AbstractZkLedgerManager.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/meta/AbstractZkLedgerManager.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/meta/AbstractZkLedgerManager.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -48,7 +48,7 @@\n  */\n abstract class AbstractZkLedgerManager implements LedgerManager {\n \n-    static Logger LOG = LoggerFactory.getLogger(AbstractZkLedgerManager.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(AbstractZkLedgerManager.class);\n \n     protected final AbstractConfiguration conf;\n     protected final ZooKeeper zk;"},{"sha":"3d26200a2c135f3f22270a9daf23f8d1b63a7acb","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/meta/MSLedgerManagerFactory.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/meta/MSLedgerManagerFactory.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/meta/MSLedgerManagerFactory.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/meta/MSLedgerManagerFactory.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -65,7 +65,7 @@\n  */\n public class MSLedgerManagerFactory extends LedgerManagerFactory {\n \n-    static Logger LOG = LoggerFactory.getLogger(MSLedgerManagerFactory.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(MSLedgerManagerFactory.class);\n \n     public static final int CUR_VERSION = 1;\n "},{"sha":"4672299d85555d039d40df42066851161281acf4","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieNettyServer.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieNettyServer.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieNettyServer.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieNettyServer.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -54,7 +54,7 @@\n  * Netty server for serving bookie requests\n  */\n class BookieNettyServer {\n-    static Logger LOG = LoggerFactory.getLogger(BookieNettyServer.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(BookieNettyServer.class);\n \n     final static int maxMessageSize = 0xfffff;\n     final ServerConfiguration conf;"},{"sha":"1154047bc4da0c539cf921fbfe92bfb57e74ec78","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieProtoEncoding.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieProtoEncoding.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieProtoEncoding.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieProtoEncoding.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -33,7 +33,7 @@\n import org.slf4j.LoggerFactory;\n \n public class BookieProtoEncoding {\n-    static Logger LOG = LoggerFactory.getLogger(BookieProtoEncoding.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(BookieProtoEncoding.class);\n \n     public static class RequestEncoder extends OneToOneEncoder {\n         @Override"},{"sha":"b90efe42b8a45277fe68fd902ddeac814940afcf","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieRequestHandler.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieRequestHandler.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieRequestHandler.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieRequestHandler.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -52,7 +52,7 @@\n class BookieRequestHandler extends SimpleChannelHandler\n     implements BookkeeperInternalCallbacks.WriteCallback {\n \n-    static Logger LOG = LoggerFactory.getLogger(BookieRequestHandler.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(BookieRequestHandler.class);\n     private final Bookie bookie;\n     private final ChannelGroup allChannels;\n "},{"sha":"0e913e8a2b875bf244711bebe2f226ae8ea244e9","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -59,7 +59,7 @@\n     private volatile boolean running = false;\n     Bookie bookie;\n     DeathWatcher deathWatcher;\n-    static Logger LOG = LoggerFactory.getLogger(BookieServer.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(BookieServer.class);\n \n     int exitCode = ExitCode.OK;\n "},{"sha":"80808bf02a189aa41059789bd555da824fadc7f2","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/ReplicationWorker.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/ReplicationWorker.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/ReplicationWorker.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/ReplicationWorker.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -53,7 +53,7 @@\n  * ZKLedgerUnderreplicationManager and replicates to it.\n  */\n public class ReplicationWorker implements Runnable {\n-    private static Logger LOG = LoggerFactory\n+    private final static Logger LOG = LoggerFactory\n             .getLogger(ReplicationWorker.class);\n     final private LedgerUnderreplicationManager underreplicationManager;\n     private ServerConfiguration conf;"},{"sha":"7e01bdca2512b14c485b2aa9135b64a564564fd1","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/streaming/LedgerInputStream.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/streaming/LedgerInputStream.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/streaming/LedgerInputStream.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/streaming/LedgerInputStream.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -32,7 +32,7 @@\n import org.slf4j.LoggerFactory;\n \n public class LedgerInputStream extends InputStream {\n-    Logger LOG = LoggerFactory.getLogger(LedgerInputStream.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(LedgerInputStream.class);\n     private LedgerHandle lh;\n     private ByteBuffer bytebuff;\n     byte[] bbytes;"},{"sha":"05d390b61eb159e873f96097fc10bb7debf8d4d6","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/streaming/LedgerOutputStream.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/streaming/LedgerOutputStream.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/streaming/LedgerOutputStream.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/streaming/LedgerOutputStream.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -36,7 +36,7 @@\n  * out the entry to the ledger.\n  */\n public class LedgerOutputStream extends OutputStream {\n-    Logger LOG = LoggerFactory.getLogger(LedgerOutputStream.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(LedgerOutputStream.class);\n     private LedgerHandle lh;\n     private ByteBuffer bytebuff;\n     byte[] bbytes;"},{"sha":"6eb9a05465b100981966a93fb23d728bca76b233","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/tools/BookKeeperTools.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/tools/BookKeeperTools.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/tools/BookKeeperTools.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/tools/BookKeeperTools.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -36,7 +36,7 @@\n  *\n  */\n public class BookKeeperTools {\n-    private static Logger LOG = LoggerFactory.getLogger(BookKeeperTools.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(BookKeeperTools.class);\n \n     /**\n      * Main method so we can invoke the bookie recovery via command line."},{"sha":"1549a9f045e5af057ace60b2f49ff5e615287f07","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/util/EntryFormatter.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/EntryFormatter.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/EntryFormatter.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/EntryFormatter.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -33,7 +33,7 @@\n  */\n public abstract class EntryFormatter {\n \n-    static Logger LOG = LoggerFactory.getLogger(EntryFormatter.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(EntryFormatter.class);\n \n     protected Configuration conf;\n "},{"sha":"bf8cfcef9f046a22a2bacfbbb798660f327ccfa1","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/util/NativeIO.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/NativeIO.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/NativeIO.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/NativeIO.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -26,7 +26,7 @@\n import com.sun.jna.Native;\n \n public final class NativeIO {\n-    private static Logger LOG = LoggerFactory.getLogger(NativeIO.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(NativeIO.class);\n \n     private static final int POSIX_FADV_DONTNEED = 4; /* fadvise.h */\n "},{"sha":"680a5874d24970789d96d2d50ba08b0ab54da095","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieJournalTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieJournalTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieJournalTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieJournalTest.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -42,7 +42,7 @@\n import org.slf4j.LoggerFactory;\n \n public class BookieJournalTest {\n-    static Logger LOG = LoggerFactory.getLogger(BookieJournalTest.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(BookieJournalTest.class);\n \n     final Random r = new Random(System.currentTimeMillis());\n "},{"sha":"d34f191fa13126423df84a6e7f5b2c4be1a7cedc","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/CompactionTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/CompactionTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/CompactionTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/CompactionTest.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -40,7 +40,7 @@\n  * This class tests the entry log compaction functionality.\n  */\n public class CompactionTest extends BookKeeperClusterTestCase {\n-    static Logger LOG = LoggerFactory.getLogger(CompactionTest.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(CompactionTest.class);\n     DigestType digestType;\n \n     static int ENTRY_SIZE = 1024;"},{"sha":"e1c29c9dca359da55134ee7975f494d977ac327f","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/EntryLogTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/EntryLogTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/EntryLogTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/EntryLogTest.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -40,7 +40,7 @@\n import org.slf4j.LoggerFactory;\n \n public class EntryLogTest extends TestCase {\n-    static Logger LOG = LoggerFactory.getLogger(EntryLogTest.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(EntryLogTest.class);\n \n     @Before\n     public void setUp() throws Exception {"},{"sha":"33381fabed51da19a8c7ee4f6c07eec42f423068","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/IndexCorruptionTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/IndexCorruptionTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/IndexCorruptionTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/IndexCorruptionTest.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -40,7 +40,7 @@\n  * This class tests that index corruption cases\n  */\n public class IndexCorruptionTest extends BookKeeperClusterTestCase {\n-    static Logger LOG = LoggerFactory.getLogger(IndexCorruptionTest.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(IndexCorruptionTest.class);\n \n     DigestType digestType;\n "},{"sha":"754d5b0cade0fcbd6a66cc8db658f22ecb1c1bc7","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/LedgerCacheTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/LedgerCacheTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/LedgerCacheTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/LedgerCacheTest.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -50,7 +50,7 @@\n  * LedgerCache related test cases\n  */\n public class LedgerCacheTest extends TestCase {\n-    static Logger LOG = LoggerFactory.getLogger(LedgerCacheTest.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(LedgerCacheTest.class);\n \n     SnapshotMap<Long, Boolean> activeLedgers;\n     LedgerManagerFactory ledgerManagerFactory;"},{"sha":"7dd485b6d3c63beb1430dc0e87a2fa985b94aa06","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/TestLedgerDirsManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/TestLedgerDirsManager.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/TestLedgerDirsManager.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/TestLedgerDirsManager.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -33,7 +33,7 @@\n import org.slf4j.LoggerFactory;\n \n public class TestLedgerDirsManager extends TestCase {\n-    static Logger LOG = LoggerFactory.getLogger(TestLedgerDirsManager.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(TestLedgerDirsManager.class);\n \n     ServerConfiguration conf = TestBKConfiguration.newServerConfiguration();\n     File curDir;"},{"sha":"18733e4227c1b8bfcb94911bbc2c150d2efa4dd9","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/TestSyncThread.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/TestSyncThread.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/TestSyncThread.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/TestSyncThread.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -50,7 +50,7 @@\n import static org.junit.Assert.*;\n \n public class TestSyncThread {\n-    static Logger LOG = LoggerFactory.getLogger(TestSyncThread.class);\n+    private static final Logger LOG = LoggerFactory.getLogger(TestSyncThread.class);\n \n     ExecutorService executor = null;\n "},{"sha":"64d994cf992e40665fe8d365c7dbdb8b72aa80db","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/UpgradeTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/UpgradeTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/UpgradeTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/UpgradeTest.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -48,7 +48,7 @@\n import org.slf4j.LoggerFactory;\n \n public class UpgradeTest {\n-    static Logger LOG = LoggerFactory.getLogger(FileInfo.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(FileInfo.class);\n \n     ZooKeeperUtil zkutil;\n     ZooKeeper zkc = null;"},{"sha":"7f753ee6a78d5dd35c6a09669da275fbf089ee6f","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/client/BookKeeperTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/BookKeeperTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/BookKeeperTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/BookKeeperTest.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -44,7 +44,7 @@\n  * Tests of the main BookKeeper client\n  */\n public class BookKeeperTest extends BaseTestCase {\n-    static Logger LOG = LoggerFactory.getLogger(BookKeeperTest.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(BookKeeperTest.class);\n \n     DigestType digestType;\n "},{"sha":"3de0f75e75e687cf795fa2be646ae8febb66e074","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/client/BookieRecoveryTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/BookieRecoveryTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/BookieRecoveryTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/BookieRecoveryTest.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -55,7 +55,7 @@\n  * This class tests the bookie recovery admin functionality.\n  */\n public class BookieRecoveryTest extends MultiLedgerManagerMultiDigestTestCase {\n-    static Logger LOG = LoggerFactory.getLogger(BookieRecoveryTest.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(BookieRecoveryTest.class);\n \n     // Object used for synchronizing async method calls\n     class SyncObject {"},{"sha":"02b27fee901a8a4863b64c218ba83bd0377f0e16","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/client/BookieWriteLedgerTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/BookieWriteLedgerTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/BookieWriteLedgerTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/BookieWriteLedgerTest.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -40,7 +40,7 @@\n public class BookieWriteLedgerTest extends\n         MultiLedgerManagerMultiDigestTestCase implements AddCallback {\n \n-    private static Logger LOG = LoggerFactory\n+    private final static Logger LOG = LoggerFactory\n             .getLogger(BookieWriteLedgerTest.class);\n \n     byte[] ledgerPassword = \"aaa\".getBytes();"},{"sha":"3594dbbcd1f8dc3b82ce9b8c90efa101eac1ab97","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/client/LedgerCloseTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/LedgerCloseTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/LedgerCloseTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/LedgerCloseTest.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -42,7 +42,7 @@\n  */\n public class LedgerCloseTest extends BookKeeperClusterTestCase {\n \n-    static Logger LOG = LoggerFactory.getLogger(LedgerCloseTest.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(LedgerCloseTest.class);\n \n     static final int READ_TIMEOUT = 1;\n "},{"sha":"03053b628ddbc8d3e1a8e903506ed063027d7d9b","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/client/LedgerRecoveryTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/LedgerRecoveryTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/LedgerRecoveryTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/LedgerRecoveryTest.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -45,7 +45,7 @@\n  */\n \n public class LedgerRecoveryTest extends BaseTestCase {\n-    static Logger LOG = LoggerFactory.getLogger(LedgerRecoveryTest.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(LedgerRecoveryTest.class);\n \n     DigestType digestType;\n "},{"sha":"d34c0648f9e0ee9251994de9e07f712f4260c6b2","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/client/ListLedgersTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/ListLedgersTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/ListLedgersTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/ListLedgersTest.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -31,7 +31,7 @@\n import org.slf4j.LoggerFactory;\n \n public class ListLedgersTest extends BaseTestCase {\n-    static Logger LOG = LoggerFactory.getLogger(ListLedgersTest.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(ListLedgersTest.class);\n \n     DigestType digestType;\n "},{"sha":"d45bd8d05b2e3a95d21e8595daa99b6afc5c5292","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/client/RoundRobinDistributionScheduleTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/RoundRobinDistributionScheduleTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/RoundRobinDistributionScheduleTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/RoundRobinDistributionScheduleTest.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -30,7 +30,7 @@\n import org.slf4j.LoggerFactory;\n \n public class RoundRobinDistributionScheduleTest {\n-    static Logger LOG = LoggerFactory.getLogger(RoundRobinDistributionScheduleTest.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(RoundRobinDistributionScheduleTest.class);\n \n     @Test(timeout=60000)\n     public void testDistributionSchedule() throws Exception {\n@@ -61,4 +61,4 @@ public void testDistributionSchedule() throws Exception {\n         assertFalse(\"Shouldn't cover yet\", covSet.addBookieAndCheckCovered(0));\n         assertTrue(\"Should cover now\", covSet.addBookieAndCheckCovered(2));\n     }\n-}\n\\ No newline at end of file\n+}"},{"sha":"a6822dab7dbed5c85739079b8d451d4bac284495","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/client/SlowBookieTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/SlowBookieTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/SlowBookieTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/SlowBookieTest.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -40,7 +40,7 @@\n import org.apache.bookkeeper.conf.ClientConfiguration;\n \n public class SlowBookieTest extends BookKeeperClusterTestCase {\n-    static Logger LOG = LoggerFactory.getLogger(SlowBookieTest.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(SlowBookieTest.class);\n \n     public SlowBookieTest() {\n         super(4);"},{"sha":"31f5bbb9bc58795511211b30dc674f32318f5326","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestFencing.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestFencing.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestFencing.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestFencing.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -43,7 +43,7 @@\n  *\n  */\n public class TestFencing extends BaseTestCase {\n-    static Logger LOG = LoggerFactory.getLogger(TestFencing.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(TestFencing.class);\n \n     DigestType digestType;\n "},{"sha":"3ef9b972ee15b9c0dc220d638a1740363c04a340","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestLedgerChecker.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestLedgerChecker.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestLedgerChecker.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestLedgerChecker.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -39,7 +39,7 @@\n     private static final byte[] TEST_LEDGER_ENTRY_DATA = \"TestCheckerData\"\n             .getBytes();\n     private static final byte[] TEST_LEDGER_PASSWORD = \"testpasswd\".getBytes();\n-    static Logger LOG = LoggerFactory.getLogger(TestLedgerChecker.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(TestLedgerChecker.class);\n \n     public TestLedgerChecker() {\n         super(3);"},{"sha":"15299c9d3aea175856ac1a629b52a6ac50a61c17","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestLedgerFragmentReplication.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestLedgerFragmentReplication.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestLedgerFragmentReplication.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestLedgerFragmentReplication.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -43,7 +43,7 @@\n \n     private static final byte[] TEST_PSSWD = \"testpasswd\".getBytes();\n     private static final DigestType TEST_DIGEST_TYPE = BookKeeper.DigestType.CRC32;\n-    private static Logger LOG = LoggerFactory\n+    private final static Logger LOG = LoggerFactory\n             .getLogger(TestLedgerFragmentReplication.class);\n \n     public TestLedgerFragmentReplication() {"},{"sha":"5bb35a950c7560418da9d495119b7ced552f8559","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestReadTimeout.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestReadTimeout.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestReadTimeout.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestReadTimeout.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -48,7 +48,7 @@\n  *\n  */\n public class TestReadTimeout extends BookKeeperClusterTestCase {\n-    static Logger LOG = LoggerFactory.getLogger(TestReadTimeout.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(TestReadTimeout.class);\n \n     DigestType digestType;\n "},{"sha":"a1ae5c9c857eb9ebe1c3c197b2391f5bcf6e47f8","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestSpeculativeRead.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestSpeculativeRead.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestSpeculativeRead.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestSpeculativeRead.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -46,7 +46,7 @@\n  *\n  */\n public class TestSpeculativeRead extends BaseTestCase {\n-    static Logger LOG = LoggerFactory.getLogger(TestSpeculativeRead.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(TestSpeculativeRead.class);\n \n     DigestType digestType;\n     byte[] passwd = \"specPW\".getBytes();"},{"sha":"971b159e626a19812c15dfc62fc7fae582816388","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/meta/TestLedgerManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/meta/TestLedgerManager.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/meta/TestLedgerManager.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/meta/TestLedgerManager.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -43,7 +43,7 @@\n import org.slf4j.LoggerFactory;\n \n public class TestLedgerManager extends BookKeeperClusterTestCase {\n-    static Logger LOG = LoggerFactory.getLogger(TestLedgerManager.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(TestLedgerManager.class);\n \n     public TestLedgerManager() {\n         super(0);"},{"sha":"19c998f9feac84b53f705ab775ab11466b4c5741","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/metastore/TestMetaStore.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/metastore/TestMetaStore.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/metastore/TestMetaStore.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/metastore/TestMetaStore.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -49,7 +49,7 @@\n import com.google.common.collect.Sets;\n \n public class TestMetaStore extends TestCase {\n-    final static Logger logger = LoggerFactory.getLogger(TestMetaStore.class);\n+    private final static Logger logger = LoggerFactory.getLogger(TestMetaStore.class);\n \n     protected final static String TABLE = \"myTable\";\n     protected final static String RECORDID = \"test\";"},{"sha":"e918088562498722ec4f2f02f5e8eb3a0348f9c3","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestDeathwatcher.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestDeathwatcher.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestDeathwatcher.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestDeathwatcher.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -33,7 +33,7 @@\n  * Tests for the BookieServer death watcher\n  */\n public class TestDeathwatcher extends BookKeeperClusterTestCase {\n-    static Logger LOG = LoggerFactory.getLogger(TestDeathwatcher.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(TestDeathwatcher.class);\n \n     public TestDeathwatcher() {\n         super(1);"},{"sha":"f5d13a254e5e9e82b47043e3c47fd7daaf3eb1a0","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestPerChannelBookieClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestPerChannelBookieClient.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestPerChannelBookieClient.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestPerChannelBookieClient.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -54,7 +54,7 @@\n  * had a few race conditions, so this is what these tests focus on.\n  */\n public class TestPerChannelBookieClient extends BookKeeperClusterTestCase {\n-    static Logger LOG = LoggerFactory.getLogger(TestPerChannelBookieClient.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(TestPerChannelBookieClient.class);\n \n     public TestPerChannelBookieClient() {\n         super(1);"},{"sha":"e1ba44135ab07465a90b65f097c9fdb49fc1e6e8","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/replication/AuditorBookieTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/replication/AuditorBookieTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/replication/AuditorBookieTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/replication/AuditorBookieTest.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -46,7 +46,7 @@\n public class AuditorBookieTest extends BookKeeperClusterTestCase {\n     // Depending on the taste, select the amount of logging\n     // by decommenting one of the two lines below\n-    // static Logger LOG = Logger.getRootLogger();\n+    // private final static Logger LOG = Logger.getRootLogger();\n     private final static Logger LOG = LoggerFactory\n             .getLogger(AuditorBookieTest.class);\n     private String electionPath;"},{"sha":"0fa2d1271296e8aa4645140db2c53142e3a0b2a2","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/replication/AuditorLedgerCheckerTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/replication/AuditorLedgerCheckerTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/replication/AuditorLedgerCheckerTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/replication/AuditorLedgerCheckerTest.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -62,7 +62,7 @@\n \n     // Depending on the taste, select the amount of logging\n     // by decommenting one of the two lines below\n-    // static Logger LOG = Logger.getRootLogger();\n+    // private final static Logger LOG = Logger.getRootLogger();\n     private final static Logger LOG = LoggerFactory\n             .getLogger(AuditorLedgerCheckerTest.class);\n "},{"sha":"67cf11c792498342eaab51e7887710e12f1e88c7","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/replication/BookieLedgerIndexTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/replication/BookieLedgerIndexTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/replication/BookieLedgerIndexTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/replication/BookieLedgerIndexTest.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -50,7 +50,7 @@\n \n     // Depending on the taste, select the amount of logging\n     // by decommenting one of the two lines below\n-    // static Logger LOG = Logger.getRootLogger();\n+    // private final static Logger LOG = Logger.getRootLogger();\n     private static final Logger LOG = LoggerFactory\n             .getLogger(BookieLedgerIndexTest.class);\n "},{"sha":"27d8a73da2b5e3c341b6b5c97c986e3d597e34cc","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/test/AsyncLedgerOpsTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/AsyncLedgerOpsTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/AsyncLedgerOpsTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/AsyncLedgerOpsTest.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -51,7 +51,7 @@\n public class AsyncLedgerOpsTest extends MultiLedgerManagerMultiDigestTestCase\n     implements AddCallback, ReadCallback, CreateCallback,\n     CloseCallback, OpenCallback {\n-    static Logger LOG = LoggerFactory.getLogger(AsyncLedgerOpsTest.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(AsyncLedgerOpsTest.class);\n \n     DigestType digestType;\n "},{"sha":"291682d7be6a983f54b17d8df9c0598e2300383e","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieClientTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieClientTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieClientTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieClientTest.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -48,7 +48,7 @@\n import org.slf4j.LoggerFactory;\n \n public class BookieClientTest extends TestCase {\n-    static Logger LOG = LoggerFactory.getLogger(BookieClientTest.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(BookieClientTest.class);\n     BookieServer bs;\n     File tmpDir;\n     public int port = 13645;"},{"sha":"ed6c65cd04c06a874890b2af076d813ed60b1840","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieFailureTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieFailureTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieFailureTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieFailureTest.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -54,8 +54,8 @@\n \n     // Depending on the taste, select the amount of logging\n     // by decommenting one of the two lines below\n-    // static Logger LOG = Logger.getRootLogger();\n-    static Logger LOG = LoggerFactory.getLogger(BookieFailureTest.class);\n+    // private final static Logger LOG = Logger.getRootLogger();\n+    private final static Logger LOG = LoggerFactory.getLogger(BookieFailureTest.class);\n \n     byte[] ledgerPassword = \"aaa\".getBytes();\n     LedgerHandle lh, lh2;"},{"sha":"1de415e5604078131ff0b67829f90ccdd1fa73b9","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieJournalRollingTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieJournalRollingTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieJournalRollingTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieJournalRollingTest.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -43,7 +43,7 @@\n  * This class tests that bookie rolling journals\n  */\n public class BookieJournalRollingTest extends BookKeeperClusterTestCase {\n-    static Logger LOG = LoggerFactory.getLogger(BookieJournalRollingTest.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(BookieJournalRollingTest.class);\n \n     DigestType digestType;\n "},{"sha":"d6ab59384380ce68242a9d4c2d37e6462e1deec0","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieReadWriteTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieReadWriteTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieReadWriteTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieReadWriteTest.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -67,8 +67,8 @@\n \n     // Depending on the taste, select the amount of logging\n     // by decommenting one of the two lines below\n-    // static Logger LOG = Logger.getRootLogger();\n-    static Logger LOG = LoggerFactory.getLogger(BookieReadWriteTest.class);\n+    // private final static Logger LOG = Logger.getRootLogger();\n+    private final static Logger LOG = LoggerFactory.getLogger(BookieReadWriteTest.class);\n \n     byte[] ledgerPassword = \"aaa\".getBytes();\n     LedgerHandle lh, lh2;"},{"sha":"98c5f10596f0cf568345673815cfeeb41ddcfe19","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/test/CloseTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/CloseTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/CloseTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/CloseTest.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -34,7 +34,7 @@\n  */\n \n public class CloseTest extends BaseTestCase {\n-    static Logger LOG = LoggerFactory.getLogger(CloseTest.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(CloseTest.class);\n     DigestType digestType;\n \n     public CloseTest(DigestType digestType) {"},{"sha":"fbb1a6c6213b4fa53434f902444699db9d96be48","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConcurrentLedgerTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConcurrentLedgerTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConcurrentLedgerTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConcurrentLedgerTest.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -45,7 +45,7 @@\n  * Tests writing to concurrent ledgers\n  */\n public class ConcurrentLedgerTest extends TestCase {\n-    static Logger LOG = LoggerFactory.getLogger(ConcurrentLedgerTest.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(ConcurrentLedgerTest.class);\n \n     Bookie bookie;\n     File txnDir, ledgerDir;"},{"sha":"91a2257199f37db6c7da212455626e1d48d21b2f","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConditionalSetTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConditionalSetTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConditionalSetTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConditionalSetTest.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -51,7 +51,7 @@\n  * Tests conditional set of the ledger metadata znode.\n  */\n public class ConditionalSetTest extends BaseTestCase {\n-    static Logger LOG = LoggerFactory.getLogger(ConditionalSetTest.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(ConditionalSetTest.class);\n \n     byte[] entry;\n     DigestType digestType;"},{"sha":"ee9a9149ed8523dd8a955d5bc99e988ff4e8595b","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LedgerDeleteTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LedgerDeleteTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LedgerDeleteTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LedgerDeleteTest.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -39,7 +39,7 @@\n  * client and the server side.\n  */\n public class LedgerDeleteTest extends MultiLedgerManagerTestCase {\n-    static Logger LOG = LoggerFactory.getLogger(LedgerDeleteTest.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(LedgerDeleteTest.class);\n     DigestType digestType;\n \n     public LedgerDeleteTest(String ledgerManagerFactory) {"},{"sha":"e56a92b7edef8b4c06185486d005f1d95bba13dc","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LoopbackClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LoopbackClient.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LoopbackClient.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LoopbackClient.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -46,7 +46,7 @@\n  */\n \n class LoopbackClient implements WriteCallback {\n-    Logger LOG = LoggerFactory.getLogger(LoopbackClient.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(LoopbackClient.class);\n     BookieClient client;\n     static int recvTimeout = 2000;\n     long begin = 0;"},{"sha":"8376b460c331607d5312742bc08e44d778043a7c","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/test/TestBackwardCompat.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/bookkeeper/blob/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/TestBackwardCompat.java","raw_url":"https://github.com/apache/bookkeeper/raw/16978d671b8d6d9e563edb3a6119a4be574245af/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/TestBackwardCompat.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/TestBackwardCompat.java?ref=16978d671b8d6d9e563edb3a6119a4be574245af","patch":"@@ -42,7 +42,7 @@\n import org.slf4j.LoggerFactory;\n \n public class TestBackwardCompat {\n-    static Logger LOG = LoggerFactory.getLogger(TestBackwardCompat.class);\n+    private final static Logger LOG = LoggerFactory.getLogger(TestBackwardCompat.class);\n \n     private static ZooKeeperUtil zkUtil = new ZooKeeperUtil();;\n     private static byte[] ENTRY_DATA = \"ThisIsAnEntry\".getBytes();\n@@ -615,4 +615,4 @@ public void testCompat410() throws Exception {\n \n         scur.stop();\n     }\n-}\n\\ No newline at end of file\n+}"}]}

