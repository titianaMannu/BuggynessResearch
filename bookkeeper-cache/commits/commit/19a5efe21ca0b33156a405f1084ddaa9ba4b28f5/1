{"sha":"19a5efe21ca0b33156a405f1084ddaa9ba4b28f5","node_id":"MDY6Q29tbWl0MTU3NTk1NjoxOWE1ZWZlMjFjYTBiMzMxNTZhNDA1ZjEwODRkZGFhOWJhNGIyOGY1","commit":{"author":{"name":"Arun M. Krishnakumar","email":"akrishnakumar@salesforce.com","date":"2016-04-05T19:52:16Z"},"committer":{"name":"Matteo Merli","email":"mmerli@apache.org","date":"2016-04-05T19:53:42Z"},"message":"BOOKKEEPER-910: In LocalBookkeeper, Zookeeper server and client use different host addresses\n\nAuthor: Arun M. Krishnakumar <akrishnakumar@salesforce.com>\n\nReviewers: Matteo Merli <mmerli@apache.org>","tree":{"sha":"01c7767c2ca5afbcc2b6a523c33cf86495b1c4ab","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/01c7767c2ca5afbcc2b6a523c33cf86495b1c4ab"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/19a5efe21ca0b33156a405f1084ddaa9ba4b28f5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/19a5efe21ca0b33156a405f1084ddaa9ba4b28f5","html_url":"https://github.com/apache/bookkeeper/commit/19a5efe21ca0b33156a405f1084ddaa9ba4b28f5","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/19a5efe21ca0b33156a405f1084ddaa9ba4b28f5/comments","author":null,"committer":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","site_admin":false},"parents":[{"sha":"e5939ed587d81212fb032a37b2b83401359fa7fc","url":"https://api.github.com/repos/apache/bookkeeper/commits/e5939ed587d81212fb032a37b2b83401359fa7fc","html_url":"https://github.com/apache/bookkeeper/commit/e5939ed587d81212fb032a37b2b83401359fa7fc"}],"stats":{"total":25,"additions":14,"deletions":11},"files":[{"sha":"80e8c7ad7f6b98655b84c8f17b1f8fabe95022a0","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/util/LocalBookKeeper.java","status":"modified","additions":10,"deletions":8,"changes":18,"blob_url":"https://github.com/apache/bookkeeper/blob/19a5efe21ca0b33156a405f1084ddaa9ba4b28f5/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/LocalBookKeeper.java","raw_url":"https://github.com/apache/bookkeeper/raw/19a5efe21ca0b33156a405f1084ddaa9ba4b28f5/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/LocalBookKeeper.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/LocalBookKeeper.java?ref=19a5efe21ca0b33156a405f1084ddaa9ba4b28f5","patch":"@@ -62,7 +62,6 @@ public LocalBookKeeper(int numberOfBookies) {\n         LOG.info(\"Running \" + this.numberOfBookies + \" bookie(s).\");\n     }\n \n-    private final String HOSTPORT = \"127.0.0.1:2181\";\n     NIOServerCnxnFactory serverFactory;\n     ZooKeeperServer zks;\n     ZooKeeper zkc;\n@@ -87,26 +86,28 @@ private void runZookeeper(int maxCC) throws IOException {\n         //ClientBase.setupTestEnv();\n         ZkTmpDir = IOUtils.createTempDir(\"zookeeper\", \"localbookkeeper\");\n \n+        InetAddress loopbackIP = InetAddress.getLoopbackAddress();\n         try {\n             zks = new ZooKeeperServer(ZkTmpDir, ZkTmpDir, ZooKeeperServer.DEFAULT_TICK_TIME);\n             serverFactory =  new NIOServerCnxnFactory();\n-            serverFactory.configure(new InetSocketAddress(ZooKeeperDefaultPort), maxCC);\n+            LOG.info(\"Starting Zookeeper server at \" + loopbackIP.getHostAddress() + \" port:\" + ZooKeeperDefaultPort);\n+            serverFactory.configure(new InetSocketAddress(loopbackIP, ZooKeeperDefaultPort), maxCC);\n             serverFactory.startup(zks);\n         } catch (Exception e) {\n             // TODO Auto-generated catch block\n             LOG.error(\"Exception while instantiating ZooKeeper\", e);\n         }\n \n-        boolean b = waitForServerUp(HOSTPORT, CONNECTION_TIMEOUT);\n+        boolean b = waitForServerUp(loopbackIP.getHostAddress() + \":\" + ZooKeeperDefaultPort, CONNECTION_TIMEOUT);\n         LOG.debug(\"ZooKeeper server up: {}\", b);\n     }\n \n-    private void initializeZookeper() throws IOException {\n+    private void initializeZookeeper() throws IOException {\n         LOG.info(\"Instantiate ZK Client\");\n         //initialize the zk client with values\n         try {\n             zkc = ZooKeeperClient.newBuilder()\n-                    .connectString(HOSTPORT)\n+                    .connectString(InetAddress.getLoopbackAddress() + \":\" + ZooKeeperDefaultPort)\n                     .sessionTimeoutMs(zkSessionTimeOut)\n                     .build();\n             zkc.create(\"/ledgers\", new byte[0], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n@@ -166,6 +167,7 @@ private void runBookies(ServerConfiguration baseConf, List<File> tempDirs, Strin\n         bs = new BookieServer[numberOfBookies];\n         bsConfs = new ServerConfiguration[numberOfBookies];\n \n+        String loopbackIPAddr = InetAddress.getLoopbackAddress().getHostAddress();\n         for(int i = 0; i < numberOfBookies; i++) {\n             tmpDirs[i] = File.createTempFile(\"bookie\" + Integer.toString(i), \"test\");\n             if (!tmpDirs[i].delete() || !tmpDirs[i].mkdir()) {\n@@ -175,8 +177,8 @@ private void runBookies(ServerConfiguration baseConf, List<File> tempDirs, Strin\n             bsConfs[i] = new ServerConfiguration(baseConf);\n             // override settings\n             bsConfs[i].setBookiePort(initialPort + i);\n-            bsConfs[i].setZkServers(InetAddress.getLocalHost().getHostAddress() + \":\"\n-                                  + ZooKeeperDefaultPort);\n+            LOG.info(\"Connecting to Zookeeper at \" + loopbackIPAddr + \" port:\" + ZooKeeperDefaultPort);\n+            bsConfs[i].setZkServers(loopbackIPAddr + \":\" + ZooKeeperDefaultPort);\n             bsConfs[i].setJournalDirName(tmpDirs[i].getPath());\n             bsConfs[i].setLedgerDirNames(new String[] { tmpDirs[i].getPath() });\n             bsConfs[i].setAllowLoopback(true);\n@@ -208,7 +210,7 @@ public static void main(String[] args) throws IOException, KeeperException,\n         }\n \n         lb.runZookeeper(1000);\n-        lb.initializeZookeper();\n+        lb.initializeZookeeper();\n         List<File> tmpDirs = lb.runBookies(conf, \"test\");\n         try {\n             while (true) {"},{"sha":"481b647258001c177a564d2f5d418e960e7c38bf","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ZooKeeperUtil.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/apache/bookkeeper/blob/19a5efe21ca0b33156a405f1084ddaa9ba4b28f5/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ZooKeeperUtil.java","raw_url":"https://github.com/apache/bookkeeper/raw/19a5efe21ca0b33156a405f1084ddaa9ba4b28f5/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ZooKeeperUtil.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ZooKeeperUtil.java?ref=19a5efe21ca0b33156a405f1084ddaa9ba4b28f5","patch":"@@ -23,7 +23,7 @@\n \n import java.io.File;\n import java.io.IOException;\n-\n+import java.net.InetAddress;\n import java.net.InetSocketAddress;\n \n import org.apache.bookkeeper.util.IOUtils;\n@@ -61,8 +61,9 @@\n     private final String connectString;\n \n     public ZooKeeperUtil() {\n-        zkaddr = new InetSocketAddress(zooKeeperPort);\n-        connectString= \"localhost:\" + zooKeeperPort;\n+        String loopbackIPAddr = InetAddress.getLoopbackAddress().getHostAddress();\n+        zkaddr = new InetSocketAddress(loopbackIPAddr, zooKeeperPort);\n+        connectString = loopbackIPAddr + \":\" + zooKeeperPort;\n     }\n \n     public ZooKeeper getZooKeeperClient() {"}]}

