{"sha":"1a98088e38ca0a43c26d9a4847619b0a27bb90e8","node_id":"MDY6Q29tbWl0MTU3NTk1NjoxYTk4MDg4ZTM4Y2EwYTQzYzI2ZDlhNDg0NzYxOWIwYTI3YmI5MGU4","commit":{"author":{"name":"Matteo Merli","email":"matteo.merli@gmail.com","date":"2016-03-16T03:51:00Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2016-03-16T03:51:00Z"},"message":"BOOKKEEPER-594: AutoRecovery shutting down on SyncDisconnected\n\nAuthor: Matteo Merli <matteo.merli@gmail.com>\n\nReviewers: Sijie Guo <sijie@apache.org>\n\nCloses #26 from merlimat/bk-594","tree":{"sha":"892f02f3827a59501d267b1e796f64dc7fb60163","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/892f02f3827a59501d267b1e796f64dc7fb60163"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/1a98088e38ca0a43c26d9a4847619b0a27bb90e8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/1a98088e38ca0a43c26d9a4847619b0a27bb90e8","html_url":"https://github.com/apache/bookkeeper/commit/1a98088e38ca0a43c26d9a4847619b0a27bb90e8","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/1a98088e38ca0a43c26d9a4847619b0a27bb90e8/comments","author":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"9a8d62b1d1231f2fe6feca7e0c407a426a1278d5","url":"https://api.github.com/repos/apache/bookkeeper/commits/9a8d62b1d1231f2fe6feca7e0c407a426a1278d5","html_url":"https://github.com/apache/bookkeeper/commit/9a8d62b1d1231f2fe6feca7e0c407a426a1278d5"}],"stats":{"total":43,"additions":36,"deletions":7},"files":[{"sha":"30394701bad6c7b9fcb80e0543ab878159797a37","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/AutoRecoveryMain.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/apache/bookkeeper/blob/1a98088e38ca0a43c26d9a4847619b0a27bb90e8/bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/AutoRecoveryMain.java","raw_url":"https://github.com/apache/bookkeeper/raw/1a98088e38ca0a43c26d9a4847619b0a27bb90e8/bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/AutoRecoveryMain.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/AutoRecoveryMain.java?ref=1a98088e38ca0a43c26d9a4847619b0a27bb90e8","patch":"@@ -109,6 +109,15 @@ public void process(WatchedEvent event) {\n         deathWatcher = new AutoRecoveryDeathWatcher(this);\n     }\n \n+    public AutoRecoveryMain(ServerConfiguration conf, ZooKeeper zk) throws IOException, InterruptedException, KeeperException,\n+            UnavailableException, CompatibilityException {\n+        this.conf = conf;\n+        this.zk = zk;\n+        auditorElector = new AuditorElector(Bookie.getBookieAddress(conf).toString(), conf, zk);\n+        replicationWorker = new ReplicationWorker(zk, conf, Bookie.getBookieAddress(conf));\n+        deathWatcher = new AutoRecoveryDeathWatcher(this);\n+    }\n+\n     /*\n      * Start daemons\n      */\n@@ -134,6 +143,7 @@ public void shutdown() {\n     }\n \n     private void shutdown(int exitCode) {\n+        LOG.info(\"Shutting down auto recovery: {}\", exitCode);\n         if (shuttingDown) {\n             return;\n         }"},{"sha":"e26d09a8d596f820ec27a3ab5a75b630bfc1d507","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/ReplicationWorker.java","status":"modified","additions":26,"deletions":7,"changes":33,"blob_url":"https://github.com/apache/bookkeeper/blob/1a98088e38ca0a43c26d9a4847619b0a27bb90e8/bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/ReplicationWorker.java","raw_url":"https://github.com/apache/bookkeeper/raw/1a98088e38ca0a43c26d9a4847619b0a27bb90e8/bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/ReplicationWorker.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/ReplicationWorker.java?ref=1a98088e38ca0a43c26d9a4847619b0a27bb90e8","patch":"@@ -156,25 +156,42 @@ public void run() {\n             try {\n                 rereplicate();\n             } catch (InterruptedException e) {\n-                shutdown();\n-                Thread.currentThread().interrupt();\n                 LOG.info(\"InterruptedException \"\n                         + \"while replicating fragments\", e);\n+                shutdown();\n+                Thread.currentThread().interrupt();\n                 return;\n             } catch (BKException e) {\n-                shutdown();\n                 LOG.error(\"BKException while replicating fragments\", e);\n-                return;\n+                if (e instanceof BKException.BKWriteOnReadOnlyBookieException) {\n+                    waitTillTargetBookieIsWritable();\n+                } else {\n+                    waitBackOffTime();\n+                }\n             } catch (UnavailableException e) {\n-                shutdown();\n                 LOG.error(\"UnavailableException \"\n                         + \"while replicating fragments\", e);\n-                return;\n+                waitBackOffTime();\n             }\n         }\n         LOG.info(\"ReplicationWorker exited loop!\");\n     }\n \n+    private static void waitBackOffTime() {\n+        try {\n+            Thread.sleep(5000);\n+        } catch (InterruptedException e) {\n+        }\n+    }\n+\n+    private void waitTillTargetBookieIsWritable() {\n+        LOG.info(\"Waiting for target bookie {} to be back in read/write mode\", targetBookie);\n+        while (admin.getReadOnlyBookies().contains(targetBookie)) {\n+            waitBackOffTime();\n+        }\n+        LOG.info(\"Target bookie {} is back in read/write mode\", targetBookie);\n+    }\n+\n     /**\n      * Replicates the under replicated fragments from failed bookie ledger to\n      * targetBookie\n@@ -378,9 +395,9 @@ public void run() {\n                             underreplicationManager\n                                     .releaseUnderreplicatedLedger(ledgerId);\n                         } catch (UnavailableException e) {\n-                            shutdown();\n                             LOG.error(\"UnavailableException \"\n                                     + \"while replicating fragments\", e);\n+                            shutdown();\n                         }\n                     }\n                 }\n@@ -393,6 +410,8 @@ public void run() {\n      * Stop the replication worker service\n      */\n     public void shutdown() {\n+        LOG.info(\"Shutting down replication worker\");\n+\n         synchronized (this) {\n             if (!workerRunning) {\n                 return;"}]}

