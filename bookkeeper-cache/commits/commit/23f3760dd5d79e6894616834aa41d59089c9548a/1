{"sha":"23f3760dd5d79e6894616834aa41d59089c9548a","node_id":"MDY6Q29tbWl0MTU3NTk1NjoyM2YzNzYwZGQ1ZDc5ZTY4OTQ2MTY4MzRhYTQxZDU5MDg5Yzk1NDhh","commit":{"author":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2014-01-21T15:41:29Z"},"committer":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2014-01-21T15:41:29Z"},"message":"BOOKKEEPER-719: Inconsistent synchronization of org.apache.bookkeeper.stats.CodahaleMetricsProvider.metrics (sijie via ivank)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1560045 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"3da582cefc1fca4e283c94a17c39f217eb38843c","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/3da582cefc1fca4e283c94a17c39f217eb38843c"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/23f3760dd5d79e6894616834aa41d59089c9548a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/23f3760dd5d79e6894616834aa41d59089c9548a","html_url":"https://github.com/apache/bookkeeper/commit/23f3760dd5d79e6894616834aa41d59089c9548a","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/23f3760dd5d79e6894616834aa41d59089c9548a/comments","author":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"committer":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"parents":[{"sha":"75f103d9d6694ae0116fe741a2dfbf60e3c63ce1","url":"https://api.github.com/repos/apache/bookkeeper/commits/75f103d9d6694ae0116fe741a2dfbf60e3c63ce1","html_url":"https://github.com/apache/bookkeeper/commit/75f103d9d6694ae0116fe741a2dfbf60e3c63ce1"}],"stats":{"total":14,"additions":10,"deletions":4},"files":[{"sha":"2b320eb50bd27efa5410e51b9f0327977d7370ec","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/23f3760dd5d79e6894616834aa41d59089c9548a/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/23f3760dd5d79e6894616834aa41d59089c9548a/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=23f3760dd5d79e6894616834aa41d59089c9548a","patch":"@@ -54,6 +54,8 @@ Trunk (unreleased changes)\n \n       BOOKKEEPER-615: Twitter stats implementation of stats interface (sijie via ivank)\n \n+      BOOKKEEPER-719: Inconsistent synchronization of org.apache.bookkeeper.stats.CodahaleMetricsProvider.metrics (sijie via ivank)\n+\n       bookkeeper-server:\n \n         BOOKKEEPER-567: ReadOnlyBookieTest hangs on shutdown (sijie via ivank)"},{"sha":"6e1b1d4dd0d9f8ce5ef89ceb8f6fabbd267092af","filename":"bookkeeper-stats-providers/codahale-metrics-provider/src/main/java/org/apache/bookkeeper/stats/CodahaleMetricsProvider.java","status":"modified","additions":8,"deletions":4,"changes":12,"blob_url":"https://github.com/apache/bookkeeper/blob/23f3760dd5d79e6894616834aa41d59089c9548a/bookkeeper-stats-providers/codahale-metrics-provider/src/main/java/org/apache/bookkeeper/stats/CodahaleMetricsProvider.java","raw_url":"https://github.com/apache/bookkeeper/raw/23f3760dd5d79e6894616834aa41d59089c9548a/bookkeeper-stats-providers/codahale-metrics-provider/src/main/java/org/apache/bookkeeper/stats/CodahaleMetricsProvider.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-stats-providers/codahale-metrics-provider/src/main/java/org/apache/bookkeeper/stats/CodahaleMetricsProvider.java?ref=23f3760dd5d79e6894616834aa41d59089c9548a","patch":"@@ -60,6 +60,10 @@ synchronized void initIfNecessary() {\n         }\n     }\n \n+    synchronized MetricRegistry getMetrics() {\n+        return metrics;\n+    }\n+\n     @Override\n     public void start(Configuration conf) {\n         initIfNecessary();\n@@ -75,7 +79,7 @@ public void start(Configuration conf) {\n             HostAndPort addr = HostAndPort.fromString(graphiteHost);\n             final Graphite graphite = new Graphite(\n                     new InetSocketAddress(addr.getHostText(), addr.getPort()));\n-            reporters.add(GraphiteReporter.forRegistry(metrics)\n+            reporters.add(GraphiteReporter.forRegistry(getMetrics())\n                           .prefixedWith(prefix)\n                           .convertRatesTo(TimeUnit.SECONDS)\n                           .convertDurationsTo(TimeUnit.MILLISECONDS)\n@@ -93,14 +97,14 @@ public void start(Configuration conf) {\n                 outdir = new File(csvDir);\n             }\n             LOG.info(\"Configuring stats with csv output to directory [{}]\", outdir.getAbsolutePath());\n-            reporters.add(CsvReporter.forRegistry(metrics)\n+            reporters.add(CsvReporter.forRegistry(getMetrics())\n                           .convertRatesTo(TimeUnit.SECONDS)\n                           .convertDurationsTo(TimeUnit.MILLISECONDS)\n                           .build(outdir));\n         }\n         if (!Strings.isNullOrEmpty(slf4jCat)) {\n             LOG.info(\"Configuring stats with slf4j\");\n-            reporters.add(Slf4jReporter.forRegistry(metrics)\n+            reporters.add(Slf4jReporter.forRegistry(getMetrics())\n                           .outputTo(LoggerFactory.getLogger(slf4jCat))\n                           .convertRatesTo(TimeUnit.SECONDS)\n                           .convertDurationsTo(TimeUnit.MILLISECONDS)\n@@ -122,6 +126,6 @@ public void stop() {\n     @Override\n     public StatsLogger getStatsLogger(String name) {\n         initIfNecessary();\n-        return new CodahaleStatsLogger(metrics, name);\n+        return new CodahaleStatsLogger(getMetrics(), name);\n     }\n }"}]}

