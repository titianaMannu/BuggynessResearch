{"sha":"24ac8ead6240aaaaa845afccb4e606fbe0da1602","node_id":"MDY6Q29tbWl0MTU3NTk1NjoyNGFjOGVhZDYyNDBhYWFhYTg0NWFmY2NiNGU2MDZmYmUwZGExNjAy","commit":{"author":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2017-07-25T09:04:36Z"},"committer":{"name":"Enrico Olivelli","email":"eolivelli@apache.org","date":"2017-07-25T09:04:36Z"},"message":"BOOKKEEPER-1044: Entrylogger is not readding rolled logs back to the logChannelsToFlush list when exception happens while trying to flush rolled logs\n\nDescriptions of the changes in this PR:\n\nThis is a straightforward fix to add unflushed list of entry log files back to flushed list.\n\nTest is missing at this point because it is a bit complicated to test this without proper mocking. I would defer adding the test later and creating a github issue later on if it makes sense.\n\nAuthor: Sijie Guo <sijie@apache.org>\n\nReviewers: Enrico Olivelli <eolivelli@apache.org>\n\nThis closes #286 from sijie/BOOKKEEPER-1044","tree":{"sha":"de111394cc97be20907b8b9bd08ce7c5a617dbb2","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/de111394cc97be20907b8b9bd08ce7c5a617dbb2"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/24ac8ead6240aaaaa845afccb4e606fbe0da1602","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/24ac8ead6240aaaaa845afccb4e606fbe0da1602","html_url":"https://github.com/apache/bookkeeper/commit/24ac8ead6240aaaaa845afccb4e606fbe0da1602","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/24ac8ead6240aaaaa845afccb4e606fbe0da1602/comments","author":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"committer":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"96d82102bef3152934f564db16373b12b1689ead","url":"https://api.github.com/repos/apache/bookkeeper/commits/96d82102bef3152934f564db16373b12b1689ead","html_url":"https://github.com/apache/bookkeeper/commit/96d82102bef3152934f564db16373b12b1689ead"}],"stats":{"total":20,"additions":18,"deletions":2},"files":[{"sha":"d277b2b186733908caea265f7cb22153317e0c4e","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/EntryLogger.java","status":"modified","additions":18,"deletions":2,"changes":20,"blob_url":"https://github.com/apache/bookkeeper/blob/24ac8ead6240aaaaa845afccb4e606fbe0da1602/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/EntryLogger.java","raw_url":"https://github.com/apache/bookkeeper/raw/24ac8ead6240aaaaa845afccb4e606fbe0da1602/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/EntryLogger.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/EntryLogger.java?ref=24ac8ead6240aaaaa845afccb4e606fbe0da1602","patch":"@@ -724,8 +724,24 @@ void flushRotatedLogs() throws IOException {\n         if (null == channels) {\n             return;\n         }\n-        for (BufferedLogChannel channel : channels) {\n-            channel.flush(true);\n+        Iterator<BufferedLogChannel> chIter = channels.iterator();\n+        while (chIter.hasNext()) {\n+            BufferedLogChannel channel = chIter.next();\n+            try {\n+                channel.flush(true);\n+            } catch (IOException ioe) {\n+                // rescue from flush exception, add unflushed channels back\n+                synchronized (this) {\n+                    if (null == logChannelsToFlush) {\n+                        logChannelsToFlush = channels;\n+                    } else {\n+                        logChannelsToFlush.addAll(0, channels);\n+                    }\n+                }\n+                throw ioe;\n+            }\n+            // remove the channel from the list after it is successfully flushed\n+            chIter.remove();\n             // since this channel is only used for writing, after flushing the channel,\n             // we had to close the underlying file channel. Otherwise, we might end up\n             // leaking fds which cause the disk spaces could not be reclaimed."}]}

