{"sha":"24e7fb03f6c9e3666aa83cc174b5088926eae3d1","node_id":"MDY6Q29tbWl0MTU3NTk1NjoyNGU3ZmIwM2Y2YzllMzY2NmFhODNjYzE3NGI1MDg4OTI2ZWFlM2Qx","commit":{"author":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2012-05-17T17:07:44Z"},"committer":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2012-05-17T17:07:44Z"},"message":"BOOKKEEPER-251: Noise error message printed when scanning entry log files those have been garbage collected. (sijie via ivank)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1339715 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"fbb72bbb4971a095d2faeea1ad81732b3897dd3a","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/fbb72bbb4971a095d2faeea1ad81732b3897dd3a"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/24e7fb03f6c9e3666aa83cc174b5088926eae3d1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/24e7fb03f6c9e3666aa83cc174b5088926eae3d1","html_url":"https://github.com/apache/bookkeeper/commit/24e7fb03f6c9e3666aa83cc174b5088926eae3d1","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/24e7fb03f6c9e3666aa83cc174b5088926eae3d1/comments","author":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"committer":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"parents":[{"sha":"1c2141183dd3422c85314b64e7b538c8faacd283","url":"https://api.github.com/repos/apache/bookkeeper/commits/1c2141183dd3422c85314b64e7b538c8faacd283","html_url":"https://github.com/apache/bookkeeper/commit/1c2141183dd3422c85314b64e7b538c8faacd283"}],"stats":{"total":36,"additions":35,"deletions":1},"files":[{"sha":"21ed476579dc886a3f9387752220e8c7504873db","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/24e7fb03f6c9e3666aa83cc174b5088926eae3d1/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/24e7fb03f6c9e3666aa83cc174b5088926eae3d1/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=24e7fb03f6c9e3666aa83cc174b5088926eae3d1","patch":"@@ -112,6 +112,8 @@ Trunk (unreleased changes)\n \n         BOOKKEEPER-224: Fix findbugs in bookkeeper-server component (ivank)\n \n+        BOOKKEEPER-251: Noise error message printed when scanning entry log files those have been garbage collected. (sijie via ivank)\n+\n       hedwig-client/\n \n         BOOKKEEPER-217: NPE in hedwig client when enable DEBUG (sijie via ivank)"},{"sha":"9c3e051ebfda32abb8607b10388791f806eada84","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/EntryLogger.java","status":"modified","additions":13,"deletions":0,"changes":13,"blob_url":"https://github.com/apache/bookkeeper/blob/24e7fb03f6c9e3666aa83cc174b5088926eae3d1/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/EntryLogger.java","raw_url":"https://github.com/apache/bookkeeper/raw/24e7fb03f6c9e3666aa83cc174b5088926eae3d1/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/EntryLogger.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/EntryLogger.java?ref=24e7fb03f6c9e3666aa83cc174b5088926eae3d1","patch":"@@ -361,6 +361,19 @@ private BufferedChannel getChannelForLogId(long entryLogId) throws IOException {\n         }\n     }\n \n+    /**\n+     * Whether the log file exists or not.\n+     */\n+    boolean logExists(long logId) {\n+        for (File d : dirs) {\n+            File f = new File(d, Long.toHexString(logId) + \".log\");\n+            if (f.exists()) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n+\n     private File findFile(long logId) throws FileNotFoundException {\n         for(File d: dirs) {\n             File f = new File(d, Long.toHexString(logId)+\".log\");"},{"sha":"139e1c3590722e5919f8481525aeb46fc87ccb95","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/GarbageCollectorThread.java","status":"modified","additions":20,"deletions":1,"changes":21,"blob_url":"https://github.com/apache/bookkeeper/blob/24e7fb03f6c9e3666aa83cc174b5088926eae3d1/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/GarbageCollectorThread.java","raw_url":"https://github.com/apache/bookkeeper/raw/24e7fb03f6c9e3666aa83cc174b5088926eae3d1/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/GarbageCollectorThread.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/GarbageCollectorThread.java?ref=24e7fb03f6c9e3666aa83cc174b5088926eae3d1","patch":"@@ -81,6 +81,9 @@\n \n     volatile boolean running = true;\n \n+    // track the last scanned successfully log id\n+    long scannedLogId = 0;\n+\n     /**\n      * A scanner wrapper to check whether a ledger is alive in an entry log file\n      */\n@@ -458,21 +461,37 @@ public void process(long ledgerId, ByteBuffer entry) {\n         // Entry Log ID's are just a long value that starts at 0 and increments\n         // by 1 when the log fills up and we roll to a new one.\n         long curLogId = entryLogger.getCurrentLogId();\n-        for (long entryLogId = 0; entryLogId < curLogId; entryLogId++) {\n+        boolean hasExceptionWhenScan = false;\n+        for (long entryLogId = scannedLogId; entryLogId < curLogId; entryLogId++) {\n             // Comb the current entry log file if it has not already been extracted.\n             if (entryLogMetaMap.containsKey(entryLogId)) {\n                 continue;\n             }\n+\n+            // check whether log file exists or not\n+            // if it doesn't exist, this log file might have been garbage collected.\n+            if (!entryLogger.logExists(entryLogId)) {\n+                continue;\n+            }\n+\n             LOG.info(\"Extracting entry log meta from entryLogId: \" + entryLogId);\n \n             try {\n                 // Read through the entry log file and extract the entry log meta\n                 EntryLogMetadata entryLogMeta = extractMetaFromEntryLog(entryLogger, entryLogId);\n                 entryLogMetaMap.put(entryLogId, entryLogMeta);\n             } catch (IOException e) {\n+                hasExceptionWhenScan = true;\n                 LOG.warn(\"Premature exception when processing \" + entryLogId +\n                          \"recovery will take care of the problem\", e);\n             }\n+\n+            // if scan failed on some entry log, we don't move 'scannedLogId' to next id\n+            // if scan succeed, we don't need to scan it again during next gc run,\n+            // we move 'scannedLogId' to next id\n+            if (!hasExceptionWhenScan) {\n+                ++scannedLogId;\n+            }\n         }\n         return entryLogMetaMap;\n     }"}]}

