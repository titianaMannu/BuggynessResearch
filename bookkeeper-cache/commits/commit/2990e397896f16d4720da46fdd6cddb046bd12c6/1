{"sha":"2990e397896f16d4720da46fdd6cddb046bd12c6","node_id":"MDY6Q29tbWl0MTU3NTk1NjoyOTkwZTM5Nzg5NmYxNmQ0NzIwZGE0NmZkZDZjZGRiMDQ2YmQxMmM2","commit":{"author":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2014-04-24T12:44:49Z"},"committer":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2014-04-24T12:44:49Z"},"message":"BOOKKEEPER-743: Periodic ledger check running too often as doc doesn't match implementation. (ivank)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1589695 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"5573562227b3fd5a74f12d05e46d74265ab9bfbd","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/5573562227b3fd5a74f12d05e46d74265ab9bfbd"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/2990e397896f16d4720da46fdd6cddb046bd12c6","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/2990e397896f16d4720da46fdd6cddb046bd12c6","html_url":"https://github.com/apache/bookkeeper/commit/2990e397896f16d4720da46fdd6cddb046bd12c6","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/2990e397896f16d4720da46fdd6cddb046bd12c6/comments","author":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"committer":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"parents":[{"sha":"8352661299d6e4538600a1c251ab304825c4b4dd","url":"https://api.github.com/repos/apache/bookkeeper/commits/8352661299d6e4538600a1c251ab304825c4b4dd","html_url":"https://github.com/apache/bookkeeper/commit/8352661299d6e4538600a1c251ab304825c4b4dd"}],"stats":{"total":18,"additions":10,"deletions":8},"files":[{"sha":"7d7fac3f0528fe8bbc6c450a22ba0553c33edb93","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/2990e397896f16d4720da46fdd6cddb046bd12c6/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/2990e397896f16d4720da46fdd6cddb046bd12c6/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=2990e397896f16d4720da46fdd6cddb046bd12c6","patch":"@@ -22,6 +22,8 @@ Release 4.2.3 - 2013-12-04\n \n         BOOKKEEPER-742: Fix for empty ledgers losing quorum. (ivank)\n \n+        BOOKKEEPER-743: Periodic ledger check running too often as doc doesn't match implementation. (ivank)\n+\n Release 4.2.2 - 2013-10-02\n \n   Backward compatible changes:"},{"sha":"00c32c96c50fd40e3396871cd3a2f0b94be04242","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/Auditor.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/2990e397896f16d4720da46fdd6cddb046bd12c6/bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/Auditor.java","raw_url":"https://github.com/apache/bookkeeper/raw/2990e397896f16d4720da46fdd6cddb046bd12c6/bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/Auditor.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/Auditor.java?ref=2990e397896f16d4720da46fdd6cddb046bd12c6","patch":"@@ -232,7 +232,7 @@ public void run() {\n                                           +\"running periodic check\", ue);\n                             }\n                         }\n-                    }, interval, interval, TimeUnit.MILLISECONDS);\n+                    }, interval, interval, TimeUnit.SECONDS);\n             } else {\n                 LOG.info(\"Periodic checking disabled\");\n             }"},{"sha":"7bd03d96fc456eddb7395755376977c75b2e5627","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/replication/AuditorPeriodicCheckTest.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/apache/bookkeeper/blob/2990e397896f16d4720da46fdd6cddb046bd12c6/bookkeeper-server/src/test/java/org/apache/bookkeeper/replication/AuditorPeriodicCheckTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/2990e397896f16d4720da46fdd6cddb046bd12c6/bookkeeper-server/src/test/java/org/apache/bookkeeper/replication/AuditorPeriodicCheckTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/replication/AuditorPeriodicCheckTest.java?ref=2990e397896f16d4720da46fdd6cddb046bd12c6","patch":"@@ -66,7 +66,7 @@\n     private HashMap<String, AuditorElector> auditorElectors = new HashMap<String, AuditorElector>();\n     private List<ZooKeeper> zkClients = new LinkedList<ZooKeeper>();\n \n-    private final static int CHECK_INTERVAL = 1000; // run every second\n+    private final static int CHECK_INTERVAL = 1; // run every second\n \n     public AuditorPeriodicCheckTest() {\n         super(3);\n@@ -153,7 +153,7 @@ public boolean accept(File dir, String name) {\n             if (underReplicatedLedger != -1) {\n                 break;\n             }\n-            Thread.sleep(CHECK_INTERVAL);\n+            Thread.sleep(CHECK_INTERVAL * 1000);\n         }\n         assertEquals(\"Ledger should be under replicated\", ledgerId, underReplicatedLedger);\n         underReplicationManager.close();\n@@ -201,7 +201,7 @@ public void testIndexCorruption() throws Exception {\n             if (underReplicatedLedger != -1) {\n                 break;\n             }\n-            Thread.sleep(CHECK_INTERVAL);\n+            Thread.sleep(CHECK_INTERVAL * 1000);\n         }\n         assertEquals(\"Ledger should be under replicated\", ledgerToCorrupt, underReplicatedLedger);\n         underReplicationManager.close();\n@@ -241,14 +241,14 @@ public ByteBuffer readEntry(long ledgerId, long entryId)\n         bsConfs.add(conf);\n         bs.add(startBookie(conf, deadBookie));\n \n-        Thread.sleep(CHECK_INTERVAL * 2);\n+        Thread.sleep(CHECK_INTERVAL * 2000);\n         assertEquals(\"Nothing should have tried to read\", 0, numReads.get());\n         underReplicationManager.enableLedgerReplication();\n-        Thread.sleep(CHECK_INTERVAL * 2); // give it time to run\n+        Thread.sleep(CHECK_INTERVAL * 2000); // give it time to run\n \n         underReplicationManager.disableLedgerReplication();\n         // give it time to stop, from this point nothing new should be marked\n-        Thread.sleep(CHECK_INTERVAL * 2);\n+        Thread.sleep(CHECK_INTERVAL * 2000);\n \n         int numUnderreplicated = 0;\n         long underReplicatedLedger = -1;\n@@ -262,7 +262,7 @@ public ByteBuffer readEntry(long ledgerId, long entryId)\n             underReplicationManager.markLedgerReplicated(underReplicatedLedger);\n         } while (underReplicatedLedger != -1);\n \n-        Thread.sleep(CHECK_INTERVAL * 2); // give a chance to run again (it shouldn't, it's disabled)\n+        Thread.sleep(CHECK_INTERVAL * 2000); // give a chance to run again (it shouldn't, it's disabled)\n \n         // ensure that nothing is marked as underreplicated\n         underReplicatedLedger = underReplicationManager.pollLedgerToRereplicate();"}]}

