{"sha":"30c326643938bb3df6b35515e714622d98772352","node_id":"MDY6Q29tbWl0MTU3NTk1NjozMGMzMjY2NDM5MzhiYjNkZjZiMzU1MTVlNzE0NjIyZDk4NzcyMzUy","commit":{"author":{"name":"Benjamin Reed","email":"breed@apache.org","date":"2011-04-08T16:35:23Z"},"committer":{"name":"Benjamin Reed","email":"breed@apache.org","date":"2011-04-08T16:35:23Z"},"message":"more fixing of the build (ivankelly via breed)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1090338 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"87b6a0a05a20bf521728ddd7064d7ba121b0b933","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/87b6a0a05a20bf521728ddd7064d7ba121b0b933"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/30c326643938bb3df6b35515e714622d98772352","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/30c326643938bb3df6b35515e714622d98772352","html_url":"https://github.com/apache/bookkeeper/commit/30c326643938bb3df6b35515e714622d98772352","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/30c326643938bb3df6b35515e714622d98772352/comments","author":{"login":"breed","id":143779,"node_id":"MDQ6VXNlcjE0Mzc3OQ==","avatar_url":"https://avatars.githubusercontent.com/u/143779?v=4","gravatar_id":"","url":"https://api.github.com/users/breed","html_url":"https://github.com/breed","followers_url":"https://api.github.com/users/breed/followers","following_url":"https://api.github.com/users/breed/following{/other_user}","gists_url":"https://api.github.com/users/breed/gists{/gist_id}","starred_url":"https://api.github.com/users/breed/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/breed/subscriptions","organizations_url":"https://api.github.com/users/breed/orgs","repos_url":"https://api.github.com/users/breed/repos","events_url":"https://api.github.com/users/breed/events{/privacy}","received_events_url":"https://api.github.com/users/breed/received_events","type":"User","site_admin":false},"committer":{"login":"breed","id":143779,"node_id":"MDQ6VXNlcjE0Mzc3OQ==","avatar_url":"https://avatars.githubusercontent.com/u/143779?v=4","gravatar_id":"","url":"https://api.github.com/users/breed","html_url":"https://github.com/breed","followers_url":"https://api.github.com/users/breed/followers","following_url":"https://api.github.com/users/breed/following{/other_user}","gists_url":"https://api.github.com/users/breed/gists{/gist_id}","starred_url":"https://api.github.com/users/breed/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/breed/subscriptions","organizations_url":"https://api.github.com/users/breed/orgs","repos_url":"https://api.github.com/users/breed/repos","events_url":"https://api.github.com/users/breed/events{/privacy}","received_events_url":"https://api.github.com/users/breed/received_events","type":"User","site_admin":false},"parents":[{"sha":"e988271acee2c217209d5c7f52c07f6211257e97","url":"https://api.github.com/repos/apache/bookkeeper/commits/e988271acee2c217209d5c7f52c07f6211257e97","html_url":"https://github.com/apache/bookkeeper/commit/e988271acee2c217209d5c7f52c07f6211257e97"}],"stats":{"total":365,"additions":193,"deletions":172},"files":[{"sha":"06b281fb68c422c0b20e855638de31193c66a329","filename":"bookkeeper-benchmark/pom.xml","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/apache/bookkeeper/blob/30c326643938bb3df6b35515e714622d98772352/bookkeeper-benchmark/pom.xml","raw_url":"https://github.com/apache/bookkeeper/raw/30c326643938bb3df6b35515e714622d98772352/bookkeeper-benchmark/pom.xml","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-benchmark/pom.xml?ref=30c326643938bb3df6b35515e714622d98772352","patch":"@@ -3,13 +3,12 @@\n     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n   <modelVersion>4.0.0</modelVersion>\n   <parent>\n-    <artifactId>bookkeeper_project</artifactId>\n+    <artifactId>bookkeeper</artifactId>\n     <groupId>org.apache.bookkeeper</groupId>\n     <version>3.4.0-SNAPSHOT</version>\n   </parent>\n   <groupId>org.apache.bookkeeper</groupId>\n   <artifactId>bookkeeper-benchmark</artifactId>\n-  <version>3.4.0-SNAPSHOT</version>\n   <name>bookkeeper-benchmark</name>\n   <url>http://maven.apache.org</url>\n   <properties>\n@@ -32,14 +31,14 @@\n     <dependency>\n     \t<groupId>org.apache.zookeeper</groupId>\n     \t<artifactId>zookeeper</artifactId>\n-    \t<version>3.3.3</version>\n+    \t<version>3.4.0</version>\n     \t<type>jar</type>\n     \t<scope>compile</scope>\n     </dependency>\n     <dependency>\n     \t<groupId>org.apache.zookeeper</groupId>\n     \t<artifactId>zookeeper-test</artifactId>\n-    \t<version>3.3.3</version>\n+    \t<version>3.4.0</version>\n     \t<type>jar</type>\n     \t<scope>compile</scope>\n     </dependency>\n@@ -51,8 +50,8 @@\n     </dependency>\n     <dependency>\n       <groupId>org.apache.bookkeeper</groupId>\n-      <artifactId>bookkeeper</artifactId>\n-      <version>3.4.0</version>\n+      <artifactId>bookkeeper-server</artifactId>\n+      <version>3.4.0-SNAPSHOT</version>\n       <scope>compile</scope>\n     </dependency>\n   </dependencies>"},{"sha":"d29055f205e95d18486611aa829ef276ee1dfc99","filename":"bookkeeper-benchmark/src/main/java/org/apache/bookkeeper/benchmark/MySqlClient.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/apache/bookkeeper/blob/30c326643938bb3df6b35515e714622d98772352/bookkeeper-benchmark/src/main/java/org/apache/bookkeeper/benchmark/MySqlClient.java","raw_url":"https://github.com/apache/bookkeeper/raw/30c326643938bb3df6b35515e714622d98772352/bookkeeper-benchmark/src/main/java/org/apache/bookkeeper/benchmark/MySqlClient.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-benchmark/src/main/java/org/apache/bookkeeper/benchmark/MySqlClient.java?ref=30c326643938bb3df6b35515e714622d98772352","patch":"@@ -27,14 +27,13 @@\n \n import org.apache.bookkeeper.client.BookKeeper;\n import org.apache.bookkeeper.client.LedgerHandle;\n-import org.apache.bookkeeper.client.QuorumEngine;\n import org.apache.log4j.Logger;\n \n \n import org.apache.zookeeper.KeeperException;\n \n public class MySqlClient {\n-\tstatic Logger LOG = Logger.getLogger(QuorumEngine.class);\n+\tstatic Logger LOG = Logger.getLogger(MySqlClient.class);\n \n \tBookKeeper x;\n \tLedgerHandle lh;"},{"sha":"35519c805021f13220d971c4eab8c73ca9c9eb72","filename":"bookkeeper-benchmark/src/main/java/org/apache/bookkeeper/benchmark/TestClient.java","status":"modified","additions":15,"deletions":18,"changes":33,"blob_url":"https://github.com/apache/bookkeeper/blob/30c326643938bb3df6b35515e714622d98772352/bookkeeper-benchmark/src/main/java/org/apache/bookkeeper/benchmark/TestClient.java","raw_url":"https://github.com/apache/bookkeeper/raw/30c326643938bb3df6b35515e714622d98772352/bookkeeper-benchmark/src/main/java/org/apache/bookkeeper/benchmark/TestClient.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-benchmark/src/main/java/org/apache/bookkeeper/benchmark/TestClient.java?ref=30c326643938bb3df6b35515e714622d98772352","patch":"@@ -27,14 +27,13 @@\n import java.util.Enumeration;\n import java.util.HashMap;\n \n-import org.apache.bookkeeper.client.AddCallback;\n+import org.apache.bookkeeper.client.AsyncCallback.AddCallback;\n+import org.apache.bookkeeper.client.AsyncCallback.ReadCallback;\n import org.apache.bookkeeper.client.BKException;\n import org.apache.bookkeeper.client.BookKeeper;\n import org.apache.bookkeeper.client.LedgerEntry;\n import org.apache.bookkeeper.client.LedgerHandle;\n-import org.apache.bookkeeper.client.QuorumEngine;\n-import org.apache.bookkeeper.client.ReadCallback;\n-import org.apache.bookkeeper.client.LedgerHandle.QMode;\n+import org.apache.bookkeeper.client.BookKeeper.DigestType;\n import org.apache.log4j.Logger;\n \n import org.apache.zookeeper.KeeperException;\n@@ -67,7 +66,7 @@ public TestClient(String servers) throws KeeperException, IOException, Interrupt\n         this();\n         x = new BookKeeper(servers);\n         try{\n-        lh = x.createLedger(new byte[] {'a', 'b'});\n+\t    lh = x.createLedger(DigestType.MAC, new byte[] {'a', 'b'});\n         } catch (BKException e) {\n             LOG.error(e.toString());\n         }\n@@ -78,7 +77,7 @@ public TestClient(String servers, int ensSize, int qSize)\n         this();\n         x = new BookKeeper(servers);\n         try{\n-        lh = x.createLedger(ensSize, qSize, QMode.VERIFIABLE, new byte[] {'a', 'b'});\n+        lh = x.createLedger(ensSize, qSize, DigestType.MAC, new byte[] {'a', 'b'});\n         } catch (BKException e) {\n             LOG.error(e.toString());\n         }\n@@ -115,7 +114,7 @@ public boolean removeEntryId(Integer id){\n     }\n \n     public void closeHandle() throws KeeperException, InterruptedException{\n-        x.closeLedger(lh);\n+        lh.close();\n     }\n     /**\n      * First says if entries should be written to BookKeeper (0) or to the local\n@@ -175,7 +174,7 @@ void writeSameEntryBatch(byte[] data, int times) throws InterruptedException{\n         int count = times;\n         LOG.debug(\"Data: \" + new String(data) + \", \" + data.length);\n         while(count-- > 0){\n-            x.asyncAddEntry(lh, data, this, this.getFreshEntryId(2));\n+            lh.asyncAddEntry(data, this, this.getFreshEntryId(2));\n         }\n         LOG.debug(\"Finished \" + times + \" async writes in ms: \" + (System.currentTimeMillis() - start));       \n         synchronized (map) {\n@@ -196,7 +195,7 @@ void writeConsecutiveEntriesBatch(int times) throws InterruptedException{\n             int k = (count+1)%100;\n             write[0] = (byte) j;\n             write[1] = (byte) k;\n-            x.asyncAddEntry(lh, write, this, this.getFreshEntryId(2));\n+            lh.asyncAddEntry(write, this, this.getFreshEntryId(2));\n         }\n         LOG.debug(\"Finished \" + times + \" async writes in ms: \" + (System.currentTimeMillis() - start));       \n         synchronized (map) {\n@@ -207,13 +206,9 @@ void writeConsecutiveEntriesBatch(int times) throws InterruptedException{\n         \n         Integer mon = Integer.valueOf(0);\n         synchronized(mon){\n-            try{\n-                x.asyncReadEntries(lh, 1, times - 1, this, mon);\n-                mon.wait();\n-            } catch (BKException e){\n-                LOG.error(e);\n-            }\n-        }\n+\t    lh.asyncReadEntries(1, times - 1, this, mon);\n+\t    mon.wait();\n+         }\n         LOG.error(\"Ended computation\");\n     }\n \n@@ -235,11 +230,13 @@ void writeSameEntryBatchFS(byte[] data, int times) {\n     }\n         \n    \n-    public void addComplete(int rc, long ledgerId, long entryId, Object ctx) {\n+    @Override\n+    public void addComplete(int rc, LedgerHandle lh, long entryId, Object ctx) {\n         this.removeEntryId((Integer) ctx);\n     }\n    \n-    public void readComplete(int rc, long ledgerId, Enumeration<LedgerEntry> seq, Object ctx){\n+    @Override\n+    public void readComplete(int rc, LedgerHandle lh, Enumeration<LedgerEntry> seq, Object ctx){\n         System.out.println(\"Read callback: \" + rc);\n         while(seq.hasMoreElements()){\n             LedgerEntry le = seq.nextElement();"},{"sha":"9e68c5cc61e5bd1ce92b4e6edea198991fd60b4a","filename":"bookkeeper-server/pom.xml","status":"modified","additions":33,"deletions":6,"changes":39,"blob_url":"https://github.com/apache/bookkeeper/blob/30c326643938bb3df6b35515e714622d98772352/bookkeeper-server/pom.xml","raw_url":"https://github.com/apache/bookkeeper/raw/30c326643938bb3df6b35515e714622d98772352/bookkeeper-server/pom.xml","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/pom.xml?ref=30c326643938bb3df6b35515e714622d98772352","patch":"@@ -3,13 +3,12 @@\n     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n   <modelVersion>4.0.0</modelVersion>\n   <parent>\n-    <artifactId>bookkeeper_project</artifactId>\n+    <artifactId>bookkeeper</artifactId>\n     <groupId>org.apache.bookkeeper</groupId>\n     <version>3.4.0-SNAPSHOT</version>\n   </parent>\n   <groupId>org.apache.bookkeeper</groupId>\n   <artifactId>bookkeeper-server</artifactId>\n-  <version>3.4.0-SNAPSHOT</version>\n   <name>bookkeeper-server</name>\n   <url>http://maven.apache.org</url>\n   <properties>\n@@ -44,15 +43,43 @@\n     <dependency>\n       <groupId>org.jboss.netty</groupId>\n       <artifactId>netty</artifactId>\n-      <version>3.1.2.GA</version>\n+      <version>3.2.4.Final</version>\n       <scope>compile</scope>\n     </dependency>\n   </dependencies>\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <artifactId>maven-assembly-plugin</artifactId>\n+        <configuration>\n+          <descriptorRefs>\n+            <descriptorRef>jar-with-dependencies</descriptorRef>\n+          </descriptorRefs>\n+          <archive>\n+            <manifest>\n+              <mainClass>${mainclass}</mainClass>\n+            </manifest>\n+          </archive>\n+        </configuration>\n+        <executions>\n+          <execution>\n+            <id>make-assembly</id>\n+            <phase>package</phase>\n+            <goals>\n+              <goal>attached</goal>\n+            </goals>\n+          </execution>\n+        </executions>\n+      </plugin>\n+    </plugins>\n+  </build>\n   <repositories>\n     <repository>\n-      <id>jboss.release</id>\n-      <name>JBoss releases</name>\n-      <url>http://repository.jboss.org/maven2</url>\n+      <id>repository.jboss.org</id>\n+      <url>http://repository.jboss.org/nexus/content/groups/public/</url>\n+      <snapshots>\n+        <enabled>false</enabled>\n+      </snapshots>\n     </repository>\n   </repositories>\n </project>"},{"sha":"898ba342e503b18056b629d8895716dbc403e525","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/util/LocalBookKeeper.java","status":"modified","additions":101,"deletions":101,"changes":202,"blob_url":"https://github.com/apache/bookkeeper/blob/30c326643938bb3df6b35515e714622d98772352/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/LocalBookKeeper.java","raw_url":"https://github.com/apache/bookkeeper/raw/30c326643938bb3df6b35515e714622d98772352/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/LocalBookKeeper.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/LocalBookKeeper.java?ref=30c326643938bb3df6b35515e714622d98772352","patch":"@@ -38,130 +38,130 @@\n import org.apache.zookeeper.Watcher;\n import org.apache.zookeeper.ZooKeeper;\n import org.apache.zookeeper.ZooDefs.Ids;\n-import org.apache.zookeeper.server.NIOServerCnxn.Factory;\n+import org.apache.zookeeper.server.NIOServerCnxnFactory;\n import org.apache.zookeeper.server.ZooKeeperServer;\n \n public class LocalBookKeeper {\n     protected static final Logger LOG = Logger.getLogger(LocalBookKeeper.class);\n     public static final int CONNECTION_TIMEOUT = 30000;\n     \n-\tConsoleAppender ca;\n-\tint numberOfBookies;\n-\t\n-\tpublic LocalBookKeeper() {\n-\t\tca = new ConsoleAppender(new PatternLayout());\n-\t\tLOG.addAppender(ca);\n-\t\tLOG.setLevel(Level.INFO);\n-\t\tnumberOfBookies = 3;\n-\t}\n-\t\n-\tpublic LocalBookKeeper(int numberOfBookies){\n-\t\tthis();\n-\t\tthis.numberOfBookies = numberOfBookies;\n-\t\tLOG.info(\"Running \" + this.numberOfBookies + \" bookie(s).\");\n-\t}\n-\t\n-\tprivate final String HOSTPORT = \"127.0.0.1:2181\";\n-\tFactory serverFactory;\n-\tZooKeeperServer zks;\n-\tZooKeeper zkc;\n-\tint ZooKeeperDefaultPort = 2181;\n-\tFile ZkTmpDir;\n-\n-\t//BookKeeper variables\n-\tFile tmpDirs[];\n-\tBookieServer bs[];\n-\tInteger initialPort = 5000;\n-\n-\t/**\n-\t * @param args\n-\t */\n+    ConsoleAppender ca;\n+    int numberOfBookies;\n+    \n+    public LocalBookKeeper() {\n+\tca = new ConsoleAppender(new PatternLayout());\n+\tLOG.addAppender(ca);\n+\tLOG.setLevel(Level.INFO);\n+\tnumberOfBookies = 3;\n+    }\n+    \n+    public LocalBookKeeper(int numberOfBookies){\n+\tthis();\n+\tthis.numberOfBookies = numberOfBookies;\n+\tLOG.info(\"Running \" + this.numberOfBookies + \" bookie(s).\");\n+    }\n+    \n+    private final String HOSTPORT = \"127.0.0.1:2181\";\n+    NIOServerCnxnFactory serverFactory;\n+    ZooKeeperServer zks;\n+    ZooKeeper zkc;\n+    int ZooKeeperDefaultPort = 2181;\n+    File ZkTmpDir;\n+    \n+    //BookKeeper variables\n+    File tmpDirs[];\n+    BookieServer bs[];\n+    Integer initialPort = 5000;\n+    \n+    /**\n+     * @param args\n+     */\n \t\n-\tprivate void runZookeeper(int maxCC) throws IOException{\n-\t\t// create a ZooKeeper server(dataDir, dataLogDir, port)\n-\t\tLOG.info(\"Starting ZK server\");\n-\t\t//ServerStats.registerAsConcrete();\n-\t\t//ClientBase.setupTestEnv();\n-\t\tZkTmpDir = File.createTempFile(\"zookeeper\", \"test\");\n+    private void runZookeeper(int maxCC) throws IOException{\n+\t// create a ZooKeeper server(dataDir, dataLogDir, port)\n+\tLOG.info(\"Starting ZK server\");\n+\t//ServerStats.registerAsConcrete();\n+\t//ClientBase.setupTestEnv();\n+\tZkTmpDir = File.createTempFile(\"zookeeper\", \"test\");\n         ZkTmpDir.delete();\n         ZkTmpDir.mkdir();\n \t\t    \n-\t\ttry {\n-\t\t\tzks = new ZooKeeperServer(ZkTmpDir, ZkTmpDir, ZooKeeperDefaultPort);\n-\t\t\tserverFactory =  new Factory(new InetSocketAddress(ZooKeeperDefaultPort));\n-\t\t\t//serverFactory.configure(new InetSocketAddress(ZooKeeperDefaultPort), maxCC);\n-\t\t\tserverFactory.startup(zks);\n-\t\t} catch (Exception e) {\n-\t\t\t// TODO Auto-generated catch block\n-\t\t\tLOG.fatal(\"Exception while instantiating ZooKeeper\", e);\n-\t\t} \n+\ttry {\n+\t    zks = new ZooKeeperServer(ZkTmpDir, ZkTmpDir, ZooKeeperDefaultPort);\n+\t    serverFactory =  new NIOServerCnxnFactory();\n+\t    serverFactory.configure(new InetSocketAddress(ZooKeeperDefaultPort), maxCC);\n+\t    serverFactory.startup(zks);\n+\t} catch (Exception e) {\n+\t    // TODO Auto-generated catch block\n+\t    LOG.fatal(\"Exception while instantiating ZooKeeper\", e);\n+\t} \n \n         boolean b = waitForServerUp(HOSTPORT, CONNECTION_TIMEOUT);\n         LOG.debug(\"ZooKeeper server up: \" + b);\n-\t}\n+    }\n \t\n-\tprivate void initializeZookeper(){\n-\t\tLOG.info(\"Instantiate ZK Client\");\n-\t\t//initialize the zk client with values\n-\t\ttry {\n-\t\t\tzkc = new ZooKeeper(\"127.0.0.1\", ZooKeeperDefaultPort, new emptyWatcher());\n-\t\t\tzkc.create(\"/ledgers\", new byte[0], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n-\t\t\tzkc.create(\"/ledgers/available\", new byte[0], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n+    private void initializeZookeper(){\n+\tLOG.info(\"Instantiate ZK Client\");\n+\t//initialize the zk client with values\n+\ttry {\n+\t    zkc = new ZooKeeper(\"127.0.0.1\", ZooKeeperDefaultPort, new emptyWatcher());\n+\t    zkc.create(\"/ledgers\", new byte[0], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n+\t    zkc.create(\"/ledgers/available\", new byte[0], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n             // No need to create an entry for each requested bookie anymore as the \n             // BookieServers will register themselves with ZooKeeper on startup.\n-\t\t} catch (KeeperException e) {\n-\t\t\t// TODO Auto-generated catch block\n-\t\t\tLOG.fatal(\"Exception while creating znodes\", e);\n-\t\t} catch (InterruptedException e) {\n-\t\t\t// TODO Auto-generated catch block\n-\t\t\tLOG.fatal(\"Interrupted while creating znodes\", e);\n-\t\t} catch (IOException e) {\n-\t\t\t// TODO Auto-generated catch block\n-\t\t\tLOG.fatal(\"Exception while creating znodes\", e);\n-\t\t}\t\t\n-\t}\n-\tprivate void runBookies() throws IOException{\n-\t\tLOG.info(\"Starting Bookie(s)\");\n-\t\t// Create Bookie Servers (B1, B2, B3)\n+\t} catch (KeeperException e) {\n+\t    // TODO Auto-generated catch block\n+\t    LOG.fatal(\"Exception while creating znodes\", e);\n+\t} catch (InterruptedException e) {\n+\t    // TODO Auto-generated catch block\n+\t    LOG.fatal(\"Interrupted while creating znodes\", e);\n+\t} catch (IOException e) {\n+\t    // TODO Auto-generated catch block\n+\t    LOG.fatal(\"Exception while creating znodes\", e);\n+\t}\t\t\n+    }\n+    private void runBookies() throws IOException{\n+\tLOG.info(\"Starting Bookie(s)\");\n+\t// Create Bookie Servers (B1, B2, B3)\n \t\t\n-\t\ttmpDirs = new File[numberOfBookies];\t\t\n-\t\tbs = new BookieServer[numberOfBookies];\n+\ttmpDirs = new File[numberOfBookies];\t\t\n+\tbs = new BookieServer[numberOfBookies];\n \t\t\n-\t\tfor(int i = 0; i < numberOfBookies; i++){\n-\t\t\ttmpDirs[i] = File.createTempFile(\"bookie\" + Integer.toString(i), \"test\");\n-\t\t\ttmpDirs[i].delete();\n-\t\t\ttmpDirs[i].mkdir();\n+\tfor(int i = 0; i < numberOfBookies; i++){\n+\t    tmpDirs[i] = File.createTempFile(\"bookie\" + Integer.toString(i), \"test\");\n+\t    tmpDirs[i].delete();\n+\t    tmpDirs[i].mkdir();\n \t\t\t\n-\t\t\tbs[i] = new BookieServer(initialPort + i, InetAddress.getLocalHost().getHostAddress() + \":\"\n-                    + ZooKeeperDefaultPort, tmpDirs[i], new File[]{tmpDirs[i]});\n-\t\t\tbs[i].start();\n-\t\t}\t\t\n-\t}\n+\t    bs[i] = new BookieServer(initialPort + i, InetAddress.getLocalHost().getHostAddress() + \":\"\n+\t\t\t\t     + ZooKeeperDefaultPort, tmpDirs[i], new File[]{tmpDirs[i]});\n+\t    bs[i].start();\n+\t}\t\t\n+    }\n \t\n-\tpublic static void main(String[] args) throws IOException, InterruptedException {\n-\t\tif(args.length < 1){\n-\t\t\tusage();\n-\t\t\tSystem.exit(-1);\n-\t\t}\n-\t\tLocalBookKeeper lb = new LocalBookKeeper(Integer.parseInt(args[0]));\n-\t\tlb.runZookeeper(1000);\n-\t\tlb.initializeZookeper();\n-\t\tlb.runBookies();\n-\t\twhile (true){\n-\t\t\tThread.sleep(5000);\n-\t\t}\n+    public static void main(String[] args) throws IOException, InterruptedException {\n+\tif(args.length < 1){\n+\t    usage();\n+\t    System.exit(-1);\n \t}\n-\n-\tprivate static void usage() {\n-\t\tSystem.err.println(\"Usage: LocalBookKeeper number-of-bookies\");\t\n+\tLocalBookKeeper lb = new LocalBookKeeper(Integer.parseInt(args[0]));\n+\tlb.runZookeeper(1000);\n+\tlb.initializeZookeper();\n+\tlb.runBookies();\n+\twhile (true){\n+\t    Thread.sleep(5000);\n \t}\n+    }\n \n-\t/*\tUser for testing purposes, void */\n-\tclass emptyWatcher implements Watcher{\n-\t\tpublic void process(WatchedEvent event) {}\n-\t}\n+    private static void usage() {\n+\tSystem.err.println(\"Usage: LocalBookKeeper number-of-bookies\");\t\n+    }\n+\n+    /*\tUser for testing purposes, void */\n+    class emptyWatcher implements Watcher{\n+\tpublic void process(WatchedEvent event) {}\n+    }\n \t\n-\tpublic static boolean waitForServerUp(String hp, long timeout) {\n+    public static boolean waitForServerUp(String hp, long timeout) {\n         long start = System.currentTimeMillis();\n         String split[] = hp.split(\":\");\n         String host = split[0];\n@@ -177,7 +177,7 @@ public static boolean waitForServerUp(String hp, long timeout) {\n \n                     reader =\n                         new BufferedReader(\n-                                new InputStreamReader(sock.getInputStream()));\n+\t\t\t\t\t   new InputStreamReader(sock.getInputStream()));\n                     String line = reader.readLine();\n                     if (line != null && line.startsWith(\"Zookeeper version:\")) {\n                         LOG.info(\"Server UP\");"},{"sha":"f9f18178319c13ce0f351ccb1e49843740f508e9","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BaseTestCase.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/apache/bookkeeper/blob/30c326643938bb3df6b35515e714622d98772352/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BaseTestCase.java","raw_url":"https://github.com/apache/bookkeeper/raw/30c326643938bb3df6b35515e714622d98772352/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BaseTestCase.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BaseTestCase.java?ref=30c326643938bb3df6b35515e714622d98772352","patch":"@@ -37,7 +37,7 @@\n import org.apache.zookeeper.Watcher;\n import org.apache.zookeeper.ZooKeeper;\n import org.apache.zookeeper.ZooDefs.Ids;\n-import org.apache.zookeeper.server.NIOServerCnxn.Factory;\n+import org.apache.zookeeper.server.NIOServerCnxnFactory;\n import org.apache.zookeeper.server.ZooKeeperServer;\n import org.apache.zookeeper.test.ClientBase;\n import org.junit.After;\n@@ -56,7 +56,7 @@\n     static Integer ZooKeeperDefaultPort = 2181;\n     ZooKeeperServer zks;\n     ZooKeeper zkc; // zookeeper client\n-    Factory serverFactory;\n+    NIOServerCnxnFactory serverFactory;\n     File ZkTmpDir;\n \n     // BookKeeper\n@@ -89,8 +89,8 @@ public void setUp() throws Exception {\n         ZkTmpDir.mkdir();\n \n         zks = new ZooKeeperServer(ZkTmpDir, ZkTmpDir, ZooKeeperDefaultPort);\n-        serverFactory = new Factory(new InetSocketAddress(ZooKeeperDefaultPort));\n-        //serverFactory.configure(new InetSocketAddress(ZooKeeperDefaultPort), 100);\n+        serverFactory = new NIOServerCnxnFactory();\n+        serverFactory.configure(new InetSocketAddress(ZooKeeperDefaultPort), 100);\n         serverFactory.startup(zks);\n \n         boolean b = ClientBase.waitForServerUp(HOSTPORT, ClientBase.CONNECTION_TIMEOUT);"},{"sha":"48c913113e92adf6c7be1b60aeba2ac9a14ffdd7","filename":"conf/log4j.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/bookkeeper/blob/30c326643938bb3df6b35515e714622d98772352/conf/log4j.properties","raw_url":"https://github.com/apache/bookkeeper/raw/30c326643938bb3df6b35515e714622d98772352/conf/log4j.properties","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/conf/log4j.properties?ref=30c326643938bb3df6b35515e714622d98772352","patch":"@@ -45,9 +45,9 @@ log4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} - %-5p - [%t:%C{1}@%\n #\n # Add ROLLINGFILE to rootLogger to get log file output\n #    Log DEBUG level and above messages to a log file\n-log4j.appender.ROLLINGFILE=org.apache.log4j.ConsoleAppender\n+log4j.appender.ROLLINGFILE=org.apache.log4j.DailyRollingFileAppender\n log4j.appender.ROLLINGFILE.Threshold=DEBUG\n-log4j.appender.ROLLINGFILE.File=bookkeeper.log\n+log4j.appender.ROLLINGFILE.File=/tmp/bookkeeper.log\n log4j.appender.ROLLINGFILE.layout=org.apache.log4j.PatternLayout\n log4j.appender.ROLLINGFILE.layout.ConversionPattern=%d{ISO8601} - %-5p - [%t:%C{1}@%L] - %m%n\n "},{"sha":"6ac3efb5bebc671540c88b2b9ce3baa4f1a44672","filename":"hedwig-client/pom.xml","status":"modified","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/apache/bookkeeper/blob/30c326643938bb3df6b35515e714622d98772352/hedwig-client/pom.xml","raw_url":"https://github.com/apache/bookkeeper/raw/30c326643938bb3df6b35515e714622d98772352/hedwig-client/pom.xml","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-client/pom.xml?ref=30c326643938bb3df6b35515e714622d98772352","patch":"@@ -19,18 +19,16 @@\n   xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n   <modelVersion>4.0.0</modelVersion>\n   <parent>\n-    <groupId>org.apache.hedwig</groupId>\n-    <artifactId>hedwig</artifactId>\n-    <version>1.0-SNAPSHOT</version>\n+    <groupId>org.apache.bookkeeper</groupId>\n+    <artifactId>bookkeeper</artifactId>\n+    <version>3.4.0-SNAPSHOT</version>\n   </parent>\n   <properties>\n       <mainclass>org.apache.hedwig.client.App</mainclass>\n   </properties>\n-  <groupId>org.apache.hedwig</groupId>\n-  <artifactId>client</artifactId>\n+  <artifactId>hedwig-client</artifactId>\n   <packaging>jar</packaging>\n-  <version>1.0-SNAPSHOT</version>\n-  <name>client</name>\n+  <name>hedwig-client</name>\n   <url>http://maven.apache.org</url>\n   <dependencies>\n     <dependency>\n@@ -40,9 +38,9 @@\n       <scope>test</scope>\n     </dependency>\n     <dependency>\n-      <groupId>org.apache.hedwig</groupId>\n-      <artifactId>protocol</artifactId>\n-      <version>1.0-SNAPSHOT</version>\n+      <groupId>org.apache.bookkeeper</groupId>\n+      <artifactId>hedwig-protocol</artifactId>\n+      <version>3.4.0-SNAPSHOT</version>\n       <scope>compile</scope>\n     </dependency>\n     <dependency>\n@@ -78,9 +76,11 @@\n   </dependencies>\n   <repositories>\n     <repository>\n-      <id>jboss.release</id>\n-      <name>JBoss releases</name>\n-      <url>http://repository.jboss.org/maven2</url>\n+      <id>repository.jboss.org</id>\n+      <url>>http://repository.jboss.org/nexus/content/groups/public/</url>\n+       <snapshots>\n+         <enabled>false</enabled>\n+       </snapshots>\n     </repository>\n   </repositories>\n </project>"},{"sha":"38b93ab4d48ed7313e632d6161e7ec2c9d7063be","filename":"hedwig-protocol/pom.xml","status":"modified","additions":5,"deletions":7,"changes":12,"blob_url":"https://github.com/apache/bookkeeper/blob/30c326643938bb3df6b35515e714622d98772352/hedwig-protocol/pom.xml","raw_url":"https://github.com/apache/bookkeeper/raw/30c326643938bb3df6b35515e714622d98772352/hedwig-protocol/pom.xml","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-protocol/pom.xml?ref=30c326643938bb3df6b35515e714622d98772352","patch":"@@ -19,15 +19,13 @@\n   xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n   <modelVersion>4.0.0</modelVersion>\n   <parent>\n-    <groupId>org.apache.hedwig</groupId>\n-    <artifactId>hedwig</artifactId>\n-    <version>1.0-SNAPSHOT</version>\n+    <groupId>org.apache.bookkeeper</groupId>\n+    <artifactId>bookkeeper</artifactId>\n+    <version>3.4.0-SNAPSHOT</version>\n   </parent>\n-  <groupId>org.apache.hedwig</groupId>\n-  <artifactId>protocol</artifactId>\n+  <artifactId>hedwig-protocol</artifactId>\n   <packaging>jar</packaging>\n-  <version>1.0-SNAPSHOT</version>\n-  <name>protocol</name>\n+  <name>hedwig-protocol</name>\n   <url>http://maven.apache.org</url>\n   <dependencies>\n     <dependency>"},{"sha":"69cd8d664a95d0db2024d3ecec3ff2c0136bbf9a","filename":"hedwig-server/pom.xml","status":"modified","additions":12,"deletions":13,"changes":25,"blob_url":"https://github.com/apache/bookkeeper/blob/30c326643938bb3df6b35515e714622d98772352/hedwig-server/pom.xml","raw_url":"https://github.com/apache/bookkeeper/raw/30c326643938bb3df6b35515e714622d98772352/hedwig-server/pom.xml","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/pom.xml?ref=30c326643938bb3df6b35515e714622d98772352","patch":"@@ -19,18 +19,17 @@\n   xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n   <modelVersion>4.0.0</modelVersion>\n   <parent>\n-    <groupId>org.apache.hedwig</groupId>\n-    <artifactId>hedwig</artifactId>\n-    <version>1.0-SNAPSHOT</version>\n+    <groupId>org.apache.bookkeeper</groupId>\n+    <artifactId>bookkeeper</artifactId>\n+    <version>3.4.0-SNAPSHOT</version>\n   </parent>\n   <properties>\n       <mainclass>org.apache.hedwig.server.netty.PubSubServer</mainclass>\n   </properties>\n-  <groupId>org.apache.hedwig</groupId>\n-  <artifactId>server</artifactId>\n+  <artifactId>hedwig-server</artifactId>\n   <packaging>jar</packaging>\n-  <version>1.0-SNAPSHOT</version>\n-  <name>server</name>\n+  <version>3.4.0-SNAPSHOT</version>\n+  <name>hedwig-server</name>\n   <url>http://maven.apache.org</url>\n   <dependencies>\n     <dependency>\n@@ -40,9 +39,9 @@\n       <scope>compile</scope>\n     </dependency>\n     <dependency>\n-      <groupId>org.apache.hedwig</groupId>\n-      <artifactId>client</artifactId>\n-      <version>1.0-SNAPSHOT</version>\n+      <groupId>org.apache.bookkeeper</groupId>\n+      <artifactId>hedwig-client</artifactId>\n+      <version>3.4.0-SNAPSHOT</version>\n       <scope>compile</scope>\n     </dependency>\n     <dependency>\n@@ -61,12 +60,12 @@\n       <groupId>org.apache.zookeeper</groupId>\n       <artifactId>zookeeper-test</artifactId>\n       <version>3.4.0</version>\n-      <scope>compile</scope>\n+      <scope>test</scope>\n     </dependency>\n     <dependency>\n       <groupId>org.apache.bookkeeper</groupId>\n-      <artifactId>bookkeeper</artifactId>\n-      <version>3.4.0</version>\n+      <artifactId>bookkeeper-server</artifactId>\n+      <version>3.4.0-SNAPSHOT</version>\n       <scope>compile</scope>\n     </dependency>\n   </dependencies>"},{"sha":"bd707c30c88dcdc16a7696ace84a80bcab411aef","filename":"pom.xml","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/30c326643938bb3df6b35515e714622d98772352/pom.xml","raw_url":"https://github.com/apache/bookkeeper/raw/30c326643938bb3df6b35515e714622d98772352/pom.xml","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/pom.xml?ref=30c326643938bb3df6b35515e714622d98772352","patch":"@@ -39,6 +39,7 @@\n     <plugins>\n       <plugin>\n         <artifactId>maven-compiler-plugin</artifactId>\n+\t<version>2.3.2</version>\n         <configuration>\n           <source>1.6</source>\n           <target>1.6</target>\n@@ -51,6 +52,7 @@\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-jxr-plugin</artifactId>\n+\t<version>2.1</version>\n       </plugin>\n       <plugin>\n         <groupId>org.codehaus.mojo</groupId>"}]}

