{"sha":"35fbcc357970f126b6b9f9a7bf2a453bd3786044","node_id":"MDY6Q29tbWl0MTU3NTk1NjozNWZiY2MzNTc5NzBmMTI2YjZiOWY5YTdiZjJhNDUzYmQzNzg2MDQ0","commit":{"author":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2015-06-02T06:02:06Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2015-06-02T06:02:06Z"},"message":"BOOKKEEPER-858: Fix broken links and typos in bookkeeper documents (Youngjoon Kim via sijie)","tree":{"sha":"ce733bc42448c1a0b9cfb7fed4f8a797dfbb1424","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/ce733bc42448c1a0b9cfb7fed4f8a797dfbb1424"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/35fbcc357970f126b6b9f9a7bf2a453bd3786044","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/35fbcc357970f126b6b9f9a7bf2a453bd3786044","html_url":"https://github.com/apache/bookkeeper/commit/35fbcc357970f126b6b9f9a7bf2a453bd3786044","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/35fbcc357970f126b6b9f9a7bf2a453bd3786044/comments","author":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"6286c39eaa8f7422323fc3405c72f9c6333f444f","url":"https://api.github.com/repos/apache/bookkeeper/commits/6286c39eaa8f7422323fc3405c72f9c6333f444f","html_url":"https://github.com/apache/bookkeeper/commit/6286c39eaa8f7422323fc3405c72f9c6333f444f"}],"stats":{"total":14,"additions":8,"deletions":6},"files":[{"sha":"ebd39a8fb64c91296648797f0fc043d7cce6b005","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/35fbcc357970f126b6b9f9a7bf2a453bd3786044/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/35fbcc357970f126b6b9f9a7bf2a453bd3786044/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=35fbcc357970f126b6b9f9a7bf2a453bd3786044","patch":"@@ -81,6 +81,8 @@ Trunk (unreleased changes)\n \n       BOOKKEEPER-835: Update copyright for 2015 on all active branches (sijie)\n \n+      BOOKKEEPER-858: Fix broken links and typos in bookkeeper documents (Youngjoon Kim via sijie)\n+\n       bookkeeper-client:\n \n         BOOKKEEPER-810: Allow to configure TCP connect timeout (Charles Xie via sijie)"},{"sha":"7feeba55b3c7bab5a172f10030b3068e1c278f25","filename":"doc/bookkeeperConfig.textile","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/35fbcc357970f126b6b9f9a7bf2a453bd3786044/doc/bookkeeperConfig.textile","raw_url":"https://github.com/apache/bookkeeper/raw/35fbcc357970f126b6b9f9a7bf2a453bd3786044/doc/bookkeeperConfig.textile","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/doc/bookkeeperConfig.textile?ref=35fbcc357970f126b6b9f9a7bf2a453bd3786044","patch":"@@ -142,7 +142,7 @@ Important parameters are:\n \n * @auditorPeriodicCheckInterval@, interval at which the auditor will do a check of all ledgers in the cluster. By default this runs once a week. The interval is set in seconds. To disable the periodic check completely, set this to 0. Note that periodic checking will put extra load on the cluster, so it should not be run more frequently than once a day.\n \n-* @rereplicationEntryBatchSize@ specifies the number of entries which a replication will rereplicate in parallel. The default value is 10. A larger value for this parameter will increase the speed at which autorecovery occurs but will increate the memory requirement of the autorecovery process, and create more load on the cluster.\n+* @rereplicationEntryBatchSize@ specifies the number of entries which a replication will rereplicate in parallel. The default value is 10. A larger value for this parameter will increase the speed at which autorecovery occurs but will increase the memory requirement of the autorecovery process, and create more load on the cluster.\n \n * @openLedgerRereplicationGracePeriod@, is the amount of time, in milliseconds, which a recovery worker will wait before recovering a ledger segment which has no defined ended, i.e. the client is still writing to that segment. If the client is still active, it should detect the bookie failure, and start writing to a new ledger segment, and a new ensemble, which doesn't include the failed bookie. Creating new ledger segment will define the end of the previous segment. If, after the grace period, the ledger segment's end has not been defined, we assume the writing client has crashed. The ledger is fenced and the client is blocked from writing any more entries to the ledger. The default value is 30000ms.\n "},{"sha":"e7e8c815711e396ad3d2dbca6f9107c5ec8813d8","filename":"doc/bookkeeperConfigParams.textile","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/35fbcc357970f126b6b9f9a7bf2a453bd3786044/doc/bookkeeperConfigParams.textile","raw_url":"https://github.com/apache/bookkeeper/raw/35fbcc357970f126b6b9f9a7bf2a453bd3786044/doc/bookkeeperConfigParams.textile","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/doc/bookkeeperConfigParams.textile?ref=35fbcc357970f126b6b9f9a7bf2a453bd3786044","patch":"@@ -35,5 +35,5 @@ h3. Bookie recovery settings\n \n Currently bookie recovery tool needs a digest type and passwd to open ledgers to do recovery. Currently, bookkeeper assumes that all ledgers were created with the same DigestType and Password. In the future, it needs to know for each ledger, what was the DigestType and Password used to create it before opening it.\n \n-| @digestType@ | Digest type used to open ledgers from bookkie recovery tool. |\n+| @digestType@ | Digest type used to open ledgers from bookie recovery tool. |\n | @passwd@ | Password used to open ledgers from bookie recovery tool. |"},{"sha":"7d81866775e6a115d77db3e25fe5a2a8accc7196","filename":"doc/bookkeeperOverview.textile","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/bookkeeper/blob/35fbcc357970f126b6b9f9a7bf2a453bd3786044/doc/bookkeeperOverview.textile","raw_url":"https://github.com/apache/bookkeeper/raw/35fbcc357970f126b6b9f9a7bf2a453bd3786044/doc/bookkeeperOverview.textile","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/doc/bookkeeperOverview.textile?ref=35fbcc357970f126b6b9f9a7bf2a453bd3786044","patch":"@@ -47,7 +47,7 @@ p. BookKeeper uses four basic elements:\n \n h1. Bookkeeper initial design\n \n-p. A set of bookies implements BookKeeper, and we use a quorum-based protocol to replicate data across the bookies. There are basically two operations to an existing ledger: read and append. Here is the complete API list (mode detail \"here\":bookkeeperProgrammer.html): \n+p. A set of bookies implements BookKeeper, and we use a quorum-based protocol to replicate data across the bookies. There are basically two operations to an existing ledger: read and append. Here is the complete API list (more detail \"here\":./bookkeeperProgrammer.html):\n \n * Create ledger: creates a new empty ledger; \n * Open ledger: opens an existing ledger for reading; \n@@ -58,7 +58,7 @@ p. A set of bookies implements BookKeeper, and we use a quorum-based protocol to\n p. There is only a single client that can write to a ledger. Once that ledger is closed or the client fails, no more entries can be added. (We take advantage of this behavior to provide our strong guarantees.) There will not be gaps in the ledger. Fingers get broken, people get roughed up or end up in prison when books are manipulated, so there is no deleting or changing of entries. \n \n !images/bk-overview.jpg!\n-p. A simple use of BooKeeper is to implement a write-ahead transaction log. A server maintains an in-memory data structure (with periodic snapshots for example) and logs changes to that structure before it applies the change. The application server creates a ledger at startup and store the ledger id and password in a well known place (ZooKeeper maybe). When it needs to make a change, the server adds an entry with the change information to a ledger and apply the change when BookKeeper adds the entry successfully. The server can even use asyncAddEntry to queue up many changes for high change throughput. BooKeeper meticulously logs the changes in order and call the completion functions in order. \n+p. A simple use of BookKeeper is to implement a write-ahead transaction log. A server maintains an in-memory data structure (with periodic snapshots for example) and logs changes to that structure before it applies the change. The application server creates a ledger at startup and store the ledger id and password in a well known place (ZooKeeper maybe). When it needs to make a change, the server adds an entry with the change information to a ledger and apply the change when BookKeeper adds the entry successfully. The server can even use asyncAddEntry to queue up many changes for high change throughput. BookKeeper meticulously logs the changes in order and call the completion functions in order.\n \n p. When the application server dies, a backup server will come online, get the last snapshot and then it will open the ledger of the old server and read all the entries from the time the snapshot was taken. (Since it doesn't know the last entry number it will use MAX_INTEGER). Once all the entries have been processed, it will close the ledger and start a new one for its use. \n "},{"sha":"544af2d9b280b2c89f250fbacb87588509e16e54","filename":"doc/bookkeeperStarted.textile","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/bookkeeper/blob/35fbcc357970f126b6b9f9a7bf2a453bd3786044/doc/bookkeeperStarted.textile","raw_url":"https://github.com/apache/bookkeeper/raw/35fbcc357970f126b6b9f9a7bf2a453bd3786044/doc/bookkeeperStarted.textile","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/doc/bookkeeperStarted.textile?ref=35fbcc357970f126b6b9f9a7bf2a453bd3786044","patch":"@@ -24,7 +24,7 @@ p. See \"System Requirements\":./bookkeeperConfig.html#bk_sysReqin the Admin guide\n \n h1. Download\n \n-p. BookKeeper trunk can be downloaded from subversion. See \"Version Control:http://bookkeeper.apache.org/svn.html.\n+p. BookKeeper trunk can be downloaded from subversion. See \"Version Control\":http://bookkeeper.apache.org/svn.html.\n \n h1. LocalBookKeeper\n \n@@ -99,4 +99,4 @@ while(ls.hasMoreElements()){\n }\n lh.close();\n bkc.close();\n-</code></pre>\n\\ No newline at end of file\n+</code></pre>"}]}

