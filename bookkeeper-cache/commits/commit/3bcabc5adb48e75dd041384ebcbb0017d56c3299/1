{"sha":"3bcabc5adb48e75dd041384ebcbb0017d56c3299","node_id":"MDY6Q29tbWl0MTU3NTk1NjozYmNhYmM1YWRiNDhlNzVkZDA0MTM4NGViY2JiMDAxN2Q1NmMzMjk5","commit":{"author":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2013-02-12T05:00:18Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2013-02-12T05:00:18Z"},"message":"BOOKKEEPER-554: fd leaking when move ledger index file (sijie, ivank via sijie)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1445033 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"61751de438afd9d9c7fbb476e2959745450c41c4","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/61751de438afd9d9c7fbb476e2959745450c41c4"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/3bcabc5adb48e75dd041384ebcbb0017d56c3299","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/3bcabc5adb48e75dd041384ebcbb0017d56c3299","html_url":"https://github.com/apache/bookkeeper/commit/3bcabc5adb48e75dd041384ebcbb0017d56c3299","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/3bcabc5adb48e75dd041384ebcbb0017d56c3299/comments","author":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"3902ae5a6056ba6348f71c873d23f74ac32cebef","url":"https://api.github.com/repos/apache/bookkeeper/commits/3902ae5a6056ba6348f71c873d23f74ac32cebef","html_url":"https://github.com/apache/bookkeeper/commit/3902ae5a6056ba6348f71c873d23f74ac32cebef"}],"stats":{"total":25,"additions":21,"deletions":4},"files":[{"sha":"a858e7711f5b36b9615c8284ba2d8fb9d2e26546","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/3bcabc5adb48e75dd041384ebcbb0017d56c3299/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/3bcabc5adb48e75dd041384ebcbb0017d56c3299/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=3bcabc5adb48e75dd041384ebcbb0017d56c3299","patch":"@@ -12,6 +12,8 @@ Trunk (unreleased changes)\n \n       BOOKKEEPER-561: Findbugs report errors with openjdk (ivank via umamahesh)\n \n+      BOOKKEEPER-554: fd leaking when move ledger index file (sijie, ivank via sijie)\n+\n     IMPROVEMENTS:\n \n       BOOKKEEPER-526: multiple threads for delivery manager (sijie via ivank)"},{"sha":"4cb61e4c30a2aecb42ac5d865d4c99cc3e2737d0","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileInfo.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/apache/bookkeeper/blob/3bcabc5adb48e75dd041384ebcbb0017d56c3299/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileInfo.java","raw_url":"https://github.com/apache/bookkeeper/raw/3bcabc5adb48e75dd041384ebcbb0017d56c3299/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileInfo.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileInfo.java?ref=3bcabc5adb48e75dd041384ebcbb0017d56c3299","patch":"@@ -29,6 +29,7 @@\n import java.nio.channels.FileChannel;\n \n import static com.google.common.base.Charsets.UTF_8;\n+import com.google.common.annotations.VisibleForTesting;\n \n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -336,6 +337,11 @@ synchronized public void use() {\n         useCount++;\n     }\n \n+    @VisibleForTesting\n+    synchronized int getUseCount() {\n+        return useCount;\n+    }\n+\n     synchronized public void release() {\n         useCount--;\n         if (isClosed && useCount == 0 && fc != null) {"},{"sha":"d5a2a48ee9b2d290916ea3503c3f5790cc3b0d4c","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheImpl.java","status":"modified","additions":11,"deletions":4,"changes":15,"blob_url":"https://github.com/apache/bookkeeper/blob/3bcabc5adb48e75dd041384ebcbb0017d56c3299/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheImpl.java","raw_url":"https://github.com/apache/bookkeeper/raw/3bcabc5adb48e75dd041384ebcbb0017d56c3299/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheImpl.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheImpl.java?ref=3bcabc5adb48e75dd041384ebcbb0017d56c3299","patch":"@@ -360,10 +360,17 @@ public void flushLedger(boolean doAll) throws IOException {\n                 // if some new dir detected as full, then move all corresponding\n                 // open index files to new location\n                 for (Long l : dirtyLedgers) {\n-                    FileInfo fi = getFileInfo(l, null);\n-                    File currentDir = getLedgerDirForLedger(fi);\n-                    if (ledgerDirsManager.isDirFull(currentDir)) {\n-                        moveLedgerIndexFile(l, fi);\n+                    FileInfo fi = null;\n+                    try {\n+                        fi = getFileInfo(l, null);\n+                        File currentDir = getLedgerDirForLedger(fi);\n+                        if (ledgerDirsManager.isDirFull(currentDir)) {\n+                            moveLedgerIndexFile(l, fi);\n+                        }\n+                    } finally {\n+                        if (null != fi) {\n+                            fi.release();\n+                        }\n                     }\n                 }\n                 shouldRelocateIndexFile.set(false);"},{"sha":"c748c357573b508645e4d11560097164f81e84ff","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/LedgerCacheTest.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/3bcabc5adb48e75dd041384ebcbb0017d56c3299/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/LedgerCacheTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/3bcabc5adb48e75dd041384ebcbb0017d56c3299/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/LedgerCacheTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/LedgerCacheTest.java?ref=3bcabc5adb48e75dd041384ebcbb0017d56c3299","patch":"@@ -282,6 +282,8 @@ public void testLedgerCacheFlushFailureOnDiskFull() throws Exception {\n         ledgerStorage.flush();\n         File after = newFileInfo.getLf();\n \n+        assertEquals(\"Reference counting for the file info should be zero.\", 0, newFileInfo.getUseCount());\n+\n         assertFalse(\"After flush index file should be changed\", before.equals(after));\n         // Verify written entries\n         Assert.assertArrayEquals(generateEntry(1, 1).array(), ledgerStorage.getEntry(1, 1).array());"}]}

