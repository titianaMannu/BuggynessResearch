{"sha":"3d3340be7d754af1738a117ee07e3bed04ec5547","node_id":"MDY6Q29tbWl0MTU3NTk1NjozZDMzNDBiZTdkNzU0YWYxNzM4YTExN2VlMDdlM2JlZDA0ZWM1NTQ3","commit":{"author":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2017-03-23T14:55:12Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2017-03-23T14:55:12Z"},"message":"BOOKKEEPER-1013: Fix findbugs errors on latest master\n\n- 100% synchronization on _explicitLac_ on FileInfo\n- 100% synchronization on _length_ on LedgerHandle\n- fixed the print format issue on journal dir names array\n- fix checkpointsource list hashCode, equals()\n\nAuthor: Sijie Guo <sijie@apache.org>\n\nReviewers: Enrico Olivelli <eolivelli@gmail.com>\n\nCloses #118 from sijie/sijie/bk_1013","tree":{"sha":"90f35e46a2149d9d3b55fd96d78d6c3974531b94","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/90f35e46a2149d9d3b55fd96d78d6c3974531b94"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/3d3340be7d754af1738a117ee07e3bed04ec5547","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/3d3340be7d754af1738a117ee07e3bed04ec5547","html_url":"https://github.com/apache/bookkeeper/commit/3d3340be7d754af1738a117ee07e3bed04ec5547","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/3d3340be7d754af1738a117ee07e3bed04ec5547/comments","author":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"f20568eaa25e0efe6926ede9030a210382e3005b","url":"https://api.github.com/repos/apache/bookkeeper/commits/f20568eaa25e0efe6926ede9030a210382e3005b","html_url":"https://github.com/apache/bookkeeper/commit/f20568eaa25e0efe6926ede9030a210382e3005b"}],"stats":{"total":44,"additions":29,"deletions":15},"files":[{"sha":"ca42297477b3b3def0ede0e2da82d50218f531c2","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/CheckpointSourceList.java","status":"modified","additions":16,"deletions":1,"changes":17,"blob_url":"https://github.com/apache/bookkeeper/blob/3d3340be7d754af1738a117ee07e3bed04ec5547/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/CheckpointSourceList.java","raw_url":"https://github.com/apache/bookkeeper/raw/3d3340be7d754af1738a117ee07e3bed04ec5547/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/CheckpointSourceList.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/CheckpointSourceList.java?ref=3d3340be7d754af1738a117ee07e3bed04ec5547","patch":"@@ -22,6 +22,7 @@\n import java.io.IOException;\n import java.util.List;\n \n+import com.google.common.base.Objects;\n import com.google.common.collect.Lists;\n \n public class CheckpointSourceList implements CheckpointSource {\n@@ -68,6 +69,20 @@ private void checkpointComplete(boolean compact) throws IOException {\n             }\n         }\n \n+        @Override\n+        public int hashCode() {\n+            return Objects.hashCode(source, checkpoints);\n+        }\n+\n+        @Override\n+        public boolean equals(Object o) {\n+            if (!(o instanceof CheckpointList)) {\n+                return false;\n+            }\n+            Checkpoint other = (Checkpoint) o;\n+            return 0 == compareTo(other);\n+        }\n+\n         @Override\n         public int compareTo(Checkpoint o) {\n             if (o == Checkpoint.MAX) {\n@@ -94,4 +109,4 @@ public int compareTo(Checkpoint o) {\n \n     }\n \n-}\n\\ No newline at end of file\n+}"},{"sha":"adf148ce77a53659611ef131d37678fd3d3c7596","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileInfo.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/apache/bookkeeper/blob/3d3340be7d754af1738a117ee07e3bed04ec5547/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileInfo.java","raw_url":"https://github.com/apache/bookkeeper/raw/3d3340be7d754af1738a117ee07e3bed04ec5547/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileInfo.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileInfo.java?ref=3d3340be7d754af1738a117ee07e3bed04ec5547","patch":"@@ -115,9 +115,9 @@ public long getSizeSinceLastwrite() {\n     }\n \n     public ByteBuffer getExplicitLac() {\n-        LOG.debug(\"fileInfo:GetLac: {}\", explicitLac);\n         ByteBuffer retLac = null;\n         synchronized(this) {\n+            LOG.debug(\"fileInfo:GetLac: {}\", explicitLac);\n             if (explicitLac != null) {\n                 retLac = ByteBuffer.allocate(explicitLac.capacity());\n                 explicitLac.rewind();//copy from the beginning\n@@ -137,12 +137,13 @@ public void setExplicitLac(ByteBuffer lac) {\n             explicitLac.put(lac);\n             explicitLac.rewind();\n             \n-            long ledgerId = explicitLac.getLong();            \n+            // skip the ledger id\n+            explicitLac.getLong();            \n             long explicitLacValue = explicitLac.getLong();\n             setLastAddConfirmed(explicitLacValue);\n             explicitLac.rewind();\n+            LOG.debug(\"fileInfo:SetLac: {}\", explicitLac);\n         }\n-        LOG.debug(\"fileInfo:SetLac: {}\", explicitLac);\n     }\n \n     synchronized public void readHeader() throws IOException {"},{"sha":"b68bb1100a6d5b230d861be576573705148a8de9","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/3d3340be7d754af1738a117ee07e3bed04ec5547/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java","raw_url":"https://github.com/apache/bookkeeper/raw/3d3340be7d754af1738a117ee07e3bed04ec5547/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java?ref=3d3340be7d754af1738a117ee07e3bed04ec5547","patch":"@@ -245,7 +245,7 @@ DigestManager getDigestManager() {\n      * @param delta\n      * @return the length of the ledger after the addition\n      */\n-    long addToLength(long delta) {\n+    synchronized long addToLength(long delta) {\n         this.length += delta;\n         return this.length;\n     }"},{"sha":"ae17c7fc701ee27ecfe10bb9d664a5c2b2c7931a","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/client/ReadOnlyLedgerHandle.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/apache/bookkeeper/blob/3d3340be7d754af1738a117ee07e3bed04ec5547/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/ReadOnlyLedgerHandle.java","raw_url":"https://github.com/apache/bookkeeper/raw/3d3340be7d754af1738a117ee07e3bed04ec5547/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/ReadOnlyLedgerHandle.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/ReadOnlyLedgerHandle.java?ref=3d3340be7d754af1738a117ee07e3bed04ec5547","patch":"@@ -54,11 +54,13 @@ public void safeRun() {\n                     ReadOnlyLedgerHandle.this.metadata.getVersion().compare(this.m.getVersion());\n             if (Version.Occurred.BEFORE == occurred) {\n                 LOG.info(\"Updated ledger metadata for ledger {} to {}.\", ledgerId, this.m);\n-                if (this.m.isClosed()) {\n-                        ReadOnlyLedgerHandle.this.lastAddConfirmed = this.m.getLastEntryId();\n-                        ReadOnlyLedgerHandle.this.length = this.m.getLength();\n+                synchronized (ReadOnlyLedgerHandle.this) {\n+                    if (this.m.isClosed()) {\n+                            ReadOnlyLedgerHandle.this.lastAddConfirmed = this.m.getLastEntryId();\n+                            ReadOnlyLedgerHandle.this.length = this.m.getLength();\n+                    }\n+                    ReadOnlyLedgerHandle.this.metadata = this.m;\n                 }\n-                ReadOnlyLedgerHandle.this.metadata = this.m;\n             }\n         }\n "},{"sha":"2f8bb9a46c79e89e0dc5eb794878fb28f8cad23d","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/conf/ServerConfiguration.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/apache/bookkeeper/blob/3d3340be7d754af1738a117ee07e3bed04ec5547/bookkeeper-server/src/main/java/org/apache/bookkeeper/conf/ServerConfiguration.java","raw_url":"https://github.com/apache/bookkeeper/raw/3d3340be7d754af1738a117ee07e3bed04ec5547/bookkeeper-server/src/main/java/org/apache/bookkeeper/conf/ServerConfiguration.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/conf/ServerConfiguration.java?ref=3d3340be7d754af1738a117ee07e3bed04ec5547","patch":"@@ -628,9 +628,6 @@ public ServerConfiguration setJournalDirsName(String[] journalDirs) {\n      */\n     public File[] getJournalDirs() {\n         String[] journalDirNames = getJournalDirNames();\n-        if (null == journalDirNames) {\n-            return null;\n-        }\n         File[] journalDirs = new File[journalDirNames.length];\n         for(int i=0 ;i<journalDirNames.length; i++) {\n             journalDirs[i] = new File(journalDirNames[i]);"},{"sha":"7f437ffff576eb8d1c4fc36a5292a9a08c0e14a6","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/bookkeeper/blob/3d3340be7d754af1738a117ee07e3bed04ec5547/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java","raw_url":"https://github.com/apache/bookkeeper/raw/3d3340be7d754af1738a117ee07e3bed04ec5547/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java?ref=3d3340be7d754af1738a117ee07e3bed04ec5547","patch":"@@ -25,6 +25,7 @@\n import java.net.MalformedURLException;\n import java.net.UnknownHostException;\n import java.lang.Integer;\n+import java.util.Arrays;\n \n import org.apache.bookkeeper.bookie.Bookie;\n import org.apache.bookkeeper.bookie.ReadOnlyBookie;\n@@ -420,7 +421,7 @@ public static void main(String[] args) {\n         String hello = String.format(\n                            \"Hello, I'm your bookie, listening on port %1$s. ZKServers are on %2$s. Journals are in %3$s. Ledgers are stored in %4$s.\",\n                            conf.getBookiePort(), conf.getZkServers(),\n-                           conf.getJournalDirNames(), sb);\n+                           Arrays.asList(conf.getJournalDirNames()), sb);\n         LOG.info(hello);\n         try {\n             // Initialize Stats Provider"},{"sha":"580a90508e3f253c45a3dd030cead13f5211c51a","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/apache/bookkeeper/blob/3d3340be7d754af1738a117ee07e3bed04ec5547/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java","raw_url":"https://github.com/apache/bookkeeper/raw/3d3340be7d754af1738a117ee07e3bed04ec5547/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java?ref=3d3340be7d754af1738a117ee07e3bed04ec5547","patch":"@@ -387,7 +387,6 @@ void connectIfNeededAndDoOp(GenericCallback<PerChannelBookieClient> op) {\n \n     void writeLac(final long ledgerId, final byte[] masterKey, final long lac, ChannelBuffer toSend, WriteLacCallback cb, Object ctx) {\n         final long txnId = getTxnId();\n-        final int entrySize = toSend.readableBytes();\n         final CompletionKey completionKey = new CompletionKey(txnId, OperationType.WRITE_LAC);\n         // writeLac is mostly like addEntry hence uses addEntryTimeout\n         completionObjects.put(completionKey,"},{"sha":"7b4499f46bc1e3a10b41cabe033e3fbadd3f9588","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/util/OrderedSafeExecutor.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/apache/bookkeeper/blob/3d3340be7d754af1738a117ee07e3bed04ec5547/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/OrderedSafeExecutor.java","raw_url":"https://github.com/apache/bookkeeper/raw/3d3340be7d754af1738a117ee07e3bed04ec5547/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/OrderedSafeExecutor.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/OrderedSafeExecutor.java?ref=3d3340be7d754af1738a117ee07e3bed04ec5547","patch":"@@ -183,7 +183,6 @@ private OrderedSafeExecutor(String baseName, int numThreads, ThreadFactory threa\n                         .setNameFormat(name + \"-orderedsafeexecutor-\" + i + \"-%d\")\n                         .setThreadFactory(threadFactory)\n                         .build());\n-            threads[i].setMaximumPoolSize(1);\n \n             // Save thread ids\n             final int idx = i;"}]}

