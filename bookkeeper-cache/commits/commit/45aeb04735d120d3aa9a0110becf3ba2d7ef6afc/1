{"sha":"45aeb04735d120d3aa9a0110becf3ba2d7ef6afc","node_id":"MDY6Q29tbWl0MTU3NTk1Njo0NWFlYjA0NzM1ZDEyMGQzYWE5YTAxMTBiZWNmM2JhMmQ3ZWY2YWZj","commit":{"author":{"name":"Flavio Paiva Junqueira","email":"fpj@apache.org","date":"2011-07-12T10:36:05Z"},"committer":{"name":"Flavio Paiva Junqueira","email":"fpj@apache.org","date":"2011-07-12T10:36:05Z"},"message":"BOOKKEEPER-30: Test are too noisy (ivank via fpj)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1145532 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"deeae3351c848451fa62ccdf852effaf09f1cb05","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/deeae3351c848451fa62ccdf852effaf09f1cb05"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc","html_url":"https://github.com/apache/bookkeeper/commit/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc/comments","author":{"login":"fpj","id":572920,"node_id":"MDQ6VXNlcjU3MjkyMA==","avatar_url":"https://avatars.githubusercontent.com/u/572920?v=4","gravatar_id":"","url":"https://api.github.com/users/fpj","html_url":"https://github.com/fpj","followers_url":"https://api.github.com/users/fpj/followers","following_url":"https://api.github.com/users/fpj/following{/other_user}","gists_url":"https://api.github.com/users/fpj/gists{/gist_id}","starred_url":"https://api.github.com/users/fpj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fpj/subscriptions","organizations_url":"https://api.github.com/users/fpj/orgs","repos_url":"https://api.github.com/users/fpj/repos","events_url":"https://api.github.com/users/fpj/events{/privacy}","received_events_url":"https://api.github.com/users/fpj/received_events","type":"User","site_admin":false},"committer":{"login":"fpj","id":572920,"node_id":"MDQ6VXNlcjU3MjkyMA==","avatar_url":"https://avatars.githubusercontent.com/u/572920?v=4","gravatar_id":"","url":"https://api.github.com/users/fpj","html_url":"https://github.com/fpj","followers_url":"https://api.github.com/users/fpj/followers","following_url":"https://api.github.com/users/fpj/following{/other_user}","gists_url":"https://api.github.com/users/fpj/gists{/gist_id}","starred_url":"https://api.github.com/users/fpj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fpj/subscriptions","organizations_url":"https://api.github.com/users/fpj/orgs","repos_url":"https://api.github.com/users/fpj/repos","events_url":"https://api.github.com/users/fpj/events{/privacy}","received_events_url":"https://api.github.com/users/fpj/received_events","type":"User","site_admin":false},"parents":[{"sha":"00f25f5622e69f063202f7bd46f09ad1d708983d","url":"https://api.github.com/repos/apache/bookkeeper/commits/00f25f5622e69f063202f7bd46f09ad1d708983d","html_url":"https://github.com/apache/bookkeeper/commit/00f25f5622e69f063202f7bd46f09ad1d708983d"}],"stats":{"total":174,"additions":119,"deletions":55},"files":[{"sha":"8f58f825c33f1cf13da73cff95332a58ce3d9cfc","filename":"CHANGES.txt","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/apache/bookkeeper/blob/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=45aeb04735d120d3aa9a0110becf3ba2d7ef6afc","patch":"@@ -17,3 +17,6 @@ BUGFIXES:\n   BOOKEEPER-22: Exception in LedgerCache causes addEntry request to fail (fpj via fpj)\n \n   BOOKEEPER-5: Issue with Netty in BookKeeper (fpj and ivank via fpj)\n+\n+  BOOKKEEPER-30: Test are too noisy (ivank via fpj)\n+"},{"sha":"cbef18d4c403b8a93492a687c11354ed1fd873a3","filename":"bookkeeper-server/pom.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/bookkeeper/blob/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc/bookkeeper-server/pom.xml","raw_url":"https://github.com/apache/bookkeeper/raw/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc/bookkeeper-server/pom.xml","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/pom.xml?ref=45aeb04735d120d3aa9a0110becf3ba2d7ef6afc","patch":"@@ -52,6 +52,7 @@\n       <plugin>\n \t<groupId>org.apache.maven.plugins</groupId>\n \t<artifactId>maven-surefire-plugin</artifactId>\n+\t<version>2.9</version>\n \t<configuration>\n \t  <forkMode>pertest</forkMode>\n \t</configuration>"},{"sha":"78aaea4449d26faea4186f7d054ae3817f78b314","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/bookkeeper/blob/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java","raw_url":"https://github.com/apache/bookkeeper/raw/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java?ref=45aeb04735d120d3aa9a0110becf3ba2d7ef6afc","patch":"@@ -122,12 +122,12 @@ public void run() {\n                 try {\n                     ledgerCache.flushLedger(true);\n                 } catch (IOException e) {\n-                    e.printStackTrace();\n+                    LOG.error(\"Exception flushing Ledger\", e);\n                 }\n                 try {\n                     entryLogger.flush();\n                 } catch (IOException e) {\n-                    e.printStackTrace();\n+                    LOG.error(\"Exception flushing entry logger\", e);\n                 }\n                 lastLogMark.rollLog();\n             }"},{"sha":"b9b6f23a7f6ac45a896a5ac7c0fa2d504095d444","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileInfo.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/apache/bookkeeper/blob/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileInfo.java","raw_url":"https://github.com/apache/bookkeeper/raw/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileInfo.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileInfo.java?ref=45aeb04735d120d3aa9a0110becf3ba2d7ef6afc","patch":"@@ -27,11 +27,15 @@\n import java.nio.ByteBuffer;\n import java.nio.channels.FileChannel;\n \n+import org.apache.log4j.Logger;\n+\n /**\n  * This is the file handle for a ledger's index file that maps entry ids to location.\n  * It is used by LedgerCache.\n  */\n class FileInfo {\n+    static Logger LOG = Logger.getLogger(FileInfo.class);\n+\n     private FileChannel fc;\n     private final File lf;\n     /**\n@@ -108,7 +112,7 @@ synchronized public void release() {\n             try {\n                 fc.close();\n             } catch (IOException e) {\n-                e.printStackTrace();\n+                LOG.error(\"Error closing file channel\", e);\n             }\n         }\n     }"},{"sha":"f42eddbc0bb7d900255ce909e36a44f8ff048fd5","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BaseTestCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BaseTestCase.java","raw_url":"https://github.com/apache/bookkeeper/raw/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BaseTestCase.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BaseTestCase.java?ref=45aeb04735d120d3aa9a0110becf3ba2d7ef6afc","patch":"@@ -119,7 +119,7 @@ public void setUp() throws Exception {\n         zkc.close();\n         bkc = new BookKeeper(\"127.0.0.1\");\n         } catch(Exception e) {\n-            e.printStackTrace();\n+            LOG.error(\"Error setting up\", e);\n             throw e;\n         }\n     }"},{"sha":"d6c66928594cc651444203f95e947bdff3e050c6","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConcurrentLedgerTest.java","status":"modified","additions":9,"deletions":6,"changes":15,"blob_url":"https://github.com/apache/bookkeeper/blob/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConcurrentLedgerTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConcurrentLedgerTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConcurrentLedgerTest.java?ref=45aeb04735d120d3aa9a0110becf3ba2d7ef6afc","patch":"@@ -36,11 +36,14 @@\n import org.junit.Test;\n \n import junit.framework.TestCase;\n+import org.apache.log4j.Logger;\n \n /**\n  * Tests writing to concurrent ledgers\n  */\n public class ConcurrentLedgerTest extends TestCase {\n+    static Logger LOG = Logger.getLogger(ConcurrentLedgerTest.class);\n+\n     Bookie bookie;\n     File txnDir, ledgerDir;\n     int recvTimeout = 10000;\n@@ -87,7 +90,7 @@ public void tearDown() {\n             recursiveDelete(txnDir);\n             recursiveDelete(ledgerDir);\n         } catch (InterruptedException e) {\n-            e.printStackTrace();\n+            LOG.error(\"Error tearing down\", e);\n         }\n     }\n \n@@ -114,17 +117,17 @@ public void testConcurrentWrite() throws IOException, InterruptedException, Book\n         if (System.getProperty(\"totalwrites\") != null) {\n             totalwrites = Integer.parseInt(System.getProperty(\"totalwrites\"));\n         }\n-        System.out.println(\"Running up to \" + iterations + \" iterations\");\n-        System.out.println(\"Total writes = \" + totalwrites);\n+        LOG.info(\"Running up to \" + iterations + \" iterations\");\n+        LOG.info(\"Total writes = \" + totalwrites);\n         int ledgers;\n         for(ledgers = 1; ledgers <= iterations; ledgers += iterationStep) {\n             long duration = doWrites(ledgers, size, totalwrites);\n-            System.out.println(totalwrites + \" on \" + ledgers + \" took \" + duration + \" ms\");\n+            LOG.info(totalwrites + \" on \" + ledgers + \" took \" + duration + \" ms\");\n         }\n-        System.out.println(\"ledgers \" + ledgers);\n+        LOG.info(\"ledgers \" + ledgers);\n         for(ledgers = 1; ledgers <= iterations; ledgers += iterationStep) {\n             long duration = doReads(ledgers, size, totalwrites);\n-            System.out.println(ledgers + \" read \" + duration + \" ms\");\n+            LOG.info(ledgers + \" read \" + duration + \" ms\");\n         }\n     }\n "},{"sha":"4964f56a912c77597814ed08d1a7aac54cd3b383","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LedgerCacheTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LedgerCacheTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LedgerCacheTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LedgerCacheTest.java?ref=45aeb04735d120d3aa9a0110becf3ba2d7ef6afc","patch":"@@ -90,7 +90,7 @@ public void tearDown() {\n             recursiveDelete(txnDir);\n             recursiveDelete(ledgerDir);\n         } catch (InterruptedException e) {\n-            e.printStackTrace();\n+            LOG.error(\"Error tearing down\", e);\n         }\n     }\n     "},{"sha":"12a6b80db9ceb81c33301b41aeb90bd5abe6fd32","filename":"bookkeeper-server/src/test/resources/log4j.properties","status":"renamed","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/bookkeeper/blob/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc/bookkeeper-server/src/test/resources/log4j.properties","raw_url":"https://github.com/apache/bookkeeper/raw/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc/bookkeeper-server/src/test/resources/log4j.properties","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/resources/log4j.properties?ref=45aeb04735d120d3aa9a0110becf3ba2d7ef6afc","patch":"@@ -20,13 +20,13 @@\n #\n \n #\n-# ZooKeeper Logging Configuration\n+# Bookkeeper Logging Configuration\n #\n \n # Format is \"<default threshold> (, <appender>)+\n \n # DEFAULT: console appender only\n-log4j.rootLogger=INFO, CONSOLE\n+log4j.rootLogger=OFF, CONSOLE\n \n # Example with rolling log file\n #log4j.rootLogger=DEBUG, CONSOLE, ROLLINGFILE\n@@ -47,7 +47,7 @@ log4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} - %-5p - [%t:%C{1}@%\n #    Log DEBUG level and above messages to a log file\n log4j.appender.ROLLINGFILE=org.apache.log4j.DailyRollingFileAppender\n log4j.appender.ROLLINGFILE.Threshold=DEBUG\n-log4j.appender.ROLLINGFILE.File=/tmp/bookkeeper.log\n+log4j.appender.ROLLINGFILE.File=bookkeeper-server.log\n log4j.appender.ROLLINGFILE.layout=org.apache.log4j.PatternLayout\n log4j.appender.ROLLINGFILE.layout.ConversionPattern=%d{ISO8601} - %-5p - [%t:%C{1}@%L] - %m%n\n ","previous_filename":"conf/log4j.properties"},{"sha":"d1e2ffa5637c2c780a55f90d591c8f0dcf1e1cf3","filename":"hedwig-client/src/main/java/org/apache/hedwig/client/netty/ResponseHandler.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc/hedwig-client/src/main/java/org/apache/hedwig/client/netty/ResponseHandler.java","raw_url":"https://github.com/apache/bookkeeper/raw/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc/hedwig-client/src/main/java/org/apache/hedwig/client/netty/ResponseHandler.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-client/src/main/java/org/apache/hedwig/client/netty/ResponseHandler.java?ref=45aeb04735d120d3aa9a0110becf3ba2d7ef6afc","patch":"@@ -358,7 +358,7 @@ public void channelConnected(ChannelHandlerContext ctx, ChannelStateEvent e) thr\n \n     @Override\n     public void exceptionCaught(ChannelHandlerContext ctx, ExceptionEvent e) {\n-        e.getCause().printStackTrace();\n+        logger.error(\"Exception caught on client channel\", e.getCause());\n         e.getChannel().close();\n     }\n "},{"sha":"377afb46485f7b0b4cbaeb319cd9c7d22183fbf5","filename":"hedwig-client/src/main/resources/log4j.properties","status":"removed","additions":0,"deletions":32,"changes":32,"blob_url":"https://github.com/apache/bookkeeper/blob/00f25f5622e69f063202f7bd46f09ad1d708983d/hedwig-client/src/main/resources/log4j.properties","raw_url":"https://github.com/apache/bookkeeper/raw/00f25f5622e69f063202f7bd46f09ad1d708983d/hedwig-client/src/main/resources/log4j.properties","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-client/src/main/resources/log4j.properties?ref=00f25f5622e69f063202f7bd46f09ad1d708983d","patch":"@@ -1,32 +0,0 @@\n-#\n-# \n-# Licensed to the Apache Software Foundation (ASF) under one\n-# or more contributor license agreements.  See the NOTICE file\n-# distributed with this work for additional information\n-# regarding copyright ownership.  The ASF licenses this file\n-# to you under the Apache License, Version 2.0 (the\n-# \"License\"); you may not use this file except in compliance\n-# with the License.  You may obtain a copy of the License at\n-# \n-#   http://www.apache.org/licenses/LICENSE-2.0\n-# \n-# Unless required by applicable law or agreed to in writing,\n-# software distributed under the License is distributed on an\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-# KIND, either express or implied.  See the License for the\n-# specific language governing permissions and limitations\n-# under the License.\n-# \n-#\n-log4j.rootLogger=INFO, A1\n-log4j.logger.org.apache.zookeeper = ERROR\n-log4j.logger.org.apache.bookkeeper.client.QuorumOpMonitor = ERROR\n-log4j.logger.org.apache.bookkeeper.proto.BookieClient = ERROR\n-\n-# A1 is set to be a ConsoleAppender.\n-log4j.appender.A1=org.apache.log4j.ConsoleAppender\n-\n-# A1 uses PatternLayout.\n-log4j.appender.A1.layout=org.apache.log4j.PatternLayout\n-log4j.appender.A1.layout.ConversionPattern=%d %-4r [%t] %-5p %c %x - %m%n\n-"},{"sha":"ce1e34db6b4544de90b13bd2b51cd136d2f3f198","filename":"hedwig-server/src/test/java/org/apache/hedwig/ServerControl.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/apache/bookkeeper/blob/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc/hedwig-server/src/test/java/org/apache/hedwig/ServerControl.java","raw_url":"https://github.com/apache/bookkeeper/raw/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc/hedwig-server/src/test/java/org/apache/hedwig/ServerControl.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/test/java/org/apache/hedwig/ServerControl.java?ref=45aeb04735d120d3aa9a0110becf3ba2d7ef6afc","patch":"@@ -31,8 +31,11 @@\n import java.net.ConnectException;\n import java.io.File;\n import java.io.IOException;\n+import org.apache.log4j.Logger;\n \n public class ServerControl {\n+    static Logger LOG = Logger.getLogger(ServerControl.class);\n+\n     public class TestException extends Exception {\n \tpublic TestException(String str) {\n \t    super(str);\n@@ -192,7 +195,6 @@ public TestServer startBookieServer(int port, TestServer zookeeperServer) throws\n \t}\n \tString journal = createTempDirectory(\"-bookie-\" + port + \"-journal\");\n \tString ledger = createTempDirectory(\"-bookie-\" + port + \"-ledger\");\n-\tSystem.out.println(journal);\n \tBookKeeperServer bookie = new BookKeeperServer(port, zookeeperServer, journal, ledger);\n \treturn bookie;\n     }\n@@ -216,8 +218,8 @@ public static void main(String[] args) throws Exception {\n \tTestServer hw2 = control.startPubSubServer(12350, \"foobar\", zk);\n \tTestServer hw3 = control.startPubSubServer(12351, \"foobar\", zk);\n \tTestServer hw4 = control.startPubSubServer(12352, \"barfoo\", zk);\n-\tSystem.out.println(\"Started \" + zk.getAddress());\n-\tSystem.out.println(\"Sleeping for 10 seconds\");\n+\tLOG.info(\"Started \" + zk.getAddress());\n+\tLOG.info(\"Sleeping for 10 seconds\");\n \tThread.sleep(10000);\n \tbk3.kill();\n \tbk2.kill();"},{"sha":"2973b8c49bb8f0b7857532180ccaa10c59cbe0f8","filename":"hedwig-server/src/test/java/org/apache/hedwig/ServerControlDaemon.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/bookkeeper/blob/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc/hedwig-server/src/test/java/org/apache/hedwig/ServerControlDaemon.java","raw_url":"https://github.com/apache/bookkeeper/raw/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc/hedwig-server/src/test/java/org/apache/hedwig/ServerControlDaemon.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/test/java/org/apache/hedwig/ServerControlDaemon.java?ref=45aeb04735d120d3aa9a0110becf3ba2d7ef6afc","patch":"@@ -76,7 +76,7 @@ private void killServerForChannel(Channel c, String name) {\n \t    try {\n \t\tt.kill();\n \t    } catch (Exception e) {\n-\t\te.printStackTrace();\n+\t\tLOG.error(\"Error killing server\", e);\n \t\t// do nothing, should be killed, we won't use it again anyhow\n \t    }\n \t}\n@@ -131,7 +131,7 @@ public void messageReceived(ChannelHandlerContext ctx, MessageEvent e) {\n \t\t    ctx.getChannel().write(\"ERR Bad Command\\n\");\n \t\t}\n \t    } catch (Exception ex) {\n-\t\tex.printStackTrace();\n+\t\tLOG.error(\"Error handling message\", ex);\n \t\tctx.getChannel().write(\"ERR \" + ex.toString() + \"\\n\");\n \t    }\n \t}"},{"sha":"469843626873748cfb315a687549996f4e4a516a","filename":"hedwig-server/src/test/java/org/apache/hedwig/server/persistence/BookKeeperTestBase.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/apache/bookkeeper/blob/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc/hedwig-server/src/test/java/org/apache/hedwig/server/persistence/BookKeeperTestBase.java","raw_url":"https://github.com/apache/bookkeeper/raw/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc/hedwig-server/src/test/java/org/apache/hedwig/server/persistence/BookKeeperTestBase.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/test/java/org/apache/hedwig/server/persistence/BookKeeperTestBase.java?ref=45aeb04735d120d3aa9a0110becf3ba2d7ef6afc","patch":"@@ -33,13 +33,15 @@\n \n import org.apache.hedwig.util.FileUtils;\n import org.apache.hedwig.zookeeper.ZooKeeperTestBase;\n+import org.apache.log4j.Logger;\n \n /**\n  * This is a base class for any tests that require a BookKeeper client/server\n  * setup.\n  * \n  */\n public class BookKeeperTestBase extends ZooKeeperTestBase {\n+    private static Logger logger = Logger.getLogger(BookKeeperTestBase.class);\n \n     // BookKeeper Server variables\n     private List<BookieServer> bookiesList;\n@@ -84,9 +86,9 @@ public void setUp() throws Exception {\n             zk.create(\"/ledgers\", new byte[0], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n             zk.create(\"/ledgers/available\", new byte[0], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n         } catch (KeeperException e) {\n-            e.printStackTrace();\n+            LOG.error(\"Error setting up\", e);\n         } catch (InterruptedException e) {\n-            e.printStackTrace();\n+            LOG.error(\"Error setting up\", e);\n         }\n \n         // Create Bookie Servers\n@@ -116,7 +118,7 @@ public void tearDown() throws Exception {\n                 bs.shutdown();\n             }\n         } catch (InterruptedException e) {\n-            e.printStackTrace();\n+            LOG.error(\"Error tearing down\", e);\n         }\n         // Close the BookKeeper client\n         bk.halt();"},{"sha":"e00e2863a21e13555cfec4a2ffe6be9ce8f9f41e","filename":"hedwig-server/src/test/resources/log4j.properties","status":"added","additions":72,"deletions":0,"changes":72,"blob_url":"https://github.com/apache/bookkeeper/blob/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc/hedwig-server/src/test/resources/log4j.properties","raw_url":"https://github.com/apache/bookkeeper/raw/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc/hedwig-server/src/test/resources/log4j.properties","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/test/resources/log4j.properties?ref=45aeb04735d120d3aa9a0110becf3ba2d7ef6afc","patch":"@@ -0,0 +1,72 @@\n+#\n+# \n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+# \n+#   http://www.apache.org/licenses/LICENSE-2.0\n+# \n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+# \n+#\n+\n+#\n+# Hedwig Logging Configuration\n+#\n+\n+# Format is \"<default threshold> (, <appender>)+\n+\n+# DEFAULT: console appender only\n+log4j.rootLogger=OFF, CONSOLE\n+\n+# Example with rolling log file\n+#log4j.rootLogger=DEBUG, CONSOLE, ROLLINGFILE\n+\n+# Example with rolling log file and tracing\n+#log4j.rootLogger=TRACE, CONSOLE, ROLLINGFILE, TRACEFILE\n+\n+#\n+# Log INFO level and above messages to the console\n+#\n+log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender\n+log4j.appender.CONSOLE.Threshold=INFO\n+log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout\n+log4j.appender.CONSOLE.layout.ConversionPattern=%d{ISO8601} - %-5p - [%t:%C{1}@%L] - %m%n\n+\n+#\n+# Add ROLLINGFILE to rootLogger to get log file output\n+#    Log DEBUG level and above messages to a log file\n+log4j.appender.ROLLINGFILE=org.apache.log4j.DailyRollingFileAppender\n+log4j.appender.ROLLINGFILE.Threshold=DEBUG\n+log4j.appender.ROLLINGFILE.File=hedwig-server.log\n+log4j.appender.ROLLINGFILE.layout=org.apache.log4j.PatternLayout\n+log4j.appender.ROLLINGFILE.layout.ConversionPattern=%d{ISO8601} - %-5p - [%t:%C{1}@%L] - %m%n\n+\n+# Max log file size of 10MB\n+log4j.appender.ROLLINGFILE.MaxFileSize=10MB\n+# uncomment the next line to limit number of backup files\n+#log4j.appender.ROLLINGFILE.MaxBackupIndex=10\n+\n+log4j.appender.ROLLINGFILE.layout=org.apache.log4j.PatternLayout\n+log4j.appender.ROLLINGFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L] - %m%n\n+\n+\n+#\n+# Add TRACEFILE to rootLogger to get log file output\n+#    Log DEBUG level and above messages to a log file\n+log4j.appender.TRACEFILE=org.apache.log4j.FileAppender\n+log4j.appender.TRACEFILE.Threshold=TRACE\n+log4j.appender.TRACEFILE.File=hedwig_trace.log\n+\n+log4j.appender.TRACEFILE.layout=org.apache.log4j.PatternLayout\n+### Notice we are including log4j's NDC here (%x)\n+log4j.appender.TRACEFILE.layout.ConversionPattern=%d{ISO8601} - %-5p [%t:%C{1}@%L][%x] - %m%n"},{"sha":"dc61b25bda57dbc817c33c37fdcf72525dfb0d48","filename":"pom.xml","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/apache/bookkeeper/blob/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc/pom.xml","raw_url":"https://github.com/apache/bookkeeper/raw/45aeb04735d120d3aa9a0110becf3ba2d7ef6afc/pom.xml","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/pom.xml?ref=45aeb04735d120d3aa9a0110becf3ba2d7ef6afc","patch":"@@ -32,6 +32,10 @@\n   \t<module>bookkeeper-server</module>\n   \t<module>bookkeeper-benchmark</module>\n   </modules>\n+  <properties>\n+    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n+  </properties>\n   <repositories>\n   </repositories>\n   <url>http://zookeeper.apache.org/bookkeeper</url>\n@@ -45,6 +49,11 @@\n           <target>1.6</target>\n         </configuration>\n       </plugin>\n+      <plugin>\n+      \t<groupId>org.apache.maven.plugins</groupId>\n+\t<artifactId>maven-surefire-plugin</artifactId>\n+\t<version>2.9</version>\n+      </plugin>\n     </plugins>\n   </build>\n   <reporting>"}]}

