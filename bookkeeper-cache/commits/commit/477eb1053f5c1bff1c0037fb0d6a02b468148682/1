{"sha":"477eb1053f5c1bff1c0037fb0d6a02b468148682","node_id":"MDY6Q29tbWl0MTU3NTk1Njo0NzdlYjEwNTNmNWMxYmZmMWMwMDM3ZmIwZDZhMDJiNDY4MTQ4Njgy","commit":{"author":{"name":"Benjamin Reed","email":"breed@apache.org","date":"2011-10-23T06:11:20Z"},"committer":{"name":"Benjamin Reed","email":"breed@apache.org","date":"2011-10-23T06:11:20Z"},"message":"BOOKKEEPER-84: Add versioning for ZK metadata\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1187846 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2c9fdb3b5022314c06bbef50c487d7684da38bd0","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/2c9fdb3b5022314c06bbef50c487d7684da38bd0"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/477eb1053f5c1bff1c0037fb0d6a02b468148682","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/477eb1053f5c1bff1c0037fb0d6a02b468148682","html_url":"https://github.com/apache/bookkeeper/commit/477eb1053f5c1bff1c0037fb0d6a02b468148682","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/477eb1053f5c1bff1c0037fb0d6a02b468148682/comments","author":{"login":"breed","id":143779,"node_id":"MDQ6VXNlcjE0Mzc3OQ==","avatar_url":"https://avatars.githubusercontent.com/u/143779?v=4","gravatar_id":"","url":"https://api.github.com/users/breed","html_url":"https://github.com/breed","followers_url":"https://api.github.com/users/breed/followers","following_url":"https://api.github.com/users/breed/following{/other_user}","gists_url":"https://api.github.com/users/breed/gists{/gist_id}","starred_url":"https://api.github.com/users/breed/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/breed/subscriptions","organizations_url":"https://api.github.com/users/breed/orgs","repos_url":"https://api.github.com/users/breed/repos","events_url":"https://api.github.com/users/breed/events{/privacy}","received_events_url":"https://api.github.com/users/breed/received_events","type":"User","site_admin":false},"committer":{"login":"breed","id":143779,"node_id":"MDQ6VXNlcjE0Mzc3OQ==","avatar_url":"https://avatars.githubusercontent.com/u/143779?v=4","gravatar_id":"","url":"https://api.github.com/users/breed","html_url":"https://github.com/breed","followers_url":"https://api.github.com/users/breed/followers","following_url":"https://api.github.com/users/breed/following{/other_user}","gists_url":"https://api.github.com/users/breed/gists{/gist_id}","starred_url":"https://api.github.com/users/breed/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/breed/subscriptions","organizations_url":"https://api.github.com/users/breed/orgs","repos_url":"https://api.github.com/users/breed/repos","events_url":"https://api.github.com/users/breed/events{/privacy}","received_events_url":"https://api.github.com/users/breed/received_events","type":"User","site_admin":false},"parents":[{"sha":"d05e52ce5a6bf8b0076685ccec03f5ab91b2b32d","url":"https://api.github.com/repos/apache/bookkeeper/commits/d05e52ce5a6bf8b0076685ccec03f5ab91b2b32d","html_url":"https://github.com/apache/bookkeeper/commit/d05e52ce5a6bf8b0076685ccec03f5ab91b2b32d"}],"stats":{"total":52,"additions":35,"deletions":17},"files":[{"sha":"aeeda8a702c111a164fede3b3b85ca8067b95643","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/477eb1053f5c1bff1c0037fb0d6a02b468148682/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/477eb1053f5c1bff1c0037fb0d6a02b468148682/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=477eb1053f5c1bff1c0037fb0d6a02b468148682","patch":"@@ -46,6 +46,8 @@ BUGFIXES:\n \n   BOOKKEEPER-61: BufferedChannel read endless when the remaining bytes of file is less than the capacity of read buffer (Sijie Guo via breed)\n \n+  BOOKKEEPER-84: Add versioning for ZK metadata (ivank via breed)\n+\n  hedwig-server/\n \n   BOOKKEEPER-43: NullPointException when releasing topic (Sijie Guo via breed)"},{"sha":"328c7ca84842333ccbf423aade43b1b61f878a4a","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerMetadata.java","status":"modified","additions":33,"deletions":17,"changes":50,"blob_url":"https://github.com/apache/bookkeeper/blob/477eb1053f5c1bff1c0037fb0d6a02b468148682/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerMetadata.java","raw_url":"https://github.com/apache/bookkeeper/raw/477eb1053f5c1bff1c0037fb0d6a02b468148682/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerMetadata.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerMetadata.java?ref=477eb1053f5c1bff1c0037fb0d6a02b468148682","patch":"@@ -44,6 +44,12 @@\n     // can't use -1 for NOTCLOSED because that is reserved for a closed, empty\n     // ledger\n     public static final int NOTCLOSED = -101;\n+    public static final int LOWEST_COMPAT_METADATA_FORMAT_VERSION = 0;\n+    public static final int CURRENT_METADATA_FORMAT_VERSION = 1;\n+    public static final String VERSION_KEY = \"BookieMetadataFormatVersion\";\n+\n+    int metadataFormatVersion = 0;\n+\n     int ensembleSize;\n     int quorumSize;\n     long length;\n@@ -62,6 +68,7 @@ public LedgerMetadata(int ensembleSize, int quorumSize) {\n          */\n         this.length = 0;\n         this.close = NOTCLOSED;\n+        this.metadataFormatVersion = CURRENT_METADATA_FORMAT_VERSION;\n     };\n \n     private LedgerMetadata() {\n@@ -126,6 +133,7 @@ long getNextEnsembleChange(long entryId) {\n      */\n     public byte[] serialize() {\n         StringBuilder s = new StringBuilder();\n+        s.append(VERSION_KEY).append(tSplitter).append(metadataFormatVersion).append(lSplitter);\n         s.append(quorumSize).append(lSplitter).append(ensembleSize).append(lSplitter).append(length);\n \n         for (Map.Entry<Long, ArrayList<InetSocketAddress>> entry : ensembles.entrySet()) {\n@@ -167,25 +175,33 @@ static LedgerMetadata parseConfig(byte[] bytes, int version) throws IOException\n         }\n         \n         String lines[] = config.split(lSplitter);\n-\n-        if (lines.length < 2) {\n-            throw new IOException(\"Quorum size or ensemble size absent from config: \" + config);\n-        }\n-\n+        \n         try {\n-            /*\n-             * Updating the znode version\n-             */\n-            lc.znodeVersion = version;\n+            int i = 0;\n+            if (lines[0].startsWith(VERSION_KEY)) {\n+                String parts[] = lines[0].split(tSplitter);\n+                lc.metadataFormatVersion = new Integer(parts[1]);\n+                i++;\n+            } else {\n+                lc.metadataFormatVersion = 0;\n+            }\n             \n-            /*\n-             * Updating metadata info\n-             */\n-            lc.quorumSize = new Integer(lines[0]);\n-            lc.ensembleSize = new Integer(lines[1]);\n-            lc.length = new Long(lines[2]);\n-\n-            for (int i = 3; i < lines.length; i++) {\n+            if (lc.metadataFormatVersion < LOWEST_COMPAT_METADATA_FORMAT_VERSION\n+                || lc.metadataFormatVersion > CURRENT_METADATA_FORMAT_VERSION) {\n+                throw new IOException(\"Metadata version not compatible. Expected between \"\n+                        + LOWEST_COMPAT_METADATA_FORMAT_VERSION + \" and \" + CURRENT_METADATA_FORMAT_VERSION\n+                        + \", but got \" + lc.metadataFormatVersion);\n+            }\n+            if ((lines.length+i) < 2) {\n+                throw new IOException(\"Quorum size or ensemble size absent from config: \" + config);\n+            }\n+\n+            lc.znodeVersion = version;\n+            lc.quorumSize = new Integer(lines[i++]);\n+            lc.ensembleSize = new Integer(lines[i++]);\n+            lc.length = new Long(lines[i++]);\n+\n+            for (; i < lines.length; i++) {\n                 String parts[] = lines[i].split(tSplitter);\n \n                 if (parts[1].equals(closed)) {"}]}

