{"sha":"48097fdb4726ffdf03187868d5a6fadc6368b705","node_id":"MDY6Q29tbWl0MTU3NTk1Njo0ODA5N2ZkYjQ3MjZmZmRmMDMxODc4NjhkNWE2ZmFkYzYzNjhiNzA1","commit":{"author":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2014-03-04T08:20:31Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2014-03-04T08:20:31Z"},"message":"BOOKKEEPER-688: NPE exception in PerChannelBookieClient (ivank via sijie)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1573930 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"b89b1f66fa8220081ea9e2819656a0bc817381a0","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/b89b1f66fa8220081ea9e2819656a0bc817381a0"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/48097fdb4726ffdf03187868d5a6fadc6368b705","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/48097fdb4726ffdf03187868d5a6fadc6368b705","html_url":"https://github.com/apache/bookkeeper/commit/48097fdb4726ffdf03187868d5a6fadc6368b705","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/48097fdb4726ffdf03187868d5a6fadc6368b705/comments","author":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"4d19b92a2d537d20b11267c6711d81644155e3f2","url":"https://api.github.com/repos/apache/bookkeeper/commits/4d19b92a2d537d20b11267c6711d81644155e3f2","html_url":"https://github.com/apache/bookkeeper/commit/4d19b92a2d537d20b11267c6711d81644155e3f2"}],"stats":{"total":29,"additions":23,"deletions":6},"files":[{"sha":"25ce455c89dd5548e0852647ea7ee89b1c97b637","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/48097fdb4726ffdf03187868d5a6fadc6368b705/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/48097fdb4726ffdf03187868d5a6fadc6368b705/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=48097fdb4726ffdf03187868d5a6fadc6368b705","patch":"@@ -10,6 +10,8 @@ Release 4.2.3 - 2013-12-04\n \n         BOOKKEEPER-712: bookkeeper script should use 'java' from JAVA_HOME (vinay via sijie)\n \n+        BOOKKEEPER-688: NPE exception in PerChannelBookieClient (ivank via sijie)\n+\n Release 4.2.2 - 2013-10-02\n \n   Backward compatible changes:"},{"sha":"b44ac7bd1b726d87addde7161bed5fd3f6ff2ab8","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java","status":"modified","additions":21,"deletions":6,"changes":27,"blob_url":"https://github.com/apache/bookkeeper/blob/48097fdb4726ffdf03187868d5a6fadc6368b705/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java","raw_url":"https://github.com/apache/bookkeeper/raw/48097fdb4726ffdf03187868d5a6fadc6368b705/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java?ref=48097fdb4726ffdf03187868d5a6fadc6368b705","patch":"@@ -255,14 +255,19 @@ void addEntry(final long ledgerId, byte[] masterKey, final long entryId, Channel\n \n             ChannelBuffer wrappedBuffer = ChannelBuffers.wrappedBuffer(header, toSend);\n \n-            ChannelFuture future = channel.write(wrappedBuffer);\n+            final Channel c = channel;\n+            if (c == null) {\n+                errorOutReadKey(completionKey);\n+                return;\n+            }\n+            ChannelFuture future = c.write(wrappedBuffer);\n             future.addListener(new ChannelFutureListener() {\n                 @Override\n                 public void operationComplete(ChannelFuture future) throws Exception {\n                     if (future.isSuccess()) {\n                         if (LOG.isDebugEnabled()) {\n                             LOG.debug(\"Successfully wrote request for adding entry: \" + entryId + \" ledger-id: \" + ledgerId\n-                                                            + \" bookie: \" + channel.getRemoteAddress() + \" entry length: \" + entrySize);\n+                                                            + \" bookie: \" + c.getRemoteAddress() + \" entry length: \" + entrySize);\n                         }\n                         // totalBytesOutstanding.addAndGet(entrySize);\n                     } else {\n@@ -298,14 +303,19 @@ public void readEntryAndFenceLedger(final long ledgerId, byte[] masterKey,\n         tmpEntry.writeLong(entryId);\n         tmpEntry.writeBytes(masterKey, 0, BookieProtocol.MASTER_KEY_LENGTH);\n \n-        ChannelFuture future = channel.write(tmpEntry);\n+        final Channel c = channel;\n+        if (c == null) {\n+            errorOutReadKey(key);\n+            return;\n+        }\n+        ChannelFuture future = c.write(tmpEntry);\n         future.addListener(new ChannelFutureListener() {\n             @Override\n             public void operationComplete(ChannelFuture future) throws Exception {\n                 if (future.isSuccess()) {\n                     if (LOG.isDebugEnabled()) {\n                         LOG.debug(\"Successfully wrote request for reading entry: \" + entryId + \" ledger-id: \"\n-                                  + ledgerId + \" bookie: \" + channel.getRemoteAddress());\n+                                  + ledgerId + \" bookie: \" + c.getRemoteAddress());\n                     }\n                 } else {\n                     errorOutReadKey(key);\n@@ -332,14 +342,19 @@ public void readEntry(final long ledgerId, final long entryId, ReadEntryCallback\n             tmpEntry.writeLong(ledgerId);\n             tmpEntry.writeLong(entryId);\n \n-            ChannelFuture future = channel.write(tmpEntry);\n+            final Channel c = channel;\n+            if (c == null) {\n+                errorOutReadKey(key);\n+                return;\n+            }\n+            ChannelFuture future = c.write(tmpEntry);\n             future.addListener(new ChannelFutureListener() {\n                 @Override\n                 public void operationComplete(ChannelFuture future) throws Exception {\n                     if (future.isSuccess()) {\n                         if (LOG.isDebugEnabled()) {\n                             LOG.debug(\"Successfully wrote request for reading entry: \" + entryId + \" ledger-id: \"\n-                                                            + ledgerId + \" bookie: \" + channel.getRemoteAddress());\n+                                                            + ledgerId + \" bookie: \" + c.getRemoteAddress());\n                         }\n                     } else {\n                         errorOutReadKey(key);"}]}

