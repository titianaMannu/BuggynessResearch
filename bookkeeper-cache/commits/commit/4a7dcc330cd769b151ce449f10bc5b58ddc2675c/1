{"sha":"4a7dcc330cd769b151ce449f10bc5b58ddc2675c","node_id":"MDY6Q29tbWl0MTU3NTk1Njo0YTdkY2MzMzBjZDc2OWIxNTFjZTQ0OWYxMGJjNWI1OGRkYzI2NzVj","commit":{"author":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2013-07-20T18:13:09Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2013-07-20T18:13:09Z"},"message":"BOOKKEEPER-621: NPE in FileInfo.moveToNewLocation (ivank via sijie)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1505176 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"1f79676c8299d06facd4e87f10a1ae383fd68ed7","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/1f79676c8299d06facd4e87f10a1ae383fd68ed7"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/4a7dcc330cd769b151ce449f10bc5b58ddc2675c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/4a7dcc330cd769b151ce449f10bc5b58ddc2675c","html_url":"https://github.com/apache/bookkeeper/commit/4a7dcc330cd769b151ce449f10bc5b58ddc2675c","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/4a7dcc330cd769b151ce449f10bc5b58ddc2675c/comments","author":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"ce6a212ce15635229acc0aa9ce52aa691ec457bf","url":"https://api.github.com/repos/apache/bookkeeper/commits/ce6a212ce15635229acc0aa9ce52aa691ec457bf","html_url":"https://github.com/apache/bookkeeper/commit/ce6a212ce15635229acc0aa9ce52aa691ec457bf"}],"stats":{"total":75,"additions":41,"deletions":34},"files":[{"sha":"2898b10db7c91aee943f543959cca9a12b82bea8","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/4a7dcc330cd769b151ce449f10bc5b58ddc2675c/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/4a7dcc330cd769b151ce449f10bc5b58ddc2675c/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=4a7dcc330cd769b151ce449f10bc5b58ddc2675c","patch":"@@ -40,6 +40,8 @@ Release 4.2.2 - Unreleased\n \n         BOOKKEEPER-636: Latest txn logs might be deleted in a race condition which is not recoverable if BK goes down before next txn log created. (vinay via ivank)\n \n+        BOOKKEEPER-621: NPE in FileInfo.moveToNewLocation (ivank via sijie)\n+\n       hedwig-server:\n \n         BOOKKEEPER-579: TestSubAfterCloseSub was put in a wrong package (sijie via ivank)"},{"sha":"1a0e8eb9c3dce677f0ec3237ec00c001909f7a97","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileInfo.java","status":"modified","additions":39,"deletions":34,"changes":73,"blob_url":"https://github.com/apache/bookkeeper/blob/4a7dcc330cd769b151ce449f10bc5b58ddc2675c/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileInfo.java","raw_url":"https://github.com/apache/bookkeeper/raw/4a7dcc330cd769b151ce449f10bc5b58ddc2675c/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileInfo.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/FileInfo.java?ref=4a7dcc330cd769b151ce449f10bc5b58ddc2675c","patch":"@@ -224,6 +224,9 @@ synchronized public int read(ByteBuffer bb, long position) throws IOException {\n \n     private int readAbsolute(ByteBuffer bb, long start) throws IOException {\n         checkOpen(false);\n+        if (fc == null) {\n+            return 0;\n+        }\n         int total = 0;\n         while(bb.remaining() > 0) {\n             int rc = fc.read(bb, start);\n@@ -282,47 +285,49 @@ synchronized public long write(ByteBuffer[] buffs, long position) throws IOExcep\n      */\n     public synchronized void moveToNewLocation(File newFile, long size) throws IOException {\n         checkOpen(false);\n-        if (size > fc.size()) {\n-            size = fc.size();\n-        }\n-        File rlocFile = new File(newFile.getParentFile(), newFile.getName() + LedgerCacheImpl.RLOC);\n-        if (!rlocFile.exists()) {\n-            checkParents(rlocFile);\n-            if (!rlocFile.createNewFile()) {\n-                throw new IOException(\"Creating new cache index file \" + rlocFile + \" failed \");\n+        if (fc != null) {\n+            if (size > fc.size()) {\n+                size = fc.size();\n             }\n-        }\n-        // copy contents from old.idx to new.idx.rloc\n-        FileChannel newFc = new RandomAccessFile(rlocFile, \"rw\").getChannel();\n-        try {\n-            long written = 0;\n-            while (written < size) {\n-                long count = fc.transferTo(written, size, newFc);\n-                if (count <= 0) {\n+            File rlocFile = new File(newFile.getParentFile(), newFile.getName() + LedgerCacheImpl.RLOC);\n+            if (!rlocFile.exists()) {\n+                checkParents(rlocFile);\n+                if (!rlocFile.createNewFile()) {\n+                    throw new IOException(\"Creating new cache index file \" + rlocFile + \" failed \");\n+                }\n+            }\n+            // copy contents from old.idx to new.idx.rloc\n+            FileChannel newFc = new RandomAccessFile(rlocFile, \"rw\").getChannel();\n+            try {\n+                long written = 0;\n+                while (written < size) {\n+                    long count = fc.transferTo(written, size, newFc);\n+                    if (count <= 0) {\n+                        throw new IOException(\"Copying to new location \" + rlocFile + \" failed\");\n+                    }\n+                    written += count;\n+                }\n+                if (written <= 0 && size > 0) {\n                     throw new IOException(\"Copying to new location \" + rlocFile + \" failed\");\n                 }\n-                written += count;\n+            } finally {\n+                newFc.force(true);\n+                newFc.close();\n             }\n-            if (written <= 0 && size > 0) {\n-                throw new IOException(\"Copying to new location \" + rlocFile + \" failed\");\n+            // delete old.idx\n+            fc.close();\n+            if (!delete()) {\n+                LOG.error(\"Failed to delete the previous index file \" + lf);\n+                throw new IOException(\"Failed to delete the previous index file \" + lf);\n             }\n-        } finally {\n-            newFc.force(true);\n-            newFc.close();\n-        }\n-        // delete old.idx\n-        fc.close();\n-        if (!delete()) {\n-            LOG.error(\"Failed to delete the previous index file \" + lf);\n-            throw new IOException(\"Failed to delete the previous index file \" + lf);\n-        }\n \n-        // rename new.idx.rloc to new.idx\n-        if (!rlocFile.renameTo(newFile)) {\n-            LOG.error(\"Failed to rename \" + rlocFile + \" to \" + newFile);\n-            throw new IOException(\"Failed to rename \" + rlocFile + \" to \" + newFile);\n+            // rename new.idx.rloc to new.idx\n+            if (!rlocFile.renameTo(newFile)) {\n+                LOG.error(\"Failed to rename \" + rlocFile + \" to \" + newFile);\n+                throw new IOException(\"Failed to rename \" + rlocFile + \" to \" + newFile);\n+            }\n+            fc = new RandomAccessFile(newFile, mode).getChannel();\n         }\n-        fc = new RandomAccessFile(newFile, mode).getChannel();\n         lf = newFile;\n     }\n "}]}

