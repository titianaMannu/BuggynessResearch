{"sha":"63345f59c91f121af99902f501acc3c96fbc5ce5","node_id":"MDY6Q29tbWl0MTU3NTk1Njo2MzM0NWY1OWM5MWYxMjFhZjk5OTAyZjUwMWFjYzNjOTZmYmM1Y2U1","commit":{"author":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2013-09-09T16:00:56Z"},"committer":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2013-09-09T16:00:56Z"},"message":"BOOKKEEPER-669: Race condition in ledger deletion and eviction from cache (rakeshr via ivank)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1521170 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"41a79a5c43b5213b79b6137f082116c7d3f720f6","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/41a79a5c43b5213b79b6137f082116c7d3f720f6"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/63345f59c91f121af99902f501acc3c96fbc5ce5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/63345f59c91f121af99902f501acc3c96fbc5ce5","html_url":"https://github.com/apache/bookkeeper/commit/63345f59c91f121af99902f501acc3c96fbc5ce5","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/63345f59c91f121af99902f501acc3c96fbc5ce5/comments","author":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"committer":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"parents":[{"sha":"26913eb63e74a23785bb7f2583e3bb15b1031ecf","url":"https://api.github.com/repos/apache/bookkeeper/commits/26913eb63e74a23785bb7f2583e3bb15b1031ecf","html_url":"https://github.com/apache/bookkeeper/commit/26913eb63e74a23785bb7f2583e3bb15b1031ecf"}],"stats":{"total":56,"additions":55,"deletions":1},"files":[{"sha":"095b8db977b30c203928555d49bf86c643765fb0","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/63345f59c91f121af99902f501acc3c96fbc5ce5/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/63345f59c91f121af99902f501acc3c96fbc5ce5/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=63345f59c91f121af99902f501acc3c96fbc5ce5","patch":"@@ -74,6 +74,8 @@ Release 4.2.2 - Unreleased\n \n         BOOKKEEPER-679: Bookie should exit with non-zero if NIOServer crashes with Error (ivank)\n \n+        BOOKKEEPER-669: Race condition in ledger deletion and eviction from cache (rakeshr via ivank)\n+\n       hedwig-server:\n \n         BOOKKEEPER-579: TestSubAfterCloseSub was put in a wrong package (sijie via ivank)"},{"sha":"8a48fc88497dbd9e2f0663a38f0ab6e09ffe0385","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheImpl.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/apache/bookkeeper/blob/63345f59c91f121af99902f501acc3c96fbc5ce5/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheImpl.java","raw_url":"https://github.com/apache/bookkeeper/raw/63345f59c91f121af99902f501acc3c96fbc5ce5/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheImpl.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheImpl.java?ref=63345f59c91f121af99902f501acc3c96fbc5ce5","patch":"@@ -805,7 +805,10 @@ private void evictFileInfoIfNecessary() throws IOException {\n                 long ledgerToRemove = openLedgers.removeFirst();\n                 LOG.info(\"Ledger {} is evicted from file info cache.\",\n                          ledgerToRemove);\n-                fileInfoCache.remove(ledgerToRemove).close(true);\n+                FileInfo fi = fileInfoCache.remove(ledgerToRemove);\n+                if (fi != null) {\n+                    fi.close(true);\n+                }\n             }\n         }\n     }"},{"sha":"716018133f1c485781bcd96e9eef7d051c5fd92a","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/LedgerCacheTest.java","status":"modified","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/apache/bookkeeper/blob/63345f59c91f121af99902f501acc3c96fbc5ce5/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/LedgerCacheTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/63345f59c91f121af99902f501acc3c96fbc5ce5/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/LedgerCacheTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/LedgerCacheTest.java?ref=63345f59c91f121af99902f501acc3c96fbc5ce5","patch":"@@ -200,6 +200,55 @@ public void testDeleteLedger() throws Exception {\n         }\n     }\n \n+    /**\n+     * Test simulating race condition between when a ledger is deleting and an\n+     * eviction from LedgerCache simultaneously\n+     */\n+    @Test(timeout = 60000)\n+    public void testPageEvictionWhileDeleteLedgerInProgress() throws Exception {\n+        File ledgerDir1 = File.createTempFile(\"bkTest\", \".dir\");\n+        ledgerDir1.delete();\n+        File ledgerDir2 = File.createTempFile(\"bkTest\", \".dir\");\n+        ledgerDir2.delete();\n+        ServerConfiguration conf = new ServerConfiguration();\n+        conf.setLedgerDirNames(new String[] { ledgerDir1.getAbsolutePath(),\n+                ledgerDir2.getAbsolutePath() });\n+        conf.setOpenFileLimit(1);\n+        Bookie bookie = new Bookie(conf);\n+        InterleavedLedgerStorage ledgerStorage = ((InterleavedLedgerStorage) bookie.ledgerStorage);\n+        final LedgerCacheImpl ledgerCache = (LedgerCacheImpl) ledgerStorage.ledgerCache;\n+        // Create ledger index\n+        final int ledgerCount = 2;\n+        putLedger(ledgerCache, ledgerCount);\n+        for (int id = 0; id < ledgerCount; id++) {\n+            LOG.info(\"Deleting ledger id {}\", id);\n+            ledgerCache.deleteLedger(id);\n+        }\n+        // Adding ledgers back to the openLedgers data structure. This is done\n+        // to simulate the case - during ledger eviction it would be deleted\n+        // from fileInfoCache and exists only in openLedgers list, as these two\n+        // are not atomic operations\n+        ledgerCache.openLedgers.add(Long.valueOf(0));\n+        ledgerCache.openLedgers.add(Long.valueOf(1));\n+        for (int id = 0; id < ledgerCount; id++) {\n+            try {\n+                LOG.info(\"Reading ledger id {}\", id);\n+                ledgerCache.getFileInfo(Long.valueOf(id), \"key\".getBytes());\n+            } catch (Exception e) {\n+                LOG.info(\"Exception occured while getting the ledger info!\", e);\n+                Assert.fail(\"Exception occured while getting the ledger id \"\n+                        + id);\n+            }\n+        }\n+    }\n+\n+    private void putLedger(LedgerCacheImpl ledgerCache, int count)\n+            throws IOException {\n+        for (int id = 0; id < count; id++) {\n+            ledgerCache.getFileInfo(Long.valueOf(id), \"key\".getBytes());\n+        }\n+    }\n+\n     @Test(timeout=30000)\n     public void testPageEviction() throws Exception {\n         int numLedgers = 10;"}]}

