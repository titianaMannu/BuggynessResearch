{"sha":"633a23b3a20b27a551328be2efe5f057be3c99e2","node_id":"MDY6Q29tbWl0MTU3NTk1Njo2MzNhMjNiM2EyMGIyN2E1NTEzMjhiZTJlZmU1ZjA1N2JlM2M5OWUy","commit":{"author":{"name":"Flavio Paiva Junqueira","email":"fpj@apache.org","date":"2012-02-15T15:11:53Z"},"committer":{"name":"Flavio Paiva Junqueira","email":"fpj@apache.org","date":"2012-02-15T15:11:53Z"},"message":"BOOKKEEPER-170: Bookie constructor starts a number of threads. (ivank via fpj)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1244528 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"127bd4fb912ac837d8554453eaa0d3908d7326ee","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/127bd4fb912ac837d8554453eaa0d3908d7326ee"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/633a23b3a20b27a551328be2efe5f057be3c99e2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/633a23b3a20b27a551328be2efe5f057be3c99e2","html_url":"https://github.com/apache/bookkeeper/commit/633a23b3a20b27a551328be2efe5f057be3c99e2","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/633a23b3a20b27a551328be2efe5f057be3c99e2/comments","author":{"login":"fpj","id":572920,"node_id":"MDQ6VXNlcjU3MjkyMA==","avatar_url":"https://avatars.githubusercontent.com/u/572920?v=4","gravatar_id":"","url":"https://api.github.com/users/fpj","html_url":"https://github.com/fpj","followers_url":"https://api.github.com/users/fpj/followers","following_url":"https://api.github.com/users/fpj/following{/other_user}","gists_url":"https://api.github.com/users/fpj/gists{/gist_id}","starred_url":"https://api.github.com/users/fpj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fpj/subscriptions","organizations_url":"https://api.github.com/users/fpj/orgs","repos_url":"https://api.github.com/users/fpj/repos","events_url":"https://api.github.com/users/fpj/events{/privacy}","received_events_url":"https://api.github.com/users/fpj/received_events","type":"User","site_admin":false},"committer":{"login":"fpj","id":572920,"node_id":"MDQ6VXNlcjU3MjkyMA==","avatar_url":"https://avatars.githubusercontent.com/u/572920?v=4","gravatar_id":"","url":"https://api.github.com/users/fpj","html_url":"https://github.com/fpj","followers_url":"https://api.github.com/users/fpj/followers","following_url":"https://api.github.com/users/fpj/following{/other_user}","gists_url":"https://api.github.com/users/fpj/gists{/gist_id}","starred_url":"https://api.github.com/users/fpj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fpj/subscriptions","organizations_url":"https://api.github.com/users/fpj/orgs","repos_url":"https://api.github.com/users/fpj/repos","events_url":"https://api.github.com/users/fpj/events{/privacy}","received_events_url":"https://api.github.com/users/fpj/received_events","type":"User","site_admin":false},"parents":[{"sha":"3defe9e5110472da995789b5ae14c286f58f1293","url":"https://api.github.com/repos/apache/bookkeeper/commits/3defe9e5110472da995789b5ae14c286f58f1293","html_url":"https://github.com/apache/bookkeeper/commit/3defe9e5110472da995789b5ae14c286f58f1293"}],"stats":{"total":57,"additions":36,"deletions":21},"files":[{"sha":"e6d2642cddb7834015896709d3ecd3f69c3d493d","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/633a23b3a20b27a551328be2efe5f057be3c99e2/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/633a23b3a20b27a551328be2efe5f057be3c99e2/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=633a23b3a20b27a551328be2efe5f057be3c99e2","patch":"@@ -37,6 +37,8 @@ Trunk (unreleased changes)\n         BOOKKEEPER-152: Can't recover a ledger whose current ensemble contain failed bookie. (ivank)\n \n         BOOKKEEPER-171: ServerConfiguration can't use more than one directory for ledgers. (ivank via sijie)\n+\t\n+\tBOOKKEEPER-170: Bookie constructor starts a number of threads. (ivank via fpj)\n \n       hedwig-server/\n       "},{"sha":"2fb7c6ceaf30556dfe9aea95c9b3fa1c20d1178d","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java","status":"modified","additions":24,"deletions":11,"changes":35,"blob_url":"https://github.com/apache/bookkeeper/blob/633a23b3a20b27a551328be2efe5f057be3c99e2/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java","raw_url":"https://github.com/apache/bookkeeper/raw/633a23b3a20b27a551328be2efe5f057be3c99e2/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java?ref=633a23b3a20b27a551328be2efe5f057be3c99e2","patch":"@@ -268,13 +268,17 @@ public Bookie(ServerConfiguration conf)\n         }\n \n         // instantiate zookeeper client to initialize ledger manager\n-        ZooKeeper newZk = instantiateZookeeperClient(conf.getZkServers());\n-        ledgerManager = LedgerManagerFactory.newLedgerManager(conf, newZk);\n+        this.zk = instantiateZookeeperClient(conf.getZkServers());\n+        ledgerManager = LedgerManagerFactory.newLedgerManager(conf, this.zk);\n \n         syncThread = new SyncThread(conf);\n         entryLogger = new EntryLogger(conf, this);\n         ledgerCache = new LedgerCache(conf, ledgerManager);\n \n+        readJournal();\n+    }\n+\n+    private void readJournal() throws IOException, BookieException {\n         lastLogMark.readLog();\n         if (LOG.isDebugEnabled()) {\n             LOG.debug(\"Last Log Mark : \" + lastLogMark);\n@@ -346,12 +350,11 @@ public boolean accept(long journalId) {\n                         int masterKeyLen = recBuff.getInt();\n                         byte[] masterKey = new byte[masterKeyLen];\n                         recBuff.get(masterKey);\n-                        \n                         handle.checkAccess(masterKey);\n                         putHandle(handle);\n                     } else {\n                         throw new IOException(\"Invalid journal. Contains journalKey \"\n-                                + \" but layout version (\" + recLog.getFormatVersion() \n+                                + \" but layout version (\" + recLog.getFormatVersion()\n                                 + \") is too old to hold this\");\n                     }\n                 } else {\n@@ -365,20 +368,29 @@ public boolean accept(long journalId) {\n             }\n             recLog.close();\n         }\n-        // pass zookeeper instance here\n-        // since GarbageCollector thread should only start after journal\n-        // finished replay\n-        this.zk = newZk;\n-        // make the bookie available\n-        registerBookie(conf.getBookiePort());\n+    }\n+\n+    synchronized public void start() {\n         setDaemon(true);\n         LOG.debug(\"I'm starting a bookie with journal directory \" + journalDirectory.getName());\n-        start();\n+        super.start();\n         syncThread.start();\n+        entryLogger.start();\n         // set running here.\n         // since bookie server use running as a flag to tell bookie server whether it is alive\n         // if setting it in bookie thread, the watcher might run before bookie thread.\n         running = true;\n+        try {\n+            registerBookie(conf.getBookiePort());\n+        } catch (IOException e) {\n+            LOG.error(\"Couldn't register bookie with zookeeper, shutting down\", e);\n+            try {\n+                shutdown();\n+            } catch (InterruptedException ie) {\n+                LOG.error(\"Interrupted shutting down\", ie);\n+                System.exit(-1);\n+            }\n+        }\n     }\n \n     public static interface JournalIdFilter {\n@@ -1040,6 +1052,7 @@ synchronized public void waitZero() throws InterruptedException {\n     public static void main(String[] args) \n             throws IOException, InterruptedException, BookieException, KeeperException {\n         Bookie b = new Bookie(new ServerConfiguration());\n+        b.start();\n         CounterCallback cb = new CounterCallback();\n         long start = System.currentTimeMillis();\n         for (int i = 0; i < 100000; i++) {"},{"sha":"aca66e62c0460fd478c03cac3441427ebb77d0f7","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/EntryLogger.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/apache/bookkeeper/blob/633a23b3a20b27a551328be2efe5f057be3c99e2/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/EntryLogger.java","raw_url":"https://github.com/apache/bookkeeper/raw/633a23b3a20b27a551328be2efe5f057be3c99e2/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/EntryLogger.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/EntryLogger.java?ref=633a23b3a20b27a551328be2efe5f057be3c99e2","patch":"@@ -106,6 +106,9 @@ public EntryLogger(ServerConfiguration conf, Bookie bookie) throws IOException {\n             }\n         }\n         createLogId(logId);\n+    }\n+\n+    public void start() {\n         // Start the Garbage Collector thread to prune unneeded entry logs.\n         gcThread.start();\n     }"},{"sha":"bee3be92ced7ee4d28d45a8ae11d5225902a04cb","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/633a23b3a20b27a551328be2efe5f057be3c99e2/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java","raw_url":"https://github.com/apache/bookkeeper/raw/633a23b3a20b27a551328be2efe5f057be3c99e2/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java?ref=633a23b3a20b27a551328be2efe5f057be3c99e2","patch":"@@ -75,6 +75,8 @@ public BookieServer(ServerConfiguration conf)\n     }\n \n     public void start() throws IOException {\n+        this.bookie.start();\n+\n         nioServerFactory = new NIOServerFactory(conf, this);\n         running = true;\n         deathWatcher = new DeathWatcher(conf);"},{"sha":"2df0ed0b9113e98b2b23be03982673affc8b0639","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieJournalTest.java","status":"modified","additions":1,"deletions":10,"changes":11,"blob_url":"https://github.com/apache/bookkeeper/blob/633a23b3a20b27a551328be2efe5f057be3c99e2/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieJournalTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/633a23b3a20b27a551328be2efe5f057be3c99e2/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieJournalTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieJournalTest.java?ref=633a23b3a20b27a551328be2efe5f057be3c99e2","patch":"@@ -152,6 +152,7 @@ public void testPreV2Journal() throws Exception {\n             .setLedgerDirNames(new String[] { ledgerDir.getPath() });\n \n         Bookie b = new Bookie(conf);\n+        b.start();\n \n         b.readEntry(1, 100);\n         try {\n@@ -223,7 +224,6 @@ public void testEmptyJournal() throws Exception {\n             .setLedgerDirNames(new String[] { ledgerDir.getPath() });\n \n         Bookie b = new Bookie(conf);\n-        b.shutdown();\n     }\n \n     /**\n@@ -248,7 +248,6 @@ public void testHeaderOnlyJournal() throws Exception {\n             .setLedgerDirNames(new String[] { ledgerDir.getPath() });\n \n         Bookie b = new Bookie(conf);\n-        b.shutdown();\n     }\n \n     /**\n@@ -281,10 +280,6 @@ public void testJunkEndedJournal() throws Exception {\n             b = new Bookie(conf);\n         } catch (Throwable t) {\n             // correct behaviour\n-        } finally {\n-            if (b != null) {\n-                b.shutdown();\n-            }\n         }\n     }\n \n@@ -330,8 +325,6 @@ public void testTruncatedInLenJournal() throws Exception {\n         } catch (Bookie.NoEntryException e) {\n             // correct behaviour\n         }\n-\n-        b.shutdown();\n     }\n \n     /**\n@@ -388,8 +381,6 @@ public void testTruncatedInEntryJournal() throws Exception {\n         } catch (Bookie.NoEntryException e) {\n             // correct behaviour\n         }\n-\n-        b.shutdown();\n     }\n \n }"},{"sha":"f661e90d9a2c3c1b10bdd46c6457cc1b5146b078","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/EntryLogTest.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/633a23b3a20b27a551328be2efe5f057be3c99e2/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/EntryLogTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/633a23b3a20b27a551328be2efe5f057be3c99e2/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/EntryLogTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/EntryLogTest.java?ref=633a23b3a20b27a551328be2efe5f057be3c99e2","patch":"@@ -66,6 +66,8 @@ public void testCorruptEntryLog() throws Exception {\n         raf.close();\n         // now see which ledgers are in the log\n         logger = new EntryLogger(conf, null);\n+        logger.start();\n+\n         Thread.sleep(2 * gcWaitTime);\n         Field entryLogs2LedgersMapField = logger.getClass().getDeclaredField(\"entryLogs2LedgersMap\");\n         entryLogs2LedgersMapField.setAccessible(true);"},{"sha":"c21820be697a9aa2e53cf790ea82c082d2a51ed0","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/client/LedgerCacheTest.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/bookkeeper/blob/633a23b3a20b27a551328be2efe5f057be3c99e2/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/LedgerCacheTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/633a23b3a20b27a551328be2efe5f057be3c99e2/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/LedgerCacheTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/LedgerCacheTest.java?ref=633a23b3a20b27a551328be2efe5f057be3c99e2","patch":"@@ -86,6 +86,7 @@ public void setUp() throws Exception {\n         conf.setJournalDirName(txnDir.getPath());\n         conf.setLedgerDirNames(new String[] { ledgerDir.getPath() });\n         bookie = new Bookie(conf);\n+        bookie.start();\n     }\n \n "},{"sha":"8441a6b6740f4593ac693fec517269a43e5b2c35","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConcurrentLedgerTest.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/bookkeeper/blob/633a23b3a20b27a551328be2efe5f057be3c99e2/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConcurrentLedgerTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/633a23b3a20b27a551328be2efe5f057be3c99e2/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConcurrentLedgerTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConcurrentLedgerTest.java?ref=633a23b3a20b27a551328be2efe5f057be3c99e2","patch":"@@ -76,6 +76,7 @@ public void setUp() throws Exception {\n         conf.setJournalDirName(txnDir.getPath());\n         conf.setLedgerDirNames(new String[] { ledgerDir.getPath() });\n         bookie = new Bookie(conf);\n+        bookie.start();\n     }\n \n     static void recursiveDelete(File f) {"}]}

