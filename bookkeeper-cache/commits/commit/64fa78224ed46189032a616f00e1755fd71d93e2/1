{"sha":"64fa78224ed46189032a616f00e1755fd71d93e2","node_id":"MDY6Q29tbWl0MTU3NTk1Njo2NGZhNzgyMjRlZDQ2MTg5MDMyYTYxNmYwMGUxNzU1ZmQ3MWQ5M2Uy","commit":{"author":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2012-09-07T03:12:27Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2012-09-07T03:12:27Z"},"message":"BOOKKEEPER-394: CompositeException message is not useful (Stu Hood via sijie)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1381848 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2453eb773d65d661e31e5e22abcb918b85d7b74d","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/2453eb773d65d661e31e5e22abcb918b85d7b74d"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/64fa78224ed46189032a616f00e1755fd71d93e2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/64fa78224ed46189032a616f00e1755fd71d93e2","html_url":"https://github.com/apache/bookkeeper/commit/64fa78224ed46189032a616f00e1755fd71d93e2","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/64fa78224ed46189032a616f00e1755fd71d93e2/comments","author":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"800fe7de43333d14dedb2ab64e08a89a78fa31b2","url":"https://api.github.com/repos/apache/bookkeeper/commits/800fe7de43333d14dedb2ab64e08a89a78fa31b2","html_url":"https://github.com/apache/bookkeeper/commit/800fe7de43333d14dedb2ab64e08a89a78fa31b2"}],"stats":{"total":28,"additions":17,"deletions":11},"files":[{"sha":"31c075d641de7fbd17dc252a346ca0746dd80c9a","filename":"CHANGES.txt","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/apache/bookkeeper/blob/64fa78224ed46189032a616f00e1755fd71d93e2/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/64fa78224ed46189032a616f00e1755fd71d93e2/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=64fa78224ed46189032a616f00e1755fd71d93e2","patch":"@@ -76,6 +76,10 @@ Trunk (unreleased changes)\n \n         BOOKKEEPER-386: It should not be possible to replicate a ledger fragment which is at the end of an open ledger (ivank & umamahesh via ivank)\n \n+      hedwig-protocol:\n+\n+        BOOKKEEPER-394: CompositeException message is not useful (Stu Hood via sijie)\n+\n       hedwig-client:\n \n         BOOKKEEPER-274: Hedwig cpp client library should not link to cppunit which is just used for test. (sijie via ivank)"},{"sha":"f2a20d0efd074454b6cb103c362409f941ab388a","filename":"hedwig-protocol/src/main/java/org/apache/hedwig/exceptions/PubSubException.java","status":"modified","additions":13,"deletions":11,"changes":24,"blob_url":"https://github.com/apache/bookkeeper/blob/64fa78224ed46189032a616f00e1755fd71d93e2/hedwig-protocol/src/main/java/org/apache/hedwig/exceptions/PubSubException.java","raw_url":"https://github.com/apache/bookkeeper/raw/64fa78224ed46189032a616f00e1755fd71d93e2/hedwig-protocol/src/main/java/org/apache/hedwig/exceptions/PubSubException.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-protocol/src/main/java/org/apache/hedwig/exceptions/PubSubException.java?ref=64fa78224ed46189032a616f00e1755fd71d93e2","patch":"@@ -18,6 +18,7 @@\n package org.apache.hedwig.exceptions;\n \n import java.util.Collection;\n+import java.util.Iterator;\n \n import org.apache.hedwig.protocol.PubSubProtocol.StatusCode;\n \n@@ -195,9 +196,6 @@ public InvalidMessageFilterException(String msg, Throwable t) {\n         }\n     }\n \n-    /*\n-     * Insert new ones here\n-     */\n     public static class UncertainStateException extends PubSubException {\n         public UncertainStateException(String msg) {\n             super(StatusCode.UNCERTAIN_STATE, msg);\n@@ -218,19 +216,23 @@ public UnexpectedConditionException(String msg, Throwable t) {\n     public static class CompositeException extends PubSubException {\n         private final Collection<PubSubException> exceptions;\n         public CompositeException(Collection<PubSubException> exceptions) {\n-            super(StatusCode.COMPOSITE, \"composite exception\");\n+            super(StatusCode.COMPOSITE, compositeMessage(exceptions));\n             this.exceptions = exceptions;\n         }\n+\n         public Collection<PubSubException> getExceptions() {\n             return exceptions;\n         }\n-        @Override\n-        public String toString() {\n-            StringBuilder builder = new StringBuilder();\n-            builder.append(super.toString()).append('\\n');\n-            for (PubSubException exception : exceptions)\n-                builder.append(exception).append('\\n');\n-            return builder.toString();\n+\n+        /** Merges the message fields of the given Exceptions into a one line string. */\n+        private static String compositeMessage(Collection<PubSubException> exceptions) {\n+            StringBuilder builder = new StringBuilder(\"Composite exception: [\");\n+            Iterator<PubSubException> iter = exceptions.iterator();\n+            if (iter.hasNext())\n+                builder.append(iter.next().getMessage());\n+            while (iter.hasNext())\n+                builder.append(\" :: \").append(iter.next().getMessage());\n+            return builder.append(\"]\").toString();\n         }\n     }\n "}]}

