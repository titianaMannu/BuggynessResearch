{"sha":"67dccebdbee27476657898a370c4f1808231fc4b","node_id":"MDY6Q29tbWl0MTU3NTk1Njo2N2RjY2ViZGJlZTI3NDc2NjU3ODk4YTM3MGM0ZjE4MDgyMzFmYzRi","commit":{"author":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2013-11-22T09:40:15Z"},"committer":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2013-11-22T09:40:15Z"},"message":"BOOKKEEPER-678: BookieServer shutdown hangs indefinitely at NioServerSocketChannelFactory.releaseExternalResources (rakeshr via ivank)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1544452 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"265fcb6292be46acdb6aac0a8cd919fded8017c2","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/265fcb6292be46acdb6aac0a8cd919fded8017c2"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/67dccebdbee27476657898a370c4f1808231fc4b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/67dccebdbee27476657898a370c4f1808231fc4b","html_url":"https://github.com/apache/bookkeeper/commit/67dccebdbee27476657898a370c4f1808231fc4b","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/67dccebdbee27476657898a370c4f1808231fc4b/comments","author":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"committer":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"parents":[{"sha":"eb7066a02a50e2b15e66dfd4e99706ecf79454e6","url":"https://api.github.com/repos/apache/bookkeeper/commits/eb7066a02a50e2b15e66dfd4e99706ecf79454e6","html_url":"https://github.com/apache/bookkeeper/commit/eb7066a02a50e2b15e66dfd4e99706ecf79454e6"}],"stats":{"total":77,"additions":75,"deletions":2},"files":[{"sha":"46516885df9337b96f45f5e48250ff33bfc33008","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/67dccebdbee27476657898a370c4f1808231fc4b/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/67dccebdbee27476657898a370c4f1808231fc4b/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=67dccebdbee27476657898a370c4f1808231fc4b","patch":"@@ -122,6 +122,8 @@ Trunk (unreleased changes)\n \n         BOOKKEEPER-700: GarbageCollectorThread exsiting with ArrayIndexOutOfBoundsException (rakeshr via ivank)\n \n+        BOOKKEEPER-678: BookieServer shutdown hangs indefinitely at NioServerSocketChannelFactory.releaseExternalResources (rakeshr via ivank)\n+\n       hedwig-server:\n \n         BOOKKEEPER-601: readahead cache size isn't updated correctly (sijie via fpj)"},{"sha":"c85836ad9268ed54faf52babc64078660c40df1e","filename":"bookkeeper-server/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/67dccebdbee27476657898a370c4f1808231fc4b/bookkeeper-server/pom.xml","raw_url":"https://github.com/apache/bookkeeper/raw/67dccebdbee27476657898a370c4f1808231fc4b/bookkeeper-server/pom.xml","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/pom.xml?ref=67dccebdbee27476657898a370c4f1808231fc4b","patch":"@@ -75,7 +75,7 @@\n     <dependency>\n       <groupId>org.jboss.netty</groupId>\n       <artifactId>netty</artifactId>\n-      <version>3.2.4.Final</version>\n+      <version>3.2.9.Final</version>\n       <scope>compile</scope>\n     </dependency>\n     <dependency>"},{"sha":"8bddcceb29f39891633ac6ab5a829146d15ca32f","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieShutdownTest.java","status":"modified","additions":72,"deletions":1,"changes":73,"blob_url":"https://github.com/apache/bookkeeper/blob/67dccebdbee27476657898a370c4f1808231fc4b/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieShutdownTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/67dccebdbee27476657898a370c4f1808231fc4b/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieShutdownTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieShutdownTest.java?ref=67dccebdbee27476657898a370c4f1808231fc4b","patch":"@@ -20,17 +20,88 @@\n  */\n package org.apache.bookkeeper.bookie;\n \n+import java.nio.ByteBuffer;\n+import java.util.Random;\n import java.util.concurrent.CountDownLatch;\n import java.util.concurrent.TimeUnit;\n \n+import org.apache.bookkeeper.client.BKException;\n+import org.apache.bookkeeper.client.LedgerHandle;\n+import org.apache.bookkeeper.client.AsyncCallback.AddCallback;\n+import org.apache.bookkeeper.client.BookKeeper.DigestType;\n import org.apache.bookkeeper.conf.ServerConfiguration;\n import org.apache.bookkeeper.test.BookKeeperClusterTestCase;\n import org.junit.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class BookieShutdownTest extends BookKeeperClusterTestCase {\n \n+    private final static Logger LOG = LoggerFactory.getLogger(BookieShutdownTest.class);\n+\n     public BookieShutdownTest() {\n-        super(1);\n+        super(3);\n+    }\n+\n+    private LedgerHandle lh;\n+    private int numEntriesToWrite = 200;\n+    private int maxInt = 2147483647;\n+    private Random rng = new Random(System.currentTimeMillis());\n+    private DigestType digestType = DigestType.CRC32;\n+\n+    class SyncObj {\n+    }\n+\n+    /**\n+     * Tests verifies the bookkeeper shutdown while writing entries.\n+     * Continuously restarting the bookie server to see all the external\n+     * resources are releasing properly. BOOKKEEPER-678\n+     */\n+    @Test(timeout = 150000)\n+    public void testBookieRestartContinuously() throws Exception {\n+        for (int index = 0; index < 100; index++) {\n+            SyncObj sync = new SyncObj();\n+            try {\n+                // Create a ledger\n+                lh = bkc.createLedger(3, 2, digestType, \"aaa\".getBytes());\n+                LOG.info(\"Ledger ID: \" + lh.getId());\n+                for (int i = 0; i < numEntriesToWrite; i++) {\n+                    ByteBuffer entry = ByteBuffer.allocate(4);\n+                    entry.putInt(rng.nextInt(maxInt));\n+                    entry.position(0);\n+\n+                    lh.asyncAddEntry(entry.array(),\n+                            new LedgerEntryAddCallback(), sync);\n+                }\n+\n+                LOG.info(\"Wrote \" + numEntriesToWrite\n+                        + \" and now going to fail bookie.\");\n+                // Shutdown one Bookie server and restarting new one to continue\n+                // writing\n+                bsConfs.remove(0);\n+                bs.get(0).shutdown();\n+                bs.remove(0);\n+                startNewBookie();\n+                LOG.info(\"Shutdown one bookie server and started new bookie server...\");\n+            } catch (BKException e) {\n+                LOG.error(\"Caught BKException\", e);\n+                fail(e.toString());\n+            } catch (InterruptedException e) {\n+                LOG.error(\"Caught InterruptedException\", e);\n+                fail(e.toString());\n+            }\n+        }\n+    }\n+\n+    private class LedgerEntryAddCallback implements AddCallback {\n+        @Override\n+        public void addComplete(int rc, LedgerHandle lh, long entryId,\n+                Object ctx) {\n+            SyncObj x = (SyncObj) ctx;\n+            synchronized (x) {\n+                x.notify();\n+            }\n+        }\n     }\n \n     /**"}]}

