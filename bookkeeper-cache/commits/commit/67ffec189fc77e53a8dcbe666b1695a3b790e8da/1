{"sha":"67ffec189fc77e53a8dcbe666b1695a3b790e8da","node_id":"MDY6Q29tbWl0MTU3NTk1Njo2N2ZmZWMxODlmYzc3ZTUzYThkY2JlNjY2YjE2OTVhM2I3OTBlOGRh","commit":{"author":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2013-07-24T14:14:38Z"},"committer":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2013-07-24T14:14:38Z"},"message":"BOOKKEEPER-653: Timeout option is missing in few testcases (Rakesh via ivank)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1506569 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"aa1bfc59e2834112ab372f6baa359c077078233b","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/aa1bfc59e2834112ab372f6baa359c077078233b"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/67ffec189fc77e53a8dcbe666b1695a3b790e8da","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/67ffec189fc77e53a8dcbe666b1695a3b790e8da","html_url":"https://github.com/apache/bookkeeper/commit/67ffec189fc77e53a8dcbe666b1695a3b790e8da","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/67ffec189fc77e53a8dcbe666b1695a3b790e8da/comments","author":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"committer":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"parents":[{"sha":"a889f63d1041a84d6b894874b31681ed35312781","url":"https://api.github.com/repos/apache/bookkeeper/commits/a889f63d1041a84d6b894874b31681ed35312781","html_url":"https://github.com/apache/bookkeeper/commit/a889f63d1041a84d6b894874b31681ed35312781"}],"stats":{"total":30,"additions":16,"deletions":14},"files":[{"sha":"02ba03293946db3e78d9a01ca6818d36b1164955","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/67ffec189fc77e53a8dcbe666b1695a3b790e8da/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/67ffec189fc77e53a8dcbe666b1695a3b790e8da/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=67ffec189fc77e53a8dcbe666b1695a3b790e8da","patch":"@@ -44,6 +44,8 @@ Trunk (unreleased changes)\n \n       BOOKKEEPER-635: jenkins build should highlight which lines of the patch cause raw analysis errors (ivank via sijie)\n \n+      BOOKKEEPER-653: Timeout option is missing in few testcases (Rakesh via ivank)\n+\n       bookkeeper-server:\n \n         BOOKKEEPER-567: ReadOnlyBookieTest hangs on shutdown (sijie via ivank)"},{"sha":"5366f03705da67351e3021348a15db9a6edca82b","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieShutdownTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/67ffec189fc77e53a8dcbe666b1695a3b790e8da/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieShutdownTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/67ffec189fc77e53a8dcbe666b1695a3b790e8da/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieShutdownTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieShutdownTest.java?ref=67ffec189fc77e53a8dcbe666b1695a3b790e8da","patch":"@@ -38,7 +38,7 @@ public BookieShutdownTest() {\n      * \n      * @throws Exception\n      */\n-    @Test\n+    @Test(timeout = 60000)\n     public void testBookieShutdownFromBookieThread() throws Exception {\n         ServerConfiguration conf = bsConfs.get(0);\n         killBookie(0);"},{"sha":"9a37ad4d05993c26830aa00bf0d1d6b1f33992c6","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestFencing.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/67ffec189fc77e53a8dcbe666b1695a3b790e8da/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestFencing.java","raw_url":"https://github.com/apache/bookkeeper/raw/67ffec189fc77e53a8dcbe666b1695a3b790e8da/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestFencing.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestFencing.java?ref=67ffec189fc77e53a8dcbe666b1695a3b790e8da","patch":"@@ -377,7 +377,7 @@ public void testFencingBadPassword() throws Exception {\n         writelh.addEntry(tmp.getBytes());\n     }\n \n-    @Test\n+    @Test(timeout = 60000)\n     public void testFencingAndRestartBookies() throws Exception {\n         LedgerHandle writelh = null;\n         writelh = bkc.createLedger(digestType, \"password\".getBytes());"},{"sha":"20de6ae20ecf261dd702d1b88a6b9a7feb224e4a","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestRackawareEnsemblePlacementPolicy.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/apache/bookkeeper/blob/67ffec189fc77e53a8dcbe666b1695a3b790e8da/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestRackawareEnsemblePlacementPolicy.java","raw_url":"https://github.com/apache/bookkeeper/raw/67ffec189fc77e53a8dcbe666b1695a3b790e8da/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestRackawareEnsemblePlacementPolicy.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/TestRackawareEnsemblePlacementPolicy.java?ref=67ffec189fc77e53a8dcbe666b1695a3b790e8da","patch":"@@ -62,7 +62,7 @@ protected void tearDown() throws Exception {\n         super.tearDown();\n     }\n \n-    @Test\n+    @Test(timeout = 60000)\n     public void testReplaceBookieWithEnoughBookiesInSameRack() throws Exception {\n         InetSocketAddress addr1 = new InetSocketAddress(\"127.0.0.1\", 3181);\n         InetSocketAddress addr2 = new InetSocketAddress(\"127.0.0.2\", 3181);\n@@ -85,7 +85,7 @@ public void testReplaceBookieWithEnoughBookiesInSameRack() throws Exception {\n         assertEquals(addr3, replacedBookie);\n     }\n \n-    @Test\n+    @Test(timeout = 60000)\n     public void testReplaceBookieWithEnoughBookiesInDifferentRack() throws Exception {\n         InetSocketAddress addr1 = new InetSocketAddress(\"127.0.0.1\", 3181);\n         InetSocketAddress addr2 = new InetSocketAddress(\"127.0.0.2\", 3181);\n@@ -112,7 +112,7 @@ public void testReplaceBookieWithEnoughBookiesInDifferentRack() throws Exception\n         assertTrue(addr3.equals(replacedBookie) || addr4.equals(replacedBookie));\n     }\n \n-    @Test\n+    @Test(timeout = 60000)\n     public void testReplaceBookieWithNotEnoughBookies() throws Exception {\n         InetSocketAddress addr1 = new InetSocketAddress(\"127.0.0.1\", 3181);\n         InetSocketAddress addr2 = new InetSocketAddress(\"127.0.0.2\", 3181);\n@@ -143,7 +143,7 @@ public void testReplaceBookieWithNotEnoughBookies() throws Exception {\n         }\n     }\n \n-    @Test\n+    @Test(timeout = 60000)\n     public void testNewEnsembleWithSingleRack() throws Exception {\n         InetSocketAddress addr1 = new InetSocketAddress(\"127.0.0.1\", 3181);\n         InetSocketAddress addr2 = new InetSocketAddress(\"127.0.0.2\", 3181);\n@@ -166,7 +166,7 @@ public void testNewEnsembleWithSingleRack() throws Exception {\n         }\n     }\n \n-    @Test\n+    @Test(timeout = 60000)\n     public void testNewEnsembleWithMultipleRacks() throws Exception {\n         InetSocketAddress addr1 = new InetSocketAddress(\"127.0.0.1\", 3181);\n         InetSocketAddress addr2 = new InetSocketAddress(\"127.0.0.2\", 3181);\n@@ -196,7 +196,7 @@ public void testNewEnsembleWithMultipleRacks() throws Exception {\n         }\n     }\n \n-    @Test\n+    @Test(timeout = 90000)\n     public void testNewEnsembleWithEnoughRacks() throws Exception {\n         InetSocketAddress addr1 = new InetSocketAddress(\"127.0.0.1\", 3181);\n         InetSocketAddress addr2 = new InetSocketAddress(\"127.0.0.2\", 3181);\n@@ -239,7 +239,7 @@ public void testNewEnsembleWithEnoughRacks() throws Exception {\n     /**\n      * Test for BOOKKEEPER-633\n      */\n-    @Test\n+    @Test(timeout = 60000)\n     public void testRemoveBookieFromCluster() {\n         InetSocketAddress addr1 = new InetSocketAddress(\"127.0.0.1\", 3181);\n         InetSocketAddress addr2 = new InetSocketAddress(\"127.0.0.2\", 3181);"},{"sha":"fcd9446ec3c0cff59f2becd60dd0b5c0a984301e","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/util/TestDiskChecker.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/bookkeeper/blob/67ffec189fc77e53a8dcbe666b1695a3b790e8da/bookkeeper-server/src/test/java/org/apache/bookkeeper/util/TestDiskChecker.java","raw_url":"https://github.com/apache/bookkeeper/raw/67ffec189fc77e53a8dcbe666b1695a3b790e8da/bookkeeper-server/src/test/java/org/apache/bookkeeper/util/TestDiskChecker.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/util/TestDiskChecker.java?ref=67ffec189fc77e53a8dcbe666b1695a3b790e8da","patch":"@@ -57,7 +57,7 @@ public void testCheckDiskFull() throws IOException {\n      * Check disk full on non exist file. in this case it should check for\n      * parent file\n      */\n-    @Test(expected = DiskOutOfSpaceException.class)\n+    @Test(timeout = 30000, expected = DiskOutOfSpaceException.class)\n     public void testCheckDiskFullOnNonExistFile() throws IOException {\n         File file = File.createTempFile(\"DiskCheck\", \"test\");\n         long usableSpace = file.getUsableSpace();\n@@ -71,7 +71,7 @@ public void testCheckDiskFullOnNonExistFile() throws IOException {\n     /**\n      * Check disk error for file\n      */\n-    @Test(expected = DiskErrorException.class)\n+    @Test(timeout = 30000, expected = DiskErrorException.class)\n     public void testCheckDiskErrorForFile() throws Exception {\n         File parent = File.createTempFile(\"DiskCheck\", \"test\");\n         parent.delete();"},{"sha":"cf166ae360ddbb053821c14e80de48e7eea79089","filename":"hedwig-server/src/test/java/org/apache/hedwig/client/TestPubSubClient.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/67ffec189fc77e53a8dcbe666b1695a3b790e8da/hedwig-server/src/test/java/org/apache/hedwig/client/TestPubSubClient.java","raw_url":"https://github.com/apache/bookkeeper/raw/67ffec189fc77e53a8dcbe666b1695a3b790e8da/hedwig-server/src/test/java/org/apache/hedwig/client/TestPubSubClient.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/test/java/org/apache/hedwig/client/TestPubSubClient.java?ref=67ffec189fc77e53a8dcbe666b1695a3b790e8da","patch":"@@ -644,7 +644,7 @@ public boolean isSubscriptionChannelSharingEnabled() {\n         assertEquals(SubscriptionEvent.TOPIC_MOVED, eventQueue.take());\n     }\n \n-    @Test\n+    @Test(timeout = 60000)\n     public void testCloseSubscribeDuringResubscribe() throws Exception {\n         client.close();\n "},{"sha":"8388deae11087c2bba4590a059994331550b7ede","filename":"hedwig-server/src/test/java/org/apache/hedwig/server/delivery/TestFIFODeliveryManager.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/bookkeeper/blob/67ffec189fc77e53a8dcbe666b1695a3b790e8da/hedwig-server/src/test/java/org/apache/hedwig/server/delivery/TestFIFODeliveryManager.java","raw_url":"https://github.com/apache/bookkeeper/raw/67ffec189fc77e53a8dcbe666b1695a3b790e8da/hedwig-server/src/test/java/org/apache/hedwig/server/delivery/TestFIFODeliveryManager.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/test/java/org/apache/hedwig/server/delivery/TestFIFODeliveryManager.java?ref=67ffec189fc77e53a8dcbe666b1695a3b790e8da","patch":"@@ -114,7 +114,7 @@ int getNumResponses() {\n      * in the correct order\n      * {@link https://issues.apache.org/jira/browse/BOOKKEEPER-539}\n      */\n-    @Test\n+    @Test(timeout = 60000)\n     public void testFIFODeliverySubCloseSubRace() throws Exception {\n         ServerConfiguration conf = new ServerConfiguration();\n         ByteString topic = ByteString.copyFromUtf8(\"subRaceTopic\");\n@@ -238,7 +238,7 @@ int getNumDelivered() {\n      * Test throttle race issue cause by messageConsumed and doDeliverNextMessage\n      * {@link https://issues.apache.org/jira/browse/BOOKKEEPER-503}\n      */\n-    @Test\n+    @Test(timeout = 60000)\n     public void testFIFODeliveryThrottlingRace() throws Exception {\n         final int numMessages = 20;\n         final int throttleSize = 10;"}]}

