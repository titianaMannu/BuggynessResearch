{"sha":"6d2737ca22533aed461ed71e94d2472a6664df3c","node_id":"MDY6Q29tbWl0MTU3NTk1Njo2ZDI3MzdjYTIyNTMzYWVkNDYxZWQ3MWU5NGQyNDcyYTY2NjRkZjNj","commit":{"author":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2016-12-17T01:39:40Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2016-12-17T01:39:40Z"},"message":"BOOKKEEPER-984: Fix BookieClientTest.testWriteGaps\n\nin commit 9359d682a1598e30364eca6021d976f911e055b2, the third field (last add confirmed) in the message. changed the test to include the lac in the test so the test logic can work as expected.\n\nAuthor: Sijie Guo <sijie@apache.org>\n\nReviewers: Enrico Olivelli <eolivelli@gmail.com>\n\nCloses #91 from sijie/sijie/BOOKKEEPER-984","tree":{"sha":"61c8d26464b57d1652d6cf01dfc8fd6541dfdcbd","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/61c8d26464b57d1652d6cf01dfc8fd6541dfdcbd"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/6d2737ca22533aed461ed71e94d2472a6664df3c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/6d2737ca22533aed461ed71e94d2472a6664df3c","html_url":"https://github.com/apache/bookkeeper/commit/6d2737ca22533aed461ed71e94d2472a6664df3c","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/6d2737ca22533aed461ed71e94d2472a6664df3c/comments","author":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"f710e5a44569aa080b80eff855fff2c3810957fd","url":"https://api.github.com/repos/apache/bookkeeper/commits/f710e5a44569aa080b80eff855fff2c3810957fd","html_url":"https://github.com/apache/bookkeeper/commit/f710e5a44569aa080b80eff855fff2c3810957fd"}],"stats":{"total":16,"additions":11,"deletions":5},"files":[{"sha":"776082758a45665114c39a1b22b8cc24a39af4c5","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieClientTest.java","status":"modified","additions":11,"deletions":5,"changes":16,"blob_url":"https://github.com/apache/bookkeeper/blob/6d2737ca22533aed461ed71e94d2472a6664df3c/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieClientTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/6d2737ca22533aed461ed71e94d2472a6664df3c/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieClientTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieClientTest.java?ref=6d2737ca22533aed461ed71e94d2472a6664df3c","patch":"@@ -98,7 +98,7 @@ private static void recursiveDelete(File dir) {\n     }\n \n     static class ResultStruct {\n-        int rc;\n+        int rc = -123456;\n         ByteBuffer entry;\n     }\n \n@@ -108,11 +108,11 @@ public void readEntryComplete(int rc, long ledgerId, long entryId, ChannelBuffer\n             ResultStruct rs = (ResultStruct) ctx;\n             synchronized (rs) {\n                 rs.rc = rc;\n-                if (bb != null) {\n-                    bb.readerIndex(16);\n+                if (BKException.Code.OK == rc && bb != null) {\n+                    bb.readerIndex(24);\n                     rs.entry = bb.toByteBuffer();\n-                    rs.notifyAll();\n                 }\n+                rs.notifyAll();\n             }\n         }\n \n@@ -122,6 +122,10 @@ public void readEntryComplete(int rc, long ledgerId, long entryId, ChannelBuffer\n         public void writeComplete(int rc, long ledgerId, long entryId, BookieSocketAddress addr, Object ctx) {\n             if (ctx != null) {\n                 synchronized (ctx) {\n+                    if (ctx instanceof ResultStruct) {\n+                        ResultStruct rs = (ResultStruct) ctx;\n+                        rs.rc = rc;\n+                    }\n                     ctx.notifyAll();\n                 }\n             }\n@@ -142,6 +146,7 @@ public void testWriteGaps() throws Exception {\n         bc.addEntry(addr, 1, passwd, 1, bb, wrcb, arc, BookieProtocol.FLAG_NONE);\n         synchronized (arc) {\n             arc.wait(1000);\n+            assertEquals(0, arc.rc);\n             bc.readEntry(addr, 1, 1, recb, arc);\n             arc.wait(1000);\n             assertEquals(0, arc.rc);\n@@ -225,9 +230,10 @@ public void testWriteGaps() throws Exception {\n \n     private ChannelBuffer createByteBuffer(int i, long lid, long eid) {\n         ByteBuffer bb;\n-        bb = ByteBuffer.allocate(4 + 16);\n+        bb = ByteBuffer.allocate(4 + 24);\n         bb.putLong(lid);\n         bb.putLong(eid);\n+        bb.putLong(eid-1);\n         bb.putInt(i);\n         bb.flip();\n         return ChannelBuffers.wrappedBuffer(bb);"}]}

