{"sha":"6fc326ebd647afbbcc0beab6764b5d3748e50088","node_id":"MDY6Q29tbWl0MTU3NTk1Njo2ZmMzMjZlYmQ2NDdhZmJiY2MwYmVhYjY3NjRiNWQzNzQ4ZTUwMDg4","commit":{"author":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2012-05-07T16:48:07Z"},"committer":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2012-05-07T16:48:07Z"},"message":"BOOKKEEPER-232: AsyncBK tests failing (umamaheswararao via ivank)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1335117 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"6c2230adc65d2bd2da6b1dbca3b595cbaa8149d5","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/6c2230adc65d2bd2da6b1dbca3b595cbaa8149d5"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/6fc326ebd647afbbcc0beab6764b5d3748e50088","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/6fc326ebd647afbbcc0beab6764b5d3748e50088","html_url":"https://github.com/apache/bookkeeper/commit/6fc326ebd647afbbcc0beab6764b5d3748e50088","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/6fc326ebd647afbbcc0beab6764b5d3748e50088/comments","author":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"committer":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"parents":[{"sha":"268bdb8c6b5f642967329a99ec1dce5ba0af46d7","url":"https://api.github.com/repos/apache/bookkeeper/commits/268bdb8c6b5f642967329a99ec1dce5ba0af46d7","html_url":"https://github.com/apache/bookkeeper/commit/268bdb8c6b5f642967329a99ec1dce5ba0af46d7"}],"stats":{"total":96,"additions":90,"deletions":6},"files":[{"sha":"ff519753eabae5d97b283daa5b360609212681a9","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/6fc326ebd647afbbcc0beab6764b5d3748e50088/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/6fc326ebd647afbbcc0beab6764b5d3748e50088/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=6fc326ebd647afbbcc0beab6764b5d3748e50088","patch":"@@ -92,6 +92,8 @@ Trunk (unreleased changes)\n \n         BOOKKEEPER-231: ZKUtil.killServer not closing the FileTxnSnapLog from ZK. (Uma Maheswara Rao G via sijie)\n \n+        BOOKKEEPER-232: AsyncBK tests failing (umamaheswararao via ivank)\n+\n       hedwig-client/\n \n         BOOKKEEPER-217: NPE in hedwig client when enable DEBUG (sijie via ivank)"},{"sha":"a239715667dcc3eef5141f52bf9ab3fb23fa0012","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/EntryLogger.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/apache/bookkeeper/blob/6fc326ebd647afbbcc0beab6764b5d3748e50088/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/EntryLogger.java","raw_url":"https://github.com/apache/bookkeeper/raw/6fc326ebd647afbbcc0beab6764b5d3748e50088/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/EntryLogger.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/EntryLogger.java?ref=6fc326ebd647afbbcc0beab6764b5d3748e50088","patch":"@@ -38,13 +38,13 @@\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n-import java.util.Map;\n import java.util.concurrent.ConcurrentHashMap;\n \n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n import org.apache.bookkeeper.conf.ServerConfiguration;\n+import org.apache.bookkeeper.util.IOUtils;\n \n /**\n  * This class manages the writing of the bookkeeper entries. All the new\n@@ -437,9 +437,14 @@ public void shutdown() {\n         // since logChannel is buffered channel, do flush when shutting down\n         try {\n             flush();\n+            logChannel.getFileChannel().close();\n         } catch (IOException ie) {\n             // we have no idea how to avoid io exception during shutting down, so just ignore it\n             LOG.error(\"Error flush entry log during shutting down, which may cause entry log corrupted.\", ie);\n+        } finally {\n+            if (logChannel.getFileChannel().isOpen()) {\n+                IOUtils.close(LOG, logChannel.getFileChannel());\n+            }\n         }\n     }\n "},{"sha":"32a150c8a5ddb8b86655811cbe08a9b49d4ece2a","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/InterleavedLedgerStorage.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/apache/bookkeeper/blob/6fc326ebd647afbbcc0beab6764b5d3748e50088/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/InterleavedLedgerStorage.java","raw_url":"https://github.com/apache/bookkeeper/raw/6fc326ebd647afbbcc0beab6764b5d3748e50088/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/InterleavedLedgerStorage.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/InterleavedLedgerStorage.java?ref=6fc326ebd647afbbcc0beab6764b5d3748e50088","patch":"@@ -68,6 +68,11 @@ public void shutdown() throws InterruptedException {\n         // also compaction will write entries again to entry log file\n         gcThread.shutdown();\n         entryLogger.shutdown();\n+        try {\n+            ledgerCache.close();\n+        } catch (IOException e) {\n+            LOG.error(\"Error while closing the ledger cache\", e);\n+        }\n     }\n \n     @Override"},{"sha":"08bad31dd891697d730cae91d7f4c479fe35ca89","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Journal.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/apache/bookkeeper/blob/6fc326ebd647afbbcc0beab6764b5d3748e50088/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Journal.java","raw_url":"https://github.com/apache/bookkeeper/raw/6fc326ebd647afbbcc0beab6764b5d3748e50088/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Journal.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Journal.java?ref=6fc326ebd647afbbcc0beab6764b5d3748e50088","patch":"@@ -34,6 +34,7 @@\n \n import org.apache.bookkeeper.conf.ServerConfiguration;\n import org.apache.bookkeeper.proto.BookkeeperInternalCallbacks.WriteCallback;\n+import org.apache.bookkeeper.util.IOUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -449,11 +450,10 @@ public int getJournalQueueLength() {\n     public void run() {\n         LinkedList<QueueEntry> toFlush = new LinkedList<QueueEntry>();\n         ByteBuffer lenBuff = ByteBuffer.allocate(4);\n+        JournalChannel logFile = null;\n         try {\n             long logId = 0;\n-            JournalChannel logFile = null;\n             BufferedChannel bc = null;\n-            long nextPrealloc = 0;\n             long lastFlushPosition = 0;\n \n             QueueEntry qe = null;\n@@ -515,8 +515,12 @@ public void run() {\n                 toFlush.add(qe);\n                 qe = null;\n             }\n+            logFile.close();\n+            logFile = null;\n         } catch (Exception e) {\n             LOG.warn(\"Journal exits when shutting down\", e);\n+        } finally {\n+            IOUtils.close(LOG, logFile);\n         }\n     }\n "},{"sha":"8f4deec236052782297bd58d887060426e15ed28","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/JournalChannel.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/apache/bookkeeper/blob/6fc326ebd647afbbcc0beab6764b5d3748e50088/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/JournalChannel.java","raw_url":"https://github.com/apache/bookkeeper/raw/6fc326ebd647afbbcc0beab6764b5d3748e50088/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/JournalChannel.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/JournalChannel.java?ref=6fc326ebd647afbbcc0beab6764b5d3748e50088","patch":"@@ -23,6 +23,7 @@\n \n import java.util.Arrays;\n \n+import java.io.Closeable;\n import java.io.File;\n import java.io.RandomAccessFile;\n import java.io.IOException;\n@@ -36,7 +37,7 @@\n  * Simple wrapper around FileChannel to add versioning\n  * information to the file.\n  */\n-class JournalChannel {\n+class JournalChannel implements Closeable {\n     static Logger LOG = LoggerFactory.getLogger(JournalChannel.class);\n \n     final FileChannel fc;\n@@ -151,7 +152,7 @@ int read(ByteBuffer dst)\n         return fc.read(dst);\n     }\n \n-    void close() throws IOException {\n+    public void close() throws IOException {\n         fc.close();\n     }\n }\n\\ No newline at end of file"},{"sha":"597d89ffb4a58081042b99296c89dcaede1b3d5d","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCache.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/bookkeeper/blob/6fc326ebd647afbbcc0beab6764b5d3748e50088/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCache.java","raw_url":"https://github.com/apache/bookkeeper/raw/6fc326ebd647afbbcc0beab6764b5d3748e50088/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCache.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCache.java?ref=6fc326ebd647afbbcc0beab6764b5d3748e50088","patch":"@@ -21,14 +21,15 @@\n \n package org.apache.bookkeeper.bookie;\n \n+import java.io.Closeable;\n import java.io.IOException;\n \n /**\n  * This class maps a ledger entry number into a location (entrylogid, offset) in\n  * an entry log file. It does user level caching to more efficiently manage disk\n  * head scheduling.\n  */\n-interface LedgerCache {\n+interface LedgerCache extends Closeable {\n     void setMasterKey(long ledgerId, byte[] masterKey) throws IOException;\n     byte[] readMasterKey(long ledgerId) throws IOException, BookieException;\n     boolean ledgerExists(long ledgerId) throws IOException;"},{"sha":"a02b6e32ac4c78b498eca0300affb11f4e6a0885","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheImpl.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/apache/bookkeeper/blob/6fc326ebd647afbbcc0beab6764b5d3748e50088/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheImpl.java","raw_url":"https://github.com/apache/bookkeeper/raw/6fc326ebd647afbbcc0beab6764b5d3748e50088/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheImpl.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheImpl.java?ref=6fc326ebd647afbbcc0beab6764b5d3748e50088","patch":"@@ -33,6 +33,7 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Random;\n+import java.util.Map.Entry;\n \n import org.apache.bookkeeper.meta.LedgerManager;\n import org.apache.bookkeeper.conf.ServerConfiguration;\n@@ -760,4 +761,14 @@ public int getNumOpenLedgers() {\n             }\n         };\n     }\n+\n+    @Override\n+    public void close() throws IOException {\n+        for (Entry<Long, FileInfo> fileInfo : fileInfoCache.entrySet()) {\n+            FileInfo value = fileInfo.getValue();\n+            if (value != null) {\n+                value.close(true);\n+            }\n+        }\n+    }\n }"},{"sha":"61fab73286bd8e7cf0eeb2f9ea2a50fa9d5932b9","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/util/IOUtils.java","status":"added","additions":55,"deletions":0,"changes":55,"blob_url":"https://github.com/apache/bookkeeper/blob/6fc326ebd647afbbcc0beab6764b5d3748e50088/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/IOUtils.java","raw_url":"https://github.com/apache/bookkeeper/raw/6fc326ebd647afbbcc0beab6764b5d3748e50088/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/IOUtils.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/IOUtils.java?ref=6fc326ebd647afbbcc0beab6764b5d3748e50088","patch":"@@ -0,0 +1,55 @@\n+/*\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ *\n+ */\n+package org.apache.bookkeeper.util;\n+\n+import java.io.IOException;\n+\n+import org.slf4j.Logger;\n+\n+/**\n+ * An utility class for I/O related functionality.\n+ */\n+public class IOUtils {\n+\n+    /**\n+     * Close the Closeable objects and <b>ignore</b> any {@link IOException} or\n+     * null pointers. Must only be used for cleanup in exception handlers.\n+     * \n+     * @param log\n+     *            the log to record problems to at debug level. Can be null.\n+     * @param closeables\n+     *            the objects to close\n+     */\n+    public static void close(Logger log, java.io.Closeable... closeables) {\n+        for (java.io.Closeable c : closeables) {\n+            if (c != null) {\n+                try {\n+                    c.close();\n+                } catch (IOException e) {\n+                    if (log != null && log.isDebugEnabled()) {\n+                        log.debug(\"Exception in closing \" + c, e);\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n+}"}]}

