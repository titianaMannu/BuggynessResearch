{"sha":"763479b6f94fd4827ee28e9f698cfa9a31095061","node_id":"MDY6Q29tbWl0MTU3NTk1Njo3NjM0NzliNmY5NGZkNDgyN2VlMjhlOWY2OThjZmE5YTMxMDk1MDYx","commit":{"author":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2012-07-04T14:17:30Z"},"committer":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2012-07-04T14:17:30Z"},"message":"BOOKKEEPER-324: Flakeyness in LedgerCreateDeleteTest (ivank)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1357277 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"1e7f85a571bc1c5751673e4c8046b5c6147347e0","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/1e7f85a571bc1c5751673e4c8046b5c6147347e0"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/763479b6f94fd4827ee28e9f698cfa9a31095061","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/763479b6f94fd4827ee28e9f698cfa9a31095061","html_url":"https://github.com/apache/bookkeeper/commit/763479b6f94fd4827ee28e9f698cfa9a31095061","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/763479b6f94fd4827ee28e9f698cfa9a31095061/comments","author":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"committer":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"parents":[{"sha":"18f5927a2bd0f423197a2da49ddd5733cdccb651","url":"https://api.github.com/repos/apache/bookkeeper/commits/18f5927a2bd0f423197a2da49ddd5733cdccb651","html_url":"https://github.com/apache/bookkeeper/commit/18f5927a2bd0f423197a2da49ddd5733cdccb651"}],"stats":{"total":34,"additions":21,"deletions":13},"files":[{"sha":"3eebb3af751273dc9d2d0633bfbeeb2d3785778c","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/763479b6f94fd4827ee28e9f698cfa9a31095061/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/763479b6f94fd4827ee28e9f698cfa9a31095061/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=763479b6f94fd4827ee28e9f698cfa9a31095061","patch":"@@ -30,6 +30,8 @@ Trunk (unreleased changes)\n \n         BOOKKEEPER-280: LedgerHandle.addEntry() should return an entryId (mmerli via ivank)\n \n+        BOOKKEEPER-324: Flakeyness in LedgerCreateDeleteTest (ivank)\n+\n       hedwig-client:\n \n         BOOKKEEPER-274: Hedwig cpp client library should not link to cppunit which is just used for test. (sijie via ivank)"},{"sha":"227d6a6d8cce5a96f02315c87e3397667cb19718","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/apache/bookkeeper/blob/763479b6f94fd4827ee28e9f698cfa9a31095061/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java","raw_url":"https://github.com/apache/bookkeeper/raw/763479b6f94fd4827ee28e9f698cfa9a31095061/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java?ref=763479b6f94fd4827ee28e9f698cfa9a31095061","patch":"@@ -410,9 +410,10 @@ synchronized public void start() {\n         LOG.debug(\"I'm starting a bookie with journal directory \" + journalDirectory.getName());\n         // start bookie thread\n         super.start();\n-        syncThread.start();\n \n         ledgerStorage.start();\n+\n+        syncThread.start();\n         // set running here.\n         // since bookie server use running as a flag to tell bookie server whether it is alive\n         // if setting it in bookie thread, the watcher might run before bookie thread.\n@@ -595,16 +596,16 @@ synchronized int shutdown(int exitCode) {\n                 // mark bookie as in shutting down progress\n                 shuttingdown = true;\n \n-                // Shutdown the EntryLogger which has the GarbageCollector Thread running\n-                ledgerStorage.shutdown();\n-\n                 // Shutdown the ZK client\n                 if(zk != null) zk.close();\n                 // Shutdown journal\n                 journal.shutdown();\n                 this.join();\n                 syncThread.shutdown();\n \n+                // Shutdown the EntryLogger which has the GarbageCollector Thread running\n+                ledgerStorage.shutdown();\n+\n                 // close Ledger Manager\n                 try {\n                     activeLedgerManager.close();"},{"sha":"bd3cfab22b90bca5ead3af2059e4b6077084158f","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheImpl.java","status":"modified","additions":14,"deletions":9,"changes":23,"blob_url":"https://github.com/apache/bookkeeper/blob/763479b6f94fd4827ee28e9f698cfa9a31095061/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheImpl.java","raw_url":"https://github.com/apache/bookkeeper/raw/763479b6f94fd4827ee28e9f698cfa9a31095061/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheImpl.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheImpl.java?ref=763479b6f94fd4827ee28e9f698cfa9a31095061","patch":"@@ -692,11 +692,13 @@ private File findIndexFile(long ledgerId) throws IOException {\n \n     // evict file info if necessary\n     private void evictFileInfoIfNecessary() throws IOException {\n-        if (openLedgers.size() > openFileLimit) {\n-            long ledgerToRemove = openLedgers.removeFirst();\n-            LOG.info(\"Ledger {} is evicted from file info cache.\",\n-                     ledgerToRemove);\n-            fileInfoCache.remove(ledgerToRemove).close(true);\n+        synchronized (fileInfoCache) {\n+            if (openLedgers.size() > openFileLimit) {\n+                long ledgerToRemove = openLedgers.removeFirst();\n+                LOG.info(\"Ledger {} is evicted from file info cache.\",\n+                         ledgerToRemove);\n+                fileInfoCache.remove(ledgerToRemove).close(true);\n+            }\n         }\n     }\n \n@@ -778,11 +780,14 @@ public int getNumOpenLedgers() {\n \n     @Override\n     public void close() throws IOException {\n-        for (Entry<Long, FileInfo> fileInfo : fileInfoCache.entrySet()) {\n-            FileInfo value = fileInfo.getValue();\n-            if (value != null) {\n-                value.close(true);\n+        synchronized (fileInfoCache) {\n+            for (Entry<Long, FileInfo> fileInfo : fileInfoCache.entrySet()) {\n+                FileInfo value = fileInfo.getValue();\n+                if (value != null) {\n+                    value.close(true);\n+                }\n             }\n+            fileInfoCache.clear();\n         }\n     }\n }"}]}

