{"sha":"805408a86e8ceb87643d8a19b6a11403b0534422","node_id":"MDY6Q29tbWl0MTU3NTk1Njo4MDU0MDhhODZlOGNlYjg3NjQzZDhhMTliNmExMTQwM2IwNTM0NDIy","commit":{"author":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2013-06-21T17:42:14Z"},"committer":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2013-06-21T17:42:14Z"},"message":"BOOKKEEPER-595: Crash of inprocess autorecovery daemon should not take down the bookie (ivank) [missing files]\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1495516 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"4e06c1176aa323dd5158fc28faff7fdc6f5c7402","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/4e06c1176aa323dd5158fc28faff7fdc6f5c7402"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/805408a86e8ceb87643d8a19b6a11403b0534422","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/805408a86e8ceb87643d8a19b6a11403b0534422","html_url":"https://github.com/apache/bookkeeper/commit/805408a86e8ceb87643d8a19b6a11403b0534422","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/805408a86e8ceb87643d8a19b6a11403b0534422/comments","author":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"committer":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"parents":[{"sha":"b1feb95cd481305201eaad28536eccbdfdea894e","url":"https://api.github.com/repos/apache/bookkeeper/commits/b1feb95cd481305201eaad28536eccbdfdea894e","html_url":"https://github.com/apache/bookkeeper/commit/b1feb95cd481305201eaad28536eccbdfdea894e"}],"stats":{"total":60,"additions":60,"deletions":0},"files":[{"sha":"539eea41ab3443cb7cf21b2a9985503bf0f64ba9","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestDeathwatcher.java","status":"added","additions":60,"deletions":0,"changes":60,"blob_url":"https://github.com/apache/bookkeeper/blob/805408a86e8ceb87643d8a19b6a11403b0534422/bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestDeathwatcher.java","raw_url":"https://github.com/apache/bookkeeper/raw/805408a86e8ceb87643d8a19b6a11403b0534422/bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestDeathwatcher.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestDeathwatcher.java?ref=805408a86e8ceb87643d8a19b6a11403b0534422","patch":"@@ -0,0 +1,60 @@\n+package org.apache.bookkeeper.proto;\n+\n+/*\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ *\n+ */\n+\n+import org.junit.*;\n+\n+import org.apache.bookkeeper.test.BookKeeperClusterTestCase;\n+import org.apache.bookkeeper.conf.ServerConfiguration;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Tests for the BookieServer death watcher\n+ */\n+public class TestDeathwatcher extends BookKeeperClusterTestCase {\n+    static Logger LOG = LoggerFactory.getLogger(TestDeathwatcher.class);\n+\n+    public TestDeathwatcher() {\n+        super(1);\n+    }\n+\n+    /**\n+     * Ensure that if the autorecovery daemon is running inside the bookie\n+     * then a failure/crash in the autorecovery daemon will not take down the\n+     * bookie also.\n+     */\n+    @Test(timeout=30000)\n+    public void testAutorecoveryFailureDoesntKillBookie() throws Exception {\n+        ServerConfiguration conf = newServerConfiguration().setAutoRecoveryDaemonEnabled(true);\n+        BookieServer bs = startBookie(conf);\n+\n+        assertNotNull(\"Autorecovery daemon should exist\", bs.autoRecoveryMain);\n+        assertTrue(\"Bookie should be running\", bs.isBookieRunning());\n+        bs.autoRecoveryMain.shutdown();\n+        Thread.sleep(conf.getDeathWatchInterval()*2); // give deathwatcher time to run\n+        assertTrue(\"Bookie should be running\", bs.isBookieRunning());\n+        bs.shutdown();\n+    }\n+}\n+"}]}

