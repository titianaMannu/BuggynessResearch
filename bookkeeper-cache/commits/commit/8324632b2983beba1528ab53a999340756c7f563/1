{"sha":"8324632b2983beba1528ab53a999340756c7f563","node_id":"MDY6Q29tbWl0MTU3NTk1Njo4MzI0NjMyYjI5ODNiZWJhMTUyOGFiNTNhOTk5MzQwNzU2YzdmNTYz","commit":{"author":{"name":"eolivelli","email":"eolivelli@gmail.com","date":"2016-07-31T05:53:28Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2016-07-31T05:53:28Z"},"message":"BOOKKEEPER-933: ClientConfiguration always inherits System properties\n\nAuthor: eolivelli <eolivelli@gmail.com>\n\nReviewers: Sijie Guo <sijie@apache.org>\n\nCloses #50 from eolivelli/BOOKKEEPER-933 and squashes the following commits:\n\n0bcae1e [eolivelli] BOOKKEEPER-933 ClientConfiguration always inherits System properties\nbeb68fb [eolivelli] BOOKKEEPER-933 ClientConfiguration always inherits System properties","tree":{"sha":"ea2027b7d436abdaff6a04e5dae302244b20ea8f","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/ea2027b7d436abdaff6a04e5dae302244b20ea8f"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/8324632b2983beba1528ab53a999340756c7f563","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/8324632b2983beba1528ab53a999340756c7f563","html_url":"https://github.com/apache/bookkeeper/commit/8324632b2983beba1528ab53a999340756c7f563","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/8324632b2983beba1528ab53a999340756c7f563/comments","author":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"1f7e47005588eedd879d0b9d163b4f125c6a0d59","url":"https://api.github.com/repos/apache/bookkeeper/commits/1f7e47005588eedd879d0b9d163b4f125c6a0d59","html_url":"https://github.com/apache/bookkeeper/commit/1f7e47005588eedd879d0b9d163b4f125c6a0d59"}],"stats":{"total":102,"additions":100,"deletions":2},"files":[{"sha":"314290e9617042c5e0755d21dd94687da315cab4","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/conf/AbstractConfiguration.java","status":"modified","additions":11,"deletions":2,"changes":13,"blob_url":"https://github.com/apache/bookkeeper/blob/8324632b2983beba1528ab53a999340756c7f563/bookkeeper-server/src/main/java/org/apache/bookkeeper/conf/AbstractConfiguration.java","raw_url":"https://github.com/apache/bookkeeper/raw/8324632b2983beba1528ab53a999340756c7f563/bookkeeper-server/src/main/java/org/apache/bookkeeper/conf/AbstractConfiguration.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/conf/AbstractConfiguration.java?ref=8324632b2983beba1528ab53a999340756c7f563","patch":"@@ -37,6 +37,13 @@\n public abstract class AbstractConfiguration extends CompositeConfiguration {\n \n     static final Logger LOG = LoggerFactory.getLogger(AbstractConfiguration.class);\n+    public static final String READ_SYSTEM_PROPERTIES_PROPERTY\n+                            = \"org.apache.bookkeeper.conf.readsystemproperties\";\n+    /**\n+     * Enable the use of System Properties, which was the default behaviour till 4.4.0\n+     */\n+    private static final boolean READ_SYSTEM_PROPERTIES\n+                                    = Boolean.getBoolean(READ_SYSTEM_PROPERTIES_PROPERTY);\n \n     protected static final ClassLoader defaultLoader;\n     static {\n@@ -60,8 +67,10 @@\n \n     protected AbstractConfiguration() {\n         super();\n-        // add configuration for system properties\n-        addConfiguration(new SystemConfiguration());\n+        if (READ_SYSTEM_PROPERTIES) {\n+            // add configuration for system properties\n+            addConfiguration(new SystemConfiguration());\n+        }\n     }\n \n     /**"},{"sha":"3e34695b934bc56932efa57963eff4afd7bb9b3f","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/conf/NoSystemPropertiesConfigurationTest.java","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/apache/bookkeeper/blob/8324632b2983beba1528ab53a999340756c7f563/bookkeeper-server/src/test/java/org/apache/bookkeeper/conf/NoSystemPropertiesConfigurationTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/8324632b2983beba1528ab53a999340756c7f563/bookkeeper-server/src/test/java/org/apache/bookkeeper/conf/NoSystemPropertiesConfigurationTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/conf/NoSystemPropertiesConfigurationTest.java?ref=8324632b2983beba1528ab53a999340756c7f563","patch":"@@ -0,0 +1,40 @@\n+/*\n+ * Copyright 2016 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.bookkeeper.conf;\n+\n+import org.junit.Test;\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * Test Configuration API\n+ *\n+ * @author enrico.olivelli\n+ * @see SystemPropertiesConfigurationTest\n+ */\n+public class NoSystemPropertiesConfigurationTest {\n+\n+    static {  \n+        // this property is read when AbstractConfiguration class is loaded.\n+        // this test will work as expected only using a new JVM (or classloader) for the test\n+        System.setProperty(ClientConfiguration.THROTTLE, \"10\");\n+    }\n+\n+    @Test\n+    public void testUseSystemProperty() {\n+        ClientConfiguration clientConfiguration = new ClientConfiguration();\n+        assertEquals(5000, clientConfiguration.getThrottleValue());\n+    }\n+}\n\\ No newline at end of file"},{"sha":"10c9575ab492da90fc0c952230acff5a336a75ed","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/conf/SystemPropertiesConfigurationTest.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/bookkeeper/blob/8324632b2983beba1528ab53a999340756c7f563/bookkeeper-server/src/test/java/org/apache/bookkeeper/conf/SystemPropertiesConfigurationTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/8324632b2983beba1528ab53a999340756c7f563/bookkeeper-server/src/test/java/org/apache/bookkeeper/conf/SystemPropertiesConfigurationTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/conf/SystemPropertiesConfigurationTest.java?ref=8324632b2983beba1528ab53a999340756c7f563","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Copyright 2016 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.bookkeeper.conf;\n+\n+import org.junit.Test;\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * Test Configuration API\n+ *\n+ * @author enrico.olivelli\n+ * @see  NoSystemPropertiesConfigurationTest\n+ */\n+public class SystemPropertiesConfigurationTest {\n+\n+    static {\n+        // this property is read when AbstractConfiguration class is loaded.\n+        // this test will work as expected only using a new JVM (or classloader) for the test\n+        System.setProperty(AbstractConfiguration.READ_SYSTEM_PROPERTIES_PROPERTY, \"true\");\n+        System.setProperty(ClientConfiguration.THROTTLE, \"10\");\n+    }\n+\n+    @Test\n+    public void testUseSystemProperty() {\n+        ClientConfiguration clientConfiguration = new ClientConfiguration();\n+        assertEquals(10, clientConfiguration.getThrottleValue());\n+    }\n+}\n\\ No newline at end of file"},{"sha":"7784666b3188ce66334aaa0a66a0609922f47cbf","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConfigurationTest.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/apache/bookkeeper/blob/8324632b2983beba1528ab53a999340756c7f563/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConfigurationTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/8324632b2983beba1528ab53a999340756c7f563/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConfigurationTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConfigurationTest.java?ref=8324632b2983beba1528ab53a999340756c7f563","patch":"@@ -20,6 +20,7 @@\n  */\n package org.apache.bookkeeper.test;\n \n+import org.apache.bookkeeper.conf.AbstractConfiguration;\n import org.apache.bookkeeper.conf.ServerConfiguration;\n import org.apache.bookkeeper.conf.ClientConfiguration;\n \n@@ -28,6 +29,13 @@\n import static org.junit.Assert.*;\n \n public class ConfigurationTest {\n+\n+    static {\n+        // this property is read when AbstractConfiguration class is loaded.\n+        // this test will work as expected only using a new JVM (or classloader) for the test\n+        System.setProperty(AbstractConfiguration.READ_SYSTEM_PROPERTIES_PROPERTY, \"true\");\n+    }\n+\n     @Test(timeout=60000)\n     public void testConfigurationOverwrite() {\n         System.clearProperty(\"zkServers\");"}]}

