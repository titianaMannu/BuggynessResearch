{"sha":"881cda5c85d17f952bdc2c7e101eef669bce35d2","node_id":"MDY6Q29tbWl0MTU3NTk1Njo4ODFjZGE1Yzg1ZDE3Zjk1MmJkYzJjN2UxMDFlZWY2NjliY2UzNWQy","commit":{"author":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2012-09-26T11:04:08Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2012-09-26T11:04:08Z"},"message":"BOOKKEEPER-397: Make the hedwig client in RegionManager configurable. (Aniruddha via sijie)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1390401 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"7b348d79b9a82af02ca69bab24ff4acc1e4fa747","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/7b348d79b9a82af02ca69bab24ff4acc1e4fa747"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/881cda5c85d17f952bdc2c7e101eef669bce35d2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/881cda5c85d17f952bdc2c7e101eef669bce35d2","html_url":"https://github.com/apache/bookkeeper/commit/881cda5c85d17f952bdc2c7e101eef669bce35d2","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/881cda5c85d17f952bdc2c7e101eef669bce35d2/comments","author":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"cf414cc06ad85d9222de710152cb81bd60943aa5","url":"https://api.github.com/repos/apache/bookkeeper/commits/cf414cc06ad85d9222de710152cb81bd60943aa5","html_url":"https://github.com/apache/bookkeeper/commit/cf414cc06ad85d9222de710152cb81bd60943aa5"}],"stats":{"total":141,"additions":120,"deletions":21},"files":[{"sha":"e64b481f90fa8535cf60cdc9461978d5de7fbaf0","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/881cda5c85d17f952bdc2c7e101eef669bce35d2/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/881cda5c85d17f952bdc2c7e101eef669bce35d2/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=881cda5c85d17f952bdc2c7e101eef669bce35d2","patch":"@@ -164,6 +164,8 @@ Trunk (unreleased changes)\n \n         BOOKKEEPER-252: Hedwig: provide a subscription mode to kill other subscription channel when hedwig client is used as a proxy-style server. (sijie via ivank)\n \n+        BOOKKEEPER-397: Make the hedwig client in RegionManager configurable. (Aniruddha via sijie)\n+\n       hedwig-client:\n \n         BOOKKEEPER-306: Change C++ client to use gtest for testing (ivank via sijie)"},{"sha":"d1a62f405c125d5f6acf90adc8752d27f5282b6a","filename":"hedwig-server/bin/hedwig","status":"modified","additions":8,"deletions":1,"changes":9,"blob_url":"https://github.com/apache/bookkeeper/blob/881cda5c85d17f952bdc2c7e101eef669bce35d2/hedwig-server/bin/hedwig","raw_url":"https://github.com/apache/bookkeeper/raw/881cda5c85d17f952bdc2c7e101eef669bce35d2/hedwig-server/bin/hedwig","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/bin/hedwig?ref=881cda5c85d17f952bdc2c7e101eef669bce35d2","patch":"@@ -53,6 +53,7 @@ BINDIR=`dirname \"$0\"`\n HW_HOME=`cd $BINDIR/..;pwd`\n \n DEFAULT_CONF=$HW_HOME/conf/hw_server.conf\n+DEFAULT_REGION_CLIENT_CONF=$HW_HOME/conf/hw_region_client.conf\n DEFAULT_LOG_CONF=$HW_HOME/conf/log4j.properties\n \n . $HW_HOME/conf/hwenv.sh\n@@ -108,6 +109,8 @@ or command is the full name of a class with a defined main() method.\n \n Environment variables:\n    HEDWIG_SERVER_CONF           Hedwig server configuration file (default $DEFAULT_CONF)\n+   HEDWIG_REGION_CLIENT_CONF           Configuration file for the hedwig client used by the\n+                                region manager (default $DEFAULT_REGION_CLIENT_CONF)\n    HEDWIG_CONSOLE_SERVER_CONF   Server part configuration for hedwig console,\n                                 used for metadata management (defaults to HEDWIG_SERVER_CONF)\n    HEDWIG_CONSOLE_CLIENT_CONF   Client part configuration for hedwig console,\n@@ -136,6 +139,10 @@ if [ -z \"$HEDWIG_SERVER_CONF\" ]; then\n     HEDWIG_SERVER_CONF=$DEFAULT_CONF;\n fi\n \n+if [ -z \"$HEDWIG_REGION_CLIENT_CONF\" ]; then\n+    HEDWIG_REGION_CLIENT_CONF=$DEFAULT_REGION_CLIENT_CONF;\n+fi\n+\n if [ -z \"$HEDWIG_LOG_CONF\" ]; then\n     HEDWIG_LOG_CONF=$DEFAULT_LOG_CONF\n fi\n@@ -164,7 +171,7 @@ OPTS=\"$OPTS -Dhedwig.log.file=$HEDWIG_LOG_FILE\"\n # Change to HW_HOME to support relative paths\n cd \"$BK_HOME\"\n if [ $COMMAND == \"server\" ]; then\n-    exec java $OPTS $JMX_ARGS org.apache.hedwig.server.netty.PubSubServer $HEDWIG_SERVER_CONF $@\n+    exec java $OPTS $JMX_ARGS org.apache.hedwig.server.netty.PubSubServer $HEDWIG_SERVER_CONF $HEDWIG_REGION_CLIENT_CONF $@\n elif [ $COMMAND == \"console\" ]; then\n     # hedwig console configuration server part\n     if [ -z \"$HEDWIG_CONSOLE_SERVER_CONF\" ]; then"},{"sha":"9a5592ee56bb294bc1f3dfd7c4a1c7ad7a4e3e24","filename":"hedwig-server/conf/hw_region_client.conf","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/apache/bookkeeper/blob/881cda5c85d17f952bdc2c7e101eef669bce35d2/hedwig-server/conf/hw_region_client.conf","raw_url":"https://github.com/apache/bookkeeper/raw/881cda5c85d17f952bdc2c7e101eef669bce35d2/hedwig-server/conf/hw_region_client.conf","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/conf/hw_region_client.conf?ref=881cda5c85d17f952bdc2c7e101eef669bce35d2","patch":"@@ -0,0 +1,42 @@\n+#   Licensed to the Apache Software Foundation (ASF) under one or more\n+#   contributor license agreements.  See the NOTICE file distributed with\n+#   this work for additional information regarding copyright ownership.\n+#   The ASF licenses this file to You under the Apache License, Version 2.0\n+#   (the \"License\"); you may not use this file except in compliance with\n+#   the License.  You may obtain a copy of the License at\n+#\n+#       http://www.apache.org/licenses/LICENSE-2.0\n+#\n+#   Unless required by applicable law or agreed to in writing, software\n+#   distributed under the License is distributed on an \"AS IS\" BASIS,\n+#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+#   See the License for the specific language governing permissions and\n+#   limitations under the License.\n+\n+# This is the configuration file for the hedwig client used by the region manager\n+\n+# This parameter is a boolean flag indicating if communication with the\n+# server should be done via SSL for encryption. The Hedwig server hubs also\n+# need to be SSL enabled for this to work.\n+# ssl_enabled=false\n+\n+# The maximum message size in bytes\n+# max_message_size=2097152\n+\n+# The maximum number of redirects we permit before signalling an error\n+# max_server_redirects=2\n+\n+# A flag indicating whether the client library should automatically send\n+# consume messages to the server\n+# auto_send_consume_message_enabled=true\n+\n+# The number of messages we buffer before sending a consume message\n+# to the server\n+# consumed_messages_buffer_size=5\n+\n+# Support for client side throttling.\n+# max_outstanding_messages=10\n+\n+# The timeout in milliseconds before we error out any existing\n+# requests\n+# server_ack_response_timeout=30000"},{"sha":"5701090ce269065591054dc60633788f62b44cd4","filename":"hedwig-server/conf/hwenv.sh","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/apache/bookkeeper/blob/881cda5c85d17f952bdc2c7e101eef669bce35d2/hedwig-server/conf/hwenv.sh","raw_url":"https://github.com/apache/bookkeeper/raw/881cda5c85d17f952bdc2c7e101eef669bce35d2/hedwig-server/conf/hwenv.sh","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/conf/hwenv.sh?ref=881cda5c85d17f952bdc2c7e101eef669bce35d2","patch":"@@ -21,7 +21,13 @@\n # */\n \n # default settings for starting hedwig\n-#HEDWIG_SERVER_CONF=\n+# HEDWIG_SERVER_CONF=\n+\n+# default settings for the region manager's hedwig client\n+# HEDWIG_REGION_CLIENT_CONF=\n+\n+# default settings for the region manager's hedwig client\n+# HEDWIG_CLIENT_CONF=\n \n # Server part configuration for hedwig console,\n # used for metadata management"},{"sha":"5afeffb6150a8a894d83eb6db059f7a8fb8ee66c","filename":"hedwig-server/src/main/java/org/apache/hedwig/server/netty/PubSubServer.java","status":"modified","additions":40,"deletions":12,"changes":52,"blob_url":"https://github.com/apache/bookkeeper/blob/881cda5c85d17f952bdc2c7e101eef669bce35d2/hedwig-server/src/main/java/org/apache/hedwig/server/netty/PubSubServer.java","raw_url":"https://github.com/apache/bookkeeper/raw/881cda5c85d17f952bdc2c7e101eef669bce35d2/hedwig-server/src/main/java/org/apache/hedwig/server/netty/PubSubServer.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/main/java/org/apache/hedwig/server/netty/PubSubServer.java?ref=881cda5c85d17f952bdc2c7e101eef669bce35d2","patch":"@@ -94,6 +94,7 @@\n     ServerSocketChannelFactory serverChannelFactory;\n     ClientSocketChannelFactory clientChannelFactory;\n     ServerConfiguration conf;\n+    org.apache.hedwig.client.conf.ClientConfiguration clientConfiguration;\n     ChannelGroup allChannels;\n \n     // Manager components that make up the PubSubServer\n@@ -159,7 +160,8 @@ protected SubscriptionManager instantiateSubscriptionManager(TopicManager tm, Pe\n     }\n \n     protected RegionManager instantiateRegionManager(PersistenceManager pm, ScheduledExecutorService scheduler) {\n-        return new RegionManager(pm, conf, zk, scheduler, new HedwigHubClientFactory(conf, clientChannelFactory));\n+        return new RegionManager(pm, conf, zk, scheduler, new HedwigHubClientFactory(conf, clientConfiguration,\n+                clientChannelFactory));\n     }\n \n     protected void instantiateZookeeperClient() throws Exception {\n@@ -349,13 +351,18 @@ protected void unregisterJMX() {\n      * @throws InterruptedException\n      * @throws ConfigurationException\n      */\n-    public PubSubServer(final ServerConfiguration conf,\n+    public PubSubServer(final ServerConfiguration serverConfiguration,\n+                        final org.apache.hedwig.client.conf.ClientConfiguration clientConfiguration,\n                         final Thread.UncaughtExceptionHandler exceptionHandler)\n             throws ConfigurationException {\n \n-        // First validate the conf\n-        this.conf = conf;\n-        conf.validate();\n+        // First validate the serverConfiguration\n+        this.conf = serverConfiguration;\n+        serverConfiguration.validate();\n+\n+        // Validate the client configuration\n+        this.clientConfiguration = clientConfiguration;\n+        clientConfiguration.validate();\n \n         // We need a custom thread group, so that we can override the uncaught\n         // exception method\n@@ -425,8 +432,13 @@ public void run() {\n         }\n     }\n \n-    public PubSubServer(ServerConfiguration conf) throws Exception {\n-        this(conf, new TerminateJVMExceptionHandler());\n+    public PubSubServer(ServerConfiguration serverConfiguration,\n+                        org.apache.hedwig.client.conf.ClientConfiguration clientConfiguration) throws Exception {\n+        this(serverConfiguration, clientConfiguration, new TerminateJVMExceptionHandler());\n+    }\n+\n+    public PubSubServer(ServerConfiguration serverConfiguration) throws Exception {\n+        this(serverConfiguration, new org.apache.hedwig.client.conf.ClientConfiguration());\n     }\n \n     /**\n@@ -451,22 +463,38 @@ public static void errorMsgAndExit(String msg, Throwable t, int rc) {\n     public static void main(String[] args) {\n \n         logger.info(\"Attempting to start Hedwig\");\n-        ServerConfiguration conf = new ServerConfiguration();\n+        ServerConfiguration serverConfiguration = new ServerConfiguration();\n+        // The client configuration for the hedwig client in the region manager.\n+        org.apache.hedwig.client.conf.ClientConfiguration regionMgrClientConfiguration\n+                = new org.apache.hedwig.client.conf.ClientConfiguration();\n         if (args.length > 0) {\n             String confFile = args[0];\n             try {\n-                conf.loadConf(new File(confFile).toURI().toURL());\n+                serverConfiguration.loadConf(new File(confFile).toURI().toURL());\n             } catch (MalformedURLException e) {\n-                String msg = \"Could not open configuration file: \" + confFile;\n+                String msg = \"Could not open server configuration file: \" + confFile;\n                 errorMsgAndExit(msg, e, RC_INVALID_CONF_FILE);\n             } catch (ConfigurationException e) {\n-                String msg = \"Malformed configuration file: \" + confFile;\n+                String msg = \"Malformed server configuration file: \" + confFile;\n                 errorMsgAndExit(msg, e, RC_MISCONFIGURED);\n             }\n             logger.info(\"Using configuration file \" + confFile);\n         }\n+        if (args.length > 1) {\n+            // args[1] is the client configuration file.\n+            String confFile = args[1];\n+            try {\n+                regionMgrClientConfiguration.loadConf(new File(confFile).toURI().toURL());\n+            } catch (MalformedURLException e) {\n+                String msg = \"Could not open client configuration file: \" + confFile;\n+                errorMsgAndExit(msg, e, RC_INVALID_CONF_FILE);\n+            } catch (ConfigurationException e) {\n+                String msg = \"Malformed client configuration file: \" + confFile;\n+                errorMsgAndExit(msg, e, RC_MISCONFIGURED);\n+            }\n+        }\n         try {\n-            new PubSubServer(conf).start();\n+            new PubSubServer(serverConfiguration, regionMgrClientConfiguration).start();\n         } catch (Throwable t) {\n             errorMsgAndExit(\"Error during startup\", t, RC_OTHER);\n         }"},{"sha":"68d317e10ab9a148c9a6a4916c414a8b122110d3","filename":"hedwig-server/src/main/java/org/apache/hedwig/server/regions/HedwigHubClientFactory.java","status":"modified","additions":20,"deletions":6,"changes":26,"blob_url":"https://github.com/apache/bookkeeper/blob/881cda5c85d17f952bdc2c7e101eef669bce35d2/hedwig-server/src/main/java/org/apache/hedwig/server/regions/HedwigHubClientFactory.java","raw_url":"https://github.com/apache/bookkeeper/raw/881cda5c85d17f952bdc2c7e101eef669bce35d2/hedwig-server/src/main/java/org/apache/hedwig/server/regions/HedwigHubClientFactory.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/main/java/org/apache/hedwig/server/regions/HedwigHubClientFactory.java?ref=881cda5c85d17f952bdc2c7e101eef669bce35d2","patch":"@@ -17,21 +17,28 @@\n  */\n package org.apache.hedwig.server.regions;\n \n+import org.apache.commons.configuration.ConfigurationException;\n import org.jboss.netty.channel.socket.ClientSocketChannelFactory;\n \n import org.apache.hedwig.client.conf.ClientConfiguration;\n import org.apache.hedwig.server.common.ServerConfiguration;\n import org.apache.hedwig.util.HedwigSocketAddress;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n \n public class HedwigHubClientFactory {\n \n     private final ServerConfiguration cfg;\n+    private final ClientConfiguration clientConfiguration;\n     private final ClientSocketChannelFactory channelFactory;\n+    private static final Logger logger = LoggerFactory.getLogger(HedwigHubClientFactory.class);\n \n-    // Constructor that takes in a ServerConfiguration and a ChannelFactory\n+    // Constructor that takes in a ServerConfiguration, ClientConfiguration and a ChannelFactory\n     // so we can reuse it for all Clients created here.\n-    public HedwigHubClientFactory(ServerConfiguration cfg, ClientSocketChannelFactory channelFactory) {\n+    public HedwigHubClientFactory(ServerConfiguration cfg, ClientConfiguration clientConfiguration,\n+                                  ClientSocketChannelFactory channelFactory) {\n         this.cfg = cfg;\n+        this.clientConfiguration = clientConfiguration;\n         this.channelFactory = channelFactory;\n     }\n \n@@ -44,17 +51,24 @@ public HedwigHubClientFactory(ServerConfiguration cfg, ClientSocketChannelFactor\n      */\n     HedwigHubClient create(final HedwigSocketAddress hub) {\n         // Create a hub specific version of the client to use\n-        return new HedwigHubClient(new ClientConfiguration() {\n+        ClientConfiguration hubClientConfiguration = new ClientConfiguration() {\n             @Override\n             protected HedwigSocketAddress getDefaultServerHedwigSocketAddress() {\n                 return hub;\n             }\n \n             @Override\n             public boolean isSSLEnabled() {\n-                return cfg.isInterRegionSSLEnabled();\n+                return cfg.isInterRegionSSLEnabled() || clientConfiguration.isSSLEnabled();\n             }\n-        }, channelFactory);\n+        };\n+        try {\n+            hubClientConfiguration.addConf(this.clientConfiguration.getConf());\n+        } catch (ConfigurationException e) {\n+            String msg = \"Configuration exception while loading the client configuration for the region manager.\";\n+            logger.error(msg);\n+            throw new RuntimeException(msg);\n+        }\n+        return new HedwigHubClient(hubClientConfiguration, channelFactory);\n     }\n-\n }"},{"sha":"2f4f012c0af7829c41d8e94ebb43255aab06a58a","filename":"hedwig-server/src/test/java/org/apache/hedwig/server/netty/TestPubSubServer.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/881cda5c85d17f952bdc2c7e101eef669bce35d2/hedwig-server/src/test/java/org/apache/hedwig/server/netty/TestPubSubServer.java","raw_url":"https://github.com/apache/bookkeeper/raw/881cda5c85d17f952bdc2c7e101eef669bce35d2/hedwig-server/src/test/java/org/apache/hedwig/server/netty/TestPubSubServer.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/test/java/org/apache/hedwig/server/netty/TestPubSubServer.java?ref=881cda5c85d17f952bdc2c7e101eef669bce35d2","patch":"@@ -85,7 +85,7 @@ public int getServerPort() {\n                 return port;\n             }\n \n-        }, uncaughtExceptionHandler) {\n+        }, new ClientConfiguration(), uncaughtExceptionHandler) {\n \n             @Override\n             protected TopicManager instantiateTopicManager() throws IOException {"}]}

