{"sha":"887546e7937db1c45e42b7ca49b3c82d790adca9","node_id":"MDY6Q29tbWl0MTU3NTk1Njo4ODc1NDZlNzkzN2RiMWM0NWU0MmI3Y2E0OWIzYzgyZDc5MGFkY2E5","commit":{"author":{"name":"Flavio Paiva Junqueira","email":"fpj@apache.org","date":"2012-05-29T21:12:38Z"},"committer":{"name":"Flavio Paiva Junqueira","email":"fpj@apache.org","date":"2012-05-29T21:12:38Z"},"message":"BOOKKEEPER-271: Review documentation for message bounding (ivank via fpj)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1343996 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"d0fb9bdf1dff1a4415b6c524c0d3e87c5f26ec86","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/d0fb9bdf1dff1a4415b6c524c0d3e87c5f26ec86"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/887546e7937db1c45e42b7ca49b3c82d790adca9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/887546e7937db1c45e42b7ca49b3c82d790adca9","html_url":"https://github.com/apache/bookkeeper/commit/887546e7937db1c45e42b7ca49b3c82d790adca9","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/887546e7937db1c45e42b7ca49b3c82d790adca9/comments","author":{"login":"fpj","id":572920,"node_id":"MDQ6VXNlcjU3MjkyMA==","avatar_url":"https://avatars.githubusercontent.com/u/572920?v=4","gravatar_id":"","url":"https://api.github.com/users/fpj","html_url":"https://github.com/fpj","followers_url":"https://api.github.com/users/fpj/followers","following_url":"https://api.github.com/users/fpj/following{/other_user}","gists_url":"https://api.github.com/users/fpj/gists{/gist_id}","starred_url":"https://api.github.com/users/fpj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fpj/subscriptions","organizations_url":"https://api.github.com/users/fpj/orgs","repos_url":"https://api.github.com/users/fpj/repos","events_url":"https://api.github.com/users/fpj/events{/privacy}","received_events_url":"https://api.github.com/users/fpj/received_events","type":"User","site_admin":false},"committer":{"login":"fpj","id":572920,"node_id":"MDQ6VXNlcjU3MjkyMA==","avatar_url":"https://avatars.githubusercontent.com/u/572920?v=4","gravatar_id":"","url":"https://api.github.com/users/fpj","html_url":"https://github.com/fpj","followers_url":"https://api.github.com/users/fpj/followers","following_url":"https://api.github.com/users/fpj/following{/other_user}","gists_url":"https://api.github.com/users/fpj/gists{/gist_id}","starred_url":"https://api.github.com/users/fpj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fpj/subscriptions","organizations_url":"https://api.github.com/users/fpj/orgs","repos_url":"https://api.github.com/users/fpj/repos","events_url":"https://api.github.com/users/fpj/events{/privacy}","received_events_url":"https://api.github.com/users/fpj/received_events","type":"User","site_admin":false},"parents":[{"sha":"f97ac5b415294aafb7e788c3569636882fa7ee4c","url":"https://api.github.com/repos/apache/bookkeeper/commits/f97ac5b415294aafb7e788c3569636882fa7ee4c","html_url":"https://github.com/apache/bookkeeper/commit/f97ac5b415294aafb7e788c3569636882fa7ee4c"}],"stats":{"total":43,"additions":39,"deletions":4},"files":[{"sha":"68f4734b6830853f79fcdbd0c619863f418bed5d","filename":"CHANGES.txt","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/apache/bookkeeper/blob/887546e7937db1c45e42b7ca49b3c82d790adca9/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/887546e7937db1c45e42b7ca49b3c82d790adca9/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=887546e7937db1c45e42b7ca49b3c82d790adca9","patch":"@@ -201,6 +201,10 @@ Trunk (unreleased changes)\n         BOOKKEEPER-97: collect pub/sub/consume statistics on hub server (sijie via ivank)\n \n \tBOOKKEEPER-269: Review documentation for hedwig console client (sijie via fpj)\n+\t\n+      hedwig-client/\n+\n+\tBOOKKEEPER-271: Review documentation for message bounding (ivank via fpj)\n \n       bookkeeper-benchmark/\n \tBOOKKEEPER-158: Move latest benchmarking code into trunk (ivank via fpj)"},{"sha":"8da6bd938e461965f5816157de8e8db39a214862","filename":"hedwig-client/src/main/java/org/apache/hedwig/client/api/Subscriber.java","status":"modified","additions":35,"deletions":4,"changes":39,"blob_url":"https://github.com/apache/bookkeeper/blob/887546e7937db1c45e42b7ca49b3c82d790adca9/hedwig-client/src/main/java/org/apache/hedwig/client/api/Subscriber.java","raw_url":"https://github.com/apache/bookkeeper/raw/887546e7937db1c45e42b7ca49b3c82d790adca9/hedwig-client/src/main/java/org/apache/hedwig/client/api/Subscriber.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-client/src/main/java/org/apache/hedwig/client/api/Subscriber.java?ref=887546e7937db1c45e42b7ca49b3c82d790adca9","patch":"@@ -93,7 +93,12 @@ public void asyncSubscribe(ByteString topic, ByteString subscriberId, CreateOrAt\n      * @param subscriberId\n      *            ID of the subscriber\n      * @param options\n-     *            Options to pass to the subscription. Can contain attach mode.\n+     *            Options to pass to the subscription. See\n+     *             {@link Subscriber#asyncSubscribe(com.google.protobuf.ByteString,\n+     *                                              com.google.protobuf.ByteString,\n+     *                                              PubSubProtocol.SubscriptionOptions,\n+     *                                              Callback,Object) asyncSubscribe}\n+     *            for details on how to set options.\n      * @throws CouldNotConnectException\n      *             If we are not able to connect to the server host\n      * @throws ClientAlreadySubscribedException\n@@ -110,15 +115,41 @@ public void subscribe(ByteString topic, ByteString subscriberId, SubscriptionOpt\n         InvalidSubscriberIdException;\n \n     /**\n-     * Subscribe to the given topic asynchronously for the inputted subscriberId\n-     * disregarding if the topic has been created yet or not.\n+     * <p>Subscribe to the given topic asynchronously for the inputted subscriberId.</p>\n+     *\n+     * <p>SubscriptionOptions contains parameters for how the hub should make the subscription.\n+     * The two options are the createorattach mode and message bound.</p>\n+     *\n+     * <p>The createorattach mode defines whether the subscription should create a new subscription, or\n+     * just attach to a preexisting subscription. If it tries to create the subscription, and the\n+     * subscription already exists, then an error will occur.</p>\n+     *\n+     * <p>The message bound defines the maximum number of undelivered messages which will be stored\n+     * for the subscription. This can be used to ensure that unused subscriptions do not grow\n+     * in an unbounded fashion. By default, the message bound is infinite, i.e. all undelivered messages\n+     * will be stored for the subscription. Note that if one subscription on a topic has a infinite\n+     * message bound, the message bound for all other subscriptions on that topic will effectively be\n+     * infinite as the messages have to be stored for the first subscription in any case. </p>\n      *\n+     * Usage is as follows:\n+     * <pre>\n+     * {@code\n+     * // create a new subscription with a message bound of 5\n+     * SubscriptionOptions options = SubscriptionOptions.newBuilder()\n+     *     .setCreateOrAttach(CreateOrAttach.CREATE).setMessageBound(5).build();\n+     * client.getSubscriber().asyncSubscribe(ByteString.copyFromUtf8(\"myTopic\"),\n+     *                                       ByteString.copyFromUtf8(\"mySubscription\"),\n+     *                                       options,\n+     *                                       myCallback,\n+     *                                       myContext);\n+     * }\n+     * </pre>\n      * @param topic\n      *            Topic name of the subscription\n      * @param subscriberId\n      *            ID of the subscriber\n      * @param options\n-     *            Options to pass to the subscription. Can contain attach mode.\n+     *            Options to pass to the subscription.\n      * @param callback\n      *            Callback to invoke when the subscribe request to the server\n      *            has actually gone through. This will have to deal with error"}]}

