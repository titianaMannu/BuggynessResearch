{"sha":"8bb0cde556cf1dc07d62cd74ca6739b392242cf0","node_id":"MDY6Q29tbWl0MTU3NTk1Njo4YmIwY2RlNTU2Y2YxZGMwN2Q2MmNkNzRjYTY3MzliMzkyMjQyY2Yw","commit":{"author":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2014-01-24T08:26:14Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2014-01-24T08:26:14Z"},"message":"BOOKKEEPER-703: Document all the settings added in BOOKKEEPER-656 (sijie)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1560917 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"cabaf160983765e348e05f21dcb84e998ac8b602","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/cabaf160983765e348e05f21dcb84e998ac8b602"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/8bb0cde556cf1dc07d62cd74ca6739b392242cf0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/8bb0cde556cf1dc07d62cd74ca6739b392242cf0","html_url":"https://github.com/apache/bookkeeper/commit/8bb0cde556cf1dc07d62cd74ca6739b392242cf0","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/8bb0cde556cf1dc07d62cd74ca6739b392242cf0/comments","author":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"694568b0ff0d048c284c8d5db0c9455d30dfa3ce","url":"https://api.github.com/repos/apache/bookkeeper/commits/694568b0ff0d048c284c8d5db0c9455d30dfa3ce","html_url":"https://github.com/apache/bookkeeper/commit/694568b0ff0d048c284c8d5db0c9455d30dfa3ce"}],"stats":{"total":79,"additions":74,"deletions":5},"files":[{"sha":"867fcb8222e8e1f2234cc2569975ca4d5a9a1f47","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/8bb0cde556cf1dc07d62cd74ca6739b392242cf0/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/8bb0cde556cf1dc07d62cd74ca6739b392242cf0/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=8bb0cde556cf1dc07d62cd74ca6739b392242cf0","patch":"@@ -150,6 +150,8 @@ Trunk (unreleased changes)\n \n         BOOKKEEPER-643: Improve concurrency of entry logger (sijie & Aniruddha via ivank)\n \n+        BOOKKEEPER-703: Document all the settings added in BOOKKEEPER-656 (sijie)\n+\n       hedwig-server:\n \n         BOOKKEEPER-601: readahead cache size isn't updated correctly (sijie via fpj)"},{"sha":"1175b12ca90f7d306b92535da820a27dbf3ce76e","filename":"bookkeeper-server/conf/bk_server.conf","status":"modified","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/apache/bookkeeper/blob/8bb0cde556cf1dc07d62cd74ca6739b392242cf0/bookkeeper-server/conf/bk_server.conf","raw_url":"https://github.com/apache/bookkeeper/raw/8bb0cde556cf1dc07d62cd74ca6739b392242cf0/bookkeeper-server/conf/bk_server.conf","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/conf/bk_server.conf?ref=8bb0cde556cf1dc07d62cd74ca6739b392242cf0","patch":"@@ -54,6 +54,8 @@ journalDirectory=/tmp/bk-txn\n # which reduce the contention between random i/o and sequential write.\n # It is possible to run with a single disk, but performance will be significantly lower.\n ledgerDirectories=/tmp/bk-data\n+# Directories to store index files. If not specified, will use ledgerDirectories to store.\n+# indexDirectories=/tmp/bk-data\n \n # Ledger Manager Class\n # What kind of ledger manager is used to manage how ledgers are stored, managed\n@@ -65,6 +67,9 @@ ledgerDirectories=/tmp/bk-data\n # store all ledgers.\n # zkLedgersRootPath=/ledgers\n \n+# Enable/Disable entry logger preallocation\n+# entryLogFilePreallocationEnabled=true\n+\n # Max file size of entry logger, in bytes\n # A new entry log file will be created when the old one reaches the file size limitation\n # logSizeLimit=2147483648\n@@ -114,6 +119,31 @@ ledgerDirectories=/tmp/bk-data\n #\n # journalMaxBackups=5\n \n+# How much space should we pre-allocate at a time in the journal\n+# journalPreAllocSizeMB=16\n+\n+# Size of the write buffers used for the journal\n+# journalWriteBufferSizeKB=64\n+\n+# Should we remove pages from page cache after force write\n+# journalRemoveFromPageCache=false\n+\n+# Should we group journal force writes, which optimize group commit\n+# for higher throughput\n+# journalAdaptiveGroupWrites=true\n+\n+# Maximum latency to impose on a journal write to achieve grouping\n+# journalMaxGroupWaitMSec=200\n+\n+# Maximum writes to buffer to achieve grouping\n+# journalBufferedWritesThreshold=524288\n+\n+# If we should flush the journal when journal queue is empty\n+# journalFlushWhenQueueEmpty=false\n+\n+# The number of threads that should handle journal callbacks\n+# numJournalCallbackThreads=1\n+\n # How long the interval to trigger next garbage collection, in milliseconds\n # Since garbage collection is running in background, too frequent gc\n # will heart performance. It is better to give a higher number of gc\n@@ -213,3 +243,17 @@ zkTimeout=10000\n # Note that periodic checking will put extra load on the cluster, so it should\n # not be run more frequently than once a day.\n #auditorPeriodicCheckInterval=604800\n+\n+# number of threads that should handle write requests. if zero, the writes would\n+# be handled by netty threads directly.\n+# numAddWorkerThreads=1\n+\n+# number of threads that should handle read requests. if zero, the reads would\n+# be handled by netty threads directly.\n+# numReadWorkerThreads=1\n+\n+# The number of bytes we should use as capacity for BufferedReadChannel. Default is 512 bytes.\n+# readBufferSizeBytes=512\n+\n+# The number of bytes used as capacity for the write buffer. Default is 64KB.\n+# writeBufferSizeBytes=65536"},{"sha":"a67c1788d035204a4b3c9cc317fbf2fe4b2ebcbe","filename":"doc/bookieConfigParams.textile","status":"modified","additions":28,"deletions":5,"changes":33,"blob_url":"https://github.com/apache/bookkeeper/blob/8bb0cde556cf1dc07d62cd74ca6739b392242cf0/doc/bookieConfigParams.textile","raw_url":"https://github.com/apache/bookkeeper/raw/8bb0cde556cf1dc07d62cd74ca6739b392242cf0/doc/bookieConfigParams.textile","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/doc/bookieConfigParams.textile?ref=8bb0cde556cf1dc07d62cd74ca6739b392242cf0","patch":"@@ -19,17 +19,30 @@ h2. Server parameters\n | @bookiePort@        |Port that bookie server listens on. The default value is 3181.|\n | @journalDirectory@        | Directory to which Bookkeeper outputs its write ahead log, ideally on a dedicated device. The default value is \"/tmp/bk-txn\". |\n | @ledgerDirectories@        | Directory to which Bookkeeper outputs ledger snapshots.  Multiple directories can be defined, separated by comma, e.g. /tmp/bk1-data,/tmp/bk2-data. Ideally ledger dirs and journal dir are each on a different device, which reduces the contention between random I/O and sequential writes. It is possible to run with a single disk,  but performance will be significantly lower.|\n-| @logSizeLimit@      | Maximum file size of entry logger, in bytes. A new entry log file will be created when the old one reaches the file size limitation. The default value is 2GB. |\n-| @journalMaxSizeMB@  |  Maximum file size of journal file, in megabytes. A new journal file will be created when the old one reaches the file size limitation. The default value is 2kB. |\n-| @journalMaxBackups@ |  Max number of old journal file to keep. Keeping a number of old journal files might help data recovery in some special cases. The default value is 5. |\n+| @indexDirectories@  | Directories to store index files. If not specified, bookie will use ledgerDirectories to store index files. |\n+| @bookieDeathWatchInterval@ | Interval to check whether a bookie is dead or not, in milliseconds. |\n | @gcWaitTime@        | Interval to trigger next garbage collection, in milliseconds. Since garbage collection is running in the background, running the garbage collector too frequently hurts performance. It is best to set its value high enough if there is sufficient disk capacity.|\n | @flushInterval@ | Interval to flush ledger index pages to disk, in milliseconds. Flushing index files will introduce random disk I/O. Consequently, it is important to have journal dir and ledger dirs each on different devices. However,  if it necessary to have journal dir and ledger dirs on the same device, one option is to increment the flush interval to get higher performance. Upon a failure, the bookie will take longer to recover. |\n-| @bookieDeathWatchInterval@ | Interval to check whether a bookie is dead or not, in milliseconds. |\n+| @numAddWorkerThreads@ | Number of threads that should handle write requests. if zero, the writes would be handled by netty threads directly. |\n+| @numReadWorkerThreads@ | Number of threads that should handle read requests. if zero, the reads would be handled by netty threads directly. |\n \n h2. NIO server settings\n \n | @serverTcpNoDelay@ | This settings is used to enabled/disabled Nagle's algorithm, which is a means of improving the efficiency of TCP/IP networks by reducing the number of packets that need to be sent over the network. If you are sending many small messages, such that more than one can fit in a single IP packet, setting server.tcpnodelay to false to enable Nagle algorithm can provide better performance. Default value is true. |\n \n+h2. Journal settings\n+\n+| @journalMaxSizeMB@  |  Maximum file size of journal file, in megabytes. A new journal file will be created when the old one reaches the file size limitation. The default value is 2kB. |\n+| @journalMaxBackups@ |  Max number of old journal file to keep. Keeping a number of old journal files might help data recovery in some special cases. The default value is 5. |\n+| @journalPreAllocSizeMB@ | The space that bookie pre-allocate at a time in the journal. |\n+| @journalWriteBufferSizeKB@ | Size of the write buffers used for the journal. |\n+| @journalRemoveFromPageCache@ | Whether bookie removes pages from page cache after force write. Used to avoid journal pollute os page cache. |\n+| @journalAdaptiveGroupWrites@ | Whether to group journal force writes, which optimize group commit for higher throughput. |\n+| @journalMaxGroupWaitMSec@ | Maximum latency to impose on a journal write to achieve grouping. |\n+| @journalBufferedWritesThreshold@ | Maximum writes to buffer to achieve grouping. |\n+| @journalFlushWhenQueueEmpty@ | Whether to flush the journal when journal queue is empty. Disabling it would provide sustained journal adds throughput. |\n+| @numJournalCallbackThreads@ | The number of threads that should handle journal callbacks. |\n+\n h2. Ledger cache settings\n \n | @openFileLimit@ | Maximum number of ledger index files that can be opened in a bookie. If the number of ledger index files reaches this limit, the bookie starts to flush some ledger indexes from memory to disk. If flushing happens too frequently, then performance is affected. You can tune this number to improve performance according. |\n@@ -41,12 +54,22 @@ h2. Ledger manager settings\n | @ledgerManagerType@ | What kind of ledger manager is used to manage how ledgers are stored, managed and garbage collected. See \"BookKeeper Internals\":./bookkeeperInternals.html for detailed info. Default is flat. |\n | @zkLedgersRootPath@ | Root zookeeper path to store ledger metadata. Default is /ledgers. |\n \n+h2. Entry Log settings\n+\n+| @logSizeLimit@      | Maximum file size of entry logger, in bytes. A new entry log file will be created when the old one reaches the file size limitation. The default value is 2GB. |\n+| @entryLogFilePreallocationEnabled@ | Enable/Disable entry logger preallocation. Enable this would provide sustained higher throughput and reduce latency impaction. |\n+| @readBufferSizeBytes@ | The number of bytes used as capacity for BufferedReadChannel. Default is 512 bytes. |\n+| @writeBufferSizeBytes@ | The number of bytes used as capacity for the write buffer. Default is 64KB. |\n+\n h2. Entry Log compaction settings\n \n | @minorCompactionInterval@ | Interval to run minor compaction, in seconds. If it is set to less than or equal to zero, then minor compaction is disabled. Default is 1 hour. |\n | @minorCompactionThreshold@ | Entry log files with remaining size under this threshold value will be compacted in a minor compaction. If it is set to less than or equal to zero, the minor compaction is disabled. Default is 0.2 |\n | @majorCompactionInterval@ | Interval to run major compaction, in seconds. If it is set to less than or equal to zero, then major compaction is disabled. Default is 1 day. |\n | @majorCompactionThreshold@ | Entry log files with remaining size below this threshold value will be compacted in a major compaction. Those entry log files whose remaining size percentage is still higher than the threshold value will never be compacted. If it is set to less than or equal to zero, the major compaction is disabled. Default is 0.8. |\n+| @compactionMaxOutstandingRequests@ | The maximum number of entries which can be compacted without flushing. When compacting, the entries are written to the entrylog and the new offsets are cached in memory. Once the entrylog is flushed the index is updated with the new offsets. This parameter controls the number of entries added to the entrylog before a flush is forced. A higher value for this parameter means more memory will be used for offsets. Each offset consist of 3\n+longs. This parameter should _not_ be modified unless you know what you're doing. |\n+| @compactionRate@ | The rate at which compaction will re-add entries. The unit is adds per second. |\n \n h2. Statistics\n \n@@ -68,4 +91,4 @@ h2. Disk utilization\n h2. ZooKeeper parameters\n \n | @zkServers@ | A list of one or more servers on which zookeeper is running. The server list is comma separated, e.g., zk1:2181,zk2:2181,zk3:2181 |\n-| @zkTimeout@ | ZooKeeper client session timeout in milliseconds. Bookie server will exit if it received SESSION_EXPIRED because it was partitioned off from ZooKeeper for more than the session timeout. JVM garbage collection or disk I/O can cause SESSION_EXPIRED. Increment this value could help avoiding this issue. The default value is 10,000. |\n\\ No newline at end of file\n+| @zkTimeout@ | ZooKeeper client session timeout in milliseconds. Bookie server will exit if it received SESSION_EXPIRED because it was partitioned off from ZooKeeper for more than the session timeout. JVM garbage collection or disk I/O can cause SESSION_EXPIRED. Increment this value could help avoiding this issue. The default value is 10,000. |"}]}

