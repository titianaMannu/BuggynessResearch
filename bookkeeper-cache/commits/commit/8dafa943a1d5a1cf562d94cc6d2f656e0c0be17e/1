{"sha":"8dafa943a1d5a1cf562d94cc6d2f656e0c0be17e","node_id":"MDY6Q29tbWl0MTU3NTk1Njo4ZGFmYTk0M2ExZDVhMWNmNTYyZDk0Y2M2ZDJmNjU2ZTBjMGJlMTdl","commit":{"author":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2013-10-02T05:01:52Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2013-10-02T05:01:52Z"},"message":"BOOKKEEPER-686: Bookie startup will fail if one of the configured ledgerDir is full and the same is used for replaying the journal (Rakesh via sijie)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1528307 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"bdd19148d01e2d526b102178891f2dbde9b6b095","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/bdd19148d01e2d526b102178891f2dbde9b6b095"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/8dafa943a1d5a1cf562d94cc6d2f656e0c0be17e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/8dafa943a1d5a1cf562d94cc6d2f656e0c0be17e","html_url":"https://github.com/apache/bookkeeper/commit/8dafa943a1d5a1cf562d94cc6d2f656e0c0be17e","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/8dafa943a1d5a1cf562d94cc6d2f656e0c0be17e/comments","author":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"3d9bb20a7f7e510bce7c16be392c0ac82c3a3496","url":"https://api.github.com/repos/apache/bookkeeper/commits/3d9bb20a7f7e510bce7c16be392c0ac82c3a3496","html_url":"https://github.com/apache/bookkeeper/commit/3d9bb20a7f7e510bce7c16be392c0ac82c3a3496"}],"stats":{"total":86,"additions":84,"deletions":2},"files":[{"sha":"d0882e27c4148c1f23b519bedf9d2710eff7a763","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/8dafa943a1d5a1cf562d94cc6d2f656e0c0be17e/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/8dafa943a1d5a1cf562d94cc6d2f656e0c0be17e/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=8dafa943a1d5a1cf562d94cc6d2f656e0c0be17e","patch":"@@ -46,6 +46,8 @@ Trunk (unreleased changes)\n \n       BOOKKEEPER-653: Timeout option is missing in few testcases (Rakesh via ivank)\n \n+      BOOKKEEPER-686: Bookie startup will fail if one of the configured ledgerDir is full and the same is used for replaying the journal (Rakesh via sijie)\n+\n       bookkeeper-server:\n \n         BOOKKEEPER-567: ReadOnlyBookieTest hangs on shutdown (sijie via ivank)"},{"sha":"42c29e19c71eaa4daa53abebcf26fec2cfce7c17","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java","status":"modified","additions":8,"deletions":2,"changes":10,"blob_url":"https://github.com/apache/bookkeeper/blob/8dafa943a1d5a1cf562d94cc6d2f656e0c0be17e/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java","raw_url":"https://github.com/apache/bookkeeper/raw/8dafa943a1d5a1cf562d94cc6d2f656e0c0be17e/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java?ref=8dafa943a1d5a1cf562d94cc6d2f656e0c0be17e","patch":"@@ -413,6 +413,10 @@ public Bookie(ServerConfiguration conf)\n         LOG.info(\"instantiate ledger manager {}\", ledgerManagerFactory.getClass().getName());\n         ledgerManager = ledgerManagerFactory.newLedgerManager();\n \n+        // Initialise ledgerDirManager. This would look through all the\n+        // configured directories. When disk errors or all the ledger\n+        // directories are full, would throws exception and fail bookie startup.\n+        this.ledgerDirsManager.init();\n         // instantiate the journal\n         journal = new Journal(conf, ledgerDirsManager);\n         ledgerStorage = new InterleavedLedgerStorage(conf, ledgerManager,\n@@ -486,6 +490,8 @@ public void process(int journalVersion, long offset, ByteBuffer recBuff) throws\n     synchronized public void start() {\n         setDaemon(true);\n         LOG.debug(\"I'm starting a bookie with journal directory {}\", journalDirectory.getName());\n+        //Start DiskChecker thread\n+        ledgerDirsManager.start();\n         // replay journals\n         try {\n             readJournal();\n@@ -502,9 +508,9 @@ synchronized public void start() {\n         // start bookie thread\n         super.start();\n \n+        // After successful bookie startup, register listener for disk\n+        // error/full notifications.\n         ledgerDirsManager.addLedgerDirsListener(getLedgerDirsListener());\n-        //Start DiskChecker thread\n-        ledgerDirsManager.start();\n \n         ledgerStorage.start();\n "},{"sha":"100402f5a39f5b81c5832c7d9af0184d50d810d5","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDirsManager.java","status":"modified","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/apache/bookkeeper/blob/8dafa943a1d5a1cf562d94cc6d2f656e0c0be17e/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDirsManager.java","raw_url":"https://github.com/apache/bookkeeper/raw/8dafa943a1d5a1cf562d94cc6d2f656e0c0be17e/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDirsManager.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDirsManager.java?ref=8dafa943a1d5a1cf562d94cc6d2f656e0c0be17e","patch":"@@ -153,6 +153,19 @@ public void addLedgerDirsListener(LedgerDirsListener listener) {\n         }\n     }\n \n+    /**\n+     * Sweep through all the directories to check disk errors or disk full.\n+     * \n+     * @throws DiskErrorException\n+     *             If disk having errors\n+     * @throws NoWritableLedgerDirException\n+     *             If all the configured ledger directories are full or having\n+     *             less space than threshold\n+     */\n+    public void init() throws DiskErrorException, NoWritableLedgerDirException {\n+        monitor.checkDirs(writableLedgerDirectories);\n+    }\n+\n     // start the daemon for disk monitoring\n     public void start() {\n         monitor.setDaemon(true);\n@@ -201,6 +214,7 @@ public void run() {\n                         } catch (DiskErrorException e) {\n                             // Notify disk failure to all listeners\n                             for (LedgerDirsListener listener : listeners) {\n+                                LOG.warn(\"{} has errors.\", dir, e);\n                                 listener.diskFailed(dir);\n                             }\n                         } catch (DiskOutOfSpaceException e) {\n@@ -224,6 +238,18 @@ public void run() {\n             }\n             LOG.info(\"LedgerDirsMonitorThread exited!\");\n         }\n+\n+        private void checkDirs(List<File> writableDirs)\n+                throws DiskErrorException, NoWritableLedgerDirException {\n+            for (File dir : writableDirs) {\n+                try {\n+                    diskChecker.checkDir(dir);\n+                } catch (DiskOutOfSpaceException e) {\n+                    addToFilledDirs(dir);\n+                }\n+            }\n+            getWritableLedgerDirs();\n+        }\n     }\n \n     /**"},{"sha":"165f42457b96bb4d4029114bc6cde15e492a14e2","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieInitializationTest.java","status":"modified","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/apache/bookkeeper/blob/8dafa943a1d5a1cf562d94cc6d2f656e0c0be17e/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieInitializationTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/8dafa943a1d5a1cf562d94cc6d2f656e0c0be17e/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieInitializationTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieInitializationTest.java?ref=8dafa943a1d5a1cf562d94cc6d2f656e0c0be17e","patch":"@@ -34,11 +34,13 @@\n \n import org.apache.bookkeeper.bookie.Bookie;\n import org.apache.bookkeeper.bookie.BookieException;\n+import org.apache.bookkeeper.bookie.LedgerDirsManager.NoWritableLedgerDirException;\n import org.apache.bookkeeper.conf.ClientConfiguration;\n import org.apache.bookkeeper.conf.ServerConfiguration;\n import org.apache.bookkeeper.client.BookKeeperAdmin;\n import org.apache.bookkeeper.proto.BookieServer;\n import org.apache.bookkeeper.test.ZooKeeperUtil;\n+import org.apache.bookkeeper.util.DiskChecker.DiskErrorException;\n import org.apache.commons.io.FileUtils;\n import org.apache.zookeeper.WatchedEvent;\n import org.apache.zookeeper.Watcher;\n@@ -332,6 +334,52 @@ public void testStartBookieWithoutZKInitialized() throws Exception {\n         }\n     }\n \n+    /**\n+     * Check disk full. Expected to throw NoWritableLedgerDirException\n+     * during bookie initialisation.\n+     */\n+    @Test(timeout = 30000, expected = NoWritableLedgerDirException.class)\n+    public void testWithDiskFull() throws Exception {\n+        File tempDir = File.createTempFile(\"DiskCheck\", \"test\");\n+        tempDir.delete();\n+        tempDir.mkdir();\n+        long usableSpace = tempDir.getUsableSpace();\n+        long totalSpace = tempDir.getTotalSpace();\n+        final ServerConfiguration conf = new ServerConfiguration()\n+                .setZkServers(zkutil.getZooKeeperConnectString())\n+                .setZkTimeout(5000).setJournalDirName(tempDir.getPath())\n+                .setLedgerDirNames(new String[] { tempDir.getPath() });\n+        conf.setDiskUsageThreshold((1f - ((float) usableSpace / (float) totalSpace)) - 0.05f);\n+        try {\n+            new Bookie(conf);\n+        } finally {\n+            FileUtils.deleteDirectory(tempDir);\n+        }\n+    }\n+\n+    /**\n+     * Check disk error for file. Expected to throw DiskErrorException.\n+     */\n+    @Test(timeout = 30000, expected = DiskErrorException.class)\n+    public void testWithDiskError() throws Exception {\n+        File parent = File.createTempFile(\"DiskCheck\", \"test\");\n+        parent.delete();\n+        parent.mkdir();\n+        File child = File.createTempFile(\"DiskCheck\", \"test\", parent);\n+        final ServerConfiguration conf = new ServerConfiguration()\n+                .setZkServers(zkutil.getZooKeeperConnectString())\n+                .setZkTimeout(5000).setJournalDirName(child.getPath())\n+                .setLedgerDirNames(new String[] { child.getPath() });\n+        try {\n+            // LedgerDirsManager#init() is used in Bookie instantiation.\n+            // Simulating disk errors by directly calling #init\n+            LedgerDirsManager ldm = new LedgerDirsManager(conf);\n+            ldm.init();\n+        } finally {\n+            FileUtils.deleteDirectory(parent);\n+        }\n+    }\n+\n     private void createNewZKClient() throws Exception {\n         // create a zookeeper client\n         LOG.debug(\"Instantiate ZK Client\");"}]}

