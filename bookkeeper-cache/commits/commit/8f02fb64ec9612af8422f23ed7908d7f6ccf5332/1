{"sha":"8f02fb64ec9612af8422f23ed7908d7f6ccf5332","node_id":"MDY6Q29tbWl0MTU3NTk1Njo4ZjAyZmI2NGVjOTYxMmFmODQyMmYyM2VkNzkwOGQ3ZjZjY2Y1MzMy","commit":{"author":{"name":"Flavio Paiva Junqueira","email":"fpj@apache.org","date":"2012-04-09T09:42:01Z"},"committer":{"name":"Flavio Paiva Junqueira","email":"fpj@apache.org","date":"2012-04-09T09:42:01Z"},"message":"BOOKKEEPER-212: Bookie stops responding when creating and deleting many ledgers (sijie via fpj)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1311177 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"d5d335a9b91f41e63d23c394e93a4da28cafda83","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/d5d335a9b91f41e63d23c394e93a4da28cafda83"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/8f02fb64ec9612af8422f23ed7908d7f6ccf5332","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/8f02fb64ec9612af8422f23ed7908d7f6ccf5332","html_url":"https://github.com/apache/bookkeeper/commit/8f02fb64ec9612af8422f23ed7908d7f6ccf5332","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/8f02fb64ec9612af8422f23ed7908d7f6ccf5332/comments","author":{"login":"fpj","id":572920,"node_id":"MDQ6VXNlcjU3MjkyMA==","avatar_url":"https://avatars.githubusercontent.com/u/572920?v=4","gravatar_id":"","url":"https://api.github.com/users/fpj","html_url":"https://github.com/fpj","followers_url":"https://api.github.com/users/fpj/followers","following_url":"https://api.github.com/users/fpj/following{/other_user}","gists_url":"https://api.github.com/users/fpj/gists{/gist_id}","starred_url":"https://api.github.com/users/fpj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fpj/subscriptions","organizations_url":"https://api.github.com/users/fpj/orgs","repos_url":"https://api.github.com/users/fpj/repos","events_url":"https://api.github.com/users/fpj/events{/privacy}","received_events_url":"https://api.github.com/users/fpj/received_events","type":"User","site_admin":false},"committer":{"login":"fpj","id":572920,"node_id":"MDQ6VXNlcjU3MjkyMA==","avatar_url":"https://avatars.githubusercontent.com/u/572920?v=4","gravatar_id":"","url":"https://api.github.com/users/fpj","html_url":"https://github.com/fpj","followers_url":"https://api.github.com/users/fpj/followers","following_url":"https://api.github.com/users/fpj/following{/other_user}","gists_url":"https://api.github.com/users/fpj/gists{/gist_id}","starred_url":"https://api.github.com/users/fpj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fpj/subscriptions","organizations_url":"https://api.github.com/users/fpj/orgs","repos_url":"https://api.github.com/users/fpj/repos","events_url":"https://api.github.com/users/fpj/events{/privacy}","received_events_url":"https://api.github.com/users/fpj/received_events","type":"User","site_admin":false},"parents":[{"sha":"f694716e289c448ab89cab5fa81ea0946f9d9193","url":"https://api.github.com/repos/apache/bookkeeper/commits/f694716e289c448ab89cab5fa81ea0946f9d9193","html_url":"https://github.com/apache/bookkeeper/commit/f694716e289c448ab89cab5fa81ea0946f9d9193"}],"stats":{"total":78,"additions":77,"deletions":1},"files":[{"sha":"384cb598855e5a137818a76c0f0d4a887dd286f3","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/8f02fb64ec9612af8422f23ed7908d7f6ccf5332/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/8f02fb64ec9612af8422f23ed7908d7f6ccf5332/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=8f02fb64ec9612af8422f23ed7908d7f6ccf5332","patch":"@@ -78,6 +78,8 @@ Trunk (unreleased changes)\n \n         BOOKKEEPER-135: Fencing does not check the ledger masterPasswd (ivank)\n \n+\tBOOKKEEPER-212: Bookie stops responding when creating and deleting many ledgers (sijie via fpj)\n+\n       hedwig-server/\n       \n         BOOKKEEPER-140: Hub server doesn't subscribe remote region correctly when a region is down. (Sijie Gou via ivank)"},{"sha":"eb8a89e235f5f6293d4dd72a62fd8b134bd33492","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/8f02fb64ec9612af8422f23ed7908d7f6ccf5332/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheImpl.java","raw_url":"https://github.com/apache/bookkeeper/raw/8f02fb64ec9612af8422f23ed7908d7f6ccf5332/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheImpl.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheImpl.java?ref=8f02fb64ec9612af8422f23ed7908d7f6ccf5332","patch":"@@ -615,8 +615,8 @@ public void deleteLedger(long ledgerId) throws IOException {\n         FileInfo fi = null;\n         try {\n             fi = getFileInfo(ledgerId, null);\n-            fi.delete();\n             fi.close(false);\n+            fi.delete();\n         } finally {\n             // should release use count\n             // otherwise the file channel would not be closed."},{"sha":"7c7db0386255fc34c8040aea7436ba5fdd3cd2df","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LedgerCreateDeleteTest.java","status":"added","additions":74,"deletions":0,"changes":74,"blob_url":"https://github.com/apache/bookkeeper/blob/8f02fb64ec9612af8422f23ed7908d7f6ccf5332/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LedgerCreateDeleteTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/8f02fb64ec9612af8422f23ed7908d7f6ccf5332/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LedgerCreateDeleteTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LedgerCreateDeleteTest.java?ref=8f02fb64ec9612af8422f23ed7908d7f6ccf5332","patch":"@@ -0,0 +1,74 @@\n+package org.apache.bookkeeper.test;\n+\n+/*\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ *\n+ */\n+\n+import java.util.ArrayList;\n+\n+import org.apache.bookkeeper.client.LedgerHandle;\n+import org.apache.bookkeeper.client.BookKeeper.DigestType;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+/**\n+ * Test Create/Delete ledgers\n+ */\n+public class LedgerCreateDeleteTest extends BookKeeperClusterTestCase {\n+\n+    public LedgerCreateDeleteTest() {\n+        super(1);\n+    }\n+\n+    @Override\n+    @Before\n+    public void setUp() throws Exception {\n+        baseConf.setOpenFileLimit(1); \n+        super.setUp();\n+    }\n+\n+    @Test\n+    public void testCreateDeleteLedgers() throws Exception {\n+        int numLedgers = 3;\n+        ArrayList<Long> ledgers = new ArrayList<Long>();\n+        for (int i=0; i<numLedgers; i++) {\n+            LedgerHandle lh = bkc.createLedger(1, 1, DigestType.CRC32, \"bk is cool\".getBytes());\n+            for (int j=0; j<5; j++) {\n+                lh.addEntry(\"just test\".getBytes());\n+            }\n+            ledgers.add(lh.getId());\n+            lh.close();\n+        }\n+        for (long ledgerId : ledgers) {\n+            bkc.deleteLedger(ledgerId);\n+        }\n+        ledgers.clear();\n+        Thread.sleep(baseConf.getGcWaitTime() * 2);\n+        for (int i=0; i<numLedgers; i++) {\n+            LedgerHandle lh = bkc.createLedger(1, 1, DigestType.CRC32, \"bk is cool\".getBytes());\n+            for (int j=0; j<5; j++) {\n+                lh.addEntry(\"just test\".getBytes());\n+            }\n+            ledgers.add(lh.getId());\n+            lh.close();\n+        }\n+    }\n+}"}]}

