{"sha":"9268e6194fadbf2829dd74ebb652d9b39e4a3c10","node_id":"MDY6Q29tbWl0MTU3NTk1Njo5MjY4ZTYxOTRmYWRiZjI4MjlkZDc0ZWJiNjUyZDliMzllNGEzYzEw","commit":{"author":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2012-06-05T06:56:06Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2012-06-05T06:56:06Z"},"message":"BOOKKEEPER-279: LocalBookKeeper is failing intermittently due to zkclient connection establishment delay (Rakesh R via sijie)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.1@1346258 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"160f9471725d34c5aadf4364c27ccbe87390755a","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/160f9471725d34c5aadf4364c27ccbe87390755a"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/9268e6194fadbf2829dd74ebb652d9b39e4a3c10","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/9268e6194fadbf2829dd74ebb652d9b39e4a3c10","html_url":"https://github.com/apache/bookkeeper/commit/9268e6194fadbf2829dd74ebb652d9b39e4a3c10","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/9268e6194fadbf2829dd74ebb652d9b39e4a3c10/comments","author":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"c1024f84c8502c77ef42dad1123a87e3dbd629fc","url":"https://api.github.com/repos/apache/bookkeeper/commits/c1024f84c8502c77ef42dad1123a87e3dbd629fc","html_url":"https://github.com/apache/bookkeeper/commit/c1024f84c8502c77ef42dad1123a87e3dbd629fc"}],"stats":{"total":49,"additions":35,"deletions":14},"files":[{"sha":"29107edb72143171ed7efcc053876ec02a18faf3","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/9268e6194fadbf2829dd74ebb652d9b39e4a3c10/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/9268e6194fadbf2829dd74ebb652d9b39e4a3c10/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=9268e6194fadbf2829dd74ebb652d9b39e4a3c10","patch":"@@ -122,6 +122,8 @@ Release 4.1.0 - 2012-05-31\n \n         BOOKKEEPER-281: BKClient is failing when zkclient connection delays (ivank via sijie)\n \n+        BOOKKEEPER-279: LocalBookKeeper is failing intermittently due to zkclient connection establishment delay (Rakesh R via sijie)\n+\n       hedwig-client/\n \n         BOOKKEEPER-217: NPE in hedwig client when enable DEBUG (sijie via ivank)"},{"sha":"f6dc07bad939a3e33d9f1b02f5d7dd1e253160bb","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/util/LocalBookKeeper.java","status":"modified","additions":33,"deletions":14,"changes":47,"blob_url":"https://github.com/apache/bookkeeper/blob/9268e6194fadbf2829dd74ebb652d9b39e4a3c10/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/LocalBookKeeper.java","raw_url":"https://github.com/apache/bookkeeper/raw/9268e6194fadbf2829dd74ebb652d9b39e4a3c10/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/LocalBookKeeper.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/LocalBookKeeper.java?ref=9268e6194fadbf2829dd74ebb652d9b39e4a3c10","patch":"@@ -26,23 +26,20 @@\n import java.net.InetAddress;\n import java.net.InetSocketAddress;\n import java.net.Socket;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n \n import org.apache.bookkeeper.bookie.BookieException;\n import org.apache.bookkeeper.conf.ServerConfiguration;\n import org.apache.bookkeeper.proto.BookieServer;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n import org.apache.zookeeper.CreateMode;\n import org.apache.zookeeper.KeeperException;\n import org.apache.zookeeper.WatchedEvent;\n import org.apache.zookeeper.Watcher;\n import org.apache.zookeeper.ZooKeeper;\n+import org.apache.zookeeper.Watcher.Event.KeeperState;\n import org.apache.zookeeper.ZooDefs.Ids;\n import org.apache.zookeeper.server.NIOServerCnxnFactory;\n import org.apache.zookeeper.server.ZooKeeperServer;\n@@ -68,6 +65,7 @@ public LocalBookKeeper(int numberOfBookies) {\n     ZooKeeperServer zks;\n     ZooKeeper zkc;\n     int ZooKeeperDefaultPort = 2181;\n+    static int zkSessionTimeOut = 5000;\n     File ZkTmpDir;\n \n     //BookKeeper variables\n@@ -104,11 +102,14 @@ private void runZookeeper(int maxCC) throws IOException {\n         LOG.debug(\"ZooKeeper server up: \" + b);\n     }\n \n-    private void initializeZookeper() {\n+    private void initializeZookeper() throws IOException {\n         LOG.info(\"Instantiate ZK Client\");\n         //initialize the zk client with values\n         try {\n-            zkc = new ZooKeeper(\"127.0.0.1\", ZooKeeperDefaultPort, new emptyWatcher());\n+            ZKConnectionWatcher zkConnectionWatcher = new ZKConnectionWatcher();\n+            zkc = new ZooKeeper(HOSTPORT, zkSessionTimeOut,\n+                    zkConnectionWatcher);\n+            zkConnectionWatcher.waitForConnection();\n             zkc.create(\"/ledgers\", new byte[0], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n             zkc.create(\"/ledgers/available\", new byte[0], Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT);\n             // No need to create an entry for each requested bookie anymore as the\n@@ -119,9 +120,6 @@ private void initializeZookeper() {\n         } catch (InterruptedException e) {\n             // TODO Auto-generated catch block\n             LOG.error(\"Interrupted while creating znodes\", e);\n-        } catch (IOException e) {\n-            // TODO Auto-generated catch block\n-            LOG.error(\"Exception while creating znodes\", e);\n         }\n     }\n     private void runBookies(ServerConfiguration baseConf) \n@@ -184,9 +182,30 @@ private static void usage() {\n         System.err.println(\"Usage: LocalBookKeeper number-of-bookies\");\n     }\n \n-    /*\tUser for testing purposes, void */\n-    static class emptyWatcher implements Watcher {\n-        public void process(WatchedEvent event) {}\n+    /* Watching SyncConnected event from ZooKeeper */\n+    static class ZKConnectionWatcher implements Watcher {\n+        private CountDownLatch clientConnectLatch = new CountDownLatch(1);\n+\n+        @Override\n+        public void process(WatchedEvent event) {\n+            if (event.getState() == KeeperState.SyncConnected) {\n+                clientConnectLatch.countDown();\n+            }\n+        }\n+\n+        // Waiting for the SyncConnected event from the ZooKeeper server\n+        public void waitForConnection() throws IOException {\n+            try {\n+                if (!clientConnectLatch.await(zkSessionTimeOut,\n+                        TimeUnit.MILLISECONDS)) {\n+                    throw new IOException(\n+                            \"Couldn't connect to zookeeper server\");\n+                }\n+            } catch (InterruptedException e) {\n+                throw new IOException(\n+                        \"Interrupted when connecting to zookeeper server\", e);\n+            }\n+        }\n     }\n \n     public static boolean waitForServerUp(String hp, long timeout) {"}]}

