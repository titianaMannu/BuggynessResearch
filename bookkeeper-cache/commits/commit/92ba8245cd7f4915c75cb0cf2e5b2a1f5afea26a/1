{"sha":"92ba8245cd7f4915c75cb0cf2e5b2a1f5afea26a","node_id":"MDY6Q29tbWl0MTU3NTk1Njo5MmJhODI0NWNkN2Y0OTE1Yzc1Y2IwY2YyZTViMmExZjVhZmVhMjZh","commit":{"author":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2014-06-03T14:48:51Z"},"committer":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2014-06-03T14:48:51Z"},"message":"BOOKKEEPER-750: Flake in BookieAutoRecoveryTest#testEmptyLedgerLosesQuorumEventually (ivank)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1599591 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"6e641a205736149a49b7aee167b6d3a78fbb5a87","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/6e641a205736149a49b7aee167b6d3a78fbb5a87"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/92ba8245cd7f4915c75cb0cf2e5b2a1f5afea26a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/92ba8245cd7f4915c75cb0cf2e5b2a1f5afea26a","html_url":"https://github.com/apache/bookkeeper/commit/92ba8245cd7f4915c75cb0cf2e5b2a1f5afea26a","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/92ba8245cd7f4915c75cb0cf2e5b2a1f5afea26a/comments","author":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"committer":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"parents":[{"sha":"832ef2d033a6504e083d365bd73c7ba3c3d79a1e","url":"https://api.github.com/repos/apache/bookkeeper/commits/832ef2d033a6504e083d365bd73c7ba3c3d79a1e","html_url":"https://github.com/apache/bookkeeper/commit/832ef2d033a6504e083d365bd73c7ba3c3d79a1e"}],"stats":{"total":26,"additions":18,"deletions":8},"files":[{"sha":"17f16889c943503f17520ba84b24c17bb1991011","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/92ba8245cd7f4915c75cb0cf2e5b2a1f5afea26a/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/92ba8245cd7f4915c75cb0cf2e5b2a1f5afea26a/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=92ba8245cd7f4915c75cb0cf2e5b2a1f5afea26a","patch":"@@ -42,6 +42,8 @@ Release 4.2.3 - 2013-12-04\n \n         BOOKKEEPER-725: AutoRecoveryMain should exit with error code if deathwatcher finds dead thread (ivank)\n \n+        BOOKKEEPER-750: Flake in BookieAutoRecoveryTest#testEmptyLedgerLosesQuorumEventually (ivank)\n+\n     IMPROVEMENT:\n \n         BOOKKEEPER-747: Implement register/unregister LedgerMetadataListener in MSLedgerManagerFactory (fpj via sijie)"},{"sha":"2c62996d37fff8c2673b5354438ede62e3e3693d","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/Auditor.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/apache/bookkeeper/blob/92ba8245cd7f4915c75cb0cf2e5b2a1f5afea26a/bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/Auditor.java","raw_url":"https://github.com/apache/bookkeeper/raw/92ba8245cd7f4915c75cb0cf2e5b2a1f5afea26a/bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/Auditor.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/Auditor.java?ref=92ba8245cd7f4915c75cb0cf2e5b2a1f5afea26a","patch":"@@ -89,10 +89,13 @@\n     private LedgerUnderreplicationManager ledgerUnderreplicationManager;\n     private final ScheduledExecutorService executor;\n     private List<String> knownBookies = new ArrayList<String>();\n+    private final String bookieIdentifier;\n \n     public Auditor(final String bookieIdentifier, ServerConfiguration conf,\n                    ZooKeeper zkc) throws UnavailableException {\n         this.conf = conf;\n+        this.bookieIdentifier = bookieIdentifier;\n+\n         initialize(conf, zkc);\n \n         executor = Executors.newSingleThreadScheduledExecutor(new ThreadFactory() {\n@@ -196,7 +199,7 @@ public void run() {\n     }\n \n     public void start() {\n-        LOG.info(\"I'm starting as Auditor Bookie\");\n+        LOG.info(\"I'm starting as Auditor Bookie. ID: {}\", bookieIdentifier);\n         // on startup watching available bookie and based on the\n         // available bookies determining the bookie failures.\n         synchronized (this) {"},{"sha":"4c34c53af3d64f05e7dba5aee3b80243c5909f34","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/replication/BookieAutoRecoveryTest.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/bookkeeper/blob/92ba8245cd7f4915c75cb0cf2e5b2a1f5afea26a/bookkeeper-server/src/test/java/org/apache/bookkeeper/replication/BookieAutoRecoveryTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/92ba8245cd7f4915c75cb0cf2e5b2a1f5afea26a/bookkeeper-server/src/test/java/org/apache/bookkeeper/replication/BookieAutoRecoveryTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/replication/BookieAutoRecoveryTest.java?ref=92ba8245cd7f4915c75cb0cf2e5b2a1f5afea26a","patch":"@@ -359,7 +359,7 @@ public void testEmptyLedgerLosesQuorumEventually() throws Exception {\n                  LedgerHandleAdapter.getLedgerMetadata(lh).getEnsembles().get(0L));\n         killBookie(replicaToKill);\n \n-        getAuditor().submitAuditTask().get(); // ensure auditor runs\n+        getAuditor(10, TimeUnit.SECONDS).submitAuditTask().get(); // ensure auditor runs\n \n         assertTrue(\"Should be marked as underreplicated\", latch.await(5, TimeUnit.SECONDS));\n         latch = new CountDownLatch(1);\n@@ -374,7 +374,7 @@ public void testEmptyLedgerLosesQuorumEventually() throws Exception {\n                  LedgerHandleAdapter.getLedgerMetadata(lh).getEnsembles().get(0L));\n         killBookie(replicaToKill);\n \n-        getAuditor().submitAuditTask().get(); // ensure auditor runs\n+        getAuditor(10, TimeUnit.SECONDS).submitAuditTask().get(); // ensure auditor runs\n \n         assertTrue(\"Should be marked as underreplicated\", latch.await(5, TimeUnit.SECONDS));\n         latch = new CountDownLatch(1);"},{"sha":"a6c3307f49daff62357d35f665a2de96c0cf91d7","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookKeeperClusterTestCase.java","status":"modified","additions":10,"deletions":5,"changes":15,"blob_url":"https://github.com/apache/bookkeeper/blob/92ba8245cd7f4915c75cb0cf2e5b2a1f5afea26a/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookKeeperClusterTestCase.java","raw_url":"https://github.com/apache/bookkeeper/raw/92ba8245cd7f4915c75cb0cf2e5b2a1f5afea26a/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookKeeperClusterTestCase.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookKeeperClusterTestCase.java?ref=92ba8245cd7f4915c75cb0cf2e5b2a1f5afea26a","patch":"@@ -31,6 +31,7 @@\n import java.util.Map;\n import java.util.Map.Entry;\n import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n \n import junit.framework.TestCase;\n \n@@ -531,12 +532,16 @@ public void stopReplicationService() throws Exception {\n         }\n     }\n \n-    public Auditor getAuditor() throws Exception {\n-        for (AutoRecoveryMain p : autoRecoveryProcesses.values()) {\n-            Auditor a = p.getAuditor();\n-            if (a != null) {\n-                return a;\n+    public Auditor getAuditor(int timeout, TimeUnit unit) throws Exception {\n+        final long timeoutAt = System.nanoTime() + TimeUnit.NANOSECONDS.convert(timeout, unit);\n+        while (System.nanoTime() < timeoutAt) {\n+            for (AutoRecoveryMain p : autoRecoveryProcesses.values()) {\n+                Auditor a = p.getAuditor();\n+                if (a != null) {\n+                    return a;\n+                }\n             }\n+            Thread.sleep(100);\n         }\n         throw new Exception(\"No auditor found\");\n     }"}]}

