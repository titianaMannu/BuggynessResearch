{"sha":"9ce71edb0f826ef3628b94b739576eae2b8e01cd","node_id":"MDY6Q29tbWl0MTU3NTk1Njo5Y2U3MWVkYjBmODI2ZWYzNjI4Yjk0YjczOTU3NmVhZTJiOGUwMWNk","commit":{"author":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2014-06-10T10:04:57Z"},"committer":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2014-06-10T10:04:57Z"},"message":"BookKeeper 4.2.3 release.\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/tags/release-4.2.3@1601594 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"cb1aebdb310ab79939380bd1caf9dbee1ec772ef","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/cb1aebdb310ab79939380bd1caf9dbee1ec772ef"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/9ce71edb0f826ef3628b94b739576eae2b8e01cd","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/9ce71edb0f826ef3628b94b739576eae2b8e01cd","html_url":"https://github.com/apache/bookkeeper/commit/9ce71edb0f826ef3628b94b739576eae2b8e01cd","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/9ce71edb0f826ef3628b94b739576eae2b8e01cd/comments","author":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"committer":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"parents":[{"sha":"05d988637c3260f97b005b9707e6e971203eedd3","url":"https://api.github.com/repos/apache/bookkeeper/commits/05d988637c3260f97b005b9707e6e971203eedd3","html_url":"https://github.com/apache/bookkeeper/commit/05d988637c3260f97b005b9707e6e971203eedd3"},{"sha":"ba80818c36236bae147a45c3ea0587e81837a3ef","url":"https://api.github.com/repos/apache/bookkeeper/commits/ba80818c36236bae147a45c3ea0587e81837a3ef","html_url":"https://github.com/apache/bookkeeper/commit/ba80818c36236bae147a45c3ea0587e81837a3ef"}],"stats":{"total":156,"additions":118,"deletions":38},"files":[{"sha":"71e6ea53eb1d306d50c0d79b04c79785b295b723","filename":"CHANGES.txt","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/apache/bookkeeper/blob/9ce71edb0f826ef3628b94b739576eae2b8e01cd/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/9ce71edb0f826ef3628b94b739576eae2b8e01cd/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=9ce71edb0f826ef3628b94b739576eae2b8e01cd","patch":"@@ -4,6 +4,12 @@ Release 4.2.3 - 2013-12-04\n \n     BUGFIXES:\n \n+     BOOKKEEPER-766: Update notice.txt files to include 2014 (ivank via fpj)\n+\n+     BOOKKEEPER-767: Allow loopback in tests (ivank via fpj)\n+\n+     BOOKKEEPER-765: bookkeeper script should fall back to java in path if JAVA_HOME is not set (ivank)\n+\n       bookkeeper-server:\n \n         BOOKKEEPER-711: bookkeeper-daemon.sh will not remove the pid file one successful stop (vinay via sijie)"},{"sha":"5a6871a22146047413d2620d53e2578aa49b8aa3","filename":"NOTICE","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/9ce71edb0f826ef3628b94b739576eae2b8e01cd/NOTICE","raw_url":"https://github.com/apache/bookkeeper/raw/9ce71edb0f826ef3628b94b739576eae2b8e01cd/NOTICE","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/NOTICE?ref=9ce71edb0f826ef3628b94b739576eae2b8e01cd","patch":"@@ -1,5 +1,5 @@\n Apache BookKeeper\n-Copyright 2011-2013 The Apache Software Foundation\n+Copyright 2011-2014 The Apache Software Foundation\n \n This product includes software developed at\n The Apache Software Foundation (http://www.apache.org/)."},{"sha":"7ce92ea6eb39075f349232b10d9aac9837538747","filename":"bookkeeper-server/bin/bookkeeper","status":"modified","additions":13,"deletions":7,"changes":20,"blob_url":"https://github.com/apache/bookkeeper/blob/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/bin/bookkeeper","raw_url":"https://github.com/apache/bookkeeper/raw/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/bin/bookkeeper","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/bin/bookkeeper?ref=9ce71edb0f826ef3628b94b739576eae2b8e01cd","patch":"@@ -20,13 +20,6 @@\n # * limitations under the License.\n # */\n \n-# Check for the Java\n-if [[ -z $JAVA_HOME ]]; then\n-   echo \"Error: JAVA_HOME is not set\" 1>&2\n-   exit 1\n-fi\n-JAVA=$JAVA_HOME/bin/java\n-\n # check if net.ipv6.bindv6only is set to 1\n bindv6only=$(/sbin/sysctl -n net.ipv6.bindv6only 2> /dev/null)\n if [ -n \"$bindv6only\" ] && [ \"$bindv6only\" -eq \"1\" ]\n@@ -64,6 +57,19 @@ DEFAULT_LOG_CONF=$BK_HOME/conf/log4j.properties\n \n source $BK_HOME/conf/bkenv.sh\n \n+# Check for the java to use\n+if [[ -z $JAVA_HOME ]]; then\n+    JAVA=$(which java)\n+    if [ $? = 0 ]; then\n+        echo \"JAVA_HOME not set, using java from PATH. ($JAVA)\"\n+    else\n+        echo \"Error: JAVA_HOME not set, and no java executable found in $PATH.\" 1>&2\n+        exit 1\n+    fi\n+else\n+    JAVA=$JAVA_HOME/bin/java\n+fi\n+\n # exclude tests jar\n RELEASE_JAR=`ls $BK_HOME/bookkeeper-server-*.jar 2> /dev/null | grep -v tests | tail -1` \n if [ $? == 0 ]; then"},{"sha":"1fed8dce3d6beb69e3731efd057b21c0580ff9bc","filename":"bookkeeper-server/conf/bkenv.sh","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/apache/bookkeeper/blob/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/conf/bkenv.sh","raw_url":"https://github.com/apache/bookkeeper/raw/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/conf/bkenv.sh","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/conf/bkenv.sh?ref=9ce71edb0f826ef3628b94b739576eae2b8e01cd","patch":"@@ -20,6 +20,9 @@\n # * limitations under the License.\n # */\n \n+# Set JAVA_HOME here to override the environment setting\n+# JAVA_HOME=\n+\n # default settings for starting bookkeeper\n \n # Configuration file of settings used in bookie server\n@@ -41,4 +44,4 @@\n #BOOKIE_PID_DIR=\n \n #Wait time before forcefully kill the Bookie server instance, if the stop is not successful\n-#BOOKIE_STOP_TIMEOUT=\n\\ No newline at end of file\n+#BOOKIE_STOP_TIMEOUT="},{"sha":"7e15b27c439827ecd2a6a965e60be087b150976f","filename":"bookkeeper-server/src/main/resources/NOTICE.bin.txt","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/main/resources/NOTICE.bin.txt","raw_url":"https://github.com/apache/bookkeeper/raw/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/main/resources/NOTICE.bin.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/resources/NOTICE.bin.txt?ref=9ce71edb0f826ef3628b94b739576eae2b8e01cd","patch":"@@ -1,5 +1,5 @@\n Apache BookKeeper\n-Copyright 2011-2013 The Apache Software Foundation\n+Copyright 2011-2014 The Apache Software Foundation\n \n Licensed under the Apache License, Version 2.0 (the\n \"License\"); you may not use this file except in compliance"},{"sha":"d05bf49b6e0fd0da958afda23cab2ec081bd8caf","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieInitializationTest.java","status":"modified","additions":15,"deletions":12,"changes":27,"blob_url":"https://github.com/apache/bookkeeper/blob/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieInitializationTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieInitializationTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieInitializationTest.java?ref=9ce71edb0f826ef3628b94b739576eae2b8e01cd","patch":"@@ -97,8 +97,8 @@ public void testExitCodeZK_REG_FAIL() throws Exception {\n         tmpDir.mkdir();\n \n         final ServerConfiguration conf = new ServerConfiguration()\n-                .setZkServers(null).setJournalDirName(tmpDir.getPath())\n-                .setLedgerDirNames(new String[] { tmpDir.getPath() });\n+            .setZkServers(null).setJournalDirName(tmpDir.getPath())\n+            .setAllowLoopback(true).setLedgerDirNames(new String[] { tmpDir.getPath() });\n \n         // simulating ZooKeeper exception by assigning a closed zk client to bk\n         BookieServer bkServer = new BookieServer(conf) {\n@@ -130,8 +130,8 @@ public void testBookieRegistration() throws Exception {\n         tmpDir.mkdir();\n \n         final ServerConfiguration conf = new ServerConfiguration()\n-                .setZkServers(null).setJournalDirName(tmpDir.getPath())\n-                .setLedgerDirNames(new String[] { tmpDir.getPath() });\n+            .setZkServers(null).setJournalDirName(tmpDir.getPath())\n+            .setAllowLoopback(true).setLedgerDirNames(new String[] { tmpDir.getPath() });\n \n         final String bkRegPath = conf.getZkAvailableBookiesPath() + \"/\"\n                 + InetAddress.getLocalHost().getHostAddress() + \":\"\n@@ -196,8 +196,9 @@ public void testRegNodeExistsAfterSessionTimeOut() throws Exception {\n         tmpDir.mkdir();\n \n         ServerConfiguration conf = new ServerConfiguration().setZkServers(null)\n-                .setJournalDirName(tmpDir.getPath()).setLedgerDirNames(\n-                        new String[] { tmpDir.getPath() });\n+            .setAllowLoopback(true)\n+            .setJournalDirName(tmpDir.getPath())\n+            .setLedgerDirNames(new String[] { tmpDir.getPath() });\n \n         String bkRegPath = conf.getZkAvailableBookiesPath() + \"/\"\n                 + InetAddress.getLocalHost().getHostAddress() + \":\"\n@@ -252,9 +253,10 @@ public void testDuplicateBookieServerStartup() throws Exception {\n \n         ServerConfiguration conf = new ServerConfiguration();\n         int port = 12555;\n-        conf.setZkServers(null).setBookiePort(port).setJournalDirName(\n-                tmpDir.getPath()).setLedgerDirNames(\n-                new String[] { tmpDir.getPath() });\n+        conf.setZkServers(null).setBookiePort(port)\n+            .setAllowLoopback(true)\n+            .setJournalDirName(tmpDir.getPath())\n+            .setLedgerDirNames(new String[] { tmpDir.getPath() });\n         BookieServer bs1 = new BookieServer(conf);\n         bs1.start();\n \n@@ -281,9 +283,9 @@ public void testStartBookieWithoutZKServer() throws Exception {\n         tmpDir.mkdir();\n \n         final ServerConfiguration conf = new ServerConfiguration()\n-                .setZkServers(zkutil.getZooKeeperConnectString())\n-                .setZkTimeout(5000).setJournalDirName(tmpDir.getPath())\n-                .setLedgerDirNames(new String[] { tmpDir.getPath() });\n+            .setZkServers(zkutil.getZooKeeperConnectString())\n+            .setZkTimeout(5000).setJournalDirName(tmpDir.getPath())\n+            .setAllowLoopback(true).setLedgerDirNames(new String[] { tmpDir.getPath() });\n         try {\n             new Bookie(conf);\n             fail(\"Should throw ConnectionLossException as ZKServer is not running!\");\n@@ -308,6 +310,7 @@ public void testStartBookieWithoutZKInitialized() throws Exception {\n         final ServerConfiguration conf = new ServerConfiguration()\n             .setZkServers(zkutil.getZooKeeperConnectString())\n             .setZkTimeout(5000).setJournalDirName(tmpDir.getPath())\n+            .setAllowLoopback(true)\n             .setLedgerDirNames(new String[] { tmpDir.getPath() });\n         conf.setZkLedgersRootPath(ZK_ROOT);\n         try {"},{"sha":"71482bc337888c8493f87347f290a52697215397","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieJournalTest.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/apache/bookkeeper/blob/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieJournalTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieJournalTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieJournalTest.java?ref=9ce71edb0f826ef3628b94b739576eae2b8e01cd","patch":"@@ -216,6 +216,7 @@ public void testPreV2Journal() throws Exception {\n         writeIndexFileForLedger(Bookie.getCurrentDirectory(ledgerDir), 1, \"testPasswd\".getBytes());\n \n         ServerConfiguration conf = new ServerConfiguration()\n+            .setAllowLoopback(true)\n             .setZkServers(null)\n             .setJournalDirName(journalDir.getPath())\n             .setLedgerDirNames(new String[] { ledgerDir.getPath() });\n@@ -254,6 +255,7 @@ public void testAllJunkJournal() throws Exception {\n         writeJunkJournal(Bookie.getCurrentDirectory(journalDir));\n \n         ServerConfiguration conf = new ServerConfiguration()\n+            .setAllowLoopback(true)\n             .setZkServers(null)\n             .setJournalDirName(journalDir.getPath())\n             .setLedgerDirNames(new String[] { ledgerDir.getPath() });\n@@ -292,6 +294,7 @@ public void testEmptyJournal() throws Exception {\n         writePreV2Journal(Bookie.getCurrentDirectory(journalDir), 0);\n \n         ServerConfiguration conf = new ServerConfiguration()\n+            .setAllowLoopback(true)\n             .setZkServers(null)\n             .setJournalDirName(journalDir.getPath())\n             .setLedgerDirNames(new String[] { ledgerDir.getPath() });\n@@ -318,6 +321,7 @@ public void testHeaderOnlyJournal() throws Exception {\n         writePostV2Journal(Bookie.getCurrentDirectory(journalDir), 0);\n \n         ServerConfiguration conf = new ServerConfiguration()\n+            .setAllowLoopback(true)\n             .setZkServers(null)\n             .setJournalDirName(journalDir.getPath())\n             .setLedgerDirNames(new String[] { ledgerDir.getPath() });\n@@ -348,6 +352,7 @@ public void testJunkEndedJournal() throws Exception {\n         writeIndexFileForLedger(ledgerDir, 1, \"testPasswd\".getBytes());\n \n         ServerConfiguration conf = new ServerConfiguration()\n+            .setAllowLoopback(true)\n             .setZkServers(null)\n             .setJournalDirName(journalDir.getPath())\n             .setLedgerDirNames(new String[] { ledgerDir.getPath() });\n@@ -392,6 +397,7 @@ public void testTruncatedInLenJournal() throws Exception {\n                                 1, \"testPasswd\".getBytes());\n \n         ServerConfiguration conf = new ServerConfiguration()\n+            .setAllowLoopback(true)\n             .setZkServers(null)\n             .setJournalDirName(journalDir.getPath())\n             .setLedgerDirNames(new String[] { ledgerDir.getPath() });\n@@ -440,6 +446,7 @@ public void testTruncatedInEntryJournal() throws Exception {\n                                 1, \"testPasswd\".getBytes());\n \n         ServerConfiguration conf = new ServerConfiguration()\n+            .setAllowLoopback(true)\n             .setZkServers(null)\n             .setJournalDirName(journalDir.getPath())\n             .setLedgerDirNames(new String[] { ledgerDir.getPath() });\n@@ -506,6 +513,7 @@ private void testPartialFileInfoPreV3Journal(boolean truncateMasterKey)\n                                        1, \"testPasswd\".getBytes(), truncateMasterKey);\n \n         ServerConfiguration conf = new ServerConfiguration()\n+            .setAllowLoopback(true)\n             .setZkServers(null)\n             .setJournalDirName(journalDir.getPath())\n             .setLedgerDirNames(new String[] { ledgerDir.getPath() });\n@@ -568,6 +576,7 @@ private void testPartialFileInfoPostV3Journal(boolean truncateMasterKey)\n                                        truncateMasterKey);\n \n         ServerConfiguration conf = new ServerConfiguration()\n+            .setAllowLoopback(true)\n             .setZkServers(null)\n             .setJournalDirName(journalDir.getPath())\n             .setLedgerDirNames(new String[] { ledgerDir.getPath() });"},{"sha":"e84183c06bf6fe8cf06a7859d3c4f8822536d602","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/CompactionTest.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/CompactionTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/CompactionTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/CompactionTest.java?ref=9ce71edb0f826ef3628b94b739576eae2b8e01cd","patch":"@@ -317,7 +317,7 @@ public void testCompactionSmallEntryLogs() throws Exception {\n     @Test(timeout=60000)\n     public void testCompactionSafety() throws Exception {\n         tearDown(); // I dont want the test infrastructure\n-        ServerConfiguration conf = new ServerConfiguration();\n+        ServerConfiguration conf = new ServerConfiguration().setAllowLoopback(true);\n         final Set<Long> ledgers = Collections.newSetFromMap(new ConcurrentHashMap<Long, Boolean>());\n         LedgerManager manager = new LedgerManager() {\n                 @Override"},{"sha":"5cdb57638385e8428f56730926aaf3f272d5eddf","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/CookieTest.java","status":"modified","additions":16,"deletions":4,"changes":20,"blob_url":"https://github.com/apache/bookkeeper/blob/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/CookieTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/CookieTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/CookieTest.java?ref=9ce71edb0f826ef3628b94b739576eae2b8e01cd","patch":"@@ -78,6 +78,7 @@ public void testCleanStart() throws Exception {\n         ServerConfiguration conf = new ServerConfiguration()\n             .setZkServers(zkutil.getZooKeeperConnectString())\n             .setJournalDirName(newDirectory(false))\n+            .setAllowLoopback(true)\n             .setLedgerDirNames(new String[] { newDirectory(false) })\n             .setBookiePort(bookiePort);\n         try {\n@@ -95,6 +96,7 @@ public void testCleanStart() throws Exception {\n     @Test(timeout=60000)\n     public void testBadJournalCookie() throws Exception {\n         ServerConfiguration conf1 = new ServerConfiguration()\n+            .setAllowLoopback(true)\n             .setJournalDirName(newDirectory())\n             .setLedgerDirNames(new String[] { newDirectory() })\n             .setBookiePort(bookiePort);\n@@ -104,6 +106,7 @@ public void testBadJournalCookie() throws Exception {\n         String journalDir = newDirectory();\n         String ledgerDir = newDirectory();\n         ServerConfiguration conf2 = new ServerConfiguration()\n+            .setAllowLoopback(true)\n             .setZkServers(zkutil.getZooKeeperConnectString())\n             .setJournalDirName(journalDir)\n             .setLedgerDirNames(new String[] { ledgerDir })\n@@ -131,6 +134,7 @@ public void testDirectoryMissing() throws Exception {\n             newDirectory(), newDirectory(), newDirectory() };\n         String journalDir = newDirectory();\n         ServerConfiguration conf = new ServerConfiguration()\n+            .setAllowLoopback(true)\n             .setZkServers(zkutil.getZooKeeperConnectString())\n             .setJournalDirName(journalDir)\n             .setLedgerDirNames(ledgerDirs)\n@@ -172,6 +176,7 @@ public void testDirectoryAdded() throws Exception {\n         String ledgerDir0 = newDirectory();\n         String journalDir = newDirectory();\n         ServerConfiguration conf = new ServerConfiguration()\n+            .setAllowLoopback(true)\n             .setZkServers(zkutil.getZooKeeperConnectString())\n             .setJournalDirName(journalDir)\n             .setLedgerDirNames(new String[] { ledgerDir0 })\n@@ -204,6 +209,7 @@ public void testDirectoryCleared() throws Exception {\n         String ledgerDir0 = newDirectory();\n         String journalDir = newDirectory();\n         ServerConfiguration conf = new ServerConfiguration()\n+            .setAllowLoopback(true)\n             .setZkServers(zkutil.getZooKeeperConnectString())\n             .setJournalDirName(journalDir)\n             .setLedgerDirNames(new String[] { ledgerDir0 , newDirectory() })\n@@ -229,6 +235,7 @@ public void testDirectoryCleared() throws Exception {\n     @Test(timeout=60000)\n     public void testBookiePortChanged() throws Exception {\n         ServerConfiguration conf = new ServerConfiguration()\n+            .setAllowLoopback(true)\n             .setZkServers(zkutil.getZooKeeperConnectString())\n             .setJournalDirName(newDirectory())\n             .setLedgerDirNames(new String[] { newDirectory() , newDirectory() })\n@@ -255,6 +262,7 @@ public void testBookiePortChanged() throws Exception {\n     @Test(timeout=60000)\n     public void testNewBookieStartingWithAnotherBookiesPort() throws Exception {\n         ServerConfiguration conf = new ServerConfiguration()\n+            .setAllowLoopback(true)\n             .setZkServers(zkutil.getZooKeeperConnectString())\n             .setJournalDirName(newDirectory())\n             .setLedgerDirNames(new String[] { newDirectory() , newDirectory() })\n@@ -264,6 +272,7 @@ public void testNewBookieStartingWithAnotherBookiesPort() throws Exception {\n         b.shutdown();\n \n         conf = new ServerConfiguration()\n+            .setAllowLoopback(true)\n             .setZkServers(zkutil.getZooKeeperConnectString())\n             .setJournalDirName(newDirectory())\n             .setLedgerDirNames(new String[] { newDirectory() , newDirectory() })\n@@ -289,10 +298,11 @@ public void testVerifyCookieWithFormat() throws Exception {\n         BookKeeperAdmin.format(adminConf, false, true);\n \n         ServerConfiguration bookieConf = new ServerConfiguration()\n-                .setZkServers(zkutil.getZooKeeperConnectString())\n-                .setJournalDirName(newDirectory(false))\n-                .setLedgerDirNames(new String[] { newDirectory(false) })\n-                .setBookiePort(bookiePort);\n+            .setAllowLoopback(true)\n+            .setZkServers(zkutil.getZooKeeperConnectString())\n+            .setJournalDirName(newDirectory(false))\n+            .setLedgerDirNames(new String[] { newDirectory(false) })\n+            .setBookiePort(bookiePort);\n         // Bookie should start successfully for fresh env.\n         new Bookie(bookieConf);\n \n@@ -320,6 +330,7 @@ public void testVerifyCookieWithFormat() throws Exception {\n     @Test(timeout=60000)\n     public void testV2data() throws Exception {\n         ServerConfiguration conf = new ServerConfiguration()\n+            .setAllowLoopback(true)\n             .setZkServers(zkutil.getZooKeeperConnectString())\n             .setJournalDirName(newV2JournalDirectory())\n             .setLedgerDirNames(new String[] { newV2LedgerDirectory() })\n@@ -340,6 +351,7 @@ public void testV2data() throws Exception {\n     @Test(timeout=60000)\n     public void testV1data() throws Exception {\n         ServerConfiguration conf = new ServerConfiguration()\n+            .setAllowLoopback(true)\n             .setZkServers(zkutil.getZooKeeperConnectString())\n             .setJournalDirName(newV1JournalDirectory())\n             .setLedgerDirNames(new String[] { newV1LedgerDirectory() })"},{"sha":"33686f10517cdf90a3728c31e6e6dff0b6bd20a4","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/CreateNewLogTest.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/bookkeeper/blob/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/CreateNewLogTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/CreateNewLogTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/CreateNewLogTest.java?ref=9ce71edb0f826ef3628b94b739576eae2b8e01cd","patch":"@@ -82,6 +82,7 @@ public void testCreateNewLog() throws Exception {\n         // Creating a new configuration with a number of \n         // ledger directories.\n         conf.setLedgerDirNames(ledgerDirs);\n+        conf.setAllowLoopback(true);\n         LedgerDirsManager ledgerDirsManager = new LedgerDirsManager(conf);\n         EntryLogger el = new EntryLogger(conf, ledgerDirsManager);\n         \n@@ -99,4 +100,4 @@ public void testCreateNewLog() throws Exception {\n         Assert.assertTrue(\"Wrong log id\", el.getCurrentLogId() > 1);\n     }\n \n-}\n\\ No newline at end of file\n+}"},{"sha":"35f57a69c7ec4d362132273169dc46b4c19d9329","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/EntryLogTest.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/apache/bookkeeper/blob/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/EntryLogTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/EntryLogTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/EntryLogTest.java?ref=9ce71edb0f826ef3628b94b739576eae2b8e01cd","patch":"@@ -56,6 +56,7 @@ public void testCorruptEntryLog() throws Exception {\n \n         int gcWaitTime = 1000;\n         ServerConfiguration conf = new ServerConfiguration();\n+        conf.setAllowLoopback(true);\n         conf.setGcWaitTime(gcWaitTime);\n         conf.setLedgerDirNames(new String[] {tmpDir.toString()});\n         Bookie bookie = new Bookie(conf);\n@@ -107,6 +108,7 @@ public void testMissingLogId() throws Exception {\n         Bookie.checkDirectoryStructure(curDir);\n \n         ServerConfiguration conf = new ServerConfiguration();\n+        conf.setAllowLoopback(true);\n         conf.setLedgerDirNames(new String[] {tmpDir.toString()});\n         Bookie bookie = new Bookie(conf);\n         // create some entries\n@@ -168,6 +170,7 @@ public void testEntryLoggerShouldThrowFNFEIfDirectoriesDoesNotExist()\n         File tmpDir = File.createTempFile(\"bkTest\", \".dir\");\n         tmpDir.delete();\n         ServerConfiguration conf = new ServerConfiguration();\n+        conf.setAllowLoopback(true);\n         conf.setLedgerDirNames(new String[] { tmpDir.toString() });\n         EntryLogger entryLogger = null;\n         try {\n@@ -193,6 +196,7 @@ public void testAddEntryFailureOnDiskFull() throws Exception {\n         File ledgerDir2 = File.createTempFile(\"bkTest\", \".dir\");\n         ledgerDir2.delete();\n         ServerConfiguration conf = new ServerConfiguration();\n+        conf.setAllowLoopback(true);\n         conf.setLedgerDirNames(new String[] { ledgerDir1.getAbsolutePath(),\n                 ledgerDir2.getAbsolutePath() });\n         Bookie bookie = new Bookie(conf);"},{"sha":"0ed1af75bb0792d843019876a67d3013953dbb61","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/LedgerCacheTest.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/apache/bookkeeper/blob/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/LedgerCacheTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/LedgerCacheTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/LedgerCacheTest.java?ref=9ce71edb0f826ef3628b94b739576eae2b8e01cd","patch":"@@ -73,6 +73,7 @@ public void setUp() throws Exception {\n \n         conf = new ServerConfiguration();\n         conf.setZkServers(null);\n+        conf.setAllowLoopback(true);\n         conf.setJournalDirName(txnDir.getPath());\n         conf.setLedgerDirNames(new String[] { ledgerDir.getPath() });\n         bookie = new Bookie(conf);\n@@ -214,6 +215,8 @@ public void testPageEvictionWhileDeleteLedgerInProgress() throws Exception {\n         conf.setLedgerDirNames(new String[] { ledgerDir1.getAbsolutePath(),\n                 ledgerDir2.getAbsolutePath() });\n         conf.setOpenFileLimit(1);\n+        conf.setAllowLoopback(true);\n+\n         Bookie bookie = new Bookie(conf);\n         InterleavedLedgerStorage ledgerStorage = ((InterleavedLedgerStorage) bookie.ledgerStorage);\n         final LedgerCacheImpl ledgerCache = (LedgerCacheImpl) ledgerStorage.ledgerCache;\n@@ -306,7 +309,7 @@ public void testLedgerCacheFlushFailureOnDiskFull() throws Exception {\n         ledgerDir1.delete();\n         File ledgerDir2 = File.createTempFile(\"bkTest\", \".dir\");\n         ledgerDir2.delete();\n-        ServerConfiguration conf = new ServerConfiguration();\n+        ServerConfiguration conf = new ServerConfiguration().setAllowLoopback(true);\n         conf.setLedgerDirNames(new String[] { ledgerDir1.getAbsolutePath(), ledgerDir2.getAbsolutePath() });\n \n         Bookie bookie = new Bookie(conf);\n@@ -364,6 +367,7 @@ public void testIndexPageEvictionWriteOrder() throws Exception {\n \n         ServerConfiguration conf = new ServerConfiguration()\n             .setZkServers(null)\n+            .setAllowLoopback(true)\n             .setJournalDirName(journalDir.getPath())\n             .setLedgerDirNames(new String[] { ledgerDir.getPath() })\n             .setFlushInterval(1000)\n@@ -377,6 +381,7 @@ public void testIndexPageEvictionWriteOrder() throws Exception {\n         }\n \n         conf = new ServerConfiguration()\n+            .setAllowLoopback(true)\n             .setZkServers(null)\n             .setJournalDirName(journalDir.getPath())\n             .setLedgerDirNames(new String[] { ledgerDir.getPath() });"},{"sha":"d4327c251cd1dbe106ef34877f2ec02daf9ae6ff","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/TestLedgerDirsManager.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/bookkeeper/blob/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/TestLedgerDirsManager.java","raw_url":"https://github.com/apache/bookkeeper/raw/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/TestLedgerDirsManager.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/TestLedgerDirsManager.java?ref=9ce71edb0f826ef3628b94b739576eae2b8e01cd","patch":"@@ -35,7 +35,7 @@\n public class TestLedgerDirsManager extends TestCase {\n     static Logger LOG = LoggerFactory.getLogger(TestLedgerDirsManager.class);\n \n-    ServerConfiguration conf = new ServerConfiguration();\n+    ServerConfiguration conf;\n     File curDir;\n     LedgerDirsManager dirsManager;\n \n@@ -48,6 +48,7 @@ public void setUp() throws Exception {\n         Bookie.checkDirectoryStructure(curDir);\n \n         ServerConfiguration conf = new ServerConfiguration();\n+        conf.setAllowLoopback(true);\n         conf.setLedgerDirNames(new String[] {tmpDir.toString()});\n \n         dirsManager = new LedgerDirsManager(conf);"},{"sha":"f58d5ea97248a9d5025e10101697bfa87935a0f3","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/UpgradeTest.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/UpgradeTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/UpgradeTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/UpgradeTest.java?ref=9ce71edb0f826ef3628b94b739576eae2b8e01cd","patch":"@@ -165,6 +165,7 @@ static String newV2LedgerDirectory() throws Exception {\n \n     private static void testUpgradeProceedure(String zkServers, String journalDir, String ledgerDir) throws Exception {\n         ServerConfiguration conf = new ServerConfiguration()\n+            .setAllowLoopback(true)\n             .setZkServers(zkServers)\n             .setJournalDirName(journalDir)\n             .setLedgerDirNames(new String[] { ledgerDir })\n@@ -222,6 +223,7 @@ public void testUpgradeCurrent() throws Exception {\n         testUpgradeProceedure(zkutil.getZooKeeperConnectString(), journalDir, ledgerDir);\n         // Upgrade again\n         ServerConfiguration conf = new ServerConfiguration()\n+            .setAllowLoopback(true)\n             .setZkServers(zkutil.getZooKeeperConnectString())\n             .setJournalDirName(journalDir)\n             .setLedgerDirNames(new String[] { ledgerDir })"},{"sha":"62548c6756b394bdd19da8c127a43f3aa3237cc0","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/replication/TestLedgerUnderreplicationManager.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/apache/bookkeeper/blob/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/test/java/org/apache/bookkeeper/replication/TestLedgerUnderreplicationManager.java","raw_url":"https://github.com/apache/bookkeeper/raw/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/test/java/org/apache/bookkeeper/replication/TestLedgerUnderreplicationManager.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/replication/TestLedgerUnderreplicationManager.java?ref=9ce71edb0f826ef3628b94b739576eae2b8e01cd","patch":"@@ -92,7 +92,9 @@ public void setupZooKeeper() throws Exception {\n         zkUtil = new ZooKeeperUtil();\n         zkUtil.startServer();\n \n-        conf = new ServerConfiguration().setZkServers(zkUtil.getZooKeeperConnectString());\n+        conf = new ServerConfiguration()\n+            .setAllowLoopback(true)\n+            .setZkServers(zkUtil.getZooKeeperConnectString());\n \n         executor = Executors.newCachedThreadPool();\n "},{"sha":"670d42c96f5a3c11474f39143d049bc2ed3374b5","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieClientTest.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/bookkeeper/blob/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieClientTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieClientTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieClientTest.java?ref=9ce71edb0f826ef3628b94b739576eae2b8e01cd","patch":"@@ -53,7 +53,7 @@\n     public int port = 13645;\n     public ClientSocketChannelFactory channelFactory;\n     public OrderedSafeExecutor executor;\n-    ServerConfiguration conf = new ServerConfiguration();\n+    ServerConfiguration conf;\n \n     @Override\n     public void setUp() throws Exception {\n@@ -67,6 +67,7 @@ public void setUp() throws Exception {\n         ServerConfiguration conf = new ServerConfiguration();\n         conf.setZkServers(null).setBookiePort(port)\n             .setJournalDirName(tmpDir.getPath())\n+            .setAllowLoopback(true)\n             .setLedgerDirNames(new String[] { tmpDir.getPath() });\n         bs = new BookieServer(conf);\n         bs.start();"},{"sha":"54a85bcb8e6a37293f4710f15249b35c5f305267","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieJournalRollingTest.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieJournalRollingTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieJournalRollingTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieJournalRollingTest.java?ref=9ce71edb0f826ef3628b94b739576eae2b8e01cd","patch":"@@ -201,6 +201,7 @@ public void testJournalRollingWithoutSyncup() throws Exception {\n \n         // set flush interval to a large value\n         ServerConfiguration newConf = new ServerConfiguration();\n+        newConf.setAllowLoopback(true);\n         newConf.setFlushInterval(999999999);\n         // restart bookies\n         restartBookies(newConf);\n@@ -239,6 +240,7 @@ public void testReplayDeletedLedgerJournalEntries() throws Exception {\n         // restart bookies with flush interval set to a large value\n         ServerConfiguration newConf = new ServerConfiguration();\n         newConf.setFlushInterval(999999999);\n+        newConf.setAllowLoopback(true);\n         // restart bookies\n         restartBookies(newConf);\n "},{"sha":"7db8e76d6a188a511d7f9cb2dde98557f708e767","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConcurrentLedgerTest.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/apache/bookkeeper/blob/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConcurrentLedgerTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConcurrentLedgerTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/ConcurrentLedgerTest.java?ref=9ce71edb0f826ef3628b94b739576eae2b8e01cd","patch":"@@ -50,7 +50,7 @@\n     File txnDir, ledgerDir;\n     int recvTimeout = 10000;\n     Semaphore throttle;\n-    ServerConfiguration conf = new ServerConfiguration();\n+    ServerConfiguration conf;\n \n     @Override\n     @Before\n@@ -71,6 +71,8 @@ public void setUp() throws Exception {\n         ledgerDir = new File(tmpFile.getParent(), tmpFile.getName()+\".dir\");\n         ledgerDir.mkdirs();\n \n+        conf = new ServerConfiguration();\n+        conf.setAllowLoopback(true);\n         conf.setBookiePort(5000);\n         conf.setZkServers(null);\n         conf.setJournalDirName(txnDir.getPath());"},{"sha":"dc2240f241343abb15cbb2eeebfc6c71cfbeb15e","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/test/NIOServerFactoryTest.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/bookkeeper/blob/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/NIOServerFactoryTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/NIOServerFactoryTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/NIOServerFactoryTest.java?ref=9ce71edb0f826ef3628b94b739576eae2b8e01cd","patch":"@@ -47,6 +47,7 @@ public void processPacket(ByteBuffer packet, Cnxn src) {\n     @Test(timeout=60000)\n     public void testProblemProcessor() throws Exception {\n         ServerConfiguration conf = new ServerConfiguration();\n+        conf.setAllowLoopback(true);\n         int port = PortManager.nextFreePort();\n         conf.setBookiePort(port);\n         NIOServerFactory factory = new NIOServerFactory(conf, problemProcessor);"},{"sha":"18a4265f4a4be8d7c6c743eed369705b495515c0","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/test/TestBackwardCompat.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/bookkeeper/blob/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/TestBackwardCompat.java","raw_url":"https://github.com/apache/bookkeeper/raw/9ce71edb0f826ef3628b94b739576eae2b8e01cd/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/TestBackwardCompat.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/TestBackwardCompat.java?ref=9ce71edb0f826ef3628b94b739576eae2b8e01cd","patch":"@@ -267,6 +267,7 @@ void close() throws Exception {\n         ServerCurrent(File journalDir, File ledgerDir, int port) throws Exception {\n             conf = new org.apache.bookkeeper.conf.ServerConfiguration();\n             conf.setBookiePort(port);\n+            conf.setAllowLoopback(true);\n             conf.setZkServers(zkUtil.getZooKeeperConnectString());\n             conf.setJournalDirName(journalDir.getPath());\n             conf.setLedgerDirNames(new String[] { ledgerDir.getPath() });\n@@ -614,4 +615,4 @@ public void testCompat410() throws Exception {\n \n         scur.stop();\n     }\n-}\n\\ No newline at end of file\n+}"},{"sha":"bdbbfba8684c3aec8864e829181abc7d943c8f11","filename":"hedwig-server/bin/hedwig","status":"modified","additions":16,"deletions":3,"changes":19,"blob_url":"https://github.com/apache/bookkeeper/blob/9ce71edb0f826ef3628b94b739576eae2b8e01cd/hedwig-server/bin/hedwig","raw_url":"https://github.com/apache/bookkeeper/raw/9ce71edb0f826ef3628b94b739576eae2b8e01cd/hedwig-server/bin/hedwig","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/bin/hedwig?ref=9ce71edb0f826ef3628b94b739576eae2b8e01cd","patch":"@@ -58,6 +58,19 @@ DEFAULT_LOG_CONF=$HW_HOME/conf/log4j.properties\n \n . $HW_HOME/conf/hwenv.sh\n \n+# Check for the java to use\n+if [[ -z $JAVA_HOME ]]; then\n+    JAVA=$(which java)\n+    if [ $? = 0 ]; then\n+        echo \"JAVA_HOME not set, using java from PATH. ($JAVA)\"\n+    else\n+        echo \"Error: JAVA_HOME not set, and no java executable found in $PATH.\" 1>&2\n+        exit 1\n+    fi\n+else\n+    JAVA=$JAVA_HOME/bin/java\n+fi\n+\n RELEASE_JAR=`ls $HW_HOME/hedwig-server-*.jar 2> /dev/null | tail -1`\n if [ $? == 0 ]; then\n     HEDWIG_JAR=$RELEASE_JAR\n@@ -171,7 +184,7 @@ OPTS=\"$OPTS -Dhedwig.log.file=$HEDWIG_LOG_FILE\"\n # Change to HW_HOME to support relative paths\n cd \"$BK_HOME\"\n if [ $COMMAND == \"server\" ]; then\n-    exec java $OPTS $JMX_ARGS org.apache.hedwig.server.netty.PubSubServer $HEDWIG_SERVER_CONF $HEDWIG_REGION_CLIENT_CONF $@\n+    exec $JAVA $OPTS $JMX_ARGS org.apache.hedwig.server.netty.PubSubServer $HEDWIG_SERVER_CONF $HEDWIG_REGION_CLIENT_CONF $@\n elif [ $COMMAND == \"console\" ]; then\n     # hedwig console configuration server part\n     if [ -z \"$HEDWIG_CONSOLE_SERVER_CONF\" ]; then\n@@ -181,11 +194,11 @@ elif [ $COMMAND == \"console\" ]; then\n     if [ -n \"$HEDWIG_CONSOLE_CLIENT_CONF\" ]; then\n         HEDWIG_CONSOLE_CLIENT_OPTIONS=\"-client-cfg $HEDWIG_CONSOLE_CLIENT_CONF\"\n     fi\n-    exec java $OPTS org.apache.hedwig.admin.console.HedwigConsole -server-cfg $HEDWIG_CONSOLE_SERVER_CONF $HEDWIG_CONSOLE_CLIENT_OPTIONS $@\n+    exec $JAVA $OPTS org.apache.hedwig.admin.console.HedwigConsole -server-cfg $HEDWIG_CONSOLE_SERVER_CONF $HEDWIG_CONSOLE_CLIENT_OPTIONS $@\n elif [ $COMMAND == \"help\" ]; then\n     hedwig_help;\n else\n-    exec java $OPTS $COMMAND $@\n+    exec $JAVA $OPTS $COMMAND $@\n fi\n \n "},{"sha":"8d379b6a11d5ba580f21e7a73fa7d0c54ae5d36a","filename":"hedwig-server/conf/hwenv.sh","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/apache/bookkeeper/blob/9ce71edb0f826ef3628b94b739576eae2b8e01cd/hedwig-server/conf/hwenv.sh","raw_url":"https://github.com/apache/bookkeeper/raw/9ce71edb0f826ef3628b94b739576eae2b8e01cd/hedwig-server/conf/hwenv.sh","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/conf/hwenv.sh?ref=9ce71edb0f826ef3628b94b739576eae2b8e01cd","patch":"@@ -20,6 +20,9 @@\n # * limitations under the License.\n # */\n \n+# Set JAVA_HOME here to override the environment setting\n+# JAVA_HOME=\n+\n # default settings for starting hedwig\n # HEDWIG_SERVER_CONF=\n "},{"sha":"28d670dca3a8fd30e33c825bdc923deeb6e0b631","filename":"hedwig-server/src/main/resources/NOTICE.bin.txt","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/9ce71edb0f826ef3628b94b739576eae2b8e01cd/hedwig-server/src/main/resources/NOTICE.bin.txt","raw_url":"https://github.com/apache/bookkeeper/raw/9ce71edb0f826ef3628b94b739576eae2b8e01cd/hedwig-server/src/main/resources/NOTICE.bin.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/main/resources/NOTICE.bin.txt?ref=9ce71edb0f826ef3628b94b739576eae2b8e01cd","patch":"@@ -1,5 +1,5 @@\n Apache BookKeeper\n-Copyright 2011-2013 The Apache Software Foundation\n+Copyright 2011-2014 The Apache Software Foundation\n \n Licensed under the Apache License, Version 2.0 (the\n \"License\"); you may not use this file except in compliance"},{"sha":"fc1ed9efec2b3e717730d6665b3e19e226f7dce9","filename":"hedwig-server/src/test/java/org/apache/hedwig/server/TestBackwardCompat.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/9ce71edb0f826ef3628b94b739576eae2b8e01cd/hedwig-server/src/test/java/org/apache/hedwig/server/TestBackwardCompat.java","raw_url":"https://github.com/apache/bookkeeper/raw/9ce71edb0f826ef3628b94b739576eae2b8e01cd/hedwig-server/src/test/java/org/apache/hedwig/server/TestBackwardCompat.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/test/java/org/apache/hedwig/server/TestBackwardCompat.java?ref=9ce71edb0f826ef3628b94b739576eae2b8e01cd","patch":"@@ -502,6 +502,7 @@ protected void startBookieServer() throws Exception {\n                 getClass().getName() + port, \"test\");\n             org.apache.bookkeeper.conf.ServerConfiguration conf = newServerConfiguration(\n                 port, zkUtil.getZooKeeperConnectString(), tmpDir, new File[] { tmpDir });\n+            conf.setAllowLoopback(true);\n             bks.add(startBookie(conf));\n             bkConfs.add(conf);\n         }\n@@ -510,6 +511,7 @@ protected void startBookieServer() throws Exception {\n             int port, String zkServers, File journalDir, File[] ledgerDirs) {\n             org.apache.bookkeeper.conf.ServerConfiguration conf =\n                 new org.apache.bookkeeper.conf.ServerConfiguration();\n+            conf.setAllowLoopback(true);\n             conf.setBookiePort(port);\n             conf.setZkServers(zkServers);\n             conf.setJournalDirName(journalDir.getPath());"},{"sha":"7ba01742d526cea9699ecd2d77ffd7516b99bc99","filename":"hedwig-server/src/test/java/org/apache/hedwig/server/persistence/BookKeeperTestBase.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/bookkeeper/blob/9ce71edb0f826ef3628b94b739576eae2b8e01cd/hedwig-server/src/test/java/org/apache/hedwig/server/persistence/BookKeeperTestBase.java","raw_url":"https://github.com/apache/bookkeeper/raw/9ce71edb0f826ef3628b94b739576eae2b8e01cd/hedwig-server/src/test/java/org/apache/hedwig/server/persistence/BookKeeperTestBase.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/test/java/org/apache/hedwig/server/persistence/BookKeeperTestBase.java?ref=9ce71edb0f826ef3628b94b739576eae2b8e01cd","patch":"@@ -244,6 +244,7 @@ private BookieServer startBookie(ServerConfiguration conf) throws Exception {\n \n     protected ServerConfiguration newServerConfiguration(int port, String zkServers, File journalDir, File[] ledgerDirs) {\n         ServerConfiguration conf = new ServerConfiguration(baseConf);\n+        conf.setAllowLoopback(true);\n         conf.setBookiePort(port);\n         conf.setZkServers(zkServers);\n         conf.setJournalDirName(journalDir.getPath());"}]}

