{"sha":"a0ae97c232caafa1fda9955f9aaa9f99564b74fe","node_id":"MDY6Q29tbWl0MTU3NTk1NjphMGFlOTdjMjMyY2FhZmExZmRhOTk1NWY5YWFhOWY5OTU2NGI3NGZl","commit":{"author":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2012-12-24T05:05:49Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2012-12-24T05:05:49Z"},"message":"BOOKKEEPER-522: TestHedwigHub is failing silently on Jenkins (ivank via sijie)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1425586 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"f18db9a7935983eba26fc5407090b37d3b0bef87","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/f18db9a7935983eba26fc5407090b37d3b0bef87"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/a0ae97c232caafa1fda9955f9aaa9f99564b74fe","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/a0ae97c232caafa1fda9955f9aaa9f99564b74fe","html_url":"https://github.com/apache/bookkeeper/commit/a0ae97c232caafa1fda9955f9aaa9f99564b74fe","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/a0ae97c232caafa1fda9955f9aaa9f99564b74fe/comments","author":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"fa13426970bd4b6d7ffc086e776559f87349ef71","url":"https://api.github.com/repos/apache/bookkeeper/commits/fa13426970bd4b6d7ffc086e776559f87349ef71","html_url":"https://github.com/apache/bookkeeper/commit/fa13426970bd4b6d7ffc086e776559f87349ef71"}],"stats":{"total":258,"additions":192,"deletions":66},"files":[{"sha":"1c9e1c5edeb59929aff6679649169efecfdf49e1","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/a0ae97c232caafa1fda9955f9aaa9f99564b74fe/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/a0ae97c232caafa1fda9955f9aaa9f99564b74fe/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=a0ae97c232caafa1fda9955f9aaa9f99564b74fe","patch":"@@ -316,6 +316,8 @@ Trunk (unreleased changes)\n \n         BOOKKEEPER-342: add documentation for hedwig metadata manager interface. (sijie, ivank via sijie)\n \n+        BOOKKEEPER-522: TestHedwigHub is failing silently on Jenkins (ivank via sijie)\n+\n       hedwig-client:\n \n         BOOKKEEPER-306: Change C++ client to use gtest for testing (ivank via sijie)"},{"sha":"c191c4a7e9da9c0ef72fa872cd4fb0392c406863","filename":"bookkeeper-benchmark/pom.xml","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/a0ae97c232caafa1fda9955f9aaa9f99564b74fe/bookkeeper-benchmark/pom.xml","raw_url":"https://github.com/apache/bookkeeper/raw/a0ae97c232caafa1fda9955f9aaa9f99564b74fe/bookkeeper-benchmark/pom.xml","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-benchmark/pom.xml?ref=a0ae97c232caafa1fda9955f9aaa9f99564b74fe","patch":"@@ -43,9 +43,7 @@\n       <plugin>\n       \t<groupId>org.apache.maven.plugins</groupId>\n \t<artifactId>maven-surefire-plugin</artifactId>\n-\t<version>2.9</version>\n \t<configuration>\n-\t  <argLine>-Xmx1G -Djava.net.preferIPv4Stack=true</argLine>\n           <systemPropertyVariables>\n             <test.latency.file>target/latencyDump.dat</test.latency.file>\n           </systemPropertyVariables>"},{"sha":"2d43c4832d63f4dda71f0fb2a3f9ed5b88c78464","filename":"bookkeeper-server/pom.xml","status":"modified","additions":0,"deletions":9,"changes":9,"blob_url":"https://github.com/apache/bookkeeper/blob/a0ae97c232caafa1fda9955f9aaa9f99564b74fe/bookkeeper-server/pom.xml","raw_url":"https://github.com/apache/bookkeeper/raw/a0ae97c232caafa1fda9955f9aaa9f99564b74fe/bookkeeper-server/pom.xml","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/pom.xml?ref=a0ae97c232caafa1fda9955f9aaa9f99564b74fe","patch":"@@ -153,15 +153,6 @@\n   </dependencies>\n   <build>\n     <plugins>\n-      <plugin>\n-        <groupId>org.apache.maven.plugins</groupId>\n-        <artifactId>maven-surefire-plugin</artifactId>\n-        <version>2.9</version>\n-        <configuration>\n-          <argLine>-Xmx1G -Djava.net.preferIPv4Stack=true</argLine>\n-          <forkMode>pertest</forkMode>\n-        </configuration>\n-      </plugin>\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-jar-plugin</artifactId>"},{"sha":"f8e2a5ff156d95d9f8b5537beaef68ec98d26203","filename":"hedwig-server/pom.xml","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/a0ae97c232caafa1fda9955f9aaa9f99564b74fe/hedwig-server/pom.xml","raw_url":"https://github.com/apache/bookkeeper/raw/a0ae97c232caafa1fda9955f9aaa9f99564b74fe/hedwig-server/pom.xml","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/pom.xml?ref=a0ae97c232caafa1fda9955f9aaa9f99564b74fe","patch":"@@ -233,9 +233,7 @@\n       <plugin>\n         <groupId>org.apache.maven.plugins</groupId>\n         <artifactId>maven-surefire-plugin</artifactId>\n-        <version>2.9</version>\n         <configuration>\n-          <argLine>-Xmx1G -Djava.net.preferIPv4Stack=true</argLine>\n           <systemPropertyVariables>\n             <derby.stream.error.file>target/derby.log</derby.stream.error.file>\n             <build.test.dir>target/zk_clientbase_build</build.test.dir>"},{"sha":"c54442b8861ec68bd6b5c324cedebc503f87c326","filename":"hedwig-server/src/test/java/org/apache/hedwig/server/HedwigHubTestBase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/a0ae97c232caafa1fda9955f9aaa9f99564b74fe/hedwig-server/src/test/java/org/apache/hedwig/server/HedwigHubTestBase.java","raw_url":"https://github.com/apache/bookkeeper/raw/a0ae97c232caafa1fda9955f9aaa9f99564b74fe/hedwig-server/src/test/java/org/apache/hedwig/server/HedwigHubTestBase.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/test/java/org/apache/hedwig/server/HedwigHubTestBase.java?ref=a0ae97c232caafa1fda9955f9aaa9f99564b74fe","patch":"@@ -137,7 +137,7 @@ protected void startHubServers() throws Exception {\n         for (int i = 0; i < numServers; i++) {\n             ServerConfiguration conf = getServerConfiguration(serverAddresses.get(i).getPort(),\n                                                               serverAddresses.get(i).getSSLPort());\n-            PubSubServer s = new PubSubServer(conf);\n+            PubSubServer s = new PubSubServer(conf, new ClientConfiguration(), new LoggingExceptionHandler());\n             serversList.add(s);\n             s.start();\n         }"},{"sha":"e42c0b9074038c81b27687e1b22ce472d2b8430f","filename":"hedwig-server/src/test/java/org/apache/hedwig/server/HedwigRegionTestBase.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/apache/bookkeeper/blob/a0ae97c232caafa1fda9955f9aaa9f99564b74fe/hedwig-server/src/test/java/org/apache/hedwig/server/HedwigRegionTestBase.java","raw_url":"https://github.com/apache/bookkeeper/raw/a0ae97c232caafa1fda9955f9aaa9f99564b74fe/hedwig-server/src/test/java/org/apache/hedwig/server/HedwigRegionTestBase.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/test/java/org/apache/hedwig/server/HedwigRegionTestBase.java?ref=a0ae97c232caafa1fda9955f9aaa9f99564b74fe","patch":"@@ -35,6 +35,7 @@\n import org.apache.hedwig.server.netty.PubSubServer;\n import org.apache.hedwig.server.persistence.BookKeeperTestBase;\n import org.apache.hedwig.util.HedwigSocketAddress;\n+import org.apache.hedwig.server.LoggingExceptionHandler;\n \n import org.apache.bookkeeper.test.PortManager;\n \n@@ -269,7 +270,8 @@ protected void startRegion(int i) throws Exception {\n                     getServerConfiguration(a.getPort(),\n                                            a.getSSLPort(),\n                                            regionName),\n-                    getRegionClientConfiguration());\n+                    getRegionClientConfiguration(),\n+                    new LoggingExceptionHandler());\n             serversList.add(s);\n             s.start();\n         }"},{"sha":"5e599601efbb5ef176733b50b4d41c68ee073aff","filename":"hedwig-server/src/test/java/org/apache/hedwig/server/LoggingExceptionHandler.java","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/apache/bookkeeper/blob/a0ae97c232caafa1fda9955f9aaa9f99564b74fe/hedwig-server/src/test/java/org/apache/hedwig/server/LoggingExceptionHandler.java","raw_url":"https://github.com/apache/bookkeeper/raw/a0ae97c232caafa1fda9955f9aaa9f99564b74fe/hedwig-server/src/test/java/org/apache/hedwig/server/LoggingExceptionHandler.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/test/java/org/apache/hedwig/server/LoggingExceptionHandler.java?ref=a0ae97c232caafa1fda9955f9aaa9f99564b74fe","patch":"@@ -0,0 +1,35 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hedwig.server;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Exception handler that simply logs the exception and\n+ * does nothing more. To be used in tests instead of TerminateJVMExceptionHandler\n+ */\n+public class LoggingExceptionHandler implements Thread.UncaughtExceptionHandler {\n+    static Logger logger = LoggerFactory.getLogger(LoggingExceptionHandler.class);\n+\n+    @Override\n+    public void uncaughtException(Thread t, Throwable e) {\n+        logger.error(\"Uncaught exception in thread \" + t.getName(), e);\n+    }\n+\n+}"},{"sha":"469bb90736b1dee323ec9b9e7909ed81ef9c8a73","filename":"hedwig-server/src/test/java/org/apache/hedwig/server/PubSubServerStandAloneTestBase.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/apache/bookkeeper/blob/a0ae97c232caafa1fda9955f9aaa9f99564b74fe/hedwig-server/src/test/java/org/apache/hedwig/server/PubSubServerStandAloneTestBase.java","raw_url":"https://github.com/apache/bookkeeper/raw/a0ae97c232caafa1fda9955f9aaa9f99564b74fe/hedwig-server/src/test/java/org/apache/hedwig/server/PubSubServerStandAloneTestBase.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/test/java/org/apache/hedwig/server/PubSubServerStandAloneTestBase.java?ref=a0ae97c232caafa1fda9955f9aaa9f99564b74fe","patch":"@@ -26,6 +26,8 @@\n \n import org.apache.bookkeeper.test.PortManager;\n \n+import org.apache.hedwig.client.conf.ClientConfiguration;\n+import org.apache.hedwig.server.LoggingExceptionHandler;\n import org.apache.hedwig.server.common.ServerConfiguration;\n import org.apache.hedwig.server.netty.PubSubServer;\n import org.apache.hedwig.util.HedwigSocketAddress;\n@@ -95,7 +97,7 @@ protected HedwigSocketAddress getDefaultHedwigAddress() {\n     protected void startHubServer(ServerConfiguration conf) throws Exception {\n         defaultAddress = new HedwigSocketAddress(\"localhost\", conf.getServerPort(),\n                                                  conf.getSSLServerPort());\n-        server = new PubSubServer(conf);\n+        server = new PubSubServer(conf, new ClientConfiguration(), new LoggingExceptionHandler());\n         server.start();\n     }\n "},{"sha":"bfbd9aa03fd9105d883259cb16a23fc6c371c39c","filename":"hedwig-server/src/test/java/org/apache/hedwig/server/TestPubSubServerStartup.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/apache/bookkeeper/blob/a0ae97c232caafa1fda9955f9aaa9f99564b74fe/hedwig-server/src/test/java/org/apache/hedwig/server/TestPubSubServerStartup.java","raw_url":"https://github.com/apache/bookkeeper/raw/a0ae97c232caafa1fda9955f9aaa9f99564b74fe/hedwig-server/src/test/java/org/apache/hedwig/server/TestPubSubServerStartup.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/test/java/org/apache/hedwig/server/TestPubSubServerStartup.java?ref=a0ae97c232caafa1fda9955f9aaa9f99564b74fe","patch":"@@ -25,6 +25,8 @@\n \n import junit.framework.Assert;\n \n+import org.apache.hedwig.client.conf.ClientConfiguration;\n+import org.apache.hedwig.server.LoggingExceptionHandler;\n import org.apache.bookkeeper.test.PortManager;\n import org.apache.commons.configuration.ConfigurationException;\n import org.apache.hedwig.server.common.ServerConfiguration;\n@@ -102,7 +104,7 @@ private void instantiateAndDestroyPubSubServer() throws IOException, Interrupted\n         PubSubServer hedwigServer = null;\n         try {\n             logger.info(\"starting hedwig broker!\");\n-            hedwigServer = new PubSubServer(serverConf);\n+            hedwigServer = new PubSubServer(serverConf, new ClientConfiguration(), new LoggingExceptionHandler());\n             hedwigServer.start();\n         } catch (Exception e) {\n             e.printStackTrace();"},{"sha":"e3b924a74a1aec57dc09ef181cfda590c59fbd9b","filename":"hedwig-server/src/test/java/org/apache/hedwig/server/integration/TestHedwigHub.java","status":"modified","additions":28,"deletions":43,"changes":71,"blob_url":"https://github.com/apache/bookkeeper/blob/a0ae97c232caafa1fda9955f9aaa9f99564b74fe/hedwig-server/src/test/java/org/apache/hedwig/server/integration/TestHedwigHub.java","raw_url":"https://github.com/apache/bookkeeper/raw/a0ae97c232caafa1fda9955f9aaa9f99564b74fe/hedwig-server/src/test/java/org/apache/hedwig/server/integration/TestHedwigHub.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/test/java/org/apache/hedwig/server/integration/TestHedwigHub.java?ref=a0ae97c232caafa1fda9955f9aaa9f99564b74fe","patch":"@@ -26,9 +26,6 @@\n import org.junit.After;\n import org.junit.Before;\n import org.junit.Test;\n-import org.junit.runner.RunWith;\n-import org.junit.runners.Parameterized;\n-import org.junit.runners.Parameterized.Parameters;\n \n import com.google.protobuf.ByteString;\n import org.apache.hedwig.client.api.MessageHandler;\n@@ -62,9 +59,9 @@\n import org.apache.hedwig.util.ConcurrencyUtils;\n import org.apache.hedwig.util.HedwigSocketAddress;\n import org.apache.bookkeeper.test.PortManager;\n+import org.apache.hedwig.server.LoggingExceptionHandler;\n \n-@RunWith(Parameterized.class)\n-public class TestHedwigHub extends HedwigHubTestBase {\n+public abstract class TestHedwigHub extends HedwigHubTestBase {\n \n     // Client side variables\n     protected HedwigClient client;\n@@ -80,18 +77,6 @@\n         REGULAR, PROXY, SSL\n     };\n \n-    @Parameters\n-    public static Collection<Object[]> configs() {\n-        return Arrays.asList(new Object[][] {\n-                                { Mode.PROXY, false },\n-                                { Mode.PROXY, true },\n-                                { Mode.REGULAR, false },\n-                                { Mode.REGULAR, true },\n-                                { Mode.SSL, false },\n-                                { Mode.SSL, true }\n-                             });\n-    }\n-\n     protected Mode mode;\n     protected boolean isSubscriptionChannelSharingEnabled;\n \n@@ -240,7 +225,7 @@ protected ClientConfiguration getClientConfiguration() {\n     public void setUp() throws Exception {\n         super.setUp();\n         if (mode == Mode.PROXY) {\n-            proxy = new HedwigProxy(proxyConf);\n+            proxy = new HedwigProxy(proxyConf, new LoggingExceptionHandler());\n             proxy.start();\n         }\n         client = new HedwigClient(getClientConfiguration());\n@@ -349,7 +334,7 @@ protected void shutDownLastServer() {\n \n     // This tests out the manual sending of consume messages to the server\n     // instead of relying on the automatic sending by the client lib for it.\n-    @Test\n+    @Test(timeout=10000)\n     public void testManualConsumeClient() throws Exception {\n         HedwigClient myClient = new HedwigClient(new TestClientConfiguration() {\n             @Override\n@@ -396,7 +381,7 @@ public boolean isAutoSendConsumeMessageEnabled() {\n         myClient.close();\n     }\n \n-    @Test\n+    @Test(timeout=10000)\n     public void testAttachToSubscriptionSuccess() throws Exception {\n         ByteString topic = getTopic(0);\n         subscriber.asyncSubscribe(topic, localSubscriberId, CreateOrAttach.CREATE_OR_ATTACH, new TestCallback(queue),\n@@ -419,28 +404,28 @@ public void testAttachToSubscriptionSuccess() throws Exception {\n         }\n     }\n \n-    @Test\n+    @Test(timeout=10000)\n     public void testServerRedirect() throws Exception {\n         int batchSize = 10;\n         publishBatch(batchSize, true, false, 0);\n     }\n \n-    @Test\n+    @Test(timeout=10000)\n     public void testSubscribeAndConsume() throws Exception {\n         int batchSize = 10;\n         subscribeToTopics(batchSize);\n         publishBatch(batchSize, true, true, 0);\n     }\n \n-    @Test\n+    @Test(timeout=10000)\n     public void testServerFailoverPublishOnly() throws Exception {\n         int batchSize = 10;\n         publishBatch(batchSize, true, false, 0);\n         shutDownLastServer();\n         publishBatch(batchSize, true, false, 1);\n     }\n \n-    @Test\n+    @Test(timeout=10000)\n     public void testServerFailover() throws Exception {\n         int batchSize = 10;\n         subscribeToTopics(batchSize);\n@@ -449,7 +434,7 @@ public void testServerFailover() throws Exception {\n         publishBatch(batchSize, true, true, 1);\n     }\n \n-    @Test\n+    @Test(timeout=10000)\n     public void testUnsubscribe() throws Exception {\n         ByteString topic = getTopic(0);\n         subscriber.asyncSubscribe(topic, localSubscriberId, CreateOrAttach.CREATE_OR_ATTACH, new TestCallback(queue),\n@@ -481,7 +466,7 @@ public void run() {\n         assertFalse(consumeQueue.take());\n     }\n \n-    @Test\n+    @Test(timeout=10000)\n     public void testSyncUnsubscribeWithoutSubscription() throws Exception {\n         boolean unsubscribeSuccess = false;\n         try {\n@@ -494,13 +479,13 @@ public void testSyncUnsubscribeWithoutSubscription() throws Exception {\n         assertTrue(unsubscribeSuccess);\n     }\n \n-    @Test\n+    @Test(timeout=10000)\n     public void testAsyncUnsubscribeWithoutSubscription() throws Exception {\n         subscriber.asyncUnsubscribe(getTopic(0), localSubscriberId, new TestCallback(queue), null);\n         assertFalse(queue.take());\n     }\n \n-    @Test\n+    @Test(timeout=10000)\n     public void testCloseSubscription() throws Exception {\n         ByteString topic = getTopic(0);\n         subscriber.asyncSubscribe(topic, localSubscriberId, CreateOrAttach.CREATE_OR_ATTACH, new TestCallback(queue),\n@@ -532,7 +517,7 @@ public void run() {\n         assertFalse(consumeQueue.take());\n     }\n \n-    @Test\n+    @Test(timeout=10000)\n     public void testStartDeliveryTwice() throws Exception {\n         ByteString topic = getTopic(0);\n         subscriber.asyncSubscribe(topic, localSubscriberId, CreateOrAttach.CREATE_OR_ATTACH, new TestCallback(queue),\n@@ -546,7 +531,7 @@ public void testStartDeliveryTwice() throws Exception {\n         }\n     }\n \n-    @Test\n+    @Test(timeout=10000)\n     public void testStopDelivery() throws Exception {\n         ByteString topic = getTopic(0);\n         subscriber.asyncSubscribe(topic, localSubscriberId, CreateOrAttach.CREATE_OR_ATTACH, new TestCallback(queue),\n@@ -587,7 +572,7 @@ public void run() {\n         }\n     }\n \n-    @Test\n+    @Test(timeout=10000)\n     public void testConsumedMessagesInOrder() throws Exception {\n         ByteString topic = getTopic(0);\n         subscriber.asyncSubscribe(topic, localSubscriberId, CreateOrAttach.CREATE_OR_ATTACH, new TestCallback(queue),\n@@ -608,7 +593,7 @@ public void testConsumedMessagesInOrder() throws Exception {\n         }\n     }\n \n-    @Test\n+    @Test(timeout=10000)\n     public void testCreateSubscriptionFailure() throws Exception {\n         ByteString topic = getTopic(0);\n         subscriber.asyncSubscribe(topic, localSubscriberId, CreateOrAttach.CREATE_OR_ATTACH, new TestCallback(queue),\n@@ -622,7 +607,7 @@ public void testCreateSubscriptionFailure() throws Exception {\n         assertFalse(queue.take());\n     }\n \n-    @Test\n+    @Test(timeout=10000)\n     public void testCreateSubscriptionSuccess() throws Exception {\n         ByteString topic = getTopic(0);\n         subscriber.asyncSubscribe(topic, localSubscriberId, CreateOrAttach.CREATE, new TestCallback(queue), null);\n@@ -636,7 +621,7 @@ public void testCreateSubscriptionSuccess() throws Exception {\n         }\n     }\n \n-    @Test\n+    @Test(timeout=10000)\n     public void testAttachToSubscriptionFailure() throws Exception {\n         ByteString topic = getTopic(0);\n         subscriber.asyncSubscribe(topic, localSubscriberId, CreateOrAttach.ATTACH, new TestCallback(queue), null);\n@@ -646,7 +631,7 @@ public void testAttachToSubscriptionFailure() throws Exception {\n     // The following 4 tests are to make sure that the subscriberId validation\n     // works when it is a local subscriber and we're expecting the subscriberId\n     // to be in the \"local\" specific format.\n-    @Test\n+    @Test(timeout=10000)\n     public void testSyncSubscribeWithInvalidSubscriberId() throws Exception {\n         boolean subscribeSuccess = false;\n         try {\n@@ -659,14 +644,14 @@ public void testSyncSubscribeWithInvalidSubscriberId() throws Exception {\n         assertTrue(subscribeSuccess);\n     }\n \n-    @Test\n+    @Test(timeout=10000)\n     public void testAsyncSubscribeWithInvalidSubscriberId() throws Exception {\n         subscriber.asyncSubscribe(getTopic(0), hubSubscriberId, CreateOrAttach.CREATE_OR_ATTACH,\n                                   new TestCallback(queue), null);\n         assertFalse(queue.take());\n     }\n \n-    @Test\n+    @Test(timeout=10000)\n     public void testSyncUnsubscribeWithInvalidSubscriberId() throws Exception {\n         boolean unsubscribeSuccess = false;\n         try {\n@@ -679,7 +664,7 @@ public void testSyncUnsubscribeWithInvalidSubscriberId() throws Exception {\n         assertTrue(unsubscribeSuccess);\n     }\n \n-    @Test\n+    @Test(timeout=10000)\n     public void testAsyncUnsubscribeWithInvalidSubscriberId() throws Exception {\n         subscriber.asyncUnsubscribe(getTopic(0), hubSubscriberId, new TestCallback(queue), null);\n         assertFalse(queue.take());\n@@ -688,7 +673,7 @@ public void testAsyncUnsubscribeWithInvalidSubscriberId() throws Exception {\n     // The following 4 tests are to make sure that the subscriberId validation\n     // also works when it is a hub subscriber and we're expecting the\n     // subscriberId to be in the \"hub\" specific format.\n-    @Test\n+    @Test(timeout=10000)\n     public void testSyncHubSubscribeWithInvalidSubscriberId() throws Exception {\n         Client hubClient = new HedwigHubClient(new HubClientConfiguration());\n         Subscriber hubSubscriber = hubClient.getSubscriber();\n@@ -704,7 +689,7 @@ public void testSyncHubSubscribeWithInvalidSubscriberId() throws Exception {\n         hubClient.close();\n     }\n \n-    @Test\n+    @Test(timeout=10000)\n     public void testAsyncHubSubscribeWithInvalidSubscriberId() throws Exception {\n         Client hubClient = new HedwigHubClient(new HubClientConfiguration());\n         Subscriber hubSubscriber = hubClient.getSubscriber();\n@@ -714,7 +699,7 @@ public void testAsyncHubSubscribeWithInvalidSubscriberId() throws Exception {\n         hubClient.close();\n     }\n \n-    @Test\n+    @Test(timeout=10000)\n     public void testSyncHubUnsubscribeWithInvalidSubscriberId() throws Exception {\n         Client hubClient = new HedwigHubClient(new HubClientConfiguration());\n         Subscriber hubSubscriber = hubClient.getSubscriber();\n@@ -730,7 +715,7 @@ public void testSyncHubUnsubscribeWithInvalidSubscriberId() throws Exception {\n         hubClient.close();\n     }\n \n-    @Test\n+    @Test(timeout=10000)\n     public void testAsyncHubUnsubscribeWithInvalidSubscriberId() throws Exception {\n         Client hubClient = new HedwigHubClient(new HubClientConfiguration());\n         Subscriber hubSubscriber = hubClient.getSubscriber();\n@@ -739,7 +724,7 @@ public void testAsyncHubUnsubscribeWithInvalidSubscriberId() throws Exception {\n         hubClient.close();\n     }\n \n-    @Test\n+    @Test(timeout=10000)\n     public void testPublishWithBookKeeperError() throws Exception {\n         int batchSize = 10;\n         publishBatch(batchSize, true, false, 0);"},{"sha":"64e5b4ed3690d6fdf14781eafb470e2e1578e0f6","filename":"hedwig-server/src/test/java/org/apache/hedwig/server/integration/TestHedwigHubProxy.java","status":"added","additions":36,"deletions":0,"changes":36,"blob_url":"https://github.com/apache/bookkeeper/blob/a0ae97c232caafa1fda9955f9aaa9f99564b74fe/hedwig-server/src/test/java/org/apache/hedwig/server/integration/TestHedwigHubProxy.java","raw_url":"https://github.com/apache/bookkeeper/raw/a0ae97c232caafa1fda9955f9aaa9f99564b74fe/hedwig-server/src/test/java/org/apache/hedwig/server/integration/TestHedwigHubProxy.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/test/java/org/apache/hedwig/server/integration/TestHedwigHubProxy.java?ref=a0ae97c232caafa1fda9955f9aaa9f99564b74fe","patch":"@@ -0,0 +1,36 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hedwig.server.integration;\n+\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+import org.junit.runners.Parameterized.Parameters;\n+import java.util.Collection;\n+import java.util.Arrays;\n+\n+@RunWith(Parameterized.class)\n+public class TestHedwigHubProxy extends TestHedwigHub {\n+    @Parameters\n+    public static Collection<Object[]> configs() {\n+        return Arrays.asList(new Object[][] { { true }, { false } });\n+    }\n+\n+    public TestHedwigHubProxy(boolean isSubscriptionChannelSharingEnabled) {\n+        super(Mode.PROXY, isSubscriptionChannelSharingEnabled);\n+    }\n+}"},{"sha":"2e370c0136e69109eee0e47a857211c61ef3a94e","filename":"hedwig-server/src/test/java/org/apache/hedwig/server/integration/TestHedwigHubRegular.java","status":"added","additions":36,"deletions":0,"changes":36,"blob_url":"https://github.com/apache/bookkeeper/blob/a0ae97c232caafa1fda9955f9aaa9f99564b74fe/hedwig-server/src/test/java/org/apache/hedwig/server/integration/TestHedwigHubRegular.java","raw_url":"https://github.com/apache/bookkeeper/raw/a0ae97c232caafa1fda9955f9aaa9f99564b74fe/hedwig-server/src/test/java/org/apache/hedwig/server/integration/TestHedwigHubRegular.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/test/java/org/apache/hedwig/server/integration/TestHedwigHubRegular.java?ref=a0ae97c232caafa1fda9955f9aaa9f99564b74fe","patch":"@@ -0,0 +1,36 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hedwig.server.integration;\n+\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+import org.junit.runners.Parameterized.Parameters;\n+import java.util.Collection;\n+import java.util.Arrays;\n+\n+@RunWith(Parameterized.class)\n+public class TestHedwigHubRegular extends TestHedwigHub {\n+    @Parameters\n+    public static Collection<Object[]> configs() {\n+        return Arrays.asList(new Object[][] { { true }, { false } });\n+    }\n+\n+    public TestHedwigHubRegular(boolean isSubscriptionChannelSharingEnabled) {\n+        super(Mode.REGULAR, isSubscriptionChannelSharingEnabled);\n+    }\n+}"},{"sha":"98d36b6e9b217d0be9b19fc246e285daf5a4b380","filename":"hedwig-server/src/test/java/org/apache/hedwig/server/integration/TestHedwigHubSSL.java","status":"added","additions":36,"deletions":0,"changes":36,"blob_url":"https://github.com/apache/bookkeeper/blob/a0ae97c232caafa1fda9955f9aaa9f99564b74fe/hedwig-server/src/test/java/org/apache/hedwig/server/integration/TestHedwigHubSSL.java","raw_url":"https://github.com/apache/bookkeeper/raw/a0ae97c232caafa1fda9955f9aaa9f99564b74fe/hedwig-server/src/test/java/org/apache/hedwig/server/integration/TestHedwigHubSSL.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/test/java/org/apache/hedwig/server/integration/TestHedwigHubSSL.java?ref=a0ae97c232caafa1fda9955f9aaa9f99564b74fe","patch":"@@ -0,0 +1,36 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hedwig.server.integration;\n+\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+import org.junit.runners.Parameterized.Parameters;\n+import java.util.Collection;\n+import java.util.Arrays;\n+\n+@RunWith(Parameterized.class)\n+public class TestHedwigHubSSL extends TestHedwigHub {\n+    @Parameters\n+    public static Collection<Object[]> configs() {\n+        return Arrays.asList(new Object[][] { { true }, { false } });\n+    }\n+\n+    public TestHedwigHubSSL(boolean isSubscriptionChannelSharingEnabled) {\n+        super(Mode.SSL, isSubscriptionChannelSharingEnabled);\n+    }\n+}"},{"sha":"4185d1d2c9082c6a4bc896c742451eedb866c83a","filename":"hedwig-server/src/test/java/org/apache/hedwig/server/netty/TestPubSubServer.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/apache/bookkeeper/blob/a0ae97c232caafa1fda9955f9aaa9f99564b74fe/hedwig-server/src/test/java/org/apache/hedwig/server/netty/TestPubSubServer.java","raw_url":"https://github.com/apache/bookkeeper/raw/a0ae97c232caafa1fda9955f9aaa9f99564b74fe/hedwig-server/src/test/java/org/apache/hedwig/server/netty/TestPubSubServer.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/test/java/org/apache/hedwig/server/netty/TestPubSubServer.java?ref=a0ae97c232caafa1fda9955f9aaa9f99564b74fe","patch":"@@ -42,6 +42,7 @@\n import org.apache.hedwig.server.common.ServerConfiguration;\n import org.apache.hedwig.server.topics.AbstractTopicManager;\n import org.apache.hedwig.server.topics.TopicManager;\n+import org.apache.hedwig.server.LoggingExceptionHandler;\n import org.apache.hedwig.util.Callback;\n import org.apache.hedwig.util.HedwigSocketAddress;\n import org.apache.hedwig.zookeeper.SafeAsyncZKCallback;\n@@ -51,11 +52,11 @@\n     @Test\n     public void testSecondServer() throws Exception {\n         PubSubServer server1 = new PubSubServer(new StandAloneServerConfiguration() {\n-            @Override\n-            public int getServerPort() {\n-                return super.getServerPort() + 1;\n-            }\n-        });\n+                @Override\n+                public int getServerPort() {\n+                    return super.getServerPort() + 1;\n+                }\n+            }, new ClientConfiguration(), new LoggingExceptionHandler());\n         server1.start();\n         server1.shutdown();\n     }"},{"sha":"a91b28e1b6c117932946fc5453726e1afef395eb","filename":"pom.xml","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/apache/bookkeeper/blob/a0ae97c232caafa1fda9955f9aaa9f99564b74fe/pom.xml","raw_url":"https://github.com/apache/bookkeeper/raw/a0ae97c232caafa1fda9955f9aaa9f99564b74fe/pom.xml","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/pom.xml?ref=a0ae97c232caafa1fda9955f9aaa9f99564b74fe","patch":"@@ -63,8 +63,10 @@\n         <artifactId>maven-surefire-plugin</artifactId>\n         <version>2.9</version>\n         <configuration>\n-          <argLine>-Djava.net.preferIPv4Stack=true</argLine>\n+          <argLine>-Xmx1G -Djava.net.preferIPv4Stack=true</argLine>\n \t  <redirectTestOutputToFile>true</redirectTestOutputToFile>\n+\t  <forkMode>always</forkMode>\n+\t  <forkedProcessTimeoutInSeconds>1800</forkedProcessTimeoutInSeconds>\n         </configuration>\n       </plugin>\n       <plugin>"}]}

