{"sha":"ab707d2c6b3251b2a9a30a6d14074704460b3da5","node_id":"MDY6Q29tbWl0MTU3NTk1NjphYjcwN2QyYzZiMzI1MWIyYTlhMzBhNmQxNDA3NDcwNDQ2MGIzZGE1","commit":{"author":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2017-04-11T06:28:37Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2017-04-11T06:28:37Z"},"message":"BOOKKEEPER-1021: Improve merge script to handle github reviews api\n\nAuthor: Sijie Guo <sijie@apache.org>\n\nReviewers: Govind Menon <None>\n\nCloses #123 from sijie/sijie/improve_merge_scripts","tree":{"sha":"19b4e0458d3198b09e17bb328c00742f4beb4f1c","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/19b4e0458d3198b09e17bb328c00742f4beb4f1c"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/ab707d2c6b3251b2a9a30a6d14074704460b3da5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/ab707d2c6b3251b2a9a30a6d14074704460b3da5","html_url":"https://github.com/apache/bookkeeper/commit/ab707d2c6b3251b2a9a30a6d14074704460b3da5","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/ab707d2c6b3251b2a9a30a6d14074704460b3da5/comments","author":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"f30f60889e0810a47797daf4107c0d9bc2ee998c","url":"https://api.github.com/repos/apache/bookkeeper/commits/f30f60889e0810a47797daf4107c0d9bc2ee998c","html_url":"https://github.com/apache/bookkeeper/commit/f30f60889e0810a47797daf4107c0d9bc2ee998c"}],"stats":{"total":22,"additions":20,"deletions":2},"files":[{"sha":"e3904a88b4b5ad072fefef57dda6e2466fbaf212","filename":"dev/bk-merge-pr.py","status":"modified","additions":20,"deletions":2,"changes":22,"blob_url":"https://github.com/apache/bookkeeper/blob/ab707d2c6b3251b2a9a30a6d14074704460b3da5/dev/bk-merge-pr.py","raw_url":"https://github.com/apache/bookkeeper/raw/ab707d2c6b3251b2a9a30a6d14074704460b3da5/dev/bk-merge-pr.py","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/dev/bk-merge-pr.py?ref=ab707d2c6b3251b2a9a30a6d14074704460b3da5","patch":"@@ -74,11 +74,13 @@\n \n DEFAULT_FIX_VERSION = os.environ.get(\"DEFAULT_FIX_VERSION\", \"0.9.1.0\")\n \n-def get_json(url):\n+def get_json(url, preview_api = False):\n     try:\n         request = urllib2.Request(url)\n         if GITHUB_OAUTH_KEY:\n             request.add_header('Authorization', 'token %s' % GITHUB_OAUTH_KEY)\n+        if preview_api:\n+            request.add_header('Accept', 'application/vnd.github.black-cat-preview+json')\n         return json.load(urllib2.urlopen(request))\n     except urllib2.HTTPError as e:\n         if \"X-RateLimit-Remaining\" in e.headers and e.headers[\"X-RateLimit-Remaining\"] == '0':\n@@ -395,10 +397,26 @@ def get_reviewers(pr_num):\n             if approval_msg in comment['body'].lower():\n                 reviewers_ids.add(comment['user']['login'])\n \n+    approval_review_states = ['approved']\n+    pr_reviews = get_json('{0}/pulls/{1}/reviews'.format(GITHUB_API_BASE, pr_num), True)\n+    for review in pr_reviews:\n+        for approval_state in approval_review_states:\n+            if approval_state in review['state'].lower():\n+                reviewers_ids.add(review['user']['login'])\n+\n+    if len(reviewers_ids) == 0:\n+        fail(\"No approvals found in this pull request\")\n+\n     reviewers_emails = []\n     for reviewer_id in reviewers_ids:\n+        username = None\n+        useremail = None\n         user = get_json(\"%s/users/%s\" % (GITHUB_API_URL, reviewer_id))\n-        reviewers_emails += ['%s <%s>' % (user['name'].strip(), user['email'].strip())]\n+        useremail = user['email'].strip() if user['email'] or None\n+        username = user['name'].strip() if user['name'] or useremail\n+        if username is None:\n+            continue\n+        reviewers_emails.append('{0} <{1}>'.format(username, useremail))\n     return ', '.join(reviewers_emails)\n \n def main():"}]}

