{"sha":"b046f0cd3f6b4c246db5041a2726e80fead1af77","node_id":"MDY6Q29tbWl0MTU3NTk1NjpiMDQ2ZjBjZDNmNmI0YzI0NmRiNTA0MWEyNzI2ZTgwZmVhZDFhZjc3","commit":{"author":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2013-07-04T14:50:30Z"},"committer":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2013-07-04T14:50:30Z"},"message":"BOOKKEEPER-636: Latest txn logs might be deleted in a race condition which is not recoverable if BK goes down before next txn log created. (vinay via ivank)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1499776 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"37223b561246d4dc8ea41137af2109a032f45db6","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/37223b561246d4dc8ea41137af2109a032f45db6"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/b046f0cd3f6b4c246db5041a2726e80fead1af77","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/b046f0cd3f6b4c246db5041a2726e80fead1af77","html_url":"https://github.com/apache/bookkeeper/commit/b046f0cd3f6b4c246db5041a2726e80fead1af77","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/b046f0cd3f6b4c246db5041a2726e80fead1af77/comments","author":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"committer":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"parents":[{"sha":"d67426abef02903a196c9e846ad8a082cc424d80","url":"https://api.github.com/repos/apache/bookkeeper/commits/d67426abef02903a196c9e846ad8a082cc424d80","html_url":"https://github.com/apache/bookkeeper/commit/d67426abef02903a196c9e846ad8a082cc424d80"}],"stats":{"total":23,"additions":19,"deletions":4},"files":[{"sha":"14aa52647b50343a9ad263d7d228a6e86eec78c1","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/b046f0cd3f6b4c246db5041a2726e80fead1af77/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/b046f0cd3f6b4c246db5041a2726e80fead1af77/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=b046f0cd3f6b4c246db5041a2726e80fead1af77","patch":"@@ -38,6 +38,8 @@ Release 4.2.2 - Unreleased\n \n         BOOKKEEPER-257: Ability to list all ledgers (fpj via ivank)\n \n+        BOOKKEEPER-636: Latest txn logs might be deleted in a race condition which is not recoverable if BK goes down before next txn log created. (vinay via ivank)\n+\n       hedwig-server:\n \n         BOOKKEEPER-579: TestSubAfterCloseSub was put in a wrong package (sijie via ivank)"},{"sha":"d46fd4e154fbad000d3e46c562ffaa6cc1f8a044","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Journal.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/apache/bookkeeper/blob/b046f0cd3f6b4c246db5041a2726e80fead1af77/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Journal.java","raw_url":"https://github.com/apache/bookkeeper/raw/b046f0cd3f6b4c246db5041a2726e80fead1af77/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Journal.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Journal.java?ref=b046f0cd3f6b4c246db5041a2726e80fead1af77","patch":"@@ -477,15 +477,19 @@ public void run() {\n         ByteBuffer lenBuff = ByteBuffer.allocate(4);\n         JournalChannel logFile = null;\n         try {\n-            long logId = 0;\n+            List<Long> journalIds = listJournalIds(journalDirectory, null);\n+            // Should not use MathUtils.now(), which use System.nanoTime() and\n+            // could only be used to measure elapsed time.\n+            // http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/System.html#nanoTime%28%29\n+            long logId = journalIds.isEmpty() ? System.currentTimeMillis() : journalIds.get(journalIds.size() - 1);\n             BufferedChannel bc = null;\n             long lastFlushPosition = 0;\n \n             QueueEntry qe = null;\n             while (true) {\n                 // new journal file to write\n                 if (null == logFile) {\n-                    logId = MathUtils.now();\n+                    logId = logId + 1;\n                     logFile = new JournalChannel(journalDirectory, logId);\n                     bc = logFile.getBufferedChannel();\n "},{"sha":"e55ba7b417985e77f0371ce9cd0804a510b6a0cc","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/JournalChannel.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/apache/bookkeeper/blob/b046f0cd3f6b4c246db5041a2726e80fead1af77/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/JournalChannel.java","raw_url":"https://github.com/apache/bookkeeper/raw/b046f0cd3f6b4c246db5041a2726e80fead1af77/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/JournalChannel.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/JournalChannel.java?ref=b046f0cd3f6b4c246db5041a2726e80fead1af77","patch":"@@ -65,6 +65,12 @@\n \n         LOG.info(\"Opening journal {}\", fn);\n         if (!fn.exists()) { // new file, write version\n+            if (!fn.createNewFile()) {\n+                LOG.error(\"Journal file {}, that shouldn't exist, already exists. \"\n+                          + \" is there another bookie process running?\", fn);\n+                throw new IOException(\"File \" + fn\n+                        + \" suddenly appeared, is another bookie process running?\");\n+            }\n             fc = new RandomAccessFile(fn, \"rw\").getChannel();\n             formatVersion = CURRENT_JOURNAL_FORMAT_VERSION;\n "},{"sha":"de0c32841e3af6e3e0622ac93f44ac1539f66dbd","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/util/MathUtils.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/apache/bookkeeper/blob/b046f0cd3f6b4c246db5041a2726e80fead1af77/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/MathUtils.java","raw_url":"https://github.com/apache/bookkeeper/raw/b046f0cd3f6b4c246db5041a2726e80fead1af77/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/MathUtils.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/MathUtils.java?ref=b046f0cd3f6b4c246db5041a2726e80fead1af77","patch":"@@ -32,13 +32,16 @@ public static int signSafeMod(long dividend, int divisor) {\n         return mod;\n \n     }\n-    \n+\n     /**\n      * Current time from some arbitrary time base in the past, counting in\n      * milliseconds, and not affected by settimeofday or similar system clock\n      * changes. This is appropriate to use when computing how much longer to\n      * wait for an interval to expire.\n-     * \n+     *\n+     * NOTE: only use it for measuring.\n+     * http://docs.oracle.com/javase/1.5.0/docs/api/java/lang/System.html#nanoTime%28%29\n+     *\n      * @return current time in milliseconds.\n      */\n     public static long now() {"}]}

