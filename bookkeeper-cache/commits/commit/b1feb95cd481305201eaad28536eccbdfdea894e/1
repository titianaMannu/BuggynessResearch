{"sha":"b1feb95cd481305201eaad28536eccbdfdea894e","node_id":"MDY6Q29tbWl0MTU3NTk1NjpiMWZlYjk1Y2Q0ODEzMDUyMDFlYWFkMjg1MzZlY2NiZGZkZWE4OTRl","commit":{"author":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2013-06-21T17:34:09Z"},"committer":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2013-06-21T17:34:09Z"},"message":"BOOKKEEPER-313: Bookkeeper shutdown call from Bookie thread is not shutting down server (vinay via ivank)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1495514 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"900158f5d3866dd76af0b5af40ae35185fc09d03","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/900158f5d3866dd76af0b5af40ae35185fc09d03"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/b1feb95cd481305201eaad28536eccbdfdea894e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/b1feb95cd481305201eaad28536eccbdfdea894e","html_url":"https://github.com/apache/bookkeeper/commit/b1feb95cd481305201eaad28536eccbdfdea894e","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/b1feb95cd481305201eaad28536eccbdfdea894e/comments","author":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"committer":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"parents":[{"sha":"760d151bbeb5b9f0f44a5e0ced3b1dc9e92c98b7","url":"https://api.github.com/repos/apache/bookkeeper/commits/760d151bbeb5b9f0f44a5e0ced3b1dc9e92c98b7","html_url":"https://github.com/apache/bookkeeper/commit/760d151bbeb5b9f0f44a5e0ced3b1dc9e92c98b7"}],"stats":{"total":111,"additions":95,"deletions":16},"files":[{"sha":"145adc6997def238445a75bca80c4e43a80c8a14","filename":"CHANGES.txt","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/bookkeeper/blob/b1feb95cd481305201eaad28536eccbdfdea894e/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/b1feb95cd481305201eaad28536eccbdfdea894e/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=b1feb95cd481305201eaad28536eccbdfdea894e","patch":"@@ -27,6 +27,7 @@ Release 4.2.2 - Unreleased\n \tBOOKKEEPER-626: BOOKIE_EXTRA_OPTS are added twice (vinay via fpj)\n \n         BOOKKEEPER-619: Bookie should not create local cookie files if zookeeper is uninitialized (ivank)\n+        BOOKKEEPER-313: Bookkeeper shutdown call from Bookie thread is not shutting down server (vinay via ivank)\n \n       hedwig-server:\n "},{"sha":"b3c72d331e386ec00664df3c7d1094479fc125f8","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java","status":"modified","additions":23,"deletions":16,"changes":39,"blob_url":"https://github.com/apache/bookkeeper/blob/b1feb95cd481305201eaad28536eccbdfdea894e/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java","raw_url":"https://github.com/apache/bookkeeper/raw/b1feb95cd481305201eaad28536eccbdfdea894e/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java?ref=b1feb95cd481305201eaad28536eccbdfdea894e","patch":"@@ -791,6 +791,10 @@ public void process(WatchedEvent event) {\n      */\n     @VisibleForTesting\n     public void transitionToReadOnlyMode() {\n+        if (shuttingdown == true) {\n+            return;\n+        }\n+\n         if (!readOnly.compareAndSet(false, true)) {\n             return;\n         }\n@@ -910,19 +914,18 @@ public void run() {\n     // Triggering the Bookie shutdown in its own thread,\n     // because shutdown can be called from sync thread which would be\n     // interrupted by shutdown call.\n+    AtomicBoolean shutdownTriggered = new AtomicBoolean(false);\n     void triggerBookieShutdown(final int exitCode) {\n-        Thread shutdownThread = new Thread() {\n+        if (!shutdownTriggered.compareAndSet(false, true)) {\n+            return;\n+        }\n+        LOG.info(\"Triggering shutdown of Bookie-{} with exitCode {}\",\n+                 conf.getBookiePort(), exitCode);\n+        new Thread(\"BookieShutdownTrigger\") {\n             public void run() {\n                 Bookie.this.shutdown(exitCode);\n             }\n-        };\n-        shutdownThread.start();\n-        try {\n-            shutdownThread.join();\n-        } catch (InterruptedException e) {\n-            Thread.currentThread().interrupt();\n-            LOG.debug(\"InterruptedException while waiting for shutdown. Not a problem!!\");\n-        }\n+        }.start();\n     }\n \n     // provided a public shutdown method for other caller\n@@ -937,16 +940,12 @@ synchronized int shutdown(int exitCode) {\n         try {\n             if (running) { // avoid shutdown twice\n                 // the exitCode only set when first shutdown usually due to exception found\n+                LOG.info(\"Shutting down Bookie-{} with exitCode {}\",\n+                         conf.getBookiePort(), exitCode);\n                 this.exitCode = exitCode;\n                 // mark bookie as in shutting down progress\n                 shuttingdown = true;\n \n-                // Shutdown the ZK client\n-                if(zk != null) zk.close();\n-\n-                //Shutdown disk checker\n-                ledgerDirsManager.shutdown();\n-\n                 // Shutdown journal\n                 journal.shutdown();\n                 this.join();\n@@ -962,7 +961,15 @@ synchronized int shutdown(int exitCode) {\n                 } catch (IOException ie) {\n                     LOG.error(\"Failed to close active ledger manager : \", ie);\n                 }\n-                // setting running to false here, so watch thread in bookie server know it only after bookie shut down\n+\n+                //Shutdown disk checker\n+                ledgerDirsManager.shutdown();\n+\n+                // Shutdown the ZK client\n+                if(zk != null) zk.close();\n+\n+                // setting running to false here, so watch thread\n+                // in bookie server know it only after bookie shut down\n                 running = false;\n             }\n         } catch (InterruptedException ie) {"},{"sha":"0bea2d297e04802a3ed8971145165958f0d4b69c","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieShutdownTest.java","status":"added","additions":71,"deletions":0,"changes":71,"blob_url":"https://github.com/apache/bookkeeper/blob/b1feb95cd481305201eaad28536eccbdfdea894e/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieShutdownTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/b1feb95cd481305201eaad28536eccbdfdea894e/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieShutdownTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/BookieShutdownTest.java?ref=b1feb95cd481305201eaad28536eccbdfdea894e","patch":"@@ -0,0 +1,71 @@\n+/*\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ *\n+ */\n+package org.apache.bookkeeper.bookie;\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.bookkeeper.conf.ServerConfiguration;\n+import org.apache.bookkeeper.test.BookKeeperClusterTestCase;\n+import org.junit.Test;\n+\n+public class BookieShutdownTest extends BookKeeperClusterTestCase {\n+\n+    public BookieShutdownTest() {\n+        super(1);\n+    }\n+\n+    /**\n+     * Test whether Bookie can be shutdown when the call comes inside bookie thread.\n+     * \n+     * @throws Exception\n+     */\n+    @Test\n+    public void testBookieShutdownFromBookieThread() throws Exception {\n+        ServerConfiguration conf = bsConfs.get(0);\n+        killBookie(0);\n+        final CountDownLatch latch = new CountDownLatch(1);\n+        final CountDownLatch shutdownComplete = new CountDownLatch(1);\n+        Bookie bookie = new Bookie(conf) {\n+            @Override\n+            public void run() {\n+                try {\n+                    latch.await();\n+                } catch (InterruptedException e) {\n+                    // Ignore\n+                }\n+                triggerBookieShutdown(ExitCode.BOOKIE_EXCEPTION);\n+            }\n+\n+            @Override\n+            synchronized int shutdown(int exitCode) {\n+                super.shutdown(exitCode);\n+                shutdownComplete.countDown();\n+                return exitCode;\n+            }\n+        };\n+        bookie.start();\n+        // after 1 sec stop .\n+        Thread.sleep(1000);\n+        latch.countDown();\n+        shutdownComplete.await(5000, TimeUnit.MILLISECONDS);\n+    }\n+}"}]}

