{"sha":"b6f33e49d0671a5b982bcb3613c5c9844f6aec8b","node_id":"MDY6Q29tbWl0MTU3NTk1NjpiNmYzM2U0OWQwNjcxYTViOTgyYmNiMzYxM2M1Yzk4NDRmNmFlYzhi","commit":{"author":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2014-08-14T06:15:59Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2014-08-14T06:15:59Z"},"message":"BOOKKEEPER-774: Flaky test org.apache.bookkeeper.test.ReadOnlyBookieTest.testBookieShouldTurnWritableFromReadOnly (sijie)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1617888 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"54068cbff5cad0ecf2c63aba8f4af47121c3eef5","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/54068cbff5cad0ecf2c63aba8f4af47121c3eef5"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/b6f33e49d0671a5b982bcb3613c5c9844f6aec8b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/b6f33e49d0671a5b982bcb3613c5c9844f6aec8b","html_url":"https://github.com/apache/bookkeeper/commit/b6f33e49d0671a5b982bcb3613c5c9844f6aec8b","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/b6f33e49d0671a5b982bcb3613c5c9844f6aec8b/comments","author":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"e30e116fc65088aad428b4151e1ab39c73c99676","url":"https://api.github.com/repos/apache/bookkeeper/commits/e30e116fc65088aad428b4151e1ab39c73c99676","html_url":"https://github.com/apache/bookkeeper/commit/e30e116fc65088aad428b4151e1ab39c73c99676"}],"stats":{"total":10,"additions":9,"deletions":1},"files":[{"sha":"511b358c52f26c7e55257a654eda4a2f009656a6","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/b6f33e49d0671a5b982bcb3613c5c9844f6aec8b/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/b6f33e49d0671a5b982bcb3613c5c9844f6aec8b/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=b6f33e49d0671a5b982bcb3613c5c9844f6aec8b","patch":"@@ -210,6 +210,8 @@ Trunk (unreleased changes)\n \n         BOOKKEEPER-746: 5 new shell commands. List ledgers, list metadata, list underreplicated, show auditor and simpletest (ivank)\n \n+        BOOKKEEPER-774: Flaky test org.apache.bookkeeper.test.ReadOnlyBookieTest.testBookieShouldTurnWritableFromReadOnly (sijie)\n+\n       bookkeeper-benchmark:\n \n         BOOKKEEPER-768: fix typo 'seconds' to milliseconds in benchmark output (jialin via sijie)"},{"sha":"0e052b527e215da193a4faa4ce56262344324900","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/EntryLogger.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/apache/bookkeeper/blob/b6f33e49d0671a5b982bcb3613c5c9844f6aec8b/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/EntryLogger.java","raw_url":"https://github.com/apache/bookkeeper/raw/b6f33e49d0671a5b982bcb3613c5c9844f6aec8b/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/EntryLogger.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/EntryLogger.java?ref=b6f33e49d0671a5b982bcb3613c5c9844f6aec8b","patch":"@@ -362,21 +362,27 @@ synchronized void rollLog() throws IOException {\n      * Creates a new log file\n      */\n     void createNewLog() throws IOException {\n+        // first tried to create a new log channel. add current log channel to ToFlush list only when\n+        // there is a new log channel. it would prevent that a log channel is referenced by both\n+        // *logChannel* and *ToFlush* list.\n         if (null != logChannel) {\n             if (null == logChannelsToFlush) {\n                 logChannelsToFlush = new LinkedList<BufferedLogChannel>();\n             }\n             // flush the internal buffer back to filesystem but not sync disk\n             // so the readers could access the data from filesystem.\n             logChannel.flush(false);\n+            BufferedLogChannel newLogChannel = entryLoggerAllocator.createNewLog();\n             logChannelsToFlush.add(logChannel);\n             LOG.info(\"Flushing entry logger {} back to filesystem, pending for syncing entry loggers : {}.\",\n                     logChannel.getLogId(), logChannelsToFlush);\n             for (EntryLogListener listener : listeners) {\n                 listener.onRotateEntryLog();\n             }\n+            logChannel = newLogChannel;\n+        } else {\n+            logChannel = entryLoggerAllocator.createNewLog();\n         }\n-        logChannel = entryLoggerAllocator.createNewLog();\n     }\n \n     /**"}]}

