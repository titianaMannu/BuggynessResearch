{"sha":"be155aa0c61f6b7bc0bf3d4f2ea56a9b97e590bf","node_id":"MDY6Q29tbWl0MTU3NTk1NjpiZTE1NWFhMGM2MWY2YjdiYzBiZjNkNGYyZWE1NmE5Yjk3ZTU5MGJm","commit":{"author":{"name":"Flavio Paiva Junqueira","email":"fpj@apache.org","date":"2012-12-11T10:15:19Z"},"committer":{"name":"Flavio Paiva Junqueira","email":"fpj@apache.org","date":"2012-12-11T10:15:19Z"},"message":"BOOKKEEPER-491: Hedwig doc for configuration (fpj, sijie via fpj)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1420069 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"7ba1b2964f21a9b8d79fbac28b8050b8669925ba","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/7ba1b2964f21a9b8d79fbac28b8050b8669925ba"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/be155aa0c61f6b7bc0bf3d4f2ea56a9b97e590bf","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/be155aa0c61f6b7bc0bf3d4f2ea56a9b97e590bf","html_url":"https://github.com/apache/bookkeeper/commit/be155aa0c61f6b7bc0bf3d4f2ea56a9b97e590bf","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/be155aa0c61f6b7bc0bf3d4f2ea56a9b97e590bf/comments","author":{"login":"fpj","id":572920,"node_id":"MDQ6VXNlcjU3MjkyMA==","avatar_url":"https://avatars.githubusercontent.com/u/572920?v=4","gravatar_id":"","url":"https://api.github.com/users/fpj","html_url":"https://github.com/fpj","followers_url":"https://api.github.com/users/fpj/followers","following_url":"https://api.github.com/users/fpj/following{/other_user}","gists_url":"https://api.github.com/users/fpj/gists{/gist_id}","starred_url":"https://api.github.com/users/fpj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fpj/subscriptions","organizations_url":"https://api.github.com/users/fpj/orgs","repos_url":"https://api.github.com/users/fpj/repos","events_url":"https://api.github.com/users/fpj/events{/privacy}","received_events_url":"https://api.github.com/users/fpj/received_events","type":"User","site_admin":false},"committer":{"login":"fpj","id":572920,"node_id":"MDQ6VXNlcjU3MjkyMA==","avatar_url":"https://avatars.githubusercontent.com/u/572920?v=4","gravatar_id":"","url":"https://api.github.com/users/fpj","html_url":"https://github.com/fpj","followers_url":"https://api.github.com/users/fpj/followers","following_url":"https://api.github.com/users/fpj/following{/other_user}","gists_url":"https://api.github.com/users/fpj/gists{/gist_id}","starred_url":"https://api.github.com/users/fpj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fpj/subscriptions","organizations_url":"https://api.github.com/users/fpj/orgs","repos_url":"https://api.github.com/users/fpj/repos","events_url":"https://api.github.com/users/fpj/events{/privacy}","received_events_url":"https://api.github.com/users/fpj/received_events","type":"User","site_admin":false},"parents":[{"sha":"77efd1c00100b533d67e716579b439e94d4050e3","url":"https://api.github.com/repos/apache/bookkeeper/commits/77efd1c00100b533d67e716579b439e94d4050e3","html_url":"https://github.com/apache/bookkeeper/commit/77efd1c00100b533d67e716579b439e94d4050e3"}],"stats":{"total":268,"additions":247,"deletions":21},"files":[{"sha":"a0590d0b7df2b4db07b74459f6227d111dd98142","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/be155aa0c61f6b7bc0bf3d4f2ea56a9b97e590bf/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/be155aa0c61f6b7bc0bf3d4f2ea56a9b97e590bf/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=be155aa0c61f6b7bc0bf3d4f2ea56a9b97e590bf","patch":"@@ -188,6 +188,8 @@ Trunk (unreleased changes)\n \n       BOOKKEEPER-476: Log to file during tests (ivank via fpj)\n \n+      BOOKKEEPER-491: Hedwig doc for configuration (fpj, sijie via fpj)\n+\n       bookkeeper-server:\n \n         BOOKKEEPER-328: Bookie DeathWatcher is missing thread name (Rakesh via sijie)"},{"sha":"98b2e1f80a441b19cbd091e48787821a1ba9ac9d","filename":"doc/hedwigParams.textile","status":"added","additions":91,"deletions":0,"changes":91,"blob_url":"https://github.com/apache/bookkeeper/blob/be155aa0c61f6b7bc0bf3d4f2ea56a9b97e590bf/doc/hedwigParams.textile","raw_url":"https://github.com/apache/bookkeeper/raw/be155aa0c61f6b7bc0bf3d4f2ea56a9b97e590bf/doc/hedwigParams.textile","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/doc/hedwigParams.textile?ref=be155aa0c61f6b7bc0bf3d4f2ea56a9b97e590bf","patch":"@@ -0,0 +1,91 @@\n+Notice: Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License. You may\n+        obtain a copy of the License at \"http://www.apache.org/licenses/LICENSE-2.0\":http://www.apache.org/licenses/LICENSE-2.0.\n+        .        \n+        Unless required by applicable law or agreed to in writing,\n+        software distributed under the License is distributed on an \"AS IS\"\n+        BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+        implied. See the License for the specific language governing permissions\n+        and limitations under the License.\n+        .\n+        \n+h1. Hedwig configuration parameters        \n+        \n+This page contains detailed information about configuration parameters used for Hubs, Regions, ZooKeeper, and BookKeeper.\n+        \n+h2. Hedwig server configuration parameters\n+\n+Please also refer to the configuration file that comes with the distribution: _hedwig-server/conf/hw_server.conf_.  \n+\n+h3. Region related parameters\n+\n+| @region@ | Region identifier. Default is \"standalone\". |\n+| @regions@ | List of region identifiers, space separated. Default is empty. |\n+| @inter_region_ssl_enabled (deprecated)@ | Enables SSL across regions. Default is false. *Since this parameter has been deprecated, use __ssl_enabled__ in _hedwig-server/conf/hw_region_client.conf_ to enable SSL across regions instead.* |\n+| @retry_remote_subscribe_thread_run_interval@ | This parameter is used to determine how often we run a thread to retry those failed remote subscriptions in asynchronous mode (in milliseconds). Default is 2 minutes. |\n+\n+h3. Hub server parameters\n+\n+| @standalone@ | Sets the hub server to run in standalone mode (no regions). Default is false. |\n+| @server_port@ | Sets the server port that receives client connections. Default is 4080. |\n+| @ssl_enabled@ | Enables SSL. Default is false. |\n+| @ssl_server_port@ | Sets the server port for SSL connections. Default is 9876. | \n+| @password@ | Password used for pkcs12 certificate.. Default is the empty string. |\n+| @cert_name@ | Sets the name of the SSL certificate if available as a resource. Default is the null string. |\n+| @cert_path@ | Sets the path to the SSL certificate if it is available as a file. Default is the null string. |\n+\n+h3. Read-ahead cache parameters\n+\n+| @readahead_enabled@ | Enables read-ahead. Enabled by default. | \n+| @readahead_count@ | Number of messages to read ahead. Default is 10. |\n+| @readahead_size@ | Maximum number of bytes to read during a scan. Default is 4 megabytes. |\n+\n+bq. Upon a range scan request for a given topic, two hints are provided as to when scanning should stop: the number of messages scanned and the total size of messages scanned. Scanning stops whenever one of these limits is exceeded.\n+\n+| @cache_size@ | Sets the size of the read-ahead cache. Default is the smallest of 2G or half the heap size. | \n+| @scan_backoff_ms@ | The backoff time (in milliseconds) to retry scans after failures. Default value is 1s (1000ms). Default is 1s. |\n+| @num_readahead_cache_threads@ | Sets the number of threads to be used for the read-ahead mechanism. Default is the number of cores as returned with a call to <code>Runtime.getRuntime().availableProcessors()</code>.|\n+\n+h3. Publish and subscription parameters \n+\n+| @max_message_size@ | Sets the maximum message size. Default is 1.2 megabytes. |\n+| @default_message_window_size@ | This parameter is used for setting the default maximum number of messages that can be delivered to a subscriber without being consumed. We pause delivery to a subscriber when reaching the window size. Default is unlimited (0). |\n+| @consume_interval@ | Sets the number of messages consumed before persisting information about consumed messages. A value greater than one avoids persisting information about consumed messages upon every consumed message. Default is 50.|\n+| @retention_secs@ | the interval to release a topic. If this parameter is greater than zero, then schedule a task to release an owned topic. Default is 0 (never released).\n+| @messages_consumed_thread_run_interval@ | Time interval (in milliseconds) to run messages consumed timer task to\n+delete those consumed ledgers in BookKeeper. Default is 1 minute (60,000 ms). |\n+\n+\n+h3. ZooKeeper parameters\n+ \n+| @zk_host@ | Sets the ZooKeeper list of servers. Default is localhost:2181. |\n+| @zk_timeout@ | Sets the ZooKeeper session timeout. Default is 2s. |\n+\n+h3. BookKeeper parameters\n+\n+| @bk_ensemble_size@ | Sets the ensemble size. Default is 3. |\n+| @bk_write_quorum_size@ | Sets the write quorum size. Default is 2. |\n+| @bk_ack_quorum_size@ | Sets the ack quorum size. Default is 2. |\n+\n+bq. Note that the ack quorum size must be equal or smaller than the write quorum size.\n+\n+| @max_entries_per_ledger@ | Maximum number of entries before we roll a ledger. Default is unlimited (0). |\n+\n+h3. Metadata parameters\n+\n+| @zk_prefix@ | Sets the ZooKeeper path prefix. Default is _/hedwig_. |\n+| @metadata_manager_based_topic_manager_enabled@ | Enables the use of a metadata manager for topic management. Default is false. |\n+| @metadata_manager_factory_class@ | Sets the default factory for the metadata manager. Default is null. |\n+\n+h2. Region manager configuration parameters\n+\n+Please also refer to the configuration file that comes with the distribution: _hedwig-server/conf/hw_region_client.conf_.\n+\n+| @ssl_enabled@ | This parameter is a boolean flag indicating if communication with the server should be done via SSL for encryption. The Hedwig server hubs also need to be SSL enabled for this to work. Default value is false. |\n+| @max_message_size@ | Sets the maximum message size in bytes. The default value is 2 MB (2097152). |\n+| @max_server_redirects@ | Sets the maximum number of redirects we permit before signaling an error. Default value is 2. |\n+| @auto_send_consume_message_enabled@ | A flag indicating whether the client library should automatically send consume messages to the server. Default value is true. |\n+| @consumed_messages_buffer_size@ | Sets the number of messages we buffer before sending a consume message to the server. Default value is 5. |\n+| @max_outstanding_messages@ | Support for client side throttling, sets the maximum number of outstanding messages. Default value is 10. |\n+| @server_ack_response_timeout@ | Sets the timeout (in milliseconds) before we error out any existing requests. Default value is 30s (30,000). |\n+        "},{"sha":"5763d16b0e9c7e2f0c47bb9304357300678b43a4","filename":"doc/index.textile","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/bookkeeper/blob/be155aa0c61f6b7bc0bf3d4f2ea56a9b97e590bf/doc/index.textile","raw_url":"https://github.com/apache/bookkeeper/raw/be155aa0c61f6b7bc0bf3d4f2ea56a9b97e590bf/doc/index.textile","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/doc/index.textile?ref=be155aa0c61f6b7bc0bf3d4f2ea56a9b97e590bf","patch":"@@ -37,6 +37,7 @@ h1. Apache Hedwig documentation\n * \"Building Hedwig, or how to set up Hedwig\":./hedwigBuild.html\n * \"User's Guide, or how to program against the Hedwig API and how to run it\":./hedwigUser.html\n * \"Developer's Guide, or Hedwig internals and hacking details\":./hedwigDesign.html\n+* \"Configuration parameters\":./hedwigParams.html\n * \"Message Filtering\":./hedwigMessageFilter.html\n \n h2. Hedwig Admin & Ops"},{"sha":"6bf23b5be0d23a019eaa814ee5925819b5f11f15","filename":"hedwig-server/conf/hw_server.conf","status":"modified","additions":13,"deletions":2,"changes":15,"blob_url":"https://github.com/apache/bookkeeper/blob/be155aa0c61f6b7bc0bf3d4f2ea56a9b97e590bf/hedwig-server/conf/hw_server.conf","raw_url":"https://github.com/apache/bookkeeper/raw/be155aa0c61f6b7bc0bf3d4f2ea56a9b97e590bf/hedwig-server/conf/hw_server.conf","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/conf/hw_server.conf?ref=be155aa0c61f6b7bc0bf3d4f2ea56a9b97e590bf","patch":"@@ -51,6 +51,9 @@ ssl_enabled=false\n # Password used for pkcs12 certificate.\n # password=\n \n+#######################################\n+# Publish and subscription parameters\n+#######################################\n # Max Message Size that a hub server could accept\n # max_message_size=1258291 \n \n@@ -124,6 +127,11 @@ ssl_enabled=false\n # Default value is 1000.\n # scan_backoff_ms=1000\n \n+# Sets the number of threads to be used for the read-ahead mechanism.\n+# Default is the number of cores as returned with a call to \n+# <code>Runtime.getRuntime().availableProcessors()</code>.\n+# num_readahead_cache_threads=\n+\n ################################\n # Metadata Settings\n ################################\n@@ -146,5 +154,8 @@ ssl_enabled=false\n # Ensemble size of a ledger in BookKeeper. Default is 3.\n # bk_ensemble_size=3\n \n-# Quorum size of a ledger in BookKeeper. Default is 2.\n-# bk_quorum_size=2\n+# Write quorum size for a ledger in BookKeeper. Default is 2.\n+# bk_write_quorum_size=2\n+\n+# Ack quorum size for a ledger in BookKeeper. Default is 2.\n+# bk_ack_quorum_size=2"},{"sha":"e9273de798a691e54c9953522196f06540da67f2","filename":"hedwig-server/src/main/java/org/apache/hedwig/server/common/ServerConfiguration.java","status":"modified","additions":140,"deletions":19,"changes":159,"blob_url":"https://github.com/apache/bookkeeper/blob/be155aa0c61f6b7bc0bf3d4f2ea56a9b97e590bf/hedwig-server/src/main/java/org/apache/hedwig/server/common/ServerConfiguration.java","raw_url":"https://github.com/apache/bookkeeper/raw/be155aa0c61f6b7bc0bf3d4f2ea56a9b97e590bf/hedwig-server/src/main/java/org/apache/hedwig/server/common/ServerConfiguration.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/main/java/org/apache/hedwig/server/common/ServerConfiguration.java?ref=be155aa0c61f6b7bc0bf3d4f2ea56a9b97e590bf","patch":"@@ -141,32 +141,67 @@ public ByteString getMyRegionByteString() {\n         return myRegionByteString;\n     }\n \n+    /**\n+     * Maximum number of messages to read ahead. Default is 10.\n+     * \n+     * @return int\n+     */\n     public int getReadAheadCount() {\n         return conf.getInt(READAHEAD_COUNT, 10);\n     }\n \n+    /**\n+     * Maximum number of bytes to read ahead. Default is 4MB.\n+     * \n+     * @return long\n+     */\n     public long getReadAheadSizeBytes() {\n         return conf.getLong(READAHEAD_SIZE, 4 * 1024 * 1024); // 4M\n     }\n \n+    /**\n+     * Maximum cache size. By default is the smallest of 2G or\n+     * half the heap size.\n+     * \n+     * @return long\n+     */\n     public long getMaximumCacheSize() {\n         // 2G or half of the maximum amount of memory the JVM uses\n         return conf.getLong(CACHE_SIZE, Math.min(2 * 1024L * 1024L * 1024L, Runtime.getRuntime().maxMemory() / 2));\n     }\n \n-    // After a scan of a log fails, how long before we retry (in msec)\n+    /**\n+     * After a scan of a log fails, how long before we retry (in msec)\n+     * \n+     * @return long\n+     */\n     public long getScanBackoffPeriodMs() {\n         return conf.getLong(SCAN_BACKOFF_MSEC, 1000);\n     }\n-\n+    \n+    /**\n+     * Returns server port.\n+     * \n+     * @return int\n+     */\n     public int getServerPort() {\n         return conf.getInt(SERVER_PORT, 4080);\n     }\n \n+    /**\n+     * Returns SSL server port.\n+     * \n+     * @return int\n+     */\n     public int getSSLServerPort() {\n         return conf.getInt(SSL_SERVER_PORT, 9876);\n     }\n \n+    /**\n+     * Returns ZooKeeper path prefix.\n+     * \n+     * @return string\n+     */\n     public String getZkPrefix() {\n         return conf.getString(ZK_PREFIX, \"/hedwig\");\n     }\n@@ -205,37 +240,70 @@ public HedwigSocketAddress getServerAddr() {\n         return myServerAddress;\n     }\n \n+    /**\n+     * Return ZooKeeper list of servers. Default is localhost.\n+     * \n+     * @return String\n+     */\n     public String getZkHost() {\n         return conf.getString(ZK_HOST, \"localhost\");\n     }\n \n+    /**\n+     * Return ZooKeeper session timeout. Default is 2s.\n+     * \n+     * @return int\n+     */\n     public int getZkTimeout() {\n         return conf.getInt(ZK_TIMEOUT, 2000);\n     }\n \n+    /** \n+     * Returns true if read-ahead enabled. Default is true.\n+     * \n+     * @return boolean\n+     */\n     public boolean getReadAheadEnabled() {\n         return conf.getBoolean(READAHEAD_ENABLED, true)\n             || conf.getBoolean(\"readhead_enabled\");\n         // the key was misspelt in a previous version, so compensate here\n     }\n \n+    /**\n+     * Returns true if standalone. Default is false.\n+     * \n+     * @return boolean\n+     */\n     public boolean isStandalone() {\n         return conf.getBoolean(STANDALONE, false);\n     }\n \n+    /**\n+     * Returns list of regions. \n+     * \n+     * @return List<String>\n+     */\n     public List<String> getRegions() {\n         if (regionList == null) {\n             refreshRegionList();\n         }\n         return regionList;\n     }\n \n-    // This is the name of the SSL certificate if available as a resource.\n+    /**\n+     *  Returns the name of the SSL certificate if available as a resource.\n+     * \n+     * @return String\n+     */\n     public String getCertName() {\n         return conf.getString(CERT_NAME, \"\");\n     }\n \n-    // This is the path to the SSL certificate if it is available as a file.\n+    /**\n+     * This is the path to the SSL certificate if it is available as a file.\n+     * \n+     * @return String\n+     */\n     public String getCertPath() {\n         return conf.getString(CERT_PATH, \"\");\n     }\n@@ -255,57 +323,110 @@ public InputStream getCertStream() throws FileNotFoundException, ConfigurationEx\n             throw new ConfigurationException(\"SSL Certificate configuration does not have resource name or path set!\");\n     }\n \n+    /**\n+     * Returns the password used for BookKeeper ledgers. Default\n+     * is the empty string.\n+     * \n+     * @return\n+     */\n     public String getPassword() {\n         return conf.getString(PASSWORD, \"\");\n     }\n \n+    /**\n+     * Returns true if SSL is enabled. Default is false.\n+     * \n+     * @return boolean\n+     */\n     public boolean isSSLEnabled() {\n         return conf.getBoolean(SSL_ENABLED, false);\n     }\n \n+    /**\n+     * Gets the number of messages consumed before persisting\n+     * information about consumed messages. A value greater than\n+     * one avoids persisting information about consumed messages\n+     * upon every consumed message. Default is 50.\n+     * \n+     * @return int\n+     */\n     public int getConsumeInterval() {\n         return conf.getInt(CONSUME_INTERVAL, 50);\n     }\n \n+    /**\n+     * Returns the interval to release a topic. If this\n+     * parameter is greater than zero, then schedule a\n+     * task to release an owned topic. Default is 0 (never released).\n+     * \n+     * @return int\n+     */\n     public int getRetentionSecs() {\n         return conf.getInt(RETENTION_SECS, 0);\n     }\n \n+    /**\n+     * True if SSL is enabled across regions.\n+     * \n+     * @return boolean\n+     */\n     public boolean isInterRegionSSLEnabled() {\n         return conf.getBoolean(INTER_REGION_SSL_ENABLED, false);\n     }\n \n-    // This parameter is used to determine how often we run the\n-    // SubscriptionManager's Messages Consumed timer task thread (in\n-    // milliseconds).\n+    /**\n+     * This parameter is used to determine how often we run the \n+     * SubscriptionManager's Messages Consumed timer task thread \n+     * (in milliseconds).\n+     * \n+     * @return int\n+     */\n     public int getMessagesConsumedThreadRunInterval() {\n         return conf.getInt(MESSAGES_CONSUMED_THREAD_RUN_INTERVAL, 60000);\n     }\n \n-    // This parameter is used to determine how often we run a thread\n-    // to retry those failed remote subscriptions in asynchronous mode\n-    // (in milliseconds).\n+    /**\n+     * This parameter is used to determine how often we run a thread\n+     * to retry those failed remote subscriptions in asynchronous mode\n+     * (in milliseconds).\n+     * \n+     * @return int\n+     */\n     public int getRetryRemoteSubscribeThreadRunInterval() {\n         return conf.getInt(RETRY_REMOTE_SUBSCRIBE_THREAD_RUN_INTERVAL, 120000);\n     }\n \n-    // This parameter is for setting the default maximum number of messages which\n-    // can be delivered to a subscriber without being consumed.\n-    // we pause messages delivery to a subscriber when reaching the window size\n+    /**\n+     * This parameter is for setting the default maximum number of messages which\n+     * can be delivered to a subscriber without being consumed.\n+     * we pause messages delivery to a subscriber when reaching the window size\n+     * \n+     * @return int\n+     */\n     public int getDefaultMessageWindowSize() {\n         return conf.getInt(DEFAULT_MESSAGE_WINDOW_SIZE, 0);\n     }\n \n-    // This parameter is used when Bookkeeper is the persistence store\n-    // and indicates what the ensemble size is (i.e. how many bookie\n-    // servers to stripe the ledger entries across).\n+    /**\n+     * This parameter is used when Bookkeeper is the persistence\n+     * store and indicates what the ensemble size is (i.e. how\n+     * many bookie servers to stripe the ledger entries across).\n+     * \n+     * @return int\n+     */\n     public int getBkEnsembleSize() {\n         return conf.getInt(BK_ENSEMBLE_SIZE, 3);\n     }\n \n-    // This parameter is used when Bookkeeper is the persistence store\n-    // and indicates what the quorum size is (i.e. how many redundant\n-    // copies of each ledger entry is written).\n+\n+    /**\n+     * This parameter is used when Bookkeeper is the persistence store\n+     * and indicates what the quorum size is (i.e. how many redundant\n+     * copies of each ledger entry is written).\n+     * \n+     * @return int\n+     */\n+    @Deprecated\n     protected int getBkQuorumSize() {\n         return conf.getInt(BK_QUORUM_SIZE, 2);\n     }"}]}

