{"sha":"c32edf860040ebba19c6c57d226b12cd487a00d2","node_id":"MDY6Q29tbWl0MTU3NTk1NjpjMzJlZGY4NjAwNDBlYmJhMTljNmM1N2QyMjZiMTJjZDQ4N2EwMGQy","commit":{"author":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2012-05-10T09:57:39Z"},"committer":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2012-05-10T09:57:39Z"},"message":"BOOKKEEPER-245: Intermittent failures in PersistanceManager tests (ivank)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1336569 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"05c43918726da589d5959783faad018331118e72","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/05c43918726da589d5959783faad018331118e72"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/c32edf860040ebba19c6c57d226b12cd487a00d2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/c32edf860040ebba19c6c57d226b12cd487a00d2","html_url":"https://github.com/apache/bookkeeper/commit/c32edf860040ebba19c6c57d226b12cd487a00d2","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/c32edf860040ebba19c6c57d226b12cd487a00d2/comments","author":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"committer":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"parents":[{"sha":"5f25edeba1cbf5de489e1f5a3070188f0163b51b","url":"https://api.github.com/repos/apache/bookkeeper/commits/5f25edeba1cbf5de489e1f5a3070188f0163b51b","html_url":"https://github.com/apache/bookkeeper/commit/5f25edeba1cbf5de489e1f5a3070188f0163b51b"}],"stats":{"total":16,"additions":14,"deletions":2},"files":[{"sha":"74fb7faa1ac647b9a0677c278d06a1faa7c7f21f","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/c32edf860040ebba19c6c57d226b12cd487a00d2/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/c32edf860040ebba19c6c57d226b12cd487a00d2/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=c32edf860040ebba19c6c57d226b12cd487a00d2","patch":"@@ -122,6 +122,8 @@ Trunk (unreleased changes)\n \n         BOOKKEEPER-215: Deadlock occurs under high load (sijie via ivank)\n \n+        BOOKKEEPER-245: Intermittent failures in PersistanceManager tests (ivank)\n+\n       bookkeeper-benchmark/\n \t\n \tBOOKKEEPER-207: BenchBookie doesn't run correctly (ivank via fpj)"},{"sha":"c7e41c9fbf5e9680c06303469c5848e4d8e51b88","filename":"hedwig-server/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/c32edf860040ebba19c6c57d226b12cd487a00d2/hedwig-server/pom.xml","raw_url":"https://github.com/apache/bookkeeper/raw/c32edf860040ebba19c6c57d226b12cd487a00d2/hedwig-server/pom.xml","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/pom.xml?ref=c32edf860040ebba19c6c57d226b12cd487a00d2","patch":"@@ -58,7 +58,7 @@\n     <dependency>\n     \t<groupId>org.apache.derby</groupId>\n     \t<artifactId>derby</artifactId>\n-    \t<version>10.4.2.0</version>\n+    \t<version>10.8.2.2</version>\n     \t<scope>runtime</scope>\n     </dependency>\n     <dependency>"},{"sha":"216cd8aa70349da6adc004880e286975b8967f06","filename":"hedwig-server/src/test/java/org/apache/hedwig/server/persistence/TestBookkeeperPersistenceManagerWhiteBox.java","status":"modified","additions":11,"deletions":1,"changes":12,"blob_url":"https://github.com/apache/bookkeeper/blob/c32edf860040ebba19c6c57d226b12cd487a00d2/hedwig-server/src/test/java/org/apache/hedwig/server/persistence/TestBookkeeperPersistenceManagerWhiteBox.java","raw_url":"https://github.com/apache/bookkeeper/raw/c32edf860040ebba19c6c57d226b12cd487a00d2/hedwig-server/src/test/java/org/apache/hedwig/server/persistence/TestBookkeeperPersistenceManagerWhiteBox.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/test/java/org/apache/hedwig/server/persistence/TestBookkeeperPersistenceManagerWhiteBox.java?ref=c32edf860040ebba19c6c57d226b12cd487a00d2","patch":"@@ -28,6 +28,7 @@\n import org.junit.After;\n import org.junit.Before;\n import org.junit.Test;\n+import org.apache.hedwig.util.Either;\n \n import com.google.protobuf.ByteString;\n import org.apache.hedwig.HelperMethods;\n@@ -114,11 +115,20 @@ public void testNonEmptyDirtyLedger() throws Exception {\n             index++;\n         }\n \n+        // ensure the bkpm has the topic before scanning\n+        StubCallback<Void> stubCallback = new StubCallback<Void>();\n+        bkpm.acquiredTopic(topic, stubCallback, null);\n+\n         // Lets scan now\n         StubScanCallback scanCallback = new StubScanCallback();\n         bkpm.scanMessages(new RangeScanRequest(topic, 1, NUM_MESSAGES_TO_TEST, Long.MAX_VALUE, scanCallback, null));\n         for (int i = 0; i < messages.size(); i++) {\n-            Message scannedMessage = ConcurrencyUtils.take(scanCallback.queue).left();\n+            Either<Message,Exception> e = ConcurrencyUtils.take(scanCallback.queue);\n+            Message scannedMessage = e.left();\n+            if (scannedMessage == null) {\n+                throw e.right();\n+            }\n+\n             assertTrue(messages.get(i).getBody().equals(scannedMessage.getBody()));\n             assertEquals(i + 1, scannedMessage.getMsgId().getLocalComponent());\n         }"}]}

