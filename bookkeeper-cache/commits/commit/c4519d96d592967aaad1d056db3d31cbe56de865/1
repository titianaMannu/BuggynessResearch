{"sha":"c4519d96d592967aaad1d056db3d31cbe56de865","node_id":"MDY6Q29tbWl0MTU3NTk1NjpjNDUxOWQ5NmQ1OTI5NjdhYWFkMWQwNTZkYjNkMzFjYmU1NmRlODY1","commit":{"author":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2012-10-10T09:45:29Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2012-10-10T09:45:29Z"},"message":"BOOKKEEPER-415: Rename DeliveryThrottle to MessageWindowSize (ivank via sijie)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1396524 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"1b25bb826f9b44dc90f0cbba23d480e49a2cda51","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/1b25bb826f9b44dc90f0cbba23d480e49a2cda51"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/c4519d96d592967aaad1d056db3d31cbe56de865","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/c4519d96d592967aaad1d056db3d31cbe56de865","html_url":"https://github.com/apache/bookkeeper/commit/c4519d96d592967aaad1d056db3d31cbe56de865","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/c4519d96d592967aaad1d056db3d31cbe56de865/comments","author":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"e2487b794ef8d93a1d1380a62ffa212381930393","url":"https://api.github.com/repos/apache/bookkeeper/commits/e2487b794ef8d93a1d1380a62ffa212381930393","html_url":"https://github.com/apache/bookkeeper/commit/e2487b794ef8d93a1d1380a62ffa212381930393"}],"stats":{"total":347,"additions":176,"deletions":171},"files":[{"sha":"d5c80648afedd75521ba368cd66848776d700f3d","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/c4519d96d592967aaad1d056db3d31cbe56de865/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/c4519d96d592967aaad1d056db3d31cbe56de865/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=c4519d96d592967aaad1d056db3d31cbe56de865","patch":"@@ -174,6 +174,8 @@ Trunk (unreleased changes)\n \n         BOOKKEEPER-367: Server-Side Message Delivery Flow Control (sijie via ivank)\n \n+        BOOKKEEPER-415: Rename DeliveryThrottle to MessageWindowSize (ivank via sijie)\n+\n       hedwig-client:\n \n         BOOKKEEPER-306: Change C++ client to use gtest for testing (ivank via sijie)"},{"sha":"a4e416fe0892c51334aff1f5ac12f0ecc807ef71","filename":"hedwig-client/src/main/java/org/apache/hedwig/client/netty/NetUtils.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/bookkeeper/blob/c4519d96d592967aaad1d056db3d31cbe56de865/hedwig-client/src/main/java/org/apache/hedwig/client/netty/NetUtils.java","raw_url":"https://github.com/apache/bookkeeper/raw/c4519d96d592967aaad1d056db3d31cbe56de865/hedwig-client/src/main/java/org/apache/hedwig/client/netty/NetUtils.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-client/src/main/java/org/apache/hedwig/client/netty/NetUtils.java?ref=c4519d96d592967aaad1d056db3d31cbe56de865","patch":"@@ -192,9 +192,9 @@ public static InetSocketAddress getHostFromChannel(Channel channel) {\n             preferencesBuilder.setOptions(options.getOptions());\n         }\n \n-        // set delivery throttle value\n-        if (options.getDeliveryThrottleValue() > 0) {\n-            preferencesBuilder.setDeliveryThrottleValue(options.getDeliveryThrottleValue());\n+        // set message window size if set\n+        if (options.hasMessageWindowSize() && options.getMessageWindowSize() > 0) {\n+            preferencesBuilder.setMessageWindowSize(options.getMessageWindowSize());\n         }\n \n         return preferencesBuilder;"},{"sha":"639c44fd179d719b308cffeaf23524756f3dfbdb","filename":"hedwig-protocol/src/main/java/org/apache/hedwig/protocol/PubSubProtocol.java","status":"modified","additions":122,"deletions":123,"changes":245,"blob_url":"https://github.com/apache/bookkeeper/blob/c4519d96d592967aaad1d056db3d31cbe56de865/hedwig-protocol/src/main/java/org/apache/hedwig/protocol/PubSubProtocol.java","raw_url":"https://github.com/apache/bookkeeper/raw/c4519d96d592967aaad1d056db3d31cbe56de865/hedwig-protocol/src/main/java/org/apache/hedwig/protocol/PubSubProtocol.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-protocol/src/main/java/org/apache/hedwig/protocol/PubSubProtocol.java?ref=c4519d96d592967aaad1d056db3d31cbe56de865","patch":"@@ -5705,9 +5705,9 @@ public Builder clearMsg() {\n     boolean hasMessageFilter();\n     String getMessageFilter();\n     \n-    // optional uint32 deliveryThrottleValue = 4;\n-    boolean hasDeliveryThrottleValue();\n-    int getDeliveryThrottleValue();\n+    // optional uint32 messageWindowSize = 4;\n+    boolean hasMessageWindowSize();\n+    int getMessageWindowSize();\n   }\n   public static final class SubscriptionPreferences extends\n       com.google.protobuf.GeneratedMessage\n@@ -5793,21 +5793,21 @@ public String getMessageFilter() {\n       }\n     }\n     \n-    // optional uint32 deliveryThrottleValue = 4;\n-    public static final int DELIVERYTHROTTLEVALUE_FIELD_NUMBER = 4;\n-    private int deliveryThrottleValue_;\n-    public boolean hasDeliveryThrottleValue() {\n+    // optional uint32 messageWindowSize = 4;\n+    public static final int MESSAGEWINDOWSIZE_FIELD_NUMBER = 4;\n+    private int messageWindowSize_;\n+    public boolean hasMessageWindowSize() {\n       return ((bitField0_ & 0x00000008) == 0x00000008);\n     }\n-    public int getDeliveryThrottleValue() {\n-      return deliveryThrottleValue_;\n+    public int getMessageWindowSize() {\n+      return messageWindowSize_;\n     }\n     \n     private void initFields() {\n       options_ = org.apache.hedwig.protocol.PubSubProtocol.Map.getDefaultInstance();\n       messageBound_ = 0;\n       messageFilter_ = \"\";\n-      deliveryThrottleValue_ = 0;\n+      messageWindowSize_ = 0;\n     }\n     private byte memoizedIsInitialized = -1;\n     public final boolean isInitialized() {\n@@ -5831,7 +5831,7 @@ public void writeTo(com.google.protobuf.CodedOutputStream output)\n         output.writeBytes(3, getMessageFilterBytes());\n       }\n       if (((bitField0_ & 0x00000008) == 0x00000008)) {\n-        output.writeUInt32(4, deliveryThrottleValue_);\n+        output.writeUInt32(4, messageWindowSize_);\n       }\n       getUnknownFields().writeTo(output);\n     }\n@@ -5856,7 +5856,7 @@ public int getSerializedSize() {\n       }\n       if (((bitField0_ & 0x00000008) == 0x00000008)) {\n         size += com.google.protobuf.CodedOutputStream\n-          .computeUInt32Size(4, deliveryThrottleValue_);\n+          .computeUInt32Size(4, messageWindowSize_);\n       }\n       size += getUnknownFields().getSerializedSize();\n       memoizedSerializedSize = size;\n@@ -5993,7 +5993,7 @@ public Builder clear() {\n         bitField0_ = (bitField0_ & ~0x00000002);\n         messageFilter_ = \"\";\n         bitField0_ = (bitField0_ & ~0x00000004);\n-        deliveryThrottleValue_ = 0;\n+        messageWindowSize_ = 0;\n         bitField0_ = (bitField0_ & ~0x00000008);\n         return this;\n       }\n@@ -6052,7 +6052,7 @@ public Builder clone() {\n         if (((from_bitField0_ & 0x00000008) == 0x00000008)) {\n           to_bitField0_ |= 0x00000008;\n         }\n-        result.deliveryThrottleValue_ = deliveryThrottleValue_;\n+        result.messageWindowSize_ = messageWindowSize_;\n         result.bitField0_ = to_bitField0_;\n         onBuilt();\n         return result;\n@@ -6078,8 +6078,8 @@ public Builder mergeFrom(org.apache.hedwig.protocol.PubSubProtocol.SubscriptionP\n         if (other.hasMessageFilter()) {\n           setMessageFilter(other.getMessageFilter());\n         }\n-        if (other.hasDeliveryThrottleValue()) {\n-          setDeliveryThrottleValue(other.getDeliveryThrottleValue());\n+        if (other.hasMessageWindowSize()) {\n+          setMessageWindowSize(other.getMessageWindowSize());\n         }\n         this.mergeUnknownFields(other.getUnknownFields());\n         return this;\n@@ -6133,7 +6133,7 @@ public Builder mergeFrom(\n             }\n             case 32: {\n               bitField0_ |= 0x00000008;\n-              deliveryThrottleValue_ = input.readUInt32();\n+              messageWindowSize_ = input.readUInt32();\n               break;\n             }\n           }\n@@ -6289,23 +6289,23 @@ void setMessageFilter(com.google.protobuf.ByteString value) {\n         onChanged();\n       }\n       \n-      // optional uint32 deliveryThrottleValue = 4;\n-      private int deliveryThrottleValue_ ;\n-      public boolean hasDeliveryThrottleValue() {\n+      // optional uint32 messageWindowSize = 4;\n+      private int messageWindowSize_ ;\n+      public boolean hasMessageWindowSize() {\n         return ((bitField0_ & 0x00000008) == 0x00000008);\n       }\n-      public int getDeliveryThrottleValue() {\n-        return deliveryThrottleValue_;\n+      public int getMessageWindowSize() {\n+        return messageWindowSize_;\n       }\n-      public Builder setDeliveryThrottleValue(int value) {\n+      public Builder setMessageWindowSize(int value) {\n         bitField0_ |= 0x00000008;\n-        deliveryThrottleValue_ = value;\n+        messageWindowSize_ = value;\n         onChanged();\n         return this;\n       }\n-      public Builder clearDeliveryThrottleValue() {\n+      public Builder clearMessageWindowSize() {\n         bitField0_ = (bitField0_ & ~0x00000008);\n-        deliveryThrottleValue_ = 0;\n+        messageWindowSize_ = 0;\n         onChanged();\n         return this;\n       }\n@@ -7146,9 +7146,9 @@ public Builder clearForceAttach() {\n     boolean hasMessageFilter();\n     String getMessageFilter();\n     \n-    // optional uint32 deliveryThrottleValue = 6;\n-    boolean hasDeliveryThrottleValue();\n-    int getDeliveryThrottleValue();\n+    // optional uint32 messageWindowSize = 6;\n+    boolean hasMessageWindowSize();\n+    int getMessageWindowSize();\n     \n     // optional bool enableResubscribe = 7 [default = true];\n     boolean hasEnableResubscribe();\n@@ -7258,14 +7258,14 @@ public String getMessageFilter() {\n       }\n     }\n     \n-    // optional uint32 deliveryThrottleValue = 6;\n-    public static final int DELIVERYTHROTTLEVALUE_FIELD_NUMBER = 6;\n-    private int deliveryThrottleValue_;\n-    public boolean hasDeliveryThrottleValue() {\n+    // optional uint32 messageWindowSize = 6;\n+    public static final int MESSAGEWINDOWSIZE_FIELD_NUMBER = 6;\n+    private int messageWindowSize_;\n+    public boolean hasMessageWindowSize() {\n       return ((bitField0_ & 0x00000020) == 0x00000020);\n     }\n-    public int getDeliveryThrottleValue() {\n-      return deliveryThrottleValue_;\n+    public int getMessageWindowSize() {\n+      return messageWindowSize_;\n     }\n     \n     // optional bool enableResubscribe = 7 [default = true];\n@@ -7284,7 +7284,7 @@ private void initFields() {\n       messageBound_ = 0;\n       options_ = org.apache.hedwig.protocol.PubSubProtocol.Map.getDefaultInstance();\n       messageFilter_ = \"\";\n-      deliveryThrottleValue_ = 0;\n+      messageWindowSize_ = 0;\n       enableResubscribe_ = true;\n     }\n     private byte memoizedIsInitialized = -1;\n@@ -7315,7 +7315,7 @@ public void writeTo(com.google.protobuf.CodedOutputStream output)\n         output.writeBytes(5, getMessageFilterBytes());\n       }\n       if (((bitField0_ & 0x00000020) == 0x00000020)) {\n-        output.writeUInt32(6, deliveryThrottleValue_);\n+        output.writeUInt32(6, messageWindowSize_);\n       }\n       if (((bitField0_ & 0x00000040) == 0x00000040)) {\n         output.writeBool(7, enableResubscribe_);\n@@ -7351,7 +7351,7 @@ public int getSerializedSize() {\n       }\n       if (((bitField0_ & 0x00000020) == 0x00000020)) {\n         size += com.google.protobuf.CodedOutputStream\n-          .computeUInt32Size(6, deliveryThrottleValue_);\n+          .computeUInt32Size(6, messageWindowSize_);\n       }\n       if (((bitField0_ & 0x00000040) == 0x00000040)) {\n         size += com.google.protobuf.CodedOutputStream\n@@ -7496,7 +7496,7 @@ public Builder clear() {\n         bitField0_ = (bitField0_ & ~0x00000008);\n         messageFilter_ = \"\";\n         bitField0_ = (bitField0_ & ~0x00000010);\n-        deliveryThrottleValue_ = 0;\n+        messageWindowSize_ = 0;\n         bitField0_ = (bitField0_ & ~0x00000020);\n         enableResubscribe_ = true;\n         bitField0_ = (bitField0_ & ~0x00000040);\n@@ -7565,7 +7565,7 @@ public Builder clone() {\n         if (((from_bitField0_ & 0x00000020) == 0x00000020)) {\n           to_bitField0_ |= 0x00000020;\n         }\n-        result.deliveryThrottleValue_ = deliveryThrottleValue_;\n+        result.messageWindowSize_ = messageWindowSize_;\n         if (((from_bitField0_ & 0x00000040) == 0x00000040)) {\n           to_bitField0_ |= 0x00000040;\n         }\n@@ -7601,8 +7601,8 @@ public Builder mergeFrom(org.apache.hedwig.protocol.PubSubProtocol.SubscriptionO\n         if (other.hasMessageFilter()) {\n           setMessageFilter(other.getMessageFilter());\n         }\n-        if (other.hasDeliveryThrottleValue()) {\n-          setDeliveryThrottleValue(other.getDeliveryThrottleValue());\n+        if (other.hasMessageWindowSize()) {\n+          setMessageWindowSize(other.getMessageWindowSize());\n         }\n         if (other.hasEnableResubscribe()) {\n           setEnableResubscribe(other.getEnableResubscribe());\n@@ -7675,7 +7675,7 @@ public Builder mergeFrom(\n             }\n             case 48: {\n               bitField0_ |= 0x00000020;\n-              deliveryThrottleValue_ = input.readUInt32();\n+              messageWindowSize_ = input.readUInt32();\n               break;\n             }\n             case 56: {\n@@ -7881,23 +7881,23 @@ void setMessageFilter(com.google.protobuf.ByteString value) {\n         onChanged();\n       }\n       \n-      // optional uint32 deliveryThrottleValue = 6;\n-      private int deliveryThrottleValue_ ;\n-      public boolean hasDeliveryThrottleValue() {\n+      // optional uint32 messageWindowSize = 6;\n+      private int messageWindowSize_ ;\n+      public boolean hasMessageWindowSize() {\n         return ((bitField0_ & 0x00000020) == 0x00000020);\n       }\n-      public int getDeliveryThrottleValue() {\n-        return deliveryThrottleValue_;\n+      public int getMessageWindowSize() {\n+        return messageWindowSize_;\n       }\n-      public Builder setDeliveryThrottleValue(int value) {\n+      public Builder setMessageWindowSize(int value) {\n         bitField0_ |= 0x00000020;\n-        deliveryThrottleValue_ = value;\n+        messageWindowSize_ = value;\n         onChanged();\n         return this;\n       }\n-      public Builder clearDeliveryThrottleValue() {\n+      public Builder clearMessageWindowSize() {\n         bitField0_ = (bitField0_ & ~0x00000020);\n-        deliveryThrottleValue_ = 0;\n+        messageWindowSize_ = 0;\n         onChanged();\n         return this;\n       }\n@@ -15496,75 +15496,74 @@ public Builder clearNumTopics() {\n       \"\\033.Hedwig.StopDeliveryRequest\\022:\\n\\024startDel\" +\n       \"iveryRequest\\0309 \\001(\\0132\\034.Hedwig.StartDeliver\" +\n       \"yRequest\\\".\\n\\016PublishRequest\\022\\034\\n\\003msg\\030\\002 \\002(\\0132\" +\n-      \"\\017.Hedwig.Message\\\"\\203\\001\\n\\027SubscriptionPrefere\" +\n-      \"nces\\022\\034\\n\\007options\\030\\001 \\001(\\0132\\013.Hedwig.Map\\022\\024\\n\\014me\" +\n-      \"ssageBound\\030\\002 \\001(\\r\\022\\025\\n\\rmessageFilter\\030\\003 \\001(\\t\\022\" +\n-      \"\\035\\n\\025deliveryThrottleValue\\030\\004 \\001(\\r\\\"\\277\\002\\n\\020Subsc\" +\n-      \"ribeRequest\\022\\024\\n\\014subscriberId\\030\\002 \\002(\\014\\022Q\\n\\016cre\",\n-      \"ateOrAttach\\030\\003 \\001(\\0162\\'.Hedwig.SubscribeRequ\" +\n-      \"est.CreateOrAttach:\\020CREATE_OR_ATTACH\\022\\032\\n\\013\" +\n-      \"synchronous\\030\\004 \\001(\\010:\\005false\\022\\024\\n\\014messageBound\" +\n-      \"\\030\\005 \\001(\\r\\0224\\n\\013preferences\\030\\006 \\001(\\0132\\037.Hedwig.Sub\" +\n-      \"scriptionPreferences\\022\\032\\n\\013forceAttach\\030\\007 \\001(\" +\n-      \"\\010:\\005false\\\">\\n\\016CreateOrAttach\\022\\n\\n\\006CREATE\\020\\000\\022\\n\" +\n-      \"\\n\\006ATTACH\\020\\001\\022\\024\\n\\020CREATE_OR_ATTACH\\020\\002\\\"\\222\\002\\n\\023Sub\" +\n-      \"scriptionOptions\\022\\032\\n\\013forceAttach\\030\\001 \\001(\\010:\\005f\" +\n-      \"alse\\022Q\\n\\016createOrAttach\\030\\002 \\001(\\0162\\'.Hedwig.Su\" +\n-      \"bscribeRequest.CreateOrAttach:\\020CREATE_OR\",\n-      \"_ATTACH\\022\\027\\n\\014messageBound\\030\\003 \\001(\\r:\\0010\\022\\034\\n\\007opti\" +\n-      \"ons\\030\\004 \\001(\\0132\\013.Hedwig.Map\\022\\025\\n\\rmessageFilter\\030\" +\n-      \"\\005 \\001(\\t\\022\\035\\n\\025deliveryThrottleValue\\030\\006 \\001(\\r\\022\\037\\n\\021\" +\n-      \"enableResubscribe\\030\\007 \\001(\\010:\\004true\\\"K\\n\\016Consume\" +\n-      \"Request\\022\\024\\n\\014subscriberId\\030\\002 \\002(\\014\\022#\\n\\005msgId\\030\\003\" +\n-      \" \\002(\\0132\\024.Hedwig.MessageSeqId\\\"*\\n\\022Unsubscrib\" +\n-      \"eRequest\\022\\024\\n\\014subscriberId\\030\\002 \\002(\\014\\\"+\\n\\023StopDe\" +\n-      \"liveryRequest\\022\\024\\n\\014subscriberId\\030\\002 \\002(\\014\\\",\\n\\024S\" +\n-      \"tartDeliveryRequest\\022\\024\\n\\014subscriberId\\030\\002 \\002(\" +\n-      \"\\014\\\"\\377\\001\\n\\016PubSubResponse\\0220\\n\\017protocolVersion\\030\",\n-      \"\\001 \\002(\\0162\\027.Hedwig.ProtocolVersion\\022&\\n\\nstatus\" +\n-      \"Code\\030\\002 \\002(\\0162\\022.Hedwig.StatusCode\\022\\r\\n\\005txnId\\030\" +\n-      \"\\003 \\002(\\004\\022\\021\\n\\tstatusMsg\\030\\004 \\001(\\t\\022 \\n\\007message\\030\\005 \\001(\" +\n-      \"\\0132\\017.Hedwig.Message\\022\\r\\n\\005topic\\030\\006 \\001(\\014\\022\\024\\n\\014sub\" +\n-      \"scriberId\\030\\007 \\001(\\014\\022*\\n\\014responseBody\\030\\010 \\001(\\0132\\024.\" +\n-      \"Hedwig.ResponseBody\\\"?\\n\\017PublishResponse\\022,\" +\n-      \"\\n\\016publishedMsgId\\030\\001 \\002(\\0132\\024.Hedwig.MessageS\" +\n-      \"eqId\\\"I\\n\\021SubscribeResponse\\0224\\n\\013preferences\" +\n-      \"\\030\\002 \\001(\\0132\\037.Hedwig.SubscriptionPreferences\\\"\" +\n-      \"v\\n\\014ResponseBody\\0220\\n\\017publishResponse\\030\\001 \\001(\\013\",\n-      \"2\\027.Hedwig.PublishResponse\\0224\\n\\021subscribeRe\" +\n-      \"sponse\\030\\002 \\001(\\0132\\031.Hedwig.SubscribeResponse\\\"\" +\n-      \"N\\n\\021SubscriptionState\\022#\\n\\005msgId\\030\\001 \\002(\\0132\\024.He\" +\n-      \"dwig.MessageSeqId\\022\\024\\n\\014messageBound\\030\\002 \\001(\\r\\\"\" +\n-      \"r\\n\\020SubscriptionData\\022(\\n\\005state\\030\\001 \\001(\\0132\\031.Hed\" +\n-      \"wig.SubscriptionState\\0224\\n\\013preferences\\030\\002 \\001\" +\n-      \"(\\0132\\037.Hedwig.SubscriptionPreferences\\\"O\\n\\013L\" +\n-      \"edgerRange\\022\\020\\n\\010ledgerId\\030\\001 \\002(\\004\\022.\\n\\020endSeqId\" +\n-      \"Included\\030\\002 \\001(\\0132\\024.Hedwig.MessageSeqId\\\"3\\n\\014\" +\n-      \"LedgerRanges\\022#\\n\\006ranges\\030\\001 \\003(\\0132\\023.Hedwig.Le\",\n-      \"dgerRange\\\":\\n\\013ManagerMeta\\022\\023\\n\\013managerImpl\\030\" +\n-      \"\\002 \\002(\\t\\022\\026\\n\\016managerVersion\\030\\003 \\002(\\r\\\".\\n\\013HubInfo\" +\n-      \"Data\\022\\020\\n\\010hostname\\030\\002 \\002(\\t\\022\\r\\n\\005czxid\\030\\003 \\002(\\004\\\" \\n\" +\n-      \"\\013HubLoadData\\022\\021\\n\\tnumTopics\\030\\002 \\002(\\004*\\\"\\n\\017Proto\" +\n-      \"colVersion\\022\\017\\n\\013VERSION_ONE\\020\\001*p\\n\\rOperation\" +\n-      \"Type\\022\\013\\n\\007PUBLISH\\020\\000\\022\\r\\n\\tSUBSCRIBE\\020\\001\\022\\013\\n\\007CONS\" +\n-      \"UME\\020\\002\\022\\017\\n\\013UNSUBSCRIBE\\020\\003\\022\\022\\n\\016START_DELIVERY\" +\n-      \"\\020\\004\\022\\021\\n\\rSTOP_DELIVERY\\020\\005*D\\n\\021SubscriptionEve\" +\n-      \"nt\\022\\017\\n\\013TOPIC_MOVED\\020\\001\\022\\036\\n\\032SUBSCRIPTION_FORC\" +\n-      \"ED_CLOSED\\020\\002*\\205\\004\\n\\nStatusCode\\022\\013\\n\\007SUCCESS\\020\\000\\022\",\n-      \"\\026\\n\\021MALFORMED_REQUEST\\020\\221\\003\\022\\022\\n\\rNO_SUCH_TOPIC\" +\n-      \"\\020\\222\\003\\022\\036\\n\\031CLIENT_ALREADY_SUBSCRIBED\\020\\223\\003\\022\\032\\n\\025C\" +\n-      \"LIENT_NOT_SUBSCRIBED\\020\\224\\003\\022\\026\\n\\021COULD_NOT_CON\" +\n-      \"NECT\\020\\225\\003\\022\\017\\n\\nTOPIC_BUSY\\020\\226\\003\\022\\036\\n\\031NOT_RESPONSI\" +\n-      \"BLE_FOR_TOPIC\\020\\365\\003\\022\\021\\n\\014SERVICE_DOWN\\020\\366\\003\\022\\024\\n\\017U\" +\n-      \"NCERTAIN_STATE\\020\\367\\003\\022\\033\\n\\026INVALID_MESSAGE_FIL\" +\n-      \"TER\\020\\370\\003\\022\\020\\n\\013BAD_VERSION\\020\\210\\004\\022\\036\\n\\031NO_TOPIC_PER\" +\n-      \"SISTENCE_INFO\\020\\211\\004\\022\\\"\\n\\035TOPIC_PERSISTENCE_IN\" +\n-      \"FO_EXISTS\\020\\212\\004\\022\\032\\n\\025NO_SUBSCRIPTION_STATE\\020\\213\\004\" +\n-      \"\\022\\036\\n\\031SUBSCRIPTION_STATE_EXISTS\\020\\214\\004\\022\\030\\n\\023NO_T\",\n-      \"OPIC_OWNER_INFO\\020\\215\\004\\022\\034\\n\\027TOPIC_OWNER_INFO_E\" +\n-      \"XISTS\\020\\216\\004\\022\\031\\n\\024UNEXPECTED_CONDITION\\020\\330\\004\\022\\016\\n\\tC\" +\n-      \"OMPOSITE\\020\\274\\005B\\036\\n\\032org.apache.hedwig.protoco\" +\n-      \"lH\\001\"\n+      \"\\017.Hedwig.Message\\\"\\177\\n\\027SubscriptionPreferen\" +\n+      \"ces\\022\\034\\n\\007options\\030\\001 \\001(\\0132\\013.Hedwig.Map\\022\\024\\n\\014mes\" +\n+      \"sageBound\\030\\002 \\001(\\r\\022\\025\\n\\rmessageFilter\\030\\003 \\001(\\t\\022\\031\" +\n+      \"\\n\\021messageWindowSize\\030\\004 \\001(\\r\\\"\\277\\002\\n\\020SubscribeR\" +\n+      \"equest\\022\\024\\n\\014subscriberId\\030\\002 \\002(\\014\\022Q\\n\\016createOr\",\n+      \"Attach\\030\\003 \\001(\\0162\\'.Hedwig.SubscribeRequest.C\" +\n+      \"reateOrAttach:\\020CREATE_OR_ATTACH\\022\\032\\n\\013synch\" +\n+      \"ronous\\030\\004 \\001(\\010:\\005false\\022\\024\\n\\014messageBound\\030\\005 \\001(\" +\n+      \"\\r\\0224\\n\\013preferences\\030\\006 \\001(\\0132\\037.Hedwig.Subscrip\" +\n+      \"tionPreferences\\022\\032\\n\\013forceAttach\\030\\007 \\001(\\010:\\005fa\" +\n+      \"lse\\\">\\n\\016CreateOrAttach\\022\\n\\n\\006CREATE\\020\\000\\022\\n\\n\\006ATT\" +\n+      \"ACH\\020\\001\\022\\024\\n\\020CREATE_OR_ATTACH\\020\\002\\\"\\216\\002\\n\\023Subscrip\" +\n+      \"tionOptions\\022\\032\\n\\013forceAttach\\030\\001 \\001(\\010:\\005false\\022\" +\n+      \"Q\\n\\016createOrAttach\\030\\002 \\001(\\0162\\'.Hedwig.Subscri\" +\n+      \"beRequest.CreateOrAttach:\\020CREATE_OR_ATTA\",\n+      \"CH\\022\\027\\n\\014messageBound\\030\\003 \\001(\\r:\\0010\\022\\034\\n\\007options\\030\\004\" +\n+      \" \\001(\\0132\\013.Hedwig.Map\\022\\025\\n\\rmessageFilter\\030\\005 \\001(\\t\" +\n+      \"\\022\\031\\n\\021messageWindowSize\\030\\006 \\001(\\r\\022\\037\\n\\021enableRes\" +\n+      \"ubscribe\\030\\007 \\001(\\010:\\004true\\\"K\\n\\016ConsumeRequest\\022\\024\" +\n+      \"\\n\\014subscriberId\\030\\002 \\002(\\014\\022#\\n\\005msgId\\030\\003 \\002(\\0132\\024.He\" +\n+      \"dwig.MessageSeqId\\\"*\\n\\022UnsubscribeRequest\\022\" +\n+      \"\\024\\n\\014subscriberId\\030\\002 \\002(\\014\\\"+\\n\\023StopDeliveryReq\" +\n+      \"uest\\022\\024\\n\\014subscriberId\\030\\002 \\002(\\014\\\",\\n\\024StartDeliv\" +\n+      \"eryRequest\\022\\024\\n\\014subscriberId\\030\\002 \\002(\\014\\\"\\377\\001\\n\\016Pub\" +\n+      \"SubResponse\\0220\\n\\017protocolVersion\\030\\001 \\002(\\0162\\027.H\",\n+      \"edwig.ProtocolVersion\\022&\\n\\nstatusCode\\030\\002 \\002(\" +\n+      \"\\0162\\022.Hedwig.StatusCode\\022\\r\\n\\005txnId\\030\\003 \\002(\\004\\022\\021\\n\\t\" +\n+      \"statusMsg\\030\\004 \\001(\\t\\022 \\n\\007message\\030\\005 \\001(\\0132\\017.Hedwi\" +\n+      \"g.Message\\022\\r\\n\\005topic\\030\\006 \\001(\\014\\022\\024\\n\\014subscriberId\" +\n+      \"\\030\\007 \\001(\\014\\022*\\n\\014responseBody\\030\\010 \\001(\\0132\\024.Hedwig.Re\" +\n+      \"sponseBody\\\"?\\n\\017PublishResponse\\022,\\n\\016publish\" +\n+      \"edMsgId\\030\\001 \\002(\\0132\\024.Hedwig.MessageSeqId\\\"I\\n\\021S\" +\n+      \"ubscribeResponse\\0224\\n\\013preferences\\030\\002 \\001(\\0132\\037.\" +\n+      \"Hedwig.SubscriptionPreferences\\\"v\\n\\014Respon\" +\n+      \"seBody\\0220\\n\\017publishResponse\\030\\001 \\001(\\0132\\027.Hedwig\",\n+      \".PublishResponse\\0224\\n\\021subscribeResponse\\030\\002 \" +\n+      \"\\001(\\0132\\031.Hedwig.SubscribeResponse\\\"N\\n\\021Subscr\" +\n+      \"iptionState\\022#\\n\\005msgId\\030\\001 \\002(\\0132\\024.Hedwig.Mess\" +\n+      \"ageSeqId\\022\\024\\n\\014messageBound\\030\\002 \\001(\\r\\\"r\\n\\020Subscr\" +\n+      \"iptionData\\022(\\n\\005state\\030\\001 \\001(\\0132\\031.Hedwig.Subsc\" +\n+      \"riptionState\\0224\\n\\013preferences\\030\\002 \\001(\\0132\\037.Hedw\" +\n+      \"ig.SubscriptionPreferences\\\"O\\n\\013LedgerRang\" +\n+      \"e\\022\\020\\n\\010ledgerId\\030\\001 \\002(\\004\\022.\\n\\020endSeqIdIncluded\\030\" +\n+      \"\\002 \\001(\\0132\\024.Hedwig.MessageSeqId\\\"3\\n\\014LedgerRan\" +\n+      \"ges\\022#\\n\\006ranges\\030\\001 \\003(\\0132\\023.Hedwig.LedgerRange\",\n+      \"\\\":\\n\\013ManagerMeta\\022\\023\\n\\013managerImpl\\030\\002 \\002(\\t\\022\\026\\n\\016\" +\n+      \"managerVersion\\030\\003 \\002(\\r\\\".\\n\\013HubInfoData\\022\\020\\n\\010h\" +\n+      \"ostname\\030\\002 \\002(\\t\\022\\r\\n\\005czxid\\030\\003 \\002(\\004\\\" \\n\\013HubLoadD\" +\n+      \"ata\\022\\021\\n\\tnumTopics\\030\\002 \\002(\\004*\\\"\\n\\017ProtocolVersio\" +\n+      \"n\\022\\017\\n\\013VERSION_ONE\\020\\001*p\\n\\rOperationType\\022\\013\\n\\007P\" +\n+      \"UBLISH\\020\\000\\022\\r\\n\\tSUBSCRIBE\\020\\001\\022\\013\\n\\007CONSUME\\020\\002\\022\\017\\n\\013\" +\n+      \"UNSUBSCRIBE\\020\\003\\022\\022\\n\\016START_DELIVERY\\020\\004\\022\\021\\n\\rSTO\" +\n+      \"P_DELIVERY\\020\\005*D\\n\\021SubscriptionEvent\\022\\017\\n\\013TOP\" +\n+      \"IC_MOVED\\020\\001\\022\\036\\n\\032SUBSCRIPTION_FORCED_CLOSED\" +\n+      \"\\020\\002*\\205\\004\\n\\nStatusCode\\022\\013\\n\\007SUCCESS\\020\\000\\022\\026\\n\\021MALFOR\",\n+      \"MED_REQUEST\\020\\221\\003\\022\\022\\n\\rNO_SUCH_TOPIC\\020\\222\\003\\022\\036\\n\\031CL\" +\n+      \"IENT_ALREADY_SUBSCRIBED\\020\\223\\003\\022\\032\\n\\025CLIENT_NOT\" +\n+      \"_SUBSCRIBED\\020\\224\\003\\022\\026\\n\\021COULD_NOT_CONNECT\\020\\225\\003\\022\\017\" +\n+      \"\\n\\nTOPIC_BUSY\\020\\226\\003\\022\\036\\n\\031NOT_RESPONSIBLE_FOR_T\" +\n+      \"OPIC\\020\\365\\003\\022\\021\\n\\014SERVICE_DOWN\\020\\366\\003\\022\\024\\n\\017UNCERTAIN_\" +\n+      \"STATE\\020\\367\\003\\022\\033\\n\\026INVALID_MESSAGE_FILTER\\020\\370\\003\\022\\020\\n\" +\n+      \"\\013BAD_VERSION\\020\\210\\004\\022\\036\\n\\031NO_TOPIC_PERSISTENCE_\" +\n+      \"INFO\\020\\211\\004\\022\\\"\\n\\035TOPIC_PERSISTENCE_INFO_EXISTS\" +\n+      \"\\020\\212\\004\\022\\032\\n\\025NO_SUBSCRIPTION_STATE\\020\\213\\004\\022\\036\\n\\031SUBSC\" +\n+      \"RIPTION_STATE_EXISTS\\020\\214\\004\\022\\030\\n\\023NO_TOPIC_OWNE\",\n+      \"R_INFO\\020\\215\\004\\022\\034\\n\\027TOPIC_OWNER_INFO_EXISTS\\020\\216\\004\\022\" +\n+      \"\\031\\n\\024UNEXPECTED_CONDITION\\020\\330\\004\\022\\016\\n\\tCOMPOSITE\\020\" +\n+      \"\\274\\005B\\036\\n\\032org.apache.hedwig.protocolH\\001\"\n     };\n     com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =\n       new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {\n@@ -15640,7 +15639,7 @@ public Builder clearNumTopics() {\n           internal_static_Hedwig_SubscriptionPreferences_fieldAccessorTable = new\n             com.google.protobuf.GeneratedMessage.FieldAccessorTable(\n               internal_static_Hedwig_SubscriptionPreferences_descriptor,\n-              new java.lang.String[] { \"Options\", \"MessageBound\", \"MessageFilter\", \"DeliveryThrottleValue\", },\n+              new java.lang.String[] { \"Options\", \"MessageBound\", \"MessageFilter\", \"MessageWindowSize\", },\n               org.apache.hedwig.protocol.PubSubProtocol.SubscriptionPreferences.class,\n               org.apache.hedwig.protocol.PubSubProtocol.SubscriptionPreferences.Builder.class);\n           internal_static_Hedwig_SubscribeRequest_descriptor =\n@@ -15656,7 +15655,7 @@ public Builder clearNumTopics() {\n           internal_static_Hedwig_SubscriptionOptions_fieldAccessorTable = new\n             com.google.protobuf.GeneratedMessage.FieldAccessorTable(\n               internal_static_Hedwig_SubscriptionOptions_descriptor,\n-              new java.lang.String[] { \"ForceAttach\", \"CreateOrAttach\", \"MessageBound\", \"Options\", \"MessageFilter\", \"DeliveryThrottleValue\", \"EnableResubscribe\", },\n+              new java.lang.String[] { \"ForceAttach\", \"CreateOrAttach\", \"MessageBound\", \"Options\", \"MessageFilter\", \"MessageWindowSize\", \"EnableResubscribe\", },\n               org.apache.hedwig.protocol.PubSubProtocol.SubscriptionOptions.class,\n               org.apache.hedwig.protocol.PubSubProtocol.SubscriptionOptions.Builder.class);\n           internal_static_Hedwig_ConsumeRequest_descriptor ="},{"sha":"2a57a3783fbd46f4938f21c88ad0dfda9b83bf21","filename":"hedwig-protocol/src/main/protobuf/PubSubProtocol.proto","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/apache/bookkeeper/blob/c4519d96d592967aaad1d056db3d31cbe56de865/hedwig-protocol/src/main/protobuf/PubSubProtocol.proto","raw_url":"https://github.com/apache/bookkeeper/raw/c4519d96d592967aaad1d056db3d31cbe56de865/hedwig-protocol/src/main/protobuf/PubSubProtocol.proto","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-protocol/src/main/protobuf/PubSubProtocol.proto?ref=c4519d96d592967aaad1d056db3d31cbe56de865","patch":"@@ -117,8 +117,9 @@ message SubscriptionPreferences {\n     optional uint32 messageBound = 2;\n     // server-side message filter\n     optional string messageFilter = 3;\n-    // server-side delivery throttle value\n-    optional uint32 deliveryThrottleValue = 4;\n+    // message window size, this is the maximum number of messages \n+    // which will be delivered without being consumed\n+    optional uint32 messageWindowSize = 4;\n }\n \n message SubscribeRequest{\n@@ -156,8 +157,9 @@ message SubscriptionOptions {\n     optional Map options = 4;\n     // server-side message filter\n     optional string messageFilter = 5;\n-    // server-side delivery throttle value\n-    optional uint32 deliveryThrottleValue = 6;\n+    // message window size, this is the maximum number of messages \n+    // which will be delivered without being consumed\n+    optional uint32 messageWindowSize = 6;\n     // enable resubscribe\n     optional bool enableResubscribe = 7 [default = true];\n }"},{"sha":"520744a655ecee071137fb2da6142183c5957a75","filename":"hedwig-server/src/main/java/org/apache/hedwig/server/common/ServerConfiguration.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/apache/bookkeeper/blob/c4519d96d592967aaad1d056db3d31cbe56de865/hedwig-server/src/main/java/org/apache/hedwig/server/common/ServerConfiguration.java","raw_url":"https://github.com/apache/bookkeeper/raw/c4519d96d592967aaad1d056db3d31cbe56de865/hedwig-server/src/main/java/org/apache/hedwig/server/common/ServerConfiguration.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/main/java/org/apache/hedwig/server/common/ServerConfiguration.java?ref=c4519d96d592967aaad1d056db3d31cbe56de865","patch":"@@ -61,8 +61,8 @@\n     protected final static String BK_ENSEMBLE_SIZE = \"bk_ensemble_size\";\n     protected final static String BK_QUORUM_SIZE = \"bk_quorum_size\";\n     protected final static String RETRY_REMOTE_SUBSCRIBE_THREAD_RUN_INTERVAL = \"retry_remote_subscribe_thread_run_interval\";\n-    protected final static String DEFAULT_DELIVERY_THROTTLE_VALUE =\n-        \"default_delivery_throttle_value\";\n+    protected final static String DEFAULT_MESSAGE_WINDOW_SIZE =\n+        \"default_message_window_size\";\n \n     protected final static String MAX_ENTRIES_PER_LEDGER = \"max_entries_per_ledger\";\n \n@@ -285,11 +285,11 @@ public int getRetryRemoteSubscribeThreadRunInterval() {\n         return conf.getInt(RETRY_REMOTE_SUBSCRIBE_THREAD_RUN_INTERVAL, 120000);\n     }\n \n-    // This parameter is for setting the default maximum number of messages delivered\n-    // to a subscriber without being consumed.\n-    // we throttle delivery messages to a subscriber when reaching the threshold.\n-    public int getDefaultDeliveryThrottleValue() {\n-        return conf.getInt(DEFAULT_DELIVERY_THROTTLE_VALUE, 0);\n+    // This parameter is for setting the default maximum number of messages which\n+    // can be delivered to a subscriber without being consumed.\n+    // we pause messages delivery to a subscriber when reaching the window size\n+    public int getDefaultMessageWindowSize() {\n+        return conf.getInt(DEFAULT_MESSAGE_WINDOW_SIZE, 0);\n     }\n \n     // This parameter is used when Bookkeeper is the persistence store"},{"sha":"7d7a8e89adaf04c9e548c5e26941edea59428639","filename":"hedwig-server/src/main/java/org/apache/hedwig/server/delivery/FIFODeliveryManager.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/apache/bookkeeper/blob/c4519d96d592967aaad1d056db3d31cbe56de865/hedwig-server/src/main/java/org/apache/hedwig/server/delivery/FIFODeliveryManager.java","raw_url":"https://github.com/apache/bookkeeper/raw/c4519d96d592967aaad1d056db3d31cbe56de865/hedwig-server/src/main/java/org/apache/hedwig/server/delivery/FIFODeliveryManager.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/main/java/org/apache/hedwig/server/delivery/FIFODeliveryManager.java?ref=c4519d96d592967aaad1d056db3d31cbe56de865","patch":"@@ -347,7 +347,7 @@ protected void addDeliveryPtr(ActiveSubscriberState subscriber, Long seqId) {\n         long lastSeqIdCommunicatedExternally;\n         long lastSeqIdConsumedUtil;\n         boolean isThrottled = false;\n-        final int throttleThreshold;\n+        final int messageWindowSize;\n         ServerMessageFilter filter;\n         // TODO make use of these variables\n \n@@ -364,14 +364,14 @@ public ActiveSubscriberState(ByteString topic, ByteString subscriberId,\n             this.lastSeqIdConsumedUtil = lastLocalSeqIdDelivered;\n             this.deliveryEndPoint = deliveryEndPoint;\n             this.filter = filter;\n-            if (preferences.hasDeliveryThrottleValue()) {\n-                throttleThreshold = preferences.getDeliveryThrottleValue();\n+            if (preferences.hasMessageWindowSize()) {\n+                messageWindowSize = preferences.getMessageWindowSize();\n             } else {\n-                if (FIFODeliveryManager.this.cfg.getDefaultDeliveryThrottleValue() > 0) {\n-                    throttleThreshold =\n-                        FIFODeliveryManager.this.cfg.getDefaultDeliveryThrottleValue();\n+                if (FIFODeliveryManager.this.cfg.getDefaultMessageWindowSize() > 0) {\n+                    messageWindowSize =\n+                        FIFODeliveryManager.this.cfg.getDefaultMessageWindowSize();\n                 } else {\n-                    throttleThreshold = UNLIMITED;\n+                    messageWindowSize = UNLIMITED;\n                 }\n             }\n         }\n@@ -443,10 +443,10 @@ public void performRequest() {\n         }\n \n         protected boolean msgLimitExceeded() {\n-            if (throttleThreshold == UNLIMITED) {\n+            if (messageWindowSize == UNLIMITED) {\n                 return false;\n             }\n-            if (lastLocalSeqIdDelivered - lastSeqIdConsumedUtil >= throttleThreshold) {\n+            if (lastLocalSeqIdDelivered - lastSeqIdConsumedUtil >= messageWindowSize) {\n                 return true;\n             }\n             return false;"},{"sha":"34b54b89535c11e9df7acb8b2176500b465ada99","filename":"hedwig-server/src/main/java/org/apache/hedwig/server/subscriptions/InMemorySubscriptionState.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/apache/bookkeeper/blob/c4519d96d592967aaad1d056db3d31cbe56de865/hedwig-server/src/main/java/org/apache/hedwig/server/subscriptions/InMemorySubscriptionState.java","raw_url":"https://github.com/apache/bookkeeper/raw/c4519d96d592967aaad1d056db3d31cbe56de865/hedwig-server/src/main/java/org/apache/hedwig/server/subscriptions/InMemorySubscriptionState.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/main/java/org/apache/hedwig/server/subscriptions/InMemorySubscriptionState.java?ref=c4519d96d592967aaad1d056db3d31cbe56de865","patch":"@@ -136,11 +136,11 @@ public boolean updatePreferences(SubscriptionPreferences preferences) {\n                 changed = true;\n             }\n         }\n-        if (preferences.hasDeliveryThrottleValue()) {\n-            if (!subscriptionPreferences.hasDeliveryThrottleValue() ||\n-                subscriptionPreferences.getDeliveryThrottleValue() !=\n-                preferences.getDeliveryThrottleValue()) {\n-                newPreferencesBuilder.setDeliveryThrottleValue(preferences.getDeliveryThrottleValue());\n+        if (preferences.hasMessageWindowSize()) {\n+            if (!subscriptionPreferences.hasMessageWindowSize() ||\n+                subscriptionPreferences.getMessageWindowSize() !=\n+                preferences.getMessageWindowSize()) {\n+                newPreferencesBuilder.setMessageWindowSize(preferences.getMessageWindowSize());\n                 changed = true;\n             }\n         }"},{"sha":"f0dbd63467a467833bcd1b254661f4771fab6ad0","filename":"hedwig-server/src/test/java/org/apache/hedwig/server/TestBackwardCompat.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/c4519d96d592967aaad1d056db3d31cbe56de865/hedwig-server/src/test/java/org/apache/hedwig/server/TestBackwardCompat.java","raw_url":"https://github.com/apache/bookkeeper/raw/c4519d96d592967aaad1d056db3d31cbe56de865/hedwig-server/src/test/java/org/apache/hedwig/server/TestBackwardCompat.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/test/java/org/apache/hedwig/server/TestBackwardCompat.java?ref=c4519d96d592967aaad1d056db3d31cbe56de865","patch":"@@ -766,7 +766,7 @@ void throttleX41(ByteString topic, ByteString subid, final int X)\n             org.apache.hedwig.protocol.PubSubProtocol.SubscriptionOptions options =\n                 org.apache.hedwig.protocol.PubSubProtocol.SubscriptionOptions.newBuilder()\n                 .setCreateOrAttach(org.apache.hedwig.protocol.PubSubProtocol.SubscribeRequest.CreateOrAttach.CREATE_OR_ATTACH)\n-                .setDeliveryThrottleValue(X) .build();\n+                .setMessageWindowSize(X) .build();\n             subscribe(topic, subid, options);\n             closeSubscription(topic, subid);\n             publishInts(topic, 1, 3*X);"},{"sha":"4338825e0d995fdef18ad0a867f9ab9e78a95808","filename":"hedwig-server/src/test/java/org/apache/hedwig/server/delivery/TestThrottlingDelivery.java","status":"modified","additions":21,"deletions":19,"changes":40,"blob_url":"https://github.com/apache/bookkeeper/blob/c4519d96d592967aaad1d056db3d31cbe56de865/hedwig-server/src/test/java/org/apache/hedwig/server/delivery/TestThrottlingDelivery.java","raw_url":"https://github.com/apache/bookkeeper/raw/c4519d96d592967aaad1d056db3d31cbe56de865/hedwig-server/src/test/java/org/apache/hedwig/server/delivery/TestThrottlingDelivery.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/test/java/org/apache/hedwig/server/delivery/TestThrottlingDelivery.java?ref=c4519d96d592967aaad1d056db3d31cbe56de865","patch":"@@ -25,7 +25,9 @@\n \n import org.junit.Before;\n import org.junit.Test;\n-import static org.junit.Assert.*;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.assertEquals;\n \n import com.google.protobuf.ByteString;\n \n@@ -44,7 +46,7 @@\n \n public class TestThrottlingDelivery extends HedwigHubTestBase {\n \n-    private static final int DEFAULT_THROTTLE_VALUE = 10;\n+    private static final int DEFAULT_MESSAGE_WINDOW_SIZE = 10;\n \n     protected class ThrottleDeliveryServerConfiguration extends HubServerConfiguration {\n \n@@ -53,30 +55,30 @@\n         }\n \n         @Override\n-        public int getDefaultDeliveryThrottleValue() {\n-            return DEFAULT_THROTTLE_VALUE;\n+        public int getDefaultMessageWindowSize() {\n+            return TestThrottlingDelivery.this.DEFAULT_MESSAGE_WINDOW_SIZE;\n         }\n     }\n \n     protected class ThrottleDeliveryClientConfiguration extends ClientConfiguration {\n \n-        int throttleValue;\n+        int messageWindowSize;\n \n         ThrottleDeliveryClientConfiguration() {\n-            this(DEFAULT_THROTTLE_VALUE);\n+            this(TestThrottlingDelivery.this.DEFAULT_MESSAGE_WINDOW_SIZE);\n         }\n \n-        ThrottleDeliveryClientConfiguration(int throttleValue) {\n-            this.throttleValue = throttleValue;\n+        ThrottleDeliveryClientConfiguration(int messageWindowSize) {\n+            this.messageWindowSize = messageWindowSize;\n         }\n \n         @Override\n         public int getMaximumOutstandingMessages() {\n-            return throttleValue;\n+            return messageWindowSize;\n         }\n \n-        void setThrottleValue(int throttleValue) {\n-            this.throttleValue = throttleValue;\n+        void setMessageWindowSize(int messageWindowSize) {\n+            this.messageWindowSize = messageWindowSize;\n         }\n \n         @Override\n@@ -166,7 +168,7 @@ protected ServerConfiguration getServerConfiguration(int port, int sslPort) {\n \n     @Test\n     public void testServerSideThrottle() throws Exception {\n-        int throttleValue = DEFAULT_THROTTLE_VALUE;\n+        int messageWindowSize = DEFAULT_MESSAGE_WINDOW_SIZE;\n         ThrottleDeliveryClientConfiguration conf =\n             new ThrottleDeliveryClientConfiguration();\n         HedwigClient client = new HedwigClient(conf);\n@@ -179,27 +181,27 @@ public void testServerSideThrottle() throws Exception {\n         sub.closeSubscription(topic, subid);\n \n         // throttle with hub server's setting\n-        throttleX(pub, sub, topic, subid, DEFAULT_THROTTLE_VALUE);\n+        throttleX(pub, sub, topic, subid, DEFAULT_MESSAGE_WINDOW_SIZE);\n \n-        throttleValue = DEFAULT_THROTTLE_VALUE / 2;\n+        messageWindowSize = DEFAULT_MESSAGE_WINDOW_SIZE / 2;\n         // throttle with a lower value than hub server's setting\n         SubscriptionOptions.Builder optionsBuilder = SubscriptionOptions.newBuilder()\n             .setCreateOrAttach(CreateOrAttach.CREATE)\n-            .setDeliveryThrottleValue(throttleValue);\n+            .setMessageWindowSize(messageWindowSize);\n         topic = ByteString.copyFromUtf8(\"testServerSideThrottleWithLowerValue\");\n         sub.subscribe(topic, subid, optionsBuilder.build());\n         sub.closeSubscription(topic, subid);\n-        throttleX(pub, sub, topic, subid, throttleValue);\n+        throttleX(pub, sub, topic, subid, messageWindowSize);\n \n-        throttleValue = DEFAULT_THROTTLE_VALUE + 5;\n+        messageWindowSize = DEFAULT_MESSAGE_WINDOW_SIZE + 5;\n         // throttle with a higher value than hub server's setting\n         optionsBuilder = SubscriptionOptions.newBuilder()\n                          .setCreateOrAttach(CreateOrAttach.CREATE)\n-                         .setDeliveryThrottleValue(throttleValue);\n+                         .setMessageWindowSize(messageWindowSize);\n         topic = ByteString.copyFromUtf8(\"testServerSideThrottleWithHigherValue\");\n         sub.subscribe(topic, subid, optionsBuilder.build());\n         sub.closeSubscription(topic, subid);\n-        throttleX(pub, sub, topic, subid, throttleValue);\n+        throttleX(pub, sub, topic, subid, messageWindowSize);\n \n         client.close();\n     }"}]}

