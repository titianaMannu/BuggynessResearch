{"sha":"c958b32da81936cee535c411f2214d900f54442c","node_id":"MDY6Q29tbWl0MTU3NTk1NjpjOTU4YjMyZGE4MTkzNmNlZTUzNWM0MTFmMjIxNGQ5MDBmNTQ0NDJj","commit":{"author":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2012-12-03T05:23:40Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2012-12-03T05:23:40Z"},"message":"BOOKKEEPER-351: asyncAddEntry should not throw an exception (Matteo Merli via sijie)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1416352 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a4c778f13a5a07cf204eb47b860ac7b77a45e6a0","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/a4c778f13a5a07cf204eb47b860ac7b77a45e6a0"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/c958b32da81936cee535c411f2214d900f54442c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/c958b32da81936cee535c411f2214d900f54442c","html_url":"https://github.com/apache/bookkeeper/commit/c958b32da81936cee535c411f2214d900f54442c","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/c958b32da81936cee535c411f2214d900f54442c/comments","author":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"100785f6f1feb2e6dd1c7de769adab5c88e87427","url":"https://api.github.com/repos/apache/bookkeeper/commits/100785f6f1feb2e6dd1c7de769adab5c88e87427","html_url":"https://github.com/apache/bookkeeper/commit/100785f6f1feb2e6dd1c7de769adab5c88e87427"}],"stats":{"total":35,"additions":34,"deletions":1},"files":[{"sha":"708aa5c4c9584324d83f68e622d4bce78a8ef1e4","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/c958b32da81936cee535c411f2214d900f54442c/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/c958b32da81936cee535c411f2214d900f54442c/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=c958b32da81936cee535c411f2214d900f54442c","patch":"@@ -112,6 +112,8 @@ Trunk (unreleased changes)\n \n \tBOOKKEEPER-485: TestFencing hung (ivank via fpj)\n \n+        BOOKKEEPER-351: asyncAddEntry should not throw an exception (Matteo Merli via sijie)\n+\n       hedwig-protocol:\n \n         BOOKKEEPER-394: CompositeException message is not useful (Stu Hood via sijie)"},{"sha":"7bd17a7ae4b78ef1c82643f363e6677e5bd4576e","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/bookkeeper/blob/c958b32da81936cee535c411f2214d900f54442c/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java","raw_url":"https://github.com/apache/bookkeeper/raw/c958b32da81936cee535c411f2214d900f54442c/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java?ref=c958b32da81936cee535c411f2214d900f54442c","patch":"@@ -526,7 +526,8 @@ public void safeRun() {\n             });\n         } catch (RuntimeException e) {\n             opCounterSem.release();\n-            throw e;\n+            cb.addComplete(BKException.Code.InterruptedException,\n+                    LedgerHandle.this, INVALID_ENTRY_ID, ctx);\n         }\n     }\n "},{"sha":"cef2e64803f3b0e64262d27881639dea2d2a4764","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/client/BookKeeperTest.java","status":"modified","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/apache/bookkeeper/blob/c958b32da81936cee535c411f2214d900f54442c/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/BookKeeperTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/c958b32da81936cee535c411f2214d900f54442c/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/BookKeeperTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/BookKeeperTest.java?ref=c958b32da81936cee535c411f2214d900f54442c","patch":"@@ -22,15 +22,18 @@\n */\n \n import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.atomic.AtomicInteger;\n \n import org.apache.bookkeeper.conf.ClientConfiguration;\n+import org.apache.bookkeeper.client.AsyncCallback.AddCallback;\n import org.apache.bookkeeper.client.BookKeeper.DigestType;\n import org.apache.bookkeeper.test.BaseTestCase;\n import org.apache.zookeeper.ZooKeeper;\n import org.apache.zookeeper.Watcher;\n import org.apache.zookeeper.WatchedEvent;\n import org.apache.zookeeper.KeeperException;\n \n+import org.junit.Assert;\n import org.junit.Test;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -147,4 +150,31 @@ public void testBookkeeperPassword() throws Exception {\n             bkc.close();\n         }\n     }\n+\n+    /**\n+     * Tests that when trying to use a closed BK client object we get\n+     * a callback error and not an InterruptedException.\n+     * @throws Exception\n+     */\n+    @Test\n+    public void testAsyncReadWithError() throws Exception {\n+        LedgerHandle lh = bkc.createLedger(3, 3, DigestType.CRC32, \"testPasswd\".getBytes());\n+        bkc.close();\n+\n+        final AtomicInteger result = new AtomicInteger(0);\n+        final CountDownLatch counter = new CountDownLatch(1);\n+\n+        // Try to write, we shoud get and error callback but not an exception\n+        lh.asyncAddEntry(\"test\".getBytes(), new AddCallback() {\n+            public void addComplete(int rc, LedgerHandle lh, long entryId, Object ctx) {\n+                result.set(rc);\n+                counter.countDown();\n+            }\n+        }, null);\n+\n+        counter.await();\n+\n+        Assert.assertTrue(result.get() != 0);\n+    }\n+\n }"}]}

