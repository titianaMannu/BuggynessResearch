{"sha":"cdcfbb52cbf8f0e6f17d56d7185cf0d04c9c856b","node_id":"MDY6Q29tbWl0MTU3NTk1NjpjZGNmYmI1MmNiZjhmMGU2ZjE3ZDU2ZDcxODVjZjBkMDRjOWM4NTZi","commit":{"author":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2012-01-18T12:09:48Z"},"committer":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2012-01-18T12:09:48Z"},"message":"BOOKKEEPER-95: extends zookeeper JMX to monitor and manage bookie server (Sijie Guo via ivank)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1232852 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"e17276b1ecde9592bf1ac4a4209f1256fcebab7f","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/e17276b1ecde9592bf1ac4a4209f1256fcebab7f"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/cdcfbb52cbf8f0e6f17d56d7185cf0d04c9c856b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/cdcfbb52cbf8f0e6f17d56d7185cf0d04c9c856b","html_url":"https://github.com/apache/bookkeeper/commit/cdcfbb52cbf8f0e6f17d56d7185cf0d04c9c856b","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/cdcfbb52cbf8f0e6f17d56d7185cf0d04c9c856b/comments","author":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"committer":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"parents":[{"sha":"c7c8af741a2f532b554dcdabf85237c23ea14aaa","url":"https://api.github.com/repos/apache/bookkeeper/commits/c7c8af741a2f532b554dcdabf85237c23ea14aaa","html_url":"https://github.com/apache/bookkeeper/commit/c7c8af741a2f532b554dcdabf85237c23ea14aaa"}],"stats":{"total":113,"additions":113,"deletions":0},"files":[{"sha":"90162f16136185fe8e8202105b2306ec8cd1a074","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/cdcfbb52cbf8f0e6f17d56d7185cf0d04c9c856b/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/cdcfbb52cbf8f0e6f17d56d7185cf0d04c9c856b/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=cdcfbb52cbf8f0e6f17d56d7185cf0d04c9c856b","patch":"@@ -22,6 +22,8 @@ Trunk (unreleased changes)\n \n \tBOOKKEEPER-150: Entry is lost when recovering a ledger with not enough bookies. (Sijie Guo via ivank)\n \n+        BOOKKEEPER-95: extends zookeeper JMX to monitor and manage bookie server (Sijie Guo via ivank)\n+\n       hedwig-server/\n       \n         BOOKKEEPER-140: Hub server doesn't subscribe remote region correctly when a region is down. (Sijie Gou via ivank)"},{"sha":"5d4f1201517bd46f90face4752d3d593de3913d1","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/jmx/BKMBeanInfo.java","status":"added","additions":27,"deletions":0,"changes":27,"blob_url":"https://github.com/apache/bookkeeper/blob/cdcfbb52cbf8f0e6f17d56d7185cf0d04c9c856b/bookkeeper-server/src/main/java/org/apache/bookkeeper/jmx/BKMBeanInfo.java","raw_url":"https://github.com/apache/bookkeeper/raw/cdcfbb52cbf8f0e6f17d56d7185cf0d04c9c856b/bookkeeper-server/src/main/java/org/apache/bookkeeper/jmx/BKMBeanInfo.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/jmx/BKMBeanInfo.java?ref=cdcfbb52cbf8f0e6f17d56d7185cf0d04c9c856b","patch":"@@ -0,0 +1,27 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.bookkeeper.jmx;\n+\n+import org.apache.zookeeper.jmx.ZKMBeanInfo;\n+\n+/**\n+ * BookKeeper MBean info interface.\n+ */\n+public interface BKMBeanInfo extends ZKMBeanInfo {\n+}"},{"sha":"bdea2567da33e0d27b25b754daa39854957725d5","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/jmx/BKMBeanRegistry.java","status":"added","additions":84,"deletions":0,"changes":84,"blob_url":"https://github.com/apache/bookkeeper/blob/cdcfbb52cbf8f0e6f17d56d7185cf0d04c9c856b/bookkeeper-server/src/main/java/org/apache/bookkeeper/jmx/BKMBeanRegistry.java","raw_url":"https://github.com/apache/bookkeeper/raw/cdcfbb52cbf8f0e6f17d56d7185cf0d04c9c856b/bookkeeper-server/src/main/java/org/apache/bookkeeper/jmx/BKMBeanRegistry.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/jmx/BKMBeanRegistry.java?ref=cdcfbb52cbf8f0e6f17d56d7185cf0d04c9c856b","patch":"@@ -0,0 +1,84 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.bookkeeper.jmx;\n+\n+import javax.management.MalformedObjectNameException;\n+import javax.management.ObjectName;\n+\n+import org.apache.log4j.Logger;\n+import org.apache.zookeeper.jmx.MBeanRegistry;\n+import org.apache.zookeeper.jmx.ZKMBeanInfo;\n+\n+/**\n+ * This class provides a unified interface for registering/unregistering of\n+ * bookkeeper MBeans with the platform MBean server. It builds a hierarchy of MBeans\n+ * where each MBean represented by a filesystem-like path. Eventually, this hierarchy\n+ * will be stored in the zookeeper data tree instance as a virtual data tree.\n+ */\n+public class BKMBeanRegistry extends MBeanRegistry {\n+    static final Logger LOG = Logger.getLogger(BKMBeanRegistry.class);\n+    \n+    static final String DOMAIN = \"org.apache.BookKeeperService\";\n+\n+    static BKMBeanRegistry instance=new BKMBeanRegistry(); \n+\n+    public static BKMBeanRegistry getInstance(){\n+        return instance;\n+    }\n+    \n+    /**\n+     * This takes a path, such as /a/b/c, and converts it to \n+     * name0=a,name1=b,name2=c\n+     * \n+     * Copy from zookeeper MBeanRegistry since tokenize is private\n+     */\n+    protected int tokenize(StringBuilder sb, String path, int index) {\n+        String[] tokens = path.split(\"/\");\n+        for (String s: tokens) {\n+            if (s.length()==0)\n+                continue;\n+            sb.append(\"name\").append(index++).append(\"=\").append(s).append(\",\");\n+        }\n+        return index;\n+    }\n+\n+    /**\n+     * Builds an MBean path and creates an ObjectName instance using the path. \n+     * @param path MBean path\n+     * @param bean the MBean instance\n+     * @return ObjectName to be registered with the platform MBean server\n+     */\n+    protected ObjectName makeObjectName(String path, ZKMBeanInfo bean)\n+        throws MalformedObjectNameException {\n+        if(path==null)\n+            return null;\n+        StringBuilder beanName = new StringBuilder(DOMAIN + \":\");\n+        int counter=0;\n+        counter=tokenize(beanName,path,counter);\n+        tokenize(beanName,bean.getName(),counter);\n+        beanName.deleteCharAt(beanName.length()-1);\n+        try {\n+            return new ObjectName(beanName.toString());\n+        } catch (MalformedObjectNameException e) {\n+            LOG.warn(\"Invalid name \\\"\" + beanName.toString() + \"\\\" for class \"\n+                    + bean.getClass().toString());\n+            throw e;\n+        }\n+    }\n+}"}]}

