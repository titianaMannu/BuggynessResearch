{"sha":"d4d850c81373782ec4591d3065773ce270282048","node_id":"MDY6Q29tbWl0MTU3NTk1NjpkNGQ4NTBjODEzNzM3ODJlYzQ1OTFkMzA2NTc3M2NlMjcwMjgyMDQ4","commit":{"author":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2013-06-12T18:19:15Z"},"committer":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2013-06-12T18:19:15Z"},"message":"BOOKKEEPER-562: Ability to tell if a ledger is closed or not (fpj via ivank)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/branches/branch-4.2@1492321 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"435253f1616be4892af5372eb35c893b4e450158","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/435253f1616be4892af5372eb35c893b4e450158"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/d4d850c81373782ec4591d3065773ce270282048","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/d4d850c81373782ec4591d3065773ce270282048","html_url":"https://github.com/apache/bookkeeper/commit/d4d850c81373782ec4591d3065773ce270282048","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/d4d850c81373782ec4591d3065773ce270282048/comments","author":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"committer":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"parents":[{"sha":"3c62b4884b581fb1aaf148e914b41062479f4927","url":"https://api.github.com/repos/apache/bookkeeper/commits/3c62b4884b581fb1aaf148e914b41062479f4927","html_url":"https://github.com/apache/bookkeeper/commit/3c62b4884b581fb1aaf148e914b41062479f4927"}],"stats":{"total":101,"additions":101,"deletions":0},"files":[{"sha":"f6a2883f97dedab950381e399d5b4e589503f742","filename":"CHANGES.txt","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/apache/bookkeeper/blob/d4d850c81373782ec4591d3065773ce270282048/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/d4d850c81373782ec4591d3065773ce270282048/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=d4d850c81373782ec4591d3065773ce270282048","patch":"@@ -34,6 +34,11 @@ Release 4.2.2 - Unreleased\n \n         BOOKKEEPER-603: Support Boost 1.53 for Hedwig Cpp Client (jiannan via ivank)\n \n+    NEW FEATURE:\n+\n+      BOOKKEEPER-562: Ability to tell if a ledger is closed or not (fpj via ivank)\n+\n+\n Release 4.2.1 - 2013-02-19\n \n   Backward compatible changes:"},{"sha":"d3f17284bc8efd4b188ef3b5c6c41fbcc6e87192","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/client/AsyncCallback.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/apache/bookkeeper/blob/d4d850c81373782ec4591d3065773ce270282048/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/AsyncCallback.java","raw_url":"https://github.com/apache/bookkeeper/raw/d4d850c81373782ec4591d3065773ce270282048/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/AsyncCallback.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/AsyncCallback.java?ref=d4d850c81373782ec4591d3065773ce270282048","patch":"@@ -136,4 +136,16 @@ void readComplete(int rc, LedgerHandle lh, Enumeration<LedgerEntry> seq,\n          */\n         void recoverComplete(int rc, Object ctx);\n     }\n+    \n+    public interface IsClosedCallback {\n+        /**\n+         * Callback definition for isClosed operation\n+         *\n+         * @param rc\n+         *          return code\n+         * @param isClosed\n+         *          true if ledger is closed\n+         */\n+        void isClosedComplete(int rc, boolean isClosed, Object ctx);\n+    }\n }"},{"sha":"0324ca97b0ecb7616278b6508272e04caabfa16d","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeper.java","status":"modified","additions":64,"deletions":0,"changes":64,"blob_url":"https://github.com/apache/bookkeeper/blob/d4d850c81373782ec4591d3065773ce270282048/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeper.java","raw_url":"https://github.com/apache/bookkeeper/raw/d4d850c81373782ec4591d3065773ce270282048/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeper.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeper.java?ref=d4d850c81373782ec4591d3065773ce270282048","patch":"@@ -29,11 +29,13 @@\n import org.apache.bookkeeper.client.AsyncCallback.CreateCallback;\n import org.apache.bookkeeper.client.AsyncCallback.DeleteCallback;\n import org.apache.bookkeeper.client.AsyncCallback.OpenCallback;\n+import org.apache.bookkeeper.client.AsyncCallback.IsClosedCallback;\n import org.apache.bookkeeper.client.BKException.Code;\n import org.apache.bookkeeper.conf.ClientConfiguration;\n import org.apache.bookkeeper.meta.LedgerManager;\n import org.apache.bookkeeper.meta.LedgerManagerFactory;\n import org.apache.bookkeeper.proto.BookieClient;\n+import org.apache.bookkeeper.proto.BookkeeperInternalCallbacks.GenericCallback;\n import org.apache.bookkeeper.util.OrderedSafeExecutor;\n import org.apache.bookkeeper.util.ZkUtils;\n import org.apache.bookkeeper.zookeeper.ZooKeeperWatcherBase;\n@@ -555,6 +557,68 @@ public void deleteLedger(long lId) throws InterruptedException, BKException {\n             throw BKException.create(counter.getrc());\n         }\n     }\n+    \n+    /**\n+     * Check asynchronously whether the ledger with identifier <i>lId</i>\n+     * has been closed.\n+     * \n+     * @param lId   ledger identifier\n+     * @param cb    callback method\n+     */\n+    public void asyncIsClosed(long lId, final IsClosedCallback cb, final Object ctx){\n+        ledgerManager.readLedgerMetadata(lId, new GenericCallback<LedgerMetadata>(){\n+            public void operationComplete(int rc, LedgerMetadata lm){\n+                if (rc == BKException.Code.OK) {\n+                    cb.isClosedComplete(rc, lm.isClosed(), ctx);\n+                } else {\n+                    cb.isClosedComplete(rc, false, ctx);\n+                }\n+            }\n+        });\n+    }\n+    \n+    /**\n+     * Check whether the ledger with identifier <i>lId</i>\n+     * has been closed.\n+     * \n+     * @param lId\n+     * @return boolean true if ledger has been closed\n+     * @throws BKException\n+     */\n+    public boolean isClosed(long lId)\n+    throws BKException, InterruptedException {\n+        final class Result {\n+            int rc;\n+            boolean isClosed;\n+            final CountDownLatch notifier = new CountDownLatch(1);\n+        }\n+\n+        final Result result = new Result();\n+\n+        final IsClosedCallback cb = new IsClosedCallback(){\n+            public void isClosedComplete(int rc, boolean isClosed, Object ctx){\n+                    result.isClosed = isClosed;\n+                    result.rc = rc;\n+                    result.notifier.countDown();\n+            }\n+        };\n+\n+        /*\n+         * Call asynchronous version of isClosed\n+         */\n+        asyncIsClosed(lId, cb, null);\n+        \n+        /*\n+         * Wait for callback\n+         */\n+        result.notifier.await();\n+        \n+        if (result.rc != BKException.Code.OK) {\n+            throw BKException.create(result.rc);\n+        }\n+        \n+        return result.isClosed;\n+    }\n \n     /**\n      * Shuts down client."},{"sha":"917134e253dd81fafb5fb209736b7c858aad9cfe","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/client/BookKeeperTest.java","status":"modified","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/apache/bookkeeper/blob/d4d850c81373782ec4591d3065773ce270282048/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/BookKeeperTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/d4d850c81373782ec4591d3065773ce270282048/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/BookKeeperTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/client/BookKeeperTest.java?ref=d4d850c81373782ec4591d3065773ce270282048","patch":"@@ -218,4 +218,24 @@ public void addComplete(int rc, LedgerHandle lh, long entryId, Object ctx) {\n             assertTrue(\"Close was not successful\", success.get());\n         }\n     }\n+    \n+    @Test(timeout=60000)\n+    public void testIsClosed() throws Exception {\n+        ClientConfiguration conf = new ClientConfiguration()\n+        .setZkServers(zkUtil.getZooKeeperConnectString());\n+\n+        BookKeeper bkc = new BookKeeper(conf);\n+        LedgerHandle lh = bkc.createLedger(digestType, \"testPasswd\".getBytes());\n+        Long lId = lh.getId();\n+\n+        lh.addEntry(\"000\".getBytes());\n+        boolean result = bkc.isClosed(lId);\n+        Assert.assertTrue(\"Ledger shouldn't be flagged as closed!\",!result);\n+\n+        lh.close();\n+        result = bkc.isClosed(lId);\n+        Assert.assertTrue(\"Ledger should be flagged as closed!\",result);\n+\n+        bkc.close();\n+    }\n }"}]}

