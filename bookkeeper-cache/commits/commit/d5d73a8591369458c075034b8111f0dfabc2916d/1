{"sha":"d5d73a8591369458c075034b8111f0dfabc2916d","node_id":"MDY6Q29tbWl0MTU3NTk1NjpkNWQ3M2E4NTkxMzY5NDU4YzA3NTAzNGI4MTExZjBkZmFiYzI5MTZk","commit":{"author":{"name":"Flavio Paiva Junqueira","email":"fpj@apache.org","date":"2011-11-28T16:32:27Z"},"committer":{"name":"Flavio Paiva Junqueira","email":"fpj@apache.org","date":"2011-11-28T16:32:27Z"},"message":"BOOKKEEPER-119: Keys in configuration have inconsistent style (ivank via fpj)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1207396 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"ee3e11674f089c041908b6c57603dde22f41b879","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/ee3e11674f089c041908b6c57603dde22f41b879"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/d5d73a8591369458c075034b8111f0dfabc2916d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/d5d73a8591369458c075034b8111f0dfabc2916d","html_url":"https://github.com/apache/bookkeeper/commit/d5d73a8591369458c075034b8111f0dfabc2916d","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/d5d73a8591369458c075034b8111f0dfabc2916d/comments","author":{"login":"fpj","id":572920,"node_id":"MDQ6VXNlcjU3MjkyMA==","avatar_url":"https://avatars.githubusercontent.com/u/572920?v=4","gravatar_id":"","url":"https://api.github.com/users/fpj","html_url":"https://github.com/fpj","followers_url":"https://api.github.com/users/fpj/followers","following_url":"https://api.github.com/users/fpj/following{/other_user}","gists_url":"https://api.github.com/users/fpj/gists{/gist_id}","starred_url":"https://api.github.com/users/fpj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fpj/subscriptions","organizations_url":"https://api.github.com/users/fpj/orgs","repos_url":"https://api.github.com/users/fpj/repos","events_url":"https://api.github.com/users/fpj/events{/privacy}","received_events_url":"https://api.github.com/users/fpj/received_events","type":"User","site_admin":false},"committer":{"login":"fpj","id":572920,"node_id":"MDQ6VXNlcjU3MjkyMA==","avatar_url":"https://avatars.githubusercontent.com/u/572920?v=4","gravatar_id":"","url":"https://api.github.com/users/fpj","html_url":"https://github.com/fpj","followers_url":"https://api.github.com/users/fpj/followers","following_url":"https://api.github.com/users/fpj/following{/other_user}","gists_url":"https://api.github.com/users/fpj/gists{/gist_id}","starred_url":"https://api.github.com/users/fpj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fpj/subscriptions","organizations_url":"https://api.github.com/users/fpj/orgs","repos_url":"https://api.github.com/users/fpj/repos","events_url":"https://api.github.com/users/fpj/events{/privacy}","received_events_url":"https://api.github.com/users/fpj/received_events","type":"User","site_admin":false},"parents":[{"sha":"9daeb60bc274a425b9e90ed50d3454a6bfb3cf31","url":"https://api.github.com/repos/apache/bookkeeper/commits/9daeb60bc274a425b9e90ed50d3454a6bfb3cf31","html_url":"https://github.com/apache/bookkeeper/commit/9daeb60bc274a425b9e90ed50d3454a6bfb3cf31"}],"stats":{"total":48,"additions":28,"deletions":20},"files":[{"sha":"c77a4014a4a8cbad340c41e42a4662ab15cd6593","filename":"CHANGES.txt","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/apache/bookkeeper/blob/d5d73a8591369458c075034b8111f0dfabc2916d/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/d5d73a8591369458c075034b8111f0dfabc2916d/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=d5d73a8591369458c075034b8111f0dfabc2916d","patch":"@@ -131,3 +131,6 @@ IMPROVEMENTS:\n   BOOKKEEPER-109: Add documentation to describe how bookies flushes data (Sijie Guo via fpj)\n \n   BOOKKEEPER-90: Hedwig API changes for initial Bookkeeper release (ivank via fpj)\n+\n+  BOOKKEEPER-119: Keys in configuration have inconsistent style (ivank via fpj)\n+"},{"sha":"95c8995cdbe01026d097c3ae857bbef6a8312510","filename":"bookkeeper-server/conf/bk_server.conf","status":"modified","additions":14,"deletions":9,"changes":23,"blob_url":"https://github.com/apache/bookkeeper/blob/d5d73a8591369458c075034b8111f0dfabc2916d/bookkeeper-server/conf/bk_server.conf","raw_url":"https://github.com/apache/bookkeeper/raw/d5d73a8591369458c075034b8111f0dfabc2916d/bookkeeper-server/conf/bk_server.conf","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/conf/bk_server.conf?ref=d5d73a8591369458c075034b8111f0dfabc2916d","patch":"@@ -23,32 +23,34 @@\n ## Bookie settings\n \n # Port that bookie server listen on\n-bookie_port=3181\n+bookiePort=3181\n \n # Directory Bookkeeper outputs its write ahead log\n-journal_dir=/tmp/bk-txn\n+journalDirectory=/tmp/bk-txn\n \n # Directory Bookkeeper outputs ledger snapshots\n # could define multi directories to store snapshots, separated by ','\n # For example:\n-# ledger_dirs=/tmp/bk1-data,/tmp/bk2-data\n+# ledgerDirectories=/tmp/bk1-data,/tmp/bk2-data\n # \n # Ideally ledger dirs and journal dir are each in a differet device,\n # which reduce the contention between random i/o and sequential write.\n # It is possible to run with a single disk, but performance will be significantly lower.\n-ledger_dirs=/tmp/bk-data\n+ledgerDirectories=/tmp/bk-data\n \n # Max file size of entry logger, in bytes\n # A new entry log file will be created when the old one reaches the file size limitation\n # logSizeLimit=2147483648\n \n # Max file size of journal file, in mega bytes\n # A new journal file will be created when the old one reaches the file size limitation\n-# journal_max_size_mb=2048\n+#\n+# journalMaxSizeMB=2048\n \n # Max number of old journal file to kept\n # Keep a number of old journal files would help data recovery in specia case\n-# journal_max_backups=5\n+#\n+# journalMaxBackups=5\n \n # How long the interval to trigger next garbage collection, in milliseconds\n # Since garbage collection is running in background, too frequent gc\n@@ -64,10 +66,12 @@ ledger_dirs=/tmp/bk-data\n # on too frequent flushing. You can consider increment flush interval\n # to get better performance, but you need to pay more time on bookie\n # server restart after failure.\n-# flush_interval=100\n+#\n+# flushInterval=100\n \n # Interval to watch whether bookie is dead or not, in milliseconds\n-# bookie_death_watch_interval=1000\n+#\n+# bookieDeathWatchInterval=1000\n \n ## zookeeper client settings\n \n@@ -91,7 +95,8 @@ zkTimeout=10000\n # a single IP packet, setting server.tcpnodelay to false to enable Nagle algorithm\n # can provide better performance.\n # Default value is true.\n-# server.tcpnodelay=true\n+#\n+# serverTcpNoDelay=true\n \n ## ledger cache settings\n "},{"sha":"7157b10e50bf0394c4299b8eb7c5eaefa93ee9c8","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/conf/ClientConfiguration.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/d5d73a8591369458c075034b8111f0dfabc2916d/bookkeeper-server/src/main/java/org/apache/bookkeeper/conf/ClientConfiguration.java","raw_url":"https://github.com/apache/bookkeeper/raw/d5d73a8591369458c075034b8111f0dfabc2916d/bookkeeper-server/src/main/java/org/apache/bookkeeper/conf/ClientConfiguration.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/conf/ClientConfiguration.java?ref=d5d73a8591369458c075034b8111f0dfabc2916d","patch":"@@ -37,7 +37,7 @@\n     protected final static String PASSWD = \"passwd\";\n \n     // NIO Parameters\n-    protected final static String CLIENT_TCP_NODELAY = \"client.tcpnodelay\";\n+    protected final static String CLIENT_TCP_NODELAY = \"clientTcpNoDelay\";\n \n     /**\n      * Construct a default client-side configuration"},{"sha":"4438ff3245a3e1ed8664a038e3f5cbe7d9c3c015","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/conf/ServerConfiguration.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/apache/bookkeeper/blob/d5d73a8591369458c075034b8111f0dfabc2916d/bookkeeper-server/src/main/java/org/apache/bookkeeper/conf/ServerConfiguration.java","raw_url":"https://github.com/apache/bookkeeper/raw/d5d73a8591369458c075034b8111f0dfabc2916d/bookkeeper-server/src/main/java/org/apache/bookkeeper/conf/ServerConfiguration.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/conf/ServerConfiguration.java?ref=d5d73a8591369458c075034b8111f0dfabc2916d","patch":"@@ -31,22 +31,22 @@\n     // Gc Parameters\n     protected final static String GC_WAIT_TIME = \"gcWaitTime\";\n     // Sync Parameters\n-    protected final static String FLUSH_INTERVAL = \"flush_interval\";\n+    protected final static String FLUSH_INTERVAL = \"flushInterval\";\n     // Bookie death watch interval\n-    protected final static String DEATH_WATCH_INTERVAL = \"bookie_death_watch_interval\";\n+    protected final static String DEATH_WATCH_INTERVAL = \"bookieDeathWatchInterval\";\n     // Ledger Cache Parameters\n     protected final static String OPEN_FILE_LIMIT = \"openFileLimit\";\n     protected final static String PAGE_LIMIT = \"pageLimit\";\n     protected final static String PAGE_SIZE = \"pageSize\";\n     // Journal Parameters\n-    protected final static String MAX_JOURNAL_SIZE = \"journal_max_size_mb\";\n-    protected final static String MAX_BACKUP_JOURNALS = \"journal_max_backups\";\n+    protected final static String MAX_JOURNAL_SIZE = \"journalMaxSizeMB\";\n+    protected final static String MAX_BACKUP_JOURNALS = \"journalMaxBackups\";\n     // Bookie Parameters\n-    protected final static String BOOKIE_PORT = \"bookie_port\";\n-    protected final static String JOURNAL_DIR = \"journal_dir\";\n-    protected final static String LEDGER_DIRS = \"ledger_dirs\";\n+    protected final static String BOOKIE_PORT = \"bookiePort\";\n+    protected final static String JOURNAL_DIR = \"journalDirectory\";\n+    protected final static String LEDGER_DIRS = \"ledgerDirectories\";\n     // NIO Parameters\n-    protected final static String SERVER_TCP_NODELAY = \"server.tcpnodelay\";\n+    protected final static String SERVER_TCP_NODELAY = \"serverTcpNoDelay\";\n     // Zookeeper Parameters\n     protected final static String ZK_TIMEOUT = \"zkTimeout\";\n     protected final static String ZK_SERVERS = \"zkServers\";"},{"sha":"cda28d63b3c315526288f2ec3fea0c894bbc36b8","filename":"doc/bookkeeperConfig.textile","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/bookkeeper/blob/d5d73a8591369458c075034b8111f0dfabc2916d/doc/bookkeeperConfig.textile","raw_url":"https://github.com/apache/bookkeeper/raw/d5d73a8591369458c075034b8111f0dfabc2916d/doc/bookkeeperConfig.textile","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/doc/bookkeeperConfig.textile?ref=d5d73a8591369458c075034b8111f0dfabc2916d","patch":"@@ -62,10 +62,10 @@ p. LastLogMark contains two parts:\n \n p. You may use following settings to further fine tune the behavior of your Bookie servers. Currently these configuration settings are set using Java system properties.\n \n-* journal_max_size_mb\n+* journalMaxSizeMB\n ** journal file size limitation. when a journal reaches this limitation, it will be closed and new journal file be created.\n \n-* journal_max_backups\n+* journalMaxBackups\n ** how many old journal files whose id is less than LastLogMark 's journal id.\n \n bq. NOTE: keeping number of old journal files would be useful for manually recovery in special case."}]}

