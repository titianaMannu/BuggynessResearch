{"sha":"d9f4e60c850291d17e12ed44776b88cf02335701","node_id":"MDY6Q29tbWl0MTU3NTk1NjpkOWY0ZTYwYzg1MDI5MWQxN2UxMmVkNDQ3NzZiODhjZjAyMzM1NzAx","commit":{"author":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2013-10-11T14:18:40Z"},"committer":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2013-10-11T14:18:40Z"},"message":"BOOKKEEPER-638: Two bookies could start at the same time to access bookie data. (sijie via ivank)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1531302 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"52d711b92305da2107157e4b1f02081c0cc8190f","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/52d711b92305da2107157e4b1f02081c0cc8190f"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/d9f4e60c850291d17e12ed44776b88cf02335701","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/d9f4e60c850291d17e12ed44776b88cf02335701","html_url":"https://github.com/apache/bookkeeper/commit/d9f4e60c850291d17e12ed44776b88cf02335701","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/d9f4e60c850291d17e12ed44776b88cf02335701/comments","author":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"committer":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"parents":[{"sha":"0f853a49d7e6899151f63ae9b1912ed936e5a5fb","url":"https://api.github.com/repos/apache/bookkeeper/commits/0f853a49d7e6899151f63ae9b1912ed936e5a5fb","html_url":"https://github.com/apache/bookkeeper/commit/0f853a49d7e6899151f63ae9b1912ed936e5a5fb"}],"stats":{"total":40,"additions":27,"deletions":13},"files":[{"sha":"df2a88b7872490d47cc57714f5e159be081d60ee","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/d9f4e60c850291d17e12ed44776b88cf02335701/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/d9f4e60c850291d17e12ed44776b88cf02335701/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=d9f4e60c850291d17e12ed44776b88cf02335701","patch":"@@ -104,6 +104,8 @@ Trunk (unreleased changes)\n \n         BOOKKEEPER-675: Log noise fixup before cutting 4.2.2 (ivank)\n \n+        BOOKKEEPER-638: Two bookies could start at the same time to access bookie data. (sijie via ivank)\n+\n       hedwig-server:\n \n         BOOKKEEPER-601: readahead cache size isn't updated correctly (sijie via fpj)"},{"sha":"3c282135a0036c03b9d08d8a052880970ddbeccf","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieNettyServer.java","status":"modified","additions":25,"deletions":13,"changes":38,"blob_url":"https://github.com/apache/bookkeeper/blob/d9f4e60c850291d17e12ed44776b88cf02335701/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieNettyServer.java","raw_url":"https://github.com/apache/bookkeeper/raw/d9f4e60c850291d17e12ed44776b88cf02335701/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieNettyServer.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieNettyServer.java?ref=d9f4e60c850291d17e12ed44776b88cf02335701","patch":"@@ -20,36 +20,36 @@\n  */\n package org.apache.bookkeeper.proto;\n \n-import com.google.common.annotations.VisibleForTesting;\n-import com.google.common.util.concurrent.ThreadFactoryBuilder;\n-\n import java.io.IOException;\n import java.net.InetSocketAddress;\n-\n import java.util.concurrent.Executors;\n import java.util.concurrent.atomic.AtomicBoolean;\n \n import org.apache.bookkeeper.bookie.Bookie;\n import org.apache.bookkeeper.bookie.BookieException;\n import org.apache.bookkeeper.conf.ServerConfiguration;\n import org.apache.zookeeper.KeeperException;\n-\n import org.jboss.netty.bootstrap.ServerBootstrap;\n import org.jboss.netty.channel.Channel;\n import org.jboss.netty.channel.ChannelFactory;\n+import org.jboss.netty.channel.ChannelHandlerContext;\n import org.jboss.netty.channel.ChannelPipeline;\n import org.jboss.netty.channel.ChannelPipelineFactory;\n+import org.jboss.netty.channel.ChannelStateEvent;\n import org.jboss.netty.channel.Channels;\n+import org.jboss.netty.channel.SimpleChannelHandler;\n import org.jboss.netty.channel.group.ChannelGroup;\n import org.jboss.netty.channel.group.ChannelGroupFuture;\n import org.jboss.netty.channel.group.DefaultChannelGroup;\n import org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory;\n import org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder;\n import org.jboss.netty.handler.codec.frame.LengthFieldPrepender;\n-\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+import com.google.common.annotations.VisibleForTesting;\n+import com.google.common.util.concurrent.ThreadFactoryBuilder;\n+\n /**\n  * Netty server for serving bookie requests\n  */\n@@ -65,8 +65,6 @@\n     Object suspensionLock = new Object();\n     boolean suspended = false;\n \n-    final InetSocketAddress bindAddress;\n-\n     BookieNettyServer(ServerConfiguration conf, Bookie bookie)\n             throws IOException, KeeperException, InterruptedException, BookieException  {\n         this.conf = conf;\n@@ -77,12 +75,14 @@\n         serverChannelFactory = new NioServerSocketChannelFactory(\n                 Executors.newCachedThreadPool(tfb.setNameFormat(base + \"-boss-%d\").build()),\n                 Executors.newCachedThreadPool(tfb.setNameFormat(base + \"-worker-%d\").build()));\n+        InetSocketAddress bindAddress;\n         if (conf.getListeningInterface() == null) {\n             // listen on all interfaces\n             bindAddress = new InetSocketAddress(conf.getBookiePort());\n         } else {\n             bindAddress = Bookie.getBookieAddress(conf);\n         }\n+        listenOn(bindAddress);\n     }\n \n     boolean isRunning() {\n@@ -106,15 +106,17 @@ void resumeProcessing() {\n         }\n     }\n \n-    void start() {\n+    private void listenOn(InetSocketAddress address) {\n         ServerBootstrap bootstrap = new ServerBootstrap(serverChannelFactory);\n         bootstrap.setPipelineFactory(new BookiePipelineFactory());\n         bootstrap.setOption(\"child.tcpNoDelay\", conf.getServerTcpNoDelay());\n         bootstrap.setOption(\"child.soLinger\", 2);\n \n-        Channel listen = bootstrap.bind(bindAddress);\n-\n+        Channel listen = bootstrap.bind(address);\n         allChannels.add(listen);\n+    }\n+\n+    void start() {\n         isRunning.set(true);\n     }\n \n@@ -139,12 +141,22 @@ public ChannelPipeline getPipeline() throws Exception {\n \n             pipeline.addLast(\"bookieProtoDecoder\", new BookieProtoEncoding.RequestDecoder());\n             pipeline.addLast(\"bookieProtoEncoder\", new BookieProtoEncoding.ResponseEncoder());\n-            pipeline.addLast(\"bookieRequestHandler\", new BookieRequestHandler(conf, bookie,\n-                                                                              allChannels));\n+            SimpleChannelHandler requestHandler = isRunning.get() ? new BookieRequestHandler(conf, bookie, allChannels)\n+                    : new RejectRequestHandler();\n+            pipeline.addLast(\"bookieRequestHandler\", requestHandler);\n             return pipeline;\n         }\n     }\n \n+    private static class RejectRequestHandler extends SimpleChannelHandler {\n+\n+        @Override\n+        public void channelOpen(ChannelHandlerContext ctx, ChannelStateEvent e) throws Exception {\n+            ctx.getChannel().close();\n+        }\n+\n+    }\n+\n     private static class CleanupChannelGroup extends DefaultChannelGroup {\n         private AtomicBoolean closed = new AtomicBoolean(false);\n "}]}

