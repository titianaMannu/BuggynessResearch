{"sha":"da70648719679fd1db001c74ad873bf134f16198","node_id":"MDY6Q29tbWl0MTU3NTk1NjpkYTcwNjQ4NzE5Njc5ZmQxZGIwMDFjNzRhZDg3M2JmMTM0ZjE2MTk4","commit":{"author":{"name":"Matteo Merli","email":"mmerli@yahoo-inc.com","date":"2017-06-01T07:47:28Z"},"committer":{"name":"Enrico Olivelli","email":"eolivelli@apache.org","date":"2017-06-01T07:47:28Z"},"message":"BOOKKEEPER-1071: Use per connection instances of request encoder/decoder\n\nAuthor: Matteo Merli <mmerli@yahoo-inc.com>\n\nReviewers: Enrico Olivelli, Sijie Guo\n\nCloses #170 from merlimat/bk-1071","tree":{"sha":"a29b6b84b49c973f8afbfc45e4c2297eab2fffb7","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/a29b6b84b49c973f8afbfc45e4c2297eab2fffb7"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/da70648719679fd1db001c74ad873bf134f16198","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/da70648719679fd1db001c74ad873bf134f16198","html_url":"https://github.com/apache/bookkeeper/commit/da70648719679fd1db001c74ad873bf134f16198","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/da70648719679fd1db001c74ad873bf134f16198/comments","author":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","site_admin":false},"committer":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"fc51f73cbc9cdaae9876bc08cafa3e7a80826207","url":"https://api.github.com/repos/apache/bookkeeper/commits/fc51f73cbc9cdaae9876bc08cafa3e7a80826207","html_url":"https://github.com/apache/bookkeeper/commit/fc51f73cbc9cdaae9876bc08cafa3e7a80826207"}],"stats":{"total":18,"additions":6,"deletions":12},"files":[{"sha":"53fd334b74707dab16e5be1727ecbba0f6bae937","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieNettyServer.java","status":"modified","additions":6,"deletions":12,"changes":18,"blob_url":"https://github.com/apache/bookkeeper/blob/da70648719679fd1db001c74ad873bf134f16198/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieNettyServer.java","raw_url":"https://github.com/apache/bookkeeper/raw/da70648719679fd1db001c74ad873bf134f16198/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieNettyServer.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieNettyServer.java?ref=da70648719679fd1db001c74ad873bf134f16198","patch":"@@ -91,20 +91,14 @@\n     final BookieSocketAddress bookieAddress;\n \n     final BookieAuthProvider.Factory authProviderFactory;\n-    final BookieProtoEncoding.ResponseEncoder responseEncoder;\n-    final BookieProtoEncoding.RequestDecoder requestDecoder;\n+    final ExtensionRegistry registry = ExtensionRegistry.newInstance();\n \n     BookieNettyServer(ServerConfiguration conf, RequestProcessor processor)\n         throws IOException, KeeperException, InterruptedException, BookieException {\n         this.maxFrameSize = conf.getNettyMaxFrameSizeBytes();\n         this.conf = conf;\n         this.requestProcessor = processor;\n-\n-        ExtensionRegistry registry = ExtensionRegistry.newInstance();\n-        authProviderFactory = AuthProviderFactoryFactory.newBookieAuthProviderFactory(conf);\n-\n-        responseEncoder = new BookieProtoEncoding.ResponseEncoder(registry);\n-        requestDecoder = new BookieProtoEncoding.RequestDecoder(registry);\n+        this.authProviderFactory = AuthProviderFactoryFactory.newBookieAuthProviderFactory(conf);\n \n         if (!conf.isDisableServerSocketBind()) {\n             ThreadFactory threadFactory = new ThreadFactoryBuilder().setNameFormat(\"bookie-io-%s\").build();\n@@ -212,8 +206,8 @@ protected void initChannel(SocketChannel ch) throws Exception {\n                     pipeline.addLast(\"lengthbaseddecoder\", new LengthFieldBasedFrameDecoder(maxFrameSize, 0, 4, 0, 4));\n                     pipeline.addLast(\"lengthprepender\", new LengthFieldPrepender(4));\n \n-                    pipeline.addLast(\"bookieProtoDecoder\", requestDecoder);\n-                    pipeline.addLast(\"bookieProtoEncoder\", responseEncoder);\n+                    pipeline.addLast(\"bookieProtoDecoder\", new BookieProtoEncoding.RequestDecoder(registry));\n+                    pipeline.addLast(\"bookieProtoEncoder\", new BookieProtoEncoding.ResponseEncoder(registry));\n                     pipeline.addLast(\"bookieAuthHandler\", new AuthHandler.ServerSideHandler(contextHandler.getConnectionPeer(), authProviderFactory));\n \n                     ChannelInboundHandler requestHandler = isRunning.get()\n@@ -261,8 +255,8 @@ protected void initChannel(LocalChannel ch) throws Exception {\n                     pipeline.addLast(\"lengthbaseddecoder\", new LengthFieldBasedFrameDecoder(maxFrameSize, 0, 4, 0, 4));\n                     pipeline.addLast(\"lengthprepender\", new LengthFieldPrepender(4));\n \n-                    pipeline.addLast(\"bookieProtoDecoder\", requestDecoder);\n-                    pipeline.addLast(\"bookieProtoEncoder\", responseEncoder);\n+                    pipeline.addLast(\"bookieProtoDecoder\", new BookieProtoEncoding.RequestDecoder(registry));\n+                    pipeline.addLast(\"bookieProtoEncoder\", new BookieProtoEncoding.ResponseEncoder(registry));;\n                     pipeline.addLast(\"bookieAuthHandler\", new AuthHandler.ServerSideHandler(contextHandler.getConnectionPeer(), authProviderFactory));\n \n                     ChannelInboundHandler requestHandler = isRunning.get()"}]}

