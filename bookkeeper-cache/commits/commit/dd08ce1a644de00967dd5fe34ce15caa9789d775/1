{"sha":"dd08ce1a644de00967dd5fe34ce15caa9789d775","node_id":"MDY6Q29tbWl0MTU3NTk1NjpkZDA4Y2UxYTY0NGRlMDA5NjdkZDVmZTM0Y2UxNWNhYTk3ODlkNzc1","commit":{"author":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2017-06-01T11:19:58Z"},"committer":{"name":"Enrico Olivelli","email":"eolivelli@apache.org","date":"2017-06-01T11:19:58Z"},"message":"BOOKKEEPER-1074: Remove JMX Bean\n\nThis change is based on #160 , the change here is: gitsha [b3be81f](https://github.com/sijie/bookkeeper/commit/b3be81fadae50f2d4a2e938c2735fa35c6c31421)\n\nAuthor: Sijie Guo <sijie@apache.org>\nAuthor: Sijie Guo <sijieg@twitter.com>\n\nReviewers: Enrico Olivelli, Matteo Merli\n\nCloses #161 from sijie/remove_jmx_beam","tree":{"sha":"03b85f60f0780e0af4ab770e96f621c73ddd7984","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/03b85f60f0780e0af4ab770e96f621c73ddd7984"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/dd08ce1a644de00967dd5fe34ce15caa9789d775","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/dd08ce1a644de00967dd5fe34ce15caa9789d775","html_url":"https://github.com/apache/bookkeeper/commit/dd08ce1a644de00967dd5fe34ce15caa9789d775","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/dd08ce1a644de00967dd5fe34ce15caa9789d775/comments","author":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"committer":{"login":"eolivelli","id":9469110,"node_id":"MDQ6VXNlcjk0NjkxMTA=","avatar_url":"https://avatars.githubusercontent.com/u/9469110?v=4","gravatar_id":"","url":"https://api.github.com/users/eolivelli","html_url":"https://github.com/eolivelli","followers_url":"https://api.github.com/users/eolivelli/followers","following_url":"https://api.github.com/users/eolivelli/following{/other_user}","gists_url":"https://api.github.com/users/eolivelli/gists{/gist_id}","starred_url":"https://api.github.com/users/eolivelli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eolivelli/subscriptions","organizations_url":"https://api.github.com/users/eolivelli/orgs","repos_url":"https://api.github.com/users/eolivelli/repos","events_url":"https://api.github.com/users/eolivelli/events{/privacy}","received_events_url":"https://api.github.com/users/eolivelli/received_events","type":"User","site_admin":false},"parents":[{"sha":"d1f37dafbb475d4d6aab4769335550428c680269","url":"https://api.github.com/repos/apache/bookkeeper/commits/d1f37dafbb475d4d6aab4769335550428c680269","html_url":"https://github.com/apache/bookkeeper/commit/d1f37dafbb475d4d6aab4769335550428c680269"}],"stats":{"total":583,"additions":3,"deletions":580},"files":[{"sha":"63e1708676d4a450938381cb4ac196ed2ba14f84","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java","status":"modified","additions":2,"deletions":61,"changes":63,"blob_url":"https://github.com/apache/bookkeeper/blob/dd08ce1a644de00967dd5fe34ce15caa9789d775/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java","raw_url":"https://github.com/apache/bookkeeper/raw/dd08ce1a644de00967dd5fe34ce15caa9789d775/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java?ref=dd08ce1a644de00967dd5fe34ce15caa9789d775","patch":"@@ -43,18 +43,16 @@\n import java.util.concurrent.atomic.AtomicBoolean;\n import java.util.stream.Collectors;\n \n+import com.google.common.annotations.VisibleForTesting;\n import com.google.common.collect.Lists;\n+import com.google.common.collect.Sets;\n import com.google.common.util.concurrent.ThreadFactoryBuilder;\n import org.apache.bookkeeper.bookie.Journal.JournalScanner;\n import org.apache.bookkeeper.bookie.LedgerDirsManager.LedgerDirsListener;\n import org.apache.bookkeeper.bookie.LedgerDirsManager.NoWritableLedgerDirException;\n import org.apache.bookkeeper.conf.ServerConfiguration;\n-import org.apache.bookkeeper.jmx.BKMBeanInfo;\n-import org.apache.bookkeeper.jmx.BKMBeanRegistry;\n-\n import org.apache.bookkeeper.meta.LedgerManager;\n import org.apache.bookkeeper.meta.LedgerManagerFactory;\n-\n import org.apache.bookkeeper.net.BookieSocketAddress;\n import org.apache.bookkeeper.net.DNS;\n import org.apache.bookkeeper.proto.BookkeeperInternalCallbacks.WriteCallback;\n@@ -72,23 +70,18 @@\n import org.apache.bookkeeper.zookeeper.BoundExponentialBackoffRetryPolicy;\n import org.apache.bookkeeper.zookeeper.ZooKeeperClient;\n import org.apache.commons.io.FileUtils;\n-\n import org.apache.zookeeper.CreateMode;\n import org.apache.zookeeper.KeeperException;\n import org.apache.zookeeper.KeeperException.NodeExistsException;\n import org.apache.zookeeper.WatchedEvent;\n import org.apache.zookeeper.Watcher;\n import org.apache.zookeeper.Watcher.Event.EventType;\n import org.apache.zookeeper.Watcher.Event.KeeperState;\n-\n import org.apache.zookeeper.ZooKeeper;\n import org.apache.zookeeper.data.Stat;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import com.google.common.annotations.VisibleForTesting;\n-import com.google.common.collect.Sets;\n-\n import static org.apache.bookkeeper.bookie.BookKeeperServerStats.BOOKIE_ADD_ENTRY;\n import static org.apache.bookkeeper.bookie.BookKeeperServerStats.BOOKIE_ADD_ENTRY_BYTES;\n import static org.apache.bookkeeper.bookie.BookKeeperServerStats.BOOKIE_READ_ENTRY;\n@@ -142,10 +135,6 @@\n \n     private int exitCode = ExitCode.OK;\n \n-    // jmx related beans\n-    BookieBean jmxBookieBean;\n-    BKMBeanInfo jmxLedgerStorageBean;\n-\n     private final ConcurrentLongHashMap<byte[]> masterKeyCache = new ConcurrentLongHashMap<>();\n \n     final protected String zkBookieRegPath;\n@@ -893,54 +882,6 @@ public void diskJustWritable(File disk) {\n         };\n     }\n \n-    /**\n-     * Register jmx with parent\n-     *\n-     * @param parent parent bk mbean info\n-     */\n-    public void registerJMX(BKMBeanInfo parent) {\n-        try {\n-            jmxBookieBean = new BookieBean(this);\n-            BKMBeanRegistry.getInstance().register(jmxBookieBean, parent);\n-\n-            try {\n-                jmxLedgerStorageBean = this.ledgerStorage.getJMXBean();\n-                if (jmxLedgerStorageBean != null) {\n-                    BKMBeanRegistry.getInstance().register(jmxLedgerStorageBean, jmxBookieBean);\n-                }\n-            } catch (Exception e) {\n-                LOG.warn(\"Failed to register with JMX for ledger cache\", e);\n-                jmxLedgerStorageBean = null;\n-            }\n-        } catch (Exception e) {\n-            LOG.warn(\"Failed to register with JMX\", e);\n-            jmxBookieBean = null;\n-        }\n-    }\n-\n-    /**\n-     * Unregister jmx\n-     */\n-    public void unregisterJMX() {\n-        try {\n-            if (jmxLedgerStorageBean != null) {\n-                BKMBeanRegistry.getInstance().unregister(jmxLedgerStorageBean);\n-            }\n-        } catch (Exception e) {\n-            LOG.warn(\"Failed to unregister with JMX\", e);\n-        }\n-        try {\n-            if (jmxBookieBean != null) {\n-                BKMBeanRegistry.getInstance().unregister(jmxBookieBean);\n-            }\n-        } catch (Exception e) {\n-            LOG.warn(\"Failed to unregister with JMX\", e);\n-        }\n-        jmxBookieBean = null;\n-        jmxLedgerStorageBean = null;\n-    }\n-\n-\n     /**\n      * Instantiate the ZooKeeper client for the Bookie.\n      */"},{"sha":"67d0129baa65857f6e5720d719304b3c1b90ad3f","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieBean.java","status":"removed","additions":0,"deletions":56,"changes":56,"blob_url":"https://github.com/apache/bookkeeper/blob/d1f37dafbb475d4d6aab4769335550428c680269/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieBean.java","raw_url":"https://github.com/apache/bookkeeper/raw/d1f37dafbb475d4d6aab4769335550428c680269/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieBean.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieBean.java?ref=d1f37dafbb475d4d6aab4769335550428c680269","patch":"@@ -1,56 +0,0 @@\n-/**\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.apache.bookkeeper.bookie;\n-\n-import java.io.File;\n-\n-import org.apache.bookkeeper.jmx.BKMBeanInfo;\n-\n-/**\n- * Bookie Bean\n- */\n-public class BookieBean implements BookieMXBean, BKMBeanInfo {\n-\n-    protected Bookie bk;\n-\n-    public BookieBean(Bookie bk) {\n-        this.bk = bk;\n-    }\n-\n-    @Override\n-    public String getName() {\n-        return \"Bookie\";\n-    }\n-\n-    @Override\n-    public boolean isHidden() {\n-        return false;\n-    }\n-\n-    @Override\n-    public int getQueueLength() {\n-\n-        int totalLength = 0;\n-        for (Journal journal : bk.journals) {\n-            totalLength += journal.getJournalQueueLength();\n-        }\n-        return totalLength;\n-    }\n-\n-}"},{"sha":"24f299cc5ca38db1df20917e371517b646107deb","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieMXBean.java","status":"removed","additions":0,"deletions":31,"changes":31,"blob_url":"https://github.com/apache/bookkeeper/blob/d1f37dafbb475d4d6aab4769335550428c680269/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieMXBean.java","raw_url":"https://github.com/apache/bookkeeper/raw/d1f37dafbb475d4d6aab4769335550428c680269/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieMXBean.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieMXBean.java?ref=d1f37dafbb475d4d6aab4769335550428c680269","patch":"@@ -1,31 +0,0 @@\n-/**\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.apache.bookkeeper.bookie;\n-\n-import java.io.File;\n-\n-/**\n- * Bookie MBean\n- */\n-public interface BookieMXBean {\n-    /**\n-     * @return log entry queue length\n-     */\n-    public int getQueueLength();\n-}"},{"sha":"b8a6e53c3aaebef46cac5f22f302540074959709","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/InterleavedLedgerStorage.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/apache/bookkeeper/blob/dd08ce1a644de00967dd5fe34ce15caa9789d775/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/InterleavedLedgerStorage.java","raw_url":"https://github.com/apache/bookkeeper/raw/dd08ce1a644de00967dd5fe34ce15caa9789d775/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/InterleavedLedgerStorage.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/InterleavedLedgerStorage.java?ref=dd08ce1a644de00967dd5fe34ce15caa9789d775","patch":"@@ -40,7 +40,6 @@\n import java.util.NavigableMap;\n \n import org.apache.bookkeeper.conf.ServerConfiguration;\n-import org.apache.bookkeeper.jmx.BKMBeanInfo;\n import org.apache.bookkeeper.meta.LedgerManager;\n import org.apache.bookkeeper.proto.BookieProtocol;\n import org.apache.bookkeeper.stats.OpStatsLogger;\n@@ -420,11 +419,6 @@ public EntryLogger getEntryLogger() {\n         return entryLogger;\n     }\n \n-    @Override\n-    public BKMBeanInfo getJMXBean() {\n-        return ledgerCache.getJMXBean();\n-    }\n-\n     @Override\n     public void registerLedgerDeletionListener(LedgerDeletionListener listener) {\n         ledgerDeletionListeners.add(listener);"},{"sha":"c55592f3de4a6d79f76a6c30fc4eeba667eab31a","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCache.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/dd08ce1a644de00967dd5fe34ce15caa9789d775/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCache.java","raw_url":"https://github.com/apache/bookkeeper/raw/dd08ce1a644de00967dd5fe34ce15caa9789d775/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCache.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCache.java?ref=dd08ce1a644de00967dd5fe34ce15caa9789d775","patch":"@@ -23,7 +23,6 @@\n \n import java.io.Closeable;\n import java.io.IOException;\n-import java.nio.ByteBuffer;\n \n import io.netty.buffer.ByteBuf;\n \n@@ -52,7 +51,6 @@\n \n     void deleteLedger(long ledgerId) throws IOException;\n \n-    LedgerCacheBean getJMXBean();\n     void setExplicitLac(long ledgerId, ByteBuf lac) throws IOException;\n     ByteBuf getExplicitLac(long ledgerId);\n }"},{"sha":"dabc12de9b859297b4c0b8652c9e00948133c239","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheBean.java","status":"removed","additions":0,"deletions":27,"changes":27,"blob_url":"https://github.com/apache/bookkeeper/blob/d1f37dafbb475d4d6aab4769335550428c680269/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheBean.java","raw_url":"https://github.com/apache/bookkeeper/raw/d1f37dafbb475d4d6aab4769335550428c680269/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheBean.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheBean.java?ref=d1f37dafbb475d4d6aab4769335550428c680269","patch":"@@ -1,27 +0,0 @@\n-/**\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.apache.bookkeeper.bookie;\n-\n-import org.apache.bookkeeper.jmx.BKMBeanInfo;\n-\n-/**\n- * Ledger Cache Bean\n- */\n-public interface LedgerCacheBean extends LedgerCacheMXBean, BKMBeanInfo {\n-}"},{"sha":"6fd6ecf4f159e11c0b58d0939ddde58208fd5674","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheImpl.java","status":"modified","additions":0,"deletions":41,"changes":41,"blob_url":"https://github.com/apache/bookkeeper/blob/dd08ce1a644de00967dd5fe34ce15caa9789d775/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheImpl.java","raw_url":"https://github.com/apache/bookkeeper/raw/dd08ce1a644de00967dd5fe34ce15caa9789d775/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheImpl.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheImpl.java?ref=dd08ce1a644de00967dd5fe34ce15caa9789d775","patch":"@@ -22,7 +22,6 @@\n package org.apache.bookkeeper.bookie;\n \n import java.io.IOException;\n-import java.nio.ByteBuffer;\n \n import org.apache.bookkeeper.conf.ServerConfiguration;\n import org.apache.bookkeeper.stats.NullStatsLogger;\n@@ -157,46 +156,6 @@ public boolean ledgerExists(long ledgerId) throws IOException {\n         return indexPersistenceManager.ledgerExists(ledgerId);\n     }\n \n-    @Override\n-    public LedgerCacheBean getJMXBean() {\n-        return new LedgerCacheBean() {\n-            @Override\n-            public String getName() {\n-                return \"LedgerCache\";\n-            }\n-\n-            @Override\n-            public boolean isHidden() {\n-                return false;\n-            }\n-\n-            @Override\n-            public int getPageCount() {\n-                return LedgerCacheImpl.this.indexPageManager.getNumUsedPages();\n-            }\n-\n-            @Override\n-            public int getPageSize() {\n-                return LedgerCacheImpl.this.getPageSize();\n-            }\n-\n-            @Override\n-            public int getOpenFileLimit() {\n-                return LedgerCacheImpl.this.indexPersistenceManager.getOpenFileLimit();\n-            }\n-\n-            @Override\n-            public int getPageLimit() {\n-                return LedgerCacheImpl.this.indexPageManager.getPageLimit();\n-            }\n-\n-            @Override\n-            public int getNumOpenLedgers() {\n-                return LedgerCacheImpl.this.indexPersistenceManager.getNumOpenLedgers();\n-            }\n-        };\n-    }\n-\n     @Override\n     public void close() throws IOException {\n         indexPersistenceManager.close();"},{"sha":"c24e3489426e0c4c4e985c14e78a5e3e0b7d0edb","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheMXBean.java","status":"removed","additions":0,"deletions":50,"changes":50,"blob_url":"https://github.com/apache/bookkeeper/blob/d1f37dafbb475d4d6aab4769335550428c680269/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheMXBean.java","raw_url":"https://github.com/apache/bookkeeper/raw/d1f37dafbb475d4d6aab4769335550428c680269/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheMXBean.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerCacheMXBean.java?ref=d1f37dafbb475d4d6aab4769335550428c680269","patch":"@@ -1,50 +0,0 @@\n-/**\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.apache.bookkeeper.bookie;\n-\n-/**\n- * Ledger Cache MBean\n- */\n-public interface LedgerCacheMXBean {\n-\n-    /**\n-     * @return number of page used in cache\n-     */\n-    public int getPageCount();\n-\n-    /**\n-     * @return page size\n-     */\n-    public int getPageSize();\n-\n-    /**\n-     * @return the limit of open files\n-     */\n-    public int getOpenFileLimit();\n-\n-    /**\n-     * @return the limit number of pages\n-     */\n-    public int getPageLimit();\n-\n-    /**\n-     * @return number of open ledgers\n-     */\n-    public int getNumOpenLedgers();\n-}"},{"sha":"9d2161e8c024de86a313c082390f51c933e15eb3","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerStorage.java","status":"modified","additions":1,"deletions":7,"changes":8,"blob_url":"https://github.com/apache/bookkeeper/blob/dd08ce1a644de00967dd5fe34ce15caa9789d775/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerStorage.java","raw_url":"https://github.com/apache/bookkeeper/raw/dd08ce1a644de00967dd5fe34ce15caa9789d775/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerStorage.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerStorage.java?ref=dd08ce1a644de00967dd5fe34ce15caa9789d775","patch":"@@ -28,7 +28,6 @@\n import org.apache.bookkeeper.bookie.CheckpointSource.Checkpoint;\n import org.apache.bookkeeper.conf.ServerConfiguration;\n import org.apache.bookkeeper.stats.StatsLogger;\n-import org.apache.bookkeeper.jmx.BKMBeanInfo;\n import org.apache.bookkeeper.meta.LedgerManager;\n \n /**\n@@ -132,7 +131,7 @@ public void initialize(ServerConfiguration conf, LedgerManager ledgerManager,\n      * before that point already persist.\n      *\n      * @param checkpoint\n-     *          Check Point that {@link Checkpointer} proposed.\n+     *          Check Point that {@link Checkpoint} proposed.\n      * @throws IOException\n      * @return the checkpoint that the ledger storage finished.\n      */\n@@ -157,11 +156,6 @@ public void initialize(ServerConfiguration conf, LedgerManager ledgerManager,\n      */\n     void registerLedgerDeletionListener(LedgerDeletionListener listener);\n \n-    /**\n-     * Get the JMX management bean for this LedgerStorage\n-     */\n-    BKMBeanInfo getJMXBean();\n-\n     void setExplicitlac(long ledgerId, ByteBuf lac) throws IOException;\n \n     ByteBuf getExplicitLac(long ledgerId);"},{"sha":"5d4f1201517bd46f90face4752d3d593de3913d1","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/jmx/BKMBeanInfo.java","status":"removed","additions":0,"deletions":27,"changes":27,"blob_url":"https://github.com/apache/bookkeeper/blob/d1f37dafbb475d4d6aab4769335550428c680269/bookkeeper-server/src/main/java/org/apache/bookkeeper/jmx/BKMBeanInfo.java","raw_url":"https://github.com/apache/bookkeeper/raw/d1f37dafbb475d4d6aab4769335550428c680269/bookkeeper-server/src/main/java/org/apache/bookkeeper/jmx/BKMBeanInfo.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/jmx/BKMBeanInfo.java?ref=d1f37dafbb475d4d6aab4769335550428c680269","patch":"@@ -1,27 +0,0 @@\n-/**\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.apache.bookkeeper.jmx;\n-\n-import org.apache.zookeeper.jmx.ZKMBeanInfo;\n-\n-/**\n- * BookKeeper MBean info interface.\n- */\n-public interface BKMBeanInfo extends ZKMBeanInfo {\n-}"},{"sha":"39889168ab0eb19af71c9edfbccef99e53467d99","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/jmx/BKMBeanRegistry.java","status":"removed","additions":0,"deletions":89,"changes":89,"blob_url":"https://github.com/apache/bookkeeper/blob/d1f37dafbb475d4d6aab4769335550428c680269/bookkeeper-server/src/main/java/org/apache/bookkeeper/jmx/BKMBeanRegistry.java","raw_url":"https://github.com/apache/bookkeeper/raw/d1f37dafbb475d4d6aab4769335550428c680269/bookkeeper-server/src/main/java/org/apache/bookkeeper/jmx/BKMBeanRegistry.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/jmx/BKMBeanRegistry.java?ref=d1f37dafbb475d4d6aab4769335550428c680269","patch":"@@ -1,89 +0,0 @@\n-/**\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.apache.bookkeeper.jmx;\n-\n-import javax.management.MalformedObjectNameException;\n-import javax.management.ObjectName;\n-\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-import org.apache.zookeeper.jmx.MBeanRegistry;\n-import org.apache.zookeeper.jmx.ZKMBeanInfo;\n-\n-/**\n- * This class provides a unified interface for registering/unregistering of\n- * bookkeeper MBeans with the platform MBean server. It builds a hierarchy of MBeans\n- * where each MBean represented by a filesystem-like path. Eventually, this hierarchy\n- * will be stored in the zookeeper data tree instance as a virtual data tree.\n- */\n-public class BKMBeanRegistry extends MBeanRegistry {\n-    static final Logger LOG = LoggerFactory.getLogger(BKMBeanRegistry.class);\n-    \n-    static final String DOMAIN = \"org.apache.BookKeeperService\";\n-\n-    static BKMBeanRegistry instance=new BKMBeanRegistry(); \n-\n-    public static BKMBeanRegistry getInstance(){\n-        return instance;\n-    }\n-\n-    protected String getDomainName() {\n-        return DOMAIN;\n-    }\n-    \n-    /**\n-     * This takes a path, such as /a/b/c, and converts it to \n-     * name0=a,name1=b,name2=c\n-     * \n-     * Copy from zookeeper MBeanRegistry since tokenize is private\n-     */\n-    protected int tokenize(StringBuilder sb, String path, int index) {\n-        String[] tokens = path.split(\"/\");\n-        for (String s: tokens) {\n-            if (s.length()==0)\n-                continue;\n-            sb.append(\"name\").append(index++).append(\"=\").append(s).append(\",\");\n-        }\n-        return index;\n-    }\n-\n-    /**\n-     * Builds an MBean path and creates an ObjectName instance using the path. \n-     * @param path MBean path\n-     * @param bean the MBean instance\n-     * @return ObjectName to be registered with the platform MBean server\n-     */\n-    protected ObjectName makeObjectName(String path, ZKMBeanInfo bean)\n-        throws MalformedObjectNameException {\n-        if(path==null)\n-            return null;\n-        StringBuilder beanName = new StringBuilder(getDomainName() + \":\");\n-        int counter=0;\n-        counter=tokenize(beanName,path,counter);\n-        tokenize(beanName,bean.getName(),counter);\n-        beanName.deleteCharAt(beanName.length()-1);\n-        try {\n-            return new ObjectName(beanName.toString());\n-        } catch (MalformedObjectNameException e) {\n-            LOG.warn(\"Invalid name \\\"\" + beanName.toString() + \"\\\" for class \"\n-                    + bean.getClass().toString());\n-            throw e;\n-        }\n-    }\n-}"},{"sha":"38d79c4179912e58169f79d5a31c1416fdccb9eb","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java","status":"modified","additions":0,"deletions":32,"changes":32,"blob_url":"https://github.com/apache/bookkeeper/blob/dd08ce1a644de00967dd5fe34ce15caa9789d775/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java","raw_url":"https://github.com/apache/bookkeeper/raw/dd08ce1a644de00967dd5fe34ce15caa9789d775/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java?ref=dd08ce1a644de00967dd5fe34ce15caa9789d775","patch":"@@ -33,7 +33,6 @@\n import org.apache.bookkeeper.bookie.BookieException;\n import org.apache.bookkeeper.bookie.ExitCode;\n import org.apache.bookkeeper.conf.ServerConfiguration;\n-import org.apache.bookkeeper.jmx.BKMBeanRegistry;\n import org.apache.bookkeeper.net.BookieSocketAddress;\n import org.apache.bookkeeper.processor.RequestProcessor;\n import org.apache.bookkeeper.replication.AutoRecoveryMain;\n@@ -75,7 +74,6 @@\n     int exitCode = ExitCode.OK;\n \n     // operation stats\n-    protected BookieServerBean jmxBkServerBean;\n     AutoRecoveryMain autoRecoveryMain = null;\n     private boolean isAutoRecoveryDaemonEnabled;\n \n@@ -128,9 +126,6 @@ public void start() throws IOException, UnavailableException {\n         running = true;\n         deathWatcher = new DeathWatcher(conf);\n         deathWatcher.start();\n-\n-        // register jmx\n-        registerJMX();\n     }\n \n     @VisibleForTesting\n@@ -173,33 +168,6 @@ public synchronized void shutdown() {\n         }\n         this.requestProcessor.close();\n         running = false;\n-\n-        // unregister JMX\n-        unregisterJMX();\n-    }\n-\n-    protected void registerJMX() {\n-        try {\n-            jmxBkServerBean = new BookieServerBean(conf, this);\n-            BKMBeanRegistry.getInstance().register(jmxBkServerBean, null);\n-\n-            bookie.registerJMX(jmxBkServerBean);\n-        } catch (Exception e) {\n-            LOG.warn(\"Failed to register with JMX\", e);\n-            jmxBkServerBean = null;\n-        }\n-    }\n-\n-    protected void unregisterJMX() {\n-        try {\n-            bookie.unregisterJMX();\n-            if (jmxBkServerBean != null) {\n-                BKMBeanRegistry.getInstance().unregister(jmxBkServerBean);\n-            }\n-        } catch (Exception e) {\n-            LOG.warn(\"Failed to unregister with JMX\", e);\n-        }\n-        jmxBkServerBean = null;\n     }\n \n     public boolean isRunning() {"},{"sha":"afb763e93e116e6b03cc35dc44524685e649757a","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServerBean.java","status":"removed","additions":0,"deletions":82,"changes":82,"blob_url":"https://github.com/apache/bookkeeper/blob/d1f37dafbb475d4d6aab4769335550428c680269/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServerBean.java","raw_url":"https://github.com/apache/bookkeeper/raw/d1f37dafbb475d4d6aab4769335550428c680269/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServerBean.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServerBean.java?ref=d1f37dafbb475d4d6aab4769335550428c680269","patch":"@@ -1,82 +0,0 @@\n-/**\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.apache.bookkeeper.proto;\n-\n-import java.net.UnknownHostException;\n-\n-import org.apache.bookkeeper.bookie.Bookie;\n-import org.apache.bookkeeper.conf.ServerConfiguration;\n-import org.apache.bookkeeper.jmx.BKMBeanInfo;\n-import org.apache.bookkeeper.proto.BKStats.OpStatData;\n-\n-/**\n- * Bookie Server Bean\n- */\n-public class BookieServerBean implements BookieServerMXBean, BKMBeanInfo {\n-\n-    protected final BookieServer bks;\n-    protected final ServerConfiguration conf;\n-    private final String name;\n-\n-    public BookieServerBean(ServerConfiguration conf, BookieServer bks) {\n-        this.conf = conf;\n-        this.bks = bks;\n-        name = \"BookieServer_\" + conf.getBookiePort();\n-    }\n-\n-    @Override\n-    public String getName() {\n-        return name;\n-    }\n-\n-    @Override\n-    public boolean isHidden() {\n-        return false;\n-    }\n-\n-    @Override\n-    public long getNumPacketsReceived() {\n-        return ServerStats.getInstance().getPacketsReceived();\n-    }\n-\n-    @Override\n-    public long getNumPacketsSent() {\n-        return ServerStats.getInstance().getPacketsSent();\n-    }\n-\n-    @Override\n-    public OpStatData getAddStats() {\n-        return BKStats.getInstance().getOpStats(BKStats.STATS_ADD).toOpStatData();\n-    }\n-\n-    @Override\n-    public OpStatData getReadStats() {\n-        return BKStats.getInstance().getOpStats(BKStats.STATS_READ).toOpStatData();\n-    }\n-\n-    @Override\n-    public String getServerPort() {\n-        try {\n-            return Bookie.getBookieAddress(conf).toString();\n-        } catch (UnknownHostException e) {\n-            return \"localhost:\" + conf.getBookiePort();\n-        }\n-    }\n-\n-}"},{"sha":"054309fc5ed33861bbb2a7f220d65ae258ea622c","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServerMXBean.java","status":"removed","additions":0,"deletions":53,"changes":53,"blob_url":"https://github.com/apache/bookkeeper/blob/d1f37dafbb475d4d6aab4769335550428c680269/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServerMXBean.java","raw_url":"https://github.com/apache/bookkeeper/raw/d1f37dafbb475d4d6aab4769335550428c680269/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServerMXBean.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServerMXBean.java?ref=d1f37dafbb475d4d6aab4769335550428c680269","patch":"@@ -1,53 +0,0 @@\n-/**\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-\n-package org.apache.bookkeeper.proto;\n-\n-import org.apache.bookkeeper.proto.BKStats.OpStatData;\n-\n-/**\n- * Bookie Server MBean\n- */\n-public interface BookieServerMXBean {\n-\n-    /**\n-     * @return packets received\n-     */\n-    public long getNumPacketsReceived();\n-\n-    /**\n-     * @return packets sent\n-     */\n-    public long getNumPacketsSent();\n-\n-    /**\n-     * @return add stats\n-     */\n-    public OpStatData getAddStats();\n-\n-    /**\n-     * @return read stats\n-     */\n-    public OpStatData getReadStats();\n-\n-    /**\n-     * @return server port\n-     */\n-    public String getServerPort();\n-\n-}"},{"sha":"6be898da2a66ea11eb4c8e7cf47a6627605d32f7","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/TestSyncThread.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/apache/bookkeeper/blob/dd08ce1a644de00967dd5fe34ce15caa9789d775/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/TestSyncThread.java","raw_url":"https://github.com/apache/bookkeeper/raw/dd08ce1a644de00967dd5fe34ce15caa9789d775/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/TestSyncThread.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/TestSyncThread.java?ref=dd08ce1a644de00967dd5fe34ce15caa9789d775","patch":"@@ -39,7 +39,6 @@\n import org.apache.bookkeeper.bookie.CheckpointSource.Checkpoint;\n import org.apache.bookkeeper.bookie.LedgerDirsManager.LedgerDirsListener;\n import org.apache.bookkeeper.bookie.LedgerDirsManager.NoWritableLedgerDirException;\n-import org.apache.bookkeeper.jmx.BKMBeanInfo;\n import org.apache.bookkeeper.meta.LedgerManager;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -345,9 +344,6 @@ public Checkpoint checkpoint(Checkpoint checkpoint)\n             return checkpoint;\n         }\n \n-        @Override\n-        public BKMBeanInfo getJMXBean() { return null; }\n-\n         @Override\n         public void registerLedgerDeletionListener(LedgerDeletionListener listener) {\n         }"},{"sha":"48b8bab1fa19527e1c074b43205ca002ec02fd68","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/meta/GcLedgersTest.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/apache/bookkeeper/blob/dd08ce1a644de00967dd5fe34ce15caa9789d775/bookkeeper-server/src/test/java/org/apache/bookkeeper/meta/GcLedgersTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/dd08ce1a644de00967dd5fe34ce15caa9789d775/bookkeeper-server/src/test/java/org/apache/bookkeeper/meta/GcLedgersTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/meta/GcLedgersTest.java?ref=dd08ce1a644de00967dd5fe34ce15caa9789d775","patch":"@@ -60,7 +60,6 @@\n import org.apache.bookkeeper.client.BookKeeper.DigestType;\n import org.apache.bookkeeper.client.LedgerMetadata;\n import org.apache.bookkeeper.conf.ServerConfiguration;\n-import org.apache.bookkeeper.jmx.BKMBeanInfo;\n import org.apache.bookkeeper.meta.LedgerManager.LedgerRange;\n import org.apache.bookkeeper.meta.LedgerManager.LedgerRangeIterator;\n import org.apache.bookkeeper.proto.BookkeeperInternalCallbacks.GenericCallback;\n@@ -403,11 +402,6 @@ public void deleteLedger(long ledgerId) throws IOException {\n             return subBkActiveLedgers.keySet();\n         }\n \n-        @Override\n-        public BKMBeanInfo getJMXBean() {\n-            return null;\n-        }\n-\n         @Override\n         public EntryLogger getEntryLogger() {\n             return null;"},{"sha":"d9622649332fe448783229aec5269d9c02fd5109","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/meta/LedgerManagerTestCase.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/apache/bookkeeper/blob/dd08ce1a644de00967dd5fe34ce15caa9789d775/bookkeeper-server/src/test/java/org/apache/bookkeeper/meta/LedgerManagerTestCase.java","raw_url":"https://github.com/apache/bookkeeper/raw/dd08ce1a644de00967dd5fe34ce15caa9789d775/bookkeeper-server/src/test/java/org/apache/bookkeeper/meta/LedgerManagerTestCase.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/meta/LedgerManagerTestCase.java?ref=dd08ce1a644de00967dd5fe34ce15caa9789d775","patch":"@@ -35,7 +35,6 @@\n import org.apache.bookkeeper.bookie.EntryLogger;\n import org.apache.bookkeeper.bookie.LedgerDirsManager;\n import org.apache.bookkeeper.conf.ServerConfiguration;\n-import org.apache.bookkeeper.jmx.BKMBeanInfo;\n import org.apache.bookkeeper.stats.StatsLogger;\n import org.apache.bookkeeper.test.BookKeeperClusterTestCase;\n import org.apache.bookkeeper.util.SnapshotMap;\n@@ -194,11 +193,6 @@ public void deleteLedger(long ledgerId) throws IOException {\n             return subBkActiveLedgers.keySet();\n         }\n \n-        @Override\n-        public BKMBeanInfo getJMXBean() {\n-            return null;\n-        }\n-\n         @Override\n         public EntryLogger getEntryLogger() {\n             return null;"}]}

