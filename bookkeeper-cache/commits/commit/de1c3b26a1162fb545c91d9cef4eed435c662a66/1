{"sha":"de1c3b26a1162fb545c91d9cef4eed435c662a66","node_id":"MDY6Q29tbWl0MTU3NTk1NjpkZTFjM2IyNmExMTYyZmI1NDVjOTFkOWNlZjRlZWQ0MzVjNjYyYTY2","commit":{"author":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2011-08-10T10:37:39Z"},"committer":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2011-08-10T10:37:39Z"},"message":"BOOKKEEPER-29: BookieRecoveryTest fails intermittently (fpj via ivank)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1156096 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"4e247abfe54364ba6649b6a2cd55a8babb49a8dc","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/4e247abfe54364ba6649b6a2cd55a8babb49a8dc"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/de1c3b26a1162fb545c91d9cef4eed435c662a66","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/de1c3b26a1162fb545c91d9cef4eed435c662a66","html_url":"https://github.com/apache/bookkeeper/commit/de1c3b26a1162fb545c91d9cef4eed435c662a66","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/de1c3b26a1162fb545c91d9cef4eed435c662a66/comments","author":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"committer":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"parents":[{"sha":"3e9d596480537e45a23e591a1daabddffd2b15bf","url":"https://api.github.com/repos/apache/bookkeeper/commits/3e9d596480537e45a23e591a1daabddffd2b15bf","html_url":"https://github.com/apache/bookkeeper/commit/3e9d596480537e45a23e591a1daabddffd2b15bf"}],"stats":{"total":53,"additions":48,"deletions":5},"files":[{"sha":"bc84e6ecb268f28ce22bf71cda5a0439aedeb108","filename":"CHANGES.txt","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/apache/bookkeeper/blob/de1c3b26a1162fb545c91d9cef4eed435c662a66/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/de1c3b26a1162fb545c91d9cef4eed435c662a66/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=de1c3b26a1162fb545c91d9cef4eed435c662a66","patch":"@@ -23,3 +23,6 @@ BUGFIXES:\n   BOOKKEEPER-11: Read from open ledger (fpj via ivank)\n \n   BOOKKEEPER-27: mvn site failed with unresolved dependencies (ivank via fpj)\n+  \n+  BOOKKEEPER-29: BookieRecoveryTest fails intermittently (fpj via ivank)\n+"},{"sha":"693c1d10892d46dcd925daf3440c4ce429f7049c","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieRecoveryTest.java","status":"modified","additions":45,"deletions":5,"changes":50,"blob_url":"https://github.com/apache/bookkeeper/blob/de1c3b26a1162fb545c91d9cef4eed435c662a66/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieRecoveryTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/de1c3b26a1162fb545c91d9cef4eed435c662a66/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieRecoveryTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieRecoveryTest.java?ref=de1c3b26a1162fb545c91d9cef4eed435c662a66","patch":"@@ -39,14 +39,16 @@\n import org.apache.log4j.Logger;\n import org.apache.zookeeper.KeeperException;\n import org.apache.zookeeper.KeeperException.Code;\n+import org.apache.zookeeper.WatchedEvent;\n+import org.apache.zookeeper.Watcher;\n import org.junit.After;\n import org.junit.Before;\n import org.junit.Test;\n \n /**\n  * This class tests the bookie recovery admin functionality.\n  */\n-public class BookieRecoveryTest extends BaseTestCase {\n+public class BookieRecoveryTest extends BaseTestCase implements Watcher {\n     static Logger LOG = Logger.getLogger(BookieRecoveryTest.class);\n \n     // Object used for synchronizing async method calls\n@@ -75,7 +77,7 @@ public void recoverComplete(int rc, Object ctx) {\n \n     // Objects to use for this jUnit test.\n     DigestType digestType;\n-    SyncObject sync;\n+    SyncObject sync, zkSync;\n     BookieRecoverCallback bookieRecoverCb;\n     BookKeeperTools bkTools;\n \n@@ -93,6 +95,7 @@ public void setUp() throws Exception {\n         System.setProperty(\"digestType\", digestType.toString());\n         System.setProperty(\"passwd\", \"\");\n         sync = new SyncObject();\n+        zkSync = new SyncObject();\n         bookieRecoverCb = new BookieRecoverCallback();\n         bkTools = new BookKeeperTools(HOSTPORT);\n     }\n@@ -155,20 +158,30 @@ private void writeEntriestoLedgers(int numEntries, long startEntryId, List<Ledge\n      * @throws IOException\n      */\n     private void startNewBookie(int port)\n-    throws IOException, InterruptedException {\n+    throws IOException, InterruptedException, KeeperException {\n         File f = File.createTempFile(\"bookie\", \"test\");\n         tmpDirs.add(f);\n         f.delete();\n         f.mkdir();\n+        zkSync.value = false;\n+        bkc.getZkHandle().getChildren(\"/ledgers/available\", this);\n+        \n         BookieServer server = new BookieServer(port, HOSTPORT, f, new File[] { f });\n         server.start();\n         bs.add(server);\n-        while(!server.isRunning()){\n+        \n+        while(!zkSync.value){\n             Thread.sleep(500);\n         }\n+        \n         LOG.info(\"New bookie on port \" + port + \" has been created.\");\n     }\n \n+    @Override\n+    public void process(WatchedEvent event) {\n+        zkSync.value = true;\n+    }\n+    \n     /**\n      * Helper method to verify that we can read the recovered ledger entries.\n      * \n@@ -221,9 +234,16 @@ public void testAsyncBookieRecoveryToSpecificBookie() throws Exception {\n         writeEntriestoLedgers(numMsgs, 0, lhs);\n \n         // Shutdown the first bookie server\n+        zkSync.value = false;\n+        bkc.getZkHandle().getChildren(\"/ledgers/available\", this);\n         LOG.info(\"Finished writing all ledger entries so shutdown one of the bookies.\");\n         bs.get(0).shutdown();\n         bs.remove(0);\n+        \n+        // Block until I get a notification \n+        while(!zkSync.value){\n+            Thread.sleep(100);\n+        }\n \n         // Startup a new bookie server\n         int newBookiePort = initialPort + numBookies;\n@@ -274,10 +294,17 @@ public void testAsyncBookieRecoveryToRandomBookies() throws Exception {\n         writeEntriestoLedgers(numMsgs, 0, lhs);\n \n         // Shutdown the first bookie server\n+        zkSync.value = false;\n+        bkc.getZkHandle().getChildren(\"/ledgers/available\", this);\n         LOG.info(\"Finished writing all ledger entries so shutdown one of the bookies.\");\n         bs.get(0).shutdown();\n         bs.remove(0);\n-\n+        \n+        // Block until I get a notification \n+        while(!zkSync.value){\n+            Thread.sleep(100);\n+        }\n+        \n         // Startup three new bookie servers\n         for (int i = 0; i < 3; i++) {\n             int newBookiePort = initialPort + numBookies + i;\n@@ -328,10 +355,17 @@ public void testSyncBookieRecoveryToSpecificBookie() throws Exception {\n         writeEntriestoLedgers(numMsgs, 0, lhs);\n \n         // Shutdown the first bookie server\n+        zkSync.value = false;\n+        bkc.getZkHandle().getChildren(\"/ledgers/available\", this);\n         LOG.info(\"Finished writing all ledger entries so shutdown one of the bookies.\");\n         bs.get(0).shutdown();\n         bs.remove(0);\n \n+        // Block until I get a notification \n+        while(!zkSync.value){\n+            Thread.sleep(100);\n+        }\n+        \n         // Startup a new bookie server\n         int newBookiePort = initialPort + numBookies;\n         startNewBookie(newBookiePort);\n@@ -372,10 +406,16 @@ public void testSyncBookieRecoveryToRandomBookies() throws Exception {\n         writeEntriestoLedgers(numMsgs, 0, lhs);\n \n         // Shutdown the first bookie server\n+        zkSync.value = false;\n+        bkc.getZkHandle().getChildren(\"/ledgers/available\", this);\n         LOG.info(\"Finished writing all ledger entries so shutdown one of the bookies.\");\n         bs.get(0).shutdown();\n         bs.remove(0);\n \n+        // Block until I get a notification \n+        while(!zkSync.value){\n+            Thread.sleep(100);\n+        }\n         // Startup three new bookie servers\n         for (int i = 0; i < 3; i++) {\n             int newBookiePort = initialPort + numBookies + i;"}]}

