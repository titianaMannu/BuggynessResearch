{"sha":"de432058b7e7c026fcf0b69b1e20bcf9ae1b1de2","node_id":"MDY6Q29tbWl0MTU3NTk1NjpkZTQzMjA1OGI3ZTdjMDI2ZmNmMGI2OWIxZTIwYmNmOWFlMWIxZGUy","commit":{"author":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2012-06-29T16:43:54Z"},"committer":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2012-06-29T16:43:54Z"},"message":"BOOKKEEPER-280: LedgerHandle.addEntry() should return an entryId (mmerli via ivank)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1355467 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"41ae7dfccbfc308983f9f83879e707fc8c0a9832","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/41ae7dfccbfc308983f9f83879e707fc8c0a9832"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/de432058b7e7c026fcf0b69b1e20bcf9ae1b1de2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/de432058b7e7c026fcf0b69b1e20bcf9ae1b1de2","html_url":"https://github.com/apache/bookkeeper/commit/de432058b7e7c026fcf0b69b1e20bcf9ae1b1de2","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/de432058b7e7c026fcf0b69b1e20bcf9ae1b1de2/comments","author":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"committer":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"parents":[{"sha":"441bf650859bc96a49b667961a19afd936b67e4c","url":"https://api.github.com/repos/apache/bookkeeper/commits/441bf650859bc96a49b667961a19afd936b67e4c","html_url":"https://github.com/apache/bookkeeper/commit/441bf650859bc96a49b667961a19afd936b67e4c"}],"stats":{"total":28,"additions":17,"deletions":11},"files":[{"sha":"d0e98b66b24182790d3d0a5450de4ecaa2f973cd","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/de432058b7e7c026fcf0b69b1e20bcf9ae1b1de2/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/de432058b7e7c026fcf0b69b1e20bcf9ae1b1de2/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=de432058b7e7c026fcf0b69b1e20bcf9ae1b1de2","patch":"@@ -28,6 +28,8 @@ Trunk (unreleased changes)\n \n         BOOKKEEPER-322: New protobufs generates findbugs errors (ivank)\n \n+        BOOKKEEPER-280: LedgerHandle.addEntry() should return an entryId (mmerli via ivank)\n+\n       hedwig-client:\n \n         BOOKKEEPER-274: Hedwig cpp client library should not link to cppunit which is just used for test. (sijie via ivank)"},{"sha":"c5ba6acb893c530e6059f8860d347685a02ce353","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java","status":"modified","additions":12,"deletions":8,"changes":20,"blob_url":"https://github.com/apache/bookkeeper/blob/de432058b7e7c026fcf0b69b1e20bcf9ae1b1de2/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java","raw_url":"https://github.com/apache/bookkeeper/raw/de432058b7e7c026fcf0b69b1e20bcf9ae1b1de2/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java?ref=de432058b7e7c026fcf0b69b1e20bcf9ae1b1de2","patch":"@@ -387,9 +387,10 @@ public void asyncReadEntries(long firstEntry, long lastEntry,\n      *\n      * @param data\n      *         array of bytes to be written to the ledger\n+     * @return the entryId of the new inserted entry\n      */\n-    public void addEntry(byte[] data) throws InterruptedException, BKException {\n-        addEntry(data, 0, data.length);\n+    public long addEntry(byte[] data) throws InterruptedException, BKException {\n+        return addEntry(data, 0, data.length);\n     }\n \n     /**\n@@ -401,24 +402,24 @@ public void addEntry(byte[] data) throws InterruptedException, BKException {\n      *          offset from which to take bytes from data\n      * @param length\n      *          number of bytes to take from data\n+     * @return the entryId of the new inserted entry\n      */\n-    public void addEntry(byte[] data, int offset, int length)\n+    public long addEntry(byte[] data, int offset, int length)\n             throws InterruptedException, BKException {\n         LOG.debug(\"Adding entry {}\", data);\n \n         SyncCounter counter = new SyncCounter();\n         counter.inc();\n \n-        asyncAddEntry(data, offset, length, new SyncAddCallback(), counter);\n+        SyncAddCallback callback = new SyncAddCallback();\n+        asyncAddEntry(data, offset, length, callback, counter);\n         counter.block(0);\n         \n         if (counter.getrc() != BKException.Code.OK) {\n             throw BKException.create(counter.getrc());\n         }\n \n-        if(counter.getrc() != BKException.Code.OK) {\n-            throw BKException.create(counter.getrc());\n-        }\n+        return callback.entryId;\n     }\n \n     /**\n@@ -823,6 +824,8 @@ public void readComplete(int rc, LedgerHandle lh,\n     }\n \n     private static class SyncAddCallback implements AddCallback {\n+        long entryId = -1;\n+\n         /**\n          * Implementation of callback interface for synchronous read method.\n          *\n@@ -837,7 +840,8 @@ public void readComplete(int rc, LedgerHandle lh,\n          */\n         public void addComplete(int rc, LedgerHandle lh, long entry, Object ctx) {\n             SyncCounter counter = (SyncCounter) ctx;\n-            \n+\n+            this.entryId = entry;\n             counter.setrc(rc);\n             counter.dec();\n         }"},{"sha":"5af056f8c2eed5677725eb36d5fd7d28f1c57803","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/client/ReadOnlyLedgerHandle.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/bookkeeper/blob/de432058b7e7c026fcf0b69b1e20bcf9ae1b1de2/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/ReadOnlyLedgerHandle.java","raw_url":"https://github.com/apache/bookkeeper/raw/de432058b7e7c026fcf0b69b1e20bcf9ae1b1de2/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/ReadOnlyLedgerHandle.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/ReadOnlyLedgerHandle.java?ref=de432058b7e7c026fcf0b69b1e20bcf9ae1b1de2","patch":"@@ -52,12 +52,12 @@ public void asyncClose(CloseCallback cb, Object ctx) {\n     }\n     \n     @Override\n-    public void addEntry(byte[] data) throws InterruptedException, BKException {\n-        addEntry(data, 0, data.length);\n+    public long addEntry(byte[] data) throws InterruptedException, BKException {\n+        return addEntry(data, 0, data.length);\n     }\n     \n     @Override\n-    public void addEntry(byte[] data, int offset, int length)\n+    public long addEntry(byte[] data, int offset, int length)\n             throws InterruptedException, BKException {\n         LOG.error(\"Tried to add entry on a Read-Only ledger handle, ledgerid=\" + ledgerId);        \n         throw BKException.create(BKException.Code.IllegalOpException);"}]}

