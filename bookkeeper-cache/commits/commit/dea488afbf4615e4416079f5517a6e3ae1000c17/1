{"sha":"dea488afbf4615e4416079f5517a6e3ae1000c17","node_id":"MDY6Q29tbWl0MTU3NTk1NjpkZWE0ODhhZmJmNDYxNWU0NDE2MDc5ZjU1MTdhNmUzYWUxMDAwYzE3","commit":{"author":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2013-10-02T04:23:33Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2013-10-02T04:23:33Z"},"message":"BOOKKEEPER-640: Log improvement - add shutdown/exit log message for the bookie services (rakesh via sijie)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1528304 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a61fed8538543c9b037e680042d3e10a705ccdce","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/a61fed8538543c9b037e680042d3e10a705ccdce"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/dea488afbf4615e4416079f5517a6e3ae1000c17","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/dea488afbf4615e4416079f5517a6e3ae1000c17","html_url":"https://github.com/apache/bookkeeper/commit/dea488afbf4615e4416079f5517a6e3ae1000c17","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/dea488afbf4615e4416079f5517a6e3ae1000c17/comments","author":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"441891b2d76b3b0244d00480e0ab70f2d2121d57","url":"https://api.github.com/repos/apache/bookkeeper/commits/441891b2d76b3b0244d00480e0ab70f2d2121d57","html_url":"https://github.com/apache/bookkeeper/commit/441891b2d76b3b0244d00480e0ab70f2d2121d57"}],"stats":{"total":23,"additions":15,"deletions":8},"files":[{"sha":"3223b07160720929455466f37d8615b320465984","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/dea488afbf4615e4416079f5517a6e3ae1000c17/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/dea488afbf4615e4416079f5517a6e3ae1000c17/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=dea488afbf4615e4416079f5517a6e3ae1000c17","patch":"@@ -154,6 +154,8 @@ Trunk (unreleased changes)\n \n       BOOKKEEPER-610: Make SyncThread use an executor (ivank via sijie)\n \n+      BOOKKEEPER-640: Log improvement - add shutdown/exit log message for the bookie services (rakesh via sijie)\n+\n     NEW FEATURE:\n \n       BOOKKEEPER-562: Ability to tell if a ledger is closed or not (fpj)"},{"sha":"123a66f0a79ea04cd2bdca02ed0b06dbca91df6a","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/EntryLogger.java","status":"modified","additions":1,"deletions":6,"changes":7,"blob_url":"https://github.com/apache/bookkeeper/blob/dea488afbf4615e4416079f5517a6e3ae1000c17/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/EntryLogger.java","raw_url":"https://github.com/apache/bookkeeper/raw/dea488afbf4615e4416079f5517a6e3ae1000c17/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/EntryLogger.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/EntryLogger.java?ref=dea488afbf4615e4416079f5517a6e3ae1000c17","patch":"@@ -41,13 +41,7 @@\n import java.util.LinkedList;\n import java.util.List;\n import java.util.Map.Entry;\n-import java.util.concurrent.Callable;\n-import java.util.concurrent.CancellationException;\n import java.util.concurrent.ConcurrentHashMap;\n-import java.util.concurrent.ExecutionException;\n-import java.util.concurrent.ExecutorService;\n-import java.util.concurrent.Executors;\n-import java.util.concurrent.Future;\n import java.util.concurrent.atomic.AtomicBoolean;\n \n import org.apache.bookkeeper.bookie.LedgerDirsManager.LedgerDirsListener;\n@@ -619,6 +613,7 @@ protected void scanEntryLog(long entryLogId, EntryLogScanner scanner) throws IOE\n      */\n     public void shutdown() {\n         // since logChannel is buffered channel, do flush when shutting down\n+        LOG.info(\"Stopping EntryLogger\");\n         try {\n             flush();\n             for (Entry<Long, BufferedChannel> channelEntry : channels"},{"sha":"d88ae16efceb7729bda36228ce95154c1ed91b9c","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/GarbageCollectorThread.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/dea488afbf4615e4416079f5517a6e3ae1000c17/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/GarbageCollectorThread.java","raw_url":"https://github.com/apache/bookkeeper/raw/dea488afbf4615e4416079f5517a6e3ae1000c17/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/GarbageCollectorThread.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/GarbageCollectorThread.java?ref=dea488afbf4615e4416079f5517a6e3ae1000c17","patch":"@@ -293,6 +293,7 @@ public void run() {\n                 lastMinorCompactionTime = MathUtils.now();\n             }\n         }\n+        LOG.info(\"GarbageCollectorThread exited loop!\");\n     }\n \n     /**\n@@ -372,6 +373,7 @@ public int compare(EntryLogMetadata m1, EntryLogMetadata m2) {\n      */\n     public void shutdown() throws InterruptedException {\n         this.running = false;\n+        LOG.info(\"Shutting down GarbageCollectorThread\");\n         if (compacting.compareAndSet(false, true)) {\n             // if setting compacting flag succeed, means gcThread is not compacting now\n             // it is safe to interrupt itself now"},{"sha":"3b174da07c2f021b19d20a00776e6d2ac95e954b","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/InterleavedLedgerStorage.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/bookkeeper/blob/dea488afbf4615e4416079f5517a6e3ae1000c17/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/InterleavedLedgerStorage.java","raw_url":"https://github.com/apache/bookkeeper/raw/dea488afbf4615e4416079f5517a6e3ae1000c17/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/InterleavedLedgerStorage.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/InterleavedLedgerStorage.java?ref=dea488afbf4615e4416079f5517a6e3ae1000c17","patch":"@@ -99,6 +99,7 @@ public void start() {\n     public void shutdown() throws InterruptedException {\n         // shut down gc thread, which depends on zookeeper client\n         // also compaction will write entries again to entry log file\n+        LOG.info(\"Shutting down InterleavedLedgerStorage\");\n         gcThread.shutdown();\n         entryLogger.shutdown();\n         try {"},{"sha":"37d943a4be5f61d5bd89591a0fa62f631f4d6d7a","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Journal.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/bookkeeper/blob/dea488afbf4615e4416079f5517a6e3ae1000c17/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Journal.java","raw_url":"https://github.com/apache/bookkeeper/raw/dea488afbf4615e4416079f5517a6e3ae1000c17/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Journal.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Journal.java?ref=dea488afbf4615e4416079f5517a6e3ae1000c17","patch":"@@ -32,12 +32,10 @@\n import java.util.List;\n import java.util.concurrent.LinkedBlockingQueue;\n \n-import org.apache.bookkeeper.bookie.CheckpointSource.Checkpoint;\n import org.apache.bookkeeper.bookie.LedgerDirsManager.NoWritableLedgerDirException;\n import org.apache.bookkeeper.conf.ServerConfiguration;\n import org.apache.bookkeeper.proto.BookkeeperInternalCallbacks.WriteCallback;\n import org.apache.bookkeeper.util.IOUtils;\n-import org.apache.bookkeeper.util.MathUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -564,6 +562,7 @@ public void run() {\n         } finally {\n             IOUtils.close(LOG, logFile);\n         }\n+        LOG.info(\"Journal exited loop!\");\n     }\n \n     /**\n@@ -574,6 +573,7 @@ public synchronized void shutdown() {\n             if (!running) {\n                 return;\n             }\n+            LOG.info(\"Shutting down Journal\");\n             running = false;\n             this.interrupt();\n             this.join();"},{"sha":"076f8e1acba75446e23865266c874306ff2cb7c8","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDirsManager.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/bookkeeper/blob/dea488afbf4615e4416079f5517a6e3ae1000c17/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDirsManager.java","raw_url":"https://github.com/apache/bookkeeper/raw/dea488afbf4615e4416079f5517a6e3ae1000c17/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDirsManager.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/LedgerDirsManager.java?ref=dea488afbf4615e4416079f5517a6e3ae1000c17","patch":"@@ -161,6 +161,7 @@ public void start() {\n \n     // shutdown disk monitoring daemon\n     public void shutdown() {\n+        LOG.info(\"Shutting down LedgerDirsMonitor\");\n         monitor.interrupt();\n         try {\n             monitor.join();"},{"sha":"4ecc0bf346d669f4ad5d65023e5cb04a6e0ff8f8","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/SyncThread.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/bookkeeper/blob/dea488afbf4615e4416079f5517a6e3ae1000c17/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/SyncThread.java","raw_url":"https://github.com/apache/bookkeeper/raw/dea488afbf4615e4416079f5517a6e3ae1000c17/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/SyncThread.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/SyncThread.java?ref=dea488afbf4615e4416079f5517a6e3ae1000c17","patch":"@@ -171,6 +171,7 @@ public void resumeSync() {\n \n     // shutdown sync thread\n     void shutdown() throws InterruptedException {\n+        LOG.info(\"Shutting down SyncThread\");\n         executor.submit(new Runnable() {\n                 public void run() {\n                     try {"},{"sha":"7fed39508f1ae868f9cb80a3533091ee6de7b3ad","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieNettyServer.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/bookkeeper/blob/dea488afbf4615e4416079f5517a6e3ae1000c17/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieNettyServer.java","raw_url":"https://github.com/apache/bookkeeper/raw/dea488afbf4615e4416079f5517a6e3ae1000c17/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieNettyServer.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieNettyServer.java?ref=dea488afbf4615e4416079f5517a6e3ae1000c17","patch":"@@ -119,6 +119,7 @@ void start() {\n     }\n \n     void shutdown() {\n+        LOG.info(\"Shutting down BookieNettyServer\");\n         isRunning.set(false);\n         allChannels.close().awaitUninterruptibly();\n         serverChannelFactory.releaseExternalResources();"},{"sha":"11eada50497fd0139eba61f9b3331492c8ee3a12","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/bookkeeper/blob/dea488afbf4615e4416079f5517a6e3ae1000c17/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java","raw_url":"https://github.com/apache/bookkeeper/raw/dea488afbf4615e4416079f5517a6e3ae1000c17/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieServer.java?ref=dea488afbf4615e4416079f5517a6e3ae1000c17","patch":"@@ -135,6 +135,7 @@ public synchronized void shutdown() {\n         if (!running) {\n             return;\n         }\n+        LOG.info(\"Shutting down BookieServer\");\n         this.nettyServer.shutdown();\n         exitCode = bookie.shutdown();\n         if (isAutoRecoveryDaemonEnabled && this.autoRecoveryMain != null) {"},{"sha":"5269c5928b62f6509281944011d708b9bba273eb","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/AutoRecoveryMain.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/bookkeeper/blob/dea488afbf4615e4416079f5517a6e3ae1000c17/bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/AutoRecoveryMain.java","raw_url":"https://github.com/apache/bookkeeper/raw/dea488afbf4615e4416079f5517a6e3ae1000c17/bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/AutoRecoveryMain.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/AutoRecoveryMain.java?ref=dea488afbf4615e4416079f5517a6e3ae1000c17","patch":"@@ -114,6 +114,7 @@ private void shutdown(int exitCode) {\n         if (shuttingDown) {\n             return;\n         }\n+        LOG.info(\"Shutting down AutoRecovery\");\n         shuttingDown = true;\n         running = false;\n         this.exitCode = exitCode;"},{"sha":"c68f0e5a5199d9299915b5717b1e3972fbb8ec0e","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/ReplicationWorker.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/dea488afbf4615e4416079f5517a6e3ae1000c17/bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/ReplicationWorker.java","raw_url":"https://github.com/apache/bookkeeper/raw/dea488afbf4615e4416079f5517a6e3ae1000c17/bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/ReplicationWorker.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/replication/ReplicationWorker.java?ref=dea488afbf4615e4416079f5517a6e3ae1000c17","patch":"@@ -128,6 +128,7 @@ public void run() {\n                 return;\n             }\n         }\n+        LOG.info(\"ReplicationWorker exited loop!\");\n     }\n \n     /**\n@@ -291,6 +292,7 @@ public void shutdown() {\n             }\n             workerRunning = false;\n         }\n+        LOG.info(\"Shutting down ReplicationWorker\");\n         this.pendingReplicationTimer.cancel();\n         try {\n             this.workerThread.interrupt();"}]}

