{"sha":"df5789843b6624ebda9c6e839458cdfbc3ed7d84","node_id":"MDY6Q29tbWl0MTU3NTk1NjpkZjU3ODk4NDNiNjYyNGViZGE5YzZlODM5NDU4Y2RmYmMzZWQ3ZDg0","commit":{"author":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2012-04-10T03:21:55Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2012-04-10T03:21:55Z"},"message":"BOOKKEEPER-211: Bookie fails to to start (sijie)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1311564 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"78ef3d97664d619221735f7773ac6109a62edbdb","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/78ef3d97664d619221735f7773ac6109a62edbdb"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/df5789843b6624ebda9c6e839458cdfbc3ed7d84","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/df5789843b6624ebda9c6e839458cdfbc3ed7d84","html_url":"https://github.com/apache/bookkeeper/commit/df5789843b6624ebda9c6e839458cdfbc3ed7d84","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/df5789843b6624ebda9c6e839458cdfbc3ed7d84/comments","author":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"8f02fb64ec9612af8422f23ed7908d7f6ccf5332","url":"https://api.github.com/repos/apache/bookkeeper/commits/8f02fb64ec9612af8422f23ed7908d7f6ccf5332","html_url":"https://github.com/apache/bookkeeper/commit/8f02fb64ec9612af8422f23ed7908d7f6ccf5332"}],"stats":{"total":66,"additions":52,"deletions":14},"files":[{"sha":"dc490cc72f700cb05a298e1a67e5487ecf086380","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/df5789843b6624ebda9c6e839458cdfbc3ed7d84/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/df5789843b6624ebda9c6e839458cdfbc3ed7d84/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=df5789843b6624ebda9c6e839458cdfbc3ed7d84","patch":"@@ -80,6 +80,8 @@ Trunk (unreleased changes)\n \n \tBOOKKEEPER-212: Bookie stops responding when creating and deleting many ledgers (sijie via fpj)\n \n+        BOOKKEEPER-211: Bookie fails to to start (sijie)\n+\n       hedwig-server/\n       \n         BOOKKEEPER-140: Hub server doesn't subscribe remote region correctly when a region is down. (Sijie Gou via ivank)"},{"sha":"bbf561a23b99787feb038b4084b4b0ea1a014637","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java","status":"modified","additions":25,"deletions":12,"changes":37,"blob_url":"https://github.com/apache/bookkeeper/blob/df5789843b6624ebda9c6e839458cdfbc3ed7d84/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java","raw_url":"https://github.com/apache/bookkeeper/raw/df5789843b6624ebda9c6e839458cdfbc3ed7d84/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java?ref=df5789843b6624ebda9c6e839458cdfbc3ed7d84","patch":"@@ -316,25 +316,38 @@ private void checkEnvironment(ZooKeeper zk) throws BookieException, IOException\n             } catch (KeeperException.NoNodeException nne) {\n                 newEnv = true;\n             }\n-            try {\n-                checkDirectoryStructure(journalDirectory);\n+            List<File> missedCookieDirs = new ArrayList<File>();\n+            checkDirectoryStructure(journalDirectory);\n \n+            // try to read cookie from journal directory\n+            try {\n                 Cookie journalCookie = Cookie.readFromDirectory(journalDirectory);\n                 journalCookie.verify(masterCookie);\n-                for (File dir : ledgerDirectories) {\n-                    checkDirectoryStructure(dir);\n+            } catch (FileNotFoundException fnf) {\n+                missedCookieDirs.add(journalDirectory);\n+            }\n+            for (File dir : ledgerDirectories) {\n+                checkDirectoryStructure(dir);\n+                try {\n                     Cookie c = Cookie.readFromDirectory(dir);\n                     c.verify(masterCookie);\n+                } catch (FileNotFoundException fnf) {\n+                    missedCookieDirs.add(dir);\n                 }\n-            } catch (FileNotFoundException fnf) {\n-                if (!newEnv){\n-                    LOG.error(\"Cookie exists in zookeeper, but not in all local directories\", fnf);\n-                    throw new BookieException.InvalidCookieException();\n-                }\n+            }\n \n-                masterCookie.writeToDirectory(journalDirectory);\n-                for (File dir : ledgerDirectories) {\n-                    masterCookie.writeToDirectory(dir);\n+            if (!newEnv && missedCookieDirs.size() > 0){\n+                LOG.error(\"Cookie exists in zookeeper, but not in all local directories. \"\n+                        + \" Directories missing cookie file are \" + missedCookieDirs);\n+                throw new BookieException.InvalidCookieException();\n+            }\n+            if (newEnv) {\n+                if (missedCookieDirs.size() > 0) {\n+                    LOG.debug(\"Directories missing cookie file are {}\", missedCookieDirs);\n+                    masterCookie.writeToDirectory(journalDirectory);\n+                    for (File dir : ledgerDirectories) {\n+                        masterCookie.writeToDirectory(dir);\n+                    }\n                 }\n                 masterCookie.writeToZooKeeper(zk, conf);\n             }"},{"sha":"615d48e0fe0b6fb657297d260725d172108e3cc7","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/CookieTest.java","status":"modified","additions":25,"deletions":2,"changes":27,"blob_url":"https://github.com/apache/bookkeeper/blob/df5789843b6624ebda9c6e839458cdfbc3ed7d84/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/CookieTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/df5789843b6624ebda9c6e839458cdfbc3ed7d84/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/CookieTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/CookieTest.java?ref=df5789843b6624ebda9c6e839458cdfbc3ed7d84","patch":"@@ -60,13 +60,36 @@ public void tearDownZooKeeper() throws Exception {\n     }\n \n     private static String newDirectory() throws IOException {\n+        return newDirectory(true);\n+    }\n+\n+    private static String newDirectory(boolean createCurDir) throws IOException {\n         File d = File.createTempFile(\"bookie\", \"tmpdir\");\n         d.delete();\n         d.mkdirs();\n-        new File(d, \"current\").mkdirs();\n+        if (createCurDir) {\n+            new File(d, \"current\").mkdirs();\n+        }\n         return d.getPath();\n     }\n \n+    /**\n+     * Test starting bookie with clean state.\n+     */\n+    @Test\n+    public void testCleanStart() throws Exception {\n+        ServerConfiguration conf = new ServerConfiguration()\n+            .setZkServers(zkutil.getZooKeeperConnectString())\n+            .setJournalDirName(newDirectory(false))\n+            .setLedgerDirNames(new String[] { newDirectory(false) })\n+            .setBookiePort(3181);\n+        try {\n+            Bookie b = new Bookie(conf);\n+        } catch (Exception e) {\n+            fail(\"Should not reach here.\");\n+        }\n+    }\n+\n     /**\n      * Test that if a zookeeper cookie\n      * is different to a local cookie, the bookie\n@@ -295,4 +318,4 @@ public void testV1data() throws Exception {\n             assertTrue(\"wrong exception\", ice.getCause().getMessage().contains(\"upgrade needed\"));\n         }\n     }\n-}\n\\ No newline at end of file\n+}"}]}

