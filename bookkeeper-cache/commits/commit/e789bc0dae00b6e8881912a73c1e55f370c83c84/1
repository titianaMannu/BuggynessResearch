{"sha":"e789bc0dae00b6e8881912a73c1e55f370c83c84","node_id":"MDY6Q29tbWl0MTU3NTk1NjplNzg5YmMwZGFlMDBiNmU4ODgxOTEyYTczYzFlNTVmMzcwYzgzYzg0","commit":{"author":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2012-11-26T15:42:55Z"},"committer":{"name":"Ivan Brendan Kelly","email":"ivank@apache.org","date":"2012-11-26T15:42:55Z"},"message":"BOOKKEEPER-460: LedgerDeleteTest checks wrong place for log file (Fangmin Lv via ivank)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1413685 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"4be4c979a07fef35bfc11de3def814ce95f96700","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/4be4c979a07fef35bfc11de3def814ce95f96700"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/e789bc0dae00b6e8881912a73c1e55f370c83c84","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/e789bc0dae00b6e8881912a73c1e55f370c83c84","html_url":"https://github.com/apache/bookkeeper/commit/e789bc0dae00b6e8881912a73c1e55f370c83c84","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/e789bc0dae00b6e8881912a73c1e55f370c83c84/comments","author":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"committer":{"login":"ivankelly","id":54955,"node_id":"MDQ6VXNlcjU0OTU1","avatar_url":"https://avatars.githubusercontent.com/u/54955?v=4","gravatar_id":"","url":"https://api.github.com/users/ivankelly","html_url":"https://github.com/ivankelly","followers_url":"https://api.github.com/users/ivankelly/followers","following_url":"https://api.github.com/users/ivankelly/following{/other_user}","gists_url":"https://api.github.com/users/ivankelly/gists{/gist_id}","starred_url":"https://api.github.com/users/ivankelly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivankelly/subscriptions","organizations_url":"https://api.github.com/users/ivankelly/orgs","repos_url":"https://api.github.com/users/ivankelly/repos","events_url":"https://api.github.com/users/ivankelly/events{/privacy}","received_events_url":"https://api.github.com/users/ivankelly/received_events","type":"User","site_admin":false},"parents":[{"sha":"b3a05cd74652affe4a69f40609de0b92769e05a4","url":"https://api.github.com/repos/apache/bookkeeper/commits/b3a05cd74652affe4a69f40609de0b92769e05a4","html_url":"https://github.com/apache/bookkeeper/commit/b3a05cd74652affe4a69f40609de0b92769e05a4"}],"stats":{"total":58,"additions":16,"deletions":42},"files":[{"sha":"af54634c771d0a59296435b97c40d81478df47a9","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/e789bc0dae00b6e8881912a73c1e55f370c83c84/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/e789bc0dae00b6e8881912a73c1e55f370c83c84/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=e789bc0dae00b6e8881912a73c1e55f370c83c84","patch":"@@ -106,6 +106,8 @@ Trunk (unreleased changes)\n \n         BOOKKEEPER-466: ZooKeeper test utility sets the port number as the tickTime (ivank)\n \n+        BOOKKEEPER-460: LedgerDeleteTest checks wrong place for log file (Fangmin Lv via ivank)\n+\n       hedwig-protocol:\n \n         BOOKKEEPER-394: CompositeException message is not useful (Stu Hood via sijie)"},{"sha":"720f07b99927512d6e666b89c758fb72a28dd956","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/CompactionTest.java","status":"modified","additions":9,"deletions":33,"changes":42,"blob_url":"https://github.com/apache/bookkeeper/blob/e789bc0dae00b6e8881912a73c1e55f370c83c84/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/CompactionTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/e789bc0dae00b6e8881912a73c1e55f370c83c84/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/CompactionTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/CompactionTest.java?ref=e789bc0dae00b6e8881912a73c1e55f370c83c84","patch":"@@ -28,6 +28,7 @@\n import org.apache.bookkeeper.client.LedgerHandle;\n import org.apache.bookkeeper.client.BookKeeper.DigestType;\n import org.apache.bookkeeper.test.BookKeeperClusterTestCase;\n+import org.apache.bookkeeper.util.TestUtils;\n \n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -132,27 +133,6 @@ private void verifyLedger(long lid, long startEntryId, long endEntryId) throws E\n         }\n     }\n \n-    private boolean[] checkLogFiles(File ledgerDirectory, int numFiles) {\n-        boolean[] hasLogFiles = new boolean[numFiles];\n-        Arrays.fill(hasLogFiles, false);\n-        for (File f : Bookie.getCurrentDirectory(ledgerDirectory).listFiles()) {\n-            LOG.info(\"Checking file : \" + f);\n-            if (f.isFile()) {\n-                String name = f.getName();\n-                if (!name.endsWith(\".log\")) {\n-                    continue;\n-                }\n-                String idString = name.split(\"\\\\.\")[0];\n-                int id = Integer.parseInt(idString, 16);\n-                if (id >= numFiles) {\n-                    continue;\n-                }\n-                hasLogFiles[id] = true; \n-            }\n-        }\n-        return hasLogFiles;\n-    }\n-\n     @Test\n     public void testDisableCompaction() throws Exception {\n         // prepare data\n@@ -175,8 +155,8 @@ public void testDisableCompaction() throws Exception {\n \n         // entry logs ([0,1].log) should not be compacted.\n         for (File ledgerDirectory : tmpDirs) {\n-            boolean[] hasLogFiles = checkLogFiles(ledgerDirectory, 2);\n-            assertTrue(\"Not Found entry log file ([0,1].log that should have been compacted in ledgerDirectory: \" + ledgerDirectory, hasLogFiles[0] & hasLogFiles[1]);\n+            assertTrue(\"Not Found entry log file ([0,1].log that should have been compacted in ledgerDirectory: \"\n+                            + ledgerDirectory, TestUtils.hasLogFiles(ledgerDirectory, false, 0, 1));\n         }\n     }\n \n@@ -205,8 +185,8 @@ public void testMinorCompaction() throws Exception {\n \n         // entry logs ([0,1,2].log) should be compacted.\n         for (File ledgerDirectory : tmpDirs) {\n-            boolean[] hasLog = checkLogFiles(ledgerDirectory, 3); \n-            assertFalse(\"Found entry log file ([0,1,2].log that should have not been compacted in ledgerDirectory: \" + ledgerDirectory, hasLog[0] | hasLog[1] | hasLog[2]);\n+            assertFalse(\"Found entry log file ([0,1,2].log that should have not been compacted in ledgerDirectory: \" \n+                            + ledgerDirectory, TestUtils.hasLogFiles(ledgerDirectory, true, 0, 1, 2));\n         }\n \n         // even entry log files are removed, we still can access entries for ledger1\n@@ -240,9 +220,8 @@ public void testMajorCompaction() throws Exception {\n \n         // entry logs ([0,1,2].log) should be compacted\n         for (File ledgerDirectory : tmpDirs) {\n-            boolean[] hasLogFiles = checkLogFiles(ledgerDirectory, 3); \n             assertFalse(\"Found entry log file ([0,1,2].log that should have not been compacted in ledgerDirectory: \"\n-                      + ledgerDirectory, hasLogFiles[0] | hasLogFiles[1] | hasLogFiles[2]);\n+                      + ledgerDirectory, TestUtils.hasLogFiles(ledgerDirectory, true, 0, 1, 2));\n         }\n \n         // even entry log files are removed, we still can access entries for ledger2\n@@ -268,9 +247,8 @@ public void testMajorCompactionAboveThreshold() throws Exception {\n \n         // entry logs ([0,1,2].log) should not be compacted\n         for (File ledgerDirectory : tmpDirs) {\n-            boolean[] hasLogFiles = checkLogFiles(ledgerDirectory, 3); \n             assertTrue(\"Not Found entry log file ([1,2].log that should have been compacted in ledgerDirectory: \"\n-                     + ledgerDirectory, hasLogFiles[0] & hasLogFiles[1] & hasLogFiles[2]);\n+                     + ledgerDirectory, TestUtils.hasLogFiles(ledgerDirectory, false, 0, 1, 2));\n         }\n     }\n \n@@ -304,12 +282,10 @@ public void testCompactionSmallEntryLogs() throws Exception {\n         // entry logs (0.log) should not be compacted\n         // entry logs ([1,2,3].log) should be compacted.\n         for (File ledgerDirectory : tmpDirs) {\n-            boolean[] hasLog = checkLogFiles(ledgerDirectory, 4);\n-            \n             assertTrue(\"Not Found entry log file ([0].log that should have been compacted in ledgerDirectory: \"\n-                     + ledgerDirectory, hasLog[0]);\n+                     + ledgerDirectory, TestUtils.hasLogFiles(ledgerDirectory, true, 0));\n             assertFalse(\"Found entry log file ([1,2,3].log that should have not been compacted in ledgerDirectory: \"\n-                      + ledgerDirectory, hasLog[1] | hasLog[2] | hasLog[3]);\n+                      + ledgerDirectory, TestUtils.hasLogFiles(ledgerDirectory, true, 1, 2, 3));\n         }\n \n         // even entry log files are removed, we still can access entries for ledger1"},{"sha":"984c2f8222f3cf2a78b58dfa0fd1ab9ef42c9a2f","filename":"bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LedgerDeleteTest.java","status":"modified","additions":5,"deletions":9,"changes":14,"blob_url":"https://github.com/apache/bookkeeper/blob/e789bc0dae00b6e8881912a73c1e55f370c83c84/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LedgerDeleteTest.java","raw_url":"https://github.com/apache/bookkeeper/raw/e789bc0dae00b6e8881912a73c1e55f370c83c84/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LedgerDeleteTest.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/LedgerDeleteTest.java?ref=e789bc0dae00b6e8881912a73c1e55f370c83c84","patch":"@@ -22,9 +22,9 @@\n  */\n \n import java.io.File;\n-\n import org.apache.bookkeeper.client.LedgerHandle;\n import org.apache.bookkeeper.client.BookKeeper.DigestType;\n+import org.apache.bookkeeper.util.TestUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.junit.Before;\n@@ -106,10 +106,8 @@ public void testLedgerDelete() throws Exception {\n \n         // Verify that the first entry log (0.log) has been deleted from all of the Bookie Servers.\n         for (File ledgerDirectory : tmpDirs) {\n-            for (File f : ledgerDirectory.listFiles()) {\n-                assertFalse(\"Found the entry log file (0.log) that should have been deleted in ledgerDirectory: \"\n-                            + ledgerDirectory, f.isFile() && f.getName().equals(\"0.log\"));\n-            }\n+            assertFalse(\"Found the entry log file (0.log) that should have been deleted in ledgerDirectory: \"\n+                + ledgerDirectory, TestUtils.hasLogFiles(ledgerDirectory, true, 0));\n         }\n     }\n \n@@ -147,10 +145,8 @@ public void testLedgerDeleteWithExistingEntryLogs() throws Exception {\n          * entry logs should be deleted.\n          */\n         for (File ledgerDirectory : tmpDirs) {\n-            for (File f : ledgerDirectory.listFiles()) {\n-                assertFalse(\"Found the entry log file ([0,1].log) that should have been deleted in ledgerDirectory: \"\n-                            + ledgerDirectory, f.isFile() && (f.getName().equals(\"0.log\") || f.getName().equals(\"1.log\")));\n-            }\n+            assertFalse(\"Found the entry log file ([0,1].log) that should have been deleted in ledgerDirectory: \"\n+                + ledgerDirectory, TestUtils.hasLogFiles(ledgerDirectory, true, 0, 1));\n         }\n     }\n "}]}

