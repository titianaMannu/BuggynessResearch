{"sha":"ed9b6037be51845f7cab2446593df695ffcede59","node_id":"MDY6Q29tbWl0MTU3NTk1NjplZDliNjAzN2JlNTE4NDVmN2NhYjI0NDY1OTNkZjY5NWZmY2VkZTU5","commit":{"author":{"name":"Flavio Paiva Junqueira","email":"fpj@apache.org","date":"2013-01-07T23:44:33Z"},"committer":{"name":"Flavio Paiva Junqueira","email":"fpj@apache.org","date":"2013-01-07T23:44:33Z"},"message":"BOOKKEEPER-532: AbstractSubscriptionManager#AcquireOp read subscriptions every time even it already owned the topic. (sijie via fpj)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1430091 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"1cdd224aae3dceaf9e8c6f1b74ce5b413c4bf8df","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/1cdd224aae3dceaf9e8c6f1b74ce5b413c4bf8df"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/ed9b6037be51845f7cab2446593df695ffcede59","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/ed9b6037be51845f7cab2446593df695ffcede59","html_url":"https://github.com/apache/bookkeeper/commit/ed9b6037be51845f7cab2446593df695ffcede59","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/ed9b6037be51845f7cab2446593df695ffcede59/comments","author":{"login":"fpj","id":572920,"node_id":"MDQ6VXNlcjU3MjkyMA==","avatar_url":"https://avatars.githubusercontent.com/u/572920?v=4","gravatar_id":"","url":"https://api.github.com/users/fpj","html_url":"https://github.com/fpj","followers_url":"https://api.github.com/users/fpj/followers","following_url":"https://api.github.com/users/fpj/following{/other_user}","gists_url":"https://api.github.com/users/fpj/gists{/gist_id}","starred_url":"https://api.github.com/users/fpj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fpj/subscriptions","organizations_url":"https://api.github.com/users/fpj/orgs","repos_url":"https://api.github.com/users/fpj/repos","events_url":"https://api.github.com/users/fpj/events{/privacy}","received_events_url":"https://api.github.com/users/fpj/received_events","type":"User","site_admin":false},"committer":{"login":"fpj","id":572920,"node_id":"MDQ6VXNlcjU3MjkyMA==","avatar_url":"https://avatars.githubusercontent.com/u/572920?v=4","gravatar_id":"","url":"https://api.github.com/users/fpj","html_url":"https://github.com/fpj","followers_url":"https://api.github.com/users/fpj/followers","following_url":"https://api.github.com/users/fpj/following{/other_user}","gists_url":"https://api.github.com/users/fpj/gists{/gist_id}","starred_url":"https://api.github.com/users/fpj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fpj/subscriptions","organizations_url":"https://api.github.com/users/fpj/orgs","repos_url":"https://api.github.com/users/fpj/repos","events_url":"https://api.github.com/users/fpj/events{/privacy}","received_events_url":"https://api.github.com/users/fpj/received_events","type":"User","site_admin":false},"parents":[{"sha":"f7ce39d522827a0359a0183eae02694ebb35bafd","url":"https://api.github.com/repos/apache/bookkeeper/commits/f7ce39d522827a0359a0183eae02694ebb35bafd","html_url":"https://github.com/apache/bookkeeper/commit/f7ce39d522827a0359a0183eae02694ebb35bafd"}],"stats":{"total":3,"additions":3,"deletions":0},"files":[{"sha":"258a96fe401c240d6214653b2fc8a8fae4f817ef","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/ed9b6037be51845f7cab2446593df695ffcede59/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/ed9b6037be51845f7cab2446593df695ffcede59/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=ed9b6037be51845f7cab2446593df695ffcede59","patch":"@@ -218,6 +218,8 @@ Trunk (unreleased changes)\n \n         BOOKKEEPER-507: Race condition happens if closeSubscription and subscribe happened at the same time (in multiplexed client). (sijie via ivank)\n \n+\tBOOKKEEPER-532: AbstractSubscriptionManager#AcquireOp read subscriptions every time even it already owned the topic. (sijie via fpj)\n+\n     IMPROVEMENTS:\n \n       BOOKKEEPER-467: Allocate ports for testing dynamically (ivank)"},{"sha":"d269fe82a84937700dc9b0905ab48cdd753c181e","filename":"hedwig-server/src/main/java/org/apache/hedwig/server/subscriptions/AbstractSubscriptionManager.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/bookkeeper/blob/ed9b6037be51845f7cab2446593df695ffcede59/hedwig-server/src/main/java/org/apache/hedwig/server/subscriptions/AbstractSubscriptionManager.java","raw_url":"https://github.com/apache/bookkeeper/raw/ed9b6037be51845f7cab2446593df695ffcede59/hedwig-server/src/main/java/org/apache/hedwig/server/subscriptions/AbstractSubscriptionManager.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/hedwig-server/src/main/java/org/apache/hedwig/server/subscriptions/AbstractSubscriptionManager.java?ref=ed9b6037be51845f7cab2446593df695ffcede59","patch":"@@ -165,6 +165,7 @@ public AcquireOp(ByteString topic, Callback<Void> callback, Object ctx) {\n         public void run() {\n             if (top2sub2seq.containsKey(topic)) {\n                 cb.operationFinished(ctx, null);\n+                return;\n             }\n \n             readSubscriptions(topic, new Callback<Map<ByteString, InMemorySubscriptionState>>() {"}]}

