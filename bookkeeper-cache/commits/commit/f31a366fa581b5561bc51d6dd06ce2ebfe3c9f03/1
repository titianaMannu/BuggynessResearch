{"sha":"f31a366fa581b5561bc51d6dd06ce2ebfe3c9f03","node_id":"MDY6Q29tbWl0MTU3NTk1NjpmMzFhMzY2ZmE1ODFiNTU2MWJjNTFkNmRkMDZjZTJlYmZlM2M5ZjAz","commit":{"author":{"name":"Uma Maheswara Rao G","email":"umamahesh@apache.org","date":"2013-02-26T03:12:24Z"},"committer":{"name":"Uma Maheswara Rao G","email":"umamahesh@apache.org","date":"2013-02-26T03:12:24Z"},"message":"BOOKKEEPER-574: Extend the bookkeeper shell to get a list of available bookies. Contributed by Ivan Kelly\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1450005 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"cd73882558c1e37996c34173b74e93ee8843440c","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/cd73882558c1e37996c34173b74e93ee8843440c"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/f31a366fa581b5561bc51d6dd06ce2ebfe3c9f03","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/f31a366fa581b5561bc51d6dd06ce2ebfe3c9f03","html_url":"https://github.com/apache/bookkeeper/commit/f31a366fa581b5561bc51d6dd06ce2ebfe3c9f03","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/f31a366fa581b5561bc51d6dd06ce2ebfe3c9f03/comments","author":{"login":"umamaheswararao","id":1719507,"node_id":"MDQ6VXNlcjE3MTk1MDc=","avatar_url":"https://avatars.githubusercontent.com/u/1719507?v=4","gravatar_id":"","url":"https://api.github.com/users/umamaheswararao","html_url":"https://github.com/umamaheswararao","followers_url":"https://api.github.com/users/umamaheswararao/followers","following_url":"https://api.github.com/users/umamaheswararao/following{/other_user}","gists_url":"https://api.github.com/users/umamaheswararao/gists{/gist_id}","starred_url":"https://api.github.com/users/umamaheswararao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/umamaheswararao/subscriptions","organizations_url":"https://api.github.com/users/umamaheswararao/orgs","repos_url":"https://api.github.com/users/umamaheswararao/repos","events_url":"https://api.github.com/users/umamaheswararao/events{/privacy}","received_events_url":"https://api.github.com/users/umamaheswararao/received_events","type":"User","site_admin":false},"committer":{"login":"umamaheswararao","id":1719507,"node_id":"MDQ6VXNlcjE3MTk1MDc=","avatar_url":"https://avatars.githubusercontent.com/u/1719507?v=4","gravatar_id":"","url":"https://api.github.com/users/umamaheswararao","html_url":"https://github.com/umamaheswararao","followers_url":"https://api.github.com/users/umamaheswararao/followers","following_url":"https://api.github.com/users/umamaheswararao/following{/other_user}","gists_url":"https://api.github.com/users/umamaheswararao/gists{/gist_id}","starred_url":"https://api.github.com/users/umamaheswararao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/umamaheswararao/subscriptions","organizations_url":"https://api.github.com/users/umamaheswararao/orgs","repos_url":"https://api.github.com/users/umamaheswararao/repos","events_url":"https://api.github.com/users/umamaheswararao/events{/privacy}","received_events_url":"https://api.github.com/users/umamaheswararao/received_events","type":"User","site_admin":false},"parents":[{"sha":"d40d380363f7ab608231e91b84dd94e3478f3773","url":"https://api.github.com/repos/apache/bookkeeper/commits/d40d380363f7ab608231e91b84dd94e3478f3773","html_url":"https://github.com/apache/bookkeeper/commit/d40d380363f7ab608231e91b84dd94e3478f3773"}],"stats":{"total":74,"additions":73,"deletions":1},"files":[{"sha":"947fafd1ff015a92e7243e8cd891f100bd398ce5","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/f31a366fa581b5561bc51d6dd06ce2ebfe3c9f03/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/f31a366fa581b5561bc51d6dd06ce2ebfe3c9f03/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=f31a366fa581b5561bc51d6dd06ce2ebfe3c9f03","patch":"@@ -37,6 +37,8 @@ Trunk (unreleased changes)\n \n       BOOKKEEPER-556: BookieServerMXBean#getServerState makes no sense (ivank via sijie)\n \n+      BOOKKEEPER-574: Extend the bookkeeper shell to get a list of available bookies (ivank via umamahesh)\n+\n Release 4.2.0 - 2013-01-14\n \n   Non-backward compatible changes:"},{"sha":"95ab2c05d6fce30664f2e10974f28440e9392b24","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieShell.java","status":"modified","additions":54,"deletions":1,"changes":55,"blob_url":"https://github.com/apache/bookkeeper/blob/f31a366fa581b5561bc51d6dd06ce2ebfe3c9f03/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieShell.java","raw_url":"https://github.com/apache/bookkeeper/raw/f31a366fa581b5561bc51d6dd06ce2ebfe3c9f03/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieShell.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/BookieShell.java?ref=f31a366fa581b5561bc51d6dd06ce2ebfe3c9f03","patch":"@@ -42,6 +42,7 @@\n import org.apache.bookkeeper.util.EntryFormatter;\n import org.apache.bookkeeper.util.Tool;\n import org.apache.bookkeeper.util.ZkUtils;\n+import org.apache.bookkeeper.util.StringUtils;\n \n import org.apache.commons.configuration.Configuration;\n import org.apache.commons.configuration.CompositeConfiguration;\n@@ -73,6 +74,7 @@\n     static final String CMD_READJOURNAL = \"readjournal\";\n     static final String CMD_LASTMARK = \"lastmark\";\n     static final String CMD_AUTORECOVERY = \"autorecovery\";\n+    static final String CMD_LISTBOOKIES = \"listbookies\";\n     static final String CMD_HELP = \"help\";\n \n     final ServerConfiguration bkConf = new ServerConfiguration();\n@@ -473,6 +475,55 @@ public void printUsage() {\n         }\n     }\n \n+    /**\n+     * List available bookies\n+     */\n+    class ListBookiesCmd extends MyCommand {\n+        Options opts = new Options();\n+\n+        ListBookiesCmd() {\n+            super(CMD_LISTBOOKIES);\n+            opts.addOption(\"h\", \"hostnames\", false, \"Also print hostnames\");\n+        }\n+\n+        @Override\n+        public int runCmd(CommandLine cmdLine) throws Exception {\n+            ClientConfiguration clientconf = new ClientConfiguration(bkConf)\n+                .setZkServers(bkConf.getZkServers());\n+            BookKeeperAdmin bka = new BookKeeperAdmin(clientconf);\n+\n+            int count = 0;\n+            for (InetSocketAddress b : bka.getAvailableBookies()) {\n+                System.out.print(StringUtils.addrToString(b));\n+                if (cmdLine.hasOption(\"h\")) {\n+                    System.out.print(\"\\t\" + b.getHostName());\n+                }\n+                System.out.println(\"\");\n+                count++;\n+            }\n+            if (count == 0) {\n+                System.err.println(\"No bookies available\");\n+                return 1;\n+            }\n+            return 0;\n+        }\n+\n+        @Override\n+        String getDescription() {\n+            return \"List all available bookies.\";\n+        }\n+\n+        @Override\n+        String getUsage() {\n+            return \"listbookies [-hostnames]\";\n+        }\n+\n+        @Override\n+        Options getOptions() {\n+            return opts;\n+        }\n+    }\n+\n     /**\n      * Command to print help message\n      */\n@@ -583,6 +634,7 @@ int runCmd(CommandLine cmdLine) throws Exception {\n         commands.put(CMD_READJOURNAL, new ReadJournalCmd());\n         commands.put(CMD_LASTMARK, new LastMarkCmd());\n         commands.put(CMD_AUTORECOVERY, new AutoRecoveryCmd());\n+        commands.put(CMD_LISTBOOKIES, new ListBookiesCmd());\n         commands.put(CMD_HELP, new HelpCmd());\n     }\n \n@@ -592,7 +644,7 @@ public void setConf(Configuration conf) throws Exception {\n         journalDirectory = Bookie.getCurrentDirectory(bkConf.getJournalDir());\n         ledgerDirectories = Bookie.getCurrentDirectories(bkConf.getLedgerDirs());\n         formatter = EntryFormatter.newEntryFormatter(bkConf, ENTRY_FORMATTER_CLASS);\n-        LOG.info(\"Using entry formatter \" + formatter.getClass().getName());\n+        LOG.debug(\"Using entry formatter {}\", formatter.getClass().getName());\n         pageSize = bkConf.getPageSize();\n         entriesPerPage = pageSize / 8;\n     }\n@@ -607,6 +659,7 @@ private static void printShellUsage() {\n         System.err.println(\"       readlog      [-msg] <entry_log_id|entry_log_file_name>\");\n         System.err.println(\"       readjournal  [-msg] <journal_id|journal_file_name>\");\n         System.err.println(\"       autorecovery [-enable|-disable]\");\n+        System.err.println(\"       listbookies  [-hostnames]\");\n         System.err.println(\"       lastmark\");\n         System.err.println(\"       help\");\n     }"},{"sha":"47c194484c0478964eccdab49bd88104a5e2d42e","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeperAdmin.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/apache/bookkeeper/blob/f31a366fa581b5561bc51d6dd06ce2ebfe3c9f03/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeperAdmin.java","raw_url":"https://github.com/apache/bookkeeper/raw/f31a366fa581b5561bc51d6dd06ce2ebfe3c9f03/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeperAdmin.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookKeeperAdmin.java?ref=f31a366fa581b5561bc51d6dd06ce2ebfe3c9f03","patch":"@@ -29,6 +29,7 @@\n import java.util.Map;\n import java.util.Random;\n import java.util.UUID;\n+import java.util.Collection;\n \n import org.apache.bookkeeper.client.AsyncCallback.OpenCallback;\n import org.apache.bookkeeper.client.AsyncCallback.RecoverCallback;\n@@ -153,6 +154,17 @@ public void close() throws InterruptedException, BKException {\n         zk.close();\n     }\n \n+    /**\n+     * Get a list of the available bookies.\n+     *\n+     * @return the collection of available bookies\n+     */\n+    public Collection<InetSocketAddress> getAvailableBookies()\n+            throws InterruptedException, KeeperException {\n+        bkc.bookieWatcher.readBookiesBlocking();\n+        return bkc.bookieWatcher.getBookies();\n+    }\n+\n     /**\n      * Open a ledger as an administrator. This means that no digest password\n      * checks are done. Otherwise, the call is identical to BookKeeper#asyncOpenLedger"},{"sha":"41e067436a09d140bcf471c2738e52e16721feed","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookieWatcher.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/apache/bookkeeper/blob/f31a366fa581b5561bc51d6dd06ce2ebfe3c9f03/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookieWatcher.java","raw_url":"https://github.com/apache/bookkeeper/raw/f31a366fa581b5561bc51d6dd06ce2ebfe3c9f03/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookieWatcher.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/BookieWatcher.java?ref=f31a366fa581b5561bc51d6dd06ce2ebfe3c9f03","patch":"@@ -21,6 +21,7 @@\n import java.io.IOException;\n import java.net.InetSocketAddress;\n import java.util.ArrayList;\n+import java.util.Collection;\n import java.util.Collections;\n import java.util.HashSet;\n import java.util.List;\n@@ -84,6 +85,10 @@ public BookieWatcher(ClientConfiguration conf,\n         readOnlyBookieWatcher = new ReadOnlyBookieWatcher(conf, bk);\n     }\n \n+    public synchronized Collection<InetSocketAddress> getBookies() {\n+        return new HashSet<InetSocketAddress>(knownBookies);\n+    }\n+\n     public void readBookies() {\n         readBookies(this);\n     }"}]}

