{"sha":"f345cb9472250eca2b724fa14b8d2c08425b6a2f","node_id":"MDY6Q29tbWl0MTU3NTk1NjpmMzQ1Y2I5NDcyMjUwZWNhMmI3MjRmYTE0YjhkMmMwODQyNWI2YTJm","commit":{"author":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2013-10-30T04:59:47Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2013-10-30T04:59:47Z"},"message":"BOOKKEEPER-698: Bookie client closure is not considering timeoutExecutor (rakesh via sijie)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1536965 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a32584dbef82eff62f3193985abc1a12faed3af5","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/a32584dbef82eff62f3193985abc1a12faed3af5"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/f345cb9472250eca2b724fa14b8d2c08425b6a2f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/f345cb9472250eca2b724fa14b8d2c08425b6a2f","html_url":"https://github.com/apache/bookkeeper/commit/f345cb9472250eca2b724fa14b8d2c08425b6a2f","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/f345cb9472250eca2b724fa14b8d2c08425b6a2f/comments","author":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"6c6ec2b2f9cb1aff37001f3d9f002cc820096404","url":"https://api.github.com/repos/apache/bookkeeper/commits/6c6ec2b2f9cb1aff37001f3d9f002cc820096404","html_url":"https://github.com/apache/bookkeeper/commit/6c6ec2b2f9cb1aff37001f3d9f002cc820096404"}],"stats":{"total":21,"additions":16,"deletions":5},"files":[{"sha":"bce5f9c7affc8396eef32b9792521a8ddd506a47","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/f345cb9472250eca2b724fa14b8d2c08425b6a2f/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/f345cb9472250eca2b724fa14b8d2c08425b6a2f/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=f345cb9472250eca2b724fa14b8d2c08425b6a2f","patch":"@@ -186,6 +186,8 @@ Trunk (unreleased changes)\n \n       BOOKKEEPER-602: we should have request timeouts rather than channel timeout in PerChannelBookieClient (Aniruddha, ivank via sijie)\n \n+      BOOKKEEPER-698: Bookie client closure is not considering timeoutExecutor (rakesh via sijie)\n+\n     NEW FEATURE:\n \n       BOOKKEEPER-562: Ability to tell if a ledger is closed or not (fpj)"},{"sha":"70c723f3cd4d95b81107244817b60c7da47dd839","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieClient.java","status":"modified","additions":14,"deletions":5,"changes":19,"blob_url":"https://github.com/apache/bookkeeper/blob/f345cb9472250eca2b724fa14b8d2c08425b6a2f/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieClient.java","raw_url":"https://github.com/apache/bookkeeper/raw/f345cb9472250eca2b724fa14b8d2c08425b6a2f/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieClient.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/BookieClient.java?ref=f345cb9472250eca2b724fa14b8d2c08425b6a2f","patch":"@@ -30,6 +30,7 @@\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.Executors;\n import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.TimeUnit;\n import java.util.concurrent.atomic.AtomicLong;\n import java.util.concurrent.locks.ReentrantReadWriteLock;\n \n@@ -47,12 +48,8 @@\n \n import com.google.common.util.concurrent.ThreadFactoryBuilder;\n \n-import java.util.concurrent.locks.ReentrantReadWriteLock;\n-\n-import static com.google.common.base.Charsets.UTF_8;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n /**\n  * Implements the client-side part of the BookKeeper protocol.\n  *\n@@ -67,7 +64,9 @@\n     final ClientSocketChannelFactory channelFactory;\n     final ConcurrentHashMap<InetSocketAddress, PerChannelBookieClient> channels =\n         new ConcurrentHashMap<InetSocketAddress, PerChannelBookieClient>();\n-    final ScheduledExecutorService timeoutExecutor = Executors.newSingleThreadScheduledExecutor();\n+    final ScheduledExecutorService timeoutExecutor = Executors\n+            .newSingleThreadScheduledExecutor(new ThreadFactoryBuilder()\n+                    .setNameFormat(\"BKClient-TimeoutTaskExecutor-%d\").build());\n     private final ClientConfiguration conf;\n     private volatile boolean closed;\n     private final ReentrantReadWriteLock closeLock;\n@@ -218,6 +217,16 @@ public void close() {\n         } finally {\n             closeLock.writeLock().unlock();\n         }\n+        timeoutExecutor.shutdown();\n+        try {\n+            if (!timeoutExecutor.awaitTermination(5, TimeUnit.SECONDS)) {\n+                LOG.warn(\"BKClient-TimeoutTaskExecutor did not shutdown cleanly!\");\n+            }\n+        } catch (InterruptedException ie) {\n+            LOG.warn(\n+                    \"Interrupted when shutting down BKClient-TimeoutTaskExecutor\",\n+                    ie);\n+        }\n     }\n \n     private static class Counter {"}]}

