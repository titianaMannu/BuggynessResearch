{"sha":"fd6835e4f06d3cbb6a33062f582e4756d0a3139b","node_id":"MDY6Q29tbWl0MTU3NTk1NjpmZDY4MzVlNGYwNmQzY2JiNmEzMzA2MmY1ODJlNDc1NmQwYTMxMzli","commit":{"author":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2014-09-06T05:27:02Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2014-09-06T05:27:02Z"},"message":"BOOKKEEPER-779: jmx reporter for codahale metrics provider (ivank via sijie)\n\ngit-svn-id: https://svn.apache.org/repos/asf/zookeeper/bookkeeper/trunk@1622828 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"419bc810b2d3d011efc5e9a70dfbbae487973b35","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/419bc810b2d3d011efc5e9a70dfbbae487973b35"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/fd6835e4f06d3cbb6a33062f582e4756d0a3139b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/fd6835e4f06d3cbb6a33062f582e4756d0a3139b","html_url":"https://github.com/apache/bookkeeper/commit/fd6835e4f06d3cbb6a33062f582e4756d0a3139b","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/fd6835e4f06d3cbb6a33062f582e4756d0a3139b/comments","author":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"8f81eba34d2af8444be9f713447e12f4387e5932","url":"https://api.github.com/repos/apache/bookkeeper/commits/8f81eba34d2af8444be9f713447e12f4387e5932","html_url":"https://github.com/apache/bookkeeper/commit/8f81eba34d2af8444be9f713447e12f4387e5932"}],"stats":{"total":20,"additions":20,"deletions":0},"files":[{"sha":"e2ae040235fb5916e798c1b156b56921ff450d3e","filename":"CHANGES.txt","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/apache/bookkeeper/blob/fd6835e4f06d3cbb6a33062f582e4756d0a3139b/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/fd6835e4f06d3cbb6a33062f582e4756d0a3139b/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=fd6835e4f06d3cbb6a33062f582e4756d0a3139b","patch":"@@ -224,6 +224,10 @@ Trunk (unreleased changes)\n \n         BOOKKEEPER-768: fix typo 'seconds' to milliseconds in benchmark output (jialin via sijie)\n \n+      bookkeeper-stats-providers:\n+\n+        BOOKKEEPER-779: jmx reporter for codahale metrics provider (ivank via sijie)\n+\n       hedwig-server:\n \n         BOOKKEEPER-601: readahead cache size isn't updated correctly (sijie via fpj)"},{"sha":"9632ed2fa63e78a5ebf25548818883d479cf235f","filename":"bookkeeper-stats-providers/codahale-metrics-provider/src/main/java/org/apache/bookkeeper/stats/CodahaleMetricsProvider.java","status":"modified","additions":16,"deletions":0,"changes":16,"blob_url":"https://github.com/apache/bookkeeper/blob/fd6835e4f06d3cbb6a33062f582e4756d0a3139b/bookkeeper-stats-providers/codahale-metrics-provider/src/main/java/org/apache/bookkeeper/stats/CodahaleMetricsProvider.java","raw_url":"https://github.com/apache/bookkeeper/raw/fd6835e4f06d3cbb6a33062f582e4756d0a3139b/bookkeeper-stats-providers/codahale-metrics-provider/src/main/java/org/apache/bookkeeper/stats/CodahaleMetricsProvider.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-stats-providers/codahale-metrics-provider/src/main/java/org/apache/bookkeeper/stats/CodahaleMetricsProvider.java?ref=fd6835e4f06d3cbb6a33062f582e4756d0a3139b","patch":"@@ -23,6 +23,7 @@\n import com.codahale.metrics.MetricRegistry;\n import com.codahale.metrics.ScheduledReporter;\n import com.codahale.metrics.Slf4jReporter;\n+import com.codahale.metrics.JmxReporter;\n import com.google.common.base.Strings;\n import com.google.common.net.HostAndPort;\n import static com.codahale.metrics.MetricRegistry.name;\n@@ -51,6 +52,7 @@\n \n     MetricRegistry metrics = null;\n     List<ScheduledReporter> reporters = new ArrayList<ScheduledReporter>();\n+    JmxReporter jmx = null;\n \n     synchronized void initIfNecessary() {\n         if (metrics == null) {\n@@ -73,6 +75,7 @@ public void start(Configuration conf) {\n         String graphiteHost = conf.getString(\"codahaleStatsGraphiteEndpoint\");\n         String csvDir = conf.getString(\"codahaleStatsCSVEndpoint\");\n         String slf4jCat = conf.getString(\"codahaleStatsSlf4jEndpoint\");\n+        String jmxDomain = conf.getString(\"codahaleStatsJmxEndpoint\");\n \n         if (!Strings.isNullOrEmpty(graphiteHost)) {\n             LOG.info(\"Configuring stats with graphite\");\n@@ -110,6 +113,16 @@ public void start(Configuration conf) {\n                           .convertDurationsTo(TimeUnit.MILLISECONDS)\n                           .build());\n         }\n+        if (!Strings.isNullOrEmpty(jmxDomain)) {\n+            LOG.info(\"Configuring stats with jmx\");\n+            jmx = JmxReporter.forRegistry(metrics)\n+                .inDomain(jmxDomain)\n+                .convertRatesTo(TimeUnit.SECONDS)\n+                .convertDurationsTo(TimeUnit.MILLISECONDS)\n+                .build();\n+            jmx.start();\n+        }\n+\n         for (ScheduledReporter r : reporters) {\n             r.start(metricsOutputFrequency, TimeUnit.SECONDS);\n         }\n@@ -121,6 +134,9 @@ public void stop() {\n             r.report();\n             r.stop();\n         }\n+        if (jmx != null) {\n+            jmx.stop();\n+        }\n     }\n \n     @Override"}]}

