{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12597399","self":"https://issues.apache.org/jira/rest/api/2/issue/12597399","key":"BOOKKEEPER-326","fields":{"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12320244","id":"12320244","description":"Release 4.2.0","name":"4.2.0","archived":false,"released":true,"releaseDate":"2013-01-19"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12321757","id":"12321757","description":"Bug fix release for 4.1 branch","name":"4.1.1","archived":true,"released":false,"releaseDate":"2013-01-16"}],"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"293515","customfield_12312320":null,"customfield_12312321":null,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/1","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/blocker.svg","name":"Blocker","id":"1"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12312331":null,"customfield_12312332":null,"aggregatetimeoriginalestimate":null,"timeestimate":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12319145","id":"12319145","name":"4.1.0","archived":false,"released":true,"releaseDate":"2012-06-13"}],"customfield_12311120":null,"customfield_12313826":null,"issuelinks":[{"id":"12354826","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12354826","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12554161","key":"BOOKKEEPER-239","self":"https://issues.apache.org/jira/rest/api/2/issue/12554161","fields":{"summary":"Deadlock in ledger recovery when there is limited permits","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"customfield_12312339":null,"customfield_12313825":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh Radhakrishnan","active":true,"timeZone":"Asia/Kolkata"},"customfield_12312337":null,"customfield_12313823":null,"customfield_12312338":null,"customfield_12311920":null,"customfield_12313822":null,"customfield_12312335":null,"customfield_12313821":null,"customfield_12312336":null,"customfield_12313820":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[],"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"169058","customfield_12312823":null,"creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinayakumarb","name":"vinayakumarb","key":"vinayrpet","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=34044","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"},"displayName":"Vinayakumar B","active":true,"timeZone":"Asia/Kolkata"},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinayakumarb","name":"vinayakumarb","key":"vinayrpet","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=34044","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"},"displayName":"Vinayakumar B","active":true,"timeZone":"Asia/Kolkata"},"aggregateprogress":{"progress":0,"total":0},"customfield_12313520":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"customfield_12313924":null,"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/BOOKKEEPER-326/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12313920":null,"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"customfield_12314020":"{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5c5dfdb7[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@437800b5[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@493dba9d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4a4376a7[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2710798e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2fa74244[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@b6aec7f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5a4d45fb[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7e359b35[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6b1553d5[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@37c043dc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@792aa42[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}","customfield_12314141":null,"customfield_12314140":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311293","id":"12311293","key":"BOOKKEEPER","name":"Bookkeeper","projectTypeKey":"software","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311293&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311293&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311293&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311293&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/14780","id":"14780","description":"BookKeeper","name":"BookKeeper"}},"aggregatetimespent":null,"customfield_12312520":null,"customfield_12314422":null,"customfield_12314421":null,"customfield_12314146":null,"customfield_12314420":null,"customfield_12314145":null,"customfield_12314144":null,"customfield_12314143":null,"resolutiondate":"2012-08-13T09:39:18.647+0000","workratio":-1,"customfield_12312923":null,"customfield_12312920":null,"customfield_12312921":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/BOOKKEEPER-326/watchers","watchCount":9,"isWatching":false},"created":"2012-07-04T04:38:34.642+0000","updated":"2013-02-13T15:46:32.698+0000","timeoriginalestimate":null,"description":"Deadlock found during ledger recovery. please find the attached thread dump.","customfield_10010":null,"timetracking":{},"customfield_12314523":null,"customfield_12314127":null,"customfield_12314522":null,"customfield_12314126":null,"customfield_12314521":null,"customfield_12314125":null,"customfield_12314520":null,"customfield_12314124":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12535037","id":"12535037","filename":"BK_DeadLock.log","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinayakumarb","name":"vinayakumarb","key":"vinayrpet","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=34044","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"},"displayName":"Vinayakumar B","active":true,"timeZone":"Asia/Kolkata"},"created":"2012-07-04T04:40:49.230+0000","size":40238,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12535037/BK_DeadLock.log"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12540637","id":"12540637","filename":"BK326.png","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=surendralilhore","name":"surendralilhore","key":"surendrasingh","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=surendrasingh&avatarId=30759","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=surendrasingh&avatarId=30759","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=surendrasingh&avatarId=30759","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=surendrasingh&avatarId=30759"},"displayName":"Surendra Singh Lilhore","active":true,"timeZone":"Etc/UTC"},"created":"2012-08-13T10:20:32.995+0000","size":21672,"mimeType":"image/x-png","content":"https://issues.apache.org/jira/secure/attachment/12540637/BK326.png"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12536609","id":"12536609","filename":"BOOKKEEPER-326.1.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh Radhakrishnan","active":true,"timeZone":"Asia/Kolkata"},"created":"2012-07-16T09:36:10.131+0000","size":8461,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12536609/BOOKKEEPER-326.1.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12537552","id":"12537552","filename":"BOOKKEEPER-326.2.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh Radhakrishnan","active":true,"timeZone":"Asia/Kolkata"},"created":"2012-07-23T08:42:16.434+0000","size":5613,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12537552/BOOKKEEPER-326.2.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12540468","id":"12540468","filename":"BOOKKEEPER-326.3.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh Radhakrishnan","active":true,"timeZone":"Asia/Kolkata"},"created":"2012-08-10T10:53:37.761+0000","size":5291,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12540468/BOOKKEEPER-326.3.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12536396","id":"12536396","filename":"BOOKKEEPER-326.part2.diff","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-07-13T15:24:04.504+0000","size":2828,"mimeType":"application/octet-stream","content":"https://issues.apache.org/jira/secure/attachment/12536396/BOOKKEEPER-326.part2.diff"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12535151","id":"12535151","filename":"BOOKKEEPER-326.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh Radhakrishnan","active":true,"timeZone":"Asia/Kolkata"},"created":"2012-07-05T06:18:28.189+0000","size":2933,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12535151/BOOKKEEPER-326.patch"}],"customfield_12314123":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12314122":null,"customfield_12314121":null,"customfield_12314120":null,"customfield_12314129":null,"customfield_12314524":null,"customfield_12314128":null,"summary":"DeadLock during ledger recovery ","customfield_12314130":null,"customfield_12310291":null,"customfield_12310290":null,"customfield_12311024":null,"customfield_12314138":null,"customfield_12314137":null,"environment":null,"customfield_12314136":null,"customfield_12314135":null,"customfield_12311020":null,"customfield_12314134":null,"duedate":null,"customfield_12314132":null,"customfield_12314131":null,"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13406272","id":"13406272","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinayakumarb","name":"vinayakumarb","key":"vinayrpet","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=34044","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"},"displayName":"Vinayakumar B","active":true,"timeZone":"Asia/Kolkata"},"body":"{code}Found one Java-level deadlock:\n=============================\n\"pool-91-thread-1\":\n  waiting to lock monitor 0x000000004039bce0 (object 0x00007f3dc329b6a0, a org.apache.bookkeeper.proto.PerChannelBookieClient),\n  which is held by \"main-EventThread\"\n\"main-EventThread\":\n  waiting to lock monitor 0x00000000401f4e50 (object 0x00007f3dc329b958, a org.apache.bookkeeper.client.ReadLastConfirmedOp),\n  which is held by \"pool-91-thread-1\"\n\nJava stack information for the threads listed above:\n===================================================\n\"pool-91-thread-1\":\n\tat org.apache.bookkeeper.proto.PerChannelBookieClient.connectIfNeededAndDoOp(PerChannelBookieClient.java:184)\n\t- waiting to lock <0x00007f3dc329b6a0> (a org.apache.bookkeeper.proto.PerChannelBookieClient)\n\tat org.apache.bookkeeper.proto.BookieClient.readEntry(BookieClient.java:144)\n\tat org.apache.bookkeeper.client.PendingReadOp.sendRead(PendingReadOp.java:109)\n\tat org.apache.bookkeeper.client.PendingReadOp.initiate(PendingReadOp.java:93)\n\tat org.apache.bookkeeper.client.LedgerHandle.asyncReadEntries(LedgerHandle.java:382)\n\tat org.apache.bookkeeper.client.LedgerRecoveryOp.doRecoveryRead(LedgerRecoveryOp.java:92)\n\tat org.apache.bookkeeper.client.LedgerRecoveryOp.access$000(LedgerRecoveryOp.java:46)\n\tat org.apache.bookkeeper.client.LedgerRecoveryOp$1.readLastConfirmedDataComplete(LedgerRecoveryOp.java:70)\n\tat org.apache.bookkeeper.client.ReadLastConfirmedOp.readEntryComplete(ReadLastConfirmedOp.java:116)\n\t- locked <0x00007f3dc329b958> (a org.apache.bookkeeper.client.ReadLastConfirmedOp)\n\tat org.apache.bookkeeper.proto.PerChannelBookieClient.handleReadResponse(PerChannelBookieClient.java:634)\n\tat org.apache.bookkeeper.proto.PerChannelBookieClient$7.safeRun(PerChannelBookieClient.java:539)\n\tat org.apache.bookkeeper.util.SafeRunnable.run(SafeRunnable.java:31)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)\n\tat java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:138)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)\n\tat java.lang.Thread.run(Thread.java:619)\n\"main-EventThread\":\n\tat org.apache.bookkeeper.client.ReadLastConfirmedOp.readEntryComplete(ReadLastConfirmedOp.java:79)\n\t- waiting to lock <0x00007f3dc329b958> (a org.apache.bookkeeper.client.ReadLastConfirmedOp)\n\tat org.apache.bookkeeper.proto.BookieClient$3.operationComplete(BookieClient.java:132)\n\tat org.apache.bookkeeper.proto.BookieClient$3.operationComplete(BookieClient.java:128)\n\tat org.apache.bookkeeper.proto.PerChannelBookieClient$1.operationComplete(PerChannelBookieClient.java:168)\n\tat org.jboss.netty.channel.DefaultChannelFuture.notifyListener(DefaultChannelFuture.java:381)\n\tat org.jboss.netty.channel.DefaultChannelFuture.addListener(DefaultChannelFuture.java:148)\n\tat org.apache.bookkeeper.proto.PerChannelBookieClient.connect(PerChannelBookieClient.java:137)\n\t- locked <0x00007f3dc329b6a0> (a org.apache.bookkeeper.proto.PerChannelBookieClient)\n\tat org.apache.bookkeeper.proto.PerChannelBookieClient.connectIfNeededAndDoOp(PerChannelBookieClient.java:200)\n\t- locked <0x00007f3dc329b6a0> (a org.apache.bookkeeper.proto.PerChannelBookieClient)\n\tat org.apache.bookkeeper.proto.BookieClient.readEntryAndFenceLedger(BookieClient.java:128)\n\tat org.apache.bookkeeper.client.ReadLastConfirmedOp.initiateWithFencing(ReadLastConfirmedOp.java:69)\n\tat org.apache.bookkeeper.client.LedgerRecoveryOp.initiate(LedgerRecoveryOp.java:84)\n\tat org.apache.bookkeeper.client.LedgerHandle$5.processResult(LedgerHandle.java:804)\n\tat org.apache.bookkeeper.util.RetryableZookeeper$6.processResult(RetryableZookeeper.java:633)\n\tat org.apache.zookeeper.ClientCnxn$EventThread.processEvent(ClientCnxn.java:545)\n\tat org.apache.zookeeper.ClientCnxn$EventThread.run(ClientCnxn.java:497)\n\nFound 1 deadlock.{code}\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinayakumarb","name":"vinayakumarb","key":"vinayrpet","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=34044","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"},"displayName":"Vinayakumar B","active":true,"timeZone":"Asia/Kolkata"},"created":"2012-07-04T04:39:42.364+0000","updated":"2012-07-04T04:39:42.364+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13406274","id":"13406274","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinayakumarb","name":"vinayakumarb","key":"vinayrpet","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=34044","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"},"displayName":"Vinayakumar B","active":true,"timeZone":"Asia/Kolkata"},"body":"Attached jstack threaddump.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinayakumarb","name":"vinayakumarb","key":"vinayrpet","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=34044","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"},"displayName":"Vinayakumar B","active":true,"timeZone":"Asia/Kolkata"},"created":"2012-07-04T04:40:49.317+0000","updated":"2012-07-04T04:40:49.317+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13406283","id":"13406283","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh Radhakrishnan","active":true,"timeZone":"Asia/Kolkata"},"body":"After analyzing the threaddump I could see, the DefaultChannelFuture.notifyListener() is notifying in the same thread where the PerChannelBookieClient.connect() is invoked. Now the pendingOp.operationComplete(rc, null); is executing and inturn reaches the ReadLastConfirmedOp.readEntryComplete() and is waiting for ReadLastConfirmedOp lock acquisition.\n{code}\nat org.apache.bookkeeper.client.ReadLastConfirmedOp.readEntryComplete(ReadLastConfirmedOp.java:79)\n\t- waiting to lock <0x00007f3dc329b958> (a org.apache.bookkeeper.client.ReadLastConfirmedOp)\n\tat org.apache.bookkeeper.proto.BookieClient$3.operationComplete(BookieClient.java:132)\n\tat org.apache.bookkeeper.proto.BookieClient$3.operationComplete(BookieClient.java:128)\n\tat org.apache.bookkeeper.proto.PerChannelBookieClient$1.operationComplete(PerChannelBookieClient.java:168)\n\tat org.jboss.netty.channel.DefaultChannelFuture.notifyListener(DefaultChannelFuture.java:381)\n\tat org.jboss.netty.channel.DefaultChannelFuture.addListener(DefaultChannelFuture.java:148)\n\tat org.apache.bookkeeper.proto.PerChannelBookieClient.connect(PerChannelBookieClient.java:137)\n\t- locked <0x00007f3dc329b6a0> (a org.apache.bookkeeper.proto.PerChannelBookieClient)\n\tat org.apache.bookkeeper.proto.PerChannelBookieClient.connectIfNeededAndDoOp(PerChannelBookieClient.java:200)\n\t- locked <0x00007f3dc329b6a0> (a org.apache.bookkeeper.proto.PerChannelBookieClient)\n{code}\n\n\nI think the contract mentioned in the comment 'trick to not do operations under the lock' is broken, since the DefaultChannelFuture.notifyListener() is coming in the same thread where PerChannelBookieClient.connect() is invoked.\n{code}\nsynchronized private void connect() {\n        future.addListener(new ChannelFutureListener() {\n            @Override\n            public void operationComplete(ChannelFuture future) throws Exception {\n                int rc;\n                Queue<GenericCallback<Void>> oldPendingOps;\n\n                synchronized (PerChannelBookieClient.this) {\n                    .....\n                    .....\n                    .....\n                    // trick to not do operations under the lock, take the list\n                    // of pending ops and assign it to a new variable, while\n                    // emptying the pending ops by just assigning it to a new\n                    // list\n                    oldPendingOps = pendingOps;\n                    pendingOps = new ArrayDeque<GenericCallback<Void>>();\n                }\n                for (GenericCallback<Void> pendingOp : oldPendingOps) {\n                    pendingOp.operationComplete(rc, null);\n                }\n            }\n        });\n}\n{code}\n\n\n-Rakesh","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh Radhakrishnan","active":true,"timeZone":"Asia/Kolkata"},"created":"2012-07-04T05:33:48.246+0000","updated":"2012-07-04T05:33:48.246+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13406296","id":"13406296","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinayakumarb","name":"vinayakumarb","key":"vinayrpet","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=34044","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"},"displayName":"Vinayakumar B","active":true,"timeZone":"Asia/Kolkata"},"body":"Hi Rakesh,\n\nI did some investigation on netty behaviour while invoking the listeners.\n\nHere it is:\n1. The race is between following 2 lines of PerChannelBookieClient.\n    {code}\n         ChannelFuture future = bootstrap.connect(addr);\n\n        future.addListener(new ChannelFutureListener() {code}\n2. bootstrap.connect(addr) will put a connection request to one queue which will be processed by another thread and set the connection result.  \n  If the result of connection is available before  adding the listener to future in future.addListener(..), \n    then listener will be invoked in same thread immediately still holding the locks.\n \n\nOverall scenario \n--------------------------\n# Ledger is created and entries are writter to 3 bookies.\n# one of bookie is killed. (say this bookie is not the first bookie in the ensemble)\n# New bookie started.\n# now openLedger() call is made to recover the ledger. as part of this readLastConfirmed request will be added each of the bookies with callback ReadLastConfirmedOp.readEntryComplete which is synchronized.\n# First callback came from first bookie which is alive in separate thread and entered ReadLastConfirmedOp.readEntryComplete() and processing.\n# Another Callback came for the failed bookie from connect() method by holding the lock of PerChannelBookieClient instance of failed bookie, and trying to invoke the same callback, but BLOCKED. ( Here to invoke the listener in same thread, need to wait before future.addListener(..) by putting debug point)\n# As part of first call back, doRecoveryRead() will put one PendingReadOp request for asyncread. If this PendingReadOp selects same PerChannelBookieClient of failed bookie for read, then it will enter to deadlock. (To reproduce, bookieIndex variable can be changed to index of the failed bookie in PendingReadOp.sendRead(..))\n\n( Can reuse the existing test BookieFailureTest.testLedgerOpenAfterBKCrashed())","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=vinayakumarb","name":"vinayakumarb","key":"vinayrpet","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=34044","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"},"displayName":"Vinayakumar B","active":true,"timeZone":"Asia/Kolkata"},"created":"2012-07-04T06:24:57.304+0000","updated":"2012-07-04T06:24:57.304+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13406489","id":"13406489","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=umamaheswararao","name":"umamaheswararao","key":"umamaheswararao","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Uma Maheswara Rao G","active":true,"timeZone":"America/Los_Angeles"},"body":"Will it be a good idea to execute the callback on separate thread always? that would be one options to solve.\n\nShall we mark this as blocker as this is coming frequently in CI(internal)? also this is at main flows.\n\n\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=umamaheswararao","name":"umamaheswararao","key":"umamaheswararao","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Uma Maheswara Rao G","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-07-04T12:51:53.965+0000","updated":"2012-07-04T12:51:53.965+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13406824","id":"13406824","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"ah, this issue is quite similar as BOOKKEEPER-215 and BOOKKEEPER-239. The common cause of these jiras are we call bookkeeper operations (addEntry/readEntry) in previous operations' callbacks. \n\na possible fix (as Uma mentioned) is to submit bookkeeper operations in another OrderedSafeExecutor (callbackWorker) not call them directly in previous operations' callback, which is in the early patch for BOOKKEEPER-215. I think this fix could resolve deadlock issue encountered in ledger recovery both BOOKKEEPER-239 and BOOKKEEPER-326.\n\n{code}\n import org.apache.bookkeeper.client.DigestManager.RecoveryData;\n import org.apache.bookkeeper.proto.BookieProtocol;\n import org.apache.bookkeeper.proto.BookkeeperInternalCallbacks.GenericCallback;\n+import org.apache.bookkeeper.util.SafeRunnable;\n \n import org.apache.zookeeper.KeeperException;\n import org.slf4j.Logger;\n@@ -89,16 +90,22 @@ class LedgerRecoveryOp implements ReadCallback, AddCallback {\n      */\n     private void doRecoveryRead() {\n         lh.lastAddConfirmed++;\n-        lh.asyncReadEntries(lh.lastAddConfirmed, lh.lastAddConfirmed, this, null);\n+        LOG.debug(\"Submit recovery read entry {} for ledger {}\", lh.lastAddConfirmed, lh.getId());\n+        lh.bk.callbackWorker.submitOrdered(lh.getId(), new SafeRunnable() {\n+            @Override\n+            public void safeRun() {\n+                lh.asyncReadEntries(lh.lastAddConfirmed, lh.lastAddConfirmed, LedgerRecoveryOp.this, null);\n+            }\n+        });\n     }\n \n     @Override\n-    public void readComplete(int rc, LedgerHandle lh, Enumeration<LedgerEntry> seq, Object ctx) {\n+    public void readComplete(int rc, final LedgerHandle lh, Enumeration<LedgerEntry> seq, Object ctx) {\n         // get back to prev value\n         lh.lastAddConfirmed--;\n         if (rc == BKException.Code.OK) {\n             LedgerEntry entry = seq.nextElement();\n-            byte[] data = entry.getEntry();\n+            final byte[] data = entry.getEntry();\n \n             /*\n              * We will add this entry again to make sure it is written to enough\n@@ -106,7 +113,12 @@ class LedgerRecoveryOp implements ReadCallback, AddCallback {\n              * be added again when processing the call to add it.\n              */\n             lh.length = entry.getLength() - (long) data.length;\n-            lh.asyncRecoveryAddEntry(data, 0, data.length, this, null);\n+            lh.bk.callbackWorker.submitOrdered(lh.getId(), new SafeRunnable() {\n+                @Override\n+                public void safeRun() {\n+                    lh.asyncRecoveryAddEntry(data, 0, data.length, LedgerRecoveryOp.this, null);\n+                }\n+            });\n \n             return;\n         }\n{code}\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-07-05T02:39:03.234+0000","updated":"2012-07-05T02:39:03.234+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13406825","id":"13406825","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"marked it as blocker, since the deadlock issue is in ledger recovery which is a core operation.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-07-05T02:42:33.086+0000","updated":"2012-07-05T02:42:33.086+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13406826","id":"13406826","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"similar issue in BOOKKEEPER-239.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-07-05T02:43:19.906+0000","updated":"2012-07-05T02:43:19.906+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13406869","id":"13406869","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh Radhakrishnan","active":true,"timeZone":"Asia/Kolkata"},"body":"Hi All,\n\nI just moved the addlistener() outside the lock, so that notifications will invoke all the pendingOps not under the PerChannelBookieClient.this lock.\n\nI've uploaded initial draft patch to discuss more on the problem and identifying better approach.\n\nIMHO, it would be good if we able to correct the PerChannelBookieClient rather than fixing in the callbacks.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh Radhakrishnan","active":true,"timeZone":"Asia/Kolkata"},"created":"2012-07-05T06:29:22.540+0000","updated":"2012-07-05T06:29:22.540+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13412897","id":"13412897","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"I don't think the problem here is that callbacks are running in the same thread. Rather, in LedgerHandle, even though we have an executor, we only use it for add operations. If we put all read operations and readLastConfirmed operations into the executor, we shouldn't be able to get deadlocks like this, as operations on a single ledger should be serialized. \n\nOf course this doesn't address the Semaphore based deadlock. I was thinking recently that we could start using something like http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/util/concurrent/RateLimiter.html to alleviate the problem.  ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-07-12T16:07:10.195+0000","updated":"2012-07-12T16:07:10.195+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13412898","id":"13412898","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"Is this deadlock easily reproducible? ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-07-12T16:08:24.585+0000","updated":"2012-07-12T16:08:24.585+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13413492","id":"13413492","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh Radhakrishnan","active":true,"timeZone":"Asia/Kolkata"},"body":"@Ivan\nbq.I don't think the problem here is that callbacks are running in the same thread\n\nChannelFuture javadoc says that if the connection has already established before adding the listener, it will be notified immediately.\n{code}\n    /**\n     * Adds the specified listener to this future.  The\n     * specified listener is notified when this future is\n     * {@linkplain #isDone() done}.  If this future is already\n     * completed, the specified listener is notified immediately.\n     */\n    void addListener(ChannelFutureListener listener);\n{code}\n\nAlso, I've seen netty is creating 'DefaultChannelFuture' instance and the addListener() method invokes operationComplete() call in the same thread.\n{code}\n    public void addListener(ChannelFutureListener listener) {\n        if (listener == null) {\n            throw new NullPointerException(\"listener\");\n        }\n\n        boolean notifyNow = false;\n        synchronized (this) {\n            if (done) {\n                notifyNow = true;\n            } else {\n                //.......\n            }\n        }\n\n        if (notifyNow) {\n            notifyListener(listener);\n        }\n    }\n{code}\n\n\nWe will be able to see this by just hold(debug point) the 'future.addListener()' invocation for few ms/secs. After connection establishment if we execute future.addListener will notifies the operationComplete() in the same thread. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh Radhakrishnan","active":true,"timeZone":"Asia/Kolkata"},"created":"2012-07-13T04:48:03.554+0000","updated":"2012-07-13T04:48:03.554+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13413497","id":"13413497","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh Radhakrishnan","active":true,"timeZone":"Asia/Kolkata"},"body":"I'm thinking the following contract broken due to this behaviour of netty notifications. \nEither we should have an executor for 'pendingOp.operationComplete(rc, null);' or like the uploaded patch we will fully exclude addlistener() call outside PerChannelBookieClient lock?\n\n{code}\n// trick to not do operations under the lock, take the list\n// of pending ops and assign it to a new variable, while\n// emptying the pending ops by just assigning it to a new\n// list\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh Radhakrishnan","active":true,"timeZone":"Asia/Kolkata"},"created":"2012-07-13T05:06:23.341+0000","updated":"2012-07-13T05:06:23.341+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13413642","id":"13413642","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"{quote}\nWe will be able to see this by just hold(debug point) the 'future.addListener()' invocation for few ms/secs. After connection establishment if we execute future.addListener will notifies the operationComplete() in the same thread. \n{quote}\nWhat test case are you executing when you do this? I've added a mod, to await on the future and then add the listener, but it's not hitting the deadlock.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-07-13T10:33:32.209+0000","updated":"2012-07-13T10:33:32.209+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13413681","id":"13413681","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh Radhakrishnan","active":true,"timeZone":"Asia/Kolkata"},"body":"Hi Ivan, Hope you have seen the netty notification are coming in the same thread after adding the wait before addListener()?\n\nTest case: BookieFailureTest.testLedgerOpenAfterBKCrashed()\n\nScenario link:\nhttps://issues.apache.org/jira/browse/BOOKKEEPER-326?focusedCommentId=13406296&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13406296\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh Radhakrishnan","active":true,"timeZone":"Asia/Kolkata"},"created":"2012-07-13T11:59:05.948+0000","updated":"2012-07-13T11:59:05.948+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13413813","id":"13413813","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"I managed to repro this.\n\nI think the solution should be two-fold.\n1. We should tighten up the the synchronization as Rakesh's patch does.\n2. We should ensure that call to the client don't reenter. I've attached a patch which insures it doesn't happen on the public methods of LedgerHandle.\n\nIn fact, I think 1 could go even further. The only thing that needs to be protected by synchronization in PerChannelBookieClient#connect is the state variable. As such, that's all we should be protecting.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-07-13T15:24:04.550+0000","updated":"2012-07-13T15:24:04.550+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13414963","id":"13414963","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh Radhakrishnan","active":true,"timeZone":"Asia/Kolkata"},"body":"Thanks a lot Ivan for your time:)\n\nI've uploaded new patch by incorporating Ivan's point. Here I tried to keep only the 'state' and 'channel' under the PerChannelBookieClient.this lock.\n\nAlso, I've added a test case but this will only forcing to establish new client connections. With this there is high chance of getting notifications in the same thread and invoke the pending operations in the caller thread itself. We would be able to reproduce the deadlock scenario only by putting debug points.\n\nHi others, Please have a look on the latest patch.\n\nThanks, \nRakesh ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh Radhakrishnan","active":true,"timeZone":"Asia/Kolkata"},"created":"2012-07-16T09:49:34.649+0000","updated":"2012-07-16T09:49:34.649+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13415077","id":"13415077","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"thanks for Rakesh providing the patch.\n\n{code}\n-    synchronized private void connect() {\n-        if (state == ConnectionState.CONNECTING) {\n-            return;\n-        } \n-        // Start the connection attempt to the input server host.\n-        state = ConnectionState.CONNECTING;\n-\n+    private void connect() {\n{code}\n\nI am not sure I understood the above changes. but if you removed the above codes. how you could prevent concurrently call to #connect method? as Ivan suggested, synchronized on state variable would be enough.\n\n\n{quote}\n2. We should ensure that call to the client don't reenter. I've attached a patch which insures it doesn't happen on the public methods of LedgerHandle.\n{quote}\n\n-1 on the changes Ivan made to LedgerHandle. it breaks the throttle mechanism we deployed in BookKeeper now. for now, we use semaphore to do rate limit on both read/write operations, if permits are exhausted, the client which called addEntry/readEntries would be blocked until the permits are releases. the changes would not block client when permits are exhausted.\n\nso before we had a new throttling mechanism (may be using RateLimit as Ivan mentioned), we don't need to include these changes in this jira. And I think it would be in BOOKKEEPER-239 discussing new throttling mechanism.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-07-16T12:58:28.649+0000","updated":"2012-07-16T12:59:07.003+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13415113","id":"13415113","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh Radhakrishnan","active":true,"timeZone":"Asia/Kolkata"},"body":"Thanks a lot Sijie for your time and review.\n\nbq.as Ivan suggested, synchronized on state variable would be enough.\n@Sijie\nAs I understood from Ivan's comment, we should protect only the state variable in the synchronization and suggested to move the connection logic outside the sync block. \n\nCould you please clarify whether you are suggesting to use 'synchronized on state variable'? IMHO shouldn't use enum as lock(since the object will change when state changes and lock will be no more)\n\nIvan's comment: \"The only thing that needs to be protected by synchronization in PerChannelBookieClient#connect is the state variable\"\n\n\nbq.but if you removed the above codes. how you could prevent concurrently call to #connect method?\nI haven't completely cleared, instead just moved the checks to connectIfNeededAndDoOp() so that if the state is connecting then returning silently by adding op to 'pendingOps'. Here the flow will not come to connect at all.\n{code}\nsynchronized (this) {\n   //....\n   //...\n  if (state == ConnectionState.CONNECTING) {\n      // just return as connection request has already send\n      // and waiting for the response.\n      return;\n  }\n  // switch state to connecting and do connection attempt\n  state = ConnectionState.CONNECTING;\n\n  if (!doOpNow) {\n    // Start the connection attempt to the input server host.\n    connect();\n  }\n{code}\n\n\n{quote}-1 on the changes Ivan made to LedgerHandle. it breaks the throttle mechanism we deployed in BookKeeper now. for now, we use semaphore to do rate limit on both read/write operations, if permits are exhausted, the client which called addEntry/readEntries would be blocked until the permits are releases. the changes would not block client when permits are exhausted.\nso before we had a new throttling mechanism (may be using RateLimit as Ivan mentioned), we don't need to include these changes in this jira. And I think it would be in BOOKKEEPER-239 discussing new throttling mechanism.{quote}\n\nBTW, if you have any suggestions/logic to be done as part of this JIRA, could you please explain me so that I'll take care.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh Radhakrishnan","active":true,"timeZone":"Asia/Kolkata"},"created":"2012-07-16T13:42:35.509+0000","updated":"2012-07-16T13:42:35.509+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13415138","id":"13415138","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"ah, sorry, I just missed the part you move from #connect() to #connectIfNeededAndDoOp(). you changes are correct.\n\n>> BTW, if you have any suggestions/logic to be done as part of this JIRA, could you please explain me so that I'll take care\n\nI don't have any logic to add here. As my comment, if we want to change throttling mechanism, it would be in BOOKKEEPER-239 not here.\n\n+1 on Rakesh's changes.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-07-16T14:04:15.197+0000","updated":"2012-07-16T14:04:15.197+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13420502","id":"13420502","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh Radhakrishnan","active":true,"timeZone":"Asia/Kolkata"},"body":"Hi Sijie, as per the suggestion uploaded latest patch includes only PerChannelBookieClient changes. \n\nIt would be great if others can have a look on the changes.\n\nThanks,\nRakesh","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh Radhakrishnan","active":true,"timeZone":"Asia/Kolkata"},"created":"2012-07-23T08:42:16.806+0000","updated":"2012-07-23T08:42:16.806+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13420527","id":"13420527","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=umamaheswararao","name":"umamaheswararao","key":"umamaheswararao","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Uma Maheswara Rao G","active":true,"timeZone":"America/Los_Angeles"},"body":"@Rakesh, change looks good to me.\n\nI have some observations in test but they are not be really related to this chnage alone.\nIn Tests: Default BookieRecoveryTest taking the number of bookies as argument in constructors.\nSo, setUp will start the number of bookies for testCase. If we start any bookies our own, do we need to clean all the resources( ex: bsConf) to that Bookie our own? what is the contract here?\nOtherwise I have seen one problem with restartBookies API. This API is useing the bsConf for restarting the bookies. But tearDown is leaving that extra started Bookies confs in bsConf. So, restartBookies may start that older bookies also.\nIn my opinion, we should clean that bsConf in tearSown or stopBKCluster.\nSince this change is not related to this particular change, does it make sense to file a separate JIRA? Why I raised this concerne here is, when I saw the test code observed there are extra bookies started in this test.\nWhat do you say Sijie?\n\nAlso, I am not sure, that test will reproduce the case, but it may be worth keeping the test as he is using newer clients. I am not sure, is there a better way to automat this deadLock here by tests. So,keeping this test should be ok from me.\n\nThanks\nUma\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=umamaheswararao","name":"umamaheswararao","key":"umamaheswararao","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Uma Maheswara Rao G","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-07-23T09:38:28.369+0000","updated":"2012-07-23T09:38:28.369+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13429196","id":"13429196","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"{quote}\n-1 on the changes Ivan made to LedgerHandle. it breaks the throttle mechanism we deployed in BookKeeper now. for now, we use semaphore to do rate limit on both read/write operations, if permits are exhausted, the client which called addEntry/readEntries would be blocked until the permits are releases. the changes would not block client when permits are exhausted.{quote}\nI had forgotten that PendingReadOp reaches into the ledger handle to take the permit. I think, even if don't move to a rate limiting semaphore, we should move all calls to the semaphore into LedgerHandle and remove all accesses from without. This way, we could make the change I suggested, which would be another safeguard against deadlocking, and is generally better software engineering practice also.\n\n@Rakesh\nThe patch you have up is good. Is there a reason this JIRA isn't patch available?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-08-06T15:31:02.697+0000","updated":"2012-08-06T15:31:02.697+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13429929","id":"13429929","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh Radhakrishnan","active":true,"timeZone":"Asia/Kolkata"},"body":"@Ivan\nI was trying to reproduce deadlock through test case, but couldn't:(","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh Radhakrishnan","active":true,"timeZone":"Asia/Kolkata"},"created":"2012-08-07T04:51:12.052+0000","updated":"2012-08-07T04:51:12.052+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13429993","id":"13429993","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"I think it's near impossible to automatically and reliably trigger this deadlock, as it's reliant on a delay occurring between bootstrap.connect, and adding the FutureListener. I think I could get it to trigger fairly reliably with some hacks in the code (no suitable for putting into production), so you you submit a patch with the fix, forgetting about the test case, run with the hack to ensure it hits, apply your patch, and then run with the hack again to verify the deadlock does not occur.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-08-07T07:40:52.169+0000","updated":"2012-08-07T07:40:52.169+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13430316","id":"13430316","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh Radhakrishnan","active":true,"timeZone":"Asia/Kolkata"},"body":"bq.I think it's near impossible to automatically and reliably trigger this deadlock\n\n@Ivan\nThen could you have a look on 'BOOKKEEPER-326.2.patch'. Here I had kept only the necessary changes.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh Radhakrishnan","active":true,"timeZone":"Asia/Kolkata"},"created":"2012-08-07T12:33:22.165+0000","updated":"2012-08-07T12:33:22.165+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13432695","id":"13432695","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh Radhakrishnan","active":true,"timeZone":"Asia/Kolkata"},"body":"I've rebased the patch in the latest trunk code. Could you please help to review.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh Radhakrishnan","active":true,"timeZone":"Asia/Kolkata"},"created":"2012-08-10T10:53:37.791+0000","updated":"2012-08-10T10:53:37.791+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13432698","id":"13432698","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=surendralilhore","name":"surendralilhore","key":"surendrasingh","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=surendrasingh&avatarId=30759","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=surendrasingh&avatarId=30759","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=surendrasingh&avatarId=30759","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=surendrasingh&avatarId=30759"},"displayName":"Surendra Singh Lilhore","active":true,"timeZone":"Etc/UTC"},"body":"@Ivan\n{quote}\nI think it's near impossible to automatically and reliably trigger this deadlock, as it's reliant on a delay occurring between bootstrap.connect, and adding the FutureListener. I think I could get it to trigger fairly reliably with some hacks in the code (no suitable for putting into production), so you you submit a patch with the fix, forgetting about the test case, run with the hack to ensure it hits, apply your patch, and then run with the hack again to verify the deadlock does not occur.\n{quote}\n\nThe following scenario was tested by applying the patch and \"JCarder agent\" enabled (for deadlock detection).\n\n1.Ledger is created and entries are writter to 3 bookies.\n2.one of bookie is killed. (say this bookie is not the first bookie in the ensemble)\n3.New bookie started.\n4.now openLedger() call is made to recover the ledger. as part of this readLastConfirmed request will be added each of the bookies with callback ReadLastConfirmedOp.readEntryComplete which is synchronized.\n5.First callback came from first bookie which is alive in separate thread and entered ReadLastConfirmedOp.readEntryComplete() and processing.\n6.Another Callback came for the failed bookie from connect() method by holding the lock of PerChannelBookieClient instance of failed bookie, and trying to invoke the same callback, but BLOCKED. ( Here to invoke the listener in same thread, need to wait before future.addListener(..) by putting debug point)\n7.As part of first call back, doRecoveryRead() will put one PendingReadOp request for asyncread. If this PendingReadOp selects same PerChannelBookieClient of failed bookie for read, then it will enter to deadlock. (To reproduce, bookieIndex variable can be changed to index of the failed bookie in PendingReadOp.sendRead(..))\n\nJCarder Output:\n==================\nLoaded from database files:\n   Nodes: 4112\n   Edges: 5946 (excluding 5786 duplicated)\n\nCycle analysis result:\n   Cycles:          0\n   Edges in cycles: 0\n   Nodes in cycles: 0\n   Max cycle depth: 0\n   Max graph depth: 2\n\nIgnoring 0 gated cycle(s).\nNo cycles found!\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=surendralilhore","name":"surendralilhore","key":"surendrasingh","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=surendrasingh&avatarId=30759","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=surendrasingh&avatarId=30759","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=surendrasingh&avatarId=30759","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=surendrasingh&avatarId=30759"},"displayName":"Surendra Singh Lilhore","active":true,"timeZone":"Etc/UTC"},"created":"2012-08-10T11:04:02.856+0000","updated":"2012-08-10T11:04:02.856+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13432701","id":"13432701","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"@surendra\nDo you have the same output for the scenario without the patch applied?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-08-10T11:13:01.822+0000","updated":"2012-08-10T11:13:01.822+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13433026","id":"13433026","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"Committed as r1372343. Thanks Rakesh","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-08-13T09:39:18.663+0000","updated":"2012-08-13T09:39:18.663+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13433038","id":"13433038","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"Integrated in bookkeeper-trunk #645 (See [https://builds.apache.org/job/bookkeeper-trunk/645/])\n    BOOKKEEPER-326: DeadLock during ledger recovery (rakeshr via ivank) (Revision 1372343)\n\n     Result = ABORTED\nivank : \nFiles : \n* /zookeeper/bookkeeper/trunk/CHANGES.txt\n* /zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java\n* /zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/test/BookieFailureTest.java\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2012-08-13T10:16:14.230+0000","updated":"2012-08-13T10:16:14.230+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13433041","id":"13433041","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=surendralilhore","name":"surendralilhore","key":"surendrasingh","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=surendrasingh&avatarId=30759","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=surendrasingh&avatarId=30759","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=surendrasingh&avatarId=30759","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=surendrasingh&avatarId=30759"},"displayName":"Surendra Singh Lilhore","active":true,"timeZone":"Etc/UTC"},"body":"@Ivan\n\nJcarder Report without applying the patch : \n\n========================================================================\nOpening for reading: D:\\out\\jcarder_contexts.db\nOpening for reading: D:\\out\\jcarder_events.db\n\nLoaded from database files:\n   Nodes: 843\n   Edges: 774 (excluding 10449 duplicated)\n\nCycle analysis result:\n   Cycles:          1\n   Edges in cycles: 2\n   Nodes in cycles: 2\n   Max cycle depth: 2\n   Max graph depth: 3\n\nIgnoring 0 gated cycle(s).\nIgnoring 0 almost identical cycle(s).\n\n===================================================================================\n\nHere one cycle is found.\nI have attached one BK326.PNG file which show the graphically Deadlock cycle.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=surendralilhore","name":"surendralilhore","key":"surendrasingh","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=surendrasingh&avatarId=30759","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=surendrasingh&avatarId=30759","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=surendrasingh&avatarId=30759","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=surendrasingh&avatarId=30759"},"displayName":"Surendra Singh Lilhore","active":true,"timeZone":"Etc/UTC"},"created":"2012-08-13T10:22:15.129+0000","updated":"2012-08-13T10:22:15.129+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13433062","id":"13433062","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"Committed to 4.1 branch as r1372362.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-08-13T11:05:28.789+0000","updated":"2012-08-13T11:05:28.789+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13433067","id":"13433067","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"Thanks for the numbers Surendra","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-08-13T11:16:25.187+0000","updated":"2012-08-13T11:16:25.187+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12597399/comment/13433897","id":"13433897","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh Radhakrishnan","active":true,"timeZone":"Asia/Kolkata"},"body":"Thanks a lot Surendra. Its great work!\nAlso Thanks Sijie & Ivan for the reviews and committing the issue:)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rakeshr","name":"rakeshr","key":"rakeshr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=rakeshr&avatarId=29267","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=rakeshr&avatarId=29267","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=rakeshr&avatarId=29267","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=rakeshr&avatarId=29267"},"displayName":"Rakesh Radhakrishnan","active":true,"timeZone":"Asia/Kolkata"},"created":"2012-08-14T05:06:45.969+0000","updated":"2012-08-14T05:06:45.969+0000"}],"maxResults":35,"total":35,"startAt":0},"customfield_12311820":"0|i0tasn:","customfield_12314139":null}}

