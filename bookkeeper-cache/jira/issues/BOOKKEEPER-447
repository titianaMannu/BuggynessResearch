{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12613984","self":"https://issues.apache.org/jira/rest/api/2/issue/12613984","key":"BOOKKEEPER-447","fields":{"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12320244","id":"12320244","description":"Release 4.2.0","name":"4.2.0","archived":false,"released":true,"releaseDate":"2013-01-19"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12321757","id":"12321757","description":"Bug fix release for 4.1 branch","name":"4.1.1","archived":true,"released":false,"releaseDate":"2013-01-16"}],"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"252913","customfield_12312320":null,"customfield_12312321":null,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12312331":null,"customfield_12312332":null,"aggregatetimeoriginalestimate":null,"timeestimate":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12320244","id":"12320244","description":"Release 4.2.0","name":"4.2.0","archived":false,"released":true,"releaseDate":"2013-01-19"}],"customfield_12311120":null,"customfield_12313826":null,"issuelinks":[],"customfield_12312339":null,"customfield_12313825":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"customfield_12312337":null,"customfield_12313823":null,"customfield_12312338":null,"customfield_12311920":null,"customfield_12313822":null,"customfield_12312335":null,"customfield_12313821":null,"customfield_12312336":null,"customfield_12313820":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12314394","id":"12314394","name":"bookkeeper-server","description":"Bookkeeper server."}],"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"75596","customfield_12312823":null,"creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yx3zhu%40gmail.com","name":"yx3zhu@gmail.com","key":"yx3zhu@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yixue Zhu","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yx3zhu%40gmail.com","name":"yx3zhu@gmail.com","key":"yx3zhu@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yixue Zhu","active":true,"timeZone":"America/Los_Angeles"},"aggregateprogress":{"progress":0,"total":0},"customfield_12313520":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"customfield_12313924":null,"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/BOOKKEEPER-447/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12313920":null,"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"customfield_12314020":"{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1c75aa7d[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@ce48ae8[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2430ffe5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@c2b9241[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3b423927[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@12872b48[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@316b212a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@618214dc[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4b2382ca[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@60552d8d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@8df32dc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@790af3ef[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}","customfield_12314141":null,"customfield_12314140":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311293","id":"12311293","key":"BOOKKEEPER","name":"Bookkeeper","projectTypeKey":"software","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311293&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311293&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311293&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311293&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/14780","id":"14780","description":"BookKeeper","name":"BookKeeper"}},"aggregatetimespent":null,"customfield_12312520":null,"customfield_12314422":null,"customfield_12314421":null,"customfield_12314146":null,"customfield_12314420":null,"customfield_12314145":null,"customfield_12314144":null,"customfield_12314143":null,"resolutiondate":"2012-12-24T05:23:50.961+0000","workratio":-1,"customfield_12312923":null,"customfield_12312920":null,"customfield_12312921":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/BOOKKEEPER-447/watchers","watchCount":6,"isWatching":false},"created":"2012-10-30T01:30:46.805+0000","updated":"2013-02-13T15:46:25.277+0000","timeoriginalestimate":null,"description":"Bookie index page steal (LedgerCacheImpl::grabCleanPage) can cause index file to reflect unacknowledged entries (due to flushLedger). Suppose ledger and entry fail to flush due to Bookkeeper server crash, it will cause ledger recovery not able to use the bookie afterward, due to InterleavedStorageLedger::getEntry throws IOException.\nIf the ackSet bookies all experience this problem (DC environment), the ledger will not be able to recover.\nThe problem here essentially a violation of WAL. One reasonable fix is to track ledger flush progress (either per-ledger entry, or per-topic message). Do not flush index pages which tracks entries whose ledger (log) has not been flushed.","customfield_10010":null,"timetracking":{},"customfield_12314523":null,"customfield_12314127":null,"customfield_12314522":null,"customfield_12314126":null,"customfield_12314521":null,"customfield_12314125":null,"customfield_12314520":null,"customfield_12314124":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12561910","id":"12561910","filename":"0001-BOOKKEEPER-447-EntryLog-throws-NoSuchEntry-on-short-.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-12-20T15:58:31.915+0000","size":9965,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12561910/0001-BOOKKEEPER-447-EntryLog-throws-NoSuchEntry-on-short-.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12561759","id":"12561759","filename":"0001-BOOKKEEPER-447-EntryLog-throws-NoSuchEntry-on-short-.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-12-19T18:31:15.528+0000","size":9841,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12561759/0001-BOOKKEEPER-447-EntryLog-throws-NoSuchEntry-on-short-.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12561137","id":"12561137","filename":"0001-BOOKKEEPER-447-EntryLog-throws-NoSuchEntry-on-short-.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-12-15T18:39:45.334+0000","size":9120,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12561137/0001-BOOKKEEPER-447-EntryLog-throws-NoSuchEntry-on-short-.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12560746","id":"12560746","filename":"0001-BOOKKEEPER-447-LedgerCacheImpl-waits-on-lock-object-.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-12-13T10:10:36.153+0000","size":8875,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12560746/0001-BOOKKEEPER-447-LedgerCacheImpl-waits-on-lock-object-.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12560591","id":"12560591","filename":"0001-BOOKKEEPER-447-LedgerCacheImpl-waits-on-lock-object-.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-12-12T16:43:04.000+0000","size":8256,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12560591/0001-BOOKKEEPER-447-LedgerCacheImpl-waits-on-lock-object-.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12555674","id":"12555674","filename":"0001-BOOKKEEPER-447-LedgerCacheImpl-waits-on-semaphore-no.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-12-02T16:46:42.476+0000","size":9651,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12555674/0001-BOOKKEEPER-447-LedgerCacheImpl-waits-on-semaphore-no.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12560972","id":"12560972","filename":"0001-BOOKKEEPER-447-Throw-NoSuchEntry-if-entry-is-not-fou.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-12-14T14:07:42.860+0000","size":7483,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12560972/0001-BOOKKEEPER-447-Throw-NoSuchEntry-if-entry-is-not-fou.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12561103","id":"12561103","filename":"BOOKKEEPER-447_bitset.diff","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-12-15T09:56:03.829+0000","size":28220,"mimeType":"application/octet-stream","content":"https://issues.apache.org/jira/secure/attachment/12561103/BOOKKEEPER-447_bitset.diff"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12561080","id":"12561080","filename":"BOOKKEEPER-447_force_flush_entry_logger.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-12-15T01:40:10.538+0000","size":9144,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12561080/BOOKKEEPER-447_force_flush_entry_logger.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12562308","id":"12562308","filename":"BOOKKEEPER-447.diff","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-12-24T05:26:22.483+0000","size":8955,"mimeType":"application/octet-stream","content":"https://issues.apache.org/jira/secure/attachment/12562308/BOOKKEEPER-447.diff"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12551652","id":"12551652","filename":"BOOKKEEPER-447.diff","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-11-01T00:24:23.518+0000","size":7257,"mimeType":"application/octet-stream","content":"https://issues.apache.org/jira/secure/attachment/12551652/BOOKKEEPER-447.diff"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12555757","id":"12555757","filename":"perf.png","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-12-03T14:30:53.516+0000","size":5380,"mimeType":"image/png","content":"https://issues.apache.org/jira/secure/attachment/12555757/perf.png"}],"customfield_12314123":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12314122":null,"customfield_12314121":null,"customfield_12314120":null,"customfield_12314129":null,"customfield_12314524":null,"customfield_12314128":null,"summary":"Bookie can fail to recover if index pages flushed before ledger flush acknowledged","customfield_12314130":null,"customfield_12310291":null,"customfield_12310290":null,"customfield_12311024":null,"customfield_12314138":null,"customfield_12314137":null,"environment":null,"customfield_12314136":null,"customfield_12314135":null,"customfield_12311020":null,"customfield_12314134":null,"duedate":null,"customfield_12314132":null,"customfield_12314131":null,"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13486590","id":"13486590","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yx3zhu%40gmail.com","name":"yx3zhu@gmail.com","key":"yx3zhu@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yixue Zhu","active":true,"timeZone":"America/Los_Angeles"},"body":"Assign to Robin as he is adding progress counter as part of Group-commit work, which can be used to tweak the index flush.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yx3zhu%40gmail.com","name":"yx3zhu@gmail.com","key":"yx3zhu@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yixue Zhu","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-10-30T01:31:26.251+0000","updated":"2012-10-30T01:31:26.251+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13486788","id":"13486788","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"{quote}\nBookie index page steal (LedgerCacheImpl::grabCleanPage) can cause index file to reflect unacknowledged entries (due to flushLedger). Suppose ledger and entry fail to flush due to Bookkeeper server crash, it will cause ledger recovery not able to use the bookie afterward, due to InterleavedStorageLedger::getEntry throws IOException.\n{quote}\n\nIf failed to flush entry log, the last mark will not be rolled. so the entries are still in journal, they would be replayed and added to new entry log files and update the ledger index. I assumed that it should not throw IOException when getEntry. Could you describe more about the case? is it easy to reproduce that?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-10-30T10:43:11.998+0000","updated":"2012-10-30T10:43:11.998+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13486973","id":"13486973","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yx3zhu%40gmail.com","name":"yx3zhu@gmail.com","key":"yx3zhu@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yixue Zhu","active":true,"timeZone":"America/Los_Angeles"},"body":"The recent journal is not flushed to begin with, they cannot possibly be replayed. In the mean time, index page stealth forced the index file be flushed. The index file contains unacknowledged entries.\nNow, the client did not close the ledger, trying to recover, asking bookies for recent entry. The bookie looked at index file to get latest entry id, then look up entry log, which is not there, and throw IOException.\nClient got bad response from bookie. If the AckSet bookies all have same issue, the client simply give up recovering the ledger.\nAll entries get lost, including those already acknowledged.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yx3zhu%40gmail.com","name":"yx3zhu@gmail.com","key":"yx3zhu@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yixue Zhu","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-10-30T16:10:14.895+0000","updated":"2012-10-30T16:10:14.895+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13487046","id":"13487046","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Paiva Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"Great catch, guys! I also would like to know if you have a reliable way of reproducing it, but it seems plausible to me that it can happen. I can only see two ways around it:\n\n# Tracking what has been flushed to the journal as you propose\n# Adding an entry to the index only after it has been flushed to the journal\n\nI was wondering if you have thoughts on using the second.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Paiva Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2012-10-30T17:41:39.875+0000","updated":"2012-10-30T17:41:39.875+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13487052","id":"13487052","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=robindhamankar","name":"robindhamankar","key":"robindhamankar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robin Dhamankar","active":true,"timeZone":"America/Los_Angeles"},"body":"Since in the common case the journal would have been flushed before index entries are written out, it is better to follow the approach of tracking what has been flushed and if it hasn't (in the uncommon case) then waiting for it to be flushed.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=robindhamankar","name":"robindhamankar","key":"robindhamankar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robin Dhamankar","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-10-30T17:45:30.035+0000","updated":"2012-10-30T17:45:30.035+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13487201","id":"13487201","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Paiva Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"Thanks for the feedback, Robin. Here is a another thought. In the case we end up writing to the ledger device before we write to the journal, as you report here, it is a problem if we have a pointer in the index of a ledger to an entry, but the entry doesn't exist. It shouldn't be a problem, however, to have an entry in the entry log, but not a pointer in the index. If you agree, then what if we simply flush the entry log before we flush the ledger cache in InterleavedLedgerStorage flush? we already write in the opposite order in InterleavedLedgerStorage.addEntry.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Paiva Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2012-10-30T20:36:32.698+0000","updated":"2012-10-30T20:36:32.698+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13487333","id":"13487333","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yx3zhu%40gmail.com","name":"yx3zhu@gmail.com","key":"yx3zhu@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yixue Zhu","active":true,"timeZone":"America/Los_Angeles"},"body":"Flavio, the proposal of forcing entry log to be flushed before index would work, though the data is force flushed unnecessarily. Besides, when we optimize the entry log to cluster it by (ledger-id, entry-id), it will make things complicated than necessary.(BOOKKEEPER-432)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yx3zhu%40gmail.com","name":"yx3zhu@gmail.com","key":"yx3zhu@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yixue Zhu","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-10-30T22:56:54.502+0000","updated":"2012-10-30T22:56:54.502+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13487381","id":"13487381","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"{quote}\nThe recent journal is not flushed to begin with, they cannot possibly be replayed.\n{quote}\n\nOK. I got the issue. Thanks [~yx3zhu@gmail.com] for clarification.\n\n{quote}\nIf you agree, then what if we simply flush the entry log before we flush the ledger cache in InterleavedLedgerStorage flush?\n{quote}\n[~fpj] I think the problem here is ledger storage flushed before journal flushed. Although it could avoid IOException reading ledger index as your proposal to change the flush order in ledger storage, it volatiles the contract for a bookie server, who ack an entry after the entry has been committed to journal. I would prefer Robin's proposal.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-10-30T23:53:42.074+0000","updated":"2012-10-30T23:53:42.074+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13487613","id":"13487613","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Paiva Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"bq. the proposal of forcing entry log to be flushed before index would work, though the data is force flushed unnecessarily.\n\n[~yx3zhu@gmail.com] We already force it to disk, so there is no extra penalty. Check InterleavedLedgerStore.flush()->entryLogger.flush()->logChannel.flush(true)\n\nbq. I think the problem here is ledger storage flushed before journal flushed.\n\n[~hustlmsp] Agreed, and my proposal does not prevent us from flushing to the ledger device before we do it to the journal, but it makes sure that if we do, we won't get the IOException. This change involves no more code and we only need to swap the order, it is very simple.\n\nbq. it volatiles the contract for a bookie server, who ack an entry after the entry has been committed to journal.\n\nIt does not violate the contract because I'm not suggesting the we ack after flushing to the ledger device. We keep acking only when it is persisted in the journal. \n\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Paiva Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2012-10-31T08:26:12.215+0000","updated":"2012-10-31T08:26:12.215+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13487640","id":"13487640","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=robindhamankar","name":"robindhamankar","key":"robindhamankar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robin Dhamankar","active":true,"timeZone":"America/Los_Angeles"},"body":"Flavio, the index is also flushed in LedgerCacheImpl#grabCleanPage. We dont want to flush all ledgers and all entry logs as in case of InterleavedLedgerStore#flush just to make a clean page available. In general since when we have to order I/Os, it is better to have the other writes depend on the journal write since we write much more frequently to the journal and also journal writes are sequential making the I/O cheaper that relying on writes to ledger entries.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=robindhamankar","name":"robindhamankar","key":"robindhamankar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robin Dhamankar","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-10-31T09:47:27.118+0000","updated":"2012-10-31T09:47:27.118+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13487755","id":"13487755","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"Revisited the steps of adding entry in bookie server:\n1) add entry to ledger storage; (add to entry logger then update ledger index entry)\n2) add entry to journal queue;\n3) journal thread flushes journal queue to commit entry to disks.\n4) in journal's adding callback, it respond to client.\n\nso the entry is available for read after step 1) even the entry is not committed to journal. This behavior is OK for BookKeeper since there was last confirmed hint guarantee in BookKeeper.\n\nBut it was not so safe to make an entry to be available for read before committing to journal. Imaging that it was K/V storage (not bookkeeper), it first adding a key to memory for read then commit to journal for persistence. After the key is in memory, which is readable to client, client would read the value of key. But if crashed happend before committing to journal, the storage restarts and the key is gone. client would not read the key again, which causes inconsistent state.\n\nA better sequence for adding entry for a journal-based storage would be:\n1) added to journal queue first\n2) journal thread committed the add operation to journal\n3) in the callback of adding entry to journal, it put addEntry operation in a writer thread's queue.\n4) the write thread adds entry to ledger storage. \n5) respond to client.\n\nIn such sequence, we just make the entry available for read only after it was safely committed to disk. It would avoid inconsistent state as described above and also address this issue here.\n\nPerformance consideration:\n\nthe original steps: the latency of an addEntry operation would be (latency of adding entry to ledger storage) + (latency of committing entry to journal).\n\nthe changed steps: the latency of an addEntry operation would be (latency of committing entry to journal) + (latency of adding entry to ledger storage). Since we don't add entry to ledger storage directly in the callback committing entry to journal, we just put the addEntry operation in a writer's thread (as improvement introduced in BOOKKEEPER-429), the latency of committing entry is still same as the original one. so the total latency of an addEntry operation remains same.\n\nComplexity:\n\nit just needs to change the order of adding entry, which doesn't introduce any other code. (I assumed that we would have a separated write thread and have a queue for those pending addEntry operations, which would be introduced in BOOKKEEPER-429). And the benefit of this change would make the behavior predicate even encountering crashes.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-10-31T13:19:14.947+0000","updated":"2012-10-31T13:19:14.947+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13487782","id":"13487782","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Paiva Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"I don't think this change is necessary, Sijie, exactly because of the point you make about not violating any of our guarantees. It is true that the change is not complex, but we are now adding more threads to the story and the change is not strictly necessary. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Paiva Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2012-10-31T13:57:57.180+0000","updated":"2012-10-31T13:58:21.311+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13487810","id":"13487810","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"Flavio,\n\n{quote}\nbut we are now adding more threads to the story and the change is not strictly necessary.\n{quote}\nAs my comment, I assumed that a write thread would be added in BOOKKEEPER-429 to separated read/write threads. so no more threads added to the story. It would be a clear fix for this issue.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-10-31T14:17:58.605+0000","updated":"2012-10-31T14:17:58.605+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13487816","id":"13487816","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Paiva Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"In this case, I would feel more comfortable if we first work on the jiras that have been mentioned here (BOOKKEEPER-429 and BOOKKEEPER-432) before making further progress here. Shall we mark this jira as related those other two jiras? ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Paiva Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2012-10-31T14:24:43.859+0000","updated":"2012-10-31T14:24:43.859+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13487824","id":"13487824","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=robindhamankar","name":"robindhamankar","key":"robindhamankar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robin Dhamankar","active":true,"timeZone":"America/Los_Angeles"},"body":"Sijie, Not reading data that has not been persisted can be achieved without having to delay inserting to the index or the log files. WAL enforcement would associate a monotonically increasing sequence number with each batch of queue entries that are written to the journal and use this timestamp to detect if all entries in an index page have already been persisted. The same check that is used before the index is persisted can be used when the index is read if we want to provide readers isolation from data that is persisted. In the common case, the journal flushes will be ahead of the subscriber consumption (read) so we will basically not introduce any overhead. \n\nFlavio, I dont think we want to couple these with 429 and 432. Those are performance optimizations, this is correctness.   ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=robindhamankar","name":"robindhamankar","key":"robindhamankar","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Robin Dhamankar","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-10-31T14:42:00.503+0000","updated":"2012-10-31T14:42:00.503+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13487888","id":"13487888","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Paiva Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"bq. I dont think we want to couple these with 429 and 432. Those are performance optimizations, this is correctness. \n\nI'm also not a big fan of mixing up performance and correctness, but the discussions in this jira are referencing other changes, so I can't really say what the best way is with all these changes in flight.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Paiva Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2012-10-31T15:58:52.966+0000","updated":"2012-10-31T15:59:35.055+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13488373","id":"13488373","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"{quote}\nNot reading data that has not been persisted can be achieved without having to delay inserting to the index or the log files.\n{quote}\n\nChanging the order of committing to journal and  adding to ledger storage doesn't affect the time that an entry to be readable from BookKeeper client. since there was a semantic guarantee in BookKeeper that a client would not read an entry before the entry has been Acked succeed. Ack means the entry should be committed to journal at least before responding to client.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-11-01T00:21:27.797+0000","updated":"2012-11-01T00:21:27.797+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13488376","id":"13488376","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"wrote a draft patch of the idea changing the order of adding entry to ledger storage and committing it to journal. there is no test case added yet to reproduce the issue here.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-11-01T00:24:23.520+0000","updated":"2012-11-01T00:24:23.520+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13488391","id":"13488391","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yx3zhu%40gmail.com","name":"yx3zhu@gmail.com","key":"yx3zhu@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yixue Zhu","active":true,"timeZone":"America/Los_Angeles"},"body":"Sijie,\nThe patch you have will ends up stall index/entry log caching and flushing, which could well be done in parallel.\nRobin is already working on group commit of ledgers (in separat thread). The approach I described initially is classical database WAL technique.\nI think it is best to coordinate with Robin on addressing this issue, if you are eager to work on it.:-)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yx3zhu%40gmail.com","name":"yx3zhu@gmail.com","key":"yx3zhu@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yixue Zhu","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-11-01T00:52:18.897+0000","updated":"2012-11-01T00:52:18.897+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13488426","id":"13488426","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"Yixue, I would say sorry if it made you uncomfortable. I am pleased that we could have great improvement using group commit idea as you proposal. I attached a draft just to show my idea about this issue since we are discussing different opinions for it, and I don't change the patch to be available since it was still a draft to show the idea and there are still different opinions about this problem. I am not to interrupt Robin's work.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-11-01T02:40:20.337+0000","updated":"2012-11-01T02:47:51.685+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13488430","id":"13488430","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yx3zhu%40gmail.com","name":"yx3zhu@gmail.com","key":"yx3zhu@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yixue Zhu","active":true,"timeZone":"America/Los_Angeles"},"body":"Sijie,\nNP. I did not mean to discourage discussion.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yx3zhu%40gmail.com","name":"yx3zhu@gmail.com","key":"yx3zhu@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yixue Zhu","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-11-01T03:01:56.704+0000","updated":"2012-11-01T03:01:56.704+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13497285","id":"13497285","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"I think the root problem here is that the entrylog must be flushed monolithically, while the index files are flushed individually. This means to clear up space for the index files, we need to flush the whole entrylog, or else get the problem described. This, at its core, is the same problem. Basically, if all entries are interleaved, then it's impossible for a bookie to flush all entries associated with an index page, without flushing everything around them.\n\nI had been thinking of a solution for BOOKKEEPER-432, which is somewhat similar to Aniruddha's.\n\nBasically, we have a SlabAllocator, which has blocks of memory, maybe 8k in size. Each ledger has two slabs, the entrylog and index slab. Entries for a ledger are written to the entrylog slab, and then the offset is written to the index slab. \n\nFor a normal flush, we go through all ledgers, flush the entrylog slab (long sequential write), and then the index slab for each of them (using the offset from the entrylog flush to calculate the real offsets). \n\nFor a \"reclaim me some memory\", we can flush a single entrylog slab, and then the index slab. Of course, in implementation it would be more complex, but the basic idea is that, for a single ledger, the entrylog segment is independent until the point that it is on the disk.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-11-14T18:01:07.625+0000","updated":"2012-11-14T18:01:07.625+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13498139","id":"13498139","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yx3zhu%40gmail.com","name":"yx3zhu@gmail.com","key":"yx3zhu@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yixue Zhu","active":true,"timeZone":"America/Los_Angeles"},"body":"HI Ivan,\n\nI have a patch for BOOKKEEPER-432 rolled out internally, will post it shortly.\nAfter some benchmark, we decided not go with Aniruddha's approach.\n\nI will also creates a separate jira to eliminate/reduce on-disk index (my original proposal to BOOKKEEPER-432), as it hurt sync/write through put. Suppose there are thousands of ledgers per bookie, sync potentially needs to flush thousands of index files.\n  \n \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yx3zhu%40gmail.com","name":"yx3zhu@gmail.com","key":"yx3zhu@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yixue Zhu","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-11-15T17:06:00.513+0000","updated":"2012-11-15T17:06:00.513+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13498140","id":"13498140","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yx3zhu%40gmail.com","name":"yx3zhu@gmail.com","key":"yx3zhu@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yixue Zhu","active":true,"timeZone":"America/Los_Angeles"},"body":"Assign myself, as we can separate group commit with this jira.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yx3zhu%40gmail.com","name":"yx3zhu@gmail.com","key":"yx3zhu@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yixue Zhu","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-11-15T17:07:16.007+0000","updated":"2012-11-15T17:07:16.007+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13499013","id":"13499013","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"By BOOKKEEPER-432, do you mean the skiplist approach specifically? Or simply sorting before flushing? I have a flight next week, so I have a plan to try out the slab based approach. I'll let you know what I find.\n\nI was thinking about this JIRA again last night. I think it can be very easily be solved by a Semaphore, and removing the explicit flush in #grabCleanPage(). \n\nThe crux of the problem here is that we flush an index file before the entrylogger has flushed. The entrylogger should be flushing every 100ms. The flush mechanism is, flush the entrylog, and then flush all index page. If we cannot grab a free index, it means that index pages are not currently being flushed, i.e. the entrylog is flushing or we're waiting for the next flush (this is doubtful, if we're running out of pages, flushes are taking longer than 100ms, so once one flush ends another begins immediately).\n\nNow, it is only safe to grab a clean page once the entrylog is flushed. Once the entrylog has finished flushing, it will start flushing pages and freeing them. Therefore, to grab a clean page, we just need to wait for the current running flush to free one rather than flushing it outselves.\n\nWhat will happen from the client perspective is that messages will queue while we're waiting for a free page. But this is fine, as the system is over capacity, so queuing is inevitable.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-11-16T18:49:20.799+0000","updated":"2012-11-16T18:49:20.799+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13499254","id":"13499254","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yx3zhu%40gmail.com","name":"yx3zhu@gmail.com","key":"yx3zhu@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yixue Zhu","active":true,"timeZone":"America/Los_Angeles"},"body":"I was referring to first-cut of BOOKKEEPER-432, skipList is used as caching layer to sort entries, before they make it to entry log or index buffers.\nWe have run benchmark, it is better (read throughput) than the slab-based approach which Aniruddah experimented with. Some of the details of slab-based approach may be different though.\n\nWhen we experimented with thousands of active ledgers per hub, the sync thread takes quite a hit while flushing (thousands of files). I am not sure if it is good idea to peg the sync interval as 100ms. \n  ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yx3zhu%40gmail.com","name":"yx3zhu@gmail.com","key":"yx3zhu@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yixue Zhu","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-11-16T23:52:43.038+0000","updated":"2012-11-16T23:52:43.038+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13499391","id":"13499391","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"{quote}I am not sure if it is good idea to peg the sync interval as 100ms. {quote}\nDuring heavy load, the sync interval is irrelevant, it's syncing constantly.\n\nHow does the skipList approach do on write throughput/latency?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-11-17T10:58:09.301+0000","updated":"2012-11-17T10:58:09.301+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13501301","id":"13501301","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yx3zhu%40gmail.com","name":"yx3zhu@gmail.com","key":"yx3zhu@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yixue Zhu","active":true,"timeZone":"America/Los_Angeles"},"body":"The skipList approach does not impact write throughput, which will be tracked separately:\nThe write operation tends to compete with read on disk I/O. The interval should be larger by default, with adaptiveness built in.\nWe are going to eliminate/reduce index files write separately, to measure improvement on the work throughput. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=yx3zhu%40gmail.com","name":"yx3zhu@gmail.com","key":"yx3zhu@gmail.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Yixue Zhu","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-11-20T17:06:18.313+0000","updated":"2012-11-20T17:06:18.313+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13508301","id":"13508301","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"Implemented semaphore solution and added test case which triggers the problem without the flush. I haven't checked how it affects performance, but I think it will improve performance if anything, as a flush initialiated by the LedgerCacheImpl would interfere with an SyncThread flush, causing more disk head movement.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-12-02T16:46:42.478+0000","updated":"2012-12-02T16:46:42.478+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13508302","id":"13508302","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"Will test performance monday, when I have access to a dedicated disk.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-12-02T16:47:16.578+0000","updated":"2012-12-02T16:47:16.578+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13508765","id":"13508765","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"!perf.png!\n\nThe benchmark was run with bkvhbase benchmark [1]. Entry size was 100, each run was 5 minutes. For each number of ledgers I ran 3 times.\n\nGraph is quite bumpy, but it shows that, using the attached patch, performance is actually better for 1, 10 & 10000 ledgers, and a bit worse for 100 & 1000 ledgers. Previous tests have running against the complete bookie gives a max tpt of 108k[2] so all these numbers are much better. \n\n[1] https://github.com/ivankelly/bkvhbase\n[2] Running against a complete bookie means having to write to WAL first. This will slow us down, as we lose a degree of batching","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-12-03T14:36:12.388+0000","updated":"2012-12-03T14:36:12.388+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13509293","id":"13509293","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Paiva Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"I have a few comments and questions here:\n\n* I'm not sure what this is doing:\n\n{code}\n+                        cleanPages.tryAcquire(100, TimeUnit.MILLISECONDS);\n{code}\n\nif the 100 ms elapses and there has been no release, then it means that there is no clean page, no?\n\n* Should we rename BookieTest to something less general, like BookieLedgerIndexTest?\n* Check the javadoc for testIndexPageEviction(), it has typos.\n* There is this comment in this same test:\n\n{noformat}\n// don't start the bookie, this way sync thread wont run\n{noformat}\n\nbut the code does start the bookie right after. Is this correct? Is it referring to second occurrence of \"new Bookie\"? \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Paiva Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2012-12-03T22:59:25.627+0000","updated":"2012-12-03T22:59:25.627+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13509430","id":"13509430","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"{code}\n+                        cleanPages.tryAcquire(100, TimeUnit.MILLISECONDS);\n{code}\n\nShould this time interval align with sync thread time interval?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-12-04T02:02:59.489+0000","updated":"2012-12-04T02:02:59.489+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13509833","id":"13509833","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"Having looked at it again, the patch isn't safe. Theres no guarantee that the thread acquiring the semaphore will be the one which takes the freed page (it's guaranteed by being single threaded, but that should change). I'll need to take another look (it really should be as simple as using a semaphore, but LedgerCacheImpl is far more complex than it needs to be).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-12-04T16:25:07.571+0000","updated":"2012-12-04T16:25:07.571+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13530089","id":"13530089","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"New patch gets rid of the semaphore, and just uses notify()/wait(). The semaphore was unnecessary as LedgerCacheImpl does its own bookkeeping on which pages are clean and which are dirty.\n\nBasically, if there are no clean pages available, we wait for 100 ms, and then see if we can find any. It's kind of busy waiting, but the 100 ms will stop it going into a tight loop.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-12-12T16:43:04.002+0000","updated":"2012-12-12T16:43:04.002+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13530721","id":"13530721","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"Although this fix is quite simple and straightforward, I still could not be convinced using this solution. Because all writing requests are blocked until a flush is scheduled by SyncThread, so the latency heavily depends on the *flushInterval*. Also, it just resolve the problem force flushing ledger when grabbing a clean page. but if sync thread happens to flush the ledger before journal flushes, same problem occurred. \n\nthe right direction resolving this issue is that we should guarantee journal flushing before ledger index flushed. A possible way is to add a listener on Journal, when it flushed entires, it notified LedgerStorage which ledger is flushed. so LedgerStorage could know which ledger page it should flush, which page it should not flush.\n\nso the waiting time to grab a clean page is different for different solution, either depends on journal flushing latency or sync thread flush interval. journal flushing latency supposed to be very very low since it was used as a separated disk. but sync thread flush interval depends on user's setting and also it was a shared disk with read requests.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-12-13T06:19:20.596+0000","updated":"2012-12-13T06:21:43.001+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13530887","id":"13530887","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"\nI've uploaded a small tweak to the patch, but the basic principle stays the same. \n\nThe only time you will wait is if there are no clean pages available. There will only be no clean pages available if there is heavy write load on the server. In this case, the server can be in one of 2 states,  a) flushing the entrylog, and b) flushing the ledger. \n\nIf the server is in a) it is not safe to flush the page, the corresponding entry log entries may not have been flushed, and also if you did flush you'd be interrupting the sequential write.\n\nIf the server is in b) then ledger pages are already being flushed, you will only wait until a single ledger page has been marked as clean to try and acquire one again.\n\nYou could have a situation where the flushInterval is configured very high, and in that case it would be good to trigger a flush when capacity is low, but in that case, I think it would be better to trigger a full flush, entrylog and ledgers. I think taking Yixue's CacheCallback solution from BOOKKEEPER-432 would fix that (basically to take the changes from Bookie.java). However, I'm not sure this is necessary for 4.2.0. For 4.2.0 we need to prevent the flush occurring before the journal write. This patch does that. 4.3.0 will include major ledger storage changes anyhow, so it may be best to leave the CacheCallback until then.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-12-13T10:40:49.781+0000","updated":"2012-12-13T10:40:49.781+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13531304","id":"13531304","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"CacheCallback is required for a skip list solution in BOOKKEEPER-432, because you had to flush the buffered entries to make spaces for newly added entries. You could use CacheCallback here to notify sync thread to force a full flush or just force flush entry logger, after that it is safe to force flush an ledger to steal its ledger cache page. I think it would be better than a busy-waiting, although it still not so perfect.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-12-13T18:37:49.181+0000","updated":"2012-12-13T18:37:49.181+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13531319","id":"13531319","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"{quote}\nFor 4.2.0 we need to prevent the flush occurring before the journal write.\n{quote}\n\nOne more point, I don't think you solution prevent flushing occurring before journal write. You just prevent flushing a ledger index before flushing entry logger, since flushing ledger storage and flushing journal are different threads. ledger storage had no idea whether its entry is committed to journal or not. \n\nThe result of your fix is just guaranteeing an entry is persisted in ledger storage having its index entry and its data in entry log file, so we wouldn't got IOException when accessing it. It doesn't do as described.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-12-13T18:46:18.552+0000","updated":"2012-12-13T18:46:18.552+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13531540","id":"13531540","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"Actually, even requesting a flush of just the entrylog and then flushing the ledger page doesn't guarantee anything, as we don't use double buffering. It's possible that we could flush the entrylog, an entry is added to the ledger page, and then we flush the ledger page. Unless we put a big lock around everything which is ugly as hell and couples this stuff in a way I really dont like.\n\nHow about another approach (not sure if it's been suggested before), that if we find an entry in the index and then we can't find it in the entrylog, we throw an exception the same way as if we never found it in the index?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-12-13T21:37:46.229+0000","updated":"2012-12-13T21:37:46.229+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13532310","id":"13532310","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"Adding patch containing solution where we just throw the NoEntryException if we get an IOException from the entrylogger trying to read an offset that doesn't exist.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-12-14T14:07:42.862+0000","updated":"2012-12-14T14:07:42.862+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13532871","id":"13532871","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"-1 for this patch. since I don't like the idea converting IOException to NoEntryException, actually IOException might means a valid add entry but it corrupts due to disk bad sectors. also, NoEntryException is a critical exception that we used for the termination condition for ledger recovery (see BOOKKEEPER-365). It would be better not to equal IOException to NoEntryException.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-12-15T01:35:31.950+0000","updated":"2012-12-15T01:37:06.390+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13532874","id":"13532874","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"Attach a patch to flush entry logger before flushing ledger index. Although it is not the best and graceful way to resolve it, it is better than previous patches.\n\nThe patch also fixed Ivan's test case. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-12-15T01:40:10.541+0000","updated":"2012-12-15T01:40:10.541+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13532975","id":"13532975","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"a draft patch based on yixue and robin previous discussion's idea. It used a BitSet to track the sync status of its journal entries. only flush a dirty page when the BitSet is empty (all entries in this page are synced to journal).\n\nwhy BitSet? it is a bit trouble is although we adding entries in order, but this order is preserved by client not a bookie. the entries added in a bookie would be in any order due to retry and change ensemble logic. so it is not safe to use something like last entry id to track the progress of committing a ledger's entries to journal.\n\nAlso this patch improved ledger flushing to prevent updating a ledger page when flushing it. updating a ledger page when flushing, which would cause unsynced journal entry's index is flushed. this is an already existed bug in current ledger flush, which would cause this issue even not force flush ledger when grabbing a clean page.\n\nthis patch passed existed test cases. I haven't added test case for it. but I think we might need to cover more cases when adding tests, especially the issues I described in above paragraphs.\n\nBTW: there is an interesting project called hawtjournal. I followed its JournalListener idea in this patch.(https://github.com/fusesource/hawtjournal/blob/master/src/main/java/org/fusesource/hawtjournal/api/JournalListener.java)\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-12-15T09:56:03.832+0000","updated":"2012-12-15T10:09:22.371+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13532977","id":"13532977","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"As I described in the previous comment, currently flushing page is not safe: sync thread flushed a page, other thread adds offset in the page. sync thread brings uncommitted entry (neither journal nor entry log) to index page. Any final solution is required to fix this potential issue, otherwise it is an unsafe solution.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-12-15T10:05:37.491+0000","updated":"2012-12-15T10:05:37.491+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13532983","id":"13532983","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"Testing JIRA BOOKKEEPER-447\n\n\nPatch [BOOKKEEPER-447_bitset.diff|https://issues.apache.org/jira/secure/attachment/12561103/BOOKKEEPER-447_bitset.diff] downloaded at Sat Dec 15 10:01:27 UTC 2012\n\n----------------------------\n\n{color:green}+1 PATCH_APPLIES{color}\n{color:green}+1 CLEAN{color}\n{color:red}-1 RAW_PATCH_ANALYSIS{color}\n.    {color:green}+1{color} the patch does not introduce any @author tags\n.    {color:green}+1{color} the patch does not introduce any tabs\n.    {color:red}-1{color} the patch contains 3 line(s) with trailing spaces\n.    {color:green}+1{color} the patch does not introduce any line longer than 120\n.    {color:green}+1{color} the patch does adds/modifies 1 testcase(s)\n{color:green}+1 RAT{color}\n.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings\n{color:green}+1 JAVADOC{color}\n.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings\n{color:green}+1 COMPILE{color}\n.    {color:green}+1{color} HEAD compiles\n.    {color:green}+1{color} patch compiles\n.    {color:green}+1{color} the patch does not seem to introduce new javac warnings\n{color:green}+1 FINDBUGS{color}\n.    {color:green}+1{color} the patch does not seem to introduce new Findbugs warnings\n{color:red}-1 TESTS{color}\n.    Tests run: 499\n.    Tests failed: 0\n.    Tests errors: 4\n\n.    The patch failed the following testcases:\n\n.      \n\n{color:green}+1 DISTRO{color}\n.    {color:green}+1{color} distro tarball builds with the patch \n\n----------------------------\n{color:red}*-1 Overall result, please check the reported -1(s)*{color}\n\n\nThe full output of the test-patch run is available at\n\n.   https://builds.apache.org/job/bookkeeper-trunk-precommit-build/129/","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2012-12-15T10:22:33.064+0000","updated":"2012-12-15T10:22:33.064+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13532996","id":"13532996","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"I prefer the entrylog flush approach to the bitset approach, but I don't particularly like either as the both introduce a lot of coupling. At least with the entrylog approach, the coupling can be hidden behind the LedgerStorage interface and the Journal doesn't need to be touched. With the bitset approach you can't exercise the production LedgerStorage paths without having a journal running at the same time. The entrylog approach can be cleaned up to reduce coupling also, by adding EntryFlusher interface, I'll attach an patch for that.\n\nRegarding the IOException patch, to a client how is it any different if the bookie couldn't find a entry, or a bookie had an I/O error reading an entry? Does it change the behaviour the client will take?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-12-15T11:39:13.257+0000","updated":"2012-12-15T11:39:13.257+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13532998","id":"13532998","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"Actually, the entrylog approach won't work because of the lack of double buffering. Also, the bitset approach could lead to a situation where your spinning where pages are getting updated as fast as the journal is marking them as flushed.\n\nReally the solution for this is double buffering, which will come in with the skiplist approach.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-12-15T11:47:10.705+0000","updated":"2012-12-15T11:47:10.705+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13533040","id":"13533040","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"Going back to the IOException, we can even distinguish between disk corruptions and short reads at the EntryLogger level. EntryLogger#readEntry throws 4 IOExceptions apart from those which may be thrown from the file channel. 2 are for short data reads, and 2 are for the ledger id and entry id being incorrect. These could all be replaced with NoEntryException. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-12-15T14:51:50.499+0000","updated":"2012-12-15T14:51:50.499+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13533101","id":"13533101","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"Patch throws NoEntryException on short read from the entry log, IOException in all other cases. The entrylog doesn't prewrite, so this is safe.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-12-15T18:39:45.337+0000","updated":"2012-12-15T18:39:45.337+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13533571","id":"13533571","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"I still can't be convinced by NoEntryException solution. As NoEntryException is treated as the termination condition for ledger recovery. you might end up mixing IOException of a valid entry with NoSuchEntry. In honestly, it is difficult to say what caused short read.\n\nI am more comfortable on the solutions making data flushing only after journal committed, which is a more traditional way for a WAL implementation. Even using skipList solution, you still could not flush (maybe flush is not the best concept) skipList before journal commits, otherwise it still volatile WAL contract. If you worry about ledger storage and journal are too coupled in this way, why not use my first solution converting the order, committing journal first, adding entry to ledger storage later (https://issues.apache.org/jira/browse/BOOKKEEPER-447?focusedCommentId=13487755&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13487755)? I don't see any drawbacks of this solution so far for now and it would not make the code coupled.\n\nThese are just my preferences. I have to say that I am fine with NoSuchEntry solution. But I would keep my +1 until I am convinced NoSuchEntryException is a safe way. Would like to see others' opinions.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-12-16T23:46:45.552+0000","updated":"2012-12-16T23:46:45.552+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13533776","id":"13533776","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"{quote}I still can't be convinced by NoEntryException solution. As NoEntryException is treated as the termination condition for ledger recovery. you might end up mixing IOException of a valid entry with NoSuchEntry. In honestly, it is difficult to say what caused short read.{quote}\nIn the latest patch, there are two conditions in which IOException now throws NoEntryException instead. The first one is where you try to read the entry length, and you don't get a full integer. The second one is where you try to read the entry and the number of bytes read is shorter than the number requests. Both these are consistent with the case where the entry simply hasn't been added to the entrylog. In the case of a bad segment, or FS corruption, the FileChannel#read itself would fail with a IOException, so we're not masking those errors. If the data on disk is corrupt, the check for the ledger id & entry id will fail with IOException so we're not masking that either. Finally, if the data is corrupt, the digest check will pick this up on the client side.\n\n{quote}\nIf you worry about ledger storage and journal are too coupled in this way, why not use my first solution converting the order, committing journal first, adding entry to ledger storage later{quote}\nI actually like this solution most of all, because it hits the core issue. We should benchmark to ensure it doesn't hurt performance. Also, I'd make a few changes to the patch you provided. You only complete the client callback after adding to the ledger storage. I can see the reason for this (client will throttle if there's many outstanding ops), but this doesn't do anything for the case where many clients are writing a lot. It would be better to start queueing requests if the bookie is overwhelmed. This may cause some timeout errors, but this is good. It means the clients will start moving off the overwhelmed machine, to hopefully less loaded machines.\n\nAt the moment, the ledger storage acts as the throttler effectively. If adds are going too fast, it will start flushing ledgers and waiting for new pages to become available. Changing the order removes that, so perhaps we should actually put a limit on the size of Journal#queue. Also, I would make the write thread a plain thread and use a queue to push requests to it. It would avoid the construction of a lot of Runnable objects.\n\nI'm fine with either the exception based solution or the order swap solution. The first one is a smaller change, while the second could have larger side effects, so I'm leaning towards the first, but I'm willing to have my mind changed.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-12-17T09:42:42.947+0000","updated":"2012-12-17T09:42:42.947+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13534666","id":"13534666","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"{quote}\nThe second one is where you try to read the entry and the number of bytes read is shorter than the number requests.\n{quote}\n\nif the length field is corrupted with a larger number? maybe it is a corner case here. so If you are OK with allowing such case. I am fine with changing IOException to NoSuchEntryException, since it is indeed a minor change.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-12-18T05:35:33.377+0000","updated":"2012-12-18T05:35:33.377+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13534819","id":"13534819","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"I don't think there's much we can do about arbitrary bitflip failures like this except depend on the fact that we have a quorum which makes the probability of such a failure much much lower.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-12-18T10:57:44.313+0000","updated":"2012-12-18T10:57:44.313+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13535660","id":"13535660","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"I am fine with your explanation. but could you put some comments when throwing NoSuchEntry to list the concern about NoSuchEntry since it would be used as a condition for ledger recovery.\n\nbesides that, your test code seems not right.\n\n{code}\n+        for (int i = 1; i <= numLedgers; i++) {\n+            ByteBuffer packet = generateEntry(i, 1);\n+            b.addEntry(packet, new Bookie.NopWriteCallback(), null, \"passwd\".getBytes());\n+        }\n+\n{code}\n\n{code}\n+        for (int i = 0; i < numLedgers; i++) {\n+            try {\n+                b.readEntry(i, 1);\n+            } catch (Bookie.NoLedgerException nle) {\n+                // this is fine\n+            } catch (Bookie.NoEntryException nee) {\n+                // this is fine\n+            } catch (IOException ioe) {\n+                LOG.info(\"Shouldn't have received IOException\", ioe);\n+                fail(\"Shouldn't throw IOException, should say that entry is not found\");\n+            }\n+        }\n{code}\n\nyou added ledger starting from 1 to numLedgers, but read ledgers starting from 0.. besides that, you should not catch NoLedgerException. because from the test, it supposed to not throw NoLedgerException.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-12-19T05:31:13.239+0000","updated":"2012-12-19T05:31:13.239+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13536255","id":"13536255","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"Bookie.NoLedgerException can occur if the ledger never writes an index file. Note that this is different to BKException.NoSuchLedgerException, which is only triggered by the ledger not existing in ZK.\n\nI've addressed the remaining comments.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-12-19T18:32:41.186+0000","updated":"2012-12-19T18:32:41.186+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13536312","id":"13536312","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"Testing JIRA BOOKKEEPER-447\n\n\nPatch [0001-BOOKKEEPER-447-EntryLog-throws-NoSuchEntry-on-short-.patch|https://issues.apache.org/jira/secure/attachment/12561759/0001-BOOKKEEPER-447-EntryLog-throws-NoSuchEntry-on-short-.patch] downloaded at Wed Dec 19 18:41:25 UTC 2012\n\n----------------------------\n\n{color:green}+1 PATCH_APPLIES{color}\n{color:green}+1 CLEAN{color}\n{color:green}+1 RAW_PATCH_ANALYSIS{color}\n.    {color:green}+1{color} the patch does not introduce any @author tags\n.    {color:green}+1{color} the patch does not introduce any tabs\n.    {color:green}+1{color} the patch does not introduce any trailing spaces\n.    {color:green}+1{color} the patch does not introduce any line longer than 120\n.    {color:green}+1{color} the patch does adds/modifies 1 testcase(s)\n{color:green}+1 RAT{color}\n.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings\n{color:green}+1 JAVADOC{color}\n.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings\n{color:green}+1 COMPILE{color}\n.    {color:green}+1{color} HEAD compiles\n.    {color:green}+1{color} patch compiles\n.    {color:green}+1{color} the patch does not seem to introduce new javac warnings\n{color:green}+1 FINDBUGS{color}\n.    {color:green}+1{color} the patch does not seem to introduce new Findbugs warnings\n{color:green}+1 TESTS{color}\n.    Tests run: 506\n{color:green}+1 DISTRO{color}\n.    {color:green}+1{color} distro tarball builds with the patch \n\n----------------------------\n{color:green}*+1 Overall result, good!, no -1s*{color}\n\n\nThe full output of the test-patch run is available at\n\n.   https://builds.apache.org/job/bookkeeper-trunk-precommit-build/158/","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2012-12-19T19:02:58.631+0000","updated":"2012-12-19T19:02:58.631+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13536778","id":"13536778","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"{quote}\nBookie.NoLedgerException can occur if the ledger never writes an index file. Note that this is different to BKException.NoSuchLedgerException, which is only triggered by the ledger not existing in ZK.\n{quote}\n\nIn the test case, you have limited pageLimit to 1. so [1 - (numLedgers - 1)] should be already flushed to index, only the last ledger doesn't flush. so you checked 1 to (numLedgers - 1), there should be no NoLedgerException. It is better to make it explicit not just catch all.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-12-20T04:57:52.161+0000","updated":"2012-12-20T04:57:52.161+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13537100","id":"13537100","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"test now explicit checks that NoLedgerException only comes for final ledger.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2012-12-20T15:58:31.918+0000","updated":"2012-12-20T15:58:31.918+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13537143","id":"13537143","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"Testing JIRA BOOKKEEPER-447\n\n\nPatch [0001-BOOKKEEPER-447-EntryLog-throws-NoSuchEntry-on-short-.patch|https://issues.apache.org/jira/secure/attachment/12561910/0001-BOOKKEEPER-447-EntryLog-throws-NoSuchEntry-on-short-.patch] downloaded at Thu Dec 20 16:23:33 UTC 2012\n\n----------------------------\n\n{color:green}+1 PATCH_APPLIES{color}\n{color:green}+1 CLEAN{color}\n{color:green}+1 RAW_PATCH_ANALYSIS{color}\n.    {color:green}+1{color} the patch does not introduce any @author tags\n.    {color:green}+1{color} the patch does not introduce any tabs\n.    {color:green}+1{color} the patch does not introduce any trailing spaces\n.    {color:green}+1{color} the patch does not introduce any line longer than 120\n.    {color:green}+1{color} the patch does adds/modifies 1 testcase(s)\n{color:green}+1 RAT{color}\n.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings\n{color:green}+1 JAVADOC{color}\n.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings\n{color:green}+1 COMPILE{color}\n.    {color:green}+1{color} HEAD compiles\n.    {color:green}+1{color} patch compiles\n.    {color:green}+1{color} the patch does not seem to introduce new javac warnings\n{color:green}+1 FINDBUGS{color}\n.    {color:green}+1{color} the patch does not seem to introduce new Findbugs warnings\n{color:green}+1 TESTS{color}\n.    Tests run: 506\n{color:green}+1 DISTRO{color}\n.    {color:green}+1{color} distro tarball builds with the patch \n\n----------------------------\n{color:green}*+1 Overall result, good!, no -1s*{color}\n\n\nThe full output of the test-patch run is available at\n\n.   https://builds.apache.org/job/bookkeeper-trunk-precommit-build/162/","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2012-12-20T16:45:01.552+0000","updated":"2012-12-20T16:45:01.552+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13539191","id":"13539191","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"lgtm +1.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-12-24T05:07:51.645+0000","updated":"2012-12-24T05:07:51.645+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13539194","id":"13539194","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"committed as r1425588. thanks Ivan. thanks all guys involving the discussion. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-12-24T05:23:50.982+0000","updated":"2012-12-24T05:23:50.982+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13539195","id":"13539195","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"attach the new patch resolving the confliction when committing.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2012-12-24T05:26:22.486+0000","updated":"2012-12-24T05:26:22.486+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12613984/comment/13539226","id":"13539226","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"Integrated in bookkeeper-trunk2 #9 (See [https://builds.apache.org/job/bookkeeper-trunk2/9/])\n    BOOKKEEPER-447: Bookie can fail to recover if index pages flushed before ledger flush acknowledged (ivank via sijie) (Revision 1425588)\n\n     Result = SUCCESS\nsijie : \nFiles : \n* /zookeeper/bookkeeper/trunk/CHANGES.txt\n* /zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/Bookie.java\n* /zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/bookie/EntryLogger.java\n* /zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/bookie/LedgerCacheTest.java\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2012-12-24T09:40:22.696+0000","updated":"2012-12-24T09:40:22.696+0000"}],"maxResults":64,"total":64,"startAt":0},"customfield_12311820":"0|i0daaf:","customfield_12314139":null}}

