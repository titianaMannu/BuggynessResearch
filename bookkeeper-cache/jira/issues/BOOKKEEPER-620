{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12651610","self":"https://issues.apache.org/jira/rest/api/2/issue/12651610","key":"BOOKKEEPER-620","fields":{"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12324601","id":"12324601","name":"4.2.2","archived":false,"released":true,"releaseDate":"2013-10-10"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12323267","id":"12323267","description":"Release 4.3.0","name":"4.3.0","archived":false,"released":true,"releaseDate":"2014-02-02"}],"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12312323":null,"customfield_12310420":"331936","customfield_12312320":null,"customfield_12312321":null,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12312331":null,"customfield_12312332":null,"aggregatetimeoriginalestimate":null,"timeestimate":null,"customfield_12312330":null,"versions":[],"customfield_12311120":null,"customfield_12313826":null,"issuelinks":[{"id":"12373484","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12373484","type":{"id":"12310050","name":"Regression","inward":"is broken by","outward":"breaks","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/12310050"},"outwardIssue":{"id":"12662079","key":"BOOKKEEPER-668","self":"https://issues.apache.org/jira/rest/api/2/issue/12662079","fields":{"summary":"Race between PerChannelBookieClient#channelDisconnected() and disconnect() calls can make clients hang while add/reading entries in case of multiple bookie failures","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"customfield_12312339":null,"customfield_12313825":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"customfield_12312337":null,"customfield_12313823":null,"customfield_12312338":null,"customfield_12311920":null,"customfield_12313822":null,"customfield_12312335":null,"customfield_12313821":null,"customfield_12312336":null,"customfield_12313820":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/5","description":"A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/resolved.png","name":"Resolved","id":"5","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12314393","id":"12314393","name":"bookkeeper-client","description":"Bookkeeper client."}],"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"332265","customfield_12312823":null,"creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"aggregateprogress":{"progress":0,"total":0},"customfield_12313520":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"customfield_12313924":null,"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/BOOKKEEPER-620/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12313920":null,"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"customfield_12314020":"{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@8c12f4f[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5d11d641[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@372b907c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@645beb06[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@377fc93b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@a06c128[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@61c50864[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5afdcc81[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1382f0f4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2f316c2d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@667ec787[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@52d3860d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}","customfield_12314141":null,"customfield_12314140":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12311293","id":"12311293","key":"BOOKKEEPER","name":"Bookkeeper","projectTypeKey":"software","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12311293&avatarId=10011","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12311293&avatarId=10011","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12311293&avatarId=10011","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12311293&avatarId=10011"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/14780","id":"14780","description":"BookKeeper","name":"BookKeeper"}},"aggregatetimespent":null,"customfield_12312520":null,"customfield_12314422":null,"customfield_12314421":null,"customfield_12314146":null,"customfield_12314420":null,"customfield_12314145":null,"customfield_12314144":null,"customfield_12314143":null,"resolutiondate":"2013-06-28T16:00:01.564+0000","workratio":-1,"customfield_12312923":null,"customfield_12312920":null,"customfield_12312921":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/BOOKKEEPER-620/watchers","watchCount":4,"isWatching":false},"created":"2013-06-07T00:58:41.081+0000","updated":"2013-08-06T17:25:30.654+0000","timeoriginalestimate":null,"description":"channel & state are not synchronized in PerChannelBookieClient#closeInternal. so it might cause state is set to CONNECTED but the netty channel is closed by mistake in closeInternal.","customfield_10010":null,"timetracking":{},"customfield_12314523":null,"customfield_12314127":null,"customfield_12314522":null,"customfield_12314126":null,"customfield_12314521":null,"customfield_12314125":null,"customfield_12314520":null,"customfield_12314124":null,"customfield_12312340":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12589765","id":"12589765","filename":"0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2013-06-26T15:49:50.033+0000","size":14005,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12589765/0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12589600","id":"12589600","filename":"0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2013-06-25T12:49:11.049+0000","size":15937,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12589600/0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12588322","id":"12588322","filename":"0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2013-06-18T10:20:33.190+0000","size":15624,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12588322/0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12588132","id":"12588132","filename":"0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2013-06-17T12:18:47.312+0000","size":15554,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12588132/0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12587843","id":"12587843","filename":"0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2013-06-14T17:32:29.148+0000","size":14654,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12587843/0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12587059","id":"12587059","filename":"0002-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2013-06-10T13:17:18.569+0000","size":10630,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12587059/0002-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12586684","id":"12586684","filename":"BOOKKEEPER-620.diff","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2013-06-07T09:06:50.161+0000","size":1482,"mimeType":"text/x-patch","content":"https://issues.apache.org/jira/secure/attachment/12586684/BOOKKEEPER-620.diff"}],"customfield_12314123":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12314122":null,"customfield_12314121":null,"customfield_12314120":null,"customfield_12314129":null,"customfield_12314524":null,"customfield_12314128":null,"summary":"PerChannelBookieClient race during channel disconnect","customfield_12314130":null,"customfield_12310291":null,"customfield_12310290":null,"customfield_12311024":null,"customfield_12314138":null,"customfield_12314137":null,"environment":null,"customfield_12314136":null,"customfield_12314135":null,"customfield_12311020":null,"customfield_12314134":null,"duedate":null,"customfield_12314132":null,"customfield_12314131":null,"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12651610/comment/13679486","id":"13679486","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"The race is worse than the description describes. If connect, close and connect are called in the wrong order, it can cause a NPE on the readTimeoutTimer. It can also leak a Channel, as if state is set to CONNECTING, then DISCONNECTED, another connect can start and two channels are created. The attached patch fixes this, and adds a test which should trigger this.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2013-06-10T13:17:18.572+0000","updated":"2013-06-10T13:17:18.572+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12651610/comment/13679543","id":"13679543","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"Testing JIRA BOOKKEEPER-620\n\n\nPatch [0002-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch|https://issues.apache.org/jira/secure/attachment/12587059/0002-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch] downloaded at Mon Jun 10 14:02:05 UTC 2013\n\n----------------------------\n\n{color:green}+1 PATCH_APPLIES{color}\n{color:green}+1 CLEAN{color}\n{color:green}+1 RAW_PATCH_ANALYSIS{color}\n.    {color:green}+1{color} the patch does not introduce any @author tags\n.    {color:green}+1{color} the patch does not introduce any tabs\n.    {color:green}+1{color} the patch does not introduce any trailing spaces\n.    {color:green}+1{color} the patch does not introduce any line longer than 120\n.    {color:green}+1{color} the patch does adds/modifies 1 testcase(s)\n{color:green}+1 RAT{color}\n.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings\n{color:green}+1 JAVADOC{color}\n.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings\n{color:green}+1 COMPILE{color}\n.    {color:green}+1{color} HEAD compiles\n.    {color:green}+1{color} patch compiles\n.    {color:green}+1{color} the patch does not seem to introduce new javac warnings\n{color:green}+1 FINDBUGS{color}\n.    {color:green}+1{color} the patch does not seem to introduce new Findbugs warnings\n{color:red}-1 TESTS{color} - patch does not compile, cannot run testcases\n{color:green}+1 DISTRO{color}\n.    {color:green}+1{color} distro tarball builds with the patch \n\n----------------------------\n{color:red}*-1 Overall result, please check the reported -1(s)*{color}\n\n\nThe full output of the test-patch run is available at\n\n.   https://builds.apache.org/job/bookkeeper-trunk-precommit-build/354/","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2013-06-10T14:37:12.399+0000","updated":"2013-06-10T14:37:12.399+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12651610/comment/13680101","id":"13680101","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"yes. the description is simple. we are trying to generate the patch. but you already eager to generate a patch, that's fine. several comments as below:\n\n1. remove the LOG.info(\"Already connected with another channel\" or change it to DEBUG. it might generate lots of useless statements.\n2. in channelDisconnected, we'd better to check whether the current channel in PCBC client is the right channel disconnected in (ChannelEvent) before setting state to DISCONNECTED state. And it is better to close channel in ChannelEvent not channel in PCBC. otherwise, it would enter a dead loop: new estabilished channels are closed by previous channelDisconnected events.\n3. it would be better to check ChannelClosedException when writing request failure and set the channel to DISCONNECTED.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-06-11T00:39:38.202+0000","updated":"2013-06-11T00:40:12.682+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12651610/comment/13681312","id":"13681312","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"Ah sorry, I didn't know you guys were working on a patch. I wanted to get this into 4.2.2 so I just dived right in. As it is, I think my patch needs some more work, especially around the channelDisconnected part, as I'm not confident there still aren't races there. Do you guys have a different solution?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2013-06-12T15:01:12.549+0000","updated":"2013-06-12T15:01:12.549+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12651610/comment/13681429","id":"13681429","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"[~ikelly] your patch already addressed most of part. you possibly need to address my previous comments. I would point you to our changes if it is pushed to our branch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-06-12T17:45:27.824+0000","updated":"2013-06-12T17:45:27.824+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12651610/comment/13683568","id":"13683568","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"New patch addresses comments except for 3. If there's an I/O error in a netty socket, the channelDisconnected callback is called, so setting the channel to disconnected on write request failures is unnecessary. Also, I'd like to minimise the number of the place we modify state to make things simpler.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2013-06-14T17:34:11.097+0000","updated":"2013-06-14T17:34:11.097+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12651610/comment/13683646","id":"13683646","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"Testing JIRA BOOKKEEPER-620\n\n\nPatch [0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch|https://issues.apache.org/jira/secure/attachment/12587843/0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch] downloaded at Fri Jun 14 18:11:40 UTC 2013\n\n----------------------------\n\n{color:green}+1 PATCH_APPLIES{color}\n{color:green}+1 CLEAN{color}\n{color:green}+1 RAW_PATCH_ANALYSIS{color}\n.    {color:green}+1{color} the patch does not introduce any @author tags\n.    {color:green}+1{color} the patch does not introduce any tabs\n.    {color:green}+1{color} the patch does not introduce any trailing spaces\n.    {color:green}+1{color} the patch does not introduce any line longer than 120\n.    {color:green}+1{color} the patch does adds/modifies 1 testcase(s)\n{color:green}+1 RAT{color}\n.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings\n{color:green}+1 JAVADOC{color}\n.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings\n{color:green}+1 COMPILE{color}\n.    {color:green}+1{color} HEAD compiles\n.    {color:green}+1{color} patch compiles\n.    {color:green}+1{color} the patch does not seem to introduce new javac warnings\n{color:green}+1 FINDBUGS{color}\n.    {color:green}+1{color} the patch does not seem to introduce new Findbugs warnings\n{color:green}+1 TESTS{color}\n.    Tests run: 849\n{color:green}+1 DISTRO{color}\n.    {color:green}+1{color} distro tarball builds with the patch \n\n----------------------------\n{color:green}*+1 Overall result, good!, no -1s*{color}\n\n\nThe full output of the test-patch run is available at\n\n.   https://builds.apache.org/job/bookkeeper-trunk-precommit-build/361/","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2013-06-14T18:37:43.815+0000","updated":"2013-06-14T18:37:43.815+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12651610/comment/13683830","id":"13683830","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"Testing JIRA BOOKKEEPER-620\n\n\nPatch [0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch|https://issues.apache.org/jira/secure/attachment/12587843/0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch] downloaded at Fri Jun 14 21:21:38 UTC 2013\n\n----------------------------\n\n{color:green}+1 PATCH_APPLIES{color}\n{color:green}+1 CLEAN{color}\n{color:green}+1 RAW_PATCH_ANALYSIS{color}\n.    {color:green}+1{color} the patch does not introduce any @author tags\n.    {color:green}+1{color} the patch does not introduce any tabs\n.    {color:green}+1{color} the patch does not introduce any trailing spaces\n.    {color:green}+1{color} the patch does not introduce any line longer than 120\n.    {color:green}+1{color} the patch does adds/modifies 1 testcase(s)\n{color:green}+1 RAT{color}\n.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings\n{color:green}+1 JAVADOC{color}\n.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings\n{color:green}+1 COMPILE{color}\n.    {color:green}+1{color} HEAD compiles\n.    {color:green}+1{color} patch compiles\n.    {color:green}+1{color} the patch does not seem to introduce new javac warnings\n{color:green}+1 FINDBUGS{color}\n.    {color:green}+1{color} the patch does not seem to introduce new Findbugs warnings\n{color:green}+1 TESTS{color}\n.    Tests run: 849\n{color:green}+1 DISTRO{color}\n.    {color:green}+1{color} distro tarball builds with the patch \n\n----------------------------\n{color:green}*+1 Overall result, good!, no -1s*{color}\n\n\nThe full output of the test-patch run is available at\n\n.   https://builds.apache.org/job/bookkeeper-trunk-precommit-build/363/","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2013-06-14T21:47:52.283+0000","updated":"2013-06-14T21:47:52.283+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12651610/comment/13684212","id":"13684212","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Paiva Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"Patch looks good to me. A couple of comments:\n\n- have you really meant to say BOOKKEEPER-5 in the test case in the patch?\n- I think you could have fixed a number of iterations and coordinated with CountDownLatch objs instead of relying on a 5s sleep.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Paiva Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2013-06-15T14:15:34.487+0000","updated":"2013-06-15T14:15:34.487+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12651610/comment/13685490","id":"13685490","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"New patch addresses flavio's comments.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2013-06-17T12:18:47.315+0000","updated":"2013-06-17T12:18:47.315+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12651610/comment/13685503","id":"13685503","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Paiva Junqueira","active":true,"timeZone":"Europe/Berlin"},"body":"Thanks, Ivan. I was actually thinking that connectIfNeededAndDoOp() and disconnect() should be executed in lockstep, otherwise we could have a number of calls for one while having just a single call for the other unnecessarily. \n\nThe patch looks good, I just would like to understand if what I'm proposing is incorrect. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fpj","name":"fpj","key":"fpj","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fpj&avatarId=16030","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fpj&avatarId=16030","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fpj&avatarId=16030","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fpj&avatarId=16030"},"displayName":"Flavio Paiva Junqueira","active":true,"timeZone":"Europe/Berlin"},"created":"2013-06-17T12:38:14.585+0000","updated":"2013-06-17T12:38:14.585+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12651610/comment/13685511","id":"13685511","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"Testing JIRA BOOKKEEPER-620\n\n\nPatch [0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch|https://issues.apache.org/jira/secure/attachment/12588132/0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch] downloaded at Mon Jun 17 12:21:22 UTC 2013\n\n----------------------------\n\n{color:green}+1 PATCH_APPLIES{color}\n{color:green}+1 CLEAN{color}\n{color:green}+1 RAW_PATCH_ANALYSIS{color}\n.    {color:green}+1{color} the patch does not introduce any @author tags\n.    {color:green}+1{color} the patch does not introduce any tabs\n.    {color:green}+1{color} the patch does not introduce any trailing spaces\n.    {color:green}+1{color} the patch does not introduce any line longer than 120\n.    {color:green}+1{color} the patch does adds/modifies 1 testcase(s)\n{color:green}+1 RAT{color}\n.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings\n{color:green}+1 JAVADOC{color}\n.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings\n{color:green}+1 COMPILE{color}\n.    {color:green}+1{color} HEAD compiles\n.    {color:green}+1{color} patch compiles\n.    {color:green}+1{color} the patch does not seem to introduce new javac warnings\n{color:green}+1 FINDBUGS{color}\n.    {color:green}+1{color} the patch does not seem to introduce new Findbugs warnings\n{color:green}+1 TESTS{color}\n.    Tests run: 849\n{color:green}+1 DISTRO{color}\n.    {color:green}+1{color} distro tarball builds with the patch \n\n----------------------------\n{color:green}*+1 Overall result, good!, no -1s*{color}\n\n\nThe full output of the test-patch run is available at\n\n.   https://builds.apache.org/job/bookkeeper-trunk-precommit-build/372/","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2013-06-17T12:47:42.043+0000","updated":"2013-06-17T12:47:42.043+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12651610/comment/13685548","id":"13685548","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"Putting them in lockstep would mean they're not interleaved. There's enough iterations to ensure they overlap. Also, I don't start running the connects until the disconnect thread has started.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2013-06-17T13:27:41.295+0000","updated":"2013-06-17T13:27:41.295+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12651610/comment/13686217","id":"13686217","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"> LOG.info(\"Successfully connected to bookie: {}\", addr);\n\nadd channel in this statement, and move this line down after the channel is assigned.\n\n> LOG.warn(\"Closed before connection completed, clean up: {}, current state {}\",\n+                                  addr, state);\n\nlog channel object instead of addr, which channel give more information than addr for debugging.\n\n> LOG.debug(\"Already connected with another channel, so close the new channel \");\n\nlog existed channel and new connected channel, otherwise this log statement didn't give any useful information\n\n> LOG.error(\"Could not connect to bookie: {}, current state {}\", addr, state);\n\nsame thing, log channel rather than addr.\n\n\n{code}\n     private void closeInternal(boolean permanent) {\n+        ChannelFuture closeFuture = null;\n         synchronized (this) {\n             if (permanent) {\n                 state = ConnectionState.CLOSED;\n             } else if (state != ConnectionState.CLOSED) {\n                 state = ConnectionState.DISCONNECTED;\n             }\n+            if (channel != null) {\n+                closeFuture = closeChannel(channel);\n+                channel = null;\n+            }\n         }\n-        if (channel != null) {\n-            channel.close().awaitUninterruptibly();\n+        if (closeFuture != null) {\n+            closeFuture.awaitUninterruptibly();\n         }\n-        if (readTimeoutTimer != null) {\n-            readTimeoutTimer.stop();\n-            readTimeoutTimer = null;\n+    }\n{code}\n\nI would suggest moving close out side of synchronization, just assigned the channel to a local variable and close this local variable out side of the synchronization block, we observed a deadlock on netty channel buffer.\n\n{code}\n     public void channelDisconnected(ChannelHandlerContext ctx, ChannelStateEvent e) throws Exception {\n         LOG.info(\"Disconnected from bookie: \" + addr);\n-        errorOutOutstandingEntries();\n-        Channel c = this.channel;\n+        Channel c = ctx.getChannel();\n         if (c != null) {\n-            c.close();\n+            closeChannel(c);\n         }\n+\n+        Set<CompletionKey> addsToError = Collections.emptySet();\n+        Set<CompletionKey> readsToError = Collections.emptySet();\n         synchronized (this) {\n-            if (state != ConnectionState.CLOSED) {\n+            if (this.channel == c\n+                && state != ConnectionState.CLOSED) {\n                 state = ConnectionState.DISCONNECTED;\n             }\n+            if (state == ConnectionState.CLOSED\n+                || state == ConnectionState.DISCONNECTED) {\n+                addsToError = addCompletions.keySet();\n+                readsToError = readCompletions.keySet();\n+            }\n+        }\n+        for (CompletionKey key : addsToError) {\n+            errorOutAddKey(key);\n+        }\n+        for (CompletionKey key : readsToError) {\n+            errorOutReadKey(key);\n         }\n{code}\n1) in general, it would be better to keep comments when you moved around the code.\n2) it would be better to error out entries before set state back to DISCONNECTED. since after the channel is set to DISCONNECTED, the client would begin sending requests to connecting. you might error ongoing requests.\n\nso you could do conditional check first, call errorOutOutstandingEntries based on conditional checking and set the state back DISCONNECTED after error out entries.\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-06-18T00:12:03.861+0000","updated":"2013-06-18T00:14:42.541+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12651610/comment/13686218","id":"13686218","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"cancel the patch until comments addressed.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-06-18T00:12:32.062+0000","updated":"2013-06-18T00:12:32.062+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12651610/comment/13686555","id":"13686555","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"New patch addresses all comments except the channelDisconnected one.\n\n{quote}\n1) in general, it would be better to keep comments when you moved around the code.\n{quote}\nBoth comment blocks on #errorOutOutstandingEntries() are redundant after the move. The method doc talks about classes that were removed from the codebase before I started working on it.\n\n{quote}\n2) it would be better to error out entries before set state back to DISCONNECTED. since after the channel is set to DISCONNECTED, the client would begin sending requests to connecting. you might error ongoing requests.\n{quote}\nIf we error out outstanding requests before setting state to DISCONNECTED, there is a time period between the erroring and the synchronization block where more requests could be added. These would not be errored. We can't error out inside the synchronization block because it could lead to a deadlock if the request was retried. As it is now, it won't touch ongoing requests, as we only take the set of requests to error at the same time as setting the state to disconnected.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2013-06-18T10:27:44.994+0000","updated":"2013-06-18T10:27:44.994+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12651610/comment/13686569","id":"13686569","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"Testing JIRA BOOKKEEPER-620\n\n\nPatch [0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch|https://issues.apache.org/jira/secure/attachment/12588322/0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch] downloaded at Tue Jun 18 10:21:30 UTC 2013\n\n----------------------------\n\n{color:green}+1 PATCH_APPLIES{color}\n{color:green}+1 CLEAN{color}\n{color:green}+1 RAW_PATCH_ANALYSIS{color}\n.    {color:green}+1{color} the patch does not introduce any @author tags\n.    {color:green}+1{color} the patch does not introduce any tabs\n.    {color:green}+1{color} the patch does not introduce any trailing spaces\n.    {color:green}+1{color} the patch does not introduce any line longer than 120\n.    {color:green}+1{color} the patch does adds/modifies 1 testcase(s)\n{color:green}+1 RAT{color}\n.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings\n{color:green}+1 JAVADOC{color}\n.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings\n{color:green}+1 COMPILE{color}\n.    {color:green}+1{color} HEAD compiles\n.    {color:green}+1{color} patch compiles\n.    {color:green}+1{color} the patch does not seem to introduce new javac warnings\n{color:green}+1 FINDBUGS{color}\n.    {color:green}+1{color} the patch does not seem to introduce new Findbugs warnings\n{color:green}+1 TESTS{color}\n.    Tests run: 849\n{color:green}+1 DISTRO{color}\n.    {color:green}+1{color} distro tarball builds with the patch \n\n----------------------------\n{color:green}*+1 Overall result, good!, no -1s*{color}\n\n\nThe full output of the test-patch run is available at\n\n.   https://builds.apache.org/job/bookkeeper-trunk-precommit-build/374/","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2013-06-18T10:47:35.616+0000","updated":"2013-06-18T10:47:35.616+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12651610/comment/13688825","id":"13688825","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"{quote}\nIf we error out outstanding requests before setting state to DISCONNECTED, there is a time period between the erroring and the synchronization block where more requests could be added. \n{quote}\n\nthat's not true. new requests would be failed directly since the channel is closed, writing a request to a closed request would error out the request directly. error outing a request would trigger replacing a new bookie. that is not a big deal.\n\nbut if you set the channel to DISCONNECTED first, you would error out outgoing requests. that is my concern.\n\n{quote}\nBoth comment blocks on #errorOutOutstandingEntries() are redundant after the move. The method doc talks about classes that were removed from the codebase before I started working on it\n{quote}\n\n{quote}\n-        // DO NOT rewrite these using Map.Entry iterations. We want to iterate\n-        // on keys and see if we are successfully able to remove the key from\n-        // the map. Because the add and the read methods also do the same thing\n-        // in case they get a write failure on the socket. The one who\n-        // successfully removes the key from the map is the one responsible for\n-        // calling the application callback.\n{quote}\n\nyou just moved around the code, which doesn't change the behavior how we iterate the keys. the comment is about iterating keys. so I don't think it is redundant as you said.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-06-20T03:08:29.173+0000","updated":"2013-06-20T03:08:29.173+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12651610/comment/13690507","id":"13690507","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"{quote}that's not true. new requests would be failed directly since the channel is closed, writing a request to a closed request would error out the request directly. error outing a request would trigger replacing a new bookie. that is not a big deal.{quote}\nI this, is true, I hadn't thought of that.\n\n{quote}\nbut if you set the channel to DISCONNECTED first, you would error out outgoing requests. that is my concern.\n{quote}\nDo you mean requests which were made after state was set to DISCONNECTED but before I error out the keys? This cannot happen, as I only error out the keys which are in the completions sets when set the state to DISCONNECTED. Anything added afterwards, once the synchronize block is exited, is fine. This also relates to the comment. Since I'm selecting the keys in the synchronization block before erroring them out outside the block, it's not possible to do it using a foreach style loop, which is what the comment is warning against.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2013-06-21T17:39:14.401+0000","updated":"2013-06-21T17:39:14.401+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12651610/comment/13692682","id":"13692682","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"{quote}\nDo you mean requests which were made after state was set to DISCONNECTED but before I error out the keys?\n{quote}\n\nyes. this is the case I mentioned.\n\n{quote}\nThis cannot happen, as I only error out the keys which are in the completions sets when set the state to DISCONNECTED. Anything added afterwards, once the synchronize block is exited, is fine. \n{quote}\n\nI don't understand why you say this couldn't happen. Map#keySet just returned a view of the keys, which is backed by the underlying map, the changes to underlying map would affect the set view and vice-versa.\n\nhttp://docs.oracle.com/javase/6/docs/api/java/util/concurrent/ConcurrentHashMap.html#keySet%28%29","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-06-25T02:00:58.221+0000","updated":"2013-06-25T02:00:58.221+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12651610/comment/13692993","id":"13692993","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"{quote}I don't understand why you say this couldn't happen. Map#keySet just returned a view of the keys, which is backed by the underlying map, the changes to underlying map would affect the set view and vice-versa{quote}\nYou're right. I assumed wrongly that keySet() constructed a new set. I've updated the patch to use guava's ImmutableSet to store the keys to be errored out. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2013-06-25T12:58:07.756+0000","updated":"2013-06-25T12:58:07.756+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12651610/comment/13693085","id":"13693085","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"Testing JIRA BOOKKEEPER-620\n\n\nPatch [0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch|https://issues.apache.org/jira/secure/attachment/12589600/0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch] downloaded at Tue Jun 25 14:21:40 UTC 2013\n\n----------------------------\n\n{color:green}+1 PATCH_APPLIES{color}\n{color:green}+1 CLEAN{color}\n{color:green}+1 RAW_PATCH_ANALYSIS{color}\n.    {color:green}+1{color} the patch does not introduce any @author tags\n.    {color:green}+1{color} the patch does not introduce any tabs\n.    {color:green}+1{color} the patch does not introduce any trailing spaces\n.    {color:green}+1{color} the patch does not introduce any line longer than 120\n.    {color:green}+1{color} the patch does adds/modifies 1 testcase(s)\n{color:green}+1 RAT{color}\n.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings\n{color:green}+1 JAVADOC{color}\n.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings\n{color:green}+1 COMPILE{color}\n.    {color:green}+1{color} HEAD compiles\n.    {color:green}+1{color} patch compiles\n.    {color:green}+1{color} the patch does not seem to introduce new javac warnings\n{color:green}+1 FINDBUGS{color}\n.    {color:green}+1{color} the patch does not seem to introduce new Findbugs warnings\n{color:green}+1 TESTS{color}\n.    Tests run: 851\n{color:green}+1 DISTRO{color}\n.    {color:green}+1{color} distro tarball builds with the patch \n\n----------------------------\n{color:green}*+1 Overall result, good!, no -1s*{color}\n\n\nThe full output of the test-patch run is available at\n\n.   https://builds.apache.org/job/bookkeeper-trunk-precommit-build/386/","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2013-06-25T14:47:55.572+0000","updated":"2013-06-25T14:47:55.572+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12651610/comment/13693350","id":"13693350","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"{code}\nYou're right. I assumed wrongly that keySet() constructed a new set. I've updated the patch to use guava's ImmutableSet to store the keys to be errored out. \n{code}\n\nwhere the QPS is high, there will be lots of pending requests, copying keys would introduce more memory. as my comments before, there is no issue in original sequence (error out entries first and set DISCONNECTED later), why change it?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-06-25T20:25:57.691+0000","updated":"2013-06-25T20:25:57.691+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12651610/comment/13694038","id":"13694038","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"the original sequence is harder to reason about, because you have to rely on actions taking place elsewhere in the code for correct behaviour. I thought the way I changed it made the correctness easier to verify by just looking at the channelDisconnect(). The selection of the ops to error out occurs inside the synchronization block, so you know that you are only errorring those that were pending when the state change occurred.\n\nI'm not that hung up on it, though. I've reverted that part of the patch to the original code (adding a this.channel == ctx.getChannel() check though).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2013-06-26T15:54:16.579+0000","updated":"2013-06-26T15:54:16.579+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12651610/comment/13694050","id":"13694050","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"body":"Testing JIRA BOOKKEEPER-620\n\n\nPatch [0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch|https://issues.apache.org/jira/secure/attachment/12589765/0001-BOOKKEEPER-620-PerChannelBookieClient-race-during-ch.patch] downloaded at Wed Jun 26 15:51:21 UTC 2013\n\n----------------------------\n\n{color:green}+1 PATCH_APPLIES{color}\n{color:green}+1 CLEAN{color}\n{color:green}+1 RAW_PATCH_ANALYSIS{color}\n.    {color:green}+1{color} the patch does not introduce any @author tags\n.    {color:green}+1{color} the patch does not introduce any tabs\n.    {color:green}+1{color} the patch does not introduce any trailing spaces\n.    {color:green}+1{color} the patch does not introduce any line longer than 120\n.    {color:green}+1{color} the patch does adds/modifies 1 testcase(s)\n{color:green}+1 RAT{color}\n.    {color:green}+1{color} the patch does not seem to introduce new RAT warnings\n{color:green}+1 JAVADOC{color}\n.    {color:green}+1{color} the patch does not seem to introduce new Javadoc warnings\n{color:green}+1 COMPILE{color}\n.    {color:green}+1{color} HEAD compiles\n.    {color:green}+1{color} patch compiles\n.    {color:green}+1{color} the patch does not seem to introduce new javac warnings\n{color:green}+1 FINDBUGS{color}\n.    {color:green}+1{color} the patch does not seem to introduce new Findbugs warnings\n{color:green}+1 TESTS{color}\n.    Tests run: 853\n{color:green}+1 DISTRO{color}\n.    {color:green}+1{color} distro tarball builds with the patch \n\n----------------------------\n{color:green}*+1 Overall result, good!, no -1s*{color}\n\n\nThe full output of the test-patch run is available at\n\n.   https://builds.apache.org/job/bookkeeper-trunk-precommit-build/391/","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hadoopqa","name":"hadoopqa","key":"hadoopqa","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=hadoopqa&avatarId=10393","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=hadoopqa&avatarId=10393","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=hadoopqa&avatarId=10393","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=hadoopqa&avatarId=10393"},"displayName":"Hadoop QA","active":true,"timeZone":"Etc/UTC"},"created":"2013-06-26T16:17:31.346+0000","updated":"2013-06-26T16:17:31.346+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12651610/comment/13694408","id":"13694408","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"body":"I just don't want to be surprised by other problem (e.g gc issues) about the sequence. anyway, +1 for latest patch.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hustlmsp","name":"hustlmsp","key":"hustlmsp","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Sijie Guo","active":true,"timeZone":"America/Los_Angeles"},"created":"2013-06-27T01:35:52.127+0000","updated":"2013-06-27T01:35:52.127+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12651610/comment/13695526","id":"13695526","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"body":"Integrated in bookkeeper-trunk #263 (See [https://builds.apache.org/job/bookkeeper-trunk/263/])\n    BOOKKEEPER-620: PerChannelBookieClient race during channel disconnect (ivank) (Revision 1497814)\n\n     Result = SUCCESS\nivank : \nFiles : \n* /zookeeper/bookkeeper/trunk/CHANGES.txt\n* /zookeeper/bookkeeper/trunk/bookkeeper-server/src/main/java/org/apache/bookkeeper/proto/PerChannelBookieClient.java\n* /zookeeper/bookkeeper/trunk/bookkeeper-server/src/test/java/org/apache/bookkeeper/proto/TestPerChannelBookieClient.java\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=hudson","name":"hudson","key":"hudson","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Hudson","active":true,"timeZone":"Etc/UTC"},"created":"2013-06-28T15:56:18.883+0000","updated":"2013-06-28T15:56:18.883+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12651610/comment/13695529","id":"13695529","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"body":"Committed r1497814 to trunk.\nCommitted revision 1497824 to branch-4.2.\n\nThanks for the reviews and discussion guys.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=ikelly","name":"ikelly","key":"ikelly","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Ivan Kelly","active":true,"timeZone":"Europe/Berlin"},"created":"2013-06-28T16:00:01.585+0000","updated":"2013-06-28T16:00:01.585+0000"}],"maxResults":28,"total":28,"startAt":0},"customfield_12311820":"0|i1l9i7:","customfield_12314139":null}}

