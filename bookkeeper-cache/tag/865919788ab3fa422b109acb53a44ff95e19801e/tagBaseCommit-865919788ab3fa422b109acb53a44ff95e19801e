{"sha":"865919788ab3fa422b109acb53a44ff95e19801e","node_id":"MDY6Q29tbWl0MTU3NTk1Njo4NjU5MTk3ODhhYjNmYTQyMmIxMDlhY2I1M2E0NGZmOTVlMTk4MDFl","commit":{"author":{"name":"zhaijack","email":"zhaijia03@gmail.com","date":"2017-08-14T04:54:08Z"},"committer":{"name":"Sijie Guo","email":"sijie@apache.org","date":"2017-08-14T06:52:29Z"},"message":"ISSUE #441: fix typos\n\nDescriptions of the changes in this PR:\nFix typos in docker readme.\n\"Apache ZooKeeper is a software project of the Apache Software Foundation\"\n->\n\"Apache Bookkeeper is a software project of the Apache Software Foundation\"\n\n\"bookkepeer servers\" -> \"bookkeeper servers\"\n\n\"The client only need to connect to a Zookkeeper server in the ensamble\"\n->\n\"The client only need to connect to a Zookeeper server in the ensemble\"\n\ntypo of other place:\nbookeeper\n->\nbookkeeper\n\nwile\n->\nwhile\n\nacknoledge\n->\nacknowledge\n\nAuthor: zhaijack <zhaijia03@gmail.com>\n\nReviewers: Enrico Olivelli <eolivelli@gmail.com>, Sijie Guo <sijie@apache.org>\n\nThis closes #442 from zhaijack/issue_441, closes #441\n\n(cherry picked from commit e988a3cb876b5939e103e36b985ddab05173569c)\nSigned-off-by: Sijie Guo <sijie@apache.org>","tree":{"sha":"744aa716a3a03d014666c4459c258f5b8d0d845e","url":"https://api.github.com/repos/apache/bookkeeper/git/trees/744aa716a3a03d014666c4459c258f5b8d0d845e"},"url":"https://api.github.com/repos/apache/bookkeeper/git/commits/865919788ab3fa422b109acb53a44ff95e19801e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/bookkeeper/commits/865919788ab3fa422b109acb53a44ff95e19801e","html_url":"https://github.com/apache/bookkeeper/commit/865919788ab3fa422b109acb53a44ff95e19801e","comments_url":"https://api.github.com/repos/apache/bookkeeper/commits/865919788ab3fa422b109acb53a44ff95e19801e/comments","author":{"login":"zhaijack","id":26834121,"node_id":"MDQ6VXNlcjI2ODM0MTIx","avatar_url":"https://avatars.githubusercontent.com/u/26834121?v=4","gravatar_id":"","url":"https://api.github.com/users/zhaijack","html_url":"https://github.com/zhaijack","followers_url":"https://api.github.com/users/zhaijack/followers","following_url":"https://api.github.com/users/zhaijack/following{/other_user}","gists_url":"https://api.github.com/users/zhaijack/gists{/gist_id}","starred_url":"https://api.github.com/users/zhaijack/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhaijack/subscriptions","organizations_url":"https://api.github.com/users/zhaijack/orgs","repos_url":"https://api.github.com/users/zhaijack/repos","events_url":"https://api.github.com/users/zhaijack/events{/privacy}","received_events_url":"https://api.github.com/users/zhaijack/received_events","type":"User","site_admin":false},"committer":{"login":"sijie","id":1217863,"node_id":"MDQ6VXNlcjEyMTc4NjM=","avatar_url":"https://avatars.githubusercontent.com/u/1217863?v=4","gravatar_id":"","url":"https://api.github.com/users/sijie","html_url":"https://github.com/sijie","followers_url":"https://api.github.com/users/sijie/followers","following_url":"https://api.github.com/users/sijie/following{/other_user}","gists_url":"https://api.github.com/users/sijie/gists{/gist_id}","starred_url":"https://api.github.com/users/sijie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sijie/subscriptions","organizations_url":"https://api.github.com/users/sijie/orgs","repos_url":"https://api.github.com/users/sijie/repos","events_url":"https://api.github.com/users/sijie/events{/privacy}","received_events_url":"https://api.github.com/users/sijie/received_events","type":"User","site_admin":false},"parents":[{"sha":"0ed116f4f3e7f74e45bb96a4c5aee5c11a708ecc","url":"https://api.github.com/repos/apache/bookkeeper/commits/0ed116f4f3e7f74e45bb96a4c5aee5c11a708ecc","html_url":"https://github.com/apache/bookkeeper/commit/0ed116f4f3e7f74e45bb96a4c5aee5c11a708ecc"}],"stats":{"total":50,"additions":25,"deletions":25},"files":[{"sha":"e308701a5d77f7d06405943e3c258f4abc018bfd","filename":"CHANGES.txt","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/bookkeeper/blob/865919788ab3fa422b109acb53a44ff95e19801e/CHANGES.txt","raw_url":"https://github.com/apache/bookkeeper/raw/865919788ab3fa422b109acb53a44ff95e19801e/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/CHANGES.txt?ref=865919788ab3fa422b109acb53a44ff95e19801e","patch":"@@ -1144,9 +1144,9 @@ Release 4.0.0 - 2011-11-30\n \n         BOOKKEEPER-19: BookKeeper doesn't support more than 2Gig of memory (ivan via fpj)\n \n-        BOOKEEPER-22: Exception in LedgerCache causes addEntry request to fail (fpj via fpj)\n+        BOOKKEEPER-22: Exception in LedgerCache causes addEntry request to fail (fpj via fpj)\n \n-        BOOKEEPER-5: Issue with Netty in BookKeeper (fpj and ivank via fpj)\n+        BOOKKEEPER-5: Issue with Netty in BookKeeper (fpj and ivank via fpj)\n \n         BOOKKEEPER-30: Test are too noisy (ivank via fpj)\n "},{"sha":"7c81d6d9275dbe99a6ddc69cc516e96ab731e24e","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/865919788ab3fa422b109acb53a44ff95e19801e/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java","raw_url":"https://github.com/apache/bookkeeper/raw/865919788ab3fa422b109acb53a44ff95e19801e/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandle.java?ref=865919788ab3fa422b109acb53a44ff95e19801e","patch":"@@ -581,7 +581,7 @@ public void asyncReadEntries(long firstEntry, long lastEntry, ReadCallback cb, O\n      * read entries for which the writer has not received the acknowledge yet. <br>\n      * For entries which are within the range 0..LastAddConfirmed BookKeeper guarantees that the writer has successfully\n      * received the acknowledge.<br>\n-     * For entries outside that range it is possible that the writer never received the acknoledge\n+     * For entries outside that range it is possible that the writer never received the acknowledge\n      * and so there is the risk that the reader is seeing entries before the writer and this could result in a consistency\n      * issue in some cases.<br>\n      * With this method you can even read entries before the LastAddConfirmed and entries after it with one call,"},{"sha":"672edd882487b2d7d666104e48b48b6dbc0e04ba","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandleAdv.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/865919788ab3fa422b109acb53a44ff95e19801e/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandleAdv.java","raw_url":"https://github.com/apache/bookkeeper/raw/865919788ab3fa422b109acb53a44ff95e19801e/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandleAdv.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/client/LedgerHandleAdv.java?ref=865919788ab3fa422b109acb53a44ff95e19801e","patch":"@@ -40,7 +40,7 @@\n \n /**\n  * Ledger Advanced handle extends {@link LedgerHandle} to provide API to add entries with\n- * user supplied entryIds. Through this interface Ledger Length may not be accurate wile the\n+ * user supplied entryIds. Through this interface Ledger Length may not be accurate while the\n  * ledger being written.\n  */\n public class LedgerHandleAdv extends LedgerHandle {"},{"sha":"3e9583cc4cf5063c31be62a8e65cda92fbf1c703","filename":"bookkeeper-server/src/main/java/org/apache/bookkeeper/util/Main.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/865919788ab3fa422b109acb53a44ff95e19801e/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/Main.java","raw_url":"https://github.com/apache/bookkeeper/raw/865919788ab3fa422b109acb53a44ff95e19801e/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/Main.java","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/bookkeeper-server/src/main/java/org/apache/bookkeeper/util/Main.java?ref=865919788ab3fa422b109acb53a44ff95e19801e","patch":"@@ -29,7 +29,7 @@\n public class Main {\n \n     static void usage() {\n-        System.err.println(\"USAGE: bookeeper client|bookie\");\n+        System.err.println(\"USAGE: bookkeeper client|bookie\");\n     }\n \n     /**"},{"sha":"ff50c9cad85a2094ef7e53db59e9a7a9e1f66eda","filename":"doc/bookkeeperSecurity.textile","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/865919788ab3fa422b109acb53a44ff95e19801e/doc/bookkeeperSecurity.textile","raw_url":"https://github.com/apache/bookkeeper/raw/865919788ab3fa422b109acb53a44ff95e19801e/doc/bookkeeperSecurity.textile","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/doc/bookkeeperSecurity.textile?ref=865919788ab3fa422b109acb53a44ff95e19801e","patch":"@@ -20,7 +20,7 @@ Metadata are stored on ZooKeeper, so first of all you will need to secure your Z\n \n Then you have to take care of access to Bookies, you can configure authentication and encryption using TLS, out of the box BookKeeper supports Kerberos authentication, DIGEST-MD5 authentication and TLS encryption. You can also leverage TLS client authentication in order to protect your data.\n \n-h1. ZookKeeper security on BookKeeper\n+h1. ZooKeeper security on BookKeeper\n \n Both clients and Bookies read and write metadata on ZooKeeper, it is also used for Bookie discovery. \n The best way to protect data stored on ZooKeeper is to put ACLs on every z-node, this way only authorized users will be able to access (read/write) data"},{"sha":"23a3ecf46538c42bbe4c29dcdfc674552bb197fa","filename":"docker/Makefile","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/apache/bookkeeper/blob/865919788ab3fa422b109acb53a44ff95e19801e/docker/Makefile","raw_url":"https://github.com/apache/bookkeeper/raw/865919788ab3fa422b109acb53a44ff95e19801e/docker/Makefile","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/docker/Makefile?ref=865919788ab3fa422b109acb53a44ff95e19801e","patch":"@@ -36,7 +36,7 @@ BK_DIR = /data\n BK_zkLedgersRootPath = /ledgers\n \n ZK_CONTAINER_NAME=test_zookeeper\n-ZK_LOCAL_DATA_DIR=$(BK_LOCAL_DATA_DIR)/zookkeeper\n+ZK_LOCAL_DATA_DIR=$(BK_LOCAL_DATA_DIR)/zookeeper\n \n TERMINAL_EMULATOR=gnome-terminal\n \n@@ -62,7 +62,7 @@ build:\n \n # -------------------------------- #\n \n-# Create and run a bookkeeper container with data persisted on local filesystem. It needs the zookkeeper container.\n+# Create and run a bookkeeper container with data persisted on local filesystem. It needs the zookeeper container.\n # In order to launch several bookies, the command need the bookie number\n #   make run-bk BOOKIE=4\n \n@@ -88,7 +88,7 @@ run-bk:\n \n # -------------------------------- #\n \n-# Create run and destroy a container that will format zookkeeper metadata\n+# Create run and destroy a container that will format zookeeper metadata\n #   make run-format\n \n run-format:\n@@ -100,7 +100,7 @@ run-format:\n \n # -------------------------------- #\n \n-# Create and run the zookkeeper container needed by the ensemble\n+# Create and run the zookeeper container needed by the ensemble\n #   make run-zk\n \n run-zk:\n@@ -129,7 +129,7 @@ run-dice:\n \n # -------------------------------- #\n \n-# This is an example of a full bookkeeper ensemble of 3 bookies, a zookkeeper server and 2 client dice applications.\n+# This is an example of a full bookkeeper ensemble of 3 bookies, a zookeeper server and 2 client dice applications.\n # On MacOS please run these command manually in several terminals\n #   make run-demo\n run-demo:"},{"sha":"d3def65494ddb7385fba07a66b9bcffaa103b1d3","filename":"docker/README.md","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/apache/bookkeeper/blob/865919788ab3fa422b109acb53a44ff95e19801e/docker/README.md","raw_url":"https://github.com/apache/bookkeeper/raw/865919788ab3fa422b109acb53a44ff95e19801e/docker/README.md","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/docker/README.md?ref=865919788ab3fa422b109acb53a44ff95e19801e","patch":"@@ -1,14 +1,14 @@\n \n # What is Apache Bookkeeper?\n \n-Apache ZooKeeper is a software project of the Apache Software Foundation, providing a replicated log service which can be used to build replicated state machines. A log contains a sequence of events which can be applied to a state machine. BookKeeper guarantees that each replica state machine will see all the same entries, in the same order.\n+Apache Bookkeeper is a software project of the Apache Software Foundation, providing a replicated log service which can be used to build replicated state machines. A log contains a sequence of events which can be applied to a state machine. BookKeeper guarantees that each replica state machine will see all the same entries, in the same order.\n \n > [Apache Bookkeeper](http://bookkeeper.apache.org/)\n \n \n # How to use this image\n \n-Bookkeeper needs [Zookeeper](https://zookeeper.apache.org/) in order to preserve its state and publish its bookies (bookkepeer servers). The client only need to connect to a Zookkeeper server in the ensamble in order to obtain the list of Bookkeeper servers.\n+Bookkeeper needs [Zookeeper](https://zookeeper.apache.org/) in order to preserve its state and publish its bookies (Bookkeeper servers). The client only need to connect to a Zookeeper server in the ensamble in order to obtain the list of Bookkeeper servers.\n \n ## TL;DR\n \n@@ -64,21 +64,21 @@ And so on for \"bookie2\" and \"bookie3\". We have now our fully functional ensemble\n \n In order to play with our freshly created ensemble, you can use the simple application taken from [Bookkeeper Tutorial](http://bookkeeper.apache.org/docs/master/bookkeeperTutorial.html) and packaged in a [docker image](https://github.com/caiok/bookkeeper-tutorial) for convenience.\n \n-This application check if it can be leader, if yes start to roll a dice and book this rolls on bookkeeper, otherwise it will start to follow the leader rolls. If leader stops, follower will try to become leader and so on.\n+This application check if it can be leader, if yes start to roll a dice and book this rolls on Bookkeeper, otherwise it will start to follow the leader rolls. If leader stops, follower will try to become leader and so on.\n \n Start a dice application (you can run it several times to view the behavior in a concurrent environment):\n ```\n docker run -it --rm \\\n     --network \"my-bookkeeper-network\" \\\n-    --env ZK_URL=my-zookkeeper:2181 \\\n+    --env ZK_URL=my-zookeeper:2181 \\\n     caiok/bookkeeper-tutorial\n ```\n \n ## Configuration\n \n-Bookkeeper configuration is located in `/opt/bookkeeper/conf` in the docker container, it is a copy of [these files](https://github.com/apache/bookkeeper/tree/master/bookkeeper-server/conf) in bookkeeper repo.\n+Bookkeeper configuration is located in `/opt/bookkeeper/conf` in the docker container, it is a copy of [these files](https://github.com/apache/bookkeeper/tree/master/bookkeeper-server/conf) in Bookkeeper repo.\n \n-There are 2 ways to set bookkeeper configuration:\n+There are 2 ways to set Bookkeeper configuration:\n \n 1, Apply setted (e.g. docker -e kk=vv) environment variables into configuration files. Environment variable names is in format \"BK_originalName\", in which \"originalName\" is the key in config files.\n \n@@ -94,7 +94,7 @@ $ docker run --name bookie1 -d \\\n     bookkeeper\n ```\n \n-### Override rules for bookkeeper configuration\n+### Override rules for Bookkeeper configuration\n If you have applied several ways to set the same config target, e.g. the environment variable names contained in [these files](https://github.com/apache/bookkeeper/tree/master/bookkeeper-server/conf) and conf_file in /opt/bookkeeper/conf/.\n \n Then the override rules is as this:\n@@ -132,15 +132,15 @@ Default value is \"127.0.0.1:2181\"\n \n #### `BK_zkLedgersRootPath`\n \n-This variable allows you to specify the root directory bookkeeper will use on Zookeeper to store ledgers metadata.\n+This variable allows you to specify the root directory Bookkeeper will use on Zookeeper to store ledgers metadata.\n \n This will override `zkLedgersRootPath ` in [bk_server.conf](https://github.com/apache/bookkeeper/blob/master/bookkeeper-server/conf/bk_server.conf).\n \n Default value is \"/bookkeeper/ledgers\"\n \n #### `BK_CLUSTER_ROOT_PATH`\n \n-This variable allows you to specify the root directory bookkeeper will use on Zookeeper.\n+This variable allows you to specify the root directory Bookkeeper will use on Zookeeper.\n \n Default value is empty - \" \". so ledgers dir in zookeeper will be at \"/ledgers\" by default. You could set it as that you want, e.g. \"/bookkeeper\"\n \n@@ -153,7 +153,7 @@ Default value is \"/data/bookkeeper\", which contains volumes `/data/bookkeeper/jo\n \n \n ### Configure files under /opt/bookkeeper/conf\n-These files is originally un-tared from the bookkeeper building binary, such as [bookkeeper-server-4.4.0-bin.tar.tgz](https://archive.apache.org/dist/bookkeeper/bookkeeper-4.4.0/bookkeeper-4.4.0-src.tar.gz), and it comes from [these files](https://github.com/apache/bookkeeper/tree/master/bookkeeper-server/conf) in bookkeeper repo.\n+These files is originally un-tared from the bookkeeper building binary, such as [bookkeeper-server-4.4.0-bin.tar.tgz](https://archive.apache.org/dist/bookkeeper/bookkeeper-4.4.0/bookkeeper-4.4.0-src.tar.gz), and it comes from [these files](https://github.com/apache/bookkeeper/tree/master/bookkeeper-server/conf) in Bookkeeper repo.\n \n Usually we could config files bk_server.conf, bkenv.sh, log4j.properties, and log4j.shell.properties. Please read and understand them before you do the configuration.\n "},{"sha":"469ad27e14aad0674dab8f00c78b8cab7b4a44a3","filename":"site/README.md","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/bookkeeper/blob/865919788ab3fa422b109acb53a44ff95e19801e/site/README.md","raw_url":"https://github.com/apache/bookkeeper/raw/865919788ab3fa422b109acb53a44ff95e19801e/site/README.md","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/site/README.md?ref=865919788ab3fa422b109acb53a44ff95e19801e","patch":"@@ -50,7 +50,7 @@ When you submit a pull request for modifying website or documentation, you are r\n Here are a few steps to follow to stage your changes:\n \n 1. You need to create a github repo called `bookkeeper-staging-site` under your github account. You can fork this [staging repo](https://github.com/sijie/bookkeeper-staging-site) as well.\n-2. In your `bookeeper-staging-site` repo, go to `Settings > GitHub Pages`. Enable `GitHub Pages` on `master branch /docs folder`.\n+2. In your `bookkeeper-staging-site` repo, go to `Settings > GitHub Pages`. Enable `GitHub Pages` on `master branch /docs folder`.\n 3. Make changes to the website, follow the steps above to verify the changes locally.\n 4. Once the changes are verified locally, you can run `make staging`. It will generate the files under `site/local-generated`.\n 5. Run `scripts/staging-website.sh`. It would push the generated website to your `bookkeeper-staging-site`."},{"sha":"edbfab9fda630be8c331ba9b387816b7aa3ee714","filename":"site/docs/getting-started/run-locally.md","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/bookkeeper/blob/865919788ab3fa422b109acb53a44ff95e19801e/site/docs/getting-started/run-locally.md","raw_url":"https://github.com/apache/bookkeeper/raw/865919788ab3fa422b109acb53a44ff95e19801e/site/docs/getting-started/run-locally.md","contents_url":"https://api.github.com/repos/apache/bookkeeper/contents/site/docs/getting-started/run-locally.md?ref=865919788ab3fa422b109acb53a44ff95e19801e","patch":"@@ -1,7 +1,7 @@\n ---\n title: Run bookies locally\n-prev: /docs/getting-started/installation\n-next: /docs/getting-started/concepts\n+prev: ../installation\n+next: ../concepts\n toc_disable: true\n ---\n \n@@ -10,7 +10,7 @@ toc_disable: true\n This would start up an ensemble with 10 bookies:\n \n ```shell\n-$ bookeeper-server/bin/bookeeper localbookie 10\n+$ bookkeeper-server/bin/bookkeeper localbookie 10\n ```\n \n > When you start up an ensemble using `localbookie`, all bookies run in a single JVM process."}]}

