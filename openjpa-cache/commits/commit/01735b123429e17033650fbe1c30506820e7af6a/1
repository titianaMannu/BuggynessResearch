{"sha":"01735b123429e17033650fbe1c30506820e7af6a","node_id":"MDY6Q29tbWl0MjA2MzY0OjAxNzM1YjEyMzQyOWUxNzAzMzY1MGZiZTFjMzA1MDY4MjBlN2FmNmE=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2006-08-30T17:53:55Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2006-08-30T17:53:55Z"},"message":"changed @since tags to disambiguate the Kodo information with future releases of OpenJPA by adding a 0. to the beginning of each.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@438566 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"f104daa33439c044e067c3d118c7a5d0287d092f","url":"https://api.github.com/repos/apache/openjpa/git/trees/f104daa33439c044e067c3d118c7a5d0287d092f"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/01735b123429e17033650fbe1c30506820e7af6a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/01735b123429e17033650fbe1c30506820e7af6a","html_url":"https://github.com/apache/openjpa/commit/01735b123429e17033650fbe1c30506820e7af6a","comments_url":"https://api.github.com/repos/apache/openjpa/commits/01735b123429e17033650fbe1c30506820e7af6a/comments","author":null,"committer":null,"parents":[{"sha":"163cc2a22c9662fe79dd8eeacc0fd9fb197a6565","url":"https://api.github.com/repos/apache/openjpa/commits/163cc2a22c9662fe79dd8eeacc0fd9fb197a6565","html_url":"https://github.com/apache/openjpa/commit/163cc2a22c9662fe79dd8eeacc0fd9fb197a6565"}],"stats":{"total":744,"additions":372,"deletions":372},"files":[{"sha":"0cda2cc6dac9833f741a99507c7c4e8174bb103b","filename":"openjpa-jdbc-5/src/main/java/org/apache/openjpa/jdbc/kernel/JDBC3SavepointManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc-5/src/main/java/org/apache/openjpa/jdbc/kernel/JDBC3SavepointManager.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc-5/src/main/java/org/apache/openjpa/jdbc/kernel/JDBC3SavepointManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc-5/src/main/java/org/apache/openjpa/jdbc/kernel/JDBC3SavepointManager.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -31,7 +31,7 @@\n  * supports JDBC 3 savepoints</b>\n  *\n  * @author Steve Kim\n- * @since 3.4\n+ * @since 0.3.4\n  */\n public class JDBC3SavepointManager\n     extends AbstractJDBCSavepointManager {"},{"sha":"67ddf131c4a67e0635f317e006c28502d996163e","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/JDBCConfiguration.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/JDBCConfiguration.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/JDBCConfiguration.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/JDBCConfiguration.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -226,7 +226,7 @@\n      * </li>\n      * </ul>\n      *\n-     * @since 3.0\n+     * @since 0.3.0\n      */\n     public String getEagerFetchMode();\n \n@@ -254,7 +254,7 @@\n      * <li>{@link EagerFetchModes#EAGER_PARALLEL}</li>\n      * </ul>\n      *\n-     * @since 3.0\n+     * @since 0.3.0\n      */\n     public int getEagerFetchModeConstant();\n \n@@ -266,7 +266,7 @@\n      * <li>{@link EagerFetchModes#EAGER_PARALLEL}</li>\n      * </ul>\n      *\n-     * @since 3.0\n+     * @since 0.3.0\n      */\n     public void setEagerFetchMode(int eagerFetchMode);\n \n@@ -281,7 +281,7 @@\n      * separately.</li>\n      * </ul>\n      *\n-     * @since 3.2\n+     * @since 0.3.2\n      */\n     public String getSubclassFetchMode();\n \n@@ -296,7 +296,7 @@\n      * separately.</li>\n      * </ul>\n      *\n-     * @since 3.2\n+     * @since 0.3.2\n      */\n     public void setSubclassFetchMode(String mode);\n \n@@ -309,7 +309,7 @@\n      * <li>{@link EagerFetchModes#EAGER_PARALLEL}</li>\n      * </ul>\n      *\n-     * @since 3.2\n+     * @since 0.3.2\n      */\n     public int getSubclassFetchModeConstant();\n \n@@ -321,7 +321,7 @@\n      * <li>{@link EagerFetchModes#EAGER_PARALLEL}</li>\n      * </ul>\n      *\n-     * @since 3.2\n+     * @since 0.3.2\n      */\n     public void setSubclassFetchMode(int subclassFetchMode);\n \n@@ -535,28 +535,28 @@\n     /**\n      * A plugin string describing the {@link MappingDefaults} to use.\n      *\n-     * @since 4.0\n+     * @since 0.4.0\n      */\n     public String getMappingDefaults();\n \n     /**\n      * A plugin string describing the {@link MappingDefaults} to use.\n      *\n-     * @since 4.0\n+     * @since 0.4.0\n      */\n     public void setMappingDefaults(String map);\n \n     /**\n      * The {@link MappingDefaults} to use with a repository.\n      *\n-     * @since 4.0\n+     * @since 0.4.0\n      */\n     public MappingDefaults getMappingDefaultsInstance();\n \n     /**\n      * The {@link MappingDefaults} to use with a repository.\n      *\n-     * @since 4.0\n+     * @since 0.4.0\n      */\n     public void setMappingDefaults(MappingDefaults map);\n "},{"sha":"a068c9a8a77c7583e396307eda8089722270a9a8","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/AbstractJDBCSavepointManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/AbstractJDBCSavepointManager.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/AbstractJDBCSavepointManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/AbstractJDBCSavepointManager.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -33,7 +33,7 @@\n  * on the driver/db to restore back to the flushed state.\n  *\n  * @author Steve Kim\n- * @since 3.4\n+ * @since 0.3.4\n  */\n public abstract class AbstractJDBCSavepointManager\n     implements SavepointManager, Configurable {"},{"sha":"405df5aa8fc49670c175ad62f88167c2e289fcff","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/DelegatingJDBCFetchConfiguration.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/DelegatingJDBCFetchConfiguration.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/DelegatingJDBCFetchConfiguration.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/DelegatingJDBCFetchConfiguration.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -34,7 +34,7 @@\n  *\n  * @author Abe White\n  * @nojavadoc\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public class DelegatingJDBCFetchConfiguration\n     extends DelegatingFetchConfiguration"},{"sha":"b18aacc0eab9ff7b7eb799bc6b690f2d52256b29","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCFetchConfiguration.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCFetchConfiguration.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCFetchConfiguration.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCFetchConfiguration.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -28,7 +28,7 @@\n  * JDBC extensions to OpenJPA's {@link FetchConfiguration}.\n  *\n  * @author Abe White\n- * @since 3.0\n+ * @since 0.3.0\n  */\n public interface JDBCFetchConfiguration\n     extends FetchConfiguration, EagerFetchModes, LRSSizes, JoinSyntaxes {\n@@ -113,14 +113,14 @@\n      * when loading objects. Defaults to the empty set.  This set is not\n      * thread safe.\n      *\n-     * @since 4.0.0\n+     * @since 0.4.0.0\n      */\n     public Set getJoins();\n \n     /**\n      * Return true if the given fully-qualified join has been added.\n      *\n-     * @since 4.0.0\n+     * @since 0.4.0.0\n      */\n     public boolean hasJoin(String field);\n \n@@ -129,7 +129,7 @@\n      * eagerly join when loading objects. Each class can have at most\n      * one to-many eagerly joined fields.\n      *\n-     * @since 4.0.0\n+     * @since 0.4.0.0\n      */\n     public JDBCFetchConfiguration addJoin(String field);\n \n@@ -138,30 +138,30 @@\n      * eagerly join when loading objects. Each class can have at most\n      * one to-many eagerly joined fields.\n      *\n-     * @since 4.0.0\n+     * @since 0.4.0.0\n      */\n     public JDBCFetchConfiguration addJoins(Collection fields);\n \n     /**\n      * Removes <code>field</code> to the set of fully-qualified field names to\n      * eagerly join when loading objects.\n      *\n-     * @since 4.0.0\n+     * @since 0.4.0.0\n      */\n     public JDBCFetchConfiguration removeJoin(String field);\n \n     /**\n      * Removes <code>fields</code> from the set of fully-qualified\n      * field names to eagerly join when loading objects.\n      *\n-     * @since 4.0.0\n+     * @since 0.4.0.0\n      */\n     public JDBCFetchConfiguration removeJoins(Collection fields);\n \n     /**\n      * Clears the set of field names to join when loading data.\n      *\n-     * @since 4.0.0\n+     * @since 0.4.0.0\n      */\n     public JDBCFetchConfiguration clearJoins();\n "},{"sha":"77fa439f06edc160ec6f7129f6d3723540603e85","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStore.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStore.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStore.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStore.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -31,7 +31,7 @@\n  * Represents the JDBC store.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public interface JDBCStore {\n "},{"sha":"15f32f7aa9b5759bb84cc71a6a0d67525043e402","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ClassStrategy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ClassStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ClassStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ClassStrategy.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -30,7 +30,7 @@\n  * Mapping from a class to a relational schema.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public interface ClassStrategy\n     extends Strategy {"},{"sha":"acaabe09c66f0a4d8b4356107b7521271a3fafdb","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/Embeddable.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/Embeddable.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/Embeddable.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/Embeddable.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -30,7 +30,7 @@\n  * directly embedded objects do not have to implement this interface.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public interface Embeddable {\n "},{"sha":"a520cfa49d4fa58904bbb83befabc2dab2cbaed3","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/FieldStrategy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/FieldStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/FieldStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/FieldStrategy.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -31,7 +31,7 @@\n  * Maps a persistent field to the relational schema.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public interface FieldStrategy\n     extends Strategy {"},{"sha":"35077904c82eb7f75e4bc2d8aa99786ef16687ae","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingStrategyInstaller.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingStrategyInstaller.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingStrategyInstaller.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingStrategyInstaller.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -21,7 +21,7 @@\n  *\n  * @author Abe White\n  * @nojavadoc\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public class MappingStrategyInstaller\n     extends StrategyInstaller {"},{"sha":"bd161ac97f64d199b8974cc551a6489c3c968a74","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/NoneStrategyInstaller.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/NoneStrategyInstaller.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/NoneStrategyInstaller.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/NoneStrategyInstaller.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n  *\n  * @author Abe White\n  * @nojavadoc\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public class NoneStrategyInstaller\n     extends StrategyInstaller {"},{"sha":"d149c94fe52ca238ea181c92492338ae1023ffe7","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/RefreshStrategyInstaller.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/RefreshStrategyInstaller.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/RefreshStrategyInstaller.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/RefreshStrategyInstaller.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -24,7 +24,7 @@\n  *\n  * @author Abe White\n  * @nojavadoc\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public class RefreshStrategyInstaller\n     extends StrategyInstaller {"},{"sha":"843e21566725f75acb8bec3b037669efe73cbd45","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/RelationId.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/RelationId.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/RelationId.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/RelationId.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -22,7 +22,7 @@\n  * Callback to store a relation after the object id has been assigned.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public interface RelationId {\n "},{"sha":"c4d9c352c281282acd95362bd7a795ee15d448fe","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/RuntimeStrategyInstaller.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/RuntimeStrategyInstaller.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/RuntimeStrategyInstaller.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/RuntimeStrategyInstaller.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -27,7 +27,7 @@\n  *\n  * @author Abe White\n  * @nojavadoc\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public class RuntimeStrategyInstaller\n     extends StrategyInstaller {"},{"sha":"b437f075efcb51cf40968b2b1722d515700ce75b","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/Strategy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/Strategy.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/Strategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/Strategy.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -26,7 +26,7 @@\n  * Interface implemented by all mapping strategies.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public interface Strategy {\n "},{"sha":"4071502e8b4c4d2f975e28dbfe9f012f92085281","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/StrategyInstaller.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/StrategyInstaller.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/StrategyInstaller.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/StrategyInstaller.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -22,7 +22,7 @@\n  *\n  * @author Abe White\n  * @nojavadoc\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public abstract class StrategyInstaller {\n "},{"sha":"97ab17ce85caa7cdd38b2b31c0f505468032029a","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ValueHandler.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ValueHandler.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ValueHandler.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ValueHandler.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -28,7 +28,7 @@\n  * Maps a value to a relational schema. Value handler are stateless.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public interface ValueHandler {\n "},{"sha":"a9b90ff63e7b6b3b7d136635cec3550d421b1a88","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ValueMapping.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ValueMapping.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ValueMapping.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ValueMapping.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -31,7 +31,7 @@\n  * Specialization of value metadata for relational databases.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public interface ValueMapping\n     extends ValueMetaData, MetaDataContext {"},{"sha":"10c7db51e3cbd9f19464d378c02bd27e3581ef9e","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ValueMappingImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ValueMappingImpl.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ValueMappingImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ValueMappingImpl.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -39,7 +39,7 @@\n  * Standalone {@link ValueMapping} implementation.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public class ValueMappingImpl\n     extends ValueMetaDataImpl"},{"sha":"1a3caa419cbbf002efeb950a6c98d1459f055d47","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/EmbedFieldStrategy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/EmbedFieldStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/EmbedFieldStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/EmbedFieldStrategy.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -67,7 +67,7 @@\n  * Mapping for an embedded persistent object.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public class EmbedFieldStrategy\n     extends AbstractFieldStrategy {"},{"sha":"df03c26211f5201a49f4ccd70f4282e2f78963a0","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/EmbedValueHandler.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/EmbedValueHandler.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/EmbedValueHandler.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/EmbedValueHandler.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -33,7 +33,7 @@\n  * Base class for embedded value handlers.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public abstract class EmbedValueHandler\n     extends AbstractValueHandler {"},{"sha":"977c7356c53ca49cac390727af0889e6d72e5fad","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/HandlerFieldStrategy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/HandlerFieldStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/HandlerFieldStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/HandlerFieldStrategy.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -43,7 +43,7 @@\n  * Mapping for a single-valued field that delegates to a {@link ValueHandler}.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public class HandlerFieldStrategy\n     extends AbstractFieldStrategy"},{"sha":"645a138384ffe132733bdc78c2042ecd4c56f92a","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/HandlerHandlerMapTableFieldStrategy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/HandlerHandlerMapTableFieldStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/HandlerHandlerMapTableFieldStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/HandlerHandlerMapTableFieldStrategy.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -44,7 +44,7 @@\n  * {@link ValueHandler}s.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public class HandlerHandlerMapTableFieldStrategy\n     extends MapTableFieldStrategy {"},{"sha":"5303eff9e12f11b68d32173a361830b3ddae1484","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/HandlerStrategies.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/HandlerStrategies.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/HandlerStrategies.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/HandlerStrategies.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -37,7 +37,7 @@\n  * Utility methods for strategies using value handlers.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public class HandlerStrategies {\n "},{"sha":"6c1ccfc7fc5070f7873acb7f226521e03432a38e","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/MaxEmbeddedBlobFieldStrategy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/MaxEmbeddedBlobFieldStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/MaxEmbeddedBlobFieldStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/MaxEmbeddedBlobFieldStrategy.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -33,7 +33,7 @@\n  *\n  * @author Abe White\n  * @nojavadoc\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public class MaxEmbeddedBlobFieldStrategy\n     extends MaxEmbeddedLobFieldStrategy {"},{"sha":"267cb3e7549c7793bbd043b7f134174d3fe3a944","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/MaxEmbeddedByteArrayFieldStrategy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/MaxEmbeddedByteArrayFieldStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/MaxEmbeddedByteArrayFieldStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/MaxEmbeddedByteArrayFieldStrategy.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -36,7 +36,7 @@\n  *\n  * @author Abe White\n  * @nojavadoc\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public class MaxEmbeddedByteArrayFieldStrategy\n     extends MaxEmbeddedLobFieldStrategy {"},{"sha":"fc8d230dbeb809dbf53f89d233459c27edc74625","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/MaxEmbeddedCharArrayFieldStrategy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/MaxEmbeddedCharArrayFieldStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/MaxEmbeddedCharArrayFieldStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/MaxEmbeddedCharArrayFieldStrategy.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -40,7 +40,7 @@\n  *\n  * @author Abe White\n  * @nojavadoc\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public class MaxEmbeddedCharArrayFieldStrategy\n     extends MaxEmbeddedLobFieldStrategy {"},{"sha":"d310c8f8705cac0b68f94b44ae511e70aaf24fb5","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/MaxEmbeddedClobFieldStrategy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/MaxEmbeddedClobFieldStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/MaxEmbeddedClobFieldStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/MaxEmbeddedClobFieldStrategy.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -32,7 +32,7 @@\n  *\n  * @author Abe White\n  * @nojavadoc\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public class MaxEmbeddedClobFieldStrategy\n     extends MaxEmbeddedLobFieldStrategy {"},{"sha":"aea3e31a5e716431b60be6d8d704f45e5e9971e9","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/MaxEmbeddedLobFieldStrategy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/MaxEmbeddedLobFieldStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/MaxEmbeddedLobFieldStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/MaxEmbeddedLobFieldStrategy.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -39,7 +39,7 @@\n  * Base class for LOBs on databases that limit the max embedded LOB size.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n abstract class MaxEmbeddedLobFieldStrategy\n     extends AbstractFieldStrategy {"},{"sha":"5b3ed3af081fd10d28b012a37c6627474c820c07","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/ObjectIdValueHandler.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/ObjectIdValueHandler.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/ObjectIdValueHandler.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/ObjectIdValueHandler.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -32,7 +32,7 @@\n  *\n  * @author Abe White\n  * @nojavadoc\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public class ObjectIdValueHandler\n     extends EmbedValueHandler {"},{"sha":"80d22fb63dc8628873de6e65869d8b645cd275cf","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/PrimitiveFieldStrategy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/PrimitiveFieldStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/PrimitiveFieldStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/PrimitiveFieldStrategy.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -43,7 +43,7 @@\n  * Direct mapping from a primitive value to a column.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public class PrimitiveFieldStrategy\n     extends AbstractFieldStrategy"},{"sha":"824a3bcfc8f0ecaecb1cb44ffc912d82472084c4","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationFieldStrategy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationFieldStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationFieldStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationFieldStrategy.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -52,7 +52,7 @@\n  * Mapping for a single-valued relation to another entity.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public class RelationFieldStrategy\n     extends AbstractFieldStrategy"},{"sha":"3d8ee4f43e55a9e07386be1d8a7b17ec1c98e916","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/StringFieldStrategy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/StringFieldStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/StringFieldStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/StringFieldStrategy.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -43,7 +43,7 @@\n  * Direct mapping from a string value to a column.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public class StringFieldStrategy\n     extends AbstractFieldStrategy"},{"sha":"0e5ad8f741ef574340ae277d839d768b2c9bedd0","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SQLBuffer.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SQLBuffer.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SQLBuffer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SQLBuffer.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -39,7 +39,7 @@\n  *\n  * @author Marc Prud'hommeaux\n  * @author Abe White\n- * @since 2.4\n+ * @since 0.2.4\n  */\n public final class SQLBuffer\n     implements Serializable, Cloneable {"},{"sha":"a1277e71ed06ac83f06f4bcd9c88c784b5be7106","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/abstractstore/AbstractStoreManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/abstractstore/AbstractStoreManager.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/abstractstore/AbstractStoreManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/abstractstore/AbstractStoreManager.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -112,7 +112,7 @@\n  * </ul></li>\n  * </ul>\n  *\n- * @since 3.1\n+ * @since 0.3.1\n  */\n public abstract class AbstractStoreManager\n     implements StoreManager {"},{"sha":"241dd95111bc7ceb9a4bc44c45812c7e4f11b27b","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfiguration.java","status":"modified","additions":55,"deletions":55,"changes":110,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfiguration.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfiguration.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfiguration.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -294,65 +294,65 @@\n      * manager has been set/created, all changes to caching configuration\n      * must proceed through the cache manager.\n      *\n-     * @since 3.0\n+     * @since 0.3.0\n      */\n     public DataCacheManager getDataCacheManagerInstance();\n \n     /**\n      * The data cache manager manages this configuration's cache instances.\n      *\n-     * @since 3.0\n+     * @since 0.3.0\n      */\n     public void setDataCacheManager(DataCacheManager manager);\n \n     /**\n      * Default data cache timeout.\n      *\n-     * @since 2.5\n+     * @since 0.2.5\n      */\n     public int getDataCacheTimeout();\n \n     /**\n      * Default data cache timeout.\n      *\n-     * @since 2.5\n+     * @since 0.2.5\n      */\n     public void setDataCacheTimeout(int timeout);\n \n     /**\n      * Wrapper for JCA usage of {@link #setDataCacheTimeout(int)}.\n      *\n-     * @since 2.5\n+     * @since 0.2.5\n      */\n     public void setDataCacheTimeout(Integer timeout);\n \n     /**\n      * The plugin to use for level-2 data store query caching.\n      *\n-     * @since 2.5\n+     * @since 0.2.5\n      */\n     public String getQueryCache();\n \n     /**\n      * The plugin to use for level-2 data store query caching.\n      *\n-     * @since 2.5\n+     * @since 0.2.5\n      */\n     public void setQueryCache(String queryCache);\n \n     /**\n      * Return whether to generate dynamic data structures\n      * where possible for cache and runtime usage.\n      *\n-     * @since 3.3\n+     * @since 0.3.3\n      */\n     public boolean getDynamicDataStructs();\n \n     /**\n      * Set whether to generate dynamic data structures\n      * where possible for cache and runtime usage.\n      *\n-     * @since 3.3\n+     * @since 0.3.3\n      */\n     public void setDynamicDataStructs(boolean dynamic);\n \n@@ -364,14 +364,14 @@\n     /**\n      * The plugin to use for datastore lock management.\n      *\n-     * @since 3.1\n+     * @since 0.3.1\n      */\n     public String getLockManager();\n \n     /**\n      * The plugin to use for datastore lock management.\n      *\n-     * @since 3.1\n+     * @since 0.3.1\n      */\n     public void setLockManager(String lockManager);\n \n@@ -383,36 +383,36 @@\n     /**\n      * The plugin to use for managing inverse relations.\n      *\n-     * @since 3.2\n+     * @since 0.3.2\n      */\n     public String getInverseManager();\n \n     /**\n      * The plugin to use for managing inverse relations.\n      *\n-     * @since 3.2\n+     * @since 0.3.2\n      */\n     public void setInverseManager(String inverse);\n \n     /**\n      * Return a new inverse manager instance using the configured plugin\n      * settings.\n      *\n-     * @since 3.2\n+     * @since 0.3.2\n      */\n     public InverseManager newInverseManagerInstance();\n \n     /**\n      * The plugin to use for savepoint management.\n      *\n-     * @since 3.4\n+     * @since 0.3.4\n      */\n     public String getSavepointManager();\n \n     /**\n      * The plugin to use for savepoint management.\n      *\n-     * @since 3.4\n+     * @since 0.3.4\n      */\n     public void setSavepointManager(String savepointManager);\n \n@@ -424,65 +424,65 @@\n     /**\n      * The action to take when an orphaned key is detected.\n      *\n-     * @since 3.2.2\n+     * @since 0.3.2.2\n      */\n     public String getOrphanedKeyAction();\n \n     /**\n      * The action to take when an orphaned key is detected.\n      *\n-     * @since 3.2.2\n+     * @since 0.3.2.2\n      */\n     public void setOrphanedKeyAction(String action);\n \n     /**\n      * The action to take when an orphaned key is detected.\n      *\n-     * @since 3.2.2\n+     * @since 0.3.2.2\n      */\n     public OrphanedKeyAction getOrphanedKeyActionInstance();\n \n     /**\n      * The action to take when an orphaned key is detected.\n      *\n-     * @since 3.2.2\n+     * @since 0.3.2.2\n      */\n     public void setOrphanedKeyAction(OrphanedKeyAction action);\n \n     /**\n      * The plugin to use for remote commit notification.\n      *\n-     * @since 2.5\n+     * @since 0.2.5\n      */\n     public String getRemoteCommitProvider();\n \n     /**\n      * The plugin to use for remote commit notification.\n      *\n-     * @since 2.5\n+     * @since 0.2.5\n      */\n     public void setRemoteCommitProvider(String remoteCommitProvider);\n \n     /**\n      * Create a remote commit provider from the configured plugin.\n      *\n-     * @since 3.0\n+     * @since 0.3.0\n      */\n     public RemoteCommitProvider newRemoteCommitProviderInstance();\n \n     /**\n      * The remote event manager that manages this configuration's remote\n      * event listeners.\n      *\n-     * @since 3.0\n+     * @since 0.3.0\n      */\n     public RemoteCommitEventManager getRemoteCommitEventManager();\n \n     /**\n      * The remote event manager that manages this configuration's remote\n      * event listeners.\n      *\n-     * @since 3.0\n+     * @since 0.3.0\n      */\n     public void setRemoteCommitEventManager(RemoteCommitEventManager manager);\n \n@@ -494,7 +494,7 @@\n      * transactions.</li>\n      * </ul>\n      *\n-     * @since 2.5\n+     * @since 0.2.5\n      */\n     public String getTransactionMode();\n \n@@ -506,7 +506,7 @@\n      * transactions.</li>\n      * </ul>\n      *\n-     * @since 2.5\n+     * @since 0.2.5\n      */\n     public void setTransactionMode(String mode);\n \n@@ -603,7 +603,7 @@\n      * The metadata repository of managed class information. If no\n      * repository has been set, creates one.\n      *\n-     * @since 3.0\n+     * @since 0.3.0\n      */\n     public MetaDataRepository getMetaDataRepositoryInstance();\n \n@@ -615,7 +615,7 @@\n     /**\n      * The metadata repository of managed class information.\n      *\n-     * @since 3.0\n+     * @since 0.3.0\n      */\n     public void setMetaDataRepository(MetaDataRepository mdRepos);\n \n@@ -795,29 +795,29 @@\n      * These properties provide any additional information needed to\n      * establish non-XA connections.\n      *\n-     * @since 3.0\n+     * @since 0.3.0\n      */\n     public String getConnection2Properties();\n \n     /**\n      * These properties provide any additional information needed to\n      * establish non-XA connections.\n      *\n-     * @since 3.0\n+     * @since 0.3.0\n      */\n     public void setConnection2Properties(String props);\n \n     /**\n      * Configuration properties for the non-XA connection factory.\n      *\n-     * @since 2.5\n+     * @since 0.2.5\n      */\n     public String getConnectionFactory2Properties();\n \n     /**\n      * Configuration properties for the non-XA connection factory.\n      *\n-     * @since 2.5\n+     * @since 0.2.5\n      */\n     public void setConnectionFactory2Properties(String props);\n \n@@ -1044,15 +1044,15 @@\n      * Comma-separated list of fetch group names that will be pre-set for\n      * all new {@link FetchConfiguration}s.\n      *\n-     * @since 2.5\n+     * @since 0.2.5\n      */\n     public String getFetchGroups();\n \n     /**\n      * Comma-separated list of fetch group names that will be pre-set for\n      * all new {@link FetchConfiguration}s.\n      *\n-     * @since 2.5\n+     * @since 0.2.5\n      */\n     public void setFetchGroups(String groups);\n \n@@ -1072,15 +1072,15 @@\n      * Returns whether or not OpenJPA should automatically flush\n      * modifications to the data store before executing queries.\n      *\n-     * @since 2.5\n+     * @since 0.2.5\n      */\n     public String getFlushBeforeQueries();\n \n     /**\n      * Sets whether or not OpenJPA should automatically flush\n      * modifications to the data store before executing queries.\n      *\n-     * @since 2.5\n+     * @since 0.2.5\n      */\n     public void setFlushBeforeQueries(String flush);\n \n@@ -1090,7 +1090,7 @@\n      * {@link QueryFlushModes#FLUSH_WITH_CONNECTION}, as determined\n      * by parsing the string returned by {@link #getFlushBeforeQueries}.\n      *\n-     * @since 2.5\n+     * @since 0.2.5\n      */\n     public int getFlushBeforeQueriesConstant();\n \n@@ -1099,90 +1099,90 @@\n      * {@link QueryFlushModes#FLUSH_FALSE}, or\n      * {@link QueryFlushModes#FLUSH_WITH_CONNECTION}.\n      *\n-     * @since 2.5\n+     * @since 0.2.5\n      */\n     public void setFlushBeforeQueries(int flushBeforeQueries);\n \n     /**\n      * The time to wait for an object lock in milliseconds, or -1 for no\n      * timeout.\n      *\n-     * @since 3.1\n+     * @since 0.3.1\n      */\n     public int getLockTimeout();\n \n     /**\n      * The time to wait for an object lock in milliseconds, or -1 for no\n      * timeout.\n      *\n-     * @since 3.1\n+     * @since 0.3.1\n      */\n     public void setLockTimeout(int timeout);\n \n     /**\n      * Wrapper for JCA usage of {@link #setLockTimeout(int)}.\n      *\n-     * @since 3.1\n+     * @since 0.3.1\n      */\n     public void setLockTimeout(Integer timeout);\n \n     /**\n      * The default read lock level to use during non-optimistic transactions.\n      * Defaults to <code>read</code>.\n      *\n-     * @since 3.1\n+     * @since 0.3.1\n      */\n     public String getReadLockLevel();\n \n     /**\n      * The default read lock level to use during non-optimistic transactions.\n      * Defaults to <code>read</code>.\n      *\n-     * @since 3.1\n+     * @since 0.3.1\n      */\n     public void setReadLockLevel(String level);\n \n     /**\n      * The numeric read lock level.\n      *\n-     * @since 3.1\n+     * @since 0.3.1\n      */\n     public int getReadLockLevelConstant();\n \n     /**\n      * The numeric read lock level.\n      *\n-     * @since 3.1\n+     * @since 0.3.1\n      */\n     public void setReadLockLevel(int level);\n \n     /**\n      * The default write lock level to use during non-optimistic transactions.\n      * Defaults to <code>write</code>.\n      *\n-     * @since 3.1\n+     * @since 0.3.1\n      */\n     public String getWriteLockLevel();\n \n     /**\n      * The default write lock level to use during non-optimistic transactions.\n      * Defaults to <code>write</code>.\n      *\n-     * @since 3.1\n+     * @since 0.3.1\n      */\n     public void setWriteLockLevel(String level);\n \n     /**\n      * The numeric write lock level.\n      *\n-     * @since 3.1\n+     * @since 0.3.1\n      */\n     public int getWriteLockLevelConstant();\n \n     /**\n      * The numeric write lock level.\n      *\n-     * @since 3.1\n+     * @since 0.3.1\n      */\n     public void setWriteLockLevel(int level);\n \n@@ -1222,7 +1222,7 @@\n      * the duration of the data store commit process.</li>\n      * </ul>\n      *\n-     * @since 2.5\n+     * @since 0.2.5\n      */\n     public String getConnectionRetainMode();\n \n@@ -1242,7 +1242,7 @@\n      * the duration of the data store commit process.</li>\n      * </ul>\n      *\n-     * @since 2.5\n+     * @since 0.2.5\n      */\n     public void setConnectionRetainMode(String mode);\n \n@@ -1320,7 +1320,7 @@\n      * Should only be set to true in complex classloader topologies.\n      * Defaults to <code>false</code>.\n      *\n-     * @since 3.2.3\n+     * @since 0.3.2.3\n      */\n     public boolean getRetryClassRegistration();\n \n@@ -1330,14 +1330,14 @@\n      * Should only be set to true in complex classloader topologies.\n \t * Defaults to <code>false</code>.\n \t *\n-\t * @since 3.2.3\n+\t * @since 0.3.2.3\n \t */\n \tpublic void setRetryClassRegistration (boolean warn);\n \n \t/**\n \t * Wrapper for JCA usage of {@link #setRetryClassRegistration(boolean)}.\n \t *\n-\t * @since 3.2.3\n+\t * @since 0.3.2.3\n \t */\n \tpublic void setRetryClassRegistration (Boolean warn);\n "},{"sha":"626040e353ec78e258657e5ea96f913ab0cf5045","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/conf/ProductDerivation.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/conf/ProductDerivation.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/conf/ProductDerivation.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/conf/ProductDerivation.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -26,7 +26,7 @@\n  * derivations are evaluated is determined by the specificity of the\n  * derivation type.\n  *\n- * @since 4.1\n+ * @since 0.4.1\n  */\n public interface ProductDerivation {\n "},{"sha":"eb2a6e19e2ec8adfacfbd1bd9d6129d31d188aad","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/datacache/ConcurrentDataCache.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/ConcurrentDataCache.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/ConcurrentDataCache.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/ConcurrentDataCache.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -26,7 +26,7 @@\n  * return a cached instance if that instance is being transferred between\n  * internal datastructures.\n  *\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public class ConcurrentDataCache\n     extends AbstractDataCache"},{"sha":"a9081c021755b7253844452d7b405a21426d27a1","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/datacache/ConcurrentQueryCache.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/ConcurrentQueryCache.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/ConcurrentQueryCache.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/ConcurrentQueryCache.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -27,7 +27,7 @@\n  * retur a cached instance if that instance is being transferred between\n  * internal datastructures.\n  *\n- * @since 4.1\n+ * @since 0.4.1\n  */\n public class ConcurrentQueryCache\n     extends AbstractQueryCache"},{"sha":"87f558391240fc96574419515fd723a01397c863","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCache.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCache.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCache.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCache.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -45,14 +45,14 @@\n      * Returns a string name that can be used by end-user-visible\n      * code to identify this cache.\n      *\n-     * @since 2.5.0\n+     * @since 0.2.5.0\n      */\n     public String getName();\n \n     /**\n      * Sets a string name to be used to identify this cache to end-user needs.\n      *\n-     * @since 2.5.0\n+     * @since 0.2.5.0\n      */\n     public void setName(String name);\n \n@@ -240,14 +240,14 @@ public void commit(Collection additions, Collection newUpdates,\n     /**\n      * Add a new expiration event listener to this cache.\n      *\n-     * @since 2.5.0\n+     * @since 0.2.5.0\n      */\n     public void addExpirationListener(ExpirationListener listen);\n \n     /**\n      * Remove an expiration event listener from this cache.\n      *\n-     * @since 2.5.0\n+     * @since 0.2.5.0\n      */\n     public boolean removeExpirationListener(ExpirationListener listen);\n "},{"sha":"f2626f23f795c2428ba44098d445ff7a8e0acd05","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCachePCDataGenerator.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCachePCDataGenerator.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCachePCDataGenerator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCachePCDataGenerator.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -41,7 +41,7 @@\n  * proper timed behavior is added.\n  *\n  * @author Steve Kim\n- * @since 3.3.0\n+ * @since 0.3.3.0\n  */\n public class DataCachePCDataGenerator extends PCDataGenerator {\n "},{"sha":"508bd30117609a56539f2c9c60bef987d0dd136b","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DelegatingQueryCache.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DelegatingQueryCache.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DelegatingQueryCache.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DelegatingQueryCache.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -24,7 +24,7 @@\n  * it returns default values or all methods.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  * @nojavadoc\n  */\n public class DelegatingQueryCache"},{"sha":"48e08eec82bfbb8bb406d987016eca355ffa22f2","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/datacache/ExpirationEvent.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/ExpirationEvent.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/ExpirationEvent.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/ExpirationEvent.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -22,7 +22,7 @@\n  * or an expiration of a result list from the query cache.\n  * The source of the event will be the cache.\n  *\n- * @since 3.0\n+ * @since 0.3.0\n  * @author Abe White\n  */\n public class ExpirationEvent"},{"sha":"72cbf6ad6f7d505f67dc0df6acfef723d449a563","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/datacache/ExpirationListener.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/ExpirationListener.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/ExpirationListener.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/ExpirationListener.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -19,7 +19,7 @@\n  * An entity that wishes to be notified when cache keys expire.\n  *\n  * @author Abe White\n- * @since 3.0\n+ * @since 0.3.0\n  */\n public interface ExpirationListener {\n "},{"sha":"4510343892219caad7a2498cc69d2892fe2fdc95","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/datacache/QueryCache.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/QueryCache.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/QueryCache.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/QueryCache.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -26,7 +26,7 @@\n  * {@link org.apache.openjpa.lib.conf.Configurable} to receive a handle to the\n  * system configuration on construction.\n  *\n- * @since 2.5\n+ * @since 0.2.5\n  * @author Patrick Linskey\n  */\n public interface QueryCache\n@@ -36,7 +36,7 @@\n      * Initialize any resources associated with the given\n      * {@link DataCacheManager}.\n      *\n-     * @since 4.1\n+     * @since 0.4.1\n      */\n     public void initialize(DataCacheManager manager);\n \n@@ -117,14 +117,14 @@\n     /**\n      * Add a new types event listener to this cache.\n      *\n-     * @since 3.3\n+     * @since 0.3.3\n      */\n     public void addTypesChangedListener(TypesChangedListener listen);\n \n     /**\n      * Remove an types event listener from this cache.\n      *\n-     * @since 3.3\n+     * @since 0.3.3\n      */\n     public boolean removeTypesChangedListener(TypesChangedListener listen);\n "},{"sha":"ccf0699acb3582aeb38aef22dd8ca5019594bdaf","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/datacache/QueryCacheStoreQuery.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/QueryCacheStoreQuery.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/QueryCacheStoreQuery.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/QueryCacheStoreQuery.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -49,7 +49,7 @@\n  * the query, and can determine whether or not the query has been dirtied.\n  *\n  * @author Patrick Linskey\n- * @since 2.5.0\n+ * @since 0.2.5.0\n  */\n public class QueryCacheStoreQuery\n     implements StoreQuery {"},{"sha":"ac088f946d867022ac44fa7d89789d200d4746ca","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/datacache/TypesChangedListener.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/TypesChangedListener.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/TypesChangedListener.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/TypesChangedListener.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -19,7 +19,7 @@\n  * An entity that wishes to be notified when types change.\n  *\n  * @author Abe White\n- * @since 3.0\n+ * @since 0.3.0\n  */\n public interface TypesChangedListener {\n "},{"sha":"bd9c21f91a5f438347a11fda400041036240c28c","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/enhance/CodeGenerator.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/CodeGenerator.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/CodeGenerator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/CodeGenerator.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -37,7 +37,7 @@\n  *\n  * @author Abe White\n  * @author Stephen Kim\n- * @since 3.0\n+ * @since 0.3.0\n  * @nojavadoc\n  */\n public class CodeGenerator {"},{"sha":"95bcf2028f3197d3c3a583fc1b3514b2ea81c2f9","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/enhance/DynamicStorage.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/DynamicStorage.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/DynamicStorage.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/DynamicStorage.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -22,7 +22,7 @@\n  *\n  * @author Steve Kim\n  * @nojavadoc\n- * @since 3.2.0\n+ * @since 0.3.2.0\n  */\n public interface DynamicStorage {\n "},{"sha":"6754330f3d5b621135de1263190f52546869759d","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/enhance/DynamicStorageGenerator.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/DynamicStorageGenerator.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/DynamicStorageGenerator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/DynamicStorageGenerator.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -38,7 +38,7 @@\n  *\n  * @author Steve Kim\n  * @nojavadoc\n- * @since 3.2.0\n+ * @since 0.3.2.0\n  */\n public class DynamicStorageGenerator {\n "},{"sha":"3e97b090c311fc7c819eb052978d0ac093f02b8b","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCDataGenerator.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCDataGenerator.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCDataGenerator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCDataGenerator.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -52,7 +52,7 @@\n  *\n  * @author Steve Kim\n  * @nojavadoc\n- * @since 3.2\n+ * @since 0.3.2\n  */\n public class PCDataGenerator\n     extends DynamicStorageGenerator {"},{"sha":"dd4bb0523b0efef85ca150e63996d49cf1f0f969","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCRegistry.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCRegistry.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCRegistry.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCRegistry.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -27,7 +27,7 @@\n /**\n  * Tracks registered persistence-capable classes.\n  *\n- * @since 4.0\n+ * @since 0.4.0\n  * @author Abe White\n  */\n public class PCRegistry {"},{"sha":"e0d14a6d48931e3522cfae1ffae15ca3006d2fa1","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/event/AbstractRemoteCommitProvider.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/AbstractRemoteCommitProvider.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/AbstractRemoteCommitProvider.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/event/AbstractRemoteCommitProvider.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -28,7 +28,7 @@\n  * to the event manager and log.\n  *\n  * @author Patrick Linskey\n- * @since 2.5.0\n+ * @since 0.2.5.0\n  */\n public abstract class AbstractRemoteCommitProvider\n     implements RemoteCommitProvider, Configurable {"},{"sha":"b5c76b16dabc7b9fc3db0ac5d4424f199633dfd6","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/event/AbstractTransactionListener.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/AbstractTransactionListener.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/AbstractTransactionListener.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/event/AbstractTransactionListener.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -20,7 +20,7 @@\n  * that provides no-op implementations of all methods.\n  *\n  * @author Abe White\n- * @since 3.0\n+ * @since 0.3.0\n  */\n public abstract class AbstractTransactionListener\n     implements TransactionListener {"},{"sha":"d0fd9c08d970dfcbae9c0cccc53c225fa6a5aac7","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/event/BeginTransactionListener.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/BeginTransactionListener.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/BeginTransactionListener.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/event/BeginTransactionListener.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -20,7 +20,7 @@\n  *\n  * @author Patrick Linskey\n  * @author Abe White\n- * @since 2.5.0\n+ * @since 0.2.5.0\n  */\n public interface BeginTransactionListener {\n "},{"sha":"48699797b73443b5f260d5d9a5cd2cd63873677e","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/event/CallbackModes.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/CallbackModes.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/CallbackModes.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/event/CallbackModes.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -19,7 +19,7 @@\n  * Callback handling constants.\n  *\n  * @author Steve Kim\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public interface CallbackModes {\n "},{"sha":"112c2e62e9d0aefe549578bdf3025bd1dc6beb37","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/event/EndTransactionListener.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/EndTransactionListener.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/EndTransactionListener.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/event/EndTransactionListener.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -20,7 +20,7 @@\n  *\n  * @author Patrick Linskey\n  * @author Abe White\n- * @since 2.5.0\n+ * @since 0.2.5.0\n  */\n public interface EndTransactionListener {\n "},{"sha":"13a8a8b19b6036a25de464231b6bb382bcfa6568","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/event/ExceptionOrphanedKeyAction.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/ExceptionOrphanedKeyAction.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/ExceptionOrphanedKeyAction.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/event/ExceptionOrphanedKeyAction.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -24,7 +24,7 @@\n  * Throw a {@link ObjectNotFoundException} when an orphaned key is discovered.\n  *\n  * @author Abe White\n- * @since 3.2.2\n+ * @since 0.3.2.2\n  */\n public class ExceptionOrphanedKeyAction\n     implements OrphanedKeyAction {"},{"sha":"77c87860c8c1bad5166270225367f1921ab4c993","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/event/FlushTransactionListener.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/FlushTransactionListener.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/FlushTransactionListener.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/event/FlushTransactionListener.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -20,7 +20,7 @@\n  *\n  * @author Patrick Linskey\n  * @author Abe White\n- * @since 2.5.0\n+ * @since 0.2.5.0\n  */\n public interface FlushTransactionListener {\n "},{"sha":"f3c856734a344abae26318cb0494d9684a4eef96","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/event/JMSRemoteCommitProvider.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/JMSRemoteCommitProvider.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/JMSRemoteCommitProvider.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/event/JMSRemoteCommitProvider.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -45,7 +45,7 @@\n  * other RemoteCommitProviders over a JMS topic.\n  *\n  * @author Patrick Linskey\n- * @since 2.5.0\n+ * @since 0.2.5.0\n  */\n public class JMSRemoteCommitProvider\n     extends AbstractRemoteCommitProvider"},{"sha":"0a7097e41f2bce8b88fe60a40ecedeee930360d3","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/event/LifecycleEvent.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/LifecycleEvent.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/LifecycleEvent.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/event/LifecycleEvent.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -23,7 +23,7 @@\n  *\n  * @author Steve Kim\n  * @author Abe White\n- * @since 3.3\n+ * @since 0.3.3\n  */\n public class LifecycleEvent\n     extends EventObject {"},{"sha":"b7e76831bb9a1f6374f522ef97659a35c831050a","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/event/LifecycleEventManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/LifecycleEventManager.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/LifecycleEventManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/event/LifecycleEventManager.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -37,7 +37,7 @@\n  *\n  * @author Steve Kim\n  * @author Abe White\n- * @since 3.3\n+ * @since 0.3.3\n  * @nojavadoc\n  */\n public class LifecycleEventManager"},{"sha":"235de25afd3de0c6a0d27652aa1a3e2b662cb61a","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/event/LogOrphanedKeyAction.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/LogOrphanedKeyAction.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/LogOrphanedKeyAction.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/event/LogOrphanedKeyAction.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -26,7 +26,7 @@\n  * Log a message when an orphaned key is discovered.\n  *\n  * @author Abe White\n- * @since 3.2.2\n+ * @since 0.3.2.2\n  */\n public class LogOrphanedKeyAction\n     implements OrphanedKeyAction {"},{"sha":"7625ab02bcd129beaeb7fdc82ee452405d11c9af","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/event/NoneOrphanedKeyAction.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/NoneOrphanedKeyAction.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/NoneOrphanedKeyAction.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/event/NoneOrphanedKeyAction.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -22,7 +22,7 @@\n  * Does nothing when an orphaned key is discovered.\n  *\n  * @author Abe White\n- * @since 3.2.2\n+ * @since 0.3.2.2\n  */\n public class NoneOrphanedKeyAction\n     implements OrphanedKeyAction {"},{"sha":"8446a4f8ed8bb3847947ad1cc4c571f737e43efd","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/event/OrphanedKeyAction.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/OrphanedKeyAction.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/OrphanedKeyAction.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/event/OrphanedKeyAction.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -22,7 +22,7 @@\n  * Perform an action when OpenJPA detects an orphaned key in the database.\n  *\n  * @author Abe White\n- * @since 3.2.2\n+ * @since 0.3.2.2\n  */\n public interface OrphanedKeyAction {\n "},{"sha":"08fa13e2f66982863210bc30d8deddd9424850fd","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/event/RemoteCommitEvent.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/RemoteCommitEvent.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/RemoteCommitEvent.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/event/RemoteCommitEvent.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -29,7 +29,7 @@\n  * Event type to hold the IDs of additions, updates, and\n  * deletes. This event type is also fully serializable for remote communication.\n  *\n- * @since 3.0\n+ * @since 0.3.0\n  * @author Patrick Linskey\n  * @author Abe White\n  */"},{"sha":"75cce6867811032c738db36196f026eae7c775fe","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/event/RemoteCommitEventManager.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/RemoteCommitEventManager.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/RemoteCommitEventManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/event/RemoteCommitEventManager.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -37,7 +37,7 @@\n  *\n  * @author Patrick Linskey\n  * @author Abe White\n- * @since 3.0\n+ * @since 0.3.0\n  */\n public class RemoteCommitEventManager\n     extends AbstractConcurrentEventManager\n@@ -69,7 +69,7 @@ public boolean areRemoteEventsEnabled() {\n     /**\n      * Return the {@link RemoteCommitProvider} that this manager uses.\n      *\n-     * @since 3.1\n+     * @since 0.3.1\n      */\n     public RemoteCommitProvider getRemoteCommitProvider() {\n         return _provider;"},{"sha":"4eba287c39ca1687a2ae0651926dbd1cea918c22","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/event/RemoteCommitListener.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/RemoteCommitListener.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/RemoteCommitListener.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/event/RemoteCommitListener.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -39,7 +39,7 @@\n  * \n  *\n  * @author Patrick Linskey\n- * @since 2.5.0\n+ * @since 0.2.5.0\n  */\n public interface RemoteCommitListener\n     extends Closeable {"},{"sha":"87026cd9b7573da374f49fdfaba4745e271ccd33","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/event/RemoteCommitProvider.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/RemoteCommitProvider.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/RemoteCommitProvider.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/event/RemoteCommitProvider.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -34,7 +34,7 @@\n  * commits that originated with a local broker.\n  *\n  * @author Patrick Linskey\n- * @since 2.5.0\n+ * @since 0.2.5.0\n  */\n public interface RemoteCommitProvider\n     extends Closeable {"},{"sha":"1832d04817bad994063547683243228e4529a581","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/event/SingleJVMRemoteCommitProvider.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/SingleJVMRemoteCommitProvider.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/SingleJVMRemoteCommitProvider.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/event/SingleJVMRemoteCommitProvider.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -29,7 +29,7 @@\n  * circumstance.\n  *\n  * @author Patrick Linskey\n- * @since 2.5.0\n+ * @since 0.2.5.0\n  */\n public class SingleJVMRemoteCommitProvider\n     extends AbstractRemoteCommitProvider {"},{"sha":"6d7767271af3bb7419e93cb6735749309cae4c75","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/event/TCPRemoteCommitProvider.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/TCPRemoteCommitProvider.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/TCPRemoteCommitProvider.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/event/TCPRemoteCommitProvider.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -56,7 +56,7 @@\n  *\n  * @author Brian Leair\n  * @author Patrick Linskey\n- * @since 2.5.0\n+ * @since 0.2.5.0\n  */\n public class TCPRemoteCommitProvider\n     extends AbstractRemoteCommitProvider"},{"sha":"aadf53c3b79293a3a536a0a22f0171dc22ccd04b","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/event/TransactionEvent.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/TransactionEvent.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/TransactionEvent.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/event/TransactionEvent.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n  * A transactional event. The event source is the {@link Broker} whose\n  * transaction state changed.\n  *\n- * @since 3.0\n+ * @since 0.3.0\n  * @author Abe White\n  */\n public class TransactionEvent"},{"sha":"675269083947bc8a1b9ca7ed0e3282ae49787431","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/event/TransactionEventManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/TransactionEventManager.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/TransactionEventManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/event/TransactionEventManager.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -23,7 +23,7 @@\n  *\n  * @author Patrick Linskey\n  * @author Abe White\n- * @since 3.0\n+ * @since 0.3.0\n  * @nojavadoc\n  */\n public class TransactionEventManager"},{"sha":"c71377451905a81679f0a5049b0e325a60f5942d","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/event/TransactionListener.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/TransactionListener.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/event/TransactionListener.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/event/TransactionListener.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -20,7 +20,7 @@\n  *\n  * @author Patrick Linskey\n  * @author Abe White\n- * @since 2.5.0\n+ * @since 0.2.5.0\n  */\n public interface TransactionListener\n     extends BeginTransactionListener, FlushTransactionListener,"},{"sha":"9e31d02d0838b772eb66f72cf725512c286b6f8a","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractStoreQuery.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractStoreQuery.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractStoreQuery.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractStoreQuery.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -28,7 +28,7 @@\n  * Abstract {@link StoreQuery} that implements most methods as no-ops.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public abstract class AbstractStoreQuery\n     implements StoreQuery {"},{"sha":"fd1c1bf99f3883720d71cebba5753c9a9c8f9973","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AutoClear.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AutoClear.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AutoClear.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AutoClear.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -19,7 +19,7 @@\n  * State clearing constants.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public interface AutoClear {\n "},{"sha":"7cce30882aadfcd3de78fc13eced3217b4108259","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/Bootstrap.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/Bootstrap.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/Bootstrap.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/Bootstrap.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -30,7 +30,7 @@\n /**\n  * Helper methods for acquiring {@link BrokerFactory} objects\n  *\n- * @since 4.0.0\n+ * @since 0.4.0.0\n  */\n public class Bootstrap {\n "},{"sha":"b5ba99f1668944e4e5f91b2dd51f5d9ea32d0090","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/Broker.java","status":"modified","additions":18,"deletions":18,"changes":36,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/Broker.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/Broker.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/Broker.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -33,7 +33,7 @@\n  * maintains an independent object cache and an independent transactional\n  * context.\n  *\n- * @since 4.0\n+ * @since 0.4.0\n  * @author Abe White\n  */\n public interface Broker\n@@ -70,7 +70,7 @@ public void setImplicitBehavior(OpCallbacks call,\n     /**\n      * Return the inverse manager in use.\n      *\n-     * @since 3.2\n+     * @since 0.3.2\n      */\n     public InverseManager getInverseManager();\n \n@@ -215,28 +215,28 @@ public void setImplicitBehavior(OpCallbacks call,\n      * Put the specified key-value pair into the map of user objects. Use\n      * a value of null to remove the key.\n      *\n-     * @since 3.2\n+     * @since 0.3.2\n      */\n     public Object putUserObject(Object key, Object val);\n \n     /**\n      * Get the value for the specified key from the map of user objects.\n      *\n-     * @since 3.2\n+     * @since 0.3.2\n      */\n     public Object getUserObject(Object key);\n \n     /**\n      * Register a listener for transaction-related events.\n      *\n-     * @since 2.5\n+     * @since 0.2.5\n      */\n     public void addTransactionListener(Object listener);\n \n     /**\n      * Remove a listener for transaction-related events.\n      *\n-     * @since 2.5\n+     * @since 0.2.5\n      */\n     public void removeTransactionListener(Object listener);\n \n@@ -245,14 +245,14 @@ public void setImplicitBehavior(OpCallbacks call,\n      * classes. If the classes are null, all events will be propagated to\n      * the listener.\n      *\n-     * @since 3.3\n+     * @since 0.3.3\n      */\n     public void addLifecycleListener(Object listener, Class[] classes);\n \n     /**\n      * Remove a listener for lifecycle-related events.\n      *\n-     * @since 3.3\n+     * @since 0.3.3\n      */\n     public void removeLifecycleListener(Object listener);\n \n@@ -290,7 +290,7 @@ public void setImplicitBehavior(OpCallbacks call,\n      *\n      * @see #commit()\n      * @see #begin()\n-     * @since 2.4\n+     * @since 0.2.4\n      */\n     public void commitAndResume();\n \n@@ -302,7 +302,7 @@ public void setImplicitBehavior(OpCallbacks call,\n      *\n      * @see #rollback()\n      * @see #begin()\n-     * @since 2.4\n+     * @since 0.2.4\n      */\n     public void rollbackAndResume();\n \n@@ -351,7 +351,7 @@ public void setImplicitBehavior(OpCallbacks call,\n      * set the rollback only flag on the current transaction if it encounters\n      * an error.\n      *\n-     * @since 2.5\n+     * @since 0.2.5\n      */\n     public void flush();\n \n@@ -361,7 +361,7 @@ public void setImplicitBehavior(OpCallbacks call,\n      * deletion of dependent instances, and instance callbacks.\n      * Transaction listeners are not invoked.\n      *\n-     * @since 3.3\n+     * @since 0.3.3\n      */\n     public void preFlush();\n \n@@ -552,15 +552,15 @@ public void setImplicitBehavior(OpCallbacks call,\n      * @param level the lock level to use\n      * @param timeout the number of milliseconds to wait for the lock before\n      * giving up, or -1 for no limit\n-     * @since 3.1\n+     * @since 0.3.1\n      */\n     public void lock(Object pc, int level, int timeout, OpCallbacks call);\n \n     /**\n      * Ensure that the given instance is locked at the current lock level, as\n      * set in the {@link FetchConfiguration} for the broker.\n      *\n-     * @since 3.1\n+     * @since 0.3.1\n      */\n     public void lock(Object pc, OpCallbacks call);\n \n@@ -571,7 +571,7 @@ public void setImplicitBehavior(OpCallbacks call,\n      * @param level the lock level to use\n      * @param timeout the number of milliseconds to wait for the lock before\n      * giving up, or -1 for no limit\n-     * @since 3.1\n+     * @since 0.3.1\n      */\n     public void lockAll(Collection objs, int level, int timeout,\n         OpCallbacks call);\n@@ -580,7 +580,7 @@ public void lockAll(Collection objs, int level, int timeout,\n      * Ensure that the given instances are locked at the current lock level, as\n      * set in the {@link FetchConfiguration} for the broker.\n      *\n-     * @since 3.1\n+     * @since 0.3.1\n      */\n     public void lockAll(Collection objs, OpCallbacks call);\n \n@@ -590,14 +590,14 @@ public void lockAll(Collection objs, int level, int timeout,\n      * be set.\n      *\n      * @return true if any statements were cancelled, false otherwise\n-     * @since 3.1\n+     * @since 0.3.1\n      */\n     public boolean cancelAll();\n \n     /**\n      * Mark the given class as dirty within the current transaction.\n      *\n-     * @since 3.0\n+     * @since 0.3.0\n      */\n     public void dirtyType(Class cls);\n "},{"sha":"f1fdb8bd464302c24103debc03a637375d88d1d1","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerFactory.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerFactory.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerFactory.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n  * Factory for {@link Broker} instances.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public interface BrokerFactory\n     extends Serializable, Closeable {\n@@ -68,14 +68,14 @@ public Broker newBroker(String user, String pass, boolean managed,\n      * classes. If the classes are null, all events will be propagated to\n      * the listener. The listener will be passed on to all new brokers.\n      *\n-     * @since 3.3\n+     * @since 0.3.3\n      */\n     public void addLifecycleListener(Object listener, Class[] classes);\n \n     /**\n      * Remove a listener for lifecycle-related events.\n      *\n-     * @since 3.3\n+     * @since 0.3.3\n      */\n     public void removeLifecycleListener(Object listener);\n "},{"sha":"729e22f2ea0b016d5ddd8de0df6eb30e5e574a30","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -1783,7 +1783,7 @@ private void flushSafe(int reason) {\n      *\n      * @param reason one of {@link #FLUSH_INC}, {@link #FLUSH_COMMIT},\n      * {@link #FLUSH_ROLLBACK}, or {@link #FLUSH_LOGICAL}\n-     * @since 2.5\n+     * @since 0.2.5\n      */\n     protected void flush(int reason) {\n         // this will enlist proxied states as necessary so we know whether we"},{"sha":"0d817ccc8924fd35f24106a7f5ef5f0a5ffd1102","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/ConnectionRetainModes.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/ConnectionRetainModes.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/ConnectionRetainModes.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/ConnectionRetainModes.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -19,7 +19,7 @@\n  * Connection retain mode constants.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public interface ConnectionRetainModes {\n "},{"sha":"cb59ed5c023e795b0550064f33513aaf5755cfdd","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DelegatingBroker.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DelegatingBroker.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DelegatingBroker.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DelegatingBroker.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -41,7 +41,7 @@\n  * Delegating broker that can also perform exception translation\n  * for use in facades.\n  *\n- * @since 4.0\n+ * @since 0.4.0\n  * @author Abe White\n  * @nojavadoc\n  */"},{"sha":"9aac60d75fb86ee1cd8573a5b81d7656de124059","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DelegatingBrokerFactory.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DelegatingBrokerFactory.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DelegatingBrokerFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DelegatingBrokerFactory.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -29,7 +29,7 @@\n  * Delegating broker factory that can also perform exception translation\n  * for use in facades.\n  *\n- * @since 4.0\n+ * @since 0.4.0\n  * @author Abe White\n  * @nojavadoc\n  */"},{"sha":"3d9081f906479b32bcc5afe9b2356f4d0937374a","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DelegatingExtent.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DelegatingExtent.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DelegatingExtent.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DelegatingExtent.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -29,7 +29,7 @@\n  * Delegating extent that also can perform exception translation for use\n  * in facades.\n  *\n- * @since 4.0\n+ * @since 0.4.0\n  * @author Abe White\n  * @nojavadoc\n  */"},{"sha":"0dd3ec9a3db0976cdef26ee4f7faa083b454f342","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DelegatingQuery.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DelegatingQuery.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DelegatingQuery.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DelegatingQuery.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -28,7 +28,7 @@\n  * Delegating query that can also perform exception translation\n  * for use in facades.\n  *\n- * @since 4.0\n+ * @since 0.4.0\n  * @author Abe White\n  * @nojavadoc\n  */"},{"sha":"13037f548345e067d7d41710650c87e5b9695224","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DelegatingResultList.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DelegatingResultList.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DelegatingResultList.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DelegatingResultList.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -28,7 +28,7 @@\n  * Delegating result list that can also perform exception translation\n  * for use in facades.\n  *\n- * @since 4.0\n+ * @since 0.4.0\n  * @author Marc Prud'hommeaux\n  * @nojavadoc\n  */"},{"sha":"6b58910a3d2c72a16358f21b9a1b262717d660bc","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DetachState.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DetachState.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DetachState.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DetachState.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -19,7 +19,7 @@\n  * Constants for which fields to include in the detach graph.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public interface DetachState {\n "},{"sha":"d7c3df426154efa8f8f506f87891a466376f2f8c","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/FetchConfiguration.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/FetchConfiguration.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/FetchConfiguration.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/FetchConfiguration.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -27,7 +27,7 @@\n  * Allows configuration and optimization of how objects are loaded from\n  * the data store.\n  *\n- * @since 3.0\n+ * @since 0.3.0\n  * @author Abe White\n  * @author Pinaki Poddar\n  */\n@@ -213,43 +213,43 @@\n      * The number of milliseconds to wait for an object lock, or -1 for no\n      * limit.\n      *\n-     * @since 3.1\n+     * @since 0.3.1\n      */\n     public int getLockTimeout();\n \n     /**\n      * The number of milliseconds to wait for an object lock, or -1 for no\n      * limit.\n      *\n-     * @since 3.1\n+     * @since 0.3.1\n      */\n     public FetchConfiguration setLockTimeout(int timeout);\n \n     /**\n      * The lock level to use for locking loaded objects.\n      *\n-     * @since 3.1\n+     * @since 0.3.1\n      */\n     public int getReadLockLevel();\n \n     /**\n      * The lock level to use for locking loaded objects.\n      *\n-     * @since 3.1\n+     * @since 0.3.1\n      */\n     public FetchConfiguration setReadLockLevel(int level);\n \n     /**\n      * The lock level to use for locking dirtied objects.\n      *\n-     * @since 3.1\n+     * @since 0.3.1\n      */\n     public int getWriteLockLevel();\n \n     /**\n      * The lock level to use for locking dirtied objects.\n      *\n-     * @since 3.1\n+     * @since 0.3.1\n      */\n     public FetchConfiguration setWriteLockLevel(int level);\n \n@@ -264,7 +264,7 @@\n      *\n      * @param name the name of the hint\n      * @param value the value of the hint\n-     * @since 4.0\n+     * @since 0.4.0\n      */\n     public void setHint(String name, Object value);\n \n@@ -273,7 +273,7 @@\n      * is not specified.\n      *\n \t * @param name the hint name\n-\t * @since 4.0\n+\t * @since 0.4.0\n \t */\n \tpublic Object getHint (String name);\n \n@@ -311,7 +311,7 @@\n      * Affirms if the given field requires to be fetched in the context\n      * of current fetch operation.\n      *\n-     * @since 4.1\n+     * @since 0.4.1\n      */\n     public boolean requiresFetch(FieldMetaData fm);\n     \n@@ -320,7 +320,7 @@\n      * state.\n      * \n      * @return a new configuration state resulting out of traversal\n-     * @since 4.1\n+     * @since 0.4.1\n      */\n     public FetchConfiguration traverse(FieldMetaData fm);\n }"},{"sha":"087ae99fa57b655759ed29e54752309d1daea056","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/FetchConfigurationImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/FetchConfigurationImpl.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/FetchConfigurationImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/FetchConfigurationImpl.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -47,7 +47,7 @@\n  * Allows configuration and optimization of how objects are loaded from\n  * the data store.\n  *\n- * @since 3.0\n+ * @since 0.3.0\n  * @author Abe White\n  * @author Pinaki Poddar\n  * @nojavadoc"},{"sha":"098b2dbcea387f26abe3a72400c364623720f664","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/InMemorySavepointManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/InMemorySavepointManager.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/InMemorySavepointManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/InMemorySavepointManager.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -19,7 +19,7 @@\n  * A {@link SavepointManager} implementation which stores all data in memory.\n  *\n  * @author Steve Kim\n- * @since 3.4\n+ * @since 0.3.4\n  */\n public class InMemorySavepointManager\n     implements SavepointManager {"},{"sha":"8e1786a4e042d58b496d2a8d98e4e4d12b1de61e","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/LockLevels.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/LockLevels.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/LockLevels.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/LockLevels.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -19,7 +19,7 @@\n  * Standard object lock levels.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public interface LockLevels {\n "},{"sha":"30d45d65e7a963e2fe03725594c0bc5156052bbf","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/OpenJPASavepoint.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/OpenJPASavepoint.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/OpenJPASavepoint.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/OpenJPASavepoint.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n  * back and restored to this point\n  *\n  * @author Steve Kim\n- * @since 3.4\n+ * @since 0.3.4\n  */\n public class OpenJPASavepoint {\n "},{"sha":"3a8adf8c75ecb08b0b819f746005e8c057d65b03","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/OpenJPAStateManager.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/OpenJPAStateManager.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/OpenJPAStateManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/OpenJPAStateManager.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -67,7 +67,7 @@\n      *\n      * @param forType the type for which to create a new instance\n      * @param state the initial state to which to set the instance\n-     * @since 3.1.2\n+     * @since 0.3.1.2\n      */\n     public void initialize(Class forType, PCState state);\n \n@@ -390,7 +390,7 @@\n      * Return the value of the field at the specified index as of the\n      * beginning of the transaction.\n      *\n-     * @since 3.1.1\n+     * @since 0.3.1.1\n      */\n     public Object fetchInitialField(int field);\n \n@@ -482,11 +482,11 @@\n      * current value. This method is invoked by the remote package to\n      * synch a server-side state manager with remote changes. We do not\n      * need to delete dependent instances because they will have been\n-\t * deleted when the field changed on the client side, and those\n-\t * client-side deletes will be transmitted independently.\n-\t *\n-\t * @since\t3.1\n-\t */\n-\tpublic void setRemote (int field, Object value);\n+     * deleted when the field changed on the client side, and those\n+     * client-side deletes will be transmitted independently.\n+     *\n+     * @since 0.3.1\n+     */\n+    public void setRemote (int field, Object value);\n }\n "},{"sha":"f8afe6e61f0f89deab988e9ae1a305d73b39ce47","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/Query.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/Query.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/Query.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/Query.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n /**\n  * OpenJPA query interface.\n  *\n- * @since 3.0\n+ * @since 0.3.0\n  * @author Patrick Linskey\n  * @author Abe White\n  */\n@@ -167,7 +167,7 @@\n      * typically be in the native query language of the database (e.g., SQL).\n      *\n      * @param params the named parameter map for the query invocation\n-     * @since 3.2\n+     * @since 0.3.2\n      */\n     public String[] getDataStoreActions(Map params);\n "},{"sha":"ef95a60cd80b854b9d84b07a58a4529aebfede4d","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryContext.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryContext.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryContext.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryContext.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -29,7 +29,7 @@\n  * A query execution context.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public interface QueryContext {\n \n@@ -54,7 +54,7 @@\n      * Returns the operation that this query will be expected to perform.\n      *\n      * @see QueryOperations\n-     * @since 4.0\n+     * @since 0.4.0\n      */\n     public int getOperation();\n \n@@ -110,7 +110,7 @@\n      * result, rather than a collection. The execute method will return null\n      * if the query result size is 0.\n      *\n-     * @since 3.0\n+     * @since 0.3.0\n      */\n     public void setUnique(boolean unique);\n \n@@ -139,7 +139,7 @@\n     /**\n      * Specify the type of object in which the result of evaluating this query.\n      *\n-     * @since 3.0\n+     * @since 0.3.0\n      */\n     public void setResultType(Class cls);\n \n@@ -160,7 +160,7 @@\n      * @param start 0-based inclusive start index\n      * @param end 0-based exclusive end index, or\n      * {@link Long#MAX_VALUE} for no limit\n-     * @since 3.2\n+     * @since 0.3.2\n      */\n     public void setRange(long start, long end);\n "},{"sha":"cafbfdafe4555ca5299b7c7f00753ae18ac1dbcc","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryFlushModes.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryFlushModes.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryFlushModes.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryFlushModes.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -21,7 +21,7 @@\n  * Constants for determining when to flush before queries.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public interface QueryFlushModes {\n "},{"sha":"da0dbd738bf8a24c0bb86d3649087260a04489ac","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryImpl.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryImpl.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -697,7 +697,7 @@ else if (_subclasses)\n      * state changes that would cause the underlying query\n      * representation to change.\n      *\n-     * @since 3.0\n+     * @since 0.3.0\n      */\n     private boolean invalidateCompilation() {\n         if (_compiling)"},{"sha":"a615297b21fb3a2edf8c079d61f9c64b984fbf9a","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryOperations.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryOperations.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryOperations.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryOperations.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -18,7 +18,7 @@\n /**\n  * Query operation constants.\n  *\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public interface QueryOperations {\n "},{"sha":"93f653a4d502dedab88e08008634d4e030c8ab70","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/RestoreState.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/RestoreState.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/RestoreState.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/RestoreState.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -19,7 +19,7 @@\n  * State restore constants.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public interface RestoreState {\n "},{"sha":"b1c8a4a8269408cdca5b73bc5b8ba8348f7be1ce","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SavepointFieldManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SavepointFieldManager.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SavepointFieldManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SavepointFieldManager.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -31,7 +31,7 @@\n  * FieldManager type used to store information for savepoint rollback.\n  *\n  * @author Steve Kim\n- * @since 3.4\n+ * @since 0.3.4\n  */\n class SavepointFieldManager\n     extends ClearFieldManager {"},{"sha":"0f79252562128f0e9ee9ea1b5cdd122d39667733","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SavepointManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SavepointManager.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SavepointManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SavepointManager.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -19,7 +19,7 @@\n  * A manager for handling savepoints.\n  *\n  * @author Steve Kim\n- * @since 3.4\n+ * @since 0.3.4\n  */\n public interface SavepointManager {\n "},{"sha":"e5e30dfcf64812a710086f7774c4d59db6548151","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StoreContext.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StoreContext.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StoreContext.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StoreContext.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n /**\n  * Represents a set of managed objects and their environment.\n  *\n- * @since 4.0\n+ * @since 0.4.0\n  * @author Abe White\n  */\n public interface StoreContext {\n@@ -209,23 +209,23 @@ public OpenJPAStateManager embed(Object obj, Object id,\n      * Return the set of classes that have been made persistent in the current\n      * transaction.\n      *\n-     * @since 3.4\n+     * @since 0.3.4\n      */\n     public Collection getPersistedTypes();\n \n     /**\n      * Return the set of classes that have been deleted in the current\n      * transaction.\n      *\n-     * @since 3.4\n+     * @since 0.3.4\n      */\n     public Collection getDeletedTypes();\n \n     /**\n      * Return the set of classes for objects that have been modified\n      * in the current transaction.\n      *\n-     * @since 3.4\n+     * @since 0.3.4\n      */\n     public Collection getUpdatedTypes();\n \n@@ -356,23 +356,23 @@ public void transactionalAll(Collection objs, boolean updateVersion,\n      * Whether objects accessed during this transaction will be added to the\n      * store cache. Defaults to true.\n      *\n-     * @since 3.4\n+     * @since 0.3.4\n      */\n     public boolean getPopulateDataCache();\n \n     /**\n      * Whether to populate the store cache with objects used by this\n      * transaction. Defaults to true.\n      *\n-     * @since 3.4\n+     * @since 0.3.4\n      */\n     public void setPopulateDataCache(boolean cache);\n \n     /**\n      * Whether memory usage is reduced during this transaction at the expense\n      * of possibly more aggressive data cache evictions.\n      *\n-     * @since 3.4\n+     * @since 0.3.4\n      */\n     public boolean isLargeTransaction();\n \n@@ -386,7 +386,7 @@ public void transactionalAll(Collection objs, boolean updateVersion,\n      * mode is that smaller update messages can be used for\n      * {@link org.apache.openjpa.event.RemoteCommitEvent}s. Defaults to false.\n      *\n-     * @since 3.4\n+     * @since 0.3.4\n      */\n     public void setLargeTransaction(boolean largeTransaction);\n "},{"sha":"376aff12fdb981415451c5323354d25ae4265a8c","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StoreManager.java","status":"modified","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StoreManager.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StoreManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StoreManager.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -77,7 +77,7 @@\n      * On commit, an exception must be thrown on any attempt to overwrite\n      * data for an instance with an older version.\n      *\n-     * @since 2.5\n+     * @since 0.2.5\n      */\n     public void begin();\n \n@@ -218,7 +218,7 @@ public Collection loadAll(Collection sms, PCState state, int load,\n      * lifecycle state. The store manager is not required to do anything in\n      * this method, but some back ends may need to.\n      *\n-     * @since 3.0\n+     * @since 0.3.0\n      */\n     public void beforeStateChange(OpenJPAStateManager sm, PCState fromState,\n         PCState toState);\n@@ -259,7 +259,7 @@ public void beforeStateChange(OpenJPAStateManager sm, PCState fromState,\n      * @see org.apache.openjpa.util.ImplHelper#generateFieldValue\n      * @see org.apache.openjpa.util.ImplHelper#generateIdentityValue\n      * @see org.apache.openjpa.util.ApplicationIds#assign()\n-     * @since 3.3\n+     * @since 0.3.3\n      */\n     public boolean assignObjectId(OpenJPAStateManager sm, boolean preFlush);\n \n@@ -274,7 +274,7 @@ public void beforeStateChange(OpenJPAStateManager sm, PCState fromState,\n      * system as part of pre-flush activities, and can\n      * be ignored if it is more efficient to assign within {@link #flush}\n      * @see org.apache.openjpa.util.ImplHelper#generateFieldValue\n-     * @since 4.0\n+     * @since 0.4.0\n      */\n     public boolean assignField(OpenJPAStateManager sm, int field,\n         boolean preFlush);\n@@ -283,7 +283,7 @@ public boolean assignField(OpenJPAStateManager sm, int field,\n      * Return the persistent class for the given data store identity value.\n      * If the given value is not a datastore identity object, return null.\n      *\n-     * @since 3.0\n+     * @since 0.3.0\n      */\n     public Class getManagedType(Object oid);\n \n@@ -333,7 +333,7 @@ public boolean assignField(OpenJPAStateManager sm, int field,\n      * Cancel all pending data store statements.\n      *\n      * @return true if any statements cancelled, false otherwise\n-     * @since 3.1\n+     * @since 0.3.1\n      */\n     public boolean cancelAll();\n \n@@ -395,7 +395,7 @@ public ResultObjectProvider executeExtent(ClassMetaData meta,\n      * If the identity strategy cannot be represented as a sequence, return\n      * null.\n      *\n-     * @since 4.0\n+     * @since 0.4.0\n      */\n     public Seq getDataStoreIdSequence(ClassMetaData forClass);\n \n@@ -410,14 +410,14 @@ public ResultObjectProvider executeExtent(ClassMetaData meta,\n      * </ul> If the value strategy cannot be represented as a sequence, return\n      * null.\n      *\n-     * @since 4.0\n+     * @since 0.4.0\n      */\n     public Seq getValueSequence(FieldMetaData forField);\n \n     /**\n      * Free any resources this store manager is using.\n-\t *\n-\t * @since\t2.5\n-\t */\n-\tpublic void close ();\n+     *\n+     * @since 0.2.5\n+     */\n+    public void close ();\n }"},{"sha":"9fb13f7070680509f592bc672fb8cac6fc8148e4","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StoreQuery.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StoreQuery.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StoreQuery.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StoreQuery.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -33,7 +33,7 @@\n  * {@link ExpressionStoreManagerQuery}.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public interface StoreQuery\n     extends QueryOperations, Serializable {"},{"sha":"08e4ba946aa2ef25248e38b5e4413265448662c4","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/ExpressionFactory.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/ExpressionFactory.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/ExpressionFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/ExpressionFactory.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -373,29 +373,29 @@ public Value newExtension(FilterListener listener, Value target,\n     /**\n      * Return an expression representing the given condition.\n      *\n-     * @since 4.0.0\n+     * @since 0.4.0.0\n      */\n     public Value any(Value target);\n \n     /**\n      * Return an expression representing the given condition.\n      *\n-     * @since 4.0.0\n+     * @since 0.4.0.0\n      */\n     public Value all(Value target);\n \n     /**\n      * Return an expression representing the given condition.\n      *\n-     * @since 4.0.0\n+     * @since 0.4.0.0\n      */\n     public Value size(Value target);\n \n     /**\n      * Return distinct values of the given value. This is typically used\n      * within aggregates, for example: max(distinct(path))\n \t *\n-\t * @since 4.0.0\n+\t * @since 0.4.0.0\n \t */\n \tpublic Value distinct (Value obj);\n "},{"sha":"740f0c132f6d139fc1278f596aab5ae51f7f45f4","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/QueryExpressions.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/QueryExpressions.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/QueryExpressions.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/QueryExpressions.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -29,7 +29,7 @@\n  * Struct to hold the state of a parsed expression query.\n  *\n  * @author Abe White\n- * @since 3.2\n+ * @since 0.3.2\n  * @nojavadoc\n  */\n public class QueryExpressions {"},{"sha":"6037a7db4c2d8ee06fc31a026bce732deacae5c4","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/Subquery.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/Subquery.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/Subquery.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/Subquery.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -19,7 +19,7 @@\n  * Query value representing a subquery.\n  *\n  * @author Abe White\n- * @since 3.2\n+ * @since 0.3.2\n  */\n public interface Subquery\n     extends Value {"},{"sha":"fc47e3fedb9bea242d16fd5460e438869f71674c","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/AbstractCFMetaDataFactory.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/meta/AbstractCFMetaDataFactory.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/meta/AbstractCFMetaDataFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/AbstractCFMetaDataFactory.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -53,7 +53,7 @@\n  * in the common fomat.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public abstract class AbstractCFMetaDataFactory\n     extends AbstractMetaDataFactory {"},{"sha":"476278f88c8bb9654dd36e27f40bb06745f8ba0c","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/Extensions.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/meta/Extensions.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/meta/Extensions.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/Extensions.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -301,7 +301,7 @@ protected void copy(Extensions exts) {\n      * Helper method to issue warnings for any extensions that we\n      * recognize but do not use.\n      *\n-     * @since 3.1.3\n+     * @since 0.3.1.3\n      */\n     public void validateExtensionKeys() {\n         if (_exts == null || _exts.isEmpty())\n@@ -365,7 +365,7 @@ public void validateExtensionKeys() {\n      * method to include both the known extensions of its superclass as well\n      * as its own extension keys.\n      *\n-     * @since 3.1.3\n+     * @since 0.3.1.3\n      */\n     protected void addExtensionKeys(Collection exts) {\n         // no extensions by default"},{"sha":"95443d93ef429839940948b2086ca863a2458558","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataModes.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataModes.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataModes.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataModes.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -20,7 +20,7 @@\n  * These constants can be used as bit flags.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public interface MetaDataModes {\n "},{"sha":"0dd1276babe8671b29acf895992b74b1942d0ffa","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataRepository.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataRepository.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataRepository.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataRepository.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -48,7 +48,7 @@\n /**\n  * Repository of and factory for persistent metadata.\n  *\n- * @since 3.0\n+ * @since 0.3.0\n  * @author Abe White\n  * @author Steve Kim (query metadata)\n  */"},{"sha":"5b8e88d9569be0f7e5dc83c04c486d71d195660b","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataTool.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataTool.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataTool.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataTool.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -38,7 +38,7 @@\n /**\n  * Tool for generating default metadata.\n  *\n- * @since 3.0\n+ * @since 0.3.0\n  * @author Abe White\n  */\n public class MetaDataTool"},{"sha":"698c6b0c2d71256a01e31383cf683546a61a72c0","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/SequenceMetaData.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/meta/SequenceMetaData.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/meta/SequenceMetaData.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/SequenceMetaData.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -33,7 +33,7 @@\n  * Metadata about a named sequence.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public class SequenceMetaData\n     implements SourceTracker, MetaDataContext, Closeable, Commentable {"},{"sha":"42a8034fdbd6f36284812d60a3aebbfe31cac4fb","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/UpdateStrategies.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/meta/UpdateStrategies.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/meta/UpdateStrategies.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/UpdateStrategies.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n  * Strategies for persistent value updates.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public class UpdateStrategies {\n "},{"sha":"bba619c6ea9515bf3450c08409874f4bfe1bbb96","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/ValueMetaData.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ValueMetaData.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ValueMetaData.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ValueMetaData.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -19,7 +19,7 @@\n  * Holds metadata on a value; this could be a field value, key value, or\n  * element value.\n  *\n- * @since 4.0\n+ * @since 0.4.0\n  * @author Abe White\n  */\n public interface ValueMetaData"},{"sha":"9026a1952b40b72d9dd75cb856a54d4af53b65e1","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/ValueStrategies.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ValueStrategies.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ValueStrategies.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ValueStrategies.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -26,7 +26,7 @@\n  * Strategies for persistent value generation.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public class ValueStrategies {\n "},{"sha":"a19c03687fee1f62982fc2eb7201a385dce243f7","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/CacheMap.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/CacheMap.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/CacheMap.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/CacheMap.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -320,7 +320,7 @@ public boolean unpin(Object key) {\n      *\n      * @param value may be null if the value was a soft reference that has\n      * been GCd\n-     * @since 2.5.0\n+     * @since 0.2.5.0\n      */\n     protected void entryRemoved(Object key, Object value, boolean expired) {\n     }"},{"sha":"eae7676783dbf891ddd4797d4e2eec5feb34561c","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/CallbackException.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/CallbackException.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/CallbackException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/CallbackException.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -20,7 +20,7 @@\n /**\n  * Exception type thrown when an error occurs in a callback.\n  *\n- * @since 4.0\n+ * @since 0.4.0\n  * @author Marc Prud'hommeaux\n  */\n public class CallbackException"},{"sha":"eda7c7c186ffdb2d7c3f525fa9c1ee8dfbb670c9","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ClassResolver.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/ClassResolver.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/ClassResolver.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ClassResolver.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -20,7 +20,7 @@\n /**\n  * Interface to customize the loading of classes under OpenJPA.\n  *\n- * @since 3.0\n+ * @since 0.3.0\n  * @author Marc Prud'hommeaux\n  * @author Abe White\n  */"},{"sha":"69efb70feef2fbdb2e1e48f3ba2cfa6c80bc2d1c","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ClassResolverImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/ClassResolverImpl.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/ClassResolverImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ClassResolverImpl.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -20,7 +20,7 @@\n /**\n  * Default class resolver implementation.\n  *\n- * @since 3.0\n+ * @since 0.3.0\n  * @author Abe White\n  */\n public class ClassResolverImpl"},{"sha":"b0c1b79309b8b30324def1a47f45b0289727bbbc","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ExceptionInfo.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/ExceptionInfo.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/ExceptionInfo.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ExceptionInfo.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -20,7 +20,7 @@\n  * exceptions implement this interface.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public interface ExceptionInfo {\n "},{"sha":"93059c9d70ab5f22121b2f5c7e29758051ae9c72","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/Exceptions.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/Exceptions.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/Exceptions.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/Exceptions.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -31,7 +31,7 @@\n  * Utility methods for externalizing and handling exceptions.\n  *\n  * @author Marc Prud'hommeaux\n- * @since 2.5\n+ * @since 0.2.5\n  * @nojavadoc\n  */\n public class Exceptions {"},{"sha":"3b1b8d73ca4a8f9f5f3cb1fd679542505d2b5bff","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ImplHelper.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/ImplHelper.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/ImplHelper.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ImplHelper.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -41,7 +41,7 @@\n /**\n  * Helper for OpenJPA back-ends.\n  *\n- * @since 3.0\n+ * @since 0.3.0\n  * @author Abe White\n  * @nojavadoc\n  */\n@@ -87,7 +87,7 @@ public static Method getSetter(Class cls, String prop) {\n      * to the proper singular method for each state manager.\n      *\n      * @see StoreManager#loadAll\n-     * @since 4.0\n+     * @since 0.4.0\n      */\n     public static Collection loadAll(Collection sms, StoreManager store,\n         PCState state, int load, FetchConfiguration fetch, Object context) {"},{"sha":"5db444406c95dc8ee5e6a1ec508515689862d810","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/InternalException.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/InternalException.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/InternalException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/InternalException.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -21,7 +21,7 @@\n  * Exception type for internal errors.\n  *\n  * @author Abe White\n- * @since 3.2\n+ * @since 0.3.2\n  */\n public class InternalException\n     extends OpenJPAException {"},{"sha":"4a4e22c70f4b4ec4b29f5296969e92974cb59933","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/InvalidStateException.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/InvalidStateException.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/InvalidStateException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/InvalidStateException.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -21,7 +21,7 @@\n  * Exception type thrown when attempting to execute an operation that\n  * is not allowed by the current state.\n  *\n- * @since 4.0\n+ * @since 0.4.0\n  * @author Abe White\n  */\n public class InvalidStateException"},{"sha":"075accc6a15274dfd909fe5dd890b5bed9addb1a","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/LRSProxy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/LRSProxy.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/LRSProxy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/LRSProxy.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -19,7 +19,7 @@\n  * Marker interface for large result set proxies.\n  *\n  * @author Abe White\n- * @since 3.0.3\n+ * @since 0.3.0.3\n  */\n public interface LRSProxy\n     extends Proxy {"},{"sha":"9f0682e09d6c68352763a201651f41fcb0e70f10","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/LockException.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/LockException.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/LockException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/LockException.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n  * Exception indicating that locks on one or more objects could not be acquired.\n  *\n  * @author Marc Prud'hommeaux\n- * @since 3.1\n+ * @since 0.3.1\n  */\n public class LockException\n     extends StoreException {"},{"sha":"25418ae5f7d1c3160098e46530420efd149c6237","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/MetaDataException.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/MetaDataException.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/MetaDataException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/MetaDataException.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -20,7 +20,7 @@\n /**\n  * Exception type reserved for missing or invalid metadata.\n  *\n- * @since 3.0\n+ * @since 0.3.0\n  * @author Abe White\n  */\n public class MetaDataException"},{"sha":"d8e9c236bf675e48a6f913e1146006d0e6c1a440","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/NoTransactionException.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/NoTransactionException.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/NoTransactionException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/NoTransactionException.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -21,7 +21,7 @@\n  * Exception type thrown when attempting a transactional operation without\n  * an active transaction.\n  *\n- * @since 4.0\n+ * @since 0.4.0\n  * @author Abe White\n  */\n public class NoTransactionException"},{"sha":"0ff99ccf307cc79c5771a44180d236e4cff51d4f","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/OpenJPAException.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/OpenJPAException.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/OpenJPAException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/OpenJPAException.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -30,7 +30,7 @@\n  * define their own exception types.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public abstract class OpenJPAException\n     extends RuntimeException"},{"sha":"6c9091b596783568e6c279350c75495bf52f5d3b","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/OptimisticException.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/OptimisticException.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/OptimisticException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/OptimisticException.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -24,7 +24,7 @@\n  * Exception type for optimistic concurrency violations.\n  *\n  * @author Marc Prud'hommeaux\n- * @since 2.5\n+ * @since 0.2.5\n  * @nojavadoc\n  */\n public class OptimisticException"},{"sha":"7e3b46d5fcdf6fb82ffc1698216d9102a61e62e8","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyManager.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyManager.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyManager.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -79,7 +79,7 @@\n      * If the given owner is non-null, the returned value should be a proxy\n      * for the given owner, otherwise it should not be a proxy.\n      *\n-     * @since 2.5\n+     * @since 0.2.5\n      */\n     public Object copyCustom(Object orig);\n \n@@ -113,7 +113,7 @@ public Proxy newMapProxy(Class type, Class keyType, Class valueType,\n      * Return a proxy for the given object, or null if this manager cannot\n      * proxy the object.\n      *\n-     * @since 2.5\n+     * @since 0.2.5\n      */\n     public Proxy newCustomProxy (Object obj);\n }"},{"sha":"a1fe176d8a5fb09afbbab542d3ce35d374ea0050","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/Serialization.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/Serialization.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/Serialization.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/Serialization.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -35,7 +35,7 @@\n  * objects back during deserialization.\n  *\n  * @author Abe White\n- * @since 3.3\n+ * @since 0.3.3\n  * @nojavadoc\n  */\n public class Serialization {"},{"sha":"468743d22cba48fc80e974fcc73dec860b1637b5","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/StoreException.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/StoreException.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/StoreException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/StoreException.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -21,7 +21,7 @@\n  * Base exception for data store errors.\n  *\n  * @author Marc Prud'hommeaux\n- * @since 2.5\n+ * @since 0.2.5\n  */\n public class StoreException\n     extends OpenJPAException {"},{"sha":"186eedf29008d17dc0faf97ee0bfe1d6cbbf6d9a","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/UnsupportedException.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/UnsupportedException.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/UnsupportedException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/UnsupportedException.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -21,7 +21,7 @@\n  * Exception type for attempts to perform unsupported operations.\n  *\n  * @author Marc Prud'hommeaux\n- * @since 2.5\n+ * @since 0.2.5\n  */\n public class UnsupportedException\n     extends OpenJPAException {"},{"sha":"e7480499c0d30e5a046f64049270da8f07605f8f","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/UserException.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/UserException.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-kernel/src/main/java/org/apache/openjpa/util/UserException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/UserException.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -21,7 +21,7 @@\n  * Base exception type for user errors.\n  *\n  * @author Marc Prud'hommeaux\n- * @since 2.5\n+ * @since 0.2.5\n  */\n public class UserException\n     extends OpenJPAException {"},{"sha":"31d3aab5c28464351c5d7351098043b32b2099c3","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationProvider.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationProvider.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationProvider.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationProvider.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n  * configurations compare equal.\n  *\n  * @nojavadoc\n- * @since 4.0.0\n+ * @since 0.4.0.0\n  */\n public interface ConfigurationProvider {\n "},{"sha":"5888b718cb8a99dc2d2e7a20b905099ea3fe4d62","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/SourceTrackers.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/SourceTrackers.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/SourceTrackers.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/SourceTrackers.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -20,7 +20,7 @@\n /**\n  * Utility class for performing common operations on {@link SourceTracker}s.\n  *\n- * @since 3.3.1\n+ * @since 0.3.3.1\n  */\n public class SourceTrackers {\n "},{"sha":"f52372294e2cc3a6d8fa1ae892ecf5fa24e9a964","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/FormatPreservingProperties.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/FormatPreservingProperties.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/FormatPreservingProperties.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/FormatPreservingProperties.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -72,7 +72,7 @@\n  * This implementation does not permit escaped ' ', '=', ':'\n  * characters in key names.\n  *\n- * @since 3.3\n+ * @since 0.3.3\n  */\n public class FormatPreservingProperties extends Properties {\n "},{"sha":"3026fc6f0f392709c1a688b6178ed0256037ab90","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ParseException.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ParseException.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ParseException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ParseException.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -22,7 +22,7 @@\n  *\n  * @author Abe White\n  * @nojavadoc\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public class ParseException extends NestableRuntimeException {\n "},{"sha":"22eca0859feb63d9fd27e6e063277a66732ad137","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ReferenceHashMap.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ReferenceHashMap.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ReferenceHashMap.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ReferenceHashMap.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n  *\n  * @author Abe White\n  * @nojavadoc\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public class ReferenceHashMap\n     extends org.apache.commons.collections.map.ReferenceMap"},{"sha":"0bb96b006af7a1f8ba5d9e01b57fffb8f7056cbe","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/UUIDGenerator.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/UUIDGenerator.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/UUIDGenerator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/UUIDGenerator.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -36,7 +36,7 @@\n  *\n  * @author Abe White\n  * @nojavadoc\n- * @since 3.3\n+ * @since 0.3.3\n  */\n public class UUIDGenerator {\n "},{"sha":"e7cac69f3338cc04c1fb3145391ed16521c5837a","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/Commentable.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/Commentable.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/Commentable.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/Commentable.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -19,7 +19,7 @@\n  * Implementations of this interface can be adorned with comments.\n  *\n  * @nojavadoc\n- * @since 3.3\n+ * @since 0.3.3\n  */\n public interface Commentable {\n "},{"sha":"c0a4463523c794e7f2d93f187e9d87104698ca20","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ClassCriteria.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ClassCriteria.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ClassCriteria.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ClassCriteria.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -26,7 +26,7 @@\n  * as criteria in the join.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"d3919b8a2bc723e2b00f2414dcad1d28d263ba6c","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/Columns.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/Columns.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/Columns.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/Columns.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -26,7 +26,7 @@\n  * Allows the specification of multiple columns for complex mappings.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"3f57519a6da8b0a5fb3e256d23135b062d0a27ae","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ContainerTable.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ContainerTable.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ContainerTable.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ContainerTable.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n  * Table for array, collection, or map elements.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"9b8c1ef6635b2d62dbb6060dcc74ec02e1bbba44","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/DataStoreIdColumn.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/DataStoreIdColumn.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/DataStoreIdColumn.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/DataStoreIdColumn.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -24,7 +24,7 @@\n  * Surrogate datastore identity column.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ TYPE })\n @Retention(RUNTIME)"},{"sha":"d5398eea8148948cda4afbc194294575424e6d0b","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/DiscriminatorStrategy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/DiscriminatorStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/DiscriminatorStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/DiscriminatorStrategy.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -24,7 +24,7 @@\n  * Discriminator mapping strategy.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ TYPE })\n @Retention(RUNTIME)"},{"sha":"7f67dc58715d0f5e2ec6dfa7976f9cf7bd282c1d","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/EagerFetchMode.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/EagerFetchMode.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/EagerFetchMode.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/EagerFetchMode.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n  * Determines how to eager-fetch a field.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"c7ae150efe1edd0b1597978e1148b0313c12cb04","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/EagerFetchType.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/EagerFetchType.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/EagerFetchType.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/EagerFetchType.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -19,7 +19,7 @@\n  * Type of fetching to employ.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public enum EagerFetchType {\n "},{"sha":"da4c296ae434e21dad14d60784bafb1cf8e2c2cb","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ElementClassCriteria.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ElementClassCriteria.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ElementClassCriteria.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ElementClassCriteria.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -26,7 +26,7 @@\n  * collection, or map element relation as criteria in the join.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"ba46e1765961c0bd1086189caf67edcd7aeb522b","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ElementForeignKey.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ElementForeignKey.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ElementForeignKey.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ElementForeignKey.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n  * Foreign key on array, collection, or map element columns.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"c89444d37712aa37187602c5e2b96eac162b88f6","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ElementIndex.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ElementIndex.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ElementIndex.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ElementIndex.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n  * Index on array, collection, or map element columns.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"ec15218928412a64155154daba32a9d0530d008a","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ElementJoinColumn.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ElementJoinColumn.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ElementJoinColumn.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ElementJoinColumn.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n  * Array, collection, or map element join column.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"ab4eed052af361b4500fde40364ff8e1ca430b35","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ElementJoinColumns.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ElementJoinColumns.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ElementJoinColumns.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ElementJoinColumns.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -26,7 +26,7 @@\n  * columns for compound joins.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"63bb038ad2f0f1be267f8714fa5758a8e55e085b","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ElementNonpolymorphic.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ElementNonpolymorphic.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ElementNonpolymorphic.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ElementNonpolymorphic.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -26,7 +26,7 @@\n  * not entirely polymorphic.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"afb7092afd8416dca48ebf57724de1e38e606b28","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/EmbeddedMapping.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/EmbeddedMapping.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/EmbeddedMapping.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/EmbeddedMapping.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n  * Embedded mapping information.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"6774cb71ee838a7351191cdbd2d4aac53ae13621","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ForeignKey.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ForeignKey.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ForeignKey.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ForeignKey.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -24,7 +24,7 @@\n  * Foreign key definition.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ TYPE, METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"5f514ad9ebac0cc5284849b8a4e072441bf5bf0a","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ForeignKeyAction.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ForeignKeyAction.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ForeignKeyAction.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ForeignKeyAction.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -19,7 +19,7 @@\n  * Foreign key actions.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public enum ForeignKeyAction {\n "},{"sha":"2acec81d00f63b650dc0df7f605ae14658403bb4","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/Index.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/Index.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/Index.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/Index.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n  * Index definition.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"f0f9c082ed9665b924fe5c7164d144bbfeda8001","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCFetchPlan.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCFetchPlan.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCFetchPlan.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCFetchPlan.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -28,7 +28,7 @@\n /**\n  * JDBC extensions to the fetch plan.\n  *\n- * @since 4.0\n+ * @since 0.4.0\n  * @author Abe White\n  * @published\n  */"},{"sha":"3ff49874fc1ba302edac5f319bfc67379020aa98","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/MappingOverride.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/MappingOverride.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/MappingOverride.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/MappingOverride.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n  * Allows override of complex embedded or superclass mappings.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ TYPE })\n @Retention(RUNTIME)"},{"sha":"1722254bf6e05e912454df7ade8c59511ad7359e","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/MappingOverrides.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/MappingOverrides.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/MappingOverrides.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/MappingOverrides.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -24,7 +24,7 @@\n  * Allows override of complex embedded or superclass mappings.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ TYPE })\n @Retention(RUNTIME)"},{"sha":"c8965e6ee20dd9409192d979a429f8f53206accf","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/Nonpolymorphic.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/Nonpolymorphic.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/Nonpolymorphic.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/Nonpolymorphic.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n  * Indicates that the annotated relation is not entirely polymorphic.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"fe91de9dbcd339ae6c86d2eddff6464fa9430800","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/NonpolymorphicType.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/NonpolymorphicType.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/NonpolymorphicType.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/NonpolymorphicType.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -19,7 +19,7 @@\n  * Nonpolymorphic settings.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public enum NonpolymorphicType {\n "},{"sha":"4da21aeea947fddb79da3a9eb14b5d55c0b39ffa","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/OrderColumn.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/OrderColumn.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/OrderColumn.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/OrderColumn.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n  * Surrogate order column.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"395aaa67b45dda0d10b06635d290a38aca9a5107","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/PersistenceMappingFactory.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/PersistenceMappingFactory.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/PersistenceMappingFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/PersistenceMappingFactory.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -26,7 +26,7 @@\n  * {@link MetaDataFactory} for JPA mapping information.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public class PersistenceMappingFactory\n     extends PersistenceMetaDataFactory {"},{"sha":"47e4dade7afdb43dd8a0620cc30b635f81835298","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/Strategy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/Strategy.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/Strategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/Strategy.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -24,7 +24,7 @@\n  * Mapping strategy.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ TYPE, METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"cd8b63d926e96c65b728d78d73fbf7e69f47be6f","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/SubclassFetchMode.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/SubclassFetchMode.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/SubclassFetchMode.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/SubclassFetchMode.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -24,7 +24,7 @@\n  * Determines how to eager-fetch subclass data.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ TYPE })\n @Retention(RUNTIME)"},{"sha":"27fa1d59a0eac9f18796891521867643b12553dc","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/Unique.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/Unique.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/Unique.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/Unique.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n  * Unique constraint definition.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"6c76a9cabd1e0c9ee2fe252acf1ca609fe5b8425","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/VersionColumn.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/VersionColumn.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/VersionColumn.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/VersionColumn.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -24,7 +24,7 @@\n  * Surrogate version column.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ TYPE })\n @Retention(RUNTIME)"},{"sha":"a1362ee665dff16118519b13c2821d12730d00f6","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/VersionColumns.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/VersionColumns.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/VersionColumns.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/VersionColumns.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -24,7 +24,7 @@\n  * Allows the specification of multiple version columns for complex versioning.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ TYPE })\n @Retention(RUNTIME)"},{"sha":"2878cdea85c89a45f4205b6500817245a5f9f511","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/VersionStrategy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/VersionStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/VersionStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/VersionStrategy.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -24,7 +24,7 @@\n  * Version mapping strategy.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ TYPE })\n @Retention(RUNTIME)"},{"sha":"53631454b59ee6e8c41032ee4a2c745761d24005","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XJoinColumn.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XJoinColumn.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XJoinColumn.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XJoinColumn.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n  * Extended join column.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"01aa240ba04a70761d4e43005a2472c7c77f6b49","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XJoinColumns.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XJoinColumns.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XJoinColumns.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XJoinColumns.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n  * Allows the specification of multiple columns for compound joins.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"7550204327988632885fb4a0140b6fb60380fe50","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XMLPersistenceMappingSerializer.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XMLPersistenceMappingSerializer.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XMLPersistenceMappingSerializer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XMLPersistenceMappingSerializer.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -56,7 +56,7 @@\n /**\n  * Serializes persistence mapping to XML.\n  *\n- * @since 4.0\n+ * @since 0.4.0\n  * @author Steve Kim\n  * @nojavadoc\n  */"},{"sha":"338ab3b18a8e8d9a117d36ba5e555f29bbc0fefa","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XSecondaryTable.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XSecondaryTable.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XSecondaryTable.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XSecondaryTable.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n  * Extended secondary table.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ TYPE })\n @Retention(RUNTIME)"},{"sha":"111b076ba589b9878f043a7cc6d01059cce1fc76","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XSecondaryTables.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XSecondaryTables.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XSecondaryTables.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XSecondaryTables.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -24,7 +24,7 @@\n  * Allows the specification of multiple secondary tables.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ TYPE })\n @Retention(RUNTIME)"},{"sha":"605728a5fa175de9b4aed73a64eed46dbe519be3","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XTable.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XTable.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XTable.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XTable.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -24,7 +24,7 @@\n  * Extended table.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ TYPE })\n @Retention(RUNTIME)"},{"sha":"b9a7feb53364eb8c616c84b307ee7801774f772c","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ArgumentException.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ArgumentException.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ArgumentException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ArgumentException.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -31,7 +31,7 @@\n  * Extended {@link IllegalArgumentException}.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  * @nojavadoc\n  */\n public class ArgumentException"},{"sha":"191fa946ef33c5d521f15c8c7b686e4185d36c35","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ConfigurationProviderImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ConfigurationProviderImpl.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ConfigurationProviderImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ConfigurationProviderImpl.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -52,7 +52,7 @@\n  * a named one).\n  *\n  * @nojavadoc\n- * @since 4.0.0\n+ * @since 0.4.0.0\n  */\n public class ConfigurationProviderImpl\n     extends MapConfigurationProvider {"},{"sha":"cfc26e3089b0d81db1788431f211d36ec7c0344e","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/DataCache.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/DataCache.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/DataCache.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/DataCache.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -24,7 +24,7 @@\n  * Caching characteristics for this class.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ TYPE })\n @Retention(RUNTIME)"},{"sha":"f11f61486f33258c6d90c9ac01da532cf0f09cb7","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/DataStoreId.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/DataStoreId.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/DataStoreId.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/DataStoreId.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n  * Describes how to generate a value for a field.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ TYPE })\n @Retention(RUNTIME)"},{"sha":"5d913c1b041b37b0ec086d30cdc2357101fbab75","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Dependent.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Dependent.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Dependent.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Dependent.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n  * Dependent field marker.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"ef30b1b06c5397514066e661a260134f61492042","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/DetachedState.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/DetachedState.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/DetachedState.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/DetachedState.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n  * Detached state.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ TYPE, FIELD })\n @Retention(RUNTIME)"},{"sha":"e83c2958b64176f78a5b8dd3cef0edc2356e6580","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ElementDependent.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ElementDependent.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ElementDependent.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ElementDependent.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n  * Dependent array, collection, or map element marker.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"da5b82d0ff04761d94474ad934de366a95d93562","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ElementType.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ElementType.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ElementType.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ElementType.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -26,7 +26,7 @@\n  * field, if different than the declared element type.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"3bab0d49ec4b2ae40a5ad3bf1880f06012db5796","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityExistsException.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityExistsException.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityExistsException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityExistsException.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -30,7 +30,7 @@\n  * Conflict with existing entity.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  * @nojavadoc\n  */\n public class EntityExistsException"},{"sha":"eb009356967e5acb97f117cff8af0ffd1f05ac1c","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityNotFoundException.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityNotFoundException.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityNotFoundException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityNotFoundException.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -30,7 +30,7 @@\n  * Missing entity.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  * @nojavadoc\n  */\n public class EntityNotFoundException"},{"sha":"1a267f1ba262928177232b0a86b2250ee1cc3b8f","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ExternalValues.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ExternalValues.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ExternalValues.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ExternalValues.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -27,7 +27,7 @@\n  * <code>&lt;field value&gt;=&lt;datastore value&gt;</code>\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"8416d3f514d19ea67e2576ea41a60ce1099db231","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Externalizer.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Externalizer.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Externalizer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Externalizer.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -26,7 +26,7 @@\n  * equivalent.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"535a6e6786656ffa533c725e73bc86f2e0817a7a","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Factory.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Factory.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Factory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Factory.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -26,7 +26,7 @@\n  * equivalent.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"4dd7b315390198ea27c33b62bd68814a38f724a5","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchAttribute.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchAttribute.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchAttribute.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchAttribute.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -23,7 +23,7 @@\n  * Includes a persistent attribute in a {@link FetchGroup}.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({})\n @Retention(RUNTIME)"},{"sha":"2570f25f84f2f19c5b0f595749f1aebb9a07fcaf","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchGroup.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchGroup.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchGroup.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchGroup.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -24,7 +24,7 @@\n  * Fetch group definition.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ TYPE })\n @Retention(RUNTIME)"},{"sha":"ba263bac912e0e44b05260fea5228f2329f19738","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchGroups.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchGroups.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchGroups.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchGroups.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -24,7 +24,7 @@\n  * Fetch groups holder.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ TYPE })\n @Retention(RUNTIME)"},{"sha":"9a2ec306b64f8048082ca79ab7a3bb7d933a0408","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchPlan.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchPlan.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchPlan.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchPlan.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -30,7 +30,7 @@\n  * configuration and other aspects of data loading.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  * @published\n  */\n public class FetchPlan {"},{"sha":"03e0f5e949c7031156f4f870cedaae13b36d49dd","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Generator.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Generator.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Generator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Generator.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -24,7 +24,7 @@\n  * Represents a store sequence.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  * @published\n  */\n public class Generator {"},{"sha":"be388286df3eb33428d2924d82e1ffc860a3d568","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/InvalidStateException.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/InvalidStateException.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/InvalidStateException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/InvalidStateException.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -31,7 +31,7 @@\n  * Extended {@link IllegalStateException}.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  * @nojavadoc\n  */\n public class InvalidStateException"},{"sha":"c81832b2927e47a156862f520da52dbeddc364df","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/InverseLogical.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/InverseLogical.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/InverseLogical.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/InverseLogical.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n  * Declares the logical inverse of a field.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"0b6fe3ed91c3536f7cddd4385da2824d30fa8274","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/KeyDependent.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/KeyDependent.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/KeyDependent.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/KeyDependent.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n  * Dependent map key marker.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"0b46097b0d390385d87d77acf7944660c887e9a5","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/KeyType.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/KeyType.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/KeyType.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/KeyType.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -26,7 +26,7 @@\n  * declared type.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"5bcd1b8c701e77e5fe11ce85a21033df49603a9c","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/LRS.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/LRS.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/LRS.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/LRS.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n  * Large result set field marker.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"895d8788f26bf0ecec017e7db620a1e6cad63530","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/NoResultException.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/NoResultException.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/NoResultException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/NoResultException.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -30,7 +30,7 @@\n  * Unique query returned no results.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  * @nojavadoc\n  */\n public class NoResultException"},{"sha":"4e462e63b21e4982851644bb545b6f1fc9efcae0","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/NonUniqueResultException.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/NonUniqueResultException.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/NonUniqueResultException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/NonUniqueResultException.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -30,7 +30,7 @@\n  * Unique query returned multipl results.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  * @nojavadoc\n  */\n public class NonUniqueResultException"},{"sha":"9a6a2e13dbe7eba7c5753480f41b0df2de889eb0","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAEntityManager.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAEntityManager.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAEntityManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAEntityManager.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -33,7 +33,7 @@\n /**\n  * Interface implemented by OpenJPA entity managers.\n  *\n- * @since 4.0\n+ * @since 0.4.0\n  * @author Abe White\n  * @published\n  */\n@@ -246,23 +246,23 @@\n      * Whether objects accessed during this transaction will be added to the\n      * store cache. Defaults to true.\n      *\n-     * @since 3.4\n+     * @since 0.3.4\n      */\n     public boolean getPopulateStoreCache();\n \n     /**\n      * Whether to populate the store cache with objects used by this\n      * transaction. Defaults to true.\n      *\n-     * @since 3.4\n+     * @since 0.3.4\n      */\n     public void setPopulateStoreCache(boolean cache);\n \n     /**\n      * Whether memory usage is reduced during this transaction at the expense\n      * of possibly more aggressive data cache evictions.\n      *\n-     * @since 3.4\n+     * @since 0.3.4\n      */\n     public boolean isLargeTransaction();\n \n@@ -271,7 +271,7 @@\n      * during this transaction setting this option to true will reduce memory\n      * usage if you perform periodic flushes.\n      *\n-     * @since 3.4\n+     * @since 0.3.4\n      */\n     public void setLargeTransaction(boolean largeTransaction);\n \n@@ -423,7 +423,7 @@\n      * deletion of dependent instances, and instance callbacks.\n      * Transaction listeners are not invoked.\n      *\n-     * @since 3.3\n+     * @since 0.3.3\n      */\n     public void preFlush();\n "},{"sha":"7f0ddacb36283e21e3f2f82a29f9498794e00132","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAEntityManagerFactory.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAEntityManagerFactory.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAEntityManagerFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAEntityManagerFactory.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -28,7 +28,7 @@\n  * Interface implemented by OpenJPA entity manager factories.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  * @published\n  */\n public interface OpenJPAEntityManagerFactory\n@@ -92,14 +92,14 @@\n      * the listener. The listener will be passed on to all new entity\n      * managers. See the <code>org.apache.openjpa.event</code> package for listener types.\n      *\n-     * @since 3.3\n+     * @since 0.3.3\n      */\n     public void addLifecycleListener(Object listener, Class... classes);\n \n     /**\n      * Remove a listener for lifecycle-related events.\n      *\n-     * @since 3.3\n+     * @since 0.3.3\n      */\n     public void removeLifecycleListener (Object listener);\n }"},{"sha":"aae984a636c2b606c2ec66af1ddbd7bef0103428","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAPersistence.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAPersistence.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAPersistence.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAPersistence.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -53,7 +53,7 @@\n  *\n  * @author Abe White\n  * @published\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public class OpenJPAPersistence\n     extends Persistence {"},{"sha":"d30c5f854e3ec627f2fc3c80a560d1d1061180a6","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAQuery.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAQuery.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAQuery.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAQuery.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -31,7 +31,7 @@\n /**\n  * Interface implemented by OpenJPA queries.\n  *\n- * @since 4.0\n+ * @since 0.4.0\n  * @author Abe White\n  * @published\n  */"},{"sha":"8a3fefc421816409aea0fe0ee1cb10c1a8fba732","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OptimisticLockException.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OptimisticLockException.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OptimisticLockException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OptimisticLockException.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -30,7 +30,7 @@\n  * Optimistic concurrency violation.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  * @nojavadoc\n  */\n public class OptimisticLockException"},{"sha":"2df671c562fb111ee55851b118e8cae15570e3d7","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceException.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceException.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceException.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -29,7 +29,7 @@\n  * General persistence exception.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  * @nojavadoc\n  */\n public class PersistenceException"},{"sha":"57cd86871e269aad3a8808eb16fbb7f85ba7aca8","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceMetaDataFactory.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceMetaDataFactory.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceMetaDataFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceMetaDataFactory.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -52,7 +52,7 @@\n  * {@link MetaDataFactory} for JPA metadata.\n  *\n  * @author Steve Kim\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public class PersistenceMetaDataFactory\n     extends AbstractCFMetaDataFactory"},{"sha":"b1fa4833397aa1a232850691881a92c22693af28","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Persistent.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Persistent.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Persistent.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Persistent.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -27,7 +27,7 @@\n  * Metadata annotation for a persistent field.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"0d3fbf1b09df1efe6412b29ea078f14e351f77b6","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistentCollection.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistentCollection.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistentCollection.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistentCollection.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -27,7 +27,7 @@\n  * Metadata annotation for a persistent collection field.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"488d7d486b5522d773c3090734d8b75d2f64bd56","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistentMap.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistentMap.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistentMap.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistentMap.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -27,7 +27,7 @@\n  * Metadata annotation for a persistent map field.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"c3be1be8fe82e77459c9d6e8c3d4b5c8ad9ae6d7","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryResultCache.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryResultCache.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryResultCache.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryResultCache.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -27,7 +27,7 @@\n  * Query result cache.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  * @published\n  */\n public class QueryResultCache {"},{"sha":"33917ea9eef50fa655073541530fe4a67dac3483","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ReadOnly.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ReadOnly.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ReadOnly.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ReadOnly.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -25,7 +25,7 @@\n  * Marks a field read-only.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"7caa8abdd40fe50f6a2e520c6581f5846145465f","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/RollbackException.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/RollbackException.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/RollbackException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/RollbackException.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -29,7 +29,7 @@\n  * Rollback occurred on attempt to commit.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  * @nojavadoc\n  */\n public class RollbackException"},{"sha":"042029be2901b7b3b95349f62c82841f29dd3233","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/StoreCache.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/StoreCache.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/StoreCache.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/StoreCache.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -28,7 +28,7 @@\n  * Represents the L2 cache over the data store.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  * @published\n  */\n public class StoreCache {"},{"sha":"1aed03b38436e38445572c09aadd9abb005703a7","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/TransactionRequiredException.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/TransactionRequiredException.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/TransactionRequiredException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/TransactionRequiredException.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -31,7 +31,7 @@\n  * Transaction required.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  * @nojavadoc\n  */\n public class TransactionRequiredException"},{"sha":"1d27e09f39f802b79ac38694496ee8f0bcfa3230","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Type.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Type.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Type.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Type.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -26,7 +26,7 @@\n  * declared type.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n @Target({ METHOD, FIELD })\n @Retention(RUNTIME)"},{"sha":"5710ad17bf1a55e1f14e1c84e5d79283637ee0fc","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/UpdateAction.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/UpdateAction.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/UpdateAction.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/UpdateAction.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -19,7 +19,7 @@\n  * Action to take when a field's value is changed.\n  *\n  * @author Abe White\n- * @since 4.0\n+ * @since 0.4.0\n  */\n public enum UpdateAction {\n "},{"sha":"dc31f048268841edaaaf26cbee8d15721336f4ff","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataSerializer.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataSerializer.java","raw_url":"https://github.com/apache/openjpa/raw/01735b123429e17033650fbe1c30506820e7af6a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataSerializer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataSerializer.java?ref=01735b123429e17033650fbe1c30506820e7af6a","patch":"@@ -56,7 +56,7 @@\n  * tags to be serialized both at &lt;entity-mappings&gt; and\n  * &lt;entity&gt; level.\n  *\n- * @since 4.0\n+ * @since 0.4.0\n  * @author Steve Kim\n  * @nojavadoc\n  */"}]}

