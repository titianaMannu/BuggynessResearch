{"sha":"01c26a9e21a80fd6339d0c2a406f11397f4e3d20","node_id":"MDY6Q29tbWl0MjA2MzY0OjAxYzI2YTllMjFhODBmZDYzMzlkMGMyYTQwNmYxMTM5N2Y0ZTNkMjA=","commit":{"author":{"name":"Jeremy Bauer","email":"jrbauer@apache.org","date":"2009-09-22T20:15:07Z"},"committer":{"name":"Jeremy Bauer","email":"jrbauer@apache.org","date":"2009-09-22T20:15:07Z"},"message":"Updated test code to use mapping tool to regenerate subset of DB artifacts if running on Oracle.  This will create the triggers required to support generated identity columns.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@817815 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"dcbe92e848d0c713b7bfc358e47de2340f92881b","url":"https://api.github.com/repos/apache/openjpa/git/trees/dcbe92e848d0c713b7bfc358e47de2340f92881b"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/01c26a9e21a80fd6339d0c2a406f11397f4e3d20","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/01c26a9e21a80fd6339d0c2a406f11397f4e3d20","html_url":"https://github.com/apache/openjpa/commit/01c26a9e21a80fd6339d0c2a406f11397f4e3d20","comments_url":"https://api.github.com/repos/apache/openjpa/commits/01c26a9e21a80fd6339d0c2a406f11397f4e3d20/comments","author":null,"committer":null,"parents":[{"sha":"f1af41c44c631bd63da734386cdb329faf4ad9e6","url":"https://api.github.com/repos/apache/openjpa/commits/f1af41c44c631bd63da734386cdb329faf4ad9e6","html_url":"https://github.com/apache/openjpa/commit/f1af41c44c631bd63da734386cdb329faf4ad9e6"}],"stats":{"total":46,"additions":41,"deletions":5},"files":[{"sha":"9b2ae16295a1fb47dec5ff61294c4eac7095f8a3","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java","status":"modified","additions":41,"deletions":5,"changes":46,"blob_url":"https://github.com/apache/openjpa/blob/01c26a9e21a80fd6339d0c2a406f11397f4e3d20/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java","raw_url":"https://github.com/apache/openjpa/raw/01c26a9e21a80fd6339d0c2a406f11397f4e3d20/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java?ref=01c26a9e21a80fd6339d0c2a406f11397f4e3d20","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.openjpa.persistence.embed;\n \n+import java.io.IOException;\n+import java.sql.SQLException;\n import java.sql.Timestamp;\n import java.util.Calendar;\n import java.util.Collection;\n@@ -33,14 +35,14 @@\n import javax.persistence.EntityTransaction;\n import javax.persistence.Query;\n \n-\n import org.apache.openjpa.jdbc.conf.JDBCConfiguration;\n+import org.apache.openjpa.jdbc.meta.MappingTool;\n+import org.apache.openjpa.jdbc.meta.MappingTool.Flags;\n import org.apache.openjpa.jdbc.sql.DBDictionary;\n import org.apache.openjpa.jdbc.sql.OracleDictionary;\n-import org.apache.openjpa.lib.log.Log;\n import org.apache.openjpa.persistence.ArgumentException;\n+import org.apache.openjpa.persistence.OpenJPAEntityManagerSPI;\n import org.apache.openjpa.persistence.test.SQLListenerTestCase;\n-import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n \n public class TestEmbeddable extends SQLListenerTestCase {\n     private static final Calendar cal = new GregorianCalendar();\n@@ -197,7 +199,8 @@ public void testEntityA_Embed_MappedToOneCascadeDelete() {\n         updateEntityA_Embed_MappedToOneCascadeDelete();\n     }\n     \n-    public void testEmbeddableContainingRelationWithGeneratedKey() {\n+    public void testEmbeddableContainingRelationWithGeneratedKey() \n+        throws IOException, SQLException {\n         createEmbeddableContainingRelationWithGeneratedKey();\n     }\n \n@@ -2567,8 +2570,20 @@ public void queryVicePresident(EntityManagerFactory emf) {\n         em.close();\n     }\n     \n-    public void createEmbeddableContainingRelationWithGeneratedKey() {\n+    /**\n+     * To run this method on Oracle requires the user to have the authority\n+     * to create triggers.  ex.  GRANT CREATE TRIGGER TO \"SCOTT\"\n+     */\n+    public void createEmbeddableContainingRelationWithGeneratedKey() \n+        throws IOException, SQLException {\n         EntityManager em = emf.createEntityManager();\n+        \n+        OpenJPAEntityManagerSPI ojem = (OpenJPAEntityManagerSPI)em;\n+        JDBCConfiguration conf = (JDBCConfiguration) ojem.getConfiguration();\n+        DBDictionary dict = conf.getDBDictionaryInstance();\n+        if (dict instanceof OracleDictionary) {\n+            recreateOracleArtifacts((OracleDictionary)dict, conf);                \n+        }\n         EntityTransaction tran = em.getTransaction();\n         \n         Book b = new Book(1590596455);\n@@ -2592,6 +2607,27 @@ public void createEmbeddableContainingRelationWithGeneratedKey() {\n         }\n     }\n \n+    /*\n+     * This method uses the mapping tool to regenerate Oracle db artifacts\n+     * with the useTriggersForAutoAssign db option enabled.\n+     */\n+    private void recreateOracleArtifacts(OracleDictionary dict, \n+        JDBCConfiguration conf) throws IOException, SQLException {\n+        dict.useTriggersForAutoAssign = true;\n+        Flags flags = new MappingTool.Flags();\n+        flags.dropTables = true;\n+        flags.schemaAction = \"drop,add\";\n+        flags.sequences = true;\n+        flags.ignoreErrors = true;\n+        flags.dropSequences = true;\n+        MappingTool.run( \n+            conf, \n+            new String[] { \"org.apache.openjpa.persistence.embed.Book\" },\n+            flags,\n+            conf.getClassResolverInstance().\n+            getClassLoader(MappingTool.class, null));        \n+    }\n+\n     /*\n      * EntityA_Embed_Complex routines\n      */"}]}

