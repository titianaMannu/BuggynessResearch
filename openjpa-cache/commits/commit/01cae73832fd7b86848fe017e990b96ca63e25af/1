{"sha":"01cae73832fd7b86848fe017e990b96ca63e25af","node_id":"MDY6Q29tbWl0MjA2MzY0OjAxY2FlNzM4MzJmZDdiODY4NDhmZTAxN2U5OTBiOTZjYTYzZTI1YWY=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2013-01-22T14:35:32Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2013-01-22T14:35:32Z"},"message":"OPENJPA-2325: Correct evaluation of identity type for MappedSuperclass without an identity field\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1436957 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"58a6134dd90bab8c3e98f3bc6abd12673bf0454d","url":"https://api.github.com/repos/apache/openjpa/git/trees/58a6134dd90bab8c3e98f3bc6abd12673bf0454d"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/01cae73832fd7b86848fe017e990b96ca63e25af","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/01cae73832fd7b86848fe017e990b96ca63e25af","html_url":"https://github.com/apache/openjpa/commit/01cae73832fd7b86848fe017e990b96ca63e25af","comments_url":"https://api.github.com/repos/apache/openjpa/commits/01cae73832fd7b86848fe017e990b96ca63e25af/comments","author":null,"committer":null,"parents":[{"sha":"2c3ec958603dc366ce284ebd468856b1e2801d34","url":"https://api.github.com/repos/apache/openjpa/commits/2c3ec958603dc366ce284ebd468856b1e2801d34","html_url":"https://github.com/apache/openjpa/commit/2c3ec958603dc366ce284ebd468856b1e2801d34"}],"stats":{"total":35,"additions":20,"deletions":15},"files":[{"sha":"f71ddb89e206830e4095c1ae72be06f817a33005","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/ClassMetaData.java","status":"modified","additions":20,"deletions":15,"changes":35,"blob_url":"https://github.com/apache/openjpa/blob/01cae73832fd7b86848fe017e990b96ca63e25af/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ClassMetaData.java","raw_url":"https://github.com/apache/openjpa/raw/01cae73832fd7b86848fe017e990b96ca63e25af/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ClassMetaData.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ClassMetaData.java?ref=01cae73832fd7b86848fe017e990b96ca63e25af","patch":"@@ -179,7 +179,7 @@\n     private List<Class<?>> _interfaces = null;\n     private final Map<Class<?>,Map<String,String>> _ifaceMap = \n     \tnew HashMap<Class<?>,Map<String,String>>();\n-    private int _identity = ID_UNKNOWN;\n+    private Integer _identity = null;\n     private int _idStrategy = ValueStrategies.NONE;\n     private int _accessType = AccessCode.UNKNOWN;\n     \n@@ -440,21 +440,25 @@ public ClassMetaData getMappedPCSuperclassMetaData() {\n      * primary key fields, and {@link #ID_APPLICATION} otherwise.\n      */\n     public int getIdentityType() {\n-        if (_identity == ID_UNKNOWN) {\n-            ClassMetaData sup = getPCSuperclassMetaData();\n-            if (sup != null && sup.getIdentityType() != ID_UNKNOWN)\n-                _identity = sup.getIdentityType();\n-            else if (getPrimaryKeyFields().length > 0)\n-                _identity = ID_APPLICATION;\n-            else if (isMapped())\n-                _identity = ID_DATASTORE;\n-            else\n-                _identity = _repos.getMetaDataFactory().getDefaults().\n-                    getDefaultIdentityType();\n-        }\n+    \tif (_identity != null) {\n+    \t\treturn _identity;\n+    \t} else {\n+    \t\tClassMetaData sup = getPCSuperclassMetaData();\n+\t        if (sup != null && sup.getIdentityType() != ID_UNKNOWN) \n+\t            _identity = sup.getIdentityType();\n+\t        else if (getPrimaryKeyFields().length > 0) \n+\t            _identity = ID_APPLICATION;\n+\t        else if (isMapped()) \n+\t            _identity = ID_DATASTORE;\n+\t        else if (isAbstract())\n+\t        \t_identity = ID_UNKNOWN;\n+\t        else\n+\t            _identity = _repos.getMetaDataFactory().getDefaults().\n+\t            \t getDefaultIdentityType();\n+    \t}\n         return _identity;\n     }\n-\n+  \n     /**\n      * The type of identity being used. This will be one of:\n      * <ul>\n@@ -2511,8 +2515,9 @@ public void copy(ClassMetaData meta) {\n         _embeddable = meta._embeddable;\n         _interface = (meta.isManagedInterface()) ? Boolean.TRUE : Boolean.FALSE;\n         setIntercepting(meta.isIntercepting());\n+        _abstract = meta.isAbstract();\n         _impl = meta.getInterfaceImpl();\n-        _identity = meta.getIdentityType();\n+        _identity = meta._identity == null ? null : meta.getIdentityType();\n         _idStrategy = meta.getIdentityStrategy();\n         _seqName = meta.getIdentitySequenceName();\n         _seqMeta = null;"}]}

