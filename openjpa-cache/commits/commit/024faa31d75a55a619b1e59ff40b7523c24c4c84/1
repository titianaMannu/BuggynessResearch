{"sha":"024faa31d75a55a619b1e59ff40b7523c24c4c84","node_id":"MDY6Q29tbWl0MjA2MzY0OjAyNGZhYTMxZDc1YTU1YTYxOWIxZTU5ZmY0MGI3NTIzYzI0YzRjODQ=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2008-02-05T21:53:39Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2008-02-05T21:53:39Z"},"message":"OPENJPA-509 Fix & Test for insertion of MappedSuperClass-Entity-Embedded domain featureSelection insertion failure.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@618794 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"3354571b71c13ef7cfebc6b33cc013b0f16a674e","url":"https://api.github.com/repos/apache/openjpa/git/trees/3354571b71c13ef7cfebc6b33cc013b0f16a674e"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/024faa31d75a55a619b1e59ff40b7523c24c4c84","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/024faa31d75a55a619b1e59ff40b7523c24c4c84","html_url":"https://github.com/apache/openjpa/commit/024faa31d75a55a619b1e59ff40b7523c24c4c84","comments_url":"https://api.github.com/repos/apache/openjpa/commits/024faa31d75a55a619b1e59ff40b7523c24c4c84/comments","author":null,"committer":null,"parents":[{"sha":"c767561f9dd1a6363fc5f14b28af58e796d86dec","url":"https://api.github.com/repos/apache/openjpa/commits/c767561f9dd1a6363fc5f14b28af58e796d86dec","html_url":"https://github.com/apache/openjpa/commit/c767561f9dd1a6363fc5f14b28af58e796d86dec"}],"stats":{"total":217,"additions":216,"deletions":1},"files":[{"sha":"016d53d974a79ab9f8a474ea4ddf9896563ab152","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/EmbedFieldStrategy.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/024faa31d75a55a619b1e59ff40b7523c24c4c84/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/EmbedFieldStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/024faa31d75a55a619b1e59ff40b7523c24c4c84/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/EmbedFieldStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/EmbedFieldStrategy.java?ref=024faa31d75a55a619b1e59ff40b7523c24c4c84","patch":"@@ -165,7 +165,8 @@ public void insert(OpenJPAStateManager owner, OpenJPAStateManager sm,\n         FieldMapping[] fields = field.getEmbeddedMapping().getFieldMappings();\n         for (int i = 0; i < fields.length; i++)\n             if (!Boolean.TRUE.equals(fields[i].isCustomInsert(em, store)))\n-                fields[i].insert(em, store, rm);\n+                if (!fields[i].isPrimaryKey())\n+                    fields[i].insert(em, store, rm);\n \n         if (field.getColumnIO().isInsertable(0, true))\n             setNullIndicatorColumn(sm, row);"},{"sha":"a5ba20141a6bb9b6a7e39449b68fc91c21903efc","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/Address.java","status":"added","additions":78,"deletions":0,"changes":78,"blob_url":"https://github.com/apache/openjpa/blob/024faa31d75a55a619b1e59ff40b7523c24c4c84/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/Address.java","raw_url":"https://github.com/apache/openjpa/raw/024faa31d75a55a619b1e59ff40b7523c24c4c84/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/Address.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/Address.java?ref=024faa31d75a55a619b1e59ff40b7523c24c4c84","patch":"@@ -0,0 +1,78 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.    \r\n+ */\r\n+package org.apache.openjpa.persistence.embed;\r\n+\r\n+import javax.persistence.*;\r\n+\r\n+/**\r\n+ * An entity that extends a MappedSuperClass and embeds an entity.\r\n+ * \r\n+ * @author Pinaki Poddar \r\n+ *\r\n+ */\r\n+@Entity\r\n+public class Address extends BaseEntity {\r\n+    protected String streetAddress, city, state;\r\n+\r\n+    Geocode geocode;\r\n+\r\n+    @Embedded\r\n+    public Geocode getGeocode() {\r\n+        return geocode;\r\n+    }\r\n+\r\n+    public void setGeocode(Geocode geocode) {\r\n+        this.geocode = geocode;\r\n+    }\r\n+\r\n+    public String getStreetAddress() {\r\n+        return streetAddress;\r\n+    }\r\n+\r\n+    public void setStreetAddress(String streetAddress) {\r\n+        this.streetAddress = streetAddress;\r\n+    }\r\n+\r\n+    public String getCity() {\r\n+        return city;\r\n+    }\r\n+\r\n+    public void setCity(String city) {\r\n+        this.city = city;\r\n+    }\r\n+\r\n+    public String getState() {\r\n+        return state;\r\n+    }\r\n+\r\n+    public void setState(String state) {\r\n+        this.state = state;\r\n+    }\r\n+\r\n+    protected Integer zip;\r\n+\r\n+    public Integer getZip() {\r\n+        return zip;\r\n+    }\r\n+\r\n+    public void setZip(Integer zip) {\r\n+        this.zip = zip;\r\n+    }\r\n+\r\n+}\r"},{"sha":"621dd95b679afb72d1d5f187e045c34e2e886fe2","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/BaseEntity.java","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/apache/openjpa/blob/024faa31d75a55a619b1e59ff40b7523c24c4c84/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/BaseEntity.java","raw_url":"https://github.com/apache/openjpa/raw/024faa31d75a55a619b1e59ff40b7523c24c4c84/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/BaseEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/BaseEntity.java?ref=024faa31d75a55a619b1e59ff40b7523c24c4c84","patch":"@@ -0,0 +1,42 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.    \r\n+ */\r\n+package org.apache.openjpa.persistence.embed;\r\n+\r\n+import javax.persistence.*;\r\n+\r\n+/**\r\n+ * Mapped Super Class using auto-generated identity.\r\n+ * \r\n+ * @author Pinaki Poddar \r\n+ *\r\n+ */\r\n+@MappedSuperclass\r\n+public class BaseEntity {\r\n+    protected Long id;\r\n+\r\n+    @Id\r\n+    @GeneratedValue\r\n+    public Long getId() {\r\n+        return id;\r\n+    }\r\n+\r\n+    public void setId(Long id) {\r\n+        this.id = id;\r\n+    }\r\n+}\n\\ No newline at end of file"},{"sha":"e926b24c523e08c74872a86587db5afc6d9600e6","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/Geocode.java","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/apache/openjpa/blob/024faa31d75a55a619b1e59ff40b7523c24c4c84/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/Geocode.java","raw_url":"https://github.com/apache/openjpa/raw/024faa31d75a55a619b1e59ff40b7523c24c4c84/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/Geocode.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/Geocode.java?ref=024faa31d75a55a619b1e59ff40b7523c24c4c84","patch":"@@ -0,0 +1,48 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.    \r\n+ */\r\n+package org.apache.openjpa.persistence.embed;\r\n+\r\n+import javax.persistence.*;\r\n+\r\n+/**\r\n+ * An embedded entity.\r\n+ * \r\n+ * @author Pinaki Poddar \r\n+ *\r\n+ */\r\n+@Embeddable\r\n+public class Geocode extends BaseEntity {\r\n+    float latitude, longtitude;\r\n+\r\n+    public float getLatitude() {\r\n+        return latitude;\r\n+    }\r\n+\r\n+    public void setLatitude(float latitude) {\r\n+        this.latitude = latitude;\r\n+    }\r\n+\r\n+    public float getLongtitude() {\r\n+        return longtitude;\r\n+    }\r\n+\r\n+    public void setLongtitude(float longtitude) {\r\n+        this.longtitude = longtitude;\r\n+    }\r\n+}\n\\ No newline at end of file"},{"sha":"24a54647c6be1dbc24e35ad49b454109977c9820","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbedded.java","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/apache/openjpa/blob/024faa31d75a55a619b1e59ff40b7523c24c4c84/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbedded.java","raw_url":"https://github.com/apache/openjpa/raw/024faa31d75a55a619b1e59ff40b7523c24c4c84/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbedded.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbedded.java?ref=024faa31d75a55a619b1e59ff40b7523c24c4c84","patch":"@@ -0,0 +1,46 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.    \r\n+ */\r\n+package org.apache.openjpa.persistence.embed;\r\n+\r\n+import javax.persistence.EntityManager;\r\n+import org.apache.openjpa.persistence.test.SingleEMFTestCase;\r\n+\r\n+public class TestEmbedded extends SingleEMFTestCase {\r\n+    public void setUp() {\r\n+        super.setUp(BaseEntity.class, Address.class, Geocode.class,\r\n+                CLEAR_TABLES);\r\n+    }\r\n+\r\n+    public void testInsertEmbedded() {\r\n+        EntityManager em = emf.createEntityManager();\r\n+        em.getTransaction().begin();\r\n+        Address a = new Address();\r\n+        a.setStreetAddress(\"123 Main St\");\r\n+        a.setCity(\"Chicago\");\r\n+        a.setState(\"IL\");\r\n+        a.setZip(60606);\r\n+        Geocode g = new Geocode();\r\n+        g.setLatitude(1.0f);\r\n+        g.setLongtitude(2.0f);\r\n+        a.setGeocode(g);\r\n+        em.persist(a);\r\n+        em.getTransaction().commit();\r\n+    }\r\n+\r\n+}\n\\ No newline at end of file"}]}

