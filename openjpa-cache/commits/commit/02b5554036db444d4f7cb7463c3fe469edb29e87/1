{"sha":"02b5554036db444d4f7cb7463c3fe469edb29e87","node_id":"MDY6Q29tbWl0MjA2MzY0OjAyYjU1NTQwMzZkYjQ0NGQ0ZjdjYjc0NjNjM2ZlNDY5ZWRiMjllODc=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-01-04T17:47:19Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-01-04T17:47:19Z"},"message":"OPENJPA-1453 Add support for testing with JPA 2.0 TCK\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@895723 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"8eb3ef7f1875c2b4efbf65c2c5cca0b178954a51","url":"https://api.github.com/repos/apache/openjpa/git/trees/8eb3ef7f1875c2b4efbf65c2c5cca0b178954a51"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/02b5554036db444d4f7cb7463c3fe469edb29e87","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/02b5554036db444d4f7cb7463c3fe469edb29e87","html_url":"https://github.com/apache/openjpa/commit/02b5554036db444d4f7cb7463c3fe469edb29e87","comments_url":"https://api.github.com/repos/apache/openjpa/commits/02b5554036db444d4f7cb7463c3fe469edb29e87/comments","author":null,"committer":null,"parents":[{"sha":"c6459391c8a8668cfc0ecd7ba7de95f7b0f956bd","url":"https://api.github.com/repos/apache/openjpa/commits/c6459391c8a8668cfc0ecd7ba7de95f7b0f956bd","html_url":"https://github.com/apache/openjpa/commit/c6459391c8a8668cfc0ecd7ba7de95f7b0f956bd"}],"stats":{"total":270,"additions":247,"deletions":23},"files":[{"sha":"2cf92078a12f45b29f650016fcdd80bf0c2327d5","filename":"openjpa-integration/tck/pom.xml","status":"modified","additions":247,"deletions":23,"changes":270,"blob_url":"https://github.com/apache/openjpa/blob/02b5554036db444d4f7cb7463c3fe469edb29e87/openjpa-integration/tck/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/02b5554036db444d4f7cb7463c3fe469edb29e87/openjpa-integration/tck/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-integration/tck/pom.xml?ref=02b5554036db444d4f7cb7463c3fe469edb29e87","patch":"@@ -22,12 +22,20 @@\n     This build file is used to run the JPA TCK. It assumes that you have\n     the TCK zip file located at:\n \n-        ${user.home}/.m2/privaterepos/jpa-1_0b-tck.zip\n+        For JPA 1.0 -\n+            ${user.home}/.m2/privaterepos/jpa-1_0b-tck.zip\n+        For JPA 2.0 -\n+            ${user.home}/.m2/privaterepos/jpatck-2.0_09-Dec-2009.zip\n \n     If you have that file in a different location, it can be specified with\n     the \"tck.zip\" system property.\n \n-    The TCK will only be run if you have the \"tck-profile\" enabled.\n+    The TCK will only be run if you have one of the following profiles enabled:\n+\n+        For JPA 1.0 -\n+            -Ptck-profile\n+        For JPA 2.0 -\n+            -Ptck2-profile\n \n     To run a specific package of tests, use the \"jpatck.pkg.dir\" system\n     property to specify the parent directory of the tests you want to run.\n@@ -66,10 +74,225 @@\n     </parent>\n \n     <profiles>\n-    <profile>\n-    <id>tck-profile</id>\n-    <build>\n-        <plugins>\n+      <profile>\n+        <!-- JPA 2.0 TCK Profile -->\n+        <id>tck2-profile</id>\n+        <build>\n+          <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-antrun-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>run-tck</id>\n+                        <phase>integration-test</phase>\n+                        <configuration>\n+                        <tasks>\n+                        <echo>Running Sun JPA 2.0 TCK</echo>\n+\n+                        <property name=\"tck.zip\" value=\"${settings.localRepository}/../privaterepos/jpatck-2.0_09-Dec-2009.zip\" />\n+                         <available property=\"tck.available\" file=\"${tck.zip}\" />\n+                        <fail unless=\"tck.available\">The TCK file ${tck.zip} does not exist. This file must be downloaded separately in order to be able to run the JPA TCK</fail>\n+\n+                        <available property=\"tck.available\" file=\"${tck.zip}\" />\n+                        <fail unless=\"tck.available\">The TCK file specific in the \"tck.zip\" system property (${tck.zip}) does not exist. This file must be downloaded separately in order to be able to run the JPA TCK</fail>\n+\n+                        <property name=\"tck.base\" value=\"${basedir}/target/tck\" />\n+                        <property name=\"tck.dir\" value=\"${tck.base}/jpatck\" />\n+\n+                        <delete dir=\"${tck.dir}\" />\n+\n+                        <unzip overwrite=\"false\" src=\"${tck.zip}\" dest=\"${tck.base}\" />\n+\n+                        <path id=\"cp\">\n+                            <path refid=\"maven.compile.classpath\" />\n+\n+                            <!-- use official JPA API instead of GM's -->\n+                            <fileset dir=\"${tck.dir}/lib\">\n+                                <include name=\"**/*.jar\" />\n+                            </fileset>\n+                            <pathelement path=\"${java.class.path}\" />\n+                            <pathelement path=\"${db.jar}\" />\n+                        </path>\n+                        <pathconvert property=\"cp.property\" refid=\"cp\" />\n+\n+                        <property name=\"db.name\" value=\"derby\" />\n+                        <property name=\"db.driver\" value=\"org.apache.derby.jdbc.EmbeddedDriver\" />\n+                        <property name=\"db.url\" value=\"jdbc:derby:derby-database;create=true\" />\n+                        <property name=\"db.username\" value=\"nousername\" />\n+                        <property name=\"db.password\" value=\"nopassword\" />\n+\n+                        <property name=\"openjpa.log.level\" value=\"WARN\" />\n+\n+                        <property name=\"jpatck.pkg.dir\" value=\"com\" />\n+                        <property name=\"jpatck.test\" value=\"\" />\n+\n+                        <property name=\"jpatck.work.dir\" value=\"${tck.dir}/../work\" />\n+                        <property name=\"tck.log\" value=\"${tck.base}/openjpa-tck.log\" />\n+\n+                        <property name=\"openjpa.properties\" value=\"${tck.dir}/openjpa-provier.properties\" />\n+\n+                        <!-- create the OpenJPA properties for the TCK run -->\n+                        <echo append=\"false\" file=\"${openjpa.properties}\">\n+javax.persistence.provider: org.apache.openjpa.persistence.PersistenceProviderImpl\n+openjpa.ConnectionDriverName: ${db.driver}\n+openjpa.ConnectionURL: ${db.url}\n+openjpa.ConnectionUserName: ${db.username}\n+openjpa.ConnectionPassword: ${db.password}\n+openjpa.FetchBatchSize: -1\n+openjpa.Compatibility: StrictIdentityValues=true\n+openjpa.Sequence: time\n+openjpa.Log: DefaultLevel=${openjpa.log.level}\n+openjpa.jdbc.DBDictionary: StoreCharsAsNumbers=false\n+openjpa.jdbc.SchemaFactory: native(ForeignKeys=true)\n+                        </echo>\n+\n+                        <!-- Append OpenJPA-specific configuration -->\n+                        <property name=\"jpatck.config\" value=\"${tck.dir}/bin/ts.jte\" />\n+\n+                        <echo append=\"false\" file=\"${jpatck.config}.tmp\">\n+\n+\n+#########################################################################\n+## OpenJPA specific properties follow\n+#########################################################################\n+\n+jpa.home=${tck.dir}\n+work.dir=${jpatck.work.dir}\n+report.dir=${tck.dir}/../reports\n+jpa.classes=${cp.property}\n+database.classes=${jpa.classes}\n+# Need to specify java.* classes, both in Windows/UNIX locations as well as Mac.\n+# This includes a few different possible locations; only one of them needs to \n+# actually work for a given environment.\n+sigTestClasspath=${JAVA_HOME}/lib/rt.jar${path.separator}${JAVA_HOME}/jre/lib/rt.jar${path.separator}${JAVA_HOME}/../Classes/classes.jar${path.separator}$${jpa.classes}\n+persistence.unit.properties.file.full.path=${openjpa.properties}\n+database.user=${db.username}\n+database.passwd=${db.password}\n+database.url=${db.url}\n+database.driver=${db.driver}\n+databaseName=${db.name}\n+\n+                        </echo>\n+\n+                        <!-- convert backslashes and known paths with spaces\n+                            to get around a problem with the TCK testrunner \n+                            on windows -->\n+                        <replace summary=\"yes\" file=\"${jpatck.config}.tmp\" replacefilterfile=\"windows-replacefilter.properties\" />\n+                        <concat append=\"true\" destfile=\"${jpatck.config}\">\n+                            <fileset file=\"${jpatck.config}.tmp\" />\n+                        </concat>\n+\n+                        <path id=\"agent.path\">\n+                            <fileset dir=\"../../openjpa/target\">\n+                                <include name=\"*.jar\" />\n+                                <exclude name=\"*-sources.jar\" />\n+                                <exclude name=\"original-*.jar\" />\n+                                <exclude name=\"*-tests.jar\" />\n+                                <exclude name=\"*-javadoc.jar\" />\n+                            </fileset>\n+                        </path>\n+                        <pathconvert dirsep=\"/\" property=\"agent\" refid=\"agent.path\" />\n+                        <property name=\"agent.properties\" value=\"\" />\n+                        <echo>AGENT: ${agent}${agent.properties}</echo>\n+\n+                        <!--\n+                            Replace the existing javaagent argument (which\n+                            uses Toplink's enhancer) with our own. Also, we\n+                            need to specify the default MetaDataFactory in\n+                            order to allow tests that don't have any\n+                            persistent classes to work (like the SignatureTest)\n+                        -->\n+                        <replace file=\"${jpatck.config}\">\n+                            <replacefilter token=\"-javaagent:${jpa.home}/lib/toplink-essentials-agent.jar\" value=\"-javaagent:${agent}${agent.properties} -Dopenjpa.MetaDataFactory=jpa(DefaultAccessType=PROPERTY)\" />\n+                        </replace>\n+\n+                        <!-- make a macro for the TCK harness launcher -->\n+                        <macrodef name=\"tsant\">\n+                            <attribute name=\"buildfile\" />\n+                            <attribute name=\"target\" />\n+                            <sequential>\n+                                <java classname=\"org.apache.tools.ant.launch.Launcher\" fork=\"true\" failonerror=\"true\" dir=\"${tck.dir}/src\" append=\"true\" output=\"${tck.log}\" timeout=\"7200000\">\n+                                    <arg value=\"-emacs\" />\n+                                    <arg value=\"-buildfile\" />\n+                                    <arg value=\"@{buildfile}\" />\n+                                    <arg value=\"-listener\" />\n+                                    <arg value=\"com.sun.ant.TSBuildListener\" />\n+                                    <arg value=\"-logger\" />\n+                                    <arg value=\"com.sun.ant.TSLogger\" />\n+                                    <arg value=\"@{target}\" />\n+\n+                                    <env key=\"TS_HOME\" value=\"..\" />\n+                                    <sysproperty key=\"ts.home\" value=\"..\" />\n+\n+                                    <env key=\"ANT_HOME\" value=\"${tck.dir}/tools/ant\" />\n+                                    <sysproperty key=\"ant.home\" value=\"${tck.dir}/tools/ant\" />\n+\n+                                    <sysproperty key=\"pkg.dir\" value=\"${jpatck.pkg.dir}\" />\n+                                    <!--\n+                                    <sysproperty key=\"test\" value=\"${jpatck.test}\" />\n+                                    -->\n+\n+                                    <classpath>\n+                                        <path refid=\"cp\" />\n+                                        <fileset dir=\"${tck.dir}/tools/ant/lib\">\n+                                            <include name=\"**/*.jar\" />\n+                                        </fileset>\n+                                    </classpath>\n+                                </java>\n+                            </sequential>\n+                        </macrodef>\n+\n+                        <echo>Logging JPA 2.0 TCK output to ${tck.log}</echo>\n+\n+                        <!-- first initialize the database -->\n+                        <tsant buildfile=\"${tck.dir}/bin/initdb.xml\" target=\"init.database\" />\n+\n+                        <!-- now run the TCK -->\n+                        <tsant buildfile=\"${tck.dir}/bin/build.xml\" target=\"runclient\" />\n+\n+                        <!--\n+                            The TCK's Java process doesn't actually fail when\n+                            tests fail, so we need to parse the results file\n+                            for a string indicating whether or not it passed.\n+                        -->\n+                        <loadfile property=\"jpatck.results\" srcfile=\"${jpatck.work.dir}/jtData/log.txt\" />\n+                        <condition property=\"jpatck.failed\">\n+                            <contains string=\"${jpatck.results}\" substring=\"Completed test run: not ok\" />\n+                        </condition>\n+                        <fail if=\"jpatck.failed\">Some tests failed</fail>\n+\n+                        <echo>JPA TCK Passed 100%!</echo>\n+\n+                        <property name=\"tck.results.archive\" value=\"${tck.base}/openjpa-tck-results.zip\" />\n+                        <zip destfile=\"${tck.results.archive}\" basedir=\"${jpatck.work.dir}\" />\n+                        <echo>Results archive at: ${tck.results.archive}</echo>\n+\n+                        </tasks>\n+                        </configuration>\n+                        <goals>\n+                            <goal>run</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+          </plugins>\n+        </build>\n+        <!-- Just pull in openjpa-all, which will include all required deps -->\n+        <dependencies>\n+          <dependency>\n+            <groupId>org.apache.openjpa</groupId>\n+            <artifactId>openjpa-all</artifactId>\n+            <version>${pom.version}</version>\n+          </dependency>\n+        </dependencies>\n+      </profile>\n+\n+      <profile>\n+        <!-- JPA 1.0b TCK Profile -->\n+        <id>tck-profile</id>\n+        <build>\n+          <plugins>\n             <plugin>\n                 <groupId>org.apache.maven.plugins</groupId>\n                 <artifactId>maven-antrun-plugin</artifactId>\n@@ -268,33 +491,34 @@ databaseName=${db.name}\n                     </execution>\n                 </executions>\n             </plugin>\n-        </plugins>\n-    </build>\n-    </profile>\n-    </profiles>\n-\n-    <!-- only used for old JPA 1.0 RI API, which we don't use anymore\n-    <repositories>\n-        <repository>\n+          </plugins>\n+        </build>\n+        <!-- only used for old JPA 1.0 RI API, which we don't use anymore\n+        <repositories>\n+          <repository>\n             <id>java.net</id>\n             <name>Java.net Maven Repository</name>\n             <url>https://maven-repository.dev.java.net/nonav/repository</url>\n             <layout>legacy</layout>\n-        </repository>\n-    </repositories>\n-    -->\n-\n-    <dependencies>\n-        <dependency>\n+          </repository>\n+        </repositories>\n+        -->\n+        <dependencies>\n+          <dependency>\n             <groupId>org.apache.geronimo.specs</groupId>\n             <artifactId>geronimo-jpa_2.0_spec</artifactId>\n             <scope>compile</scope>\n-        </dependency>\n-        <dependency>\n+          </dependency>\n+          <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa-kernel</artifactId>\n             <version>${pom.version}</version>\n-        </dependency>\n+          </dependency>\n+        </dependencies>\n+      </profile>\n+    </profiles>\n+\n+    <dependencies>\n         <dependency>\n             <groupId>org.apache.derby</groupId>\n             <artifactId>derby</artifactId>"}]}

