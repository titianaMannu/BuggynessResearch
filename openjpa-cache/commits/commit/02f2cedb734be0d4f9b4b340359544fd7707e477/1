{"sha":"02f2cedb734be0d4f9b4b340359544fd7707e477","node_id":"MDY6Q29tbWl0MjA2MzY0OjAyZjJjZWRiNzM0YmUwZDRmOWI0YjM0MDM1OTU0NGZkNzcwN2U0Nzc=","commit":{"author":{"name":"Marc Prud'hommeaux","email":"mprudhom@apache.org","date":"2007-02-09T03:49:22Z"},"committer":{"name":"Marc Prud'hommeaux","email":"mprudhom@apache.org","date":"2007-02-09T03:49:22Z"},"message":"Added multiple different implementations of the same data featureSelection for flexibility testing; added a helper test case from which other tests can be extended to easily perform persistence operations\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@505160 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"35c723b34774a56e8b98fa5cd94d3e74010f4234","url":"https://api.github.com/repos/apache/openjpa/git/trees/35c723b34774a56e8b98fa5cd94d3e74010f4234"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/02f2cedb734be0d4f9b4b340359544fd7707e477","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/02f2cedb734be0d4f9b4b340359544fd7707e477","html_url":"https://github.com/apache/openjpa/commit/02f2cedb734be0d4f9b4b340359544fd7707e477","comments_url":"https://api.github.com/repos/apache/openjpa/commits/02f2cedb734be0d4f9b4b340359544fd7707e477/comments","author":null,"committer":null,"parents":[{"sha":"a384218429534d2f81e7437ca532d49b3596a60d","url":"https://api.github.com/repos/apache/openjpa/commits/a384218429534d2f81e7437ca532d49b3596a60d","html_url":"https://github.com/apache/openjpa/commit/a384218429534d2f81e7437ca532d49b3596a60d"}],"stats":{"total":4389,"additions":4389,"deletions":0},"files":[{"sha":"c2dd863d39d2c0abf510a4d2e0dfd8fe84a713a5","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/CompanyModelTest.java","status":"added","additions":257,"deletions":0,"changes":257,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/CompanyModelTest.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/CompanyModelTest.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/CompanyModelTest.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,257 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company;\n+\n+import java.beans.*;\n+import java.io.*;\n+import java.util.*;\n+import javax.persistence.*;\n+import junit.framework.*;\n+import org.apache.openjpa.persistence.test.*;\n+\n+/** \n+ * Generic test case that will be extended by a concrete company\n+ * featureSelection subclass.\n+ *  \n+ * @author  Marc Prud'hommeaux\n+ */\n+public abstract class CompanyModelTest extends SingleEMTest {\n+    private static Map<Class,Class> factoryClasses;\n+\n+    private final Map<Class,Class> impls;\n+\n+    public CompanyModelTest() {\n+        // make a map of the implementations based on the class names in\n+        // the current package of the test subclass\n+        impls = new HashMap<Class,Class>();\n+        impls.put(IAddress.class, localClass(\"Address\"));\n+        impls.put(ICompany.class, localClass(\"Company\"));\n+        impls.put(ICustomer.class, localClass(\"Customer\"));\n+        impls.put(IPerson.class, localClass(\"Person\"));\n+        impls.put(IEmployee.class, localClass(\"Employee\"));\n+        impls.put(IFullTimeEmployee.class, localClass(\"FullTimeEmployee\"));\n+        impls.put(ILineItem.class, localClass(\"LineItem\"));\n+        impls.put(IProductOrder.class, localClass(\"ProductOrder\"));\n+        impls.put(IPartTimeEmployee.class, localClass(\"PartTimeEmployee\"));\n+        impls.put(IProduct.class, localClass(\"Product\"));\n+\n+        classes = (Class[]) impls.values().toArray(new Class[impls.size()]);\n+    }\n+\n+    private Class localClass(String name) {\n+        String pkg = getClass().getPackage().getName();\n+        try {\n+            return Class.forName(pkg + \".\" + name);\n+        } catch (Exception e) {\n+            throw new IllegalStateException(e);\n+        }\n+    }\n+\n+    public void setUp() throws Exception {\n+        super.setUp();\n+        try {\n+            checkModel();\n+        } catch (Exception e) {\n+            closeEMF();\n+            throw e;\n+        }\n+    }\n+\n+    /** \n+     * Runs through basic queries against all of the properties of all\n+     * of the known persistent classes. We're just checking here to\n+     * make sure the queries can be executed without problem. Queries\n+     * should always return all known instances in the database.\n+     */\n+    public void testBasicQueries() throws Exception {\n+        for (Class c : impls.values()) {\n+            for (PropertyDescriptor pd :\n+                Introspector.getBeanInfo(c).getPropertyDescriptors()) {\n+\n+                if (pd.getWriteMethod() == null) // ignore read-only\n+                    continue;\n+\n+                Set<String> queries = new TreeSet<String>();\n+                getBasicQueries(queries, pd, \"x.\");\n+\n+                StringBuilder str = new StringBuilder();\n+\n+                // execute the individual queries\n+                for (String query : queries) {\n+                    find(c, \"where \" + query);\n+                    str.append(str.length() > 0 ? \" or \" : \"\").append(query);\n+                }\n+\n+                // now execute all the queries combined\n+                find(c, \"where \" + str);\n+            }\n+        }\n+    }\n+\n+    void getBasicQueries(Set<String> queries, PropertyDescriptor pd,\n+        String prefix) throws Exception {\n+\n+        // max level of field traversal: 3\n+        // ### if (prefix.split(\"\\\\.\").length > 3)\n+        if (prefix.split(\"\\\\.\").length > 2)\n+            return;\n+\n+        Class type = pd.getPropertyType();\n+\n+        String name = prefix + pd.getName();\n+\n+        if (!queries.add(name + \" is not null\"))\n+            return;\n+\n+        queries.add(name + \" is null\");\n+\n+        if (type.isAssignableFrom(Number.class) || type == int.class ||\n+            type == double.class || type == float.class ||\n+            type == long.class || type == short.class) {\n+            queries.add(name + \" = 0\");\n+            queries.add(name + \" <> 0\");\n+            queries.add(name + \" > 0\");\n+            queries.add(name + \" < 0\");\n+            queries.add(name + \" >= 0\");\n+            queries.add(name + \" <= 0\");\n+            queries.add(\"sqrt(\" + name + \") <> 0\");\n+            queries.add(\"abs(\" + name + \") <> 0\");\n+            // queries.add(\"mod(\" + name + \", 5) <> 0\");\n+        }\n+\n+        if (type.isAssignableFrom(Collection.class)) {\n+            queries.add(name + \" IS EMPTY\");\n+            queries.add(name + \" IS NOT EMPTY\");\n+            queries.add(\"size(\" + name + \") <> 0\");\n+        }\n+\n+        if (type.isAssignableFrom(String.class)) {\n+            queries.add(\"lower(\" + name + \") = 'x'\");\n+            queries.add(\"upper(\" + name + \") = 'x'\");\n+            queries.add(\"concat(\" + name + \", \" + name + \") = 'x'\");\n+            queries.add(\"substring(\" + name + \", 1, 2) = 'x'\");\n+            queries.add(\"length(\" + name + \") > 0\");\n+            queries.add(\"locate(\" + name + \", 'x', 1) > 0\");\n+            queries.add(\"trim(leading ' ' from \" + name + \") = 'x'\");\n+        }\n+\n+        if (type.isAssignableFrom(Date.class)) {\n+            queries.add(name + \" <> CURRENT_TIMESTAMP\");\n+        }\n+\n+        // relation is an entity ... add all the relations\n+        if (impls.containsKey(type) || impls.containsValue(type)) {\n+            for (PropertyDescriptor desc :\n+                Introspector.getBeanInfo(type).getPropertyDescriptors()) {\n+\n+                if (desc.getWriteMethod() == null) // ignore read-only\n+                    continue;\n+\n+                // prevent recursion\n+                if (name.endsWith(\".\" + desc.getName() + \".\"))\n+                    continue;\n+\n+                getBasicQueries(queries, desc, name + \".\");\n+            }\n+        }\n+    }\n+\n+    void checkModel() {\n+        try {\n+            verifyModel();\n+        } catch (AssertionFailedError e) {\n+            // clear all existing instances\n+            delete(impls.values().toArray(new Class[0]));\n+\n+            // since the factory method needs to be static, we need to store\n+            // the classes statically\n+            factoryClasses = impls;\n+            try {\n+                Collection obs = (Collection) new XMLDecoder\n+                    (CompanyModelTest.class.\n+                        getResourceAsStream(\"companies.xml\")).readObject();\n+\n+                assertNotNull(obs);\n+\n+                persist(obs.toArray());\n+            } finally {\n+                factoryClasses = null;\n+            }\n+        }\n+\n+        verifyModel();\n+    }\n+\n+    int queryCount(Class c, String query, Object... params) {\n+        return find(c, query, params).size();\n+    }\n+\n+    int queryCount(Class c) {\n+        return find(c, null).size();\n+    }\n+\n+    Class impl(Class c) {\n+        return impls.get(c);\n+    }\n+\n+    void verifyModel() {\n+        assertEquals(2, queryCount(impl(ICompany.class)));\n+        assertEquals(11, queryCount(impl(IAddress.class)));\n+        assertEquals(3, queryCount(impl(IProduct.class)));\n+        assertEquals(2, queryCount(impl(IProductOrder.class)));\n+        assertEquals(3, queryCount(impl(ILineItem.class)));\n+        assertEquals(1, queryCount(impl(IPartTimeEmployee.class)));\n+        assertEquals(3, queryCount(impl(IFullTimeEmployee.class)));\n+        assertEquals(4, queryCount(impl(ICustomer.class)));\n+\n+        assertEquals(3, queryCount(impl(IAddress.class),\n+            \"where x.state = 'CA'\"));\n+\n+        assertEquals(1, queryCount(impl(ICompany.class),\n+            \"where size(x.employees) = 4\"));\n+        assertEquals(1, queryCount(impl(ICompany.class),\n+            \"where size(x.employees) = 0\"));\n+\n+        assertEquals(2, queryCount(impl(ICustomer.class),\n+            \"where size(x.orders) = 1\"));\n+\n+        assertEquals(1, queryCount(impl(IProductOrder.class),\n+            \"where x.shippedDate is null\"));\n+        assertEquals(1, queryCount(impl(IProductOrder.class),\n+            \"where x.shippedDate is not null\"));\n+\n+        assertEquals(1, queryCount(impl(IEmployee.class),\n+            \"where x.manager is null\"));\n+        assertEquals(2, queryCount(impl(IEmployee.class),\n+            \"where x.manager.manager is null\"));\n+        assertEquals(1, queryCount(impl(IEmployee.class),\n+            \"where x.manager.manager.manager is null\"));\n+\n+        assertEquals(2, queryCount(impl(IPerson.class),\n+            \"where x.firstName like ?1 and x.lastName like ?1\", \"M%\"));\n+        assertEquals(1, queryCount(impl(IPerson.class),\n+            \"where x.homeAddress.state = 'CA'\"));\n+    }\n+\n+    /** \n+     * Factory method that is called from the serialized XML. \n+     */\n+    public static Object create(Class intf)\n+        throws InstantiationException, IllegalAccessException {\n+        return factoryClasses.get(intf).newInstance();\n+    }\n+}\n+"},{"sha":"0b8b2e73bb78a6e07b91cbdd894742fb91bf89e5","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/IAddress.java","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/IAddress.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/IAddress.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/IAddress.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,34 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company;\n+\n+public interface IAddress {\n+\n+    public void setStreetAddress(String streetAddress);\n+    public String getStreetAddress();\n+\n+    public void setCity(String city);\n+    public String getCity();\n+\n+    public void setState(String state);\n+    public String getState();\n+\n+    public void setPostalCode(String postalCode);\n+    public String getPostalCode();\n+\n+    public void setPhoneNumber(String phoneNumber);\n+    public String getPhoneNumber();\n+}"},{"sha":"e5b172d460c007946330fcd046c7ab4251494c67","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/ICompany.java","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/ICompany.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/ICompany.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/ICompany.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,33 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company;\n+\n+import java.util.*;\n+\n+public interface ICompany {\n+\n+    public void setName(String name);\n+    public String getName();\n+\n+    public void setAddress(IAddress address);\n+    public IAddress getAddress();\n+\n+    public void setEmployees(Set<? extends IEmployee> employees);\n+    public Set<? extends IEmployee> getEmployees();\n+\n+    public void setProducts(Set<? extends IProduct> products);\n+    public Set<? extends IProduct> getProducts();\n+}"},{"sha":"75342a6d838ab6c14afd823d7f3bc8da138204c2","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/ICustomer.java","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/ICustomer.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/ICustomer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/ICustomer.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,30 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company;\n+\n+import java.util.*;\n+\n+public interface ICustomer extends IPerson {\n+\n+    public void setOrders(Collection<? extends IProductOrder> orders);\n+    public Collection<? extends IProductOrder> getOrders();\n+\n+    public void setShippingAddress(IAddress shippingAddress);\n+    public IAddress getShippingAddress();\n+\n+    public void setBillingAddress(IAddress billingAddress);\n+    public IAddress getBillingAddress();\n+}"},{"sha":"c0185b7be9f630e6b17b77717e70f210d71edfcf","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/IEmployee.java","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/IEmployee.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/IEmployee.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/IEmployee.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,33 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company;\n+\n+import java.util.*;\n+\n+public interface IEmployee extends IPerson {\n+\n+    public void setManager(IFullTimeEmployee manager);\n+    public IFullTimeEmployee getManager();\n+\n+    public void setCompany(ICompany company);\n+    public ICompany getCompany();\n+\n+    public void setTitle(String title);\n+    public String getTitle();\n+\n+    public void setHireDate(Date hireDate);\n+    public Date getHireDate();\n+}"},{"sha":"f94fe4dac3a8a167eb6fd5c11d2458be1b2cbba2","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/IFullTimeEmployee.java","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/IFullTimeEmployee.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/IFullTimeEmployee.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/IFullTimeEmployee.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,22 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company;\n+\n+public interface IFullTimeEmployee extends IEmployee {\n+\n+    public void setSalary(float salary);\n+    public float getSalary();\n+}"},{"sha":"c9ab6b064751324b4e9f185504ca38e944fee238","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/ILineItem.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/ILineItem.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/ILineItem.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/ILineItem.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,25 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company;\n+\n+public interface ILineItem {\n+\n+    public void setQuantity(int quantity);\n+    public int getQuantity();\n+\n+    public void setProduct(IProduct product);\n+    public IProduct getProduct();\n+}"},{"sha":"5370ea675cfb68752767b9f4a6878eecd63bc1e1","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/IPartTimeEmployee.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/IPartTimeEmployee.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/IPartTimeEmployee.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/IPartTimeEmployee.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,25 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company;\n+\n+public interface IPartTimeEmployee extends IEmployee {\n+\n+    public void setWage(float wage);\n+    public float getWage();\n+\n+    public void setWeeklyHours(int weeklyHours);\n+    public int getWeeklyHours();\n+}"},{"sha":"337e3681a6a76fb18affdc1fc6d168acfd96bef7","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/IPerson.java","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/IPerson.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/IPerson.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/IPerson.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,28 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company;\n+\n+public interface IPerson {\n+\n+    public void setFirstName(String firstName);\n+    public String getFirstName();\n+\n+    public void setLastName(String lastName);\n+    public String getLastName();\n+\n+    public void setHomeAddress(IAddress homeAddress);\n+    public IAddress getHomeAddress();\n+}"},{"sha":"05dd11d7e28b6f05281b13608bde94bda749f678","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/IProduct.java","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/IProduct.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/IProduct.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/IProduct.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,33 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company;\n+\n+import java.util.*;\n+\n+public interface IProduct {\n+\n+    public void setName(String name);\n+    public String getName();\n+\n+    public void setImage(byte[] image);\n+    public byte[] getImage();\n+\n+    public void setPrice(float price);\n+    public float getPrice();\n+\n+    public void setDistributors(Set<? extends ICompany> distributors);\n+    public Set<? extends ICompany> getDistributors();\n+}"},{"sha":"7ad6d05eeafa938fa56db6cf26eb9b9f73a519fb","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/IProductOrder.java","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/IProductOrder.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/IProductOrder.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/IProductOrder.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,33 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company;\n+\n+import java.util.*;\n+\n+public interface IProductOrder {\n+\n+    public void setItems(List<? extends ILineItem> items);\n+    public List<? extends ILineItem> getItems();\n+\n+    public void setOrderDate(Date orderDate);\n+    public Date getOrderDate();\n+\n+    public void setShippedDate(Date shippedDate);\n+    public Date getShippedDate();\n+\n+    public void setCustomer(ICustomer customer);\n+    public ICustomer getCustomer();\n+}"},{"sha":"01b7eedc5317363c18c1fe9be66a93b25b3bca4e","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/Address.java","status":"added","additions":96,"deletions":0,"changes":96,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/Address.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/Address.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/Address.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.basic;\n+\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"BAS_Address\")\n+@Table(name=\"BAS_Address\") // OPENJPA-121\n+public final class Address implements IAddress {\n+    private static long idCounter = System.currentTimeMillis();\n+\n+    @Id\n+    private long id = idCounter++;\n+\n+    @Basic\n+    private String streetAddress;\n+\n+    @Basic\n+    private String city;\n+\n+    @Basic\n+    private String state;\n+\n+    @Basic\n+    private String postalCode;\n+\n+    @Basic\n+    private String phoneNumber;\n+\n+    public void setStreetAddress(String streetAddress) {\n+        this.streetAddress = streetAddress;\n+    }\n+\n+    public String getStreetAddress() {\n+        return this.streetAddress;\n+    }\n+\n+\n+    public void setCity(String city) {\n+        this.city = city;\n+    }\n+\n+    public String getCity() {\n+        return this.city;\n+    }\n+\n+\n+    public void setState(String state) {\n+        this.state = state;\n+    }\n+\n+    public String getState() {\n+        return this.state;\n+    }\n+\n+\n+    public void setPostalCode(String postalCode) {\n+        this.postalCode = postalCode;\n+    }\n+\n+    public String getPostalCode() {\n+        return this.postalCode;\n+    }\n+\n+\n+    public void setPhoneNumber(String phoneNumber) {\n+        this.phoneNumber = phoneNumber;\n+    }\n+\n+    public String getPhoneNumber() {\n+        return this.phoneNumber;\n+    }\n+\n+\n+    public void setId(long id) {\n+        this.id = id;\n+    }\n+\n+    public long getId() {\n+        return this.id;\n+    }\n+}"},{"sha":"5a8758e6974428791ad24d28f3bab7ccb17f3f0c","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/Company.java","status":"added","additions":86,"deletions":0,"changes":86,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/Company.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/Company.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/Company.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,86 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.basic;\n+\n+import java.util.*;\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"BAS_Company\")\n+@Table(name=\"BAS_Company\") // OPENJPA-121\n+public final class Company implements ICompany {\n+    private static long idCounter = System.currentTimeMillis();\n+\n+    @Id\n+    private long id = idCounter++;\n+\n+    @Basic\n+    private String name;\n+\n+    @OneToOne\n+    private Address address;\n+\n+    @OneToMany(mappedBy=\"company\")\n+    private Set<Employee> employees = new HashSet<Employee>();\n+\n+    @ManyToMany(mappedBy=\"distributors\")\n+    private Set<Product> products = new HashSet<Product>();\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public String getName() {\n+        return this.name;\n+    }\n+\n+\n+    public void setAddress(IAddress address) {\n+        this.address = (Address) address;\n+    }\n+\n+    public IAddress getAddress() {\n+        return this.address;\n+    }\n+\n+\n+    public void setEmployees(Set<? extends IEmployee> employees) {\n+        this.employees = (Set<Employee>) employees;\n+    }\n+\n+    public Set<Employee> getEmployees() {\n+        return this.employees;\n+    }\n+\n+\n+    public void setProducts(Set<? extends IProduct> products) {\n+        this.products = (Set<Product>) products;\n+    }\n+\n+    public Set<Product> getProducts() {\n+        return this.products;\n+    }\n+\n+\n+    public void setId(long id) {\n+        this.id = id;\n+    }\n+\n+    public long getId() {\n+        return this.id;\n+    }\n+\n+}"},{"sha":"6113597b9d144c3aa31299046bed2c40e4529224","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/Customer.java","status":"added","additions":58,"deletions":0,"changes":58,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/Customer.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/Customer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/Customer.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,58 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.basic;\n+\n+import java.util.*;\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"BAS_Customer\")\n+public final class Customer extends Person implements ICustomer {\n+    @OneToMany(mappedBy=\"customer\")\n+    private Collection<ProductOrder> orders = new ArrayList<ProductOrder>();\n+\n+    @OneToOne\n+    private Address shippingAddress;\n+\n+    @OneToOne\n+    private Address billingAddress;\n+\n+    public void setOrders(Collection<? extends IProductOrder> orders) {\n+        this.orders = (Collection<ProductOrder>) orders;\n+    }\n+\n+    public Collection<ProductOrder> getOrders() {\n+        return this.orders;\n+    }\n+\n+\n+    public void setShippingAddress(IAddress shippingAddress) {\n+        this.shippingAddress = (Address) shippingAddress;\n+    }\n+\n+    public IAddress getShippingAddress() {\n+        return this.shippingAddress;\n+    }\n+\n+\n+    public void setBillingAddress(IAddress billingAddress) {\n+        this.billingAddress = (Address) billingAddress;\n+    }\n+\n+    public IAddress getBillingAddress() {\n+        return this.billingAddress;\n+    }\n+}"},{"sha":"2d240623da0d1fc0e6309b386fb965c13c042cfb","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/Employee.java","status":"added","additions":70,"deletions":0,"changes":70,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/Employee.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/Employee.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/Employee.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.basic;\n+\n+import java.util.*;\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"BAS_Employee\")\n+public abstract class Employee extends Person implements IEmployee {\n+    @OneToOne\n+    private FullTimeEmployee manager;\n+\n+    @OneToOne\n+    private Company company;\n+\n+    @Basic\n+    private String title;\n+\n+    @Basic\n+    private Date hireDate;\n+\n+    public void setManager(IFullTimeEmployee manager) {\n+        this.manager = (FullTimeEmployee) manager;\n+    }\n+\n+    public IFullTimeEmployee getManager() {\n+        return this.manager;\n+    }\n+\n+\n+    public void setCompany(ICompany company) {\n+        this.company = (Company) company;\n+    }\n+\n+    public ICompany getCompany() {\n+        return this.company;\n+    }\n+\n+\n+    public void setTitle(String title) {\n+        this.title = title;\n+    }\n+\n+    public String getTitle() {\n+        return this.title;\n+    }\n+\n+\n+    public void setHireDate(Date hireDate) {\n+        this.hireDate = hireDate;\n+    }\n+\n+    public Date getHireDate() {\n+        return this.hireDate;\n+    }\n+}"},{"sha":"a2a2c9244be4831358864aba7492d75f2c4e0382","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/FullTimeEmployee.java","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/FullTimeEmployee.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/FullTimeEmployee.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/FullTimeEmployee.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,34 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.basic;\n+\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"BAS_FullTimeEmployee\")\n+public final class FullTimeEmployee extends Employee\n+    implements IFullTimeEmployee {\n+    @Basic\n+    private float salary;\n+\n+    public void setSalary(float salary) {\n+        this.salary = salary;\n+    }\n+\n+    public float getSalary() {\n+        return this.salary;\n+    }\n+}"},{"sha":"16b5bd2e341d3678dd11ef3f69006f6f26e7ab64","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/LineItem.java","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/LineItem.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/LineItem.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/LineItem.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.basic;\n+\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"BAS_LineItem\")\n+@Table(name=\"BAS_LineItem\") // OPENJPA-121\n+public final class LineItem implements ILineItem {\n+    private static long idCounter = System.currentTimeMillis();\n+\n+    @Id\n+    private long id = idCounter++;\n+\n+    @Basic\n+    private int quantity;\n+\n+    @OneToOne\n+    private Product product;\n+\n+    public void setQuantity(int quantity) {\n+        this.quantity = quantity;\n+    }\n+\n+    public int getQuantity() {\n+        return this.quantity;\n+    }\n+\n+\n+    public void setProduct(IProduct product) {\n+        this.product = (Product) product;\n+    }\n+\n+    public IProduct getProduct() {\n+        return this.product;\n+    }\n+\n+\n+    public void setId(long id) {\n+        this.id = id;\n+    }\n+\n+    public long getId() {\n+        return this.id;\n+    }\n+\n+}"},{"sha":"efa6eb70f9bdef8eb6eaba3fb4ef1cacd563cfe4","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/PartTimeEmployee.java","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/PartTimeEmployee.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/PartTimeEmployee.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/PartTimeEmployee.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,46 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.basic;\n+\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"BAS_PartTimeEmployee\")\n+public final class PartTimeEmployee extends Employee\n+    implements IPartTimeEmployee {\n+    @Basic\n+    private float wage;\n+\n+    @Basic\n+    private int weeklyHours;\n+\n+    public void setWage(float wage) {\n+        this.wage = wage;\n+    }\n+\n+    public float getWage() {\n+        return this.wage;\n+    }\n+\n+\n+    public void setWeeklyHours(int weeklyHours) {\n+        this.weeklyHours = weeklyHours;\n+    }\n+\n+    public int getWeeklyHours() {\n+        return this.weeklyHours;\n+    }\n+}"},{"sha":"ca286755056d24f3c6ce0d1ad7ceae08e026bf1b","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/Person.java","status":"added","additions":74,"deletions":0,"changes":74,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/Person.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/Person.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/Person.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.basic;\n+\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"BAS_Person\")\n+@Table(name=\"BAS_Person\") // OPENJPA-121\n+@Inheritance(strategy=InheritanceType.SINGLE_TABLE)\n+public abstract class Person implements IPerson {\n+    private static long idCounter = System.currentTimeMillis();\n+\n+    @Id\n+    private long id = idCounter++;\n+\n+    @Basic\n+    private String firstName;\n+\n+    @Basic\n+    private String lastName;\n+\n+    @OneToOne\n+    private Address homeAddress;\n+\n+    public void setFirstName(String firstName) {\n+        this.firstName = firstName;\n+    }\n+\n+    public String getFirstName() {\n+        return this.firstName;\n+    }\n+\n+\n+    public void setLastName(String lastName) {\n+        this.lastName = lastName;\n+    }\n+\n+    public String getLastName() {\n+        return this.lastName;\n+    }\n+\n+\n+    public void setHomeAddress(IAddress homeAddress) {\n+        this.homeAddress = (Address) homeAddress;\n+    }\n+\n+    public IAddress getHomeAddress() {\n+        return this.homeAddress;\n+    }\n+\n+\n+    public void setId(long id) {\n+        this.id = id;\n+    }\n+\n+    public long getId() {\n+        return this.id;\n+    }\n+\n+}"},{"sha":"0bb8c001a68064951a9b58a7e0728922dfabe81c","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/Product.java","status":"added","additions":86,"deletions":0,"changes":86,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/Product.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/Product.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/Product.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,86 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.basic;\n+\n+import java.util.*;\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"BAS_Product\")\n+@Table(name=\"BAS_Product\") // OPENJPA-121\n+public final class Product implements IProduct {\n+    private static long idCounter = System.currentTimeMillis();\n+\n+    @Id\n+    private long id = idCounter++;\n+\n+    @Basic\n+    private String name;\n+\n+    @Basic\n+    private byte[] image;\n+\n+    @Basic\n+    private float price;\n+\n+    @ManyToMany\n+    private Set<Company> distributors = new HashSet<Company>();\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public String getName() {\n+        return this.name;\n+    }\n+\n+\n+    public void setImage(byte[] image) {\n+        this.image = image;\n+    }\n+\n+    public byte[] getImage() {\n+        return this.image;\n+    }\n+\n+\n+    public void setPrice(float price) {\n+        this.price = price;\n+    }\n+\n+    public float getPrice() {\n+        return this.price;\n+    }\n+\n+\n+    public void setDistributors(Set<? extends ICompany> distributors) {\n+        this.distributors = (Set<Company>) distributors;\n+    }\n+\n+    public Set<Company> getDistributors() {\n+        return this.distributors;\n+    }\n+\n+\n+    public void setId(long id) {\n+        this.id = id;\n+    }\n+\n+    public long getId() {\n+        return this.id;\n+    }\n+\n+}"},{"sha":"540a7b11e6678dc7f1ffc9ea763135e4feb22a53","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/ProductOrder.java","status":"added","additions":86,"deletions":0,"changes":86,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/ProductOrder.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/ProductOrder.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/ProductOrder.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,86 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.basic;\n+\n+import java.util.*;\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"BAS_ProductOrder\")\n+@Table(name=\"BAS_ProductOrder\") // OPENJPA-121\n+public final class ProductOrder implements IProductOrder {\n+    private static long idCounter = System.currentTimeMillis();\n+\n+    @Id\n+    private long id = idCounter++;\n+\n+    @OneToMany\n+    private List<LineItem> items = new LinkedList<LineItem>();\n+\n+    @Basic\n+    private Date orderDate;\n+\n+    @Basic\n+    private Date shippedDate;\n+\n+    @OneToOne\n+    private Customer customer;\n+\n+    public void setItems(List<? extends ILineItem> items) {\n+        this.items = (List<LineItem>) items;\n+    }\n+\n+    public List<LineItem> getItems() {\n+        return this.items;\n+    }\n+\n+\n+    public void setOrderDate(Date orderDate) {\n+        this.orderDate = orderDate;\n+    }\n+\n+    public Date getOrderDate() {\n+        return this.orderDate;\n+    }\n+\n+\n+    public void setShippedDate(Date shippedDate) {\n+        this.shippedDate = shippedDate;\n+    }\n+\n+    public Date getShippedDate() {\n+        return this.shippedDate;\n+    }\n+\n+\n+    public void setCustomer(ICustomer customer) {\n+        this.customer = (Customer) customer;\n+    }\n+\n+    public ICustomer getCustomer() {\n+        return this.customer;\n+    }\n+\n+\n+    public void setId(long id) {\n+        this.id = id;\n+    }\n+\n+    public long getId() {\n+        return this.id;\n+    }\n+\n+}"},{"sha":"a1d5c359775f3335c7349ac9b95d14283b66808b","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/TestBasicCompanyModel.java","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/TestBasicCompanyModel.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/TestBasicCompanyModel.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/basic/TestBasicCompanyModel.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,22 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.basic;\n+\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+public class TestBasicCompanyModel extends CompanyModelTest {\n+}\n+"},{"sha":"841662f13e1f00695b844acb38e3715a6b9b14d9","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/Address.java","status":"added","additions":97,"deletions":0,"changes":97,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/Address.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/Address.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/Address.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,97 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.fetchlazy;\n+\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"LAZ_Address\")\n+@Table(name=\"LAZ_Address\") // OPENJPA-121\n+public final class Address implements IAddress {\n+    private static long idCounter = System.currentTimeMillis();\n+\n+    @Id\n+    private long id = idCounter++;\n+\n+    @Basic(fetch=FetchType.LAZY)\n+    private String streetAddress;\n+\n+    @Basic(fetch=FetchType.LAZY)\n+    private String city;\n+\n+    @Basic(fetch=FetchType.LAZY)\n+    private String state;\n+\n+    @Basic(fetch=FetchType.LAZY)\n+    private String postalCode;\n+\n+    @Basic(fetch=FetchType.LAZY)\n+    private String phoneNumber;\n+\n+    public void setStreetAddress(String streetAddress) {\n+        this.streetAddress = streetAddress;\n+    }\n+\n+    public String getStreetAddress() {\n+        return this.streetAddress;\n+    }\n+\n+\n+    public void setCity(String city) {\n+        this.city = city;\n+    }\n+\n+    public String getCity() {\n+        return this.city;\n+    }\n+\n+\n+    public void setState(String state) {\n+        this.state = state;\n+    }\n+\n+    public String getState() {\n+        return this.state;\n+    }\n+\n+\n+    public void setPostalCode(String postalCode) {\n+        this.postalCode = postalCode;\n+    }\n+\n+    public String getPostalCode() {\n+        return this.postalCode;\n+    }\n+\n+\n+    public void setPhoneNumber(String phoneNumber) {\n+        this.phoneNumber = phoneNumber;\n+    }\n+\n+    public String getPhoneNumber() {\n+        return this.phoneNumber;\n+    }\n+\n+\n+    public void setId(long id) {\n+        this.id = id;\n+    }\n+\n+    public long getId() {\n+        return this.id;\n+    }\n+\n+}"},{"sha":"4c541b85d3244cc77c8c8a7d2e7a4f4edd7682dd","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/Company.java","status":"added","additions":86,"deletions":0,"changes":86,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/Company.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/Company.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/Company.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,86 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.fetchlazy;\n+\n+import java.util.*;\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"LAZ_Company\")\n+@Table(name=\"LAZ_Company\") // OPENJPA-121\n+public final class Company implements ICompany {\n+    private static long idCounter = System.currentTimeMillis();\n+\n+    @Id\n+    private long id = idCounter++;\n+\n+    @Basic(fetch=FetchType.LAZY)\n+    private String name;\n+\n+    @OneToOne(fetch=FetchType.LAZY)\n+    private Address address;\n+\n+    @OneToMany(mappedBy=\"company\", fetch=FetchType.LAZY)\n+    private Set<Employee> employees = new HashSet<Employee>();\n+\n+    @ManyToMany(mappedBy=\"distributors\", fetch=FetchType.LAZY)\n+    private Set<Product> products = new HashSet<Product>();\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public String getName() {\n+        return this.name;\n+    }\n+\n+\n+    public void setAddress(IAddress address) {\n+        this.address = (Address) address;\n+    }\n+\n+    public IAddress getAddress() {\n+        return this.address;\n+    }\n+\n+\n+    public void setEmployees(Set<? extends IEmployee> employees) {\n+        this.employees = (Set<Employee>) employees;\n+    }\n+\n+    public Set<Employee> getEmployees() {\n+        return this.employees;\n+    }\n+\n+\n+    public void setProducts(Set<? extends IProduct> products) {\n+        this.products = (Set<Product>) products;\n+    }\n+\n+    public Set<Product> getProducts() {\n+        return this.products;\n+    }\n+\n+\n+    public void setId(long id) {\n+        this.id = id;\n+    }\n+\n+    public long getId() {\n+        return this.id;\n+    }\n+\n+}"},{"sha":"0f2ba07ee58b72190ab5df5cb8a118ff7a94ca93","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/Customer.java","status":"added","additions":58,"deletions":0,"changes":58,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/Customer.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/Customer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/Customer.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,58 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.fetchlazy;\n+\n+import java.util.*;\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"LAZ_Customer\")\n+public final class Customer extends Person implements ICustomer {\n+    @OneToMany(mappedBy=\"customer\",fetch=FetchType.LAZY)\n+    private Collection<ProductOrder> orders = new ArrayList<ProductOrder>();\n+\n+    @OneToOne(fetch=FetchType.LAZY)\n+    private Address shippingAddress;\n+\n+    @OneToOne(fetch=FetchType.LAZY)\n+    private Address billingAddress;\n+\n+    public void setOrders(Collection<? extends IProductOrder> orders) {\n+        this.orders = (Collection<ProductOrder>) orders;\n+    }\n+\n+    public Collection<ProductOrder> getOrders() {\n+        return this.orders;\n+    }\n+\n+\n+    public void setShippingAddress(IAddress shippingAddress) {\n+        this.shippingAddress = (Address) shippingAddress;\n+    }\n+\n+    public IAddress getShippingAddress() {\n+        return this.shippingAddress;\n+    }\n+\n+\n+    public void setBillingAddress(IAddress billingAddress) {\n+        this.billingAddress = (Address) billingAddress;\n+    }\n+\n+    public IAddress getBillingAddress() {\n+        return this.billingAddress;\n+    }\n+}"},{"sha":"be64b6adf24f684f0a21e16263196460a306a613","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/Employee.java","status":"added","additions":70,"deletions":0,"changes":70,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/Employee.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/Employee.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/Employee.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,70 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.fetchlazy;\n+\n+import java.util.*;\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"LAZ_Employee\")\n+public abstract class Employee extends Person implements IEmployee {\n+    @OneToOne(fetch=FetchType.LAZY)\n+    private FullTimeEmployee manager;\n+\n+    @OneToOne(fetch=FetchType.LAZY)\n+    private Company company;\n+\n+    @Basic(fetch=FetchType.LAZY)\n+    private String title;\n+\n+    @Basic(fetch=FetchType.LAZY)\n+    private Date hireDate;\n+\n+    public void setManager(IFullTimeEmployee manager) {\n+        this.manager = (FullTimeEmployee) manager;\n+    }\n+\n+    public IFullTimeEmployee getManager() {\n+        return this.manager;\n+    }\n+\n+\n+    public void setCompany(ICompany company) {\n+        this.company = (Company) company;\n+    }\n+\n+    public ICompany getCompany() {\n+        return this.company;\n+    }\n+\n+\n+    public void setTitle(String title) {\n+        this.title = title;\n+    }\n+\n+    public String getTitle() {\n+        return this.title;\n+    }\n+\n+\n+    public void setHireDate(Date hireDate) {\n+        this.hireDate = hireDate;\n+    }\n+\n+    public Date getHireDate() {\n+        return this.hireDate;\n+    }\n+}"},{"sha":"2cc6283f7d8cafb056930dbf90a22059d548e4c2","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/FullTimeEmployee.java","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/FullTimeEmployee.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/FullTimeEmployee.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/FullTimeEmployee.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,34 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.fetchlazy;\n+\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"LAZ_FullTimeEmployee\")\n+public final class FullTimeEmployee extends Employee\n+    implements IFullTimeEmployee {\n+    @Basic(fetch=FetchType.LAZY)\n+    private float salary;\n+\n+    public void setSalary(float salary) {\n+        this.salary = salary;\n+    }\n+\n+    public float getSalary() {\n+        return this.salary;\n+    }\n+}"},{"sha":"36ba13d3399b8ed2357fe51f076e3986e0c29b4b","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/LineItem.java","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/LineItem.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/LineItem.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/LineItem.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.fetchlazy;\n+\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"LAZ_LineItem\")\n+@Table(name=\"LAZ_LineItem\") // OPENJPA-121\n+public final class LineItem implements ILineItem {\n+    private static long idCounter = System.currentTimeMillis();\n+\n+    @Id\n+    private long id = idCounter++;\n+\n+    @Basic(fetch=FetchType.LAZY)\n+    private int quantity;\n+\n+    @OneToOne(fetch=FetchType.LAZY)\n+    private Product product;\n+\n+    public void setQuantity(int quantity) {\n+        this.quantity = quantity;\n+    }\n+\n+    public int getQuantity() {\n+        return this.quantity;\n+    }\n+\n+\n+    public void setProduct(IProduct product) {\n+        this.product = (Product) product;\n+    }\n+\n+    public IProduct getProduct() {\n+        return this.product;\n+    }\n+\n+\n+    public void setId(long id) {\n+        this.id = id;\n+    }\n+\n+    public long getId() {\n+        return this.id;\n+    }\n+\n+}"},{"sha":"56c052bbcd24808101e810bb9a7b538ff3cba199","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/PartTimeEmployee.java","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/PartTimeEmployee.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/PartTimeEmployee.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/PartTimeEmployee.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,46 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.fetchlazy;\n+\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"LAZ_PartTimeEmployee\")\n+public final class PartTimeEmployee extends Employee\n+    implements IPartTimeEmployee {\n+    @Basic(fetch=FetchType.LAZY)\n+    private float wage;\n+\n+    @Basic(fetch=FetchType.LAZY)\n+    private int weeklyHours;\n+\n+    public void setWage(float wage) {\n+        this.wage = wage;\n+    }\n+\n+    public float getWage() {\n+        return this.wage;\n+    }\n+\n+\n+    public void setWeeklyHours(int weeklyHours) {\n+        this.weeklyHours = weeklyHours;\n+    }\n+\n+    public int getWeeklyHours() {\n+        return this.weeklyHours;\n+    }\n+}"},{"sha":"117582e224857362b9361736fb8fc29767feb2a3","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/Person.java","status":"added","additions":74,"deletions":0,"changes":74,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/Person.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/Person.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/Person.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.fetchlazy;\n+\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"LAZ_Person\")\n+@Table(name=\"LAZ_Person\") // OPENJPA-121\n+@Inheritance(strategy=InheritanceType.SINGLE_TABLE)\n+public abstract class Person implements IPerson {\n+    private static long idCounter = System.currentTimeMillis();\n+\n+    @Id\n+    private long id = idCounter++;\n+\n+    @Basic(fetch=FetchType.LAZY)\n+    private String firstName;\n+\n+    @Basic(fetch=FetchType.LAZY)\n+    private String lastName;\n+\n+    @OneToOne(fetch=FetchType.LAZY)\n+    private Address homeAddress;\n+\n+    public void setFirstName(String firstName) {\n+        this.firstName = firstName;\n+    }\n+\n+    public String getFirstName() {\n+        return this.firstName;\n+    }\n+\n+\n+    public void setLastName(String lastName) {\n+        this.lastName = lastName;\n+    }\n+\n+    public String getLastName() {\n+        return this.lastName;\n+    }\n+\n+\n+    public void setHomeAddress(IAddress homeAddress) {\n+        this.homeAddress = (Address) homeAddress;\n+    }\n+\n+    public IAddress getHomeAddress() {\n+        return this.homeAddress;\n+    }\n+\n+\n+    public void setId(long id) {\n+        this.id = id;\n+    }\n+\n+    public long getId() {\n+        return this.id;\n+    }\n+\n+}"},{"sha":"ba0fe47398d04a472444d1c15325955e9c73e67f","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/Product.java","status":"added","additions":86,"deletions":0,"changes":86,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/Product.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/Product.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/Product.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,86 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.fetchlazy;\n+\n+import java.util.*;\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"LAZ_Product\")\n+@Table(name=\"LAZ_Product\") // OPENJPA-121\n+public final class Product implements IProduct {\n+    private static long idCounter = System.currentTimeMillis();\n+\n+    @Id\n+    private long id = idCounter++;\n+\n+    @Basic(fetch=FetchType.LAZY)\n+    private String name;\n+\n+    @Basic(fetch=FetchType.LAZY)\n+    private byte[] image;\n+\n+    @Basic(fetch=FetchType.LAZY)\n+    private float price;\n+\n+    @ManyToMany(fetch=FetchType.LAZY)\n+    private Set<Company> distributors = new HashSet<Company>();\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public String getName() {\n+        return this.name;\n+    }\n+\n+\n+    public void setImage(byte[] image) {\n+        this.image = image;\n+    }\n+\n+    public byte[] getImage() {\n+        return this.image;\n+    }\n+\n+\n+    public void setPrice(float price) {\n+        this.price = price;\n+    }\n+\n+    public float getPrice() {\n+        return this.price;\n+    }\n+\n+\n+    public void setDistributors(Set<? extends ICompany> distributors) {\n+        this.distributors = (Set<Company>) distributors;\n+    }\n+\n+    public Set<Company> getDistributors() {\n+        return this.distributors;\n+    }\n+\n+\n+    public void setId(long id) {\n+        this.id = id;\n+    }\n+\n+    public long getId() {\n+        return this.id;\n+    }\n+\n+}"},{"sha":"cea753af5f6c7c497054574518979ad0572d8617","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/ProductOrder.java","status":"added","additions":86,"deletions":0,"changes":86,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/ProductOrder.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/ProductOrder.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/ProductOrder.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,86 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.fetchlazy;\n+\n+import java.util.*;\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"LAZ_ProductOrder\")\n+@Table(name=\"LAZ_ProductOrder\") // OPENJPA-121\n+public final class ProductOrder implements IProductOrder {\n+    private static long idCounter = System.currentTimeMillis();\n+\n+    @Id\n+    private long id = idCounter++;\n+\n+    @OneToMany(fetch=FetchType.LAZY)\n+    private List<LineItem> items = new LinkedList<LineItem>();\n+\n+    @Basic(fetch=FetchType.LAZY)\n+    private Date orderDate;\n+\n+    @Basic(fetch=FetchType.LAZY)\n+    private Date shippedDate;\n+\n+    @OneToOne(fetch=FetchType.LAZY)\n+    private Customer customer;\n+\n+    public void setItems(List<? extends ILineItem> items) {\n+        this.items = (List<LineItem>) items;\n+    }\n+\n+    public List<LineItem> getItems() {\n+        return this.items;\n+    }\n+\n+\n+    public void setOrderDate(Date orderDate) {\n+        this.orderDate = orderDate;\n+    }\n+\n+    public Date getOrderDate() {\n+        return this.orderDate;\n+    }\n+\n+\n+    public void setShippedDate(Date shippedDate) {\n+        this.shippedDate = shippedDate;\n+    }\n+\n+    public Date getShippedDate() {\n+        return this.shippedDate;\n+    }\n+\n+\n+    public void setCustomer(ICustomer customer) {\n+        this.customer = (Customer) customer;\n+    }\n+\n+    public ICustomer getCustomer() {\n+        return this.customer;\n+    }\n+\n+\n+    public void setId(long id) {\n+        this.id = id;\n+    }\n+\n+    public long getId() {\n+        return this.id;\n+    }\n+\n+}"},{"sha":"de02ce366f40769c215f8adda4512ddbc2b5cef2","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/TestLazyCompanyModel.java","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/TestLazyCompanyModel.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/TestLazyCompanyModel.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/fetchlazy/TestLazyCompanyModel.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,22 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.fetchlazy;\n+\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+public class TestLazyCompanyModel extends CompanyModelTest {\n+}\n+"},{"sha":"c3d8470215fdc097b0abf3e873a059dde6a62c39","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/Address.java","status":"added","additions":87,"deletions":0,"changes":87,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/Address.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/Address.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/Address.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,87 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.idclass;\n+\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"IDC_Address\")\n+@Table(name=\"IDC_Address\") // OPENJPA-121\n+public final class Address implements IAddress {\n+    private static int ids = 1;\n+\n+    @Id\n+    private int id = ++ids;\n+\n+    @Basic\n+    private String streetAddress;\n+\n+    @Basic\n+    private String city;\n+\n+    @Basic\n+    private String state;\n+\n+    @Basic\n+    private String postalCode;\n+\n+    @Basic\n+    private String phoneNumber;\n+\n+    public void setStreetAddress(String streetAddress) {\n+        this.streetAddress = streetAddress;\n+    }\n+\n+    public String getStreetAddress() {\n+        return this.streetAddress;\n+    }\n+\n+\n+    public void setCity(String city) {\n+        this.city = city;\n+    }\n+\n+    public String getCity() {\n+        return this.city;\n+    }\n+\n+\n+    public void setState(String state) {\n+        this.state = state;\n+    }\n+\n+    public String getState() {\n+        return this.state;\n+    }\n+\n+\n+    public void setPostalCode(String postalCode) {\n+        this.postalCode = postalCode;\n+    }\n+\n+    public String getPostalCode() {\n+        return this.postalCode;\n+    }\n+\n+\n+    public void setPhoneNumber(String phoneNumber) {\n+        this.phoneNumber = phoneNumber;\n+    }\n+\n+    public String getPhoneNumber() {\n+        return this.phoneNumber;\n+    }\n+}"},{"sha":"8f9f86e245f61a2b1f1c7a170d55005ffd846f66","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/Company.java","status":"added","additions":76,"deletions":0,"changes":76,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/Company.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/Company.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/Company.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,76 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.idclass;\n+\n+import java.util.*;\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"IDC_Company\")\n+@Table(name=\"IDC_Company\") // OPENJPA-121\n+public final class Company implements ICompany {\n+    private static int ids = 1;\n+\n+    @Id\n+    private int id = ++ids;\n+\n+    @Basic\n+    private String name;\n+\n+    @OneToOne\n+    private Address address;\n+\n+    @OneToMany(mappedBy=\"company\")\n+    private Set<Employee> employees = new HashSet<Employee>();\n+\n+    @ManyToMany(mappedBy=\"distributors\")\n+    private Set<Product> products = new HashSet<Product>();\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public String getName() {\n+        return this.name;\n+    }\n+\n+\n+    public void setAddress(IAddress address) {\n+        this.address = (Address) address;\n+    }\n+\n+    public IAddress getAddress() {\n+        return this.address;\n+    }\n+\n+\n+    public void setEmployees(Set<? extends IEmployee> employees) {\n+        this.employees = (Set<Employee>) employees;\n+    }\n+\n+    public Set<Employee> getEmployees() {\n+        return this.employees;\n+    }\n+\n+\n+    public void setProducts(Set<? extends IProduct> products) {\n+        this.products = (Set<Product>) products;\n+    }\n+\n+    public Set<Product> getProducts() {\n+        return this.products;\n+    }\n+}"},{"sha":"0fd45c20e4c17f38092a072445e3d82ec80d3236","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/Customer.java","status":"added","additions":59,"deletions":0,"changes":59,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/Customer.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/Customer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/Customer.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,59 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.idclass;\n+\n+import java.util.*;\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"IDC_Customer\")\n+public final class Customer extends Person implements ICustomer {\n+\n+    @OneToMany(mappedBy=\"customer\")\n+    private Collection<ProductOrder> orders = new ArrayList<ProductOrder>();\n+\n+    @OneToOne\n+    private Address shippingAddress;\n+\n+    @OneToOne\n+    private Address billingAddress;\n+\n+    public void setOrders(Collection<? extends IProductOrder> orders) {\n+        this.orders = (Collection<ProductOrder>) orders;\n+    }\n+\n+    public Collection<ProductOrder> getOrders() {\n+        return this.orders;\n+    }\n+\n+\n+    public void setShippingAddress(IAddress shippingAddress) {\n+        this.shippingAddress = (Address) shippingAddress;\n+    }\n+\n+    public IAddress getShippingAddress() {\n+        return this.shippingAddress;\n+    }\n+\n+\n+    public void setBillingAddress(IAddress billingAddress) {\n+        this.billingAddress = (Address) billingAddress;\n+    }\n+\n+    public IAddress getBillingAddress() {\n+        return this.billingAddress;\n+    }\n+}"},{"sha":"d502c968ddde9a260bc1b4717ab8de9208ba25ef","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/Employee.java","status":"added","additions":71,"deletions":0,"changes":71,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/Employee.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/Employee.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/Employee.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,71 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.idclass;\n+\n+import java.util.*;\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"IDC_Employee\")\n+public abstract class Employee extends Person implements IEmployee {\n+\n+    @OneToOne\n+    private FullTimeEmployee manager;\n+\n+    @OneToOne\n+    private Company company;\n+\n+    @Basic\n+    private String title;\n+\n+    @Basic\n+    private Date hireDate;\n+\n+    public void setManager(IFullTimeEmployee manager) {\n+        this.manager = (FullTimeEmployee) manager;\n+    }\n+\n+    public IFullTimeEmployee getManager() {\n+        return this.manager;\n+    }\n+\n+\n+    public void setCompany(ICompany company) {\n+        this.company = (Company) company;\n+    }\n+\n+    public ICompany getCompany() {\n+        return this.company;\n+    }\n+\n+\n+    public void setTitle(String title) {\n+        this.title = title;\n+    }\n+\n+    public String getTitle() {\n+        return this.title;\n+    }\n+\n+\n+    public void setHireDate(Date hireDate) {\n+        this.hireDate = hireDate;\n+    }\n+\n+    public Date getHireDate() {\n+        return this.hireDate;\n+    }\n+}"},{"sha":"3ca4523e6f187139d617f9203177daafa0cdd4bf","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/FullTimeEmployee.java","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/FullTimeEmployee.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/FullTimeEmployee.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/FullTimeEmployee.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,35 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.idclass;\n+\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"IDC_FullTimeEmployee\")\n+public final class FullTimeEmployee extends Employee\n+    implements IFullTimeEmployee {\n+\n+    @Basic\n+    private float salary;\n+\n+    public void setSalary(float salary) {\n+        this.salary = salary;\n+    }\n+\n+    public float getSalary() {\n+        return this.salary;\n+    }\n+}"},{"sha":"cda39fdb217fd49bf36c72a7120fd67e48f6f30c","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/LineItem.java","status":"added","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/LineItem.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/LineItem.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/LineItem.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.idclass;\n+\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"IDC_LineItem\")\n+@Table(name=\"IDC_LineItem\") // OPENJPA-121\n+public final class LineItem implements ILineItem {\n+    private static int ids = 1;\n+\n+    @Id\n+    private int id = ++ids;\n+\n+    @Basic\n+    private int quantity;\n+\n+    @OneToOne\n+    private Product product;\n+\n+    public void setQuantity(int quantity) {\n+        this.quantity = quantity;\n+    }\n+\n+    public int getQuantity() {\n+        return this.quantity;\n+    }\n+\n+\n+    public void setProduct(IProduct product) {\n+        this.product = (Product) product;\n+    }\n+\n+    public IProduct getProduct() {\n+        return this.product;\n+    }\n+}"},{"sha":"45d468a393e27d7261c9a592dbbfd96b65b6a04c","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/PartTimeEmployee.java","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/PartTimeEmployee.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/PartTimeEmployee.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/PartTimeEmployee.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,46 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.idclass;\n+\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"IDC_PartTimeEmployee\")\n+public final class PartTimeEmployee extends Employee\n+    implements IPartTimeEmployee {\n+    @Basic\n+    private float wage;\n+\n+    @Basic\n+    private int weeklyHours;\n+\n+    public void setWage(float wage) {\n+        this.wage = wage;\n+    }\n+\n+    public float getWage() {\n+        return this.wage;\n+    }\n+\n+\n+    public void setWeeklyHours(int weeklyHours) {\n+        this.weeklyHours = weeklyHours;\n+    }\n+\n+    public int getWeeklyHours() {\n+        return this.weeklyHours;\n+    }\n+}"},{"sha":"f2d2aacb6edb1bbf1a31c9d0a24b1d88cd612b6f","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/Person.java","status":"added","additions":64,"deletions":0,"changes":64,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/Person.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/Person.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/Person.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,64 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.idclass;\n+\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"IDC_Person\")\n+@Table(name=\"IDC_Person\") // OPENJPA-121\n+@Inheritance(strategy=InheritanceType.SINGLE_TABLE)\n+public abstract class Person implements IPerson {\n+    private static int ids = 1;\n+\n+    @Id\n+    private int id = ++ids;\n+\n+    @Basic\n+    private String firstName;\n+\n+    @Basic\n+    private String lastName;\n+\n+    @OneToOne\n+    private Address homeAddress;\n+\n+    public void setFirstName(String firstName) {\n+        this.firstName = firstName;\n+    }\n+\n+    public String getFirstName() {\n+        return this.firstName;\n+    }\n+\n+\n+    public void setLastName(String lastName) {\n+        this.lastName = lastName;\n+    }\n+\n+    public String getLastName() {\n+        return this.lastName;\n+    }\n+\n+\n+    public void setHomeAddress(IAddress homeAddress) {\n+        this.homeAddress = (Address) homeAddress;\n+    }\n+\n+    public IAddress getHomeAddress() {\n+        return this.homeAddress;\n+    }\n+}"},{"sha":"9a2f63c34d1d34d59fe9c7e70ff8c502082700c4","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/Product.java","status":"added","additions":76,"deletions":0,"changes":76,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/Product.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/Product.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/Product.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,76 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.idclass;\n+\n+import java.util.*;\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"IDC_Product\")\n+@Table(name=\"IDC_Product\") // OPENJPA-121\n+public final class Product implements IProduct {\n+    private static int ids = 1;\n+\n+    @Id\n+    private int id = ++ids;\n+\n+    @Basic\n+    private String name;\n+\n+    @Basic\n+    private byte[] image;\n+\n+    @Basic\n+    private float price;\n+\n+    @ManyToMany\n+    private Set<Company> distributors = new HashSet<Company>();\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public String getName() {\n+        return this.name;\n+    }\n+\n+\n+    public void setImage(byte[] image) {\n+        this.image = image;\n+    }\n+\n+    public byte[] getImage() {\n+        return this.image;\n+    }\n+\n+\n+    public void setPrice(float price) {\n+        this.price = price;\n+    }\n+\n+    public float getPrice() {\n+        return this.price;\n+    }\n+\n+\n+    public void setDistributors(Set<? extends ICompany> distributors) {\n+        this.distributors = (Set<Company>) distributors;\n+    }\n+\n+    public Set<Company> getDistributors() {\n+        return this.distributors;\n+    }\n+}"},{"sha":"64b33369e1ca5fd9be6f1d08604b92e3109867ff","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/ProductOrder.java","status":"added","additions":76,"deletions":0,"changes":76,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/ProductOrder.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/ProductOrder.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/ProductOrder.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,76 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.idclass;\n+\n+import java.util.*;\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"IDC_ProductOrder\")\n+@Table(name=\"IDC_ProductOrder\") // OPENJPA-121\n+public final class ProductOrder implements IProductOrder {\n+    private static int ids = 1;\n+\n+    @Id\n+    private int id = ++ids;\n+\n+    @OneToMany\n+    private List<LineItem> items = new LinkedList<LineItem>();\n+\n+    @Basic\n+    private Date orderDate;\n+\n+    @Basic\n+    private Date shippedDate;\n+\n+    @OneToOne\n+    private Customer customer;\n+\n+    public void setItems(List<? extends ILineItem> items) {\n+        this.items = (List<LineItem>) items;\n+    }\n+\n+    public List<LineItem> getItems() {\n+        return this.items;\n+    }\n+\n+\n+    public void setOrderDate(Date orderDate) {\n+        this.orderDate = orderDate;\n+    }\n+\n+    public Date getOrderDate() {\n+        return this.orderDate;\n+    }\n+\n+\n+    public void setShippedDate(Date shippedDate) {\n+        this.shippedDate = shippedDate;\n+    }\n+\n+    public Date getShippedDate() {\n+        return this.shippedDate;\n+    }\n+\n+\n+    public void setCustomer(ICustomer customer) {\n+        this.customer = (Customer) customer;\n+    }\n+\n+    public ICustomer getCustomer() {\n+        return this.customer;\n+    }\n+}"},{"sha":"d13053420020578fee967fd6b0492288c125a5c9","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/TestIdClassCompanyModel.java","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/TestIdClassCompanyModel.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/TestIdClassCompanyModel.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/idclass/TestIdClassCompanyModel.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,22 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.idclass;\n+\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+public class TestIdClassCompanyModel extends CompanyModelTest {\n+}\n+"},{"sha":"ff69b7e2feb9d278a5b5fe86e7759d6174f0ee32","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/Address.java","status":"added","additions":97,"deletions":0,"changes":97,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/Address.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/Address.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/Address.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,97 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.joined;\n+\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"JI_Address\")\n+@Table(name=\"JI_Address\") // OPENJPA-121\n+public final class Address implements IAddress {\n+    private static long idCounter = System.currentTimeMillis();\n+\n+    @Id\n+    private long id = idCounter++;\n+\n+    @Basic\n+    private String streetAddress;\n+\n+    @Basic\n+    private String city;\n+\n+    @Basic\n+    private String state;\n+\n+    @Basic\n+    private String postalCode;\n+\n+    @Basic\n+    private String phoneNumber;\n+\n+    public void setStreetAddress(String streetAddress) {\n+        this.streetAddress = streetAddress;\n+    }\n+\n+    public String getStreetAddress() {\n+        return this.streetAddress;\n+    }\n+\n+\n+    public void setCity(String city) {\n+        this.city = city;\n+    }\n+\n+    public String getCity() {\n+        return this.city;\n+    }\n+\n+\n+    public void setState(String state) {\n+        this.state = state;\n+    }\n+\n+    public String getState() {\n+        return this.state;\n+    }\n+\n+\n+    public void setPostalCode(String postalCode) {\n+        this.postalCode = postalCode;\n+    }\n+\n+    public String getPostalCode() {\n+        return this.postalCode;\n+    }\n+\n+\n+    public void setPhoneNumber(String phoneNumber) {\n+        this.phoneNumber = phoneNumber;\n+    }\n+\n+    public String getPhoneNumber() {\n+        return this.phoneNumber;\n+    }\n+\n+\n+    public void setId(long id) {\n+        this.id = id;\n+    }\n+\n+    public long getId() {\n+        return this.id;\n+    }\n+\n+}"},{"sha":"4aadbdbefb3ecf78a2c8ec23b208309d97c5ac44","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/Company.java","status":"added","additions":86,"deletions":0,"changes":86,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/Company.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/Company.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/Company.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,86 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.joined;\n+\n+import java.util.*;\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"JI_Company\")\n+@Table(name=\"JI_Company\") // OPENJPA-121\n+public final class Company implements ICompany {\n+    private static long idCounter = System.currentTimeMillis();\n+\n+    @Id\n+    private long id = idCounter++;\n+\n+    @Basic\n+    private String name;\n+\n+    @OneToOne\n+    private Address address;\n+\n+    @OneToMany(mappedBy=\"company\")\n+    private Set<Employee> employees = new HashSet<Employee>();\n+\n+    @ManyToMany(mappedBy=\"distributors\")\n+    private Set<Product> products = new HashSet<Product>();\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public String getName() {\n+        return this.name;\n+    }\n+\n+\n+    public void setAddress(IAddress address) {\n+        this.address = (Address) address;\n+    }\n+\n+    public IAddress getAddress() {\n+        return this.address;\n+    }\n+\n+\n+    public void setEmployees(Set<? extends IEmployee> employees) {\n+        this.employees = (Set<Employee>) employees;\n+    }\n+\n+    public Set<Employee> getEmployees() {\n+        return this.employees;\n+    }\n+\n+\n+    public void setProducts(Set<? extends IProduct> products) {\n+        this.products = (Set<Product>) products;\n+    }\n+\n+    public Set<Product> getProducts() {\n+        return this.products;\n+    }\n+\n+\n+    public void setId(long id) {\n+        this.id = id;\n+    }\n+\n+    public long getId() {\n+        return this.id;\n+    }\n+\n+}"},{"sha":"e79216882ebb9233d2fba0b61c17efe57645573c","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/Customer.java","status":"added","additions":60,"deletions":0,"changes":60,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/Customer.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/Customer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/Customer.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,60 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.joined;\n+\n+import java.util.*;\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"JI_Customer\")\n+@Table(name=\"JI_Customer\") // OPENJPA-121\n+@Inheritance(strategy=InheritanceType.JOINED)\n+public final class Customer extends Person implements ICustomer {\n+    @OneToMany(mappedBy=\"customer\")\n+    private Collection<ProductOrder> orders = new ArrayList<ProductOrder>();\n+\n+    @OneToOne\n+    private Address shippingAddress;\n+\n+    @OneToOne\n+    private Address billingAddress;\n+\n+    public void setOrders(Collection<? extends IProductOrder> orders) {\n+        this.orders = (Collection<ProductOrder>) orders;\n+    }\n+\n+    public Collection<ProductOrder> getOrders() {\n+        return this.orders;\n+    }\n+\n+\n+    public void setShippingAddress(IAddress shippingAddress) {\n+        this.shippingAddress = (Address) shippingAddress;\n+    }\n+\n+    public IAddress getShippingAddress() {\n+        return this.shippingAddress;\n+    }\n+\n+\n+    public void setBillingAddress(IAddress billingAddress) {\n+        this.billingAddress = (Address) billingAddress;\n+    }\n+\n+    public IAddress getBillingAddress() {\n+        return this.billingAddress;\n+    }\n+}"},{"sha":"c03a23a29d5d7b330fcaa658b769443e83b469f5","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/Employee.java","status":"added","additions":72,"deletions":0,"changes":72,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/Employee.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/Employee.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/Employee.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,72 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.joined;\n+\n+import java.util.*;\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"JI_Employee\")\n+@Table(name=\"JI_Employee\") // OPENJPA-121\n+@Inheritance(strategy=InheritanceType.JOINED)\n+public abstract class Employee extends Person implements IEmployee {\n+    @OneToOne\n+    private FullTimeEmployee manager;\n+\n+    @OneToOne\n+    private Company company;\n+\n+    @Basic\n+    private String title;\n+\n+    @Basic\n+    private Date hireDate;\n+\n+    public void setManager(IFullTimeEmployee manager) {\n+        this.manager = (FullTimeEmployee) manager;\n+    }\n+\n+    public IFullTimeEmployee getManager() {\n+        return this.manager;\n+    }\n+\n+\n+    public void setCompany(ICompany company) {\n+        this.company = (Company) company;\n+    }\n+\n+    public ICompany getCompany() {\n+        return this.company;\n+    }\n+\n+\n+    public void setTitle(String title) {\n+        this.title = title;\n+    }\n+\n+    public String getTitle() {\n+        return this.title;\n+    }\n+\n+\n+    public void setHireDate(Date hireDate) {\n+        this.hireDate = hireDate;\n+    }\n+\n+    public Date getHireDate() {\n+        return this.hireDate;\n+    }\n+}"},{"sha":"de791c5c677e45a52eb8e4ec811fba0679f43ae8","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/FullTimeEmployee.java","status":"added","additions":36,"deletions":0,"changes":36,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/FullTimeEmployee.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/FullTimeEmployee.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/FullTimeEmployee.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,36 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.joined;\n+\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"JI_FullTimeEmployee\")\n+@Table(name=\"JI_FullTimeEmployee\") // OPENJPA-121\n+@Inheritance(strategy=InheritanceType.JOINED)\n+public final class FullTimeEmployee extends Employee\n+    implements IFullTimeEmployee {\n+    @Basic\n+    private float salary;\n+\n+    public void setSalary(float salary) {\n+        this.salary = salary;\n+    }\n+\n+    public float getSalary() {\n+        return this.salary;\n+    }\n+}"},{"sha":"dc5df51aa8b1ff3fcfc9c38aecf6f6df77e96afc","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/LineItem.java","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/LineItem.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/LineItem.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/LineItem.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.joined;\n+\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"JI_LineItem\")\n+@Table(name=\"JI_LineItem\") // OPENJPA-121\n+public final class LineItem implements ILineItem {\n+    private static long idCounter = System.currentTimeMillis();\n+\n+    @Id\n+    private long id = idCounter++;\n+\n+    @Basic\n+    private int quantity;\n+\n+    @OneToOne\n+    private Product product;\n+\n+    public void setQuantity(int quantity) {\n+        this.quantity = quantity;\n+    }\n+\n+    public int getQuantity() {\n+        return this.quantity;\n+    }\n+\n+\n+    public void setProduct(IProduct product) {\n+        this.product = (Product) product;\n+    }\n+\n+    public IProduct getProduct() {\n+        return this.product;\n+    }\n+\n+\n+    public void setId(long id) {\n+        this.id = id;\n+    }\n+\n+    public long getId() {\n+        return this.id;\n+    }\n+\n+}"},{"sha":"07b5b9adc18cb1c255d6f5784f3d656dd5957b59","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/PartTimeEmployee.java","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/PartTimeEmployee.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/PartTimeEmployee.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/PartTimeEmployee.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,48 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.joined;\n+\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"JI_PartTimeEmployee\")\n+@Table(name=\"JI_PartTimeEmployee\") // OPENJPA-121\n+@Inheritance(strategy=InheritanceType.JOINED)\n+public final class PartTimeEmployee extends Employee\n+    implements IPartTimeEmployee {\n+    @Basic\n+    private float wage;\n+\n+    @Basic\n+    private int weeklyHours;\n+\n+    public void setWage(float wage) {\n+        this.wage = wage;\n+    }\n+\n+    public float getWage() {\n+        return this.wage;\n+    }\n+\n+\n+    public void setWeeklyHours(int weeklyHours) {\n+        this.weeklyHours = weeklyHours;\n+    }\n+\n+    public int getWeeklyHours() {\n+        return this.weeklyHours;\n+    }\n+}"},{"sha":"43ae57b2197f40b8f1b67da620c24b58d148c2e2","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/Person.java","status":"added","additions":74,"deletions":0,"changes":74,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/Person.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/Person.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/Person.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,74 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.joined;\n+\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"JI_Person\")\n+@Table(name=\"JI_Person\") // OPENJPA-121\n+@Inheritance(strategy=InheritanceType.JOINED)\n+public abstract class Person implements IPerson {\n+    private static long idCounter = System.currentTimeMillis();\n+\n+    @Id\n+    private long id = idCounter++;\n+\n+    @Basic\n+    private String firstName;\n+\n+    @Basic\n+    private String lastName;\n+\n+    @OneToOne\n+    private Address homeAddress;\n+\n+    public void setFirstName(String firstName) {\n+        this.firstName = firstName;\n+    }\n+\n+    public String getFirstName() {\n+        return this.firstName;\n+    }\n+\n+\n+    public void setLastName(String lastName) {\n+        this.lastName = lastName;\n+    }\n+\n+    public String getLastName() {\n+        return this.lastName;\n+    }\n+\n+\n+    public void setHomeAddress(IAddress homeAddress) {\n+        this.homeAddress = (Address) homeAddress;\n+    }\n+\n+    public IAddress getHomeAddress() {\n+        return this.homeAddress;\n+    }\n+\n+\n+    public void setId(long id) {\n+        this.id = id;\n+    }\n+\n+    public long getId() {\n+        return this.id;\n+    }\n+\n+}"},{"sha":"5fa8f3e974f5ab9590c7c82f711864b6d0690479","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/Product.java","status":"added","additions":86,"deletions":0,"changes":86,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/Product.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/Product.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/Product.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,86 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.joined;\n+\n+import java.util.*;\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"JI_Product\")\n+@Table(name=\"JI_Product\") // OPENJPA-121\n+public final class Product implements IProduct {\n+    private static long idCounter = System.currentTimeMillis();\n+\n+    @Id\n+    private long id = idCounter++;\n+\n+    @Basic\n+    private String name;\n+\n+    @Basic\n+    private byte[] image;\n+\n+    @Basic\n+    private float price;\n+\n+    @ManyToMany\n+    private Set<Company> distributors = new HashSet<Company>();\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public String getName() {\n+        return this.name;\n+    }\n+\n+\n+    public void setImage(byte[] image) {\n+        this.image = image;\n+    }\n+\n+    public byte[] getImage() {\n+        return this.image;\n+    }\n+\n+\n+    public void setPrice(float price) {\n+        this.price = price;\n+    }\n+\n+    public float getPrice() {\n+        return this.price;\n+    }\n+\n+\n+    public void setDistributors(Set<? extends ICompany> distributors) {\n+        this.distributors = (Set<Company>) distributors;\n+    }\n+\n+    public Set<Company> getDistributors() {\n+        return this.distributors;\n+    }\n+\n+\n+    public void setId(long id) {\n+        this.id = id;\n+    }\n+\n+    public long getId() {\n+        return this.id;\n+    }\n+\n+}"},{"sha":"f4e8645cf1eae0e6c4b79411b45adea9bfdc2e21","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/ProductOrder.java","status":"added","additions":86,"deletions":0,"changes":86,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/ProductOrder.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/ProductOrder.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/ProductOrder.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,86 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.joined;\n+\n+import java.util.*;\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"JI_ProductOrder\")\n+@Table(name=\"JI_ProductOrder\") // OPENJPA-121\n+public final class ProductOrder implements IProductOrder {\n+    private static long idCounter = System.currentTimeMillis();\n+\n+    @Id\n+    private long id = idCounter++;\n+\n+    @OneToMany\n+    private List<LineItem> items = new LinkedList<LineItem>();\n+\n+    @Basic\n+    private Date orderDate;\n+\n+    @Basic\n+    private Date shippedDate;\n+\n+    @OneToOne\n+    private Customer customer;\n+\n+    public void setItems(List<? extends ILineItem> items) {\n+        this.items = (List<LineItem>) items;\n+    }\n+\n+    public List<LineItem> getItems() {\n+        return this.items;\n+    }\n+\n+\n+    public void setOrderDate(Date orderDate) {\n+        this.orderDate = orderDate;\n+    }\n+\n+    public Date getOrderDate() {\n+        return this.orderDate;\n+    }\n+\n+\n+    public void setShippedDate(Date shippedDate) {\n+        this.shippedDate = shippedDate;\n+    }\n+\n+    public Date getShippedDate() {\n+        return this.shippedDate;\n+    }\n+\n+\n+    public void setCustomer(ICustomer customer) {\n+        this.customer = (Customer) customer;\n+    }\n+\n+    public ICustomer getCustomer() {\n+        return this.customer;\n+    }\n+\n+\n+    public void setId(long id) {\n+        this.id = id;\n+    }\n+\n+    public long getId() {\n+        return this.id;\n+    }\n+\n+}"},{"sha":"0836773cefd5f87f08b2a94343066ae3b4c54fb3","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/TestJoinedCompanyModel.java","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/TestJoinedCompanyModel.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/TestJoinedCompanyModel.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/joined/TestJoinedCompanyModel.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,22 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.joined;\n+\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+public class TestJoinedCompanyModel extends CompanyModelTest {\n+}\n+"},{"sha":"bb7d7a5bec9183e85e7d9b261ff746ac9abdfb4d","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/Address.java","status":"added","additions":93,"deletions":0,"changes":93,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/Address.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/Address.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/Address.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.propertyaccess;\n+\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"PRP_Address\")\n+@Table(name=\"PRP_Address\") // OPENJPA-121\n+public final class Address implements IAddress {\n+    private static long idCounter = System.currentTimeMillis();\n+\n+    private long id = idCounter++;\n+\n+    private String streetAddress;\n+    private String city;\n+    private String state;\n+    private String postalCode;\n+    private String phoneNumber;\n+\n+    public void setStreetAddress(String streetAddress) {\n+        this.streetAddress = streetAddress;\n+    }\n+\n+    @Basic\n+    public String getStreetAddress() {\n+        return this.streetAddress;\n+    }\n+\n+\n+    public void setCity(String city) {\n+        this.city = city;\n+    }\n+\n+    @Basic\n+    public String getCity() {\n+        return this.city;\n+    }\n+\n+\n+    public void setState(String state) {\n+        this.state = state;\n+    }\n+\n+    @Basic\n+    public String getState() {\n+        return this.state;\n+    }\n+\n+\n+    public void setPostalCode(String postalCode) {\n+        this.postalCode = postalCode;\n+    }\n+\n+    @Basic\n+    public String getPostalCode() {\n+        return this.postalCode;\n+    }\n+\n+\n+    public void setPhoneNumber(String phoneNumber) {\n+        this.phoneNumber = phoneNumber;\n+    }\n+\n+    @Basic\n+    public String getPhoneNumber() {\n+        return this.phoneNumber;\n+    }\n+\n+\n+    public void setId(long id) {\n+        this.id = id;\n+    }\n+\n+    @Id\n+    public long getId() {\n+        return this.id;\n+    }\n+\n+}"},{"sha":"f279017b25152aed8e249f68a6b9f5680f655d64","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/Company.java","status":"added","additions":87,"deletions":0,"changes":87,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/Company.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/Company.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/Company.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,87 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.propertyaccess;\n+\n+import java.util.*;\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"PRP_Company\")\n+@Table(name=\"PRP_Company\") // OPENJPA-121\n+public final class Company implements ICompany {\n+    private static long idCounter = System.currentTimeMillis();\n+\n+    private long id = idCounter++;\n+\n+    private String name;\n+    private Address address;\n+    private Set<Employee> employees = new HashSet<Employee>();\n+    private Set<Product> products = new HashSet<Product>();\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    @Basic\n+    public String getName() {\n+        return this.name;\n+    }\n+\n+\n+    public void setAddress(IAddress address) {\n+        setAddress((Address) address);\n+    }\n+\n+    public void setAddress(Address address) {\n+        this.address = address;\n+    }\n+\n+    @OneToOne\n+    public Address getAddress() {\n+        return this.address;\n+    }\n+\n+\n+    public void setEmployees(Set<? extends IEmployee> employees) {\n+        this.employees = (Set<Employee>) employees;\n+    }\n+\n+    @OneToMany(mappedBy=\"company\")\n+    public Set<Employee> getEmployees() {\n+        return this.employees;\n+    }\n+\n+\n+    public void setProducts(Set<? extends IProduct> products) {\n+        this.products = (Set<Product>) products;\n+    }\n+\n+    @ManyToMany(mappedBy=\"distributors\")\n+    public Set<Product> getProducts() {\n+        return this.products;\n+    }\n+\n+\n+    public void setId(long id) {\n+        this.id = id;\n+    }\n+\n+    @Id\n+    public long getId() {\n+        return this.id;\n+    }\n+\n+}"},{"sha":"e522539eaf167049dacbcdb844b38a8fca13befb","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/Customer.java","status":"added","additions":64,"deletions":0,"changes":64,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/Customer.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/Customer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/Customer.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,64 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.propertyaccess;\n+\n+import java.util.*;\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"PRP_Customer\")\n+public final class Customer extends Person implements ICustomer {\n+    private Collection<ProductOrder> orders = new ArrayList<ProductOrder>();\n+    private Address shippingAddress;\n+    private Address billingAddress;\n+\n+    public void setOrders(Collection<? extends IProductOrder> orders) {\n+        this.orders = (Collection<ProductOrder>) orders;\n+    }\n+\n+    @OneToMany(mappedBy=\"customer\")\n+    public Collection<ProductOrder> getOrders() {\n+        return this.orders;\n+    }\n+\n+\n+    public void setShippingAddress(IAddress shippingAddress) {\n+        setShippingAddress((Address) shippingAddress);\n+    }\n+\n+    public void setShippingAddress(Address shippingAddress) {\n+        this.shippingAddress = shippingAddress;\n+    }\n+\n+    @OneToOne\n+    public Address getShippingAddress() {\n+        return this.shippingAddress;\n+    }\n+\n+\n+    public void setBillingAddress(IAddress billingAddress) {\n+        setBillingAddress((Address) billingAddress);\n+    }\n+\n+    public void setBillingAddress(Address billingAddress) {\n+        this.billingAddress = billingAddress;\n+    }\n+\n+    @OneToOne\n+    public Address getBillingAddress() {\n+        return this.billingAddress;\n+    }\n+}"},{"sha":"9c12931e5824fa021ae037f9a5293202a4208632","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/Employee.java","status":"added","additions":75,"deletions":0,"changes":75,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/Employee.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/Employee.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/Employee.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,75 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.propertyaccess;\n+\n+import java.util.*;\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"PRP_Employee\")\n+public abstract class Employee extends Person implements IEmployee {\n+    private FullTimeEmployee manager;\n+    private Company company;\n+    private String title;\n+    private Date hireDate;\n+\n+    public void setManager(IFullTimeEmployee manager) {\n+        setManager((FullTimeEmployee) manager);\n+    }\n+\n+    public void setManager(FullTimeEmployee manager) {\n+        this.manager = manager;\n+    }\n+\n+    @OneToOne\n+    public FullTimeEmployee getManager() {\n+        return this.manager;\n+    }\n+\n+\n+    public void setCompany(ICompany company) {\n+        setCompany((Company) company);\n+    }\n+\n+    public void setCompany(Company company) {\n+        this.company = company;\n+    }\n+\n+    @OneToOne\n+    public Company getCompany() {\n+        return this.company;\n+    }\n+\n+\n+    public void setTitle(String title) {\n+        this.title = title;\n+    }\n+\n+    @Basic\n+    public String getTitle() {\n+        return this.title;\n+    }\n+\n+\n+    public void setHireDate(Date hireDate) {\n+        this.hireDate = hireDate;\n+    }\n+\n+    @Basic\n+    public Date getHireDate() {\n+        return this.hireDate;\n+    }\n+}"},{"sha":"988c7ce71dfe43d2a719aa61023319c4b311c0a0","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/FullTimeEmployee.java","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/FullTimeEmployee.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/FullTimeEmployee.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/FullTimeEmployee.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,34 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.propertyaccess;\n+\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"PRP_FullTimeEmployee\")\n+public final class FullTimeEmployee extends Employee\n+    implements IFullTimeEmployee {\n+    private float salary;\n+\n+    public void setSalary(float salary) {\n+        this.salary = salary;\n+    }\n+\n+    @Basic\n+    public float getSalary() {\n+        return this.salary;\n+    }\n+}"},{"sha":"83e5cebdc34bcdf76ceb7bcd2bb851b0418dd1cf","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/LineItem.java","status":"added","additions":64,"deletions":0,"changes":64,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/LineItem.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/LineItem.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/LineItem.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,64 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.propertyaccess;\n+\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"PRP_LineItem\")\n+@Table(name=\"PRP_LineItem\") // OPENJPA-121\n+public final class LineItem implements ILineItem {\n+    private static long idCounter = System.currentTimeMillis();\n+\n+    private long id = idCounter++;\n+\n+    private int quantity;\n+    private Product product;\n+\n+    public void setQuantity(int quantity) {\n+        this.quantity = quantity;\n+    }\n+\n+    @Basic\n+    public int getQuantity() {\n+        return this.quantity;\n+    }\n+\n+\n+    public void setProduct(IProduct product) {\n+        setProduct((Product) product);\n+    }\n+\n+    public void setProduct(Product product) {\n+        this.product = product;\n+    }\n+\n+    @OneToOne\n+    public Product getProduct() {\n+        return this.product;\n+    }\n+\n+\n+    public void setId(long id) {\n+        this.id = id;\n+    }\n+\n+    @Id\n+    public long getId() {\n+        return this.id;\n+    }\n+\n+}"},{"sha":"ba27b4c13c08967d8b6ae0963aecfeaed9cf5565","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/PartTimeEmployee.java","status":"added","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/PartTimeEmployee.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/PartTimeEmployee.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/PartTimeEmployee.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.propertyaccess;\n+\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"PRP_PartTimeEmployee\")\n+public final class PartTimeEmployee extends Employee\n+    implements IPartTimeEmployee {\n+    private float wage;\n+    private int weeklyHours;\n+\n+    public void setWage(float wage) {\n+        this.wage = wage;\n+    }\n+\n+    @Basic\n+    public float getWage() {\n+        return this.wage;\n+    }\n+\n+\n+    public void setWeeklyHours(int weeklyHours) {\n+        this.weeklyHours = weeklyHours;\n+    }\n+\n+    @Basic\n+    public int getWeeklyHours() {\n+        return this.weeklyHours;\n+    }\n+}"},{"sha":"2d80271ba52143eda83fb3c9c91e806878038dac","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/Person.java","status":"added","additions":76,"deletions":0,"changes":76,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/Person.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/Person.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/Person.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,76 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.propertyaccess;\n+\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"PRP_Person\")\n+@Table(name=\"PRP_Person\") // OPENJPA-121\n+@Inheritance(strategy=InheritanceType.SINGLE_TABLE)\n+public abstract class Person implements IPerson {\n+    private static long idCounter = System.currentTimeMillis();\n+\n+    private long id = idCounter++;\n+\n+    private String firstName;\n+    private String lastName;\n+    private Address homeAddress;\n+\n+    public void setFirstName(String firstName) {\n+        this.firstName = firstName;\n+    }\n+\n+    @Basic\n+    public String getFirstName() {\n+        return this.firstName;\n+    }\n+\n+\n+    public void setLastName(String lastName) {\n+        this.lastName = lastName;\n+    }\n+\n+    @Basic\n+    public String getLastName() {\n+        return this.lastName;\n+    }\n+\n+\n+    public void setHomeAddress(IAddress homeAddress) {\n+        setHomeAddress((Address) homeAddress);\n+    }\n+\n+    public void setHomeAddress(Address homeAddress) {\n+        this.homeAddress = homeAddress;\n+    }\n+\n+    @OneToOne\n+    public Address getHomeAddress() {\n+        return this.homeAddress;\n+    }\n+\n+\n+    public void setId(long id) {\n+        this.id = id;\n+    }\n+\n+    @Id\n+    public long getId() {\n+        return this.id;\n+    }\n+\n+}"},{"sha":"53563bea13bc544b18a6e6c1d7ddd35a53a82c54","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/Product.java","status":"added","additions":83,"deletions":0,"changes":83,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/Product.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/Product.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/Product.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,83 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.propertyaccess;\n+\n+import java.util.*;\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"PRP_Product\")\n+@Table(name=\"PRP_Product\") // OPENJPA-121\n+public final class Product implements IProduct {\n+    private static long idCounter = System.currentTimeMillis();\n+\n+    private long id = idCounter++;\n+\n+    private String name;\n+    private byte[] image;\n+    private float price;\n+    private Set<Company> distributors = new HashSet<Company>();\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    @Basic\n+    public String getName() {\n+        return this.name;\n+    }\n+\n+\n+    public void setImage(byte[] image) {\n+        this.image = image;\n+    }\n+\n+    @Basic\n+    public byte[] getImage() {\n+        return this.image;\n+    }\n+\n+\n+    public void setPrice(float price) {\n+        this.price = price;\n+    }\n+\n+    @Basic\n+    public float getPrice() {\n+        return this.price;\n+    }\n+\n+\n+    public void setDistributors(Set<? extends ICompany> distributors) {\n+        this.distributors = (Set<Company>) distributors;\n+    }\n+\n+    @ManyToMany\n+    public Set<Company> getDistributors() {\n+        return this.distributors;\n+    }\n+\n+\n+    public void setId(long id) {\n+        this.id = id;\n+    }\n+\n+    @Id\n+    public long getId() {\n+        return this.id;\n+    }\n+\n+}"},{"sha":"1e58cf1c92219791de677c7958a59ddd3026d76f","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/ProductOrder.java","status":"added","additions":86,"deletions":0,"changes":86,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/ProductOrder.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/ProductOrder.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/ProductOrder.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,86 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.propertyaccess;\n+\n+import java.util.*;\n+import javax.persistence.*;\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+@Entity(name=\"PRP_ProductOrder\")\n+@Table(name=\"PRP_ProductOrder\") // OPENJPA-121\n+public final class ProductOrder implements IProductOrder {\n+    private static long idCounter = System.currentTimeMillis();\n+\n+    private long id = idCounter++;\n+\n+    private List<LineItem> items = new LinkedList<LineItem>();\n+    private Date orderDate;\n+    private Date shippedDate;\n+    private Customer customer;\n+\n+    public void setItems(List<? extends ILineItem> items) {\n+        this.items = (List<LineItem>) items;\n+    }\n+\n+    @OneToMany\n+    public List<LineItem> getItems() {\n+        return this.items;\n+    }\n+\n+\n+    public void setOrderDate(Date orderDate) {\n+        this.orderDate = orderDate;\n+    }\n+\n+    @Basic\n+    public Date getOrderDate() {\n+        return this.orderDate;\n+    }\n+\n+\n+    public void setShippedDate(Date shippedDate) {\n+        this.shippedDate = shippedDate;\n+    }\n+\n+    @Basic\n+    public Date getShippedDate() {\n+        return this.shippedDate;\n+    }\n+\n+\n+    public void setCustomer(ICustomer customer) {\n+        setCustomer((Customer) customer);\n+    }\n+\n+    public void setCustomer(Customer customer) {\n+        this.customer = customer;\n+    }\n+\n+    @OneToOne\n+    public Customer getCustomer() {\n+        return this.customer;\n+    }\n+\n+    public void setId(long id) {\n+        this.id = id;\n+    }\n+\n+    @Id\n+    public long getId() {\n+        return this.id;\n+    }\n+\n+}"},{"sha":"4bb4f4fe249b590d0fbb087a2616fd656cccb188","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/TestPropertyCompanyModel.java","status":"added","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/TestPropertyCompanyModel.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/TestPropertyCompanyModel.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/models/propertyaccess/TestPropertyCompanyModel.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,22 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.models.company.propertyaccess;\n+\n+import org.apache.openjpa.persistence.models.company.*;\n+\n+public class TestPropertyCompanyModel extends CompanyModelTest {\n+}\n+"},{"sha":"1ad126c2f72d15ebfdb5eb02d26a0009ff6b2c10","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/test/SingleEMTest.java","status":"added","additions":277,"deletions":0,"changes":277,"blob_url":"https://github.com/apache/openjpa/blob/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/test/SingleEMTest.java","raw_url":"https://github.com/apache/openjpa/raw/02f2cedb734be0d4f9b4b340359544fd7707e477/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/test/SingleEMTest.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/test/SingleEMTest.java?ref=02f2cedb734be0d4f9b4b340359544fd7707e477","patch":"@@ -0,0 +1,277 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.test;\n+\n+import java.util.*;\n+\n+import javax.persistence.*;\n+\n+import junit.framework.TestCase;\n+import junit.textui.TestRunner;\n+import org.apache.openjpa.persistence.*;\n+\n+/**\n+ * A base test case that can be used to easily test scenarios where there\n+ * is only a single EntityManager at any given time.\n+ *\n+ * @author Marc Prud'hommeaux\n+ */\n+public abstract class SingleEMTest extends TestCase {\n+\n+    protected EntityManagerFactory emf;\n+    protected EntityManager em;\n+    protected Class[] classes;\n+\n+    public SingleEMTest(Class... classes) {\n+        this.classes = classes;\n+    }\n+\n+    /** \n+     * Can be overridden to return a list of classes that will be used\n+     * for this test.\n+     */\n+    protected Class[] getClasses() { \n+        return classes;\n+    }\n+\n+    /** \n+     * Modify the properties that are used to create the EntityManagerFactory.\n+     * By default, this will set up the MetaDataFactory with the\n+     * persistent classes for this test case. This method can be overridden\n+     * to add more properties to the map.\n+     */\n+    protected void setEMFProps(Map props) {\n+        // if we have specified a list of persistent classes to examine,\n+        // then set it in the MetaDataFactory so that our automatic\n+        // schema generation will work.\n+        Class[] pclasses = getClasses();\n+        if (pclasses != null) {\n+            StringBuilder str = new StringBuilder();\n+            for (Class c : pclasses)\n+                str.append(str.length() > 0 ? \";\" : \"\").append(c.getName());\n+\n+            props.put(\"openjpa.MetaDataFactory\", \"jpa(Types=\" + str + \")\");\n+        }\n+    }\n+\n+    public void setUp() throws Exception {\n+        Map props = new HashMap(System.getProperties());\n+        setEMFProps(props);\n+        emf = Persistence.createEntityManagerFactory(\"test\", props);\n+    }\n+\n+    /** \n+     * Rolls back the current transaction and closes the EntityManager. \n+     */\n+    public void tearDown() throws Exception {\n+        rollback();\n+        close();\n+        closeEMF();\n+    }\n+\n+    public EntityManagerFactory emf() {\n+        return emf;\n+    }\n+\n+    /** \n+     * Returns the current EntityManager, creating one from the\n+     * EntityManagerFactory if it doesn't already exist. \n+     */\n+    public EntityManager em() {\n+        if (em == null) {\n+            em = emf().createEntityManager();\n+        }\n+\n+        return em;\n+    }\n+\n+    /** \n+     * Start a new transaction if there isn't currently one active. \n+     * @return  true if a transaction was started, false if one already existed\n+     */\n+    public boolean begin() {\n+        EntityTransaction tx = em().getTransaction();\n+        if (tx.isActive())\n+            return false;\n+\n+        tx.begin();\n+        return true;\n+    }\n+\n+    /** \n+     * Commit the current transaction, if it is active. \n+     * @return true if the transaction was committed\n+     */\n+    public boolean commit() {\n+        EntityTransaction tx = em().getTransaction();\n+        if (!tx.isActive())\n+            return false;\n+\n+        tx.commit();\n+        return true;\n+    }\n+\n+    /** \n+     * Rollback the current transaction, if it is active. \n+     * @return true if the transaction was rolled back\n+     */\n+    public boolean rollback() {\n+        EntityTransaction tx = em().getTransaction();\n+        if (!tx.isActive())\n+            return false;\n+\n+        tx.commit();\n+        return true;\n+    }\n+\n+    /** \n+     * Closes the current EntityManager if it is open. \n+     * @return false if the EntityManager was already closed.\n+     */\n+    public boolean close() {\n+        if (em == null)\n+            return false;\n+\n+        rollback();\n+\n+        if (!em.isOpen())\n+            return false;\n+\n+        em.close();\n+        return !em.isOpen();\n+    }\n+\n+    public boolean closeEMF() {\n+        if (emf == null)\n+            return false;\n+\n+        close();\n+\n+        if (!emf.isOpen())\n+            return false;\n+\n+        emf.close();\n+        return !emf.isOpen();\n+    }\n+\n+    /** \n+     * Returns the entity name of the specified class. If the class\n+     * declares an @Entity, then it will be used, otherwise the base\n+     * name of the class will be returned.\n+     *\n+     * Note that this will not correctly return the entity name of\n+     * a class declared in an orm.xml file.\n+     */\n+    public String entityName(Class c) {\n+        Entity e = (Entity) c.getAnnotation(Entity.class);\n+        if (e != null && e.name() != null && e.name().length() > 0)\n+            return e.name();\n+\n+        String name = c.getSimpleName();\n+        name = name.substring(name.lastIndexOf(\".\") + 1);\n+        return name;\n+    }\n+\n+    /** \n+     * Delete all of the instances.\n+     *\n+     * If no transaction is running, then one will be started and committed.\n+     * Otherwise, the operation will take place in the current transaction.\n+     */\n+    public void remove(Object... obs) {\n+        boolean tx = begin();\n+        for (Object ob : obs)\n+            em().remove(ob);\n+        if (tx) commit();\n+    }\n+\n+    /** \n+     * Persist all of the instances.\n+     *\n+     * If no transaction is running, then one will be started and committed.\n+     * Otherwise, the operation will take place in the current transaction.\n+     */\n+    public void persist(Object... obs) {\n+        boolean tx = begin();\n+        for (Object ob : obs)\n+            em().persist(ob);\n+        if (tx) commit();\n+    }\n+\n+    /** \n+     * Creates a query in the current EntityManager with the specified string. \n+     */\n+    public Query query(String str) {\n+        return em().createQuery(str);\n+    }\n+\n+    /** \n+     * Create a query against the specified class, which will be aliased\n+     * as \"x\". For example, query(Person.class, \"where x.age = 21\") will\n+     * create the query \"select x from Person x where x.age = 21\".\n+     *  \n+     * @param  c  the class to query against\n+     * @param  str  the query suffix\n+     * @param  params  the parameters, if any\n+     * @return the Query object\n+     */\n+    public Query query(Class c, String str, Object... params) {\n+        String query = \"select x from \" + entityName(c) + \" x \"\n+            + (str == null ? \"\" : str);\n+        Query q = em().createQuery(query);\n+        for (int i = 0; params != null && i < params.length; i++)\n+            q.setParameter(i + 1, params[i]);\n+        return q;\n+    }\n+\n+    /** \n+     * Returns a list of all instances of the specific class in the database. \n+     *\n+     * @param c the class to find\n+     * @param q the query string suffix to use\n+     * @param params the positional parameter list value\n+     *\n+     * @see #query(java.lang.Class,java.lang.String)\n+     */\n+    public <E> List<E> find(Class<E> c, String q, Object... params) {\n+        return Collections.checkedList(query(c, q, params).getResultList(), c);\n+    }\n+\n+    public <E> List<E> find(Class<E> c) {\n+        return find(c, null);\n+    }\n+\n+    /** \n+     * Deletes all instances of the specific class from the database. \n+     *\n+     * If no transaction is running, then one will be started and committed.\n+     * Otherwise, the operation will take place in the current transaction.\n+     *\n+     * @return the total number of instanes deleted\n+     */\n+    public int delete(Class... classes) {\n+        boolean tx = begin();\n+        int total = 0;\n+        for (Class c : classes) {\n+            total += query(\"delete from \" + entityName(c) + \" x\").\n+                executeUpdate();\n+        }\n+        if (tx) commit();\n+\n+        return total;\n+    }\n+}\n+"}]}

