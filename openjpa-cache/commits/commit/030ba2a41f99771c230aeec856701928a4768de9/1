{"sha":"030ba2a41f99771c230aeec856701928a4768de9","node_id":"MDY6Q29tbWl0MjA2MzY0OjAzMGJhMmE0MWY5OTc3MWMyMzBhZWVjODU2NzAxOTI4YTQ3NjhkZTk=","commit":{"author":{"name":"Heath Thomann","email":"hthomann@apache.org","date":"2014-03-24T16:43:40Z"},"committer":{"name":"Heath Thomann","email":"hthomann@apache.org","date":"2014-03-24T16:43:40Z"},"message":"OPENJPA-1986: Extra queries being generated when cascading a persist - added another/similar check to the ones added by Rick.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1580913 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"16db3b5da6f79f32aa1b9af87705acbc8c14b478","url":"https://api.github.com/repos/apache/openjpa/git/trees/16db3b5da6f79f32aa1b9af87705acbc8c14b478"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/030ba2a41f99771c230aeec856701928a4768de9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/030ba2a41f99771c230aeec856701928a4768de9","html_url":"https://github.com/apache/openjpa/commit/030ba2a41f99771c230aeec856701928a4768de9","comments_url":"https://api.github.com/repos/apache/openjpa/commits/030ba2a41f99771c230aeec856701928a4768de9/comments","author":null,"committer":null,"parents":[{"sha":"873daf3531ba9384b2500e26a3ac482b77cae38f","url":"https://api.github.com/repos/apache/openjpa/commits/873daf3531ba9384b2500e26a3ac482b77cae38f","html_url":"https://github.com/apache/openjpa/commit/873daf3531ba9384b2500e26a3ac482b77cae38f"}],"stats":{"total":36,"additions":30,"deletions":6},"files":[{"sha":"903febae20e178b1c0e8c6f85db75c33a2ed01b2","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SingleFieldManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/030ba2a41f99771c230aeec856701928a4768de9/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SingleFieldManager.java","raw_url":"https://github.com/apache/openjpa/raw/030ba2a41f99771c230aeec856701928a4768de9/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SingleFieldManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SingleFieldManager.java?ref=030ba2a41f99771c230aeec856701928a4768de9","patch":"@@ -267,7 +267,7 @@ public void persist(OpCallbacks call) {\n         switch (fmd.getDeclaredTypeCode()) {\n             case JavaTypes.PC:\n             case JavaTypes.PC_UNTYPED:\n-                if (!_broker.isDetachedNew() && _broker.isDetached(objval))\n+                if (!_broker.isDetachedNew() && _broker.isDetached(objval, _checkDbOnCascadePersist))\n                     return; // allow but ignore\n                 _broker.persist(objval, true, call);\n                 break;"},{"sha":"2dfd78600a0a03811e21a6f7f6d392eea00274c2","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/cascade/TestCascadePersist.java","status":"modified","additions":29,"deletions":5,"changes":34,"blob_url":"https://github.com/apache/openjpa/blob/030ba2a41f99771c230aeec856701928a4768de9/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/cascade/TestCascadePersist.java","raw_url":"https://github.com/apache/openjpa/raw/030ba2a41f99771c230aeec856701928a4768de9/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/cascade/TestCascadePersist.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/cascade/TestCascadePersist.java?ref=030ba2a41f99771c230aeec856701928a4768de9","patch":"@@ -21,14 +21,13 @@\n import javax.persistence.EntityManager;\n import javax.persistence.RollbackException;\n \n-import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n+import org.apache.openjpa.persistence.test.SQLListenerTestCase;\n \n-public class TestCascadePersist extends SingleEMFTestCase {\n+public class TestCascadePersist extends SQLListenerTestCase {\n     @Override\n     public void setUp() throws Exception {\n-        setUp(DROP_TABLES, CascadePersistEntity.class\n-//            , \"openjpa.Log\", \"SQL=trace\"\n-            );\n+        setUp(DROP_TABLES, CascadePersistEntity.class, \"openjpa.Compatibility\",\n+            \"CheckDatabaseForCascadePersistToDetachedEntity=false\");\n     }\n \n     public void testCascadePersistToDetachedFailure() {\n@@ -70,4 +69,29 @@ public void testCascadePersistToManagedEntity() {\n         // Since cpe1 is managed, it should be ignored by the cascaded persist operation.\n         em.getTransaction().commit();\n     }\n+    \n+    /*\n+     * Prior to OPENJPA-1986, an extra SELECT was executed in this scenario.\n+     */\n+    public void testCascaseExtraneousSQL(){\n+        long id = System.currentTimeMillis();\n+        EntityManager em = emf.createEntityManager();\n+        em.getTransaction().begin();\n+\n+        CascadePersistEntity cpe = new CascadePersistEntity(id);\n+        CascadePersistEntity cpe2 = new CascadePersistEntity(id+1);\n+        cpe.setOther(cpe2);\n+\n+        //Clear all SQL statements to make sure that during\n+        //the persist we don't execute a select.\n+        resetSQL();\n+        em.persist(cpe);\n+\n+        em.getTransaction().commit();\n+        em.close();        \n+\n+        //There should be no selects at this point, only\n+        //inserts.\n+        assertNotSQL(\"SELECT .*\");\n+    }    \n }"}]}

