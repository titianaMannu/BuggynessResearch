{"sha":"031f525d4f15b930340fed274ac4f4f8ff7c67f4","node_id":"MDY6Q29tbWl0MjA2MzY0OjAzMWY1MjVkNGYxNWI5MzAzNDBmZWQyNzRhYzRmNGY4ZmY3YzY3ZjQ=","commit":{"author":{"name":"Srinivasa Segu","email":"ssegu@apache.org","date":"2008-11-20T05:37:59Z"},"committer":{"name":"Srinivasa Segu","email":"ssegu@apache.org","date":"2008-11-20T05:37:59Z"},"message":"OPENJPA-680 - After load and after refresh callbacks were each resulting in a post load call resulting in the duplicate call. Fix addresses the same and re-introduces the original fix. \n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@719166 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2f4640b809ff68d1c0fe32ee940aa9a52d2e903e","url":"https://api.github.com/repos/apache/openjpa/git/trees/2f4640b809ff68d1c0fe32ee940aa9a52d2e903e"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/031f525d4f15b930340fed274ac4f4f8ff7c67f4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/031f525d4f15b930340fed274ac4f4f8ff7c67f4","html_url":"https://github.com/apache/openjpa/commit/031f525d4f15b930340fed274ac4f4f8ff7c67f4","comments_url":"https://api.github.com/repos/apache/openjpa/commits/031f525d4f15b930340fed274ac4f4f8ff7c67f4/comments","author":null,"committer":null,"parents":[{"sha":"64a1293f51096d78eddb7bf993cf3c5ebccd7193","url":"https://api.github.com/repos/apache/openjpa/commits/64a1293f51096d78eddb7bf993cf3c5ebccd7193","html_url":"https://github.com/apache/openjpa/commit/64a1293f51096d78eddb7bf993cf3c5ebccd7193"}],"stats":{"total":47,"additions":43,"deletions":4},"files":[{"sha":"62f2de3dd81482f8797c46a170e7771f8bb515c3","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/031f525d4f15b930340fed274ac4f4f8ff7c67f4/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/031f525d4f15b930340fed274ac4f4f8ff7c67f4/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java?ref=031f525d4f15b930340fed274ac4f4f8ff7c67f4","patch":"@@ -363,7 +363,8 @@ public void load(FetchConfiguration fetch) {\n      */\r\n     protected boolean load(FetchConfiguration fetch, int loadMode,\r\n         BitSet exclude, Object sdata, boolean forWrite) {\r\n-        if (!forWrite && (!isPersistent() || isNew() || isDeleted()))\r\n+        if (!forWrite\r\n+            && (!isPersistent() || (isNew() && !isFlushed()) || isDeleted()))\r\n             return false;\r\n \r\n         // if any fields being loaded, do state transitions for read\r"},{"sha":"cd84f7ab8edf2d8ffb43f1c30e51c1cec563a46c","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/TestRefresh.java","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/apache/openjpa/blob/031f525d4f15b930340fed274ac4f4f8ff7c67f4/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/TestRefresh.java","raw_url":"https://github.com/apache/openjpa/raw/031f525d4f15b930340fed274ac4f4f8ff7c67f4/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/TestRefresh.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/TestRefresh.java?ref=031f525d4f15b930340fed274ac4f4f8ff7c67f4","patch":"@@ -0,0 +1,39 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.    \r\n+ */\r\n+package org.apache.openjpa.persistence.simple;\r\n+\r\n+import org.apache.openjpa.persistence.test.SingleEMTestCase;\r\n+\r\n+public class TestRefresh extends SingleEMTestCase {\r\n+\r\n+    public void setUp() {\r\n+        super.setUp(CLEAR_TABLES, Item.class, \"openjpa.AutoDetach\", \"commit\");\r\n+    }\r\n+\r\n+    public void testFlushRefreshNewInstance() {\r\n+        em.getTransaction().begin();\r\n+        Item item = new Item();\r\n+        item.setItemData(\"Test Data\");\r\n+        em.persist(item);\r\n+        em.flush();\r\n+        em.refresh(item);\r\n+        em.getTransaction().commit();\r\n+        assertEquals(\"Test Data\", item.getItemData());\r\n+    }\r\n+}\r"},{"sha":"c14adb3a5ff0ea943b61b3fc933c6eafceecad43","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/MetaDataParsers.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/031f525d4f15b930340fed274ac4f4f8ff7c67f4/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/MetaDataParsers.java","raw_url":"https://github.com/apache/openjpa/raw/031f525d4f15b930340fed274ac4f4f8ff7c67f4/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/MetaDataParsers.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/MetaDataParsers.java?ref=031f525d4f15b930340fed274ac4f4f8ff7c67f4","patch":"@@ -57,8 +57,7 @@\n             case POST_UPDATE:\n                 return new int[]{ LifecycleEvent.AFTER_UPDATE_PERFORMED };\n             case POST_LOAD:\n-                return new int[]{ LifecycleEvent.AFTER_LOAD,\n-                    LifecycleEvent.AFTER_REFRESH };\n+                return new int[]{ LifecycleEvent.AFTER_LOAD };\n             default:\n                 return null;\n         }"},{"sha":"33e33444d1553119785535e8ce0b846aa2da7dee","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceListenerAdapter.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/031f525d4f15b930340fed274ac4f4f8ff7c67f4/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceListenerAdapter.java","raw_url":"https://github.com/apache/openjpa/raw/031f525d4f15b930340fed274ac4f4f8ff7c67f4/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceListenerAdapter.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceListenerAdapter.java?ref=031f525d4f15b930340fed274ac4f4f8ff7c67f4","patch":"@@ -98,7 +98,7 @@ public void afterLoad(LifecycleEvent event) {\n     }\n \n     public void afterRefresh(LifecycleEvent event) {\n-        makeCallback(event);\n+        // no analagous callback\n     }\n \n     public void beforeUpdate(LifecycleEvent event) {"}]}

