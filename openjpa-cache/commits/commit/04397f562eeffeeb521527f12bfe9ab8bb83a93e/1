{"sha":"04397f562eeffeeb521527f12bfe9ab8bb83a93e","node_id":"MDY6Q29tbWl0MjA2MzY0OjA0Mzk3ZjU2MmVlZmZlZWI1MjE1MjdmMTJiZmU5YWI4YmI4M2E5M2U=","commit":{"author":{"name":"Marc Prud'hommeaux","email":"mprudhom@apache.org","date":"2007-05-21T20:45:09Z"},"committer":{"name":"Marc Prud'hommeaux","email":"mprudhom@apache.org","date":"2007-05-21T20:45:09Z"},"message":"OPENJPA-148 Applied follow-up patch that resolved potential NPEs\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@540283 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"24c22a394f7d001a5fe85022ba081d60c7952fdd","url":"https://api.github.com/repos/apache/openjpa/git/trees/24c22a394f7d001a5fe85022ba081d60c7952fdd"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/04397f562eeffeeb521527f12bfe9ab8bb83a93e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/04397f562eeffeeb521527f12bfe9ab8bb83a93e","html_url":"https://github.com/apache/openjpa/commit/04397f562eeffeeb521527f12bfe9ab8bb83a93e","comments_url":"https://api.github.com/repos/apache/openjpa/commits/04397f562eeffeeb521527f12bfe9ab8bb83a93e/comments","author":null,"committer":null,"parents":[{"sha":"e041fe0d4de6baebefcbc34a3ff1962212535b5b","url":"https://api.github.com/repos/apache/openjpa/commits/e041fe0d4de6baebefcbc34a3ff1962212535b5b","html_url":"https://github.com/apache/openjpa/commit/e041fe0d4de6baebefcbc34a3ff1962212535b5b"}],"stats":{"total":12,"additions":9,"deletions":3},"files":[{"sha":"2130a0d5bd25e9bfc70a5312f7db5b2d6ac6d5c9","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/AbstractCFMetaDataFactory.java","status":"modified","additions":9,"deletions":3,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/04397f562eeffeeb521527f12bfe9ab8bb83a93e/openjpa-kernel/src/main/java/org/apache/openjpa/meta/AbstractCFMetaDataFactory.java","raw_url":"https://github.com/apache/openjpa/raw/04397f562eeffeeb521527f12bfe9ab8bb83a93e/openjpa-kernel/src/main/java/org/apache/openjpa/meta/AbstractCFMetaDataFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/AbstractCFMetaDataFactory.java?ref=04397f562eeffeeb521527f12bfe9ab8bb83a93e","patch":"@@ -46,6 +46,7 @@\n import org.apache.openjpa.lib.meta.URLMetaDataIterator;\n import org.apache.openjpa.lib.meta.ZipFileMetaDataIterator;\n import org.apache.openjpa.lib.meta.ZipStreamMetaDataIterator;\n+import org.apache.openjpa.lib.meta.ClassLoaderMetaDataIterator;\n import org.apache.openjpa.lib.util.Files;\n import org.apache.openjpa.lib.util.Localizer;\n import org.apache.openjpa.util.GeneralException;\n@@ -633,13 +634,18 @@ private Set parsePersistentTypeNames(ClassLoader loader)\n         if (urls != null) {\n             for (Iterator itr = urls.iterator(); itr.hasNext();) {\n                 url = (URL) itr.next();\n-\n                 if (\"file\".equals(url.getProtocol())) {\n                     File file = new File(url.getFile()).getAbsoluteFile();\n-                    if (files.contains(file)) {\n+                    if (files != null && files.contains(file)) {\n+                        continue;\n+                    } else if (file.isDirectory()) {\n+                        if (log.isTraceEnabled())\n+                            log.trace(_loc.get(\"scanning-directory\", file));\n+                        scan(new FileMetaDataIterator(file, newMetaDataFilter()),\n+                                cparser, names, true, file);\n                         continue;\n                     }\n-                } \n+                }\n                 if (\"jar\".equals(url.getProtocol())\n                     && url.getPath().endsWith(\"!/\")) {\n                     if (log.isTraceEnabled())"}]}

