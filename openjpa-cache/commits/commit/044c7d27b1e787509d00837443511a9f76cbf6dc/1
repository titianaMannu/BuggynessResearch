{"sha":"044c7d27b1e787509d00837443511a9f76cbf6dc","node_id":"MDY6Q29tbWl0MjA2MzY0OjA0NGM3ZDI3YjFlNzg3NTA5ZDAwODM3NDQzNTExYTlmNzZjYmY2ZGM=","commit":{"author":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2021-04-05T16:16:48Z"},"committer":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2021-04-05T16:16:48Z"},"message":"OPENJPA-2860 PostgreSQL >= 10 supports setQueryTimeout","tree":{"sha":"e120c9981928996087049d2daf068fd779b50fba","url":"https://api.github.com/repos/apache/openjpa/git/trees/e120c9981928996087049d2daf068fd779b50fba"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/044c7d27b1e787509d00837443511a9f76cbf6dc","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/044c7d27b1e787509d00837443511a9f76cbf6dc","html_url":"https://github.com/apache/openjpa/commit/044c7d27b1e787509d00837443511a9f76cbf6dc","comments_url":"https://api.github.com/repos/apache/openjpa/commits/044c7d27b1e787509d00837443511a9f76cbf6dc/comments","author":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"committer":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"parents":[{"sha":"1fb5234574994dd1ec023a04ffbbe042831d22bc","url":"https://api.github.com/repos/apache/openjpa/commits/1fb5234574994dd1ec023a04ffbbe042831d22bc","html_url":"https://github.com/apache/openjpa/commit/1fb5234574994dd1ec023a04ffbbe042831d22bc"}],"stats":{"total":29,"additions":21,"deletions":8},"files":[{"sha":"6abe8cdd05b29b7f8415d4a7f09bebc8d61f9a2d","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaTool.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/044c7d27b1e787509d00837443511a9f76cbf6dc/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaTool.java","raw_url":"https://github.com/apache/openjpa/raw/044c7d27b1e787509d00837443511a9f76cbf6dc/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaTool.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaTool.java?ref=044c7d27b1e787509d00837443511a9f76cbf6dc","patch":"@@ -1317,8 +1317,7 @@ protected SchemaGroup getDBSchemaGroup(boolean full)\n                     }\n                 }\n                 if (!tables.isEmpty())\n-                    gen.generateSchemas((DBIdentifier[]) tables.toArray\n-                        (new DBIdentifier[tables.size()]));\n+                    gen.generateSchemas(tables.toArray(new DBIdentifier[tables.size()]));\n             }\n             _db = gen.getSchemaGroup();\n         }"},{"sha":"dd47fc2aced5a68b16f7445a395e11ee935e772d","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/PostgresDictionary.java","status":"modified","additions":18,"deletions":5,"changes":23,"blob_url":"https://github.com/apache/openjpa/blob/044c7d27b1e787509d00837443511a9f76cbf6dc/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/PostgresDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/044c7d27b1e787509d00837443511a9f76cbf6dc/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/PostgresDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/PostgresDictionary.java?ref=044c7d27b1e787509d00837443511a9f76cbf6dc","patch":"@@ -176,7 +176,6 @@ public PostgresDictionary() {\n         booleanRepresentation = BooleanRepresentationFactory.BOOLEAN;\n \n         supportsLockingWithDistinctClause = false;\n-        supportsQueryTimeout = false;\n         supportsLockingWithOuterJoin = false;\n \n         reservedWordSet.addAll(Arrays.asList(new String[]{\n@@ -212,8 +211,13 @@ public PostgresDictionary() {\n         _timestampTypes.add(timestampTypeName.toUpperCase(Locale.ENGLISH)); // handle user configured timestamp types.\n \n         indexPhysicalForeignKeys = true; // PostgreSQL does not automatically create an index for a foreign key so we will\n+\n+        // PostgreSQL requires to escape search strings\n+        requiresSearchStringEscapeForLike = true;\n     }\n \n+\n+\n     @Override\n     public Date getDate(ResultSet rs, int column)\n         throws SQLException {\n@@ -796,7 +800,7 @@ public void setOffsetDateTime(PreparedStatement stmnt, int idx, OffsetDateTime v\n     }\n \n     /**\n-     * Determine XML column support and backslash handling.\n+     * Determine XML column support and backslash handling, etc\n      */\n     @Override\n     public void connectedConfiguration(Connection conn) throws SQLException {\n@@ -825,16 +829,25 @@ public void connectedConfiguration(Connection conn) throws SQLException {\n         if ((maj >= 9 || (maj == 8 && min >= 3))) {\n             supportsXMLColumn = true;\n         }\n-\n-        // PostgreSQL requires to escape search strings\n-        requiresSearchStringEscapeForLike = true;\n+        if (maj < 10) {\n+            // setQueryTimeout only got implemented pretty late\n+            supportsQueryTimeout = false;\n+        }\n \n         // Old PostgreSQL requires double-escape for strings.\n         if ((maj <= 8 || (maj == 9 && min == 0))) {\n             searchStringEscape = \"\\\\\\\\\";\n         }\n     }\n \n+    @Override\n+    public boolean isFatalException(int subtype, SQLException ex) {\n+        if ((subtype == StoreException.LOCK  && \"57014\".equals(ex.getSQLState()))) {\n+            return false;\n+        }\n+        return super.isFatalException(subtype, ex);\n+    }\n+\n     /**\n      * If column is an XML column, PostgreSQL requires that its value is set\n      * by using {@link PreparedStatement#setObject(int, Object, int)}"},{"sha":"6e9a4a58afc1617cae9b363f157eeac7b3f85f2f","filename":"openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/sql-error-state-codes.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/044c7d27b1e787509d00837443511a9f76cbf6dc/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/sql-error-state-codes.xml","raw_url":"https://github.com/apache/openjpa/raw/044c7d27b1e787509d00837443511a9f76cbf6dc/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/sql-error-state-codes.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/sql-error-state-codes.xml?ref=044c7d27b1e787509d00837443511a9f76cbf6dc","patch":"@@ -191,7 +191,7 @@\n \t</dictionary>\n \n \t<dictionary class=\"org.apache.openjpa.jdbc.sql.PostgresDictionary\">\n-\t\t<lock>55P03,40P01</lock>\n+\t\t<lock>55P03,40P01,57014</lock>\n \t\t<referential-integrity>23000,23502,23503,23514</referential-integrity>\n \t\t<object-exists>23505</object-exists>\n \t\t<object-not-found></object-not-found>"},{"sha":"cbf276af31affd35a7bb04417e60974d567070de","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestTimeoutException.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/044c7d27b1e787509d00837443511a9f76cbf6dc/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestTimeoutException.java","raw_url":"https://github.com/apache/openjpa/raw/044c7d27b1e787509d00837443511a9f76cbf6dc/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestTimeoutException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestTimeoutException.java?ref=044c7d27b1e787509d00837443511a9f76cbf6dc","patch":"@@ -53,6 +53,7 @@ public void setUp() {\n         assertNotNull(dict);\n         if (!dict.supportsSelectForUpdate || !dict.supportsQueryTimeout || dict instanceof SolidDBDictionary)\n             setTestsDisabled(true);\n+\n         if (emf == null) {\n             closeEMF(tempEMF);\n         }"}]}

