{"sha":"04b1abb0393fe8f7186b507650b5bd279576bc9b","node_id":"MDY6Q29tbWl0MjA2MzY0OjA0YjFhYmIwMzkzZmU4ZjcxODZiNTA3NjUwYjViZDI3OTU3NmJjOWI=","commit":{"author":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2011-01-10T19:03:21Z"},"committer":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2011-01-10T19:03:21Z"},"message":"OPENJPA-1856: Make DataCache eviction due to bulk updates configurable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1057315 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"b7951aa77226bd2c04892032d0c6b54655580365","url":"https://api.github.com/repos/apache/openjpa/git/trees/b7951aa77226bd2c04892032d0c6b54655580365"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/04b1abb0393fe8f7186b507650b5bd279576bc9b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/04b1abb0393fe8f7186b507650b5bd279576bc9b","html_url":"https://github.com/apache/openjpa/commit/04b1abb0393fe8f7186b507650b5bd279576bc9b","comments_url":"https://api.github.com/repos/apache/openjpa/commits/04b1abb0393fe8f7186b507650b5bd279576bc9b/comments","author":null,"committer":null,"parents":[{"sha":"7b97c4b91f05b928e7ee73a99a76ecf503514947","url":"https://api.github.com/repos/apache/openjpa/commits/7b97c4b91f05b928e7ee73a99a76ecf503514947","html_url":"https://github.com/apache/openjpa/commit/7b97c4b91f05b928e7ee73a99a76ecf503514947"}],"stats":{"total":107,"additions":99,"deletions":8},"files":[{"sha":"6c8780a2a73fc01f46edbcaa4e8dc0873edd2d5c","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/datacache/AbstractDataCache.java","status":"modified","additions":10,"deletions":1,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/04b1abb0393fe8f7186b507650b5bd279576bc9b/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/AbstractDataCache.java","raw_url":"https://github.com/apache/openjpa/raw/04b1abb0393fe8f7186b507650b5bd279576bc9b/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/AbstractDataCache.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/AbstractDataCache.java?ref=04b1abb0393fe8f7186b507650b5bd279576bc9b","patch":"@@ -80,7 +80,8 @@\n     private String _schedule = null;\n     protected Set<String> _includedTypes = new HashSet<String>();\n     protected Set<String> _excludedTypes = new HashSet<String>();\n-\n+    protected boolean _evictOnBulkUpdate = true;\n+    \n     public String getName() {\n         return _name;\n     }\n@@ -541,4 +542,12 @@ public void setExcludedTypes(String types) {\n     public DataCache selectCache(OpenJPAStateManager sm) {\n         return this;\n     }\n+    \n+    public boolean getEvictOnBulkUpdate(){\n+        return _evictOnBulkUpdate;\n+    }\n+    \n+    public void setEvictOnBulkUpdate(boolean b){\n+        _evictOnBulkUpdate = b;\n+    }\n }"},{"sha":"7ceaf8dd200f6ecd58879b7c545e5d0701968153","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCache.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/04b1abb0393fe8f7186b507650b5bd279576bc9b/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCache.java","raw_url":"https://github.com/apache/openjpa/raw/04b1abb0393fe8f7186b507650b5bd279576bc9b/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCache.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCache.java?ref=04b1abb0393fe8f7186b507650b5bd279576bc9b","patch":"@@ -304,4 +304,9 @@ public void commit(Collection<DataCachePCData> additions, Collection<DataCachePC\n      * Returns number of read/write request and cache hit ratio data.\n      */\n     public CacheStatistics getStatistics();\n+    \n+    /**\n+     * Returns whether the the cache needs to be updated when bulk updates as executed. Defaults to true.\n+     */\n+    public boolean getEvictOnBulkUpdate();\n }"},{"sha":"6d8aa236933266d37b9ff05ce788a37efe60ba85","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCacheStoreManager.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/04b1abb0393fe8f7186b507650b5bd279576bc9b/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCacheStoreManager.java","raw_url":"https://github.com/apache/openjpa/raw/04b1abb0393fe8f7186b507650b5bd279576bc9b/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCacheStoreManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCacheStoreManager.java?ref=04b1abb0393fe8f7186b507650b5bd279576bc9b","patch":"@@ -117,7 +117,7 @@ private void evictTypes(Collection<Class<?>> classes) {\n         DataCache cache;\n         for (Class<?> cls : classes) {\n             cache = mdr.getMetaData(cls, loader, false).getDataCache();\n-            if (cache != null)\n+            if (cache != null && cache.getEvictOnBulkUpdate())\n                 cache.removeAll(cls, false);\n         }\n     }"},{"sha":"0c50094249d3c18586d6b04962c5ce83b5af6b79","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DelegatingDataCache.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/04b1abb0393fe8f7186b507650b5bd279576bc9b/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DelegatingDataCache.java","raw_url":"https://github.com/apache/openjpa/raw/04b1abb0393fe8f7186b507650b5bd279576bc9b/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DelegatingDataCache.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DelegatingDataCache.java?ref=04b1abb0393fe8f7186b507650b5bd279576bc9b","patch":"@@ -381,4 +381,14 @@ public boolean isPartitioned() {\n             throw translate(re);\n         }\n     }\n+    \n+    public boolean getEvictOnBulkUpdate() {\n+        if (_cache == null)\n+            return false;\n+        try {\n+            return _cache.getEvictOnBulkUpdate();\n+        } catch (RuntimeException re) {\n+            throw translate(re);\n+        }\n+    }\n }"},{"sha":"64407a90f03090a0ab009982785d5dc1afdcc5c6","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/datacache/QueryCacheStoreQuery.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/04b1abb0393fe8f7186b507650b5bd279576bc9b/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/QueryCacheStoreQuery.java","raw_url":"https://github.com/apache/openjpa/raw/04b1abb0393fe8f7186b507650b5bd279576bc9b/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/QueryCacheStoreQuery.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/QueryCacheStoreQuery.java?ref=04b1abb0393fe8f7186b507650b5bd279576bc9b","patch":"@@ -380,7 +380,7 @@ private void clearAccessPath(StoreQuery q) {\n \n             // evict from the data cache\n             for (int i = 0; i < cmd.length; i++) {\n-                if (cmd[i].getDataCache() != null)\n+                if (cmd[i].getDataCache() != null && cmd[i].getDataCache().getEvictOnBulkUpdate())\n                     cmd[i].getDataCache().removeAll(\n                         cmd[i].getDescribedType(), true);\n             }"},{"sha":"2638fd52a5e8878bc4fc00f197642af5b7b3addc","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractStoreQuery.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/04b1abb0393fe8f7186b507650b5bd279576bc9b/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractStoreQuery.java","raw_url":"https://github.com/apache/openjpa/raw/04b1abb0393fe8f7186b507650b5bd279576bc9b/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractStoreQuery.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractStoreQuery.java?ref=04b1abb0393fe8f7186b507650b5bd279576bc9b","patch":"@@ -131,7 +131,7 @@ public Number executeDelete(StoreQuery q, Object[] params) {\n             } finally {\n                 for (ClassMetaData cmd : getAccessPathMetaDatas(q)) {\n                     DataCache cache = cmd.getDataCache();\n-                    if (cache != null) {\n+                    if (cache != null && cache.getEvictOnBulkUpdate()) {\n                         cache.removeAll(cmd.getDescribedType(), true);\n                     }\n                 }\n@@ -144,7 +144,7 @@ public Number executeUpdate(StoreQuery q, Object[] params) {\n             } finally {\n                 for (ClassMetaData cmd : getAccessPathMetaDatas(q)) {\n                     DataCache cache = cmd.getDataCache();\n-                    if (cache != null) {\n+                    if (cache != null && cache.getEvictOnBulkUpdate()) {\n                         cache.removeAll(cmd.getDescribedType(), true);\n                     }\n                 }"},{"sha":"3f990dcd7903f4c4f10255111c593bb147c84d3d","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/ExpressionStoreQuery.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/04b1abb0393fe8f7186b507650b5bd279576bc9b/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/ExpressionStoreQuery.java","raw_url":"https://github.com/apache/openjpa/raw/04b1abb0393fe8f7186b507650b5bd279576bc9b/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/ExpressionStoreQuery.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/ExpressionStoreQuery.java?ref=04b1abb0393fe8f7186b507650b5bd279576bc9b","patch":"@@ -793,7 +793,7 @@ public Number executeDelete(StoreQuery q, Object[] params) {\n             } finally {\n                 for (ClassMetaData cmd : getAccessPathMetaDatas(q)) {\n                     DataCache cache = cmd.getDataCache();\n-                    if (cache != null) {\n+                    if (cache != null && cache.getEvictOnBulkUpdate()) {\n                         cache.removeAll(cmd.getDescribedType(), true);\n                     }\n                 }\n@@ -810,7 +810,7 @@ public Number executeUpdate(StoreQuery q, Object[] params) {\n             } finally {\n                 for (ClassMetaData cmd : getAccessPathMetaDatas(q)) {\n                     DataCache cache = cmd.getDataCache();\n-                    if (cache != null) {\n+                    if (cache != null && cache.getEvictOnBulkUpdate()) {\n                         cache.removeAll(cmd.getDescribedType(), true);\n                     }\n                 }"},{"sha":"6cb99a29e72bb903dc85f4868ce8cdedae7ed9d4","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestBulkUpdatesDataCacheEviction.java","status":"modified","additions":55,"deletions":0,"changes":55,"blob_url":"https://github.com/apache/openjpa/blob/04b1abb0393fe8f7186b507650b5bd279576bc9b/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestBulkUpdatesDataCacheEviction.java","raw_url":"https://github.com/apache/openjpa/raw/04b1abb0393fe8f7186b507650b5bd279576bc9b/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestBulkUpdatesDataCacheEviction.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestBulkUpdatesDataCacheEviction.java?ref=04b1abb0393fe8f7186b507650b5bd279576bc9b","patch":"@@ -21,10 +21,14 @@\n import javax.persistence.Cache;\n import javax.persistence.EntityManager;\n \n+import org.apache.openjpa.persistence.OpenJPAEntityManagerFactorySPI;\n+import org.apache.openjpa.persistence.OpenJPAEntityManagerSPI;\n import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n \n public class TestBulkUpdatesDataCacheEviction extends SingleEMFTestCase {\n     Object[] props = new Object[] { CLEAR_TABLES, CachedEntityStatistics.class, \"openjpa.DataCache\", \"true\" };\n+    Object[] noEvictProps = new Object[] { CLEAR_TABLES, CachedEntityStatistics.class\n+        , \"openjpa.DataCache\", \"true(EvictOnBulkUpdate=false)\" };\n \n     public void setUp() throws Exception {\n         super.setUp(props);\n@@ -85,7 +89,58 @@ public void testDelete() throws Exception {\n             em.close();\n         }\n     }\n+    \n+    public void testUpdateNoEvict(){\n+        OpenJPAEntityManagerFactorySPI emf = createNamedEMF(getPersistenceUnitName(), noEvictProps);\n+        Cache cache = emf.getCache();\n+        OpenJPAEntityManagerSPI em = emf.createEntityManager();\n+        try {\n+            CachedEntityStatistics e = createEntity(em);\n+            assertTrue(cache.contains(CachedEntityStatistics.class, e.getId()));\n+            em.clear();\n \n+            String update = \"UPDATE CachedEntityStatistics s SET s.firstName = :name WHERE s.id = :id\";\n+            String name = \"name_\" + System.currentTimeMillis();\n+            // execute update, this should result in a cache eviction\n+            em.getTransaction().begin();\n+            assertEquals(1, em.createQuery(update).setParameter(\"name\", name).setParameter(\"id\", e.getId())\n+                .executeUpdate());\n+            em.getTransaction().commit();\n+            assertTrue(cache.contains(CachedEntityStatistics.class, e.getId()));\n+\n+            CachedEntityStatistics postUpdate = em.find(CachedEntityStatistics.class, e.getId());\n+            assertNotEquals(name, postUpdate.getFirstName());\n+        }finally{\n+            emf.close();\n+        }\n+    }\n+\n+    public void testDeleteNoEvict() throws Exception {\n+        OpenJPAEntityManagerFactorySPI emf = createNamedEMF(getPersistenceUnitName(), noEvictProps);\n+        Cache cache = emf.getCache();\n+        OpenJPAEntityManagerSPI em = emf.createEntityManager();\n+        try {\n+            CachedEntityStatistics e = createEntity(em);\n+            assertTrue(cache.contains(CachedEntityStatistics.class, e.getId()));\n+            em.clear();\n+\n+            String delete = \"DELETE FROM CachedEntityStatistics s WHERE s.id = :id\";\n+            // execute update, this should NOT result in a cache eviction\n+            em.getTransaction().begin();\n+            assertEquals(1, em.createQuery(delete).setParameter(\"id\", e.getId()).executeUpdate());\n+            em.getTransaction().commit();\n+            assertTrue(cache.contains(CachedEntityStatistics.class, e.getId()));\n+\n+            em.clear();\n+            \n+            CachedEntityStatistics postUpdate = em.find(CachedEntityStatistics.class, e.getId());\n+            assertNotNull(postUpdate);\n+\n+        } finally {\n+            em.close();\n+        }\n+    }\n+    \n     private CachedEntityStatistics createEntity(EntityManager em) {\n         em.getTransaction().begin();\n         CachedEntityStatistics e = new CachedEntityStatistics();"},{"sha":"702d7534719ca2381aea458ec67d438f7e1e0437","filename":"openjpa-project/src/doc/manual/ref_guide_caching.xml","status":"modified","additions":13,"deletions":1,"changes":14,"blob_url":"https://github.com/apache/openjpa/blob/04b1abb0393fe8f7186b507650b5bd279576bc9b/openjpa-project/src/doc/manual/ref_guide_caching.xml","raw_url":"https://github.com/apache/openjpa/raw/04b1abb0393fe8f7186b507650b5bd279576bc9b/openjpa-project/src/doc/manual/ref_guide_caching.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_caching.xml?ref=04b1abb0393fe8f7186b507650b5bd279576bc9b","patch":"@@ -345,6 +345,18 @@ to evict values from the cache every 120 minutes.\n true(EvictionSchedule='+120')\n </programlisting>\n             </para>\n+            <example id=\"bulk_update_evict_cache\">\n+                <title>\n+                    Bulk updates and cache eviction\n+                </title>\n+                <para>\n+For the example, setting EvictOnBulkUpdate to false will tell OpenJPA to not evict from the DataCache when executing\n+and UPDATE or DELETE statement. The default for the value is true.                \n+                </para>\n+                <para> \n+<programlisting>&lt;property name=\"openjpa.DataCache\" value=\"true(EvictOnBulkUpdate=false)\"/&gt;</programlisting>\n+                </para>\n+            </example>             \n <section id=\"ref_guide_cache_distribution\">\n    <title>Distributing instances across cache partitions</title>\n             <para>\n@@ -371,7 +383,7 @@ as follows:\n &lt;property name=\"openjpa.DataCache\" value=\"partitioned(PartitionType=concurrent,partitions=\n                 '(name=a,cacheSize=100),(name=b,cacheSize=200)')\"/&gt;\n </programlisting>\n-            </example>\n+            </example>           \n </section>\n             <para>\n The distribution policy is configured by a full-qualified class name that implements "}]}

