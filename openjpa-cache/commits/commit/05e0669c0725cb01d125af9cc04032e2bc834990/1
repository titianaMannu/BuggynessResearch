{"sha":"05e0669c0725cb01d125af9cc04032e2bc834990","node_id":"MDY6Q29tbWl0MjA2MzY0OjA1ZTA2NjljMDcyNWNiMDFkMTI1YWY5Y2MwNDAzMmUyYmM4MzQ5OTA=","commit":{"author":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2010-02-24T08:55:07Z"},"committer":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2010-02-24T08:55:07Z"},"message":"OPENJPA-1533: JPA2 select math mix with aggregate reports syntax error\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@915725 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"65283a9ecd724a334e62434cc937eece602e16bc","url":"https://api.github.com/repos/apache/openjpa/git/trees/65283a9ecd724a334e62434cc937eece602e16bc"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/05e0669c0725cb01d125af9cc04032e2bc834990","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/05e0669c0725cb01d125af9cc04032e2bc834990","html_url":"https://github.com/apache/openjpa/commit/05e0669c0725cb01d125af9cc04032e2bc834990","comments_url":"https://api.github.com/repos/apache/openjpa/commits/05e0669c0725cb01d125af9cc04032e2bc834990/comments","author":null,"committer":null,"parents":[{"sha":"ff71a1c093fde27bd395854c42afb59cd1a56e9a","url":"https://api.github.com/repos/apache/openjpa/commits/ff71a1c093fde27bd395854c42afb59cd1a56e9a","html_url":"https://github.com/apache/openjpa/commit/ff71a1c093fde27bd395854c42afb59cd1a56e9a"}],"stats":{"total":28,"additions":26,"deletions":2},"files":[{"sha":"f281e317dae9fb408499e8cc0b649d9269757480","filename":"openjpa-kernel/src/main/jjtree/org/apache/openjpa/kernel/jpql/JPQL.jjt","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/05e0669c0725cb01d125af9cc04032e2bc834990/openjpa-kernel/src/main/jjtree/org/apache/openjpa/kernel/jpql/JPQL.jjt","raw_url":"https://github.com/apache/openjpa/raw/05e0669c0725cb01d125af9cc04032e2bc834990/openjpa-kernel/src/main/jjtree/org/apache/openjpa/kernel/jpql/JPQL.jjt","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/jjtree/org/apache/openjpa/kernel/jpql/JPQL.jjt?ref=05e0669c0725cb01d125af9cc04032e2bc834990","patch":"@@ -522,8 +522,8 @@ void select_expressions() #SELECTEXPRESSIONS : { }\n \r\n void select_expression() #SELECTEXPRESSION : { }\r\n {\r\n-\t(LOOKAHEAD(aggregate_select_expression()) aggregate_select_expression()\r\n-\t\t| LOOKAHEAD(scalar_expression()) scalar_expression()\r\n+\t(LOOKAHEAD(scalar_expression()) scalar_expression()\r\n+\t\t| LOOKAHEAD(aggregate_select_expression()) aggregate_select_expression()\r\n \t\t| LOOKAHEAD(path()) path()\r\n \t\t| LOOKAHEAD(qualified_path()) qualified_path()\r\n \t\t| LOOKAHEAD(qualified_identification_variable()) qualified_identification_variable()\r"},{"sha":"ee2641a75e9078e256ca533e243c0d8f2ca182aa","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/expressions/TestJPQLScalarExpressions.java","status":"modified","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/apache/openjpa/blob/05e0669c0725cb01d125af9cc04032e2bc834990/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/expressions/TestJPQLScalarExpressions.java","raw_url":"https://github.com/apache/openjpa/raw/05e0669c0725cb01d125af9cc04032e2bc834990/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/expressions/TestJPQLScalarExpressions.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/expressions/TestJPQLScalarExpressions.java?ref=05e0669c0725cb01d125af9cc04032e2bc834990","patch":"@@ -69,6 +69,30 @@ public void setUp() {\n         endEm(em);\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n+    public void testMathAndAggregate() {\n+        EntityManager em = currentEntityManager();\n+        String query[] = {\n+            \"SELECT SUM(c.age) + SUM(c.userid) FROM CompUser c\",\n+            \"SELECT SUM(c.age) * SUM(c.userid) FROM CompUser c\",\n+            \"SELECT SUM(c.age) - MIN(c.userid) + MAX(c.userid) FROM CompUser c\",\n+        };\n+        for (int i = 0; i < query.length; i++) {\n+            List<Long> rs = em.createQuery(query[i]).getResultList();\n+            assertTrue(rs.get(0) > 0);\n+        }\n+        String query2[] = {\n+                \"SELECT SUM(c.age) + SUM(c.userid), MIN(c.age) + MAX(c.age) FROM CompUser c\",\n+                \"SELECT SUM(c.age) * SUM(c.userid), AVG(c.age) FROM CompUser c\",\n+                \"SELECT SUM(c.age) - MIN(c.userid) + MAX(c.userid), AVG(c.age)/10 FROM CompUser c\",\n+        };\n+        for (int i = 0; i < query2.length; i++) {\n+            List<Object[]> rs = (List<Object[]>)em.createQuery(query2[i]).getResultList();\n+            assertNotNull(rs.get(0)[1]);\n+        }\n+        endEm(em);\n+    }\n+\n     @SuppressWarnings(\"unchecked\")\n     public void testCoalesceExpressions() {\n         EntityManager em = currentEntityManager();"}]}

