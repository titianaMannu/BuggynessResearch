{"sha":"05fb97ded7565c74d30832cad4b2aeb78c1e9272","node_id":"MDY6Q29tbWl0MjA2MzY0OjA1ZmI5N2RlZDc1NjVjNzRkMzA4MzJjYWQ0YjJhZWI3OGMxZTkyNzI=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2007-09-18T15:25:14Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2007-09-18T15:25:14Z"},"message":"OPENJPA-353 for 1.0.x branch\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/1.0.x@576948 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"61cec05117909de784f091fcb83d916ebe54b5ba","url":"https://api.github.com/repos/apache/openjpa/git/trees/61cec05117909de784f091fcb83d916ebe54b5ba"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/05fb97ded7565c74d30832cad4b2aeb78c1e9272","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/05fb97ded7565c74d30832cad4b2aeb78c1e9272","html_url":"https://github.com/apache/openjpa/commit/05fb97ded7565c74d30832cad4b2aeb78c1e9272","comments_url":"https://api.github.com/repos/apache/openjpa/commits/05fb97ded7565c74d30832cad4b2aeb78c1e9272/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"3f5fd69c0694099e8617c3735a846ac1e6105169","url":"https://api.github.com/repos/apache/openjpa/commits/3f5fd69c0694099e8617c3735a846ac1e6105169","html_url":"https://github.com/apache/openjpa/commit/3f5fd69c0694099e8617c3735a846ac1e6105169"}],"stats":{"total":59,"additions":57,"deletions":2},"files":[{"sha":"d105060dd0197b49187204efa192ac67b30e4b5c","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/InValueDiscriminatorStrategy.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/05fb97ded7565c74d30832cad4b2aeb78c1e9272/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/InValueDiscriminatorStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/05fb97ded7565c74d30832cad4b2aeb78c1e9272/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/InValueDiscriminatorStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/InValueDiscriminatorStrategy.java?ref=05fb97ded7565c74d30832cad4b2aeb78c1e9272","patch":"@@ -112,7 +112,8 @@ public Class getClass(JDBCStore store, ClassMapping base, Result res)\n             && base.getJoinablePCSubclassMappings().length == 0))\n             return base.getDescribedType();\n \n-        Object cls = res.getObject(disc.getColumns()[0], -1, null);\n+        Object cls =\n+                res.getObject(disc.getColumns()[0], disc.getJavaType(), null);\n         return getClass(cls, store);\n     }\n "},{"sha":"ba77838517be3f2ca71d0dd6957c73ea2aabc24d","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/discriminator/TestDiscriminatorTypes.java","status":"modified","additions":55,"deletions":1,"changes":56,"blob_url":"https://github.com/apache/openjpa/blob/05fb97ded7565c74d30832cad4b2aeb78c1e9272/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/discriminator/TestDiscriminatorTypes.java","raw_url":"https://github.com/apache/openjpa/raw/05fb97ded7565c74d30832cad4b2aeb78c1e9272/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/discriminator/TestDiscriminatorTypes.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/discriminator/TestDiscriminatorTypes.java?ref=05fb97ded7565c74d30832cad4b2aeb78c1e9272","patch":"@@ -50,7 +50,24 @@ public void testCharDiscriminators() {\n         discrim = getMapping(\"CharRootEntity\").getDiscriminator();\n         assertEquals(new Character('R'), discrim.getValue());\n         assertEquals(JavaTypes.CHAR, discrim.getJavaType());\n-\n+        \n+        CharLeafEntity leaf = new CharLeafEntity();\n+        CharRootEntity root = new CharRootEntity();\n+        em.getTransaction().begin();\n+        em.persist(leaf);\n+        em.persist(root);\n+        em.getTransaction().commit();\n+        \n+        em.refresh(leaf);\n+        em.refresh(root);\n+        \n+        em.clear();\n+        \n+        CharLeafEntity leaf2 = em.find(CharLeafEntity.class, leaf.getId());\n+        CharRootEntity root2 = em.find(CharRootEntity.class, root.getId());\n+        \n+        assertNotNull(leaf2);\n+        assertNotNull(root2);\n         em.close();\n     }\n \n@@ -71,6 +88,25 @@ public void testIntDiscriminators() {\n         assertEquals(new Integer(10101), discrim.getValue());\n         assertEquals(JavaTypes.INT, discrim.getJavaType());\n \n+        IntegerLeafEntity leaf = new IntegerLeafEntity();\n+        IntegerRootEntity root = new IntegerRootEntity();\n+        em.getTransaction().begin();\n+        em.persist(leaf);\n+        em.persist(root);\n+        em.getTransaction().commit();\n+        \n+        em.refresh(leaf);\n+        em.refresh(root);\n+        \n+        em.clear();\n+\n+        IntegerLeafEntity leaf2 =\n+                em.find(IntegerLeafEntity.class, leaf.getId());\n+        IntegerRootEntity root2 =\n+                em.find(IntegerRootEntity.class, root.getId());\n+        \n+        assertNotNull(leaf2);\n+        assertNotNull(root2);\n         em.close();\n     }\n \n@@ -88,6 +124,24 @@ public void testStringDiscriminators() {\n         discrim = getMapping(\"StringRootEntity\").getDiscriminator();\n         assertEquals(\"StringRoot\", discrim.getValue());\n         assertEquals(JavaTypes.STRING, discrim.getJavaType());\n+        \n+        StringLeafEntity leaf = new StringLeafEntity();\n+        StringRootEntity root = new StringRootEntity();\n+        em.getTransaction().begin();\n+        em.persist(leaf);\n+        em.persist(root);\n+        em.getTransaction().commit();\n+        \n+        em.refresh(leaf);\n+        em.refresh(root);\n+        \n+        em.clear();\n+        \n+        StringLeafEntity leaf2 = em.find(StringLeafEntity.class, leaf.getId());\n+        StringRootEntity root2 = em.find(StringRootEntity.class, root.getId());\n+        \n+        assertNotNull(leaf2);\n+        assertNotNull(root2);\n         em.close();\n     }\n "}]}

