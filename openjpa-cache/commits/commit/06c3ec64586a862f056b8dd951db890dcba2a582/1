{"sha":"06c3ec64586a862f056b8dd951db890dcba2a582","node_id":"MDY6Q29tbWl0MjA2MzY0OjA2YzNlYzY0NTg2YTg2MmYwNTZiOGRkOTUxZGI4OTBkY2JhMmE1ODI=","commit":{"author":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2011-01-07T00:02:05Z"},"committer":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2011-01-07T00:02:05Z"},"message":"OPENJPA-1918: Append PUInfo classloader to MDR.preload() classloader chain.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1056126 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"fa86c29995ad367f136bbc92b733729efdffdb5d","url":"https://api.github.com/repos/apache/openjpa/git/trees/fa86c29995ad367f136bbc92b733729efdffdb5d"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/06c3ec64586a862f056b8dd951db890dcba2a582","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/06c3ec64586a862f056b8dd951db890dcba2a582","html_url":"https://github.com/apache/openjpa/commit/06c3ec64586a862f056b8dd951db890dcba2a582","comments_url":"https://api.github.com/repos/apache/openjpa/commits/06c3ec64586a862f056b8dd951db890dcba2a582/comments","author":null,"committer":null,"parents":[{"sha":"7e2bfa3029acdc5b7359b0197a8af8cdc591be84","url":"https://api.github.com/repos/apache/openjpa/commits/7e2bfa3029acdc5b7359b0197a8af8cdc591be84","html_url":"https://github.com/apache/openjpa/commit/7e2bfa3029acdc5b7359b0197a8af8cdc591be84"}],"stats":{"total":11,"additions":11,"deletions":0},"files":[{"sha":"6c9aeac32000b34f1afa8326ce5077c2d8567dc3","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataRepository.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/06c3ec64586a862f056b8dd951db890dcba2a582/openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataRepository.java","raw_url":"https://github.com/apache/openjpa/raw/06c3ec64586a862f056b8dd951db890dcba2a582/openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataRepository.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataRepository.java?ref=06c3ec64586a862f056b8dd951db890dcba2a582","patch":"@@ -51,6 +51,7 @@\n import org.apache.openjpa.lib.util.MultiClassLoader;\n import org.apache.openjpa.lib.util.Options;\n import org.apache.openjpa.lib.util.StringDistance;\n+import org.apache.openjpa.util.ClassResolver;\n import org.apache.openjpa.util.ImplHelper;\n import org.apache.openjpa.util.InternalException;\n import org.apache.openjpa.util.MetaDataException;\n@@ -311,10 +312,20 @@ public synchronized void preload() {\n             return;\n         }\n \n+\n         MultiClassLoader multi = AccessController.doPrivileged(J2DoPrivHelper.newMultiClassLoaderAction());\n         multi.addClassLoader(AccessController.doPrivileged(J2DoPrivHelper.getContextClassLoaderAction()));\n         multi.addClassLoader(AccessController.doPrivileged(J2DoPrivHelper\n             .getClassLoaderAction(MetaDataRepository.class)));\n+        // If a ClassLoader was passed into Persistence.createContainerEntityManagerFactory on the PersistenceUnitInfo\n+        // we need to add that loader to the chain of classloaders\n+        ClassResolver resolver = _conf.getClassResolverInstance();\n+        if (resolver != null) {\n+            ClassLoader cl = resolver.getClassLoader(null, null);\n+            if (cl != null) {\n+                multi.addClassLoader(cl);\n+            }\n+        }\n \n         Set<String> classes = getPersistentTypeNames(false, multi);\n         if (classes == null || classes.size() == 0) {"}]}

