{"sha":"077ad2b4462cd2be819df5485d906632488d73be","node_id":"MDY6Q29tbWl0MjA2MzY0OjA3N2FkMmI0NDYyY2QyYmU4MTlkZjU0ODVkOTA2NjMyNDg4ZDczYmU=","commit":{"author":{"name":"Heath Thomann","email":"hthomann@apache.org","date":"2014-09-22T23:06:18Z"},"committer":{"name":"Heath Thomann","email":"hthomann@apache.org","date":"2014-09-22T23:06:18Z"},"message":"OPENJPA-2494: A default Schema defined in a PU default (<persistence-unit-defaults>) in an orm.xml file is not being honored.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1626916 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a391a001ae5a4dc76429013c2fcec8326bbf470e","url":"https://api.github.com/repos/apache/openjpa/git/trees/a391a001ae5a4dc76429013c2fcec8326bbf470e"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/077ad2b4462cd2be819df5485d906632488d73be","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/077ad2b4462cd2be819df5485d906632488d73be","html_url":"https://github.com/apache/openjpa/commit/077ad2b4462cd2be819df5485d906632488d73be","comments_url":"https://api.github.com/repos/apache/openjpa/commits/077ad2b4462cd2be819df5485d906632488d73be/comments","author":null,"committer":null,"parents":[{"sha":"86c478ac0750801355f256e94306d13bce9e0c65","url":"https://api.github.com/repos/apache/openjpa/commits/86c478ac0750801355f256e94306d13bce9e0c65","html_url":"https://github.com/apache/openjpa/commit/86c478ac0750801355f256e94306d13bce9e0c65"}],"stats":{"total":469,"additions":467,"deletions":2},"files":[{"sha":"dd3a1643b3cf284057b2bc5c0228093fa028560a","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ClassMappingInfo.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/077ad2b4462cd2be819df5485d906632488d73be/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ClassMappingInfo.java","raw_url":"https://github.com/apache/openjpa/raw/077ad2b4462cd2be819df5485d906632488d73be/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ClassMappingInfo.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ClassMappingInfo.java?ref=077ad2b4462cd2be819df5485d906632488d73be","patch":"@@ -31,6 +31,7 @@\n \n import org.apache.openjpa.jdbc.identifier.DBIdentifier;\n import org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier;\n+import org.apache.openjpa.jdbc.identifier.DBIdentifier.DBIdentifierType;\n import org.apache.openjpa.jdbc.meta.strats.FullClassStrategy;\n import org.apache.openjpa.jdbc.schema.Column;\n import org.apache.openjpa.jdbc.schema.ForeignKey;\n@@ -306,6 +307,13 @@ public Table getTable(final ClassMapping cls, String tableName,\n      */\n     public Table getTable(final ClassMapping cls, DBIdentifier tableName, \n     \t\tboolean adapt) {\n+        // If the schemaName is NULL type then check for a system default schema name\n+        // and if available use it.\n+        if (_schemaName != null && _schemaName.getType() == DBIdentifierType.NULL){            \n+            String name = cls.getMappingRepository().getMetaDataFactory().getDefaults().getDefaultSchema();\n+            _schemaName = (name != null ? DBIdentifier.newSchema(name) : _schemaName);\n+        }        \n+        \n         Table t = createTable(cls, new TableDefaults() {\n             public String get(Schema schema) {\n                 // delay this so that we don't do schema reflection for unique"},{"sha":"78c55bfb8277096d504e2192885562b9259e8e64","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataDefaults.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/077ad2b4462cd2be819df5485d906632488d73be/openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataDefaults.java","raw_url":"https://github.com/apache/openjpa/raw/077ad2b4462cd2be819df5485d906632488d73be/openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataDefaults.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataDefaults.java?ref=077ad2b4462cd2be819df5485d906632488d73be","patch":"@@ -127,4 +127,16 @@ public Member getMemberByProperty(ClassMetaData meta, String attribute,\n      */\n     public boolean isNonDefaultMappingAllowed(OpenJPAConfiguration conf);\n     \n+\n+    /**\n+     * Returns the default schema.\n+     * @since 2.2.3\n+     */\n+    public String getDefaultSchema();\n+    \n+    /**\n+     * Sets the default schema.\n+     * @since 2.2.3\n+     */\n+    public void setDefaultSchema(String schema);\n }"},{"sha":"3e24c690185ec5fea1f6bb624327cc0fb0beec76","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/NoneMetaDataFactory.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/077ad2b4462cd2be819df5485d906632488d73be/openjpa-kernel/src/main/java/org/apache/openjpa/meta/NoneMetaDataFactory.java","raw_url":"https://github.com/apache/openjpa/raw/077ad2b4462cd2be819df5485d906632488d73be/openjpa-kernel/src/main/java/org/apache/openjpa/meta/NoneMetaDataFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/NoneMetaDataFactory.java?ref=077ad2b4462cd2be819df5485d906632488d73be","patch":"@@ -169,4 +169,8 @@ public boolean isAbstractMappingUniDirectional(OpenJPAConfiguration conf) {\n     public boolean isNonDefaultMappingAllowed(OpenJPAConfiguration conf) {\n         return false;\n     }\n+\n+    public String getDefaultSchema(){return null;}\n+    \n+    public void setDefaultSchema(String schema){}\n }"},{"sha":"38f2a3e608dfd0619c076970f79b10976e44b221","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/SequenceMetaData.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/077ad2b4462cd2be819df5485d906632488d73be/openjpa-kernel/src/main/java/org/apache/openjpa/meta/SequenceMetaData.java","raw_url":"https://github.com/apache/openjpa/raw/077ad2b4462cd2be819df5485d906632488d73be/openjpa-kernel/src/main/java/org/apache/openjpa/meta/SequenceMetaData.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/SequenceMetaData.java?ref=077ad2b4462cd2be819df5485d906632488d73be","patch":"@@ -323,6 +323,13 @@ protected Seq instantiate(ClassLoader envLoader) {\n      * Set/Get the schema name\n      */\n     public void setSchema(String schema) {\n+        // If the schema name is empty, check to see if a system \n+        // level default exists and if so use it.\n+        if (schema == null || \"\".equals(schema)){\n+            String tmp = getRepository().getMetaDataFactory().getDefaults().getDefaultSchema();\n+            schema = (tmp != null ? tmp : \"\"); \n+        }\n+        \n         this._schema = schema;\n     }\n "},{"sha":"ed354aae85d83a3ee21eda430ff53ad0a0bcc0da","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XMLPersistenceMappingParser.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/077ad2b4462cd2be819df5485d906632488d73be/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XMLPersistenceMappingParser.java","raw_url":"https://github.com/apache/openjpa/raw/077ad2b4462cd2be819df5485d906632488d73be/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XMLPersistenceMappingParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XMLPersistenceMappingParser.java?ref=077ad2b4462cd2be819df5485d906632488d73be","patch":"@@ -209,8 +209,10 @@ protected void endSystemMappingElement(String name)\n         throws SAXException {\n         MappingTag tag = _elems.get(name);\n         if (tag == null) {\n-            if (\"schema\".equals(name))\n-                _schema = currentText();\n+            if (\"schema\".equals(name)) {\n+                _schema = currentText();                \n+                getRepository().getMetaDataFactory().getDefaults().setDefaultSchema(_schema);                \n+            }\n             return;\n         }\n "},{"sha":"1b36f67db26f37450f875dbfe98d181c8ee8b426","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/pudefaults/PUDefaultSchemaEntity.java","status":"added","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/apache/openjpa/blob/077ad2b4462cd2be819df5485d906632488d73be/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/pudefaults/PUDefaultSchemaEntity.java","raw_url":"https://github.com/apache/openjpa/raw/077ad2b4462cd2be819df5485d906632488d73be/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/pudefaults/PUDefaultSchemaEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/pudefaults/PUDefaultSchemaEntity.java?ref=077ad2b4462cd2be819df5485d906632488d73be","patch":"@@ -0,0 +1,47 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.openjpa.persistence.pudefaults;\r\n+\r\n+import java.io.Serializable;\r\n+\r\n+import javax.persistence.Column;\r\n+import javax.persistence.Entity;\r\n+import javax.persistence.GeneratedValue;\r\n+import javax.persistence.GenerationType;\r\n+import javax.persistence.Id;\r\n+import javax.persistence.SequenceGenerator;\r\n+\r\n+/*\r\n+ * An entity which has a sequence where the sequence doesn't defined a schema,\r\n+ * as such the persistence-unit-default schema (see pudefaults-orm.xml file)\r\n+ * should be used when SQL operations are performed on the sequence. \r\n+ */\r\n+@Entity\r\n+public class PUDefaultSchemaEntity implements Serializable {\r\n+\r\n+    private static final long serialVersionUID = 2134948659397762341L;\r\n+\r\n+    @Id\r\n+    @SequenceGenerator(name = \"Seq_4DefaultSchema\", sequenceName = \"SeqName_4DefaultSchema\")\r\n+    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = \"Seq_4DefaultSchema\")\r\n+    @Column(name = \"ID\")\r\n+    private long id;\r\n+\r\n+    public long getId() { return id; }\r\n+}\r"},{"sha":"dfa899ac77c3068a4e451dc5604e66d3faa1fe31","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/pudefaults/PUSchemaInSequenceAnnotationEntity.java","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/apache/openjpa/blob/077ad2b4462cd2be819df5485d906632488d73be/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/pudefaults/PUSchemaInSequenceAnnotationEntity.java","raw_url":"https://github.com/apache/openjpa/raw/077ad2b4462cd2be819df5485d906632488d73be/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/pudefaults/PUSchemaInSequenceAnnotationEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/pudefaults/PUSchemaInSequenceAnnotationEntity.java?ref=077ad2b4462cd2be819df5485d906632488d73be","patch":"@@ -0,0 +1,48 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.openjpa.persistence.pudefaults;\r\n+\r\n+import java.io.Serializable;\r\n+\r\n+import javax.persistence.Column;\r\n+import javax.persistence.Entity;\r\n+import javax.persistence.GeneratedValue;\r\n+import javax.persistence.GenerationType;\r\n+import javax.persistence.Id;\r\n+import javax.persistence.SequenceGenerator;\r\n+\r\n+/*\r\n+ * An entity which has a sequence where the sequence defines a schema,\r\n+ * as such the schema in the sequence annotation should take precedence over \r\n+ * the persistence-unit-default schema (see pudefaults-orm.xml file).\r\n+ */\r\n+@Entity\r\n+public class PUSchemaInSequenceAnnotationEntity implements Serializable {\r\n+\r\n+    private static final long serialVersionUID = 2472845479260320080L;\r\n+\r\n+    @Id\r\n+    @SequenceGenerator(name = \"Seq_4AnnoSequenceSchema\", sequenceName = \"SeqName_4AnnoSequenceSchema\", \r\n+                       schema = \"schemaInSequenceAnnotation\")\r\n+    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = \"Seq_4AnnoSequenceSchema\")\r\n+    @Column(name = \"ID\")\r\n+    private long id;\r\n+\r\n+    public long getId() { return id; }\r\n+}\r"},{"sha":"3a1e9c89b9e4988c98e0723970c13b9ea9c01b68","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/pudefaults/PUSchemaInSequenceMappingEntity.java","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/apache/openjpa/blob/077ad2b4462cd2be819df5485d906632488d73be/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/pudefaults/PUSchemaInSequenceMappingEntity.java","raw_url":"https://github.com/apache/openjpa/raw/077ad2b4462cd2be819df5485d906632488d73be/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/pudefaults/PUSchemaInSequenceMappingEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/pudefaults/PUSchemaInSequenceMappingEntity.java?ref=077ad2b4462cd2be819df5485d906632488d73be","patch":"@@ -0,0 +1,48 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.openjpa.persistence.pudefaults;\r\n+\r\n+import java.io.Serializable;\r\n+\r\n+import javax.persistence.Column;\r\n+import javax.persistence.Entity;\r\n+import javax.persistence.GeneratedValue;\r\n+import javax.persistence.GenerationType;\r\n+import javax.persistence.Id;\r\n+import javax.persistence.SequenceGenerator;\r\n+\r\n+/*\r\n+ * An entity which has a sequence where the sequence defines a schema,\r\n+ * as such the schema in the sequence annotation should take precedence over \r\n+ * the persistence-unit-default schema (see pudefaults-orm.xml file).\r\n+ */\r\n+@Entity\r\n+public class PUSchemaInSequenceMappingEntity implements Serializable {\r\n+\r\n+    private static final long serialVersionUID = 2472845479260320080L;\r\n+\r\n+    @Id\r\n+    @SequenceGenerator(name = \"Seq_4SequenceMappingSchema\", sequenceName = \"SeqName_4SequenceMappingSchema\", \r\n+                       schema = \"schemaInSequenceAnnotation\")\r\n+    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = \"Seq_4SequenceMappingSchema\")\r\n+    @Column(name = \"ID\")\r\n+    private long id;\r\n+\r\n+    public long getId() { return id; }\r\n+}\r"},{"sha":"581b3cf9d95469feb060cd3a314dcd426e6c6d10","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/pudefaults/PUSchemaInTableAnnotationEntity.java","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/apache/openjpa/blob/077ad2b4462cd2be819df5485d906632488d73be/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/pudefaults/PUSchemaInTableAnnotationEntity.java","raw_url":"https://github.com/apache/openjpa/raw/077ad2b4462cd2be819df5485d906632488d73be/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/pudefaults/PUSchemaInTableAnnotationEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/pudefaults/PUSchemaInTableAnnotationEntity.java?ref=077ad2b4462cd2be819df5485d906632488d73be","patch":"@@ -0,0 +1,49 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.openjpa.persistence.pudefaults;\r\n+\r\n+import java.io.Serializable;\r\n+\r\n+import javax.persistence.Column;\r\n+import javax.persistence.Entity;\r\n+import javax.persistence.GeneratedValue;\r\n+import javax.persistence.GenerationType;\r\n+import javax.persistence.Id;\r\n+import javax.persistence.SequenceGenerator;\r\n+import javax.persistence.Table;\r\n+\r\n+/*\r\n+ * An entity which has a @Table annotation which contains a schema name, \r\n+ * as such schema in the annotation should take precedence over the \r\n+ * persistence-unit-default schema (see pudefaults-orm.xml file).\r\n+ */\r\n+@Entity\r\n+@Table(name = \"PUSchemaInTable\", schema = \"schemaInTableAnnotation\")\r\n+public class PUSchemaInTableAnnotationEntity implements Serializable {\r\n+\r\n+    private static final long serialVersionUID = -566154189043208199L;\r\n+\r\n+    @Id\r\n+    @SequenceGenerator(name = \"Seq_4AnnoTableSchema\", sequenceName = \"SeqName_4AnnoTableSchema\")\r\n+    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = \"Seq_4AnnoTableSchema\")\r\n+    @Column(name = \"ID\")\r\n+    private long id;\r\n+\r\n+    public long getId() { return id; }\r\n+}\r"},{"sha":"8153ab2553ffbaa45e6783e082115a5036424990","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/pudefaults/PUSchemaInTableMappingEntity.java","status":"added","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/apache/openjpa/blob/077ad2b4462cd2be819df5485d906632488d73be/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/pudefaults/PUSchemaInTableMappingEntity.java","raw_url":"https://github.com/apache/openjpa/raw/077ad2b4462cd2be819df5485d906632488d73be/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/pudefaults/PUSchemaInTableMappingEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/pudefaults/PUSchemaInTableMappingEntity.java?ref=077ad2b4462cd2be819df5485d906632488d73be","patch":"@@ -0,0 +1,51 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.openjpa.persistence.pudefaults;\r\n+\r\n+import java.io.Serializable;\r\n+\r\n+import javax.persistence.Column;\r\n+import javax.persistence.Entity;\r\n+import javax.persistence.GeneratedValue;\r\n+import javax.persistence.GenerationType;\r\n+import javax.persistence.Id;\r\n+import javax.persistence.SequenceGenerator;\r\n+import javax.persistence.Table;\r\n+\r\n+/*\r\n+ * An entity which has a @Table annotation which contains a schema name, \r\n+ * as such schema in the annotation should take precedence over the \r\n+ * persistence-unit-default schema (see pudefaults-orm.xml file).  However,\r\n+ * the schema has been overridden in the mapping file as such the\r\n+ * schema in the mapping file trumps all.\r\n+ */\r\n+@Entity\r\n+@Table(name = \"PUSchemaInTableMapping\", schema = \"schemaInTableAnnotation\")\r\n+public class PUSchemaInTableMappingEntity implements Serializable {\r\n+\r\n+    private static final long serialVersionUID = -566154189043208199L;\r\n+\r\n+    @Id\r\n+    @SequenceGenerator(name = \"Seq_4TableMappingSchema\", sequenceName = \"SeqName_4TableMappingSchema\")\r\n+    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = \"Seq_4TableMappingSchema\")\r\n+    @Column(name = \"ID\")\r\n+    private long id;\r\n+\r\n+    public long getId() { return id; }\r\n+}\r"},{"sha":"4c8d5938c2d468887a614864c3954f0a6551b21e","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/pudefaults/TestSchemaPUDefault.java","status":"added","additions":101,"deletions":0,"changes":101,"blob_url":"https://github.com/apache/openjpa/blob/077ad2b4462cd2be819df5485d906632488d73be/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/pudefaults/TestSchemaPUDefault.java","raw_url":"https://github.com/apache/openjpa/raw/077ad2b4462cd2be819df5485d906632488d73be/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/pudefaults/TestSchemaPUDefault.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/pudefaults/TestSchemaPUDefault.java?ref=077ad2b4462cd2be819df5485d906632488d73be","patch":"@@ -0,0 +1,101 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.openjpa.persistence.pudefaults;\r\n+\r\n+import javax.persistence.EntityManager;\r\n+import javax.persistence.EntityTransaction;\r\n+\r\n+import org.apache.openjpa.persistence.test.SQLListenerTestCase;\r\n+\r\n+/*\r\n+ * OPENJPA-2494: This test verifies that a schema defined in an orm's \r\n+ * persistence-unit-default is used in certain scenarios, and overridden\r\n+ * in other scenarios.  \r\n+ */\r\n+public class TestSchemaPUDefault extends SQLListenerTestCase {\r\n+\r\n+    public void setUp() throws Exception {\r\n+        super.setUp(PUDefaultSchemaEntity.class, PUSchemaInSequenceAnnotationEntity.class,\r\n+            PUSchemaInTableAnnotationEntity.class, PUSchemaInTableMappingEntity.class,\r\n+            PUSchemaInSequenceMappingEntity.class);\r\n+        setSupportedDatabases(org.apache.openjpa.jdbc.sql.DB2Dictionary.class);\r\n+    }\r\n+\r\n+    public void tearDown() throws Exception {\r\n+        super.tearDown();\r\n+    }\r\n+\r\n+    @Override\r\n+    protected String getPersistenceUnitName() {\r\n+        return \"puDefault\";\r\n+    }\r\n+\r\n+    public void testSchemaInPUDefault() {\r\n+        persist(new PUDefaultSchemaEntity());\r\n+\r\n+        // The Sequence and Table SQL should use the PU default schema\r\n+        assertContainsSQL(\"ALTER SEQUENCE schemaInPUDefaults.SeqName_4DefaultSchema\");\r\n+        assertContainsSQL(\"INSERT INTO schemaInPUDefaults.PUDefaultSchemaEntity\");\r\n+    }\r\n+\r\n+    public void testSchemaInSequenceAnnotation() {\r\n+        persist(new PUSchemaInSequenceAnnotationEntity());\r\n+\r\n+        // The Sequence SQL should use the schema defined in the annotation\r\n+        assertContainsSQL(\"ALTER SEQUENCE schemaInSequenceAnnotation.SeqName_4AnnoSequenceSchema\");\r\n+        // The Table SQL should use the schema defined in the PU default schema\r\n+        assertContainsSQL(\"INSERT INTO schemaInPUDefaults.PUSchemaInSequenceAnnotationEntity\");\r\n+    }\r\n+\r\n+    public void testSchemaInTableAnnotation() {\r\n+        persist(new PUSchemaInTableAnnotationEntity());\r\n+\r\n+        // The Sequence SQL should use the schema defined in the PU default schema\r\n+        assertContainsSQL(\"ALTER SEQUENCE schemaInPUDefaults.SeqName_4AnnoTableSchema\");\r\n+        // The Table SQL should use the schema defined in the annotation\r\n+        assertContainsSQL(\"INSERT INTO schemaInTableAnnotation.PUSchemaInTable\");\r\n+    }\r\n+    \r\n+    public void testSchemaInTableMapping() {\r\n+        persist(new PUSchemaInTableMappingEntity());\r\n+\r\n+        // The Sequence SQL should use the schema defined in the PU default schema\r\n+        assertContainsSQL(\"ALTER SEQUENCE schemaInPUDefaults.SeqName_4TableMappingSchema\");\r\n+        // The Table SQL should use the schema defined in the mapping file\r\n+        assertContainsSQL(\"INSERT INTO schemaInTableMapping.PUSchemaInTableMapping\");\r\n+    }\r\n+\r\n+    public void testSchemaInSequenceMapping() {\r\n+        persist(new PUSchemaInSequenceMappingEntity());\r\n+\r\n+        // The Sequence SQL should use the schema defined in the mapping file\r\n+        assertContainsSQL(\"ALTER SEQUENCE schemaInSequenceMapping.SeqName_4SequenceMappingSchema\");\r\n+        // The Table SQL should use the schema defined in the PU default schema\r\n+        assertContainsSQL(\"INSERT INTO schemaInPUDefaults.PUSchemaInSequenceMappingEntity\");\r\n+    }\r\n+    \r\n+    public void persist(Object ent){\r\n+        EntityManager em = emf.createEntityManager();\r\n+        EntityTransaction tx = em.getTransaction();\r\n+        tx.begin();\r\n+        em.persist(ent);\r\n+        tx.commit();\r\n+        em.close();\r\n+    }    \r\n+}\r"},{"sha":"467b48917c1617d7506d56de255392ab9a03643a","filename":"openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/077ad2b4462cd2be819df5485d906632488d73be/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/077ad2b4462cd2be819df5485d906632488d73be/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml?ref=077ad2b4462cd2be819df5485d906632488d73be","patch":"@@ -488,4 +488,16 @@\n \t\t</properties>\n \t</persistence-unit>\n \n+    <persistence-unit name=\"puDefault\" transaction-type=\"RESOURCE_LOCAL\">\n+        <mapping-file>META-INF/pudefaults-orm.xml</mapping-file>\n+        <mapping-file>META-INF/pudefaults2-orm.xml</mapping-file>\n+    <properties>\n+    \n+                    <property name=\"openjpa.jdbc.SynchronizeMappings\"\n+                value=\"buildSchema(ForeignKeys=true)\"/>\n+                \n+    </properties>\n+        \n+    </persistence-unit>      \n+\n </persistence>\n\\ No newline at end of file"},{"sha":"5062cd2321e95ae490715cd64589358f88af0622","filename":"openjpa-persistence-jdbc/src/test/resources/META-INF/pudefaults-orm.xml","status":"added","additions":36,"deletions":0,"changes":36,"blob_url":"https://github.com/apache/openjpa/blob/077ad2b4462cd2be819df5485d906632488d73be/openjpa-persistence-jdbc/src/test/resources/META-INF/pudefaults-orm.xml","raw_url":"https://github.com/apache/openjpa/raw/077ad2b4462cd2be819df5485d906632488d73be/openjpa-persistence-jdbc/src/test/resources/META-INF/pudefaults-orm.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/META-INF/pudefaults-orm.xml?ref=077ad2b4462cd2be819df5485d906632488d73be","patch":"@@ -0,0 +1,36 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<!--\r\n+ Licensed to the Apache Software Foundation (ASF) under one\r\n+ or more contributor license agreements.  See the NOTICE file\r\n+ distributed with this work for additional information\r\n+ regarding copyright ownership.  The ASF licenses this file\r\n+ to you under the Apache License, Version 2.0 (the\r\n+ \"License\"); you may not use this file except in compliance\r\n+ with the License.  You may obtain a copy of the License at\r\n+\r\n+ http://www.apache.org/licenses/LICENSE-2.0\r\n+\r\n+ Unless required by applicable law or agreed to in writing,\r\n+ software distributed under the License is distributed on an\r\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ KIND, either express or implied.  See the License for the\r\n+ specific language governing permissions and limitations\r\n+ under the License.\r\n+-->\r\n+\r\n+<entity-mappings version=\"2.0\" xmlns=\"http://java.sun.com/xml/ns/persistence/orm\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence/orm http://java.sun.com/xml/ns/persistence/orm_2_0.xsd\">\r\n+\r\n+<!-- This file contains some mappings, and its close cousin, pudefaults2-orm.xml, contains some mappings as\r\n+     well to verify that mappings can be spread accross multiple mapping files. -->\r\n+     \r\n+\t<persistence-unit-metadata>\r\n+\t\t<persistence-unit-defaults>\r\n+\t\t\t<schema>schemaInPUDefaults</schema>\r\n+\t\t</persistence-unit-defaults>\r\n+\t</persistence-unit-metadata>\r\n+\t\r\n+\t<entity class=\"org.apache.openjpa.persistence.pudefaults.PUSchemaInTableMappingEntity\">\r\n+\t\t<table name=\"PUSchemaInTableMappingEntity\" schema=\"schemaInTableMapping\"></table>\r\n+\t</entity>\r\n+\r\n+</entity-mappings>\r"},{"sha":"15872c748fd27f26c2e8a8eda9d787fba0d4035e","filename":"openjpa-persistence-jdbc/src/test/resources/META-INF/pudefaults2-orm.xml","status":"added","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/apache/openjpa/blob/077ad2b4462cd2be819df5485d906632488d73be/openjpa-persistence-jdbc/src/test/resources/META-INF/pudefaults2-orm.xml","raw_url":"https://github.com/apache/openjpa/raw/077ad2b4462cd2be819df5485d906632488d73be/openjpa-persistence-jdbc/src/test/resources/META-INF/pudefaults2-orm.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/META-INF/pudefaults2-orm.xml?ref=077ad2b4462cd2be819df5485d906632488d73be","patch":"@@ -0,0 +1,29 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<!--\r\n+ Licensed to the Apache Software Foundation (ASF) under one\r\n+ or more contributor license agreements.  See the NOTICE file\r\n+ distributed with this work for additional information\r\n+ regarding copyright ownership.  The ASF licenses this file\r\n+ to you under the Apache License, Version 2.0 (the\r\n+ \"License\"); you may not use this file except in compliance\r\n+ with the License.  You may obtain a copy of the License at\r\n+\r\n+ http://www.apache.org/licenses/LICENSE-2.0\r\n+\r\n+ Unless required by applicable law or agreed to in writing,\r\n+ software distributed under the License is distributed on an\r\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ KIND, either express or implied.  See the License for the\r\n+ specific language governing permissions and limitations\r\n+ under the License.\r\n+-->\r\n+\r\n+<entity-mappings version=\"2.0\" xmlns=\"http://java.sun.com/xml/ns/persistence/orm\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence/orm http://java.sun.com/xml/ns/persistence/orm_2_0.xsd\">\r\n+\r\n+\t<entity class=\"org.apache.openjpa.persistence.pudefaults.PUSchemaInSequenceMappingEntity\">\r\n+  \t\t<sequence-generator name=\"Seq_4SequenceMappingSchema\"\r\n+  \t\t\tsequence-name=\"SeqName_4SequenceMappingSchema\" schema=\"schemaInSequenceMapping\">\r\n+  \t\t</sequence-generator>\r\n+\t</entity>\r\n+\t \r\n+</entity-mappings>\r"},{"sha":"6561a0ede4bc353175804a0759231089cc189914","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceMetaDataDefaults.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/077ad2b4462cd2be819df5485d906632488d73be/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceMetaDataDefaults.java","raw_url":"https://github.com/apache/openjpa/raw/077ad2b4462cd2be819df5485d906632488d73be/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceMetaDataDefaults.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceMetaDataDefaults.java?ref=077ad2b4462cd2be819df5485d906632488d73be","patch":"@@ -133,6 +133,7 @@\n     protected SetterFilter setterFilter = new SetterFilter();\n     private Boolean _isAbstractMappingUniDirectional = null;\n     private Boolean _isNonDefaultMappingAllowed = null;\n+    private String _defaultSchema;\n     \n     public PersistenceMetaDataDefaults() {\n         setCallbackMode(CALLBACK_RETHROW | CALLBACK_ROLLBACK |\n@@ -949,4 +950,14 @@ public void setNonDefaultMappingAllowed(OpenJPAConfiguration conf) {\n         _isNonDefaultMappingAllowed = conf.getCompatibilityInstance().\n             isNonDefaultMappingAllowed();\n     }\n+\n+    @Override\n+    public String getDefaultSchema() {\n+        return _defaultSchema;\n+    }\n+\n+    @Override\n+    public void setDefaultSchema(String schema) {\n+        _defaultSchema=schema;        \n+    }\n }"}]}

