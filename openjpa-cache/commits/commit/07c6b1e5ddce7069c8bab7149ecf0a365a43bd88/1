{"sha":"07c6b1e5ddce7069c8bab7149ecf0a365a43bd88","node_id":"MDY6Q29tbWl0MjA2MzY0OjA3YzZiMWU1ZGRjZTcwNjljOGJhYjcxNDllY2YwYTM2NWE0M2JkODg=","commit":{"author":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2008-09-25T04:45:48Z"},"committer":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2008-09-25T04:45:48Z"},"message":"OPENJPA-719 - Ensure English locale is used in toUpperCase/toLowerCase for locale insensitive code.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@698813 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"54e39ff6c68a2e862a12a677d5782e2820673a89","url":"https://api.github.com/repos/apache/openjpa/git/trees/54e39ff6c68a2e862a12a677d5782e2820673a89"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/07c6b1e5ddce7069c8bab7149ecf0a365a43bd88","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/07c6b1e5ddce7069c8bab7149ecf0a365a43bd88","html_url":"https://github.com/apache/openjpa/commit/07c6b1e5ddce7069c8bab7149ecf0a365a43bd88","comments_url":"https://api.github.com/repos/apache/openjpa/commits/07c6b1e5ddce7069c8bab7149ecf0a365a43bd88/comments","author":null,"committer":null,"parents":[{"sha":"85b44d83d5d1edab60b653a35d176b61079c02e4","url":"https://api.github.com/repos/apache/openjpa/commits/85b44d83d5d1edab60b653a35d176b61079c02e4","html_url":"https://github.com/apache/openjpa/commit/85b44d83d5d1edab60b653a35d176b61079c02e4"}],"stats":{"total":9,"additions":5,"deletions":4},"files":[{"sha":"793c03e9d86d40cfada2169a4d0e1dbb623ae1a0","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/07c6b1e5ddce7069c8bab7149ecf0a365a43bd88/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java","raw_url":"https://github.com/apache/openjpa/raw/07c6b1e5ddce7069c8bab7149ecf0a365a43bd88/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java?ref=07c6b1e5ddce7069c8bab7149ecf0a365a43bd88","patch":"@@ -41,6 +41,7 @@\n import java.util.HashSet;\n import java.util.Iterator;\n import java.util.List;\n+import java.util.Locale;\n import java.util.Map;\n import java.util.Set;\n \n@@ -2566,7 +2567,7 @@ private Method getMethod(Class owner, Class type, String prefix,\n         // or 'Object'; figure out what type to use\n         String typeName = type.getName();\n         if (type.isPrimitive())\n-            typeName = typeName.substring(0, 1).toUpperCase()\n+            typeName = typeName.substring(0, 1).toUpperCase(Locale.ENGLISH)\n                 + typeName.substring(1);\n         else if (type.equals(String.class))\n             typeName = \"String\";\n@@ -3971,7 +3972,7 @@ private void readExternal(Code code, String fieldName, Class type,\n         String methName;\n         if (type.isPrimitive()) {\n             methName = type.getName();\n-            methName = Character.toUpperCase(methName.charAt(0))\n+            methName = methName.substring(0, 1).toUpperCase(Locale.ENGLISH)\n                 + methName.substring(1);\n             methName = \"read\" + methName;\n         } else\n@@ -4128,7 +4129,7 @@ private void writeExternal(Code code, String fieldName, Class type,\n         String methName;\n         if (type.isPrimitive()) {\n             methName = type.getName();\n-            methName = Character.toUpperCase(methName.charAt(0))\n+            methName = methName.substring(0, 1).toUpperCase(Locale.ENGLISH)\n                 + methName.substring(1);\n             methName = \"write\" + methName;\n         } else"},{"sha":"b9b7a6508b231e246c36ce6b9adfc391dcfdcb88","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/log/LogFactoryImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/07c6b1e5ddce7069c8bab7149ecf0a365a43bd88/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/LogFactoryImpl.java","raw_url":"https://github.com/apache/openjpa/raw/07c6b1e5ddce7069c8bab7149ecf0a365a43bd88/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/LogFactoryImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/LogFactoryImpl.java?ref=07c6b1e5ddce7069c8bab7149ecf0a365a43bd88","patch":"@@ -241,7 +241,7 @@ public static String getLevelName(short level) {\n      * Returns a symbolic constant for the specified string level.\r\n      */\r\n     public static short getLevel(String str) {\r\n-        str = str.toUpperCase().trim();\r\n+        str = str.toUpperCase(Locale.ENGLISH).trim();\r\n         short val = TRACE_STR.equals(str) ? Log.TRACE :\r\n             INFO_STR.equals(str) ? Log.INFO :\r\n                 WARN_STR.equals(str) ? Log.WARN :\r"}]}

