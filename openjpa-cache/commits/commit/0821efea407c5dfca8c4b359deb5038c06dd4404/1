{"sha":"0821efea407c5dfca8c4b359deb5038c06dd4404","node_id":"MDY6Q29tbWl0MjA2MzY0OjA4MjFlZmVhNDA3YzVkZmNhOGM0YjM1OWRlYjUwMzhjMDZkZDQ0MDQ=","commit":{"author":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-08-15T15:57:14Z"},"committer":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-08-15T15:57:14Z"},"message":"Work around JVMs that don't return a valid value for File.length().  We've\ndiscovered at least one that doesn't.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@431627 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"dcc6893a3e4adca6c005e8273a454f1ccbbbfebf","url":"https://api.github.com/repos/apache/openjpa/git/trees/dcc6893a3e4adca6c005e8273a454f1ccbbbfebf"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/0821efea407c5dfca8c4b359deb5038c06dd4404","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/0821efea407c5dfca8c4b359deb5038c06dd4404","html_url":"https://github.com/apache/openjpa/commit/0821efea407c5dfca8c4b359deb5038c06dd4404","comments_url":"https://api.github.com/repos/apache/openjpa/commits/0821efea407c5dfca8c4b359deb5038c06dd4404/comments","author":null,"committer":null,"parents":[{"sha":"26ae2fa31c9efe109e0fa7ab73326a1650582b4d","url":"https://api.github.com/repos/apache/openjpa/commits/26ae2fa31c9efe109e0fa7ab73326a1650582b4d","html_url":"https://github.com/apache/openjpa/commit/26ae2fa31c9efe109e0fa7ab73326a1650582b4d"}],"stats":{"total":25,"additions":18,"deletions":7},"files":[{"sha":"168012cd3dadb5b8fd72d3a094fcff4aa2d04764","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/FileMetaDataIterator.java","status":"modified","additions":18,"deletions":7,"changes":25,"blob_url":"https://github.com/apache/openjpa/blob/0821efea407c5dfca8c4b359deb5038c06dd4404/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/FileMetaDataIterator.java","raw_url":"https://github.com/apache/openjpa/raw/0821efea407c5dfca8c4b359deb5038c06dd4404/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/FileMetaDataIterator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/FileMetaDataIterator.java?ref=0821efea407c5dfca8c4b359deb5038c06dd4404","patch":"@@ -15,6 +15,7 @@\n  */\n package org.apache.openjpa.lib.meta;\n \n+import java.io.ByteArrayOutputStream;\n import java.io.File;\n import java.io.FileInputStream;\n import java.io.IOException;\n@@ -134,14 +135,24 @@ public String getName() {\n \n         public byte[] getContent() throws IOException {\n             long len = _file.length();\n-            if (len <= 0)\n-                return new byte[0];\n-\n-            byte[] content = new byte[(int) len];\n             FileInputStream fin = new FileInputStream(_file);\n-            fin.read(content);\n-            fin.close();\n-            return content;\n+            try {\n+                byte[] content;\n+                if (len <= 0 || len > Integer.MAX_VALUE) {\n+                    // some JVMs don't return a proper length\n+                    ByteArrayOutputStream bout = new ByteArrayOutputStream();\n+                    byte[] buf = new byte[1024]; \n+                    for (int r; (r = fin.read(buf)) != -1;)\n+                        bout.write(buf, 0, r);\n+                    content = bout.toByteArray();\n+                } else {\n+                    content = new byte[(int) len];\n+                    fin.read(content);\n+                }\n+                return content;\n+            } finally {\n+                try { fin.close(); } catch (IOException ioe) {}\n+            }\n         }\n     }\n }"}]}

