{"sha":"09dab24fcd5b44519db55fc0ab3d51b6e1446c8d","node_id":"MDY6Q29tbWl0MjA2MzY0OjA5ZGFiMjRmY2Q1YjQ0NTE5ZGI1NWZjMGFiM2Q1MWI2ZTE0NDZjOGQ=","commit":{"author":{"name":"Fay Wang","email":"faywang@apache.org","date":"2010-12-08T18:20:21Z"},"committer":{"name":"Fay Wang","email":"faywang@apache.org","date":"2010-12-08T18:20:21Z"},"message":"OPENJPA-1810: fix performance regression for non-criteria query cache.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1043572 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"8e6c6a231156342c665ecd68cc9fbe676690f3b0","url":"https://api.github.com/repos/apache/openjpa/git/trees/8e6c6a231156342c665ecd68cc9fbe676690f3b0"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/09dab24fcd5b44519db55fc0ab3d51b6e1446c8d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/09dab24fcd5b44519db55fc0ab3d51b6e1446c8d","html_url":"https://github.com/apache/openjpa/commit/09dab24fcd5b44519db55fc0ab3d51b6e1446c8d","comments_url":"https://api.github.com/repos/apache/openjpa/commits/09dab24fcd5b44519db55fc0ab3d51b6e1446c8d/comments","author":null,"committer":null,"parents":[{"sha":"ccc81f0ab872b8f78106e8ba1f8d95453be7c8da","url":"https://api.github.com/repos/apache/openjpa/commits/ccc81f0ab872b8f78106e8ba1f8d95453be7c8da","html_url":"https://github.com/apache/openjpa/commit/ccc81f0ab872b8f78106e8ba1f8d95453be7c8da"}],"stats":{"total":19,"additions":18,"deletions":1},"files":[{"sha":"246bdab0ba6e28fb49ca2b3ed345fa41fac68c8d","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/datacache/QueryCacheStoreQuery.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/09dab24fcd5b44519db55fc0ab3d51b6e1446c8d/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/QueryCacheStoreQuery.java","raw_url":"https://github.com/apache/openjpa/raw/09dab24fcd5b44519db55fc0ab3d51b6e1446c8d/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/QueryCacheStoreQuery.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/QueryCacheStoreQuery.java?ref=09dab24fcd5b44519db55fc0ab3d51b6e1446c8d","patch":"@@ -262,6 +262,10 @@ public Object newCompilation() {\n         return _query.newCompilation();\n     }\n \n+    public Object getCompilation() {\n+        return _query.getCompilation();\n+    }\n+\n     public void populateFromCompilation(Object comp) {\n         _query.populateFromCompilation(comp);\n     }\n@@ -331,7 +335,7 @@ public QueryCacheExecutor(Executor ex, ClassMetaData meta,\n         public ResultObjectProvider executeQuery(StoreQuery q, Object[] params,\n             Range range) {\n             QueryCacheStoreQuery cq = (QueryCacheStoreQuery) q;\n-            Object parsed = cq.getDelegate().newCompilation();\n+            Object parsed = cq.getDelegate().getCompilation();\n             QueryKey key = QueryKey.newInstance(cq.getContext(),\n                 _ex.isPacking(q), params, _candidate, _subs, range.start, \n                 range.end, parsed);"},{"sha":"0ca64e3cfec10408c272d76ad2228e2e19aa5f96","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractStoreQuery.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/09dab24fcd5b44519db55fc0ab3d51b6e1446c8d/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractStoreQuery.java","raw_url":"https://github.com/apache/openjpa/raw/09dab24fcd5b44519db55fc0ab3d51b6e1446c8d/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractStoreQuery.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractStoreQuery.java?ref=09dab24fcd5b44519db55fc0ab3d51b6e1446c8d","patch":"@@ -72,6 +72,10 @@ public Object newCompilation() {\n         return null;\n     }\n \n+    public Object getCompilation() {\n+        return null;\n+    }\n+\n     public void populateFromCompilation(Object comp) {\n     }\n "},{"sha":"3ce68c31d7de66feed36c06cb83cd26afb450a9f","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/ExpressionStoreQuery.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/09dab24fcd5b44519db55fc0ab3d51b6e1446c8d/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/ExpressionStoreQuery.java","raw_url":"https://github.com/apache/openjpa/raw/09dab24fcd5b44519db55fc0ab3d51b6e1446c8d/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/ExpressionStoreQuery.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/ExpressionStoreQuery.java?ref=09dab24fcd5b44519db55fc0ab3d51b6e1446c8d","patch":"@@ -154,6 +154,10 @@ public Object newCompilation() {\n         return _parser.parse(ctx.getQueryString(), this);\n     }\n \n+    public Object getCompilation() {\n+        return _parsed;\n+    }\n+    \n     public void populateFromCompilation(Object comp) {\n         _parser.populate(comp, this);\n     }"},{"sha":"204d6a331d246e0303b2f9866acede0a0ef1c635","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StoreQuery.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/09dab24fcd5b44519db55fc0ab3d51b6e1446c8d/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StoreQuery.java","raw_url":"https://github.com/apache/openjpa/raw/09dab24fcd5b44519db55fc0ab3d51b6e1446c8d/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StoreQuery.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StoreQuery.java?ref=09dab24fcd5b44519db55fc0ab3d51b6e1446c8d","patch":"@@ -90,6 +90,11 @@\n      * Create a new compilation for this query. May be null.\n      */\n     public Object newCompilation();\n+    \n+    /**\n+     * Get the current compilation for this query. If it is null, do not create. \n+     */\n+    public Object getCompilation();\n \n     /**\n      * Populate internal data from compilation."}]}

