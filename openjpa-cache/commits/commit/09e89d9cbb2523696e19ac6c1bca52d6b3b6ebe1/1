{"sha":"09e89d9cbb2523696e19ac6c1bca52d6b3b6ebe1","node_id":"MDY6Q29tbWl0MjA2MzY0OjA5ZTg5ZDljYmIyNTIzNjk2ZTE5YWM2YzFiY2E1MmQ2YjNiNmViZTE=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2006-07-20T02:38:07Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2006-07-20T02:38:07Z"},"message":"fixed PUIImpl to deal with openjpa properties namespace correctly. TestPersistence should now work. Run 'mvn test -Dtest=TestPersistence' to see things in action.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@423720 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"3b5fa136e4c3b1c8fdc568313dc17340664c3899","url":"https://api.github.com/repos/apache/openjpa/git/trees/3b5fa136e4c3b1c8fdc568313dc17340664c3899"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/09e89d9cbb2523696e19ac6c1bca52d6b3b6ebe1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/09e89d9cbb2523696e19ac6c1bca52d6b3b6ebe1","html_url":"https://github.com/apache/openjpa/commit/09e89d9cbb2523696e19ac6c1bca52d6b3b6ebe1","comments_url":"https://api.github.com/repos/apache/openjpa/commits/09e89d9cbb2523696e19ac6c1bca52d6b3b6ebe1/comments","author":null,"committer":null,"parents":[{"sha":"a1f4fd3eb0c3e7e80f73c1a06bc0cb7c29249503","url":"https://api.github.com/repos/apache/openjpa/commits/a1f4fd3eb0c3e7e80f73c1a06bc0cb7c29249503","html_url":"https://github.com/apache/openjpa/commit/a1f4fd3eb0c3e7e80f73c1a06bc0cb7c29249503"}],"stats":{"total":24,"additions":12,"deletions":12},"files":[{"sha":"40fa2155fe154c065abfa0fd173fd36278a3f34d","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceUnitInfoImpl.java","status":"modified","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/apache/openjpa/blob/09e89d9cbb2523696e19ac6c1bca52d6b3b6ebe1/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceUnitInfoImpl.java","raw_url":"https://github.com/apache/openjpa/raw/09e89d9cbb2523696e19ac6c1bca52d6b3b6ebe1/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceUnitInfoImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceUnitInfoImpl.java?ref=09e89d9cbb2523696e19ac6c1bca52d6b3b6ebe1","patch":"@@ -301,44 +301,44 @@ else if (\"javax.persistence.transactionType\".equals(key)) {\n     public static Map toOpenJPAProperties(PersistenceUnitInfo info) {\n         Map map = new HashMap();\n         if (info.getTransactionType() == PersistenceUnitTransactionType.JTA)\n-            map.put(\"org.apache.openjpa.TransactionMode\", \"managed\");\n+            map.put(\"openjpa.TransactionMode\", \"managed\");\n \n         boolean hasJta = false;\n         DataSource ds = info.getJtaDataSource();\n         if (ds != null) {\n-            map.put(\"org.apache.openjpa.ConnectionFactory\", ds);\n-            map.put(\"org.apache.openjpa.ConnectionFactoryMode\", \"managed\");\n+            map.put(\"openjpa.ConnectionFactory\", ds);\n+            map.put(\"openjpa.ConnectionFactoryMode\", \"managed\");\n             hasJta = true;\n         } else if (info instanceof PersistenceUnitInfoImpl\n             && ((PersistenceUnitInfoImpl) info).getJtaDataSourceName() != null)\n         {\n-            map.put(\"org.apache.openjpa.ConnectionFactoryName\",\n+            map.put(\"openjpa.ConnectionFactoryName\",\n                 ((PersistenceUnitInfoImpl)\n                     info).getJtaDataSourceName());\n-            map.put(\"org.apache.openjpa.ConnectionFactoryMode\", \"managed\");\n+            map.put(\"openjpa.ConnectionFactoryMode\", \"managed\");\n             hasJta = true;\n         }\n \n         ds = info.getNonJtaDataSource();\n         if (ds != null) {\n             if (!hasJta)\n-                map.put(\"org.apache.openjpa.ConnectionFactory\", ds);\n+                map.put(\"openjpa.ConnectionFactory\", ds);\n             else\n-                map.put(\"org.apache.openjpa.ConnectionFactory2\", ds);\n+                map.put(\"openjpa.ConnectionFactory2\", ds);\n         } else if (info instanceof PersistenceUnitInfoImpl\n             && ((PersistenceUnitInfoImpl) info).getNonJtaDataSourceName()\n             != null) {\n             String nonJtaName = ((PersistenceUnitInfoImpl) info).\n                 getNonJtaDataSourceName();\n             if (!hasJta)\n-                map.put(\"org.apache.openjpa.ConnectionFactoryName\", nonJtaName);\n+                map.put(\"openjpa.ConnectionFactoryName\", nonJtaName);\n             else\n-                map.put(\"org.apache.openjpa.ConnectionFactory2Name\",\n+                map.put(\"openjpa.ConnectionFactory2Name\",\n                     nonJtaName);\n         }\n \n         if (info.getClassLoader() != null)\n-            map.put(\"org.apache.openjpa.ClassResolver\", new ClassResolverImpl\n+            map.put(\"openjpa.ClassResolver\", new ClassResolverImpl\n                 (info.getClassLoader()));\n \n         Properties props = info.getProperties();\n@@ -395,7 +395,7 @@ public static Map toOpenJPAProperties(PersistenceUnitInfo info) {\n         if (!metaFactoryProps.isEmpty()) {\n             // set persistent class locations as properties of metadata factory\n             String factory =\n-                (String) map.get(\"org.apache.openjpa.MetaDataFactory\");\n+                (String) map.get(\"openjpa.MetaDataFactory\");\n             if (factory == null)\n                 factory = Configurations.serializeProperties(metaFactoryProps);\n             else {\n@@ -405,7 +405,7 @@ public static Map toOpenJPAProperties(PersistenceUnitInfo info) {\n                 factory = Configurations.getPlugin(clsName,\n                     Configurations.serializeProperties(metaFactoryProps));\n             }\n-            map.put(\"org.apache.openjpa.MetaDataFactory\", factory);\n+            map.put(\"openjpa.MetaDataFactory\", factory);\n         }\n         return map;\n     }"}]}

