{"sha":"0ae1199283814bd7ed3e8bd1f317f3a38b23dfb8","node_id":"MDY6Q29tbWl0MjA2MzY0OjBhZTExOTkyODM4MTRiZDdlZDNlOGJkMWYzMTdmM2EzOGIyM2RmYjg=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2012-09-12T01:28:31Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2012-09-12T01:28:31Z"},"message":"OPENJPA-2253 Add few Audit test\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1383729 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"45a0a49451f3a98446be101b3269c1c022492596","url":"https://api.github.com/repos/apache/openjpa/git/trees/45a0a49451f3a98446be101b3269c1c022492596"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/0ae1199283814bd7ed3e8bd1f317f3a38b23dfb8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/0ae1199283814bd7ed3e8bd1f317f3a38b23dfb8","html_url":"https://github.com/apache/openjpa/commit/0ae1199283814bd7ed3e8bd1f317f3a38b23dfb8","comments_url":"https://api.github.com/repos/apache/openjpa/commits/0ae1199283814bd7ed3e8bd1f317f3a38b23dfb8/comments","author":null,"committer":null,"parents":[{"sha":"ae3441b049f60168e8abec0ef5988c0ba6265df7","url":"https://api.github.com/repos/apache/openjpa/commits/ae3441b049f60168e8abec0ef5988c0ba6265df7","html_url":"https://github.com/apache/openjpa/commit/ae3441b049f60168e8abec0ef5988c0ba6265df7"}],"stats":{"total":68,"additions":67,"deletions":1},"files":[{"sha":"e7ad8efe0604a489597b8930c91da7ea1d955626","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/audit/TestAudit.java","status":"modified","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/apache/openjpa/blob/0ae1199283814bd7ed3e8bd1f317f3a38b23dfb8/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/audit/TestAudit.java","raw_url":"https://github.com/apache/openjpa/raw/0ae1199283814bd7ed3e8bd1f317f3a38b23dfb8/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/audit/TestAudit.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/audit/TestAudit.java?ref=0ae1199283814bd7ed3e8bd1f317f3a38b23dfb8","patch":"@@ -19,6 +19,8 @@\n package org.apache.openjpa.audit;\n \n \n+import java.lang.ref.ReferenceQueue;\n+import java.lang.ref.WeakReference;\n import java.util.List;\n \n import javax.persistence.EntityManager;\n@@ -132,6 +134,37 @@ public void testUpdateInsideTransactionAreAudited() {\n     \tassertTrue(entry.getUpdatedFields().contains(\"price\"));\n     }\n     \n+    public void testAuditDoesNotLeakMemory() {\n+    \tint N = 1000;\n+    \tEntityManager em = emf.createEntityManager();\n+\t   \tlong m2 = insert(N, em);\n+    \tem = Persistence.createEntityManagerFactory(\"no-audit\").createEntityManager();\n+    \tassertNull(OpenJPAPersistence.cast(em).getEntityManagerFactory().getConfiguration().getAuditorInstance());\n+\t\tlong m0 = insert(N, em);\n+    \tSystem.err.println(\"Memory used with no auditor \" + m0);\n+    \tSystem.err.println(\"Memory used with auditor \" + m2);\n+\t\tdouble pct = 100.0*(m2-m0)/m0;\n+\t\tSystem.err.println(\"Extra memory with auditor \" + pct);\n+    \tassertTrue(pct < 10.0);\n+    }\n+    \n+    private long insert(int N, EntityManager em) {\n+    \tassertTrue(ensureGarbageCollection());\n+    \tlong m1 = Runtime.getRuntime().freeMemory();\n+    \tem.getTransaction().begin();\n+    \tfor (int i = 0; i < N; i++) {\n+    \t\tX x = new X();\n+    \t\tx.setName(\"X\"+System.currentTimeMillis());\n+    \t\tem.persist(x);\n+    \t}\n+    \tem.getTransaction().commit();\n+    \tassertTrue(ensureGarbageCollection());\n+    \tlong m2 = Runtime.getRuntime().freeMemory();\n+    \tlong mused = m1-m2;\n+    \t\n+    \treturn mused;\n+    }\n+    \n     /**\n      * Finds the latest audit entry of the given operation type.\n      * The <em>latest</em> is determined by a sort on identifier which is assumed to be monotonically ascending.\n@@ -143,6 +176,21 @@ AuditedEntry findLastAuditedEntry(AuditableOperation op) {\n                 .setMaxResults(1).setParameter(\"op\", op).getResultList();\n         return entry.get(0);\n     }\n+    \n+\tpublic boolean ensureGarbageCollection() {\n+\t\tReferenceQueue<Object> detector = new ReferenceQueue<Object>();\n+\t\tObject marker = new Object();\n+\t\tWeakReference<Object> ref = new WeakReference<Object>(marker, detector);\n+\t\tmarker = null;\n+\t\tSystem.gc();\n+\t\ttry {\n+\t\t\treturn detector.remove() == ref;\n+\t\t} catch (InterruptedException e) {\n+\t\t\t\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n \n \n }"},{"sha":"0353137a43c745cf0278685323f59580eddb4e98","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/audit/X.java","status":"modified","additions":10,"deletions":1,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/0ae1199283814bd7ed3e8bd1f317f3a38b23dfb8/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/audit/X.java","raw_url":"https://github.com/apache/openjpa/raw/0ae1199283814bd7ed3e8bd1f317f3a38b23dfb8/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/audit/X.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/audit/X.java?ref=0ae1199283814bd7ed3e8bd1f317f3a38b23dfb8","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.openjpa.audit;\n \n+import java.util.concurrent.atomic.AtomicLong;\n+\n import javax.persistence.Entity;\n import javax.persistence.GeneratedValue;\n import javax.persistence.Id;\n@@ -34,18 +36,25 @@\n @Auditable\n public class X {\n \t@Id\n-\t@GeneratedValue\n \tprivate long id;\n \t\n \tprivate String name;\n \tprivate int price;\n \t\n+\tprivate static AtomicLong ID_GENERATOR = new AtomicLong(System.currentTimeMillis());\n+\t\n+\tpublic X() {\n+\t\tid = ID_GENERATOR.getAndIncrement();\n+\t}\n+\t\n \tpublic String getName() {\n \t\treturn name;\n \t}\n+\t\n \tpublic void setName(String name) {\n \t\tthis.name = name;\n \t}\n+\t\n \tpublic int getPrice() {\n \t\treturn price;\n \t}"},{"sha":"17a9e2f9bb687ecc9c2ae07511cfb9dbc482cf87","filename":"openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/0ae1199283814bd7ed3e8bd1f317f3a38b23dfb8/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/0ae1199283814bd7ed3e8bd1f317f3a38b23dfb8/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml?ref=0ae1199283814bd7ed3e8bd1f317f3a38b23dfb8","patch":"@@ -452,6 +452,15 @@\n \t\t\t<property name=\"openjpa.DynamicEnhancementAgent\" value=\"false\" />\n \t\t</properties>\n \t</persistence-unit>\n+\t<persistence-unit name=\"no-audit\">\n+\t\t<class>org.apache.openjpa.audit.X</class>\n+\t\t<class>org.apache.openjpa.audit.AuditedEntry</class>\n+\n+\t\t<properties>\n+\t\t\t<property name=\"openjpa.jdbc.SynchronizeMappings\" value=\"buildSchema(ForeignKeys=true)\" />\n+\t\t\t<property name=\"openjpa.DynamicEnhancementAgent\" value=\"false\" />\n+\t\t</properties>\n+\t</persistence-unit>\n \n \t<persistence-unit name=\"query-result\">\n \t\t<mapping-file>META-INF/query-result-orm.xml</mapping-file>"}]}

