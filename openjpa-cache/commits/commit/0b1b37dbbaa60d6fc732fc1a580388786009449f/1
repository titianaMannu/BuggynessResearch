{"sha":"0b1b37dbbaa60d6fc732fc1a580388786009449f","node_id":"MDY6Q29tbWl0MjA2MzY0OjBiMWIzN2RiYmFhNjBkNmZjNzMyZmMxYTU4MDM4ODc4NjAwOTQ0OWY=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-08-07T00:19:53Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-08-07T00:19:53Z"},"message":"feedback from Bill Pugh of FindBugs fame\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@563357 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"bb1bbc4a84b9d0baec8354411515b1388ee3fe8b","url":"https://api.github.com/repos/apache/openjpa/git/trees/bb1bbc4a84b9d0baec8354411515b1388ee3fe8b"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/0b1b37dbbaa60d6fc732fc1a580388786009449f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/0b1b37dbbaa60d6fc732fc1a580388786009449f","html_url":"https://github.com/apache/openjpa/commit/0b1b37dbbaa60d6fc732fc1a580388786009449f","comments_url":"https://api.github.com/repos/apache/openjpa/commits/0b1b37dbbaa60d6fc732fc1a580388786009449f/comments","author":null,"committer":null,"parents":[{"sha":"d5ef5d1f3db5251683f1888da5353fb765584fe2","url":"https://api.github.com/repos/apache/openjpa/commits/d5ef5d1f3db5251683f1888da5353fb765584fe2","html_url":"https://github.com/apache/openjpa/commit/d5ef5d1f3db5251683f1888da5353fb765584fe2"}],"stats":{"total":16,"additions":9,"deletions":7},"files":[{"sha":"2db1537f4e5fb90558e0d3e421ab5bc327f92bfc","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/ResultSetResult.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/0b1b37dbbaa60d6fc732fc1a580388786009449f/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/ResultSetResult.java","raw_url":"https://github.com/apache/openjpa/raw/0b1b37dbbaa60d6fc732fc1a580388786009449f/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/ResultSetResult.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/ResultSetResult.java?ref=0b1b37dbbaa60d6fc732fc1a580388786009449f","patch":"@@ -422,8 +422,7 @@ protected Object getObjectInternal(Object obj, int metaTypeCode,\n                     if (col.getType() == Types.BLOB\n                         || col.getType() == Types.VARBINARY) {\n                         return _dict\n-                            .getBlobObject(_rs, ((Number) obj).intValue(),\n-                                _store);\n+                            .getBlobObject(_rs, col.getIndex(), _store);\n                     }\n                 }\n                 return _dict.getObject(_rs, ((Number) obj).intValue(), null);\n@@ -449,7 +448,7 @@ protected short getShortInternal(Object obj, Joins joins)\n     protected String getStringInternal(Object obj, Joins joins)\n         throws SQLException {\n         if (obj instanceof Column && ((Column) obj).getType() == Types.CLOB)\n-            return _dict.getClobString(_rs, ((Number) obj).intValue());\n+            return _dict.getClobString(_rs, ((Column) obj).getIndex());\n         return _dict.getString(_rs, ((Number) obj).intValue());\n     }\n "},{"sha":"99de5c9bdc9f1e3b18b922fd68af0bdd802b9aba","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCacheScheduler.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/0b1b37dbbaa60d6fc732fc1a580388786009449f/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCacheScheduler.java","raw_url":"https://github.com/apache/openjpa/raw/0b1b37dbbaa60d6fc732fc1a580388786009449f/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCacheScheduler.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCacheScheduler.java?ref=0b1b37dbbaa60d6fc732fc1a580388786009449f","patch":"@@ -50,8 +50,6 @@\n     private static final Localizer _loc = Localizer.forPackage\n         (DataCacheScheduler.class);\n \n-    private static final DateFormat _fom = new SimpleDateFormat(\"E HH:mm:ss\");\n-\n     private Map _caches = new ConcurrentHashMap();\n     private boolean _stop = false;\n     private int _interval = 2;\n@@ -121,6 +119,7 @@ public void run() {\n             _log.trace(_loc.get(\"scheduler-interval\", _interval + \"\"));\n \n         Date lastRun = new Date();\n+        DateFormat fom = new SimpleDateFormat(\"E HH:mm:ss\");\n         while (!isStopped()) {\n             try {\n                 Thread.sleep(_interval * 60 * 1000);\n@@ -136,7 +135,7 @@ public void run() {\n                     if (schedule.matches(lastRun, now)) {\n                         if (_log.isTraceEnabled())\n                             _log.trace(_loc.get(\"scheduler-clear\",\n-                                cache.getName(), _fom.format(now)));\n+                                cache.getName(), fom.format(now)));\n                         evict(cache);\n                     }\n                 }"},{"sha":"f773f494fd4acb097616826c0a6b0ff7bfac86a0","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/FieldMetaData.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/0b1b37dbbaa60d6fc732fc1a580388786009449f/openjpa-kernel/src/main/java/org/apache/openjpa/meta/FieldMetaData.java","raw_url":"https://github.com/apache/openjpa/raw/0b1b37dbbaa60d6fc732fc1a580388786009449f/openjpa-kernel/src/main/java/org/apache/openjpa/meta/FieldMetaData.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/FieldMetaData.java?ref=0b1b37dbbaa60d6fc732fc1a580388786009449f","patch":"@@ -1564,6 +1564,10 @@ public boolean equals(Object other) {\n             getFullName(true));\n     }\n \n+    public int hashCode() {\n+        return getFullName(true).hashCode();\n+    }\n+\n     public int compareTo(Object other) {\n         if (other == null)\n             return 1;\n@@ -2000,7 +2004,7 @@ public void copy (ValueMetaData vmd)\n         private transient Member _member;\n         \n         private MemberProvider(Member member) {\n-            if (_member instanceof Constructor)\n+            if (member instanceof Constructor)\n                 throw new IllegalArgumentException();\n \n             _member = member;"}]}

