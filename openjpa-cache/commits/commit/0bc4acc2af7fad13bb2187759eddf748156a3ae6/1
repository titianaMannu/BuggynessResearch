{"sha":"0bc4acc2af7fad13bb2187759eddf748156a3ae6","node_id":"MDY6Q29tbWl0MjA2MzY0OjBiYzRhY2MyYWY3ZmFkMTNiYjIxODc3NTllZGRmNzQ4MTU2YTNhZTY=","commit":{"author":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-10-08T19:05:15Z"},"committer":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-10-08T19:05:15Z"},"message":"Always use a ConfigurationProvider that supplies a spec.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@454191 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"7eba130fa3ae7e6dd5b38773f6c15cc442547a36","url":"https://api.github.com/repos/apache/openjpa/git/trees/7eba130fa3ae7e6dd5b38773f6c15cc442547a36"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/0bc4acc2af7fad13bb2187759eddf748156a3ae6","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/0bc4acc2af7fad13bb2187759eddf748156a3ae6","html_url":"https://github.com/apache/openjpa/commit/0bc4acc2af7fad13bb2187759eddf748156a3ae6","comments_url":"https://api.github.com/repos/apache/openjpa/commits/0bc4acc2af7fad13bb2187759eddf748156a3ae6/comments","author":null,"committer":null,"parents":[{"sha":"d490f545c48f2d63c88b176e47d30ad3e95df677","url":"https://api.github.com/repos/apache/openjpa/commits/d490f545c48f2d63c88b176e47d30ad3e95df677","html_url":"https://github.com/apache/openjpa/commit/d490f545c48f2d63c88b176e47d30ad3e95df677"}],"stats":{"total":20,"additions":15,"deletions":5},"files":[{"sha":"df07c261aa444dca62d6cb122954e245e93e9698","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/Bootstrap.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/0bc4acc2af7fad13bb2187759eddf748156a3ae6/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/Bootstrap.java","raw_url":"https://github.com/apache/openjpa/raw/0bc4acc2af7fad13bb2187759eddf748156a3ae6/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/Bootstrap.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/Bootstrap.java?ref=0bc4acc2af7fad13bb2187759eddf748156a3ae6","patch":"@@ -95,7 +95,7 @@ public static BrokerFactory getBrokerFactory(ConfigurationProvider conf,\n         }\n     }\n \n-    private static BrokerFactory invokeFactory (ConfigurationProvider conf,\n+    private static BrokerFactory invokeFactory(ConfigurationProvider conf,\n         ClassLoader loader, String methodName)\n         throws InvocationTargetException, NoSuchMethodException,\n             IllegalAccessException {"},{"sha":"a17eb37f5af884c7031e456ae264f050b7e2c984","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAPersistence.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/0bc4acc2af7fad13bb2187759eddf748156a3ae6/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAPersistence.java","raw_url":"https://github.com/apache/openjpa/raw/0bc4acc2af7fad13bb2187759eddf748156a3ae6/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAPersistence.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAPersistence.java?ref=0bc4acc2af7fad13bb2187759eddf748156a3ae6","patch":"@@ -165,7 +165,8 @@ public static OpenJPAEntityManagerFactory getEntityManagerFactory() {\n      * overrides.\n      */\n     public static OpenJPAEntityManagerFactory getEntityManagerFactory(Map map) {\n-        ConfigurationProvider cp = new MapConfigurationProvider(map);\n+        ConfigurationProvider cp = new PersistenceProductDerivation.\n+            ConfigurationProviderImpl(map);\n         try {\n             return toEntityManagerFactory(Bootstrap.getBrokerFactory(cp, null));\n         } catch (Exception e) {"},{"sha":"2feadfb62a573fb9c01848a4844c6160f7cc026d","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java","status":"modified","additions":12,"deletions":3,"changes":15,"blob_url":"https://github.com/apache/openjpa/blob/0bc4acc2af7fad13bb2187759eddf748156a3ae6/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java","raw_url":"https://github.com/apache/openjpa/raw/0bc4acc2af7fad13bb2187759eddf748156a3ae6/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java?ref=0bc4acc2af7fad13bb2187759eddf748156a3ae6","patch":"@@ -355,11 +355,18 @@ private static void log(String msg) {\n     /**\n      * Custom configuration provider.   \n      */\n-    private static class ConfigurationProviderImpl\n+    public static class ConfigurationProviderImpl\n         extends MapConfigurationProvider {\n \n         private String _source;\n \n+        public ConfigurationProviderImpl() {\n+        }\n+\n+        public ConfigurationProviderImpl(Map props) {\n+            super(props);\n+        }\n+\n         /**\n          * Set the source of information in this provider.\n          */\n@@ -374,8 +381,10 @@ public void setInto(Configuration conf) {\n             super.setInto(conf, null);\n \n             Log log = conf.getConfigurationLog();\n-            if (log.isTraceEnabled())\n-                log.trace(_loc.get(\"conf-load\", _source, getProperties()));\n+            if (log.isTraceEnabled()) {\n+                String src = (_source == null) ? \"?\" : _source;\n+                log.trace(_loc.get(\"conf-load\", src, getProperties()));\n+            }\n         }\n     }\n "}]}

