{"sha":"0d24829c8c2c1b7380587e67c21c87c83817afd7","node_id":"MDY6Q29tbWl0MjA2MzY0OjBkMjQ4MjljOGMyYzFiNzM4MDU4N2U2N2MyMWM4N2M4MzgxN2FmZDc=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-09-11T18:55:45Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-09-11T18:55:45Z"},"message":"Bring test for isManageable() outside of per-broker loop\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@813983 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0d0381509bb3919fbf3808a97604f44b9d03f026","url":"https://api.github.com/repos/apache/openjpa/git/trees/0d0381509bb3919fbf3808a97604f44b9d03f026"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/0d24829c8c2c1b7380587e67c21c87c83817afd7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/0d24829c8c2c1b7380587e67c21c87c83817afd7","html_url":"https://github.com/apache/openjpa/commit/0d24829c8c2c1b7380587e67c21c87c83817afd7","comments_url":"https://api.github.com/repos/apache/openjpa/commits/0d24829c8c2c1b7380587e67c21c87c83817afd7/comments","author":null,"committer":null,"parents":[{"sha":"dc5c7f487af26e5eaafba14db062a1450ea2408c","url":"https://api.github.com/repos/apache/openjpa/commits/dc5c7f487af26e5eaafba14db062a1450ea2408c","html_url":"https://github.com/apache/openjpa/commit/dc5c7f487af26e5eaafba14db062a1450ea2408c"}],"stats":{"total":30,"additions":13,"deletions":17},"files":[{"sha":"5cbfd5d2aaee30e99c0619f144a1dfb0f3bede3a","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAPersistenceUtil.java","status":"modified","additions":13,"deletions":17,"changes":30,"blob_url":"https://github.com/apache/openjpa/blob/0d24829c8c2c1b7380587e67c21c87c83817afd7/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAPersistenceUtil.java","raw_url":"https://github.com/apache/openjpa/raw/0d24829c8c2c1b7380587e67c21c87c83817afd7/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAPersistenceUtil.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAPersistenceUtil.java?ref=0d24829c8c2c1b7380587e67c21c87c83817afd7","patch":"@@ -61,7 +61,7 @@ public static Object getIdentifier(OpenJPAEntityManagerFactory emf,\n             PersistenceCapable pc = (PersistenceCapable)entity;\n             // Per contract, if not managed by the owning emf, return null.\n             if (emf != null) {\n-                if (!OpenJPAPersistenceUtil.isManagedBy(emf, pc)) {\n+                if (!isManagedBy(emf, pc)) {\n                     return null;\n                 }\n             }\n@@ -77,14 +77,13 @@ public static Object getIdentifier(OpenJPAEntityManagerFactory emf,\n \n     /**\n      * Determines whether the specified state manager is managed by a broker\n-     * within the persistence unit of this util instance.\n+     * within the persistence unit of this utility instance.\n      * @param sm StateManager\n      * @return true if this state manager is managed by a broker within\n      * this persistence unit.\n      */\n-    public static boolean isManagedBy(OpenJPAEntityManagerFactory emf, \n-        Object entity) {\n-        if (emf == null || !emf.isOpen()) {\n+    public static boolean isManagedBy(OpenJPAEntityManagerFactory emf, Object entity) {\n+        if (emf == null || !emf.isOpen() || !ImplHelper.isManageable(entity)) {\n             return false;\n         }\n         Object abfobj = JPAFacadeHelper.toBrokerFactory(emf);\n@@ -93,21 +92,19 @@ public static boolean isManagedBy(OpenJPAEntityManagerFactory emf,\n         }\n         if (abfobj instanceof AbstractBrokerFactory) {\n             AbstractBrokerFactory abf = (AbstractBrokerFactory)abfobj;\n-            Collection<?> brokers = abf.getOpenBrokers();\n+            Collection<Broker> brokers = abf.getOpenBrokers();\n             if (brokers == null || brokers.size() == 0) {\n                 return false;\n             }\n             // Cycle through all brokers managed by this factory.  \n-            Broker[] brokerArr = brokers.toArray(new Broker[brokers.size()]);\n-            for (Broker broker : brokerArr) {\n-                if (broker != null && !broker.isClosed())\n-                    if (ImplHelper.isManageable(entity)) {\n-                        PersistenceCapable pc = (PersistenceCapable)entity;\n-                        // Vfy this broker is managing the entity\n-                        if (pc.pcGetGenericContext() == broker) {\n-                            return true;\n-                        }\n+            for (Broker broker : brokers) {\n+                if (broker != null && !broker.isClosed()) {\n+                    PersistenceCapable pc = (PersistenceCapable)entity;\n+                    // Verify this broker is managing the entity\n+                    if (pc.pcGetGenericContext() == broker) {\n+                        return true;\n                     }\n+                }\n             }\n         }\n         return false;\n@@ -140,8 +137,7 @@ public static LoadState isLoaded(Object obj, String attr) {\n      *         entity manager factory, or if it does not contain the persistent\n      *         attribute.\n      */\n-    public static LoadState isLoaded(OpenJPAEntityManagerFactory emf, \n-        Object obj, String attr) {\n+    public static LoadState isLoaded(OpenJPAEntityManagerFactory emf, Object obj, String attr) {\n \n         if (obj == null) {\n             return LoadState.UNKNOWN;"}]}

