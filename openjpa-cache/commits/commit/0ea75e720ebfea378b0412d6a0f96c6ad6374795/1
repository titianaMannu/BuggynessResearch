{"sha":"0ea75e720ebfea378b0412d6a0f96c6ad6374795","node_id":"MDY6Q29tbWl0MjA2MzY0OjBlYTc1ZTcyMGViZmVhMzc4YjA0MTJkNmEwZjk2YzZhZDYzNzQ3OTU=","commit":{"author":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2008-09-06T03:47:40Z"},"committer":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2008-09-06T03:47:40Z"},"message":"OPENJPA-712 Not correctly parsing the \"having\" clause with aggregate functions (ie. max, min, etc)\nCommitting patch provided by Fay Wang\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@692609 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"269062f0a7c381971fd44faaba2b31d5a19b44d6","url":"https://api.github.com/repos/apache/openjpa/git/trees/269062f0a7c381971fd44faaba2b31d5a19b44d6"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/0ea75e720ebfea378b0412d6a0f96c6ad6374795","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/0ea75e720ebfea378b0412d6a0f96c6ad6374795","html_url":"https://github.com/apache/openjpa/commit/0ea75e720ebfea378b0412d6a0f96c6ad6374795","comments_url":"https://api.github.com/repos/apache/openjpa/commits/0ea75e720ebfea378b0412d6a0f96c6ad6374795/comments","author":null,"committer":null,"parents":[{"sha":"a60fab2d7eef3c7cad40ca7c598e1f90ec2c01ad","url":"https://api.github.com/repos/apache/openjpa/commits/a60fab2d7eef3c7cad40ca7c598e1f90ec2c01ad","html_url":"https://github.com/apache/openjpa/commit/a60fab2d7eef3c7cad40ca7c598e1f90ec2c01ad"}],"stats":{"total":59,"additions":57,"deletions":2},"files":[{"sha":"860983208da9e999198f93ddd0bd36080a21e761","filename":"openjpa-kernel/src/main/jjtree/org/apache/openjpa/kernel/jpql/JPQL.jjt","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/0ea75e720ebfea378b0412d6a0f96c6ad6374795/openjpa-kernel/src/main/jjtree/org/apache/openjpa/kernel/jpql/JPQL.jjt","raw_url":"https://github.com/apache/openjpa/raw/0ea75e720ebfea378b0412d6a0f96c6ad6374795/openjpa-kernel/src/main/jjtree/org/apache/openjpa/kernel/jpql/JPQL.jjt","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/jjtree/org/apache/openjpa/kernel/jpql/JPQL.jjt?ref=0ea75e720ebfea378b0412d6a0f96c6ad6374795","patch":"@@ -729,7 +729,7 @@ void like_expression() #LIKE : { }\n \n void null_comparison_expression() #ISNULL : { }\n {\n-\t(input_parameter() | path())\n+\t(input_parameter() | path() | aggregate_select_expression())\n \t<IS> [<NOT> { jjtThis.not = true; }] <NULL> \n }\n \n@@ -931,7 +931,7 @@ void datetime_expression() : { }\n \n void datetime_primary() : { }\n {\n-\tpath() | functions_returning_datetime() | input_parameter()\n+\tpath() | functions_returning_datetime() | input_parameter() | aggregate_select_expression()\n }\n \n "},{"sha":"0f56b2bf796824b3e163c278902b1aa2e919d7ff","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestMultipleEntityProjection.java","status":"modified","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/apache/openjpa/blob/0ea75e720ebfea378b0412d6a0f96c6ad6374795/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestMultipleEntityProjection.java","raw_url":"https://github.com/apache/openjpa/raw/0ea75e720ebfea378b0412d6a0f96c6ad6374795/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestMultipleEntityProjection.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestMultipleEntityProjection.java?ref=0ea75e720ebfea378b0412d6a0f96c6ad6374795","patch":"@@ -18,6 +18,11 @@\n  */\r\n package org.apache.openjpa.persistence.jdbc.query;\r\n \r\n+import java.sql.Timestamp;\r\n+import java.text.DateFormat;\r\n+import java.text.ParseException;\r\n+import java.text.SimpleDateFormat;\r\n+import java.util.Date;\r\n import java.util.List;\r\n \r\n import javax.persistence.EntityManager;\r\n@@ -72,6 +77,15 @@ void createData() {\n \t\t\t\tPublisher pub = new Publisher();\r\n \t\t\t\tpub.setName(pubName);\r\n \t\t\t\tmag.setPublisher(pub);\r\n+\t\t\t\ttry {\r\n+\t\t\t\t\tDateFormat df = new SimpleDateFormat (\"yyyy-MM-dd\");\r\n+\t\t\t\t\tDate date = df.parse(\"2001-01-01\");\r\n+\t\t\t\t\tmag.setDatePublished(date);\r\n+\t\t\t\t} catch (ParseException e) {\r\n+\t\t\t\t\tmag.setDatePublished(null);\r\n+\t\t\t\t}\r\n+\t\t\t\tmag.setTsPublished(new Timestamp(System.currentTimeMillis()));\r\n+\t\t\t\t\r\n \t\t\t\tem.persist(pub);\r\n \t\t\t}\r\n \t\t\tem.persist(mag);\r\n@@ -134,6 +148,24 @@ public void testMultipleEntitiesInProjectionUsingInnerJoin() {\n \t\t}\r\n \t}\r\n \t\r\n+\tpublic void testAggregateExpressionInHavingExpression() {\r\n+        String jpql = \"select m.publisher, max(m.datePublished) \" + \r\n+\t\t\t\t\t  \"from Magazine m group by m.publisher \" + \r\n+\t\t\t\t\t  \"having max(m.datePublished) is null\";\r\n+\t\t\r\n+\t\tEntityManager em = emf.createEntityManager();\r\n+\t\tQuery query = em.createQuery(jpql);\r\n+\t\tList result = query.getResultList();\r\n+\t\tassertTrue(result.isEmpty());\r\n+\t\t\r\n+        jpql = \"select m.publisher, max(m.datePublished) \" + \r\n+\t\t       \"from Magazine m group by m.publisher \" + \r\n+\t\t       \"having max(m.tsPublished) = CURRENT_TIMESTAMP\";\r\n+\t\tquery = em.createQuery(jpql);\r\n+\t\tresult = query.getResultList();\r\n+\t\tassertTrue(result.isEmpty());\r\n+\t}\r\n+\t\r\n \t/**\r\n \t * Count number of expected result based on inner/outer join condition and\r\n \t * the name of the Magazine.\r"},{"sha":"20b9fa54e53ecadac37b6b0483af6e8216f6ced5","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/domain/Magazine.java","status":"modified","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/apache/openjpa/blob/0ea75e720ebfea378b0412d6a0f96c6ad6374795/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/domain/Magazine.java","raw_url":"https://github.com/apache/openjpa/raw/0ea75e720ebfea378b0412d6a0f96c6ad6374795/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/domain/Magazine.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/domain/Magazine.java?ref=0ea75e720ebfea378b0412d6a0f96c6ad6374795","patch":"@@ -18,6 +18,9 @@\n  */\r\n package org.apache.openjpa.persistence.jdbc.query.domain;\r\n \r\n+import java.sql.Timestamp;\r\n+import java.util.Date;\r\n+\r\n import javax.persistence.*;\r\n \r\n /**\r\n@@ -38,6 +41,10 @@\n \t@OneToOne\r\n \tprivate Publisher publisher;\r\n \r\n+\tprivate Date datePublished;\r\n+\r\n+\tprivate Timestamp tsPublished;\r\n+\t\r\n \tpublic String getName() {\r\n \t\treturn name;\r\n \t}\r\n@@ -58,4 +65,20 @@ public void setPublisher(Publisher publisher) {\n \t\tthis.publisher = publisher;\r\n \t}\r\n \r\n+\tpublic Date getDatePublished() {\r\n+\t\treturn datePublished;\r\n+\t}\r\n+\r\n+\tpublic void setDatePublished(Date datePublished) {\r\n+\t\tthis.datePublished = datePublished;\r\n+\t}\r\n+\r\n+\tpublic Date getTsPublished() {\r\n+\t\treturn tsPublished;\r\n+\t}\r\n+\r\n+\tpublic void setTsPublished(Timestamp tsPublished) {\r\n+\t\tthis.tsPublished = tsPublished;\r\n+\t}\r\n+\t\r\n }\r"}]}

