{"sha":"0ffb985316140a49fb1e0c868e97f57d7f6c9ace","node_id":"MDY6Q29tbWl0MjA2MzY0OjBmZmI5ODUzMTYxNDBhNDlmYjFlMGM4NjhlOTdmNTdkN2Y2YzlhY2U=","commit":{"author":{"name":"Marc Prud'hommeaux","email":"mprudhom@apache.org","date":"2006-12-12T00:40:22Z"},"committer":{"name":"Marc Prud'hommeaux","email":"mprudhom@apache.org","date":"2006-12-12T00:40:22Z"},"message":"Allow the parameter to an IN(?) expression to be a Collection type, which allows variable-length IN parameters. The spec is a little vague about whether this should be allowed or not, but there's no reason not to support it.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@485967 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0978e0f08efa25c5dce31c5abb74c0f51a3942dc","url":"https://api.github.com/repos/apache/openjpa/git/trees/0978e0f08efa25c5dce31c5abb74c0f51a3942dc"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/0ffb985316140a49fb1e0c868e97f57d7f6c9ace","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/0ffb985316140a49fb1e0c868e97f57d7f6c9ace","html_url":"https://github.com/apache/openjpa/commit/0ffb985316140a49fb1e0c868e97f57d7f6c9ace","comments_url":"https://api.github.com/repos/apache/openjpa/commits/0ffb985316140a49fb1e0c868e97f57d7f6c9ace/comments","author":null,"committer":null,"parents":[{"sha":"6dff15b02f9dfad0424932d6940ec69ecf33b98c","url":"https://api.github.com/repos/apache/openjpa/commits/6dff15b02f9dfad0424932d6940ec69ecf33b98c","html_url":"https://github.com/apache/openjpa/commit/6dff15b02f9dfad0424932d6940ec69ecf33b98c"}],"stats":{"total":5,"additions":3,"deletions":2},"files":[{"sha":"619eb198b0de9db5c398c8ee9d41281d39978cae","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/jpql/JPQLExpressionBuilder.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/0ffb985316140a49fb1e0c868e97f57d7f6c9ace/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/jpql/JPQLExpressionBuilder.java","raw_url":"https://github.com/apache/openjpa/raw/0ffb985316140a49fb1e0c868e97f57d7f6c9ace/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/jpql/JPQLExpressionBuilder.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/jpql/JPQLExpressionBuilder.java?ref=0ffb985316140a49fb1e0c868e97f57d7f6c9ace","patch":"@@ -822,8 +822,9 @@ private Object eval(JPQLNode node) {\n                 while (inIterator.hasNext()) {\n                     val2 = getValue((JPQLNode) inIterator.next());\n \n-                    // special case for <value> IN (<subquery>)\n-                    if (val2 instanceof Subquery && node.getChildCount() == 2)\n+                    // special case for <value> IN (<subquery>) or\n+                    // <value> IN (<single value>)\n+                    if (!(val2 instanceof Literal) && node.getChildCount() == 2)\n                         return factory.contains(val2, val1); \n \n                     // this is currently a sequence of OR expressions, since we"}]}

