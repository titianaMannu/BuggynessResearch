{"sha":"11cd0d5fd417abc6fff78bc52b124968cebab4f3","node_id":"MDY6Q29tbWl0MjA2MzY0OjExY2QwZDVmZDQxN2FiYzZmZmY3OGJjNTJiMTI0OTY4Y2ViYWI0ZjM=","commit":{"author":{"name":"Heath Thomann","email":"hthomann@apache.org","date":"2012-05-30T23:09:15Z"},"committer":{"name":"Heath Thomann","email":"hthomann@apache.org","date":"2012-05-30T23:09:15Z"},"message":"OPENJPA-2118: Provide fix to avoid possible 'division by zero' error.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1344498 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"be62b4452535ad58c2f27e19d9b77b88027f49e9","url":"https://api.github.com/repos/apache/openjpa/git/trees/be62b4452535ad58c2f27e19d9b77b88027f49e9"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/11cd0d5fd417abc6fff78bc52b124968cebab4f3","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/11cd0d5fd417abc6fff78bc52b124968cebab4f3","html_url":"https://github.com/apache/openjpa/commit/11cd0d5fd417abc6fff78bc52b124968cebab4f3","comments_url":"https://api.github.com/repos/apache/openjpa/commits/11cd0d5fd417abc6fff78bc52b124968cebab4f3/comments","author":null,"committer":null,"parents":[{"sha":"8200a351a75b06297445ba8a9909efa8baeb5557","url":"https://api.github.com/repos/apache/openjpa/commits/8200a351a75b06297445ba8a9909efa8baeb5557","html_url":"https://github.com/apache/openjpa/commit/8200a351a75b06297445ba8a9909efa8baeb5557"}],"stats":{"total":33,"additions":32,"deletions":1},"files":[{"sha":"e94531ff70c78830a061a7613d7222f892f3b73a","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/PreparedQueryImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/11cd0d5fd417abc6fff78bc52b124968cebab4f3/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/PreparedQueryImpl.java","raw_url":"https://github.com/apache/openjpa/raw/11cd0d5fd417abc6fff78bc52b124968cebab4f3/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/PreparedQueryImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/PreparedQueryImpl.java?ref=11cd0d5fd417abc6fff78bc52b124968cebab4f3","patch":"@@ -393,7 +393,7 @@ private void setCollectionValuedParameter(Map<Integer,Object> result,\n         Collection values, Integer[] indices, Object param, Broker broker) {\n         int n = values.size();\n         Object[] array = values.toArray();\n-        if (n > indices.length || indices.length%n != 0) {\n+        if (n == 0 || n > indices.length || indices.length%n != 0) {\n             throw new UserException(_loc.get(\"uparam-coll-size\", param, values, \n                 Arrays.toString(indices)));\n         }"},{"sha":"dd0972eac9bbd2c99a39709d8f5d80dd4e5ec987","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/sqlcache/TestPreparedQueryCache.java","status":"modified","additions":31,"deletions":0,"changes":31,"blob_url":"https://github.com/apache/openjpa/blob/11cd0d5fd417abc6fff78bc52b124968cebab4f3/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/sqlcache/TestPreparedQueryCache.java","raw_url":"https://github.com/apache/openjpa/raw/11cd0d5fd417abc6fff78bc52b124968cebab4f3/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/sqlcache/TestPreparedQueryCache.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/sqlcache/TestPreparedQueryCache.java?ref=11cd0d5fd417abc6fff78bc52b124968cebab4f3","patch":"@@ -39,6 +39,7 @@\n import org.apache.openjpa.lib.jdbc.AbstractJDBCListener;\n import org.apache.openjpa.lib.jdbc.JDBCEvent;\n import org.apache.openjpa.lib.jdbc.JDBCListener;\n+import org.apache.openjpa.persistence.ArgumentException;\n import org.apache.openjpa.persistence.OpenJPAEntityManager;\n import org.apache.openjpa.persistence.OpenJPAEntityManagerFactorySPI;\n import org.apache.openjpa.persistence.OpenJPAEntityManagerSPI;\n@@ -316,6 +317,36 @@ public void testCollectionValuedParameterOfEntities() {\n         \n     }\n     \n+    public void testCollectionValuedParameterOfEntitiesWithEmptyList() {\n+        OpenJPAEntityManager em = emf.createEntityManager();\n+        String jpql1 =\n+            \"select d from Department d where d.name in ('Marketing', 'Sales') order by d.name\";\n+        List<Department> param1 =\n+            (List<Department>) em.createQuery(jpql1).getResultList();\n+        em.clear();\n+\n+        String jpql = \"select e from Employee e where e.department in :param\";\n+\n+        List<Employee> rs1 =\n+            em.createQuery(jpql).setParameter(\"param\", param1).getResultList();\n+\n+        for (int i = 0; i < rs1.size(); i++) {\n+            Employee e = (Employee) rs1.get(i);\n+            assertFalse(e.getDepartment().getName().equals(\"Engineering\"));\n+        }\n+\n+        // Prior to OPENJPA-2118, the following query would yeild a\n+        // 'ArithmeticException: divide\n+        // by zero' exception (see JIRA for details).\n+        try {\n+            // Pass an empty list to 'param'.\n+            em.createQuery(jpql).setParameter(\"param\",\n+                new ArrayList<Department>()).getResultList();\n+        } catch (ArgumentException ae) {\n+            assertEquals(ae.getCause().getMessage(),\n+                \"Input parameter \\\"param\\\" is empty.\");\n+        }\n+    }\n     \n     public void testRepeatedParameterInSubqueryInDifferentOrderSubQLast() {\n         OpenJPAEntityManager em = emf.createEntityManager();"}]}

