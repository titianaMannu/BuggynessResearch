{"sha":"11fba5a6123d00c60474673ecf55481f25b25ad5","node_id":"MDY6Q29tbWl0MjA2MzY0OjExZmJhNWE2MTIzZDAwYzYwNDc0NjczZWNmNTU0ODFmMjViMjVhZDU=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2008-02-14T22:17:12Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2008-02-14T22:17:12Z"},"message":"OPENJPA-515 Add documentation for targeted query via query hints\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@627889 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"5982d3942b4ec94d03389e8eddd2feb0cce7e234","url":"https://api.github.com/repos/apache/openjpa/git/trees/5982d3942b4ec94d03389e8eddd2feb0cce7e234"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/11fba5a6123d00c60474673ecf55481f25b25ad5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/11fba5a6123d00c60474673ecf55481f25b25ad5","html_url":"https://github.com/apache/openjpa/commit/11fba5a6123d00c60474673ecf55481f25b25ad5","comments_url":"https://api.github.com/repos/apache/openjpa/commits/11fba5a6123d00c60474673ecf55481f25b25ad5/comments","author":null,"committer":null,"parents":[{"sha":"8a811f69ea4908955a2c07699110e51135098700","url":"https://api.github.com/repos/apache/openjpa/commits/8a811f69ea4908955a2c07699110e51135098700","html_url":"https://github.com/apache/openjpa/commit/8a811f69ea4908955a2c07699110e51135098700"}],"stats":{"total":40,"additions":40,"deletions":0},"files":[{"sha":"e9b76f918490d4b150bcd3b57d5452724efff553","filename":"openjpa-project/src/doc/manual/ref_guide_slice.xml","status":"modified","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/apache/openjpa/blob/11fba5a6123d00c60474673ecf55481f25b25ad5/openjpa-project/src/doc/manual/ref_guide_slice.xml","raw_url":"https://github.com/apache/openjpa/raw/11fba5a6123d00c60474673ecf55481f25b25ad5/openjpa-project/src/doc/manual/ref_guide_slice.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_slice.xml?ref=11fba5a6123d00c60474673ecf55481f25b25ad5","patch":"@@ -87,6 +87,19 @@\n              update to any of these instances is committed to the appropriate \r\n              original database slice. \r\n             </para>\r\n+            \r\n+            <note>\r\n+            <para>\r\n+            You can find the original slice of an instance <code>pc</code> by \r\n+            the static utility method  \r\n+            <methodname>SlicePersistence.getSlice(pc)</methodname>.\r\n+            This method returns the slice identifier string associated with the\r\n+            given <emphasis>managed</emphasis> instance. If the instance is not\r\n+            being managed then the method return null because any unmanaged or\r\n+            detached instance is not associated with any slice. \r\n+            </para>\r\n+            </note>\r\n+            \r\n             <para>\r\n             <warning>Currently, there is no provision for migrating an \r\n             existing instance from one slice to another.\r\n@@ -129,8 +142,35 @@\n             The aggregate operation <code>AVG()</code> is not supported.\r\n             </warning>\r\n             </para>\r\n+            \r\n          </section>\r\n          \r\n+         <section><title>Targeted Query</title>\r\n+            <para>\r\n+            You can target the query only to a subset of slices rather than\r\n+            all slices by setting a <emphasis>hint</emphasis>. The hint key\r\n+            <code>openjpa.hint.slice.Target</code> is set on any query and \r\n+            hint value is\r\n+            comma-separated list of slice identifiers. The following \r\n+            example shows how to target a query only to slice <code>\"One\"</code>\r\n+                          \r\n+            <programlisting>\r\n+              <![CDATA[EntityManager em = ...;\r\n+              em.getTransaction().begin();\r\n+              String hint = \"openjpa.hint.slice.Target\";\r\n+              Query query = em.createQuery(\"SELECT p FROM PObject\").setHint(hint, \"One\");\r\n+              List result = query.getResultList();\r\n+              // verify that each instance is originaing from the given slice\r\n+              for (Object pc : result) {\r\n+                 String sliceOrigin = SlicePersistence.getSlice(pc);\r\n+                 assertTrue (\"One\", sliceOrigin);\r\n+              }\r\n+              ]]>\r\n+            </programlisting> \r\n+            </para>\r\n+         </section>\r\n+         \r\n+         \r\n          <section><title>Distributed Transaction</title>\r\n             <para> \r\n             The database slices participate in a global transaction provided\r"}]}

