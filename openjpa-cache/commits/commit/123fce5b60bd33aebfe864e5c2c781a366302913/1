{"sha":"123fce5b60bd33aebfe864e5c2c781a366302913","node_id":"MDY6Q29tbWl0MjA2MzY0OjEyM2ZjZTViNjBiZDMzYWViZmU4NjRlNWMyYzc4MWEzNjYzMDI5MTM=","commit":{"author":{"name":"A. Abram White","email":"awhite@apache.org","date":"2007-03-20T19:08:41Z"},"committer":{"name":"A. Abram White","email":"awhite@apache.org","date":"2007-03-20T19:08:41Z"},"message":"Tests for java.sql.Date id fields.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@520525 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"84f7b12576ab4016b84b999e8d6d4e42a0f684f8","url":"https://api.github.com/repos/apache/openjpa/git/trees/84f7b12576ab4016b84b999e8d6d4e42a0f684f8"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/123fce5b60bd33aebfe864e5c2c781a366302913","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/123fce5b60bd33aebfe864e5c2c781a366302913","html_url":"https://github.com/apache/openjpa/commit/123fce5b60bd33aebfe864e5c2c781a366302913","comments_url":"https://api.github.com/repos/apache/openjpa/commits/123fce5b60bd33aebfe864e5c2c781a366302913/comments","author":null,"committer":null,"parents":[{"sha":"eb27482080af614ff7e387b9659e72571f8ce029","url":"https://api.github.com/repos/apache/openjpa/commits/eb27482080af614ff7e387b9659e72571f8ce029","html_url":"https://github.com/apache/openjpa/commit/eb27482080af614ff7e387b9659e72571f8ce029"}],"stats":{"total":127,"additions":127,"deletions":0},"files":[{"sha":"a5a713f54270db3ff59f3272e942f4a7b01ea192","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/identity/SQLDateIdEntity.java","status":"added","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/apache/openjpa/blob/123fce5b60bd33aebfe864e5c2c781a366302913/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/identity/SQLDateIdEntity.java","raw_url":"https://github.com/apache/openjpa/raw/123fce5b60bd33aebfe864e5c2c781a366302913/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/identity/SQLDateIdEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/identity/SQLDateIdEntity.java?ref=123fce5b60bd33aebfe864e5c2c781a366302913","patch":"@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.identity;\n+\n+import java.sql.Date;\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+\n+@Entity\n+public class SQLDateIdEntity {\n+\n+    @Id\n+    private Date id;\n+    private int data;\n+\n+    public Date getId() {\n+        return id;\n+    }\n+\n+    public void setId(Date id) {\n+        this.id = id;\n+    }\n+\n+    public int getData() {\n+        return data;\n+    }\n+\n+    public void setData(int data) {\n+        this.data = data;\n+    }\n+}"},{"sha":"b92fa89c3e2974ddf2e19c810cee392211c500d2","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/identity/TestSQLDateId.java","status":"added","additions":83,"deletions":0,"changes":83,"blob_url":"https://github.com/apache/openjpa/blob/123fce5b60bd33aebfe864e5c2c781a366302913/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/identity/TestSQLDateId.java","raw_url":"https://github.com/apache/openjpa/raw/123fce5b60bd33aebfe864e5c2c781a366302913/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/identity/TestSQLDateId.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/identity/TestSQLDateId.java?ref=123fce5b60bd33aebfe864e5c2c781a366302913","patch":"@@ -0,0 +1,83 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.identity;\n+\n+import java.sql.Date;\n+import java.util.HashMap;\n+import java.util.Map;\n+import javax.persistence.EntityManager;\n+import javax.persistence.EntityManagerFactory;\n+import javax.persistence.Persistence;\n+\n+import junit.framework.TestCase;\n+import junit.textui.TestRunner;\n+\n+/**\n+ * Test that entities can use SQL dates as identity values.\n+ *\n+ * @author Abe White\n+ */\n+public class TestSQLDateId\n+    extends TestCase {\n+\n+    private EntityManagerFactory emf;\n+\n+    public void setUp() {\n+        String types = SQLDateIdEntity.class.getName();\n+        Map props = new HashMap(System.getProperties());\n+        props.put(\"openjpa.MetaDataFactory\", \"jpa(Types=\" + types + \")\");\n+        emf = Persistence.createEntityManagerFactory(\"test\", props);\n+    }\n+\n+    public void tearDown() {\n+        if (emf == null)\n+            return;\n+        try {\n+            EntityManager em = emf.createEntityManager();\n+            em.getTransaction().begin();\n+            em.createQuery(\"delete from SQLDateIdEntity\").executeUpdate();\n+            em.getTransaction().commit();\n+            em.close();\n+            emf.close();\n+        } catch (Exception e) {\n+        }\n+    }\n+\n+    public void testPersist() {\n+        long time = ((long) (System.currentTimeMillis() / 1000)) * 1000;\n+\n+        SQLDateIdEntity e = new SQLDateIdEntity();\n+        e.setId(new Date(time));\n+        e.setData(1);\n+\n+        EntityManager em = emf.createEntityManager();\n+        em.getTransaction().begin();\n+        em.persist(e);\n+        em.getTransaction().commit();\n+        assertEquals(time, e.getId().getTime());\n+        em.close();\n+\n+        em = emf.createEntityManager();\n+        e = em.find(SQLDateIdEntity.class, new Date(time));\n+        assertEquals(1, e.getData());\n+        em.close();\n+    }\n+\n+    public static void main(String[] args) {\n+        TestRunner.run(SQLDateIdEntity.class);\n+    }\n+}\n+"}]}

