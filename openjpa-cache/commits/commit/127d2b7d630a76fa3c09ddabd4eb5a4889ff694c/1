{"sha":"127d2b7d630a76fa3c09ddabd4eb5a4889ff694c","node_id":"MDY6Q29tbWl0MjA2MzY0OjEyN2QyYjdkNjMwYTc2ZmEzYzA5ZGRhYmQ0ZWI1YTQ4ODlmZjY5NGM=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-04-07T14:14:48Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-04-07T14:14:48Z"},"message":"OPENJPA-1614 Testcase failures in TextException on MSSQL due to missing <object-exists> value in sql-error-state-codes.xml\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@931562 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"b9487437463bbdaecc9a5edff89034b030674baf","url":"https://api.github.com/repos/apache/openjpa/git/trees/b9487437463bbdaecc9a5edff89034b030674baf"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/127d2b7d630a76fa3c09ddabd4eb5a4889ff694c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/127d2b7d630a76fa3c09ddabd4eb5a4889ff694c","html_url":"https://github.com/apache/openjpa/commit/127d2b7d630a76fa3c09ddabd4eb5a4889ff694c","comments_url":"https://api.github.com/repos/apache/openjpa/commits/127d2b7d630a76fa3c09ddabd4eb5a4889ff694c/comments","author":null,"committer":null,"parents":[{"sha":"dd2790cfc58414c663cb0781f17e10a2e939286e","url":"https://api.github.com/repos/apache/openjpa/commits/dd2790cfc58414c663cb0781f17e10a2e939286e","html_url":"https://github.com/apache/openjpa/commit/dd2790cfc58414c663cb0781f17e10a2e939286e"}],"stats":{"total":17,"additions":13,"deletions":4},"files":[{"sha":"598802bae0a2931951124f851b50283fb521a512","filename":"openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/sql-error-state-codes.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/127d2b7d630a76fa3c09ddabd4eb5a4889ff694c/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/sql-error-state-codes.xml","raw_url":"https://github.com/apache/openjpa/raw/127d2b7d630a76fa3c09ddabd4eb5a4889ff694c/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/sql-error-state-codes.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/sql-error-state-codes.xml?ref=127d2b7d630a76fa3c09ddabd4eb5a4889ff694c","patch":"@@ -49,7 +49,7 @@\n \t<dictionary class=\"org.apache.openjpa.jdbc.sql.SQLServerDictionary\">\n \t\t<lock>1204,1205,1222</lock>\n \t\t<referential-integrity>544,2601,2627,8114,8115</referential-integrity>\n-\t\t<object-exists></object-exists>\n+\t\t<object-exists>23000</object-exists>\n \t\t<object-not-found></object-not-found>\n \t\t<optimistic>1205</optimistic>\n \t\t<query>HY008</query>"},{"sha":"e61d02db272c3d7be680c672014c9d333b9d9b3b","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/exception/TestException.java","status":"modified","additions":12,"deletions":3,"changes":15,"blob_url":"https://github.com/apache/openjpa/blob/127d2b7d630a76fa3c09ddabd4eb5a4889ff694c/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/exception/TestException.java","raw_url":"https://github.com/apache/openjpa/raw/127d2b7d630a76fa3c09ddabd4eb5a4889ff694c/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/exception/TestException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/exception/TestException.java?ref=127d2b7d630a76fa3c09ddabd4eb5a4889ff694c","patch":"@@ -202,9 +202,15 @@ public void testIllegalArgumennExceptionOnInvalidNamedQuery() {\n \t */\n \tpublic void assertException(Throwable t, Class expectedType) {\n \t\tif (!isExpectedException(t, expectedType)) {\n-\t\t\tt.printStackTrace();\n+\t\t    getLog().error(\"TestException.assertException() - unexpected exception type\", t);\n+\t\t\t//t.printStackTrace();\n \t\t\tprint(t, 0);\n             fail(t + \" or its cause is not instanceof \" + expectedType);\n+\t\t} else {\n+\t\t    if (getLog().isTraceEnabled()) {\n+\t            getLog().trace(\"TestException.assertException() - caught expected exception type=\" +\n+\t                expectedType, t);\n+\t\t    }\n \t\t}\n \t}\n \t\n@@ -222,11 +228,14 @@ boolean isExpectedException(Throwable t, Class expectedType) {\n \t\n \tvoid print(Throwable t, int tab) {\n \t\tif (t == null) return;\n-\t\tfor (int i=0; i<tab*4;i++) System.out.print(\" \");\n+\t\tStringBuilder str = new StringBuilder(80);\n+\t\tfor (int i=0; i<tab*4;i++)\n+\t\t    str.append(\" \");\n \t\tString sqlState = (t instanceof SQLException) ? \n \t\t\t\"(SQLState=\" + ((SQLException)t).getSQLState() + \":\" \n \t\t\t\t+ t.getMessage() + \")\" : \"\";\n-\t\tSystem.out.println(t.getClass().getName() + sqlState);\n+\t\tstr.append(t.getClass().getName() + sqlState);\n+\t\tgetLog().error(str);\n \t\tif (t.getCause() == t) \n \t\t\treturn;\n \t\tprint(t.getCause(), tab+1);"}]}

