{"sha":"12840cafbf0b0ebe84c5d8fb76b38b4b1e543fce","node_id":"MDY6Q29tbWl0MjA2MzY0OjEyODQwY2FmYmYwYjBlYmU4NGM1ZDhmYjc2YjM4YjRiMWU1NDNmY2U=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2007-09-24T16:14:12Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2007-09-24T16:14:12Z"},"message":"OPENJPA-382\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@578867 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"074244529ccbccf19e804f6bf99c69d2f7a295bd","url":"https://api.github.com/repos/apache/openjpa/git/trees/074244529ccbccf19e804f6bf99c69d2f7a295bd"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/12840cafbf0b0ebe84c5d8fb76b38b4b1e543fce","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/12840cafbf0b0ebe84c5d8fb76b38b4b1e543fce","html_url":"https://github.com/apache/openjpa/commit/12840cafbf0b0ebe84c5d8fb76b38b4b1e543fce","comments_url":"https://api.github.com/repos/apache/openjpa/commits/12840cafbf0b0ebe84c5d8fb76b38b4b1e543fce/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"89b030c3d17855b38301bc84934d82bcc32b0ad1","url":"https://api.github.com/repos/apache/openjpa/commits/89b030c3d17855b38301bc84934d82bcc32b0ad1","html_url":"https://github.com/apache/openjpa/commit/89b030c3d17855b38301bc84934d82bcc32b0ad1"}],"stats":{"total":58,"additions":49,"deletions":9},"files":[{"sha":"c483d2834d3957c5c9d83bb42673233482462aef","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XMLPersistenceMappingParser.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/12840cafbf0b0ebe84c5d8fb76b38b4b1e543fce/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XMLPersistenceMappingParser.java","raw_url":"https://github.com/apache/openjpa/raw/12840cafbf0b0ebe84c5d8fb76b38b4b1e543fce/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XMLPersistenceMappingParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/XMLPersistenceMappingParser.java?ref=12840cafbf0b0ebe84c5d8fb76b38b4b1e543fce","patch":"@@ -541,9 +541,9 @@ protected void endFieldMapping(FieldMetaData field)\n         if (_cols != null) {\n             switch (fm.getDeclaredTypeCode()) {\n                 case JavaTypes.ARRAY:\n-                    if (fm.getDeclaredType() == byte[].class\n-                        || fm.getDeclaredType() == char[].class\n-                        || fm.getDeclaredType() == Character[].class) {\n+                    Class type = fm.getDeclaredType();\n+                    if (type == byte[].class || type == Byte[].class\n+                        || type == char[].class || type == Character[].class ) {\n                         fm.getValueInfo().setColumns(_cols);\n                         break;\n                     }"},{"sha":"42a6e975a2dcaa6b2613c36e24735e979c9a9615","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/discriminator/TestDiscriminatorTypes.java","status":"modified","additions":0,"deletions":6,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/12840cafbf0b0ebe84c5d8fb76b38b4b1e543fce/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/discriminator/TestDiscriminatorTypes.java","raw_url":"https://github.com/apache/openjpa/raw/12840cafbf0b0ebe84c5d8fb76b38b4b1e543fce/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/discriminator/TestDiscriminatorTypes.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/discriminator/TestDiscriminatorTypes.java?ref=12840cafbf0b0ebe84c5d8fb76b38b4b1e543fce","patch":"@@ -144,10 +144,4 @@ public void testStringDiscriminators() {\n         assertNotNull(root2);\n         em.close();\n     }\n-\n-    private ClassMapping getMapping(String name) {\n-        return (ClassMapping) emf.getConfiguration()\n-                .getMetaDataRepositoryInstance().getMetaData(name,\n-                        getClass().getClassLoader(), true);\n-    }\n }"},{"sha":"c27c7f511f9df9a665978567a6e407fbe7d9d02c","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/test/SingleEMFTestCase.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/12840cafbf0b0ebe84c5d8fb76b38b4b1e543fce/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/test/SingleEMFTestCase.java","raw_url":"https://github.com/apache/openjpa/raw/12840cafbf0b0ebe84c5d8fb76b38b4b1e543fce/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/test/SingleEMFTestCase.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/test/SingleEMFTestCase.java?ref=12840cafbf0b0ebe84c5d8fb76b38b4b1e543fce","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.openjpa.persistence.test;\n \n+import org.apache.openjpa.jdbc.meta.ClassMapping;\n import org.apache.openjpa.persistence.OpenJPAEntityManagerFactorySPI;\n \n public abstract class SingleEMFTestCase\n@@ -61,4 +62,10 @@ public void tearDown() throws Exception {\n             closeEMF(emf);\n         }\n     }\n+    \n+    protected ClassMapping getMapping(String name) {\n+        return (ClassMapping) emf.getConfiguration()\n+                .getMetaDataRepositoryInstance().getMetaData(name,\n+                        getClass().getClassLoader(), true);\n+    }\n }"},{"sha":"b49191214005ff67fb10249bcb2fe6f31692c089","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/TestXmlOverrideEntity.java","status":"modified","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/apache/openjpa/blob/12840cafbf0b0ebe84c5d8fb76b38b4b1e543fce/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/TestXmlOverrideEntity.java","raw_url":"https://github.com/apache/openjpa/raw/12840cafbf0b0ebe84c5d8fb76b38b4b1e543fce/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/TestXmlOverrideEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/TestXmlOverrideEntity.java?ref=12840cafbf0b0ebe84c5d8fb76b38b4b1e543fce","patch":"@@ -20,6 +20,9 @@\n \n import javax.persistence.EntityManager;\n \n+import org.apache.openjpa.jdbc.meta.ClassMapping;\n+import org.apache.openjpa.jdbc.meta.FieldMapping;\n+import org.apache.openjpa.jdbc.schema.Column;\n import org.apache.openjpa.persistence.InvalidStateException;\n import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n \n@@ -62,6 +65,24 @@ public void testOptionalAttributeOverride() {\n         em.getTransaction().begin();\n         em.remove(em.find(XmlOverrideEntity.class, optional.getId()));\n         em.getTransaction().commit();\n+        \n+        em.close();\n+    }\n+    \n+    \n+    public void testColumnOverride() { \n+        EntityManager em = emf.createEntityManager();\n+\n+        ClassMapping mapping = getMapping(\"XmlOverride\");\n+        \n+        FieldMapping fm = mapping.getFieldMapping(\"picture\");\n+        \n+        Column[] columns = fm.getColumns();\n+        \n+        assertEquals(1, columns.length);\n+        assertEquals(\"pic_xml\", columns[0].getName());\n+        \n+        em.close();\n     }\n }\n "},{"sha":"5853e9a2e91ec654c3639667c0f80945babeba65","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/XmlOverrideEntity.java","status":"modified","additions":14,"deletions":0,"changes":14,"blob_url":"https://github.com/apache/openjpa/blob/12840cafbf0b0ebe84c5d8fb76b38b4b1e543fce/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/XmlOverrideEntity.java","raw_url":"https://github.com/apache/openjpa/raw/12840cafbf0b0ebe84c5d8fb76b38b4b1e543fce/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/XmlOverrideEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/XmlOverrideEntity.java?ref=12840cafbf0b0ebe84c5d8fb76b38b4b1e543fce","patch":"@@ -19,9 +19,11 @@\n package org.apache.openjpa.persistence.xml;\n \n import javax.persistence.Basic;\n+import javax.persistence.Column;\n import javax.persistence.Entity;\n import javax.persistence.GeneratedValue;\n import javax.persistence.Id;\n+import javax.persistence.Lob;\n \n @Entity\n public class XmlOverrideEntity {\n@@ -35,6 +37,10 @@\n     \n     @Basic(optional=true)\n     String description;\n+    \n+    @Column(name=\"PICTURE\")\n+    @Lob\n+    private Byte[] picture;\n \n     public int getId() {\n         return id;\n@@ -58,6 +64,14 @@ public String getDescription() {\n \n     public void setDescription(String description) {\n         this.description = description;\n+    }\n+\n+    public Byte[] getPicture() {\n+        return picture;\n+    }\n+\n+    public void setPicture(Byte[] picture) {\n+        this.picture = picture;\n     } \n }\n "},{"sha":"76dc3321308c4b41f9d80b0dabd3f410479b440b","filename":"openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/xml/orm.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/12840cafbf0b0ebe84c5d8fb76b38b4b1e543fce/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/xml/orm.xml","raw_url":"https://github.com/apache/openjpa/raw/12840cafbf0b0ebe84c5d8fb76b38b4b1e543fce/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/xml/orm.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/xml/orm.xml?ref=12840cafbf0b0ebe84c5d8fb76b38b4b1e543fce","patch":"@@ -43,6 +43,10 @@\n     \t<attributes>\n \t    \t<basic name=\"name\" optional=\"true\"></basic>\n \t    \t<basic name=\"description\" optional=\"false\"></basic>\n+            <basic name=\"picture\" fetch=\"EAGER\"> \n+                <column name=\"pic_xml\"/>\n+                <lob/>\n+            </basic>\n     \t</attributes>\n     </entity>\n     <entity name=\"AllFieldTypes\" "}]}

