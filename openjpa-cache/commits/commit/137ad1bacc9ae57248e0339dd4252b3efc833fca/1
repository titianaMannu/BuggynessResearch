{"sha":"137ad1bacc9ae57248e0339dd4252b3efc833fca","node_id":"MDY6Q29tbWl0MjA2MzY0OjEzN2FkMWJhY2M5YWU1NzI0OGUwMzM5ZGQ0MjUyYjNlZmM4MzNmY2E=","commit":{"author":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-03-10T15:47:00Z"},"committer":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-03-10T15:47:00Z"},"message":"OPENJPA-1559: Make DataCacheManager initialization thread safe.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@921410 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"d6213dad0c8dca0cb4d18bc529f8117860736de8","url":"https://api.github.com/repos/apache/openjpa/git/trees/d6213dad0c8dca0cb4d18bc529f8117860736de8"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/137ad1bacc9ae57248e0339dd4252b3efc833fca","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/137ad1bacc9ae57248e0339dd4252b3efc833fca","html_url":"https://github.com/apache/openjpa/commit/137ad1bacc9ae57248e0339dd4252b3efc833fca","comments_url":"https://api.github.com/repos/apache/openjpa/commits/137ad1bacc9ae57248e0339dd4252b3efc833fca/comments","author":null,"committer":null,"parents":[{"sha":"f82184314ec6a914ce5ca9c3b8fbfa9cab31e276","url":"https://api.github.com/repos/apache/openjpa/commits/f82184314ec6a914ce5ca9c3b8fbfa9cab31e276","html_url":"https://github.com/apache/openjpa/commit/f82184314ec6a914ce5ca9c3b8fbfa9cab31e276"}],"stats":{"total":61,"additions":53,"deletions":8},"files":[{"sha":"2387fbbf2631d05d0385d8bd55a4c3cb43f88420","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfigurationImpl.java","status":"modified","additions":16,"deletions":5,"changes":21,"blob_url":"https://github.com/apache/openjpa/blob/137ad1bacc9ae57248e0339dd4252b3efc833fca/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfigurationImpl.java","raw_url":"https://github.com/apache/openjpa/raw/137ad1bacc9ae57248e0339dd4252b3efc833fca/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfigurationImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfigurationImpl.java?ref=137ad1bacc9ae57248e0339dd4252b3efc833fca","patch":"@@ -679,13 +679,24 @@ public void setDataCacheManager(DataCacheManager dcm) {\n         dataCacheManagerPlugin.set(dcm);\n     }\n \n+    // This boolean is used for double checked locking. We want to minimize the amount of time that\n+    // we're locking here.\n+    private boolean dataCacheManagerInitialized = false;\n     public DataCacheManager getDataCacheManagerInstance() {\n-        DataCacheManager dcm = (DataCacheManager) dataCacheManagerPlugin.get();\n-        if (dcm == null) {\n-            dcm =  (DataCacheManager) dataCacheManagerPlugin.instantiate(DataCacheManager.class, this);\n-            dcm.initialize(this, dataCachePlugin, queryCachePlugin);\n+        if (dataCacheManagerInitialized == false) {\n+            synchronized (this) {\n+                if (dataCacheManagerInitialized == false) {\n+                    DataCacheManager dcm = (DataCacheManager) dataCacheManagerPlugin.get();\n+                    if (dcm == null) {\n+                        dcm = (DataCacheManager) dataCacheManagerPlugin.instantiate(DataCacheManager.class, this);\n+                        dcm.initialize(this, dataCachePlugin, queryCachePlugin);\n+                    }\n+                    dataCacheManagerInitialized = true;\n+                    return dcm;\n+                }\n+            }\n         }\n-        return dcm;\n+        return (DataCacheManager) dataCacheManagerPlugin.get();\n     }\n \n     public void setDataCache(String dataCache) {"},{"sha":"eb540f3f85592c380558505c38bac5a873c1cf8d","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestDataCacheScheduler.java","status":"modified","additions":37,"deletions":3,"changes":40,"blob_url":"https://github.com/apache/openjpa/blob/137ad1bacc9ae57248e0339dd4252b3efc833fca/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestDataCacheScheduler.java","raw_url":"https://github.com/apache/openjpa/raw/137ad1bacc9ae57248e0339dd4252b3efc833fca/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestDataCacheScheduler.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestDataCacheScheduler.java?ref=137ad1bacc9ae57248e0339dd4252b3efc833fca","patch":"@@ -18,17 +18,20 @@\n  */\n package org.apache.openjpa.persistence.datacache;\n \n+import java.util.ArrayList;\n import java.util.Calendar;\n import java.util.Date;\n+import java.util.List;\n \n import org.apache.openjpa.conf.OpenJPAConfiguration;\n import org.apache.openjpa.datacache.ConcurrentDataCache;\n+import org.apache.openjpa.datacache.DataCacheManager;\n import org.apache.openjpa.datacache.DataCacheScheduler;\n import org.apache.openjpa.persistence.OpenJPAEntityManagerSPI;\n import org.apache.openjpa.persistence.datacache.common.apps.ScheduledEviction;\n-import org.apache.openjpa.persistence.test.SingleEMTestCase;\n+import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n \n-public class TestDataCacheScheduler extends SingleEMTestCase {\n+public class TestDataCacheScheduler extends SingleEMFTestCase {\n \n     private static String getMinutesString() {\n         StringBuffer buf = new StringBuffer();\n@@ -40,11 +43,16 @@ private static String getMinutesString() {\n     }\n \n     public void setUp() {\n-        setUp(ScheduledEviction.class, CLEAR_TABLES\n+        setUp(\n+            \"openjpa.DataCache\", \"true(EvictionSchedule=+1)\"\n+            , \"openjpa.QueryCache\", \"true\"\n+            ,\"openjpa.RemoteCommitProvider\", \"sjvm\"\n+            ,ScheduledEviction.class, CLEAR_TABLES\n             );\n     }\n \n     public void testBasic() throws Exception {\n+        OpenJPAEntityManagerSPI em = emf.createEntityManager();\n         OpenJPAConfiguration conf = ((OpenJPAEntityManagerSPI) em).getConfiguration();\n         DataCacheScheduler scheduler = new DataCacheScheduler(conf);\n         // Make the scheduler run every 1 minute\n@@ -81,6 +89,32 @@ public void testBasic() throws Exception {\n         assertEquals(3,cache1.getClearCount());\n         assertEquals(2,cache2.getClearCount());\n     }\n+    \n+    public void testMultithreadedInitialization() throws Exception {\n+        final OpenJPAConfiguration conf =  emf.getConfiguration();\n+        final List<DataCacheManager> dcms = new ArrayList<DataCacheManager>();\n+        Runnable r = new Runnable(){\n+            public void run() {\n+                dcms.add(conf.getDataCacheManagerInstance());\n+            }\n+        };\n+        List<Thread> workers = new ArrayList<Thread>();\n+        for(int i = 0;i<20;i++){\n+            workers.add(new Thread(r));\n+        }\n+        for(Thread t : workers){\n+            t.start();\n+        }\n+        for(Thread t : workers){\n+            t.join();\n+        }\n+        DataCacheManager prev = dcms.get(0);\n+        for(DataCacheManager dcm : dcms){\n+            assertTrue(prev == dcm);\n+            prev = dcm;\n+        }\n+\n+    }\n \n     /**\n      * Pass in 4 out of 5 tokens."}]}

