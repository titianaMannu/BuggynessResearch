{"sha":"148d8f8df2969cc4a57347f3128c682f2491c1b4","node_id":"MDY6Q29tbWl0MjA2MzY0OjE0OGQ4ZjhkZjI5NjljYzRhNTczNDdmMzEyOGM2ODJmMjQ5MWMxYjQ=","commit":{"author":{"name":"Marc Prud'hommeaux","email":"mprudhom@apache.org","date":"2006-12-13T00:26:47Z"},"committer":{"name":"Marc Prud'hommeaux","email":"mprudhom@apache.org","date":"2006-12-13T00:26:47Z"},"message":"Wrap non-Collection arguments in Collections so that the query language can support having both varargs \"in\" clauses as well as clauses that take a Collection parameter.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@486429 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"e06c23e0f7fbaaa519163cec66812b837a0e8609","url":"https://api.github.com/repos/apache/openjpa/git/trees/e06c23e0f7fbaaa519163cec66812b837a0e8609"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/148d8f8df2969cc4a57347f3128c682f2491c1b4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/148d8f8df2969cc4a57347f3128c682f2491c1b4","html_url":"https://github.com/apache/openjpa/commit/148d8f8df2969cc4a57347f3128c682f2491c1b4","comments_url":"https://api.github.com/repos/apache/openjpa/commits/148d8f8df2969cc4a57347f3128c682f2491c1b4/comments","author":null,"committer":null,"parents":[{"sha":"74589c8ae1859472b711ff924599e66cd9eb7da6","url":"https://api.github.com/repos/apache/openjpa/commits/74589c8ae1859472b711ff924599e66cd9eb7da6","html_url":"https://github.com/apache/openjpa/commit/74589c8ae1859472b711ff924599e66cd9eb7da6"}],"stats":{"total":10,"additions":9,"deletions":1},"files":[{"sha":"b752071d4a0aa5c6477f32b1535d03175a701f7d","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/InExpression.java","status":"modified","additions":9,"deletions":1,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/148d8f8df2969cc4a57347f3128c682f2491c1b4/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/InExpression.java","raw_url":"https://github.com/apache/openjpa/raw/148d8f8df2969cc4a57347f3128c682f2491c1b4/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/InExpression.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/InExpression.java?ref=148d8f8df2969cc4a57347f3128c682f2491c1b4","patch":"@@ -17,6 +17,7 @@\n \n import java.util.ArrayList;\n import java.util.Collection;\n+import java.util.Collections;\n import java.util.Iterator;\n import java.util.Map;\n \n@@ -178,7 +179,14 @@ public void selectColumns(Select sel, ExpContext ctx, ExpState state,\n      * Return the collection to test for containment with.\n      */\n     protected Collection getCollection(ExpContext ctx, ExpState state) {\n-        return (Collection) _const.getValue(ctx, state);\n+        Object val = _const.getValue(ctx, state);\n+\n+        // wrap non-Collection parameters in a Collections so the query\n+        // lanuage can permit varargs \"in\" clauses\n+        if (!(val instanceof Collection))\n+            val = Collections.singleton(val);\n+\n+        return (Collection) val;\n     }\n \n     public void acceptVisit(ExpressionVisitor visitor) {"}]}

