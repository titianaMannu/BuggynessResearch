{"sha":"14a02417927de84ff33c127459d3c5375eedf093","node_id":"MDY6Q29tbWl0MjA2MzY0OjE0YTAyNDE3OTI3ZGU4NGZmMzNjMTI3NDU5ZDNjNTM3NWVlZGYwOTM=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-12-21T19:55:58Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-12-21T19:55:58Z"},"message":"OPENJPA-1440: Allow COUNT(*) syntax when DBDictionary.useWildCardForCount=true\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@892947 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"dc1bc5e7c9255e6641becbf486f01b1f1b0c5053","url":"https://api.github.com/repos/apache/openjpa/git/trees/dc1bc5e7c9255e6641becbf486f01b1f1b0c5053"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/14a02417927de84ff33c127459d3c5375eedf093","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/14a02417927de84ff33c127459d3c5375eedf093","html_url":"https://github.com/apache/openjpa/commit/14a02417927de84ff33c127459d3c5375eedf093","comments_url":"https://api.github.com/repos/apache/openjpa/commits/14a02417927de84ff33c127459d3c5375eedf093/comments","author":null,"committer":null,"parents":[{"sha":"d491a9cbed9beaf7f838e67e5ecd7aa8d10d58e5","url":"https://api.github.com/repos/apache/openjpa/commits/d491a9cbed9beaf7f838e67e5ecd7aa8d10d58e5","html_url":"https://github.com/apache/openjpa/commit/d491a9cbed9beaf7f838e67e5ecd7aa8d10d58e5"}],"stats":{"total":96,"additions":95,"deletions":1},"files":[{"sha":"aa0ce618e053c477d2add68f9554af1690776f77","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/14a02417927de84ff33c127459d3c5375eedf093/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/14a02417927de84ff33c127459d3c5375eedf093/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java?ref=14a02417927de84ff33c127459d3c5375eedf093","patch":"@@ -247,6 +247,7 @@\n     public boolean supportsSelectFromFinalTable = false;\n     public boolean supportsSimpleCaseExpression = true;\n     public boolean supportsGeneralCaseExpression = true;\n+    public boolean useWildCardForCount = false;\n     \n     /**\n      * Some Databases append whitespace after the schema name \n@@ -1883,7 +1884,7 @@ public SQLBuffer toSelectCount(Select sel) {\n             // if the select has no identifier cols, use COUNT(*)\n             List aliases = (!sel.isDistinct()) ? Collections.EMPTY_LIST\n                 : sel.getIdentifierAliases();\n-            if (aliases.isEmpty()) {\n+            if (useWildCardForCount || aliases.isEmpty()) {\n                 selectSQL.append(\"COUNT(*)\");\n                 return toSelect(selectSQL, null, from, where, null, null, null,\n                     false, false, 0, Long.MAX_VALUE);"},{"sha":"67bd272f403f36f40e1dc7b598f1428150bc93e9","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestWildCardCount.java","status":"added","additions":93,"deletions":0,"changes":93,"blob_url":"https://github.com/apache/openjpa/blob/14a02417927de84ff33c127459d3c5375eedf093/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestWildCardCount.java","raw_url":"https://github.com/apache/openjpa/raw/14a02417927de84ff33c127459d3c5375eedf093/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestWildCardCount.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestWildCardCount.java?ref=14a02417927de84ff33c127459d3c5375eedf093","patch":"@@ -0,0 +1,93 @@\n+/*\n+ * TestMathQueries.java\n+ *\n+ * Created on October 18, 2006, 1:06 PM\n+ *\n+ * To change this template, choose Tools | Template Manager\n+ * and open the template in the editor.\n+ */\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+\n+package org.apache.openjpa.persistence.query;\n+\n+import javax.persistence.EntityManager;\n+\n+import org.apache.openjpa.jdbc.conf.JDBCConfiguration;\n+import org.apache.openjpa.persistence.common.apps.RuntimeTest1;\n+import org.apache.openjpa.persistence.test.SQLListenerTestCase;\n+\n+/**\n+ * Tests usage of COUNT(*) in SQL query.\n+ * <br>\n+ * Further details available at <br>\n+ * <A HREF=\"https://issues.apache.org/jira/browse/OPENJPA-1440\">OPENJPA-1440</HREF>\n+ * \n+ * @author Pinaki Poddar\n+ *\n+ */\n+public class TestWildCardCount extends SQLListenerTestCase {\n+    private EntityManager em;\n+    public void setUp() throws Exception {\n+        super.setUp(RuntimeTest1.class, \"openjpa.jdbc.QuerySQLCache\", \"false\");\n+        em = emf.createEntityManager();\n+        sql.clear();\n+    }\n+    \n+    public void testWildCardForCountInSingleProjectTerm() {\n+        String jpql = \"select COUNT(p) from RuntimeTest1 p\";\n+        executeAndAssert(jpql);\n+    }\n+    \n+    public void testWildCardForCountInMultipleProjectTerms() {\n+        String jpql = \"select COUNT(p.intField),SUM(p.intField) from RuntimeTest1 p GROUP BY p.intField\";\n+        executeAndAssert(jpql);\n+    }\n+    \n+    public void testWildCardForCountInMultipleProjectTermsButCountIsNotFirstTerm() {\n+        String jpql = \"select SUM(p.intField),COUNT(p.intField) from RuntimeTest1 p GROUP BY p.intField\";\n+        executeAndAssert(jpql);\n+    }\n+    \n+    void executeAndAssert(String jpql) {\n+        executeAndAssert(true, jpql);\n+        executeAndAssert(false, jpql);\n+    }\n+    \n+    void executeAndAssert(boolean useWildCard, String jpql) {\n+        setWildCardForCount(useWildCard);\n+        sql.clear();\n+        em.createQuery(jpql).getResultList();\n+        assertEquals(1, sql.size());\n+        assertEquals(getWildCardForCount(), usesWildCardForCount(sql.get(0))); \n+    }\n+    \n+    boolean getWildCardForCount() {\n+        return ((JDBCConfiguration)emf.getConfiguration()).getDBDictionaryInstance().useWildCardForCount;\n+    }\n+    \n+    void setWildCardForCount(boolean flag) {\n+        ((JDBCConfiguration)emf.getConfiguration()).getDBDictionaryInstance().useWildCardForCount = flag;\n+    }\n+\n+    boolean usesWildCardForCount(String sql) {\n+        return sql.contains(\"COUNT(*)\");\n+    }\n+\n+}"}]}

