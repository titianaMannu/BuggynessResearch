{"sha":"1677b481b2783ee02aeba8c7175a0ae27d18fa92","node_id":"MDY6Q29tbWl0MjA2MzY0OjE2NzdiNDgxYjI3ODNlZTAyYWViYThjNzE3NWEwYWUyN2QxOGZhOTI=","commit":{"author":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-04-29T19:08:11Z"},"committer":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-04-29T19:08:11Z"},"message":"OPENJPA-1053: fix update by setting an embeddable which contains a cascade delete relation with another entity.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@769879 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"effc81781b3e406b44f602b7e71d45f6dade94a4","url":"https://api.github.com/repos/apache/openjpa/git/trees/effc81781b3e406b44f602b7e71d45f6dade94a4"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/1677b481b2783ee02aeba8c7175a0ae27d18fa92","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/1677b481b2783ee02aeba8c7175a0ae27d18fa92","html_url":"https://github.com/apache/openjpa/commit/1677b481b2783ee02aeba8c7175a0ae27d18fa92","comments_url":"https://api.github.com/repos/apache/openjpa/commits/1677b481b2783ee02aeba8c7175a0ae27d18fa92/comments","author":null,"committer":null,"parents":[{"sha":"14ae1c34cf1481607b2f321b625014fed59d6e29","url":"https://api.github.com/repos/apache/openjpa/commits/14ae1c34cf1481607b2f321b625014fed59d6e29","html_url":"https://github.com/apache/openjpa/commit/14ae1c34cf1481607b2f321b625014fed59d6e29"}],"stats":{"total":330,"additions":323,"deletions":7},"files":[{"sha":"8ef9289d255629c92015f5207eb68e6708ab9b82","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","status":"modified","additions":10,"deletions":4,"changes":14,"blob_url":"https://github.com/apache/openjpa/blob/1677b481b2783ee02aeba8c7175a0ae27d18fa92/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/1677b481b2783ee02aeba8c7175a0ae27d18fa92/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java?ref=1677b481b2783ee02aeba8c7175a0ae27d18fa92","patch":"@@ -2658,8 +2658,11 @@ void delete(Object obj, StateManagerImpl sm, OpCallbacks call) {\n \n         // ACT_CASCADE\n         if ((action & OpCallbacks.ACT_RUN) == 0) {\n-            if (sm != null)\n-                sm.cascadeDelete(call);\n+            if (sm != null) {\n+                if (!sm.isEmbedded() || !sm.getDereferencedEmbedDependent()) {\n+                    sm.cascadeDelete(call);\n+                }\n+            }\n             else\n                 cascadeTransient(OpCallbacks.OP_DELETE, obj, call, \"delete\");\n             return;\n@@ -2669,8 +2672,11 @@ void delete(Object obj, StateManagerImpl sm, OpCallbacks call) {\n         if (sm != null) {\n             if (sm.isDetached())\n                 throw newDetachedException(obj, \"delete\");\n-            if ((action & OpCallbacks.ACT_CASCADE) != 0)\n-                sm.cascadeDelete(call);\n+            if ((action & OpCallbacks.ACT_CASCADE) != 0) {\n+                if (!sm.isEmbedded() || !sm.getDereferencedEmbedDependent()) {\n+                    sm.cascadeDelete(call);\n+                }\n+            }\n             sm.delete();\n         } else if (assertPersistenceCapable(obj).pcIsDetached() == Boolean.TRUE)\n             throw newDetachedException(obj, \"delete\");"},{"sha":"f06880c4a51f0376a7799e5bdd64348eb148d08e","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SingleFieldManager.java","status":"modified","additions":9,"deletions":2,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/1677b481b2783ee02aeba8c7175a0ae27d18fa92/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SingleFieldManager.java","raw_url":"https://github.com/apache/openjpa/raw/1677b481b2783ee02aeba8c7175a0ae27d18fa92/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SingleFieldManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SingleFieldManager.java?ref=1677b481b2783ee02aeba8c7175a0ae27d18fa92","patch":"@@ -302,8 +302,11 @@ private void delete(boolean immediate, OpCallbacks call) {\n             // immediate cascade works on field value; dependent deref\n             // works on external value\n             if ((immediate || fmd.isEmbeddedPC())\n-                && fmd.getCascadeDelete() == ValueMetaData.CASCADE_IMMEDIATE)\n+                && fmd.getCascadeDelete() == ValueMetaData.CASCADE_IMMEDIATE) {\n+                if (fmd.isEmbeddedPC())\n+                    dereferenceEmbedDependent(_sm);\n                 delete(fmd, objval, call);\n+            }\n             else if (fmd.getCascadeDelete() == ValueMetaData.CASCADE_AUTO)\n                 dereferenceDependent(fmd.getExternalValue(objval, _broker));\n             return;\n@@ -413,7 +416,11 @@ void dereferenceDependent(Object obj) {\n         if (sm != null)\n             sm.setDereferencedDependent(true, true);\n     }\n-\n+    \n+    void dereferenceEmbedDependent(StateManagerImpl sm) {\n+    \tsm.setDereferencedEmbedDependent(true);\n+    }\n+    \n     /**\n      * Recursively invoke the broker to gather cascade-refresh objects in\n      * the current field into the given set. This method is only called"},{"sha":"10bc8090722f71f8773802da346e346de8c20304","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java","status":"modified","additions":13,"deletions":0,"changes":13,"blob_url":"https://github.com/apache/openjpa/blob/1677b481b2783ee02aeba8c7175a0ae27d18fa92/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/1677b481b2783ee02aeba8c7175a0ae27d18fa92/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java?ref=1677b481b2783ee02aeba8c7175a0ae27d18fa92","patch":"@@ -107,6 +107,7 @@\n     private static final int FLAG_VERSION_CHECK = 2 << 14;\n     private static final int FLAG_VERSION_UPDATE = 2 << 15;\n     private static final int FLAG_DETACHING = 2 << 16;\n+    private static final int FLAG_EMBED_DEREF = 2 << 17;\n \n     private static final Localizer _loc = Localizer.forPackage\n         (StateManagerImpl.class);\n@@ -1300,6 +1301,18 @@ void setDereferencedDependent(boolean deref, boolean notify) {\n                 _broker.addDereferencedDependent(this);\n         }\n     }\n+    \n+    void setDereferencedEmbedDependent(boolean deref) {\n+        if (!deref && (_flags & FLAG_EMBED_DEREF) > 0) {\n+            _flags &= ~FLAG_EMBED_DEREF;\n+        } else if (deref && (_flags & FLAG_EMBED_DEREF) == 0) {\n+            _flags |= FLAG_EMBED_DEREF;\n+        }\n+    }\n+    \n+    public boolean getDereferencedEmbedDependent() {\n+        return ((_flags |= FLAG_EMBED_DEREF) == 0 ? false : true);\n+    }\n \n     ///////////\n     // Locking"},{"sha":"c46449b6aaf23961be82f9a892b6865676e6438c","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/Embed_MappedToOneCascadeDelete.java","status":"added","additions":67,"deletions":0,"changes":67,"blob_url":"https://github.com/apache/openjpa/blob/1677b481b2783ee02aeba8c7175a0ae27d18fa92/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/Embed_MappedToOneCascadeDelete.java","raw_url":"https://github.com/apache/openjpa/raw/1677b481b2783ee02aeba8c7175a0ae27d18fa92/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/Embed_MappedToOneCascadeDelete.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/Embed_MappedToOneCascadeDelete.java?ref=1677b481b2783ee02aeba8c7175a0ae27d18fa92","patch":"@@ -0,0 +1,67 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.embed;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Embeddable;\n+import javax.persistence.FetchType;\n+import javax.persistence.OneToOne;\n+\n+@Embeddable \n+public class Embed_MappedToOneCascadeDelete {\n+    protected String name1;\n+    protected String name2;\n+    protected String name3;\n+    \n+    @OneToOne(mappedBy=\"entityA\", fetch = FetchType.EAGER, cascade = CascadeType.ALL)\n+    protected EntityB2 bm;\n+    \n+    \n+    public String getName1() {\n+        return name1;\n+    }\n+    \n+    public void setName1(String name1) {\n+        this.name1 = name1;\n+    }\n+    \n+    public String getName2() {\n+        return name2;\n+    }\n+    \n+    public void setName2(String name2) {\n+        this.name2 = name2;\n+    }\n+    \n+    public String getName3() {\n+        return name3;\n+    }\n+    \n+    public void setName3(String name3) {\n+        this.name3 = name3;\n+    }\n+    \n+    public void setMappedEntityB(EntityB2 bm) {\n+        this.bm = bm;\n+    }\n+    \n+    public EntityB2 getMappedEntityB() {\n+        return bm;\n+    }\n+}"},{"sha":"abc797d39f0720b0470ce48b3fcbd4da9d39a600","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/EntityA_Embed_MappedToOneCascadeDelete.java","status":"added","additions":77,"deletions":0,"changes":77,"blob_url":"https://github.com/apache/openjpa/blob/1677b481b2783ee02aeba8c7175a0ae27d18fa92/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/EntityA_Embed_MappedToOneCascadeDelete.java","raw_url":"https://github.com/apache/openjpa/raw/1677b481b2783ee02aeba8c7175a0ae27d18fa92/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/EntityA_Embed_MappedToOneCascadeDelete.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/EntityA_Embed_MappedToOneCascadeDelete.java?ref=1677b481b2783ee02aeba8c7175a0ae27d18fa92","patch":"@@ -0,0 +1,77 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.embed;\n+import java.io.Serializable;\n+\n+import javax.persistence.Basic;\n+import javax.persistence.Column;\n+import javax.persistence.Embedded;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.Id;\n+import javax.persistence.Table;\n+\n+@Entity\n+@Table(name=\"TB11A\")\n+public class EntityA_Embed_MappedToOneCascadeDelete implements Serializable {\n+    @Id\n+    Integer id;\n+\n+    @Column(length=30)\n+    String name;\n+    \n+    @Basic(fetch=FetchType.LAZY)\n+    int age;\n+\n+    @Embedded\n+    protected Embed_MappedToOneCascadeDelete embed;\n+    \n+    public int getAge() {\n+        return age;\n+    }\n+\n+    public void setAge(int age) {\n+        this.age = age;\n+    }\n+\n+    public Integer getId() {\n+        return id;\n+    }\n+\n+    public void setId(Integer id) {\n+        this.id = id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public Embed_MappedToOneCascadeDelete getEmbed() {\n+        return embed;\n+    }\n+    \n+    public void setEmbed(Embed_MappedToOneCascadeDelete embed) {\n+        this.embed = embed;\n+    }\n+}\n+"},{"sha":"bbd25855ca3d69ca1b24bfb28494310e43c87da8","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/EntityB2.java","status":"added","additions":65,"deletions":0,"changes":65,"blob_url":"https://github.com/apache/openjpa/blob/1677b481b2783ee02aeba8c7175a0ae27d18fa92/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/EntityB2.java","raw_url":"https://github.com/apache/openjpa/raw/1677b481b2783ee02aeba8c7175a0ae27d18fa92/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/EntityB2.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/EntityB2.java?ref=1677b481b2783ee02aeba8c7175a0ae27d18fa92","patch":"@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.embed;\n+import java.io.Serializable;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.Id;\n+import javax.persistence.OneToOne;\n+\n+@Entity\n+public class EntityB2 implements Serializable {\n+\n+    @Id\n+    int id;\n+\n+    @Column(length=30)\n+    String name;\n+    \n+    @OneToOne(fetch = FetchType.EAGER, cascade = CascadeType.ALL)\n+    EntityA_Embed_MappedToOneCascadeDelete entityA;\n+\n+    public int getId() {\n+        return id;\n+    }\n+\n+    public void setId(int id) {\n+        this.id = id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public EntityA_Embed_MappedToOneCascadeDelete getEntityA() {\n+        return entityA;\n+    }\n+\n+    public void setEntityA(EntityA_Embed_MappedToOneCascadeDelete entityA) {\n+        this.entityA = entityA;\n+    }\n+}\n+"},{"sha":"cea88a438a966d4b8beeba7f523edf2fbb98890a","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java","status":"modified","additions":82,"deletions":1,"changes":83,"blob_url":"https://github.com/apache/openjpa/blob/1677b481b2783ee02aeba8c7175a0ae27d18fa92/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java","raw_url":"https://github.com/apache/openjpa/raw/1677b481b2783ee02aeba8c7175a0ae27d18fa92/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java?ref=1677b481b2783ee02aeba8c7175a0ae27d18fa92","patch":"@@ -79,7 +79,9 @@ public void setUp() {\n             Employee3.class, EmployeeName3.class, Item1.class, Item2.class,\n             Item3.class, Company1.class, Company2.class, Division.class, \n             VicePresident.class, EntityA_Embed_MappedToOne.class,\n-            Embed_MappedToOne.class, DROP_TABLES);\n+            Embed_MappedToOne.class, Embed_MappedToOneCascadeDelete.class, \n+            EntityA_Embed_MappedToOneCascadeDelete.class, EntityB2.class, \n+            DROP_TABLES);\n     }\n     \n     public void testEntityA_Coll_String() {\n@@ -160,6 +162,11 @@ public void testMapKeyClass() {\n         findObjMapKeyClass();\n     }\n \n+    public void testEntityA_Embed_MappedToOneCascadeDelete() {\n+        createEntityA_Embed_MappedToOneCascadeDelete();\n+        updateEntityA_Embed_MappedToOneCascadeDelete();\n+    }\n+    \n     /*\n      * Create EntityA_Coll_String\n      */\n@@ -257,6 +264,80 @@ public Embed_MappedToOne createEmbed_MappedToOne(EntityManager em, int id,\n         return embed;\n     }\n \n+    /*\n+     * Create EntityA_Embed_MappedToOneCascadeDelete\n+     */\n+    public void createEntityA_Embed_MappedToOneCascadeDelete() {\n+        EntityManager em = emf.createEntityManager();\n+        EntityTransaction tran = em.getTransaction();\n+        createEntityA_Embed_MappedToOneCascadeDelete(em, ID);\n+        tran.begin();\n+        em.flush();\n+        tran.commit();\n+        em.close();\n+    }\n+\n+    public void createEntityA_Embed_MappedToOneCascadeDelete(EntityManager em, \n+        int id) {\n+        EntityA_Embed_MappedToOneCascadeDelete a = \n+            new EntityA_Embed_MappedToOneCascadeDelete();\n+        a.setId(id);\n+        a.setName(\"a\" + id);\n+        a.setAge(id);\n+        Embed_MappedToOneCascadeDelete embed = \n+            createEmbed_MappedToOneDeleteCascade(em, id, a);\n+        a.setEmbed(embed);\n+        em.persist(a);\n+    }\n+\n+    public Embed_MappedToOneCascadeDelete createEmbed_MappedToOneDeleteCascade(\n+        EntityManager em, int id, EntityA_Embed_MappedToOneCascadeDelete a) {\n+        Embed_MappedToOneCascadeDelete embed = new Embed_MappedToOneCascadeDelete();\n+        embed.setName1(\"name1\");\n+        embed.setName2(\"name2\");\n+        embed.setName3(\"name3\");\n+        EntityB2 b = new EntityB2();\n+        b.setId(id);\n+        b.setName(\"bm\" + id);\n+        b.setEntityA(a);\n+        embed.setMappedEntityB(b);\n+        em.persist(b);\n+        return embed;\n+    }\n+    \n+    /*\n+     * Update EntityA_Embed_MappedToOneCascadeDelete\n+     */\n+    public void updateEntityA_Embed_MappedToOneCascadeDelete() {\n+        EntityManager em = emf.createEntityManager();\n+        EntityTransaction tran = em.getTransaction();\n+        updateEntityA_Embed_MappedToOneCascadeDelete(em, ID);\n+        tran.begin();\n+        em.flush();\n+        tran.commit();\n+        em.clear();\n+        \n+        EntityA_Embed_MappedToOneCascadeDelete a = \n+            em.find(EntityA_Embed_MappedToOneCascadeDelete.class, ID);\n+        assertNotNull(a);\n+        \n+        EntityB2 b2 = em.find(EntityB2.class, ID);\n+        assertNotNull(b2);\n+        \n+        em.close();\n+    }\n+\n+    public void updateEntityA_Embed_MappedToOneCascadeDelete(EntityManager em, \n+        int id) {\n+        EntityA_Embed_MappedToOneCascadeDelete a = \n+            em.find(EntityA_Embed_MappedToOneCascadeDelete.class, id);\n+        a.setName(\"newa\" + id);\n+        a.setAge(id + 1);\n+        Embed_MappedToOneCascadeDelete embed = \n+            createEmbed_MappedToOneDeleteCascade(em, id+1, a);\n+        a.setEmbed(embed);\n+    }\n+    \n     /*\n      * Create EntityA_Coll_Embed_ToOne\n      */"}]}

