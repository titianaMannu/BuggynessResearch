{"sha":"169e1ef586d46305ef1813000affc059a5ea89dc","node_id":"MDY6Q29tbWl0MjA2MzY0OjE2OWUxZWY1ODZkNDYzMDVlZjE4MTMwMDBhZmZjMDU5YTVlYTg5ZGM=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2008-03-24T18:40:47Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2008-03-24T18:40:47Z"},"message":"OPENJPA-543\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/1.0.x@640510 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"5781b2b6a00a1ddd69e873413e6f32d9df734168","url":"https://api.github.com/repos/apache/openjpa/git/trees/5781b2b6a00a1ddd69e873413e6f32d9df734168"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/169e1ef586d46305ef1813000affc059a5ea89dc","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/169e1ef586d46305ef1813000affc059a5ea89dc","html_url":"https://github.com/apache/openjpa/commit/169e1ef586d46305ef1813000affc059a5ea89dc","comments_url":"https://api.github.com/repos/apache/openjpa/commits/169e1ef586d46305ef1813000affc059a5ea89dc/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"f943c665515ed31178781a8035268d2773ed70ea","url":"https://api.github.com/repos/apache/openjpa/commits/f943c665515ed31178781a8035268d2773ed70ea","html_url":"https://github.com/apache/openjpa/commit/f943c665515ed31178781a8035268d2773ed70ea"}],"stats":{"total":13,"additions":10,"deletions":3},"files":[{"sha":"0c16de678fb8826717af41d7f6c205bc68d0c99c","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/SQLStoreQuery.java","status":"modified","additions":10,"deletions":3,"changes":13,"blob_url":"https://github.com/apache/openjpa/blob/169e1ef586d46305ef1813000affc059a5ea89dc/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/SQLStoreQuery.java","raw_url":"https://github.com/apache/openjpa/raw/169e1ef586d46305ef1813000affc059a5ea89dc/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/SQLStoreQuery.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/SQLStoreQuery.java?ref=169e1ef586d46305ef1813000affc059a5ea89dc","patch":"@@ -239,11 +239,18 @@ public Number executeUpdate(StoreQuery q, Object[] params) {\n                 }\n                 return Numbers.valueOf(count);\n             } catch (SQLException se) {\n-                if (stmnt != null)\n-                    try { stmnt.close(); } catch (SQLException se2) {}\n-                try { conn.close(); } catch (SQLException se2) {}\n                 throw SQLExceptions.getStore(se, dict);\n             } finally {\n+                if(stmnt != null) {\n+                    try {\n+                        stmnt.close(); \n+                    } catch (SQLException se) {\n+                        // safe to ignore, we're just cleaning up.\n+                    }\n+                    finally {\n+                        stmnt = null;\n+                    }\n+                }\n                 try { conn.close(); } catch (SQLException se) {}\n             }\n         }"}]}

