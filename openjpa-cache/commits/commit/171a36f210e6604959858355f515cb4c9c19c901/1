{"sha":"171a36f210e6604959858355f515cb4c9c19c901","node_id":"MDY6Q29tbWl0MjA2MzY0OjE3MWEzNmYyMTBlNjYwNDk1OTg1ODM1NWY1MTVjYjRjOWMxOWM5MDE=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-04-10T21:33:38Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-04-10T21:33:38Z"},"message":"OPENJPA-1625 Inconsistent creation of StateManagerImpl in BrokerImpl.  Merged in from trunk r932743 by Fay.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@932794 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"4ca6d2bd1dacea7df4dc3d8868002a99147c8175","url":"https://api.github.com/repos/apache/openjpa/git/trees/4ca6d2bd1dacea7df4dc3d8868002a99147c8175"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/171a36f210e6604959858355f515cb4c9c19c901","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/171a36f210e6604959858355f515cb4c9c19c901","html_url":"https://github.com/apache/openjpa/commit/171a36f210e6604959858355f515cb4c9c19c901","comments_url":"https://api.github.com/repos/apache/openjpa/commits/171a36f210e6604959858355f515cb4c9c19c901/comments","author":null,"committer":null,"parents":[{"sha":"3b15af9b8df9901a2d0327850bc6c9107096478b","url":"https://api.github.com/repos/apache/openjpa/commits/3b15af9b8df9901a2d0327850bc6c9107096478b","html_url":"https://github.com/apache/openjpa/commit/3b15af9b8df9901a2d0327850bc6c9107096478b"}],"stats":{"total":16,"additions":8,"deletions":8},"files":[{"sha":"185a73b3f497c76e9d345efb0a90130056fb7de2","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/apache/openjpa/blob/171a36f210e6604959858355f515cb4c9c19c901/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/171a36f210e6604959858355f515cb4c9c19c901/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java?ref=171a36f210e6604959858355f515cb4c9c19c901","patch":"@@ -2588,7 +2588,7 @@ else if (idType == ClassMetaData.ID_UNKNOWN)\n                 pc.pcReplaceStateManager(null);\n \n             // create new sm\n-            sm = new StateManagerImpl(id, meta, this);\n+            sm = newStateManagerImpl(id, meta);\n             if ((_flags & FLAG_ACTIVE) != 0) {\n                 if (explicit)\n                     sm.initialize(pc, PCState.PNEW);\n@@ -2622,8 +2622,8 @@ private void cascadeTransient(int op, Object obj, OpCallbacks call,\n \n         ClassMetaData meta = _conf.getMetaDataRepositoryInstance().\n             getMetaData(obj.getClass(), _loader, true);\n-        StateManagerImpl sm = new StateManagerImpl(StateManagerId.\n-            newInstance(this), meta, this);\n+        StateManagerImpl sm = newStateManagerImpl(StateManagerId.\n+            newInstance(this), meta);\n         sm.initialize(pc, PCState.TLOADED);\n         try {\n             switch (op) {\n@@ -2799,7 +2799,7 @@ public OpenJPAStateManager embed(Object obj, Object id,\n             if (id == null)\n                 id = StateManagerId.newInstance(this);\n \n-            StateManagerImpl sm = new StateManagerImpl(id, meta, this);\n+            StateManagerImpl sm = newStateManagerImpl(id, meta);\n             sm.setOwner((StateManagerImpl) owner, ownerMeta);\n \n             PersistenceCapable copy;\n@@ -2876,7 +2876,7 @@ OpenJPAStateManager copy(OpenJPAStateManager copy, PCState state) {\n                     getMetaDataRepositoryInstance();\n                 ClassMetaData meta = repos.getMetaData(type, _loader, true);\n                 // construct a new state manager with all info known\n-                sm = new StateManagerImpl(oid, meta, this);\n+                sm = newStateManagerImpl(oid, meta);\n                 sm.setObjectId(oid);\n                 sm.initialize(sm.getMetaData().getDescribedType(), state);\n             }\n@@ -3515,8 +3515,8 @@ public void transactionalAll(Collection objs, boolean updateVersion,\n                         meta = _conf.getMetaDataRepositoryInstance().\n                             getMetaData(obj.getClass(), _loader, true);\n \n-                        sm = new StateManagerImpl\n-                            (StateManagerId.newInstance(this), meta, this);\n+                        sm = newStateManagerImpl\n+                            (StateManagerId.newInstance(this), meta);\n                         sm.initialize(assertPersistenceCapable(obj),\n                             PCState.TCLEAN);\n                     } else if (sm.isPersistent()) {\n@@ -3587,7 +3587,7 @@ public void transactional(Object obj, boolean updateVersion,\n                 ClassMetaData meta = _conf.getMetaDataRepositoryInstance().\n                     getMetaData(obj.getClass(), _loader, true);\n                 Object id = StateManagerId.newInstance(this);\n-                sm = new StateManagerImpl(id, meta, this);\n+                sm = newStateManagerImpl(id, meta);\n                 sm.initialize(assertPersistenceCapable(obj),\n                     PCState.TCLEAN);\n             }"}]}

