{"sha":"17b27d44d0a26ceb91c4494905e2e2660a713309","node_id":"MDY6Q29tbWl0MjA2MzY0OjE3YjI3ZDQ0ZDBhMjZjZWI5MWM0NDk0OTA1ZTJlMjY2MGE3MTMzMDk=","commit":{"author":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-10-04T00:10:28Z"},"committer":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-10-04T00:10:28Z"},"message":"Fix relative Javadoc URLs.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@452681 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c1b6f721d47fc5ae047caa9438e722b13635f5f1","url":"https://api.github.com/repos/apache/openjpa/git/trees/c1b6f721d47fc5ae047caa9438e722b13635f5f1"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/17b27d44d0a26ceb91c4494905e2e2660a713309","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/17b27d44d0a26ceb91c4494905e2e2660a713309","html_url":"https://github.com/apache/openjpa/commit/17b27d44d0a26ceb91c4494905e2e2660a713309","comments_url":"https://api.github.com/repos/apache/openjpa/commits/17b27d44d0a26ceb91c4494905e2e2660a713309/comments","author":null,"committer":null,"parents":[{"sha":"afe9acd57616e633d7c4a2278a3885621ba7e3e6","url":"https://api.github.com/repos/apache/openjpa/commits/afe9acd57616e633d7c4a2278a3885621ba7e3e6","html_url":"https://github.com/apache/openjpa/commit/afe9acd57616e633d7c4a2278a3885621ba7e3e6"}],"stats":{"total":588,"additions":294,"deletions":294},"files":[{"sha":"763f1bc42c2d9e8d837bf80087f2c6883cb6b6fa","filename":"openjpa-project/src/doc/manual/jpa_overview_arch.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/jpa_overview_arch.xml","raw_url":"https://github.com/apache/openjpa/raw/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/jpa_overview_arch.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_arch.xml?ref=17b27d44d0a26ceb91c4494905e2e2660a713309","patch":"@@ -282,7 +282,7 @@ additional details on JPA exceptions.\n         <note>\n             <para>\n All exceptions thrown by OpenJPA implement\n-<ulink url=\"../apidocs/org/apache/openjpa/util/ExceptionInfo.html\"><classname>\n+<ulink url=\"../javadoc/org/apache/openjpa/util/ExceptionInfo.html\"><classname>\n org.apache.openjpa.util.ExceptionInfo</classname></ulink> to provide you with\n additional error information.\n             </para>"},{"sha":"8166b7b1cf5cc6de3f901508ae9a93f77e73c1fe","filename":"openjpa-project/src/doc/manual/jpa_overview_em.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/jpa_overview_em.xml","raw_url":"https://github.com/apache/openjpa/raw/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/jpa_overview_em.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_em.xml?ref=17b27d44d0a26ceb91c4494905e2e2660a713309","patch":"@@ -26,7 +26,7 @@ an ellipsis (...) are overloaded to take multiple parameter types.\n         <para>\n OpenJPA extends the standard <classname>EntityManager</classname> interface with\n the \n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n <classname>org.apache.openjpa.persistence.OpenJPAEntityManager</classname>\n </ulink> interface to provide additional functionality.\n         </para>"},{"sha":"75e0fed1adf4dd47c10a88be04e113111160fa60","filename":"openjpa-project/src/doc/manual/jpa_overview_emfactory.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/jpa_overview_emfactory.xml","raw_url":"https://github.com/apache/openjpa/raw/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/jpa_overview_emfactory.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_emfactory.xml?ref=17b27d44d0a26ceb91c4494905e2e2660a713309","patch":"@@ -22,7 +22,7 @@ EntityManager</classname> instances for application use.\n         <para>\n OpenJPA extends the standard <classname>EntityManagerFactory</classname>\n interface with the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAEntityManagerFactory.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/OpenJPAEntityManagerFactory.html\">\n <classname>OpenJPAEntityManagerFactory</classname></ulink> to provide additional\n functionality.\n         </para>\n@@ -143,7 +143,7 @@ createEntityManager</methodname>:\n                     <para>\n <literal>openjpa.&lt;property&gt;</literal>, where <emphasis>&lt;property&gt;\n </emphasis> is any JavaBean property of the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n <classname>\n org.apache.openjpa.persistence.OpenJPAEntityManager</classname></ulink>.\n                     </para>"},{"sha":"35e760b6b8c8741dff4f17853749ace260014928","filename":"openjpa-project/src/doc/manual/jpa_overview_meta.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/jpa_overview_meta.xml","raw_url":"https://github.com/apache/openjpa/raw/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/jpa_overview_meta.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_meta.xml?ref=17b27d44d0a26ceb91c4494905e2e2660a713309","patch":"@@ -861,7 +861,7 @@ represents the UUID as a 32-character hexadecimal string.\n                 </itemizedlist>\n                 <para>\n These string constants are defined in\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/Generator.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/Generator.html\">\n <classname>org.apache.openjpa.persistence.Generator</classname></ulink>.\n                 </para>\n             </note>"},{"sha":"1b145143b1c89636d2e861c133a01d980204d09c","filename":"openjpa-project/src/doc/manual/jpa_overview_persistence.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/jpa_overview_persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/jpa_overview_persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_persistence.xml?ref=17b27d44d0a26ceb91c4494905e2e2660a713309","patch":"@@ -40,7 +40,7 @@\n     <note>\n         <para>\n OpenJPA also includes the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAPersistence.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/OpenJPAPersistence.html\">\n <classname>OpenJPAPersistence</classname></ulink> helper class to provide \n additional utility methods.\n         </para>"},{"sha":"2f9c9b2dcc80b66e540f5187aff44055fc43a402","filename":"openjpa-project/src/doc/manual/jpa_resources.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/jpa_resources.xml","raw_url":"https://github.com/apache/openjpa/raw/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/jpa_resources.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_resources.xml?ref=17b27d44d0a26ceb91c4494905e2e2660a713309","patch":"@@ -22,7 +22,7 @@ javax.persistence Javadoc</ulink>\n         </listitem>\n         <listitem>\n             <para>\n-<ulink url=\"../apidocs/index.html\">OpenJPA Javadoc</ulink>\n+<ulink url=\"../javadoc/index.html\">OpenJPA Javadoc</ulink>\n             </para>\n         </listitem>\n         <listitem>"},{"sha":"d5695099c17b115ca195e9c92449405c03b37650","filename":"openjpa-project/src/doc/manual/ref_guide_caching.xml","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/ref_guide_caching.xml","raw_url":"https://github.com/apache/openjpa/raw/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/ref_guide_caching.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_caching.xml?ref=17b27d44d0a26ceb91c4494905e2e2660a713309","patch":"@@ -198,7 +198,7 @@ public class Employee {\n </programlisting>\n             </example>\n             <para>\n-See the <ulink url=\"../apidocs/org/apache/openjpa/persistence/DataCache.html\">\n+See the <ulink url=\"../javadoc/org/apache/openjpa/persistence/DataCache.html\">\n <classname>org.apache.openjpa.persistence.DataCache</classname></ulink> Javadoc\n for more information on the <classname>DataCache</classname> annotation.\n             </para>\n@@ -261,7 +261,7 @@ true(EvictionSchedule='15,45 15 * * 1')\n             <para>\n The <literal>org.apache.openjpa.datacache</literal> package defines OpenJPA's\n data caching framework. While you may use this framework directly (see its\n-<ulink url=\"../apidocs/org/apache/openjpa/datacache/package-summary.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/datacache/package-summary.html\">\n Javadoc</ulink> for details), its APIs are meant primarily for service\n providers. In fact, <xref linkend=\"ref_guide_cache_extension\"/> below has\n tips on how to use this package to extend OpenJPA's caching service yourself.\n@@ -270,7 +270,7 @@ tips on how to use this package to extend OpenJPA's caching service yourself.\n Rather than use the low-level <literal>org.apache.openjpa.datacache</literal>\n package APIs, JPA users should typically access the data cache through OpenJPA's\n high-level \n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/StoreCache.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/StoreCache.html\">\n <classname>org.apache.openjpa.persistence.StoreCache</classname></ulink> facade.\n This facade has methods to pin and unpin records, evict data from the cache, and\n more.\n@@ -347,7 +347,7 @@ cache.evict(Magazine.class, changedMag.getId());\n             </example>\n             <para>\n See the <classname>StoreCache</classname>\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/StoreCache.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/StoreCache.html\">\n Javadoc</ulink> for information on additional functionality it provides. Also,\n <xref linkend=\"ref_guide_runtime\"/> discusses OpenJPA's other extensions\n to the standard set of JPA runtime interfaces.\n@@ -411,7 +411,7 @@ execution time is fully traversed.\n             </para>\n             <para>\n OpenJPA exposes a high-level interface to the query cache through the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/QueryResultCache.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/QueryResultCache.html\">\n <classname>org.apache.openjpa.persistence.QueryResultCache</classname></ulink> \n class. You can access this class through the <classname>\n OpenJPAEntityManagerFactory</classname>."},{"sha":"7b61d11f13da7a1b816651621f4bfd0248a0f90c","filename":"openjpa-project/src/doc/manual/ref_guide_conf.xml","status":"modified","additions":108,"deletions":108,"changes":216,"blob_url":"https://github.com/apache/openjpa/blob/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/ref_guide_conf.xml","raw_url":"https://github.com/apache/openjpa/raw/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/ref_guide_conf.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_conf.xml?ref=17b27d44d0a26ceb91c4494905e2e2660a713309","patch":"@@ -103,11 +103,11 @@ configuration resource to use, and to override any property.\n             <para>\n Internally, the OpenJPA runtime environment and development\n tools manipulate property settings through a general\n-<ulink url=\"../apidocs/ResultObjectProvider/lib/conf/Configuration.html\">\n+<ulink url=\"../javadoc/ResultObjectProvider/lib/conf/Configuration.html\">\n <classname>Configuration</classname></ulink> interface, and in particular its\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html\">\n <classname>OpenJPAConfiguration</classname></ulink> and\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html\">\n <classname>JDBCConfiguration</classname></ulink> subclasses. For advanced\n customization, OpenJPA's extended runtime interfaces and its development tools\n allow you to access these interfaces directly. See the <ulink url=\"../javadoc\">\n@@ -377,7 +377,7 @@ openjpa.AggregateListeners</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getAggregateListeners\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getAggregateListeners\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getAggregateListeners\n </methodname></ulink>\n             </para>\n@@ -391,7 +391,7 @@ AggregateListeners</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A comma-separated list of plugin\n strings (see <xref linkend=\"ref_guide_conf_plugins\"/>) describing custom\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/kernel/exps/JDBCAggregateListener.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/kernel/exps/JDBCAggregateListener.html\">\n <classname> org.apache.openjpa.jdbc.kernel.exps.JDBCAggregateListener\n </classname></ulink>s to make available to all queries, in addition to the\n standard set of listeners. See <xref linkend=\"ref_guide_enterprise_queryext\"/>\n@@ -425,7 +425,7 @@ standard set of listeners. See <xref linkend=\"ref_guide_enterprise_queryext\"/>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getAutoClear\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getAutoClear\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getAutoClear\n </methodname></ulink>\n             </para>\n@@ -472,7 +472,7 @@ transaction.\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getAutoDetach\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getAutoDetach\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getAutoDetach\n </methodname></ulink>\n             </para>\n@@ -507,7 +507,7 @@ when managed instances will be automatically detached.\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getBrokerFactory\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getBrokerFactory\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getBrokerFactory\n </methodname></ulink>\n             </para>\n@@ -525,7 +525,7 @@ BrokerFactory</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n <xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n-<ulink url=\"../apidocs/org/apache/openjpa/kernel/BrokerFactory.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/kernel/BrokerFactory.html\">\n <classname>org.apache.openjpa.kernel.BrokerFactory</classname></ulink> type to\n use.\n             </para>\n@@ -553,7 +553,7 @@ use.\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getBrokerImpl\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getBrokerImpl\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getBrokerImpl\n </methodname></ulink>\n             </para>\n@@ -567,7 +567,7 @@ BrokerImpl</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n <xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n-<ulink url=\"../apidocs/org/apache/openjpa/kernel/Broker.html\"><classname>\n+<ulink url=\"../javadoc/org/apache/openjpa/kernel/Broker.html\"><classname>\n org.apache.openjpa.kernel.Broker</classname></ulink> type to use at runtime. See\n <xref linkend=\"ref_guide_runtime_pmextension\"/> on for details.\n             </para>\n@@ -595,7 +595,7 @@ org.apache.openjpa.kernel.Broker</classname></ulink> type to use at runtime. See\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getClassResolver\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getClassResolver\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getClassResolver\n </methodname></ulink>\n             </para>\n@@ -609,7 +609,7 @@ ClassResolver</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n <xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n-<ulink url=\"../apidocs/org/apache/openjpa/util/ClassResolver.html\"><classname>\n+<ulink url=\"../javadoc/org/apache/openjpa/util/ClassResolver.html\"><classname>\n org.apache.openjpa.util.ClassResolver</classname></ulink> implementation to use\n for class name resolution. You may wish to plug in your own resolver if you have\n special classloading needs.\n@@ -635,7 +635,7 @@ special classloading needs.\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getCompatibility\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getCompatibility\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getCompatibility\n </methodname></ulink>\n             </para>\n@@ -674,7 +674,7 @@ openjpa.ConnectionDriverName</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnectionDriverName\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnectionDriverName\">\n <methodname>\n org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionDriverName\n </methodname></ulink>\n@@ -716,7 +716,7 @@ openjpa.Connection2DriverName</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnection2DriverName\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnection2DriverName\">\n <methodname>\n org.apache.openjpa.conf.OpenJPAConfiguration.getConnection2DriverName\n </methodname></ulink>\n@@ -759,7 +759,7 @@ openjpa.ConnectionFactory</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnectionFactory\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnectionFactory\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionFactory\n </methodname></ulink>\n             </para>\n@@ -799,7 +799,7 @@ openjpa.ConnectionFactory2</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnectionFactory2\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnectionFactory2\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionFactory2\n </methodname></ulink>\n             </para>\n@@ -839,7 +839,7 @@ openjpa.ConnectionFactoryName</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnectionFactoryName\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnectionFactoryName\">\n <methodname>\n org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionFactoryName\n </methodname></ulink>\n@@ -880,7 +880,7 @@ openjpa.ConnectionFactory2Name</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnectionFactory2Name\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnectionFactory2Name\">\n <methodname>\n org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionFactory2Name\n </methodname></ulink>\n@@ -921,7 +921,7 @@ openjpa.ConnectionFactoryMode</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnectionFactoryMode\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnectionFactoryMode\">\n <methodname>\n org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionFactoryMode\n </methodname></ulink>\n@@ -966,7 +966,7 @@ openjpa.ConnectionFactoryProperties</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnectionFactoryProperties\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnectionFactoryProperties\">\n <methodname>\n org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionFactoryProperties\n </methodname></ulink>\n@@ -1008,7 +1008,7 @@ openjpa.ConnectionFactory2Properties</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnectionFactory2Properties\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnectionFactory2Properties\">\n <methodname>\n org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionFactory2Properties\n </methodname></ulink>\n@@ -1051,7 +1051,7 @@ openjpa.ConnectionPassword</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnectionPassword\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnectionPassword\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionPassword\n </methodname></ulink>\n             </para>\n@@ -1091,7 +1091,7 @@ openjpa.Connection2Password</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnection2Password\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnection2Password\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getConnection2Password\n </methodname></ulink>\n             </para>\n@@ -1133,7 +1133,7 @@ openjpa.ConnectionProperties</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnectionProperties\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnectionProperties\">\n <methodname>\n org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionProperties\n </methodname></ulink>\n@@ -1175,7 +1175,7 @@ openjpa.Connection2Properties</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnection2Properties\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnection2Properties\">\n <methodname>\n org.apache.openjpa.conf.OpenJPAConfiguration.getConnection2Properties\n </methodname></ulink>\n@@ -1218,7 +1218,7 @@ alternate connection factory used for unmanaged connections. See\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnectionURL\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnectionURL\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionURL\n </methodname></ulink>\n             </para>\n@@ -1257,7 +1257,7 @@ ConnectionURL</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnection2URL\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnection2URL\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getConnection2URL\n </methodname></ulink>\n             </para>\n@@ -1299,7 +1299,7 @@ openjpa.ConnectionUserName</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnectionUserName\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnectionUserName\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionUserName\n </methodname></ulink>\n             </para>\n@@ -1339,7 +1339,7 @@ openjpa.Connection2UserName</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnection2UserName\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnection2UserName\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getConnection2UserName\n </methodname></ulink>\n             </para>\n@@ -1381,7 +1381,7 @@ openjpa.ConnectionRetainMode</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnectionRetainMode\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getConnectionRetainMode\">\n <methodname>\n org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionRetainMode\n </methodname></ulink>\n@@ -1422,7 +1422,7 @@ sessions. See <xref linkend=\"ref_guide_dbsetup_retain\"/> for details.\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getDataCache\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getDataCache\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getDataCache\n </methodname></ulink>\n             </para>\n@@ -1436,7 +1436,7 @@ DataCache</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin list string (see\n <xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n-<ulink url=\"../apidocs/org/apache/openjpa/datacache/DataCache.html\"><classname>\n+<ulink url=\"../javadoc/org/apache/openjpa/datacache/DataCache.html\"><classname>\n org.apache.openjpa.datacache.DataCache</classname></ulink>s to use for data\n caching. See <xref linkend=\"ref_guide_cache_conf\"/> for details.\n             </para>\n@@ -1464,7 +1464,7 @@ openjpa.DataCacheManager</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getDataCacheManager\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getDataCacheManager\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getDataCacheManager\n </methodname></ulink>\n             </para>\n@@ -1478,7 +1478,7 @@ DataCacheManager</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n <xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n-<ulink url=\"../apidocs/org/apache/openjpa/datacache/DataCacheManager.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/datacache/DataCacheManager.html\">\n <classname>openjpa.datacache.DataCacheManager</classname></ulink> that manages\n the system data caches. See <xref linkend=\"ref_guide_cache\"/> for details\n on data caching.\n@@ -1507,7 +1507,7 @@ openjpa.DataCacheTimeout</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getDataCacheTimeout\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getDataCacheTimeout\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getDataCacheTimeout\n </methodname></ulink>\n             </para>\n@@ -1551,7 +1551,7 @@ classes. See <xref linkend=\"ref_guide_cache_conf\"/> for details.\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getDetachState\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getDetachState\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getDetachState\n </methodname></ulink>\n             </para>\n@@ -1603,7 +1603,7 @@ openjpa.DynamicDataStructs</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getDynamicDataStructs\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getDynamicDataStructs\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getDynamicDataStructs\n </methodname></ulink>\n             </para>\n@@ -1650,7 +1650,7 @@ memory and speed optimization over time.\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getFetchBatchSize\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getFetchBatchSize\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getFetchBatchSize\n </methodname></ulink>\n             </para>\n@@ -1685,7 +1685,7 @@ runtime. See <xref linkend=\"ref_guide_dbsetup_lrs\"/> for details.\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getFetchGroups\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getFetchGroups\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getFetchGroups\n </methodname></ulink>\n             </para>\n@@ -1727,7 +1727,7 @@ Fetch groups can also be set at runtime. See <xref linkend=\"ref_guide_fetch\"/>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getFilterListeners\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getFilterListeners\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getFilterListeners\n </methodname></ulink>\n             </para>\n@@ -1741,7 +1741,7 @@ FilterListeners</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A comma-separated list of full\n plugin strings (see <xref linkend=\"ref_guide_conf_plugins\"/>) for custom\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/kernel/exps/JDBCFilterListener.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/kernel/exps/JDBCFilterListener.html\">\n <classname> org.apache.openjpa.jdbc.kernel.exps.JDBCFilterListener</classname>\n </ulink>s to make available to all queries, in addition to the standard set of\n listeners. You can also add filter listeners to individual queries. See\n@@ -1784,7 +1784,7 @@ openjpa.FlushBeforeQueries</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getFlushBeforeQueries\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getFlushBeforeQueries\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getFlushBeforeQueries\n </methodname></ulink>\n             </para>\n@@ -1816,7 +1816,7 @@ query. See <xref linkend=\"ref_guide_dbsetup_retain\"/> for details.\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getIgnoreChanges\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getIgnoreChanges\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getIgnoreChanges\n </methodname></ulink>\n             </para>\n@@ -1860,7 +1860,7 @@ or flush before running it against the datastore.\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getInverseManager\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getInverseManager\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getInverseManager\n </methodname></ulink>\n             </para>\n@@ -1878,7 +1878,7 @@ InverseManager</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n <xref linkend=\"ref_guide_conf_plugins\"/>) describing a\n-<ulink url=\"../apidocs/org/apache/openjpa/kernel/InverseManager.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/kernel/InverseManager.html\">\n <classname>org.apache.openjpa.kernel.InverseManager</classname></ulink> to use\n for managing bidirectional relations upon a flush. See\n <xref linkend=\"ref_guide_inverses\"/> for usage documentation.\n@@ -1907,7 +1907,7 @@ for managing bidirectional relations upon a flush. See\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getLockManager\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getLockManager\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getLockManager\n </methodname></ulink>\n             </para>\n@@ -1925,7 +1925,7 @@ LockManager</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n <xref linkend=\"ref_guide_conf_plugins\"/>) describing a\n-<ulink url=\"../apidocs/org/apache/openjpa/kernel/LockManager.html\"><classname>\n+<ulink url=\"../javadoc/org/apache/openjpa/kernel/LockManager.html\"><classname>\n org.apache.openjpa.kernel.LockManager</classname></ulink> to use for acquiring\n locks on persistent instances during transactions.\n             </para>\n@@ -1953,7 +1953,7 @@ locks on persistent instances during transactions.\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getLockTimeout\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getLockTimeout\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getLockTimeout\n </methodname></ulink>\n             </para>\n@@ -1992,7 +1992,7 @@ for an object lock before throwing an exception, or -1 for no limit. See\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getLog\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getLog\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getLog</methodname>\n </ulink>\n             </para>\n@@ -2010,7 +2010,7 @@ for an object lock before throwing an exception, or -1 for no limit. See\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n <xref linkend=\"ref_guide_conf_plugins\"/>) describing a\n-<ulink url=\"../apidocs/org/apache/openjpa/lib/log/LogFactory.html\"><classname>\n+<ulink url=\"../javadoc/org/apache/openjpa/lib/log/LogFactory.html\"><classname>\n org.apache.openjpa.lib.log.LogFactory</classname></ulink> to use for logging.\n For details on logging, see <xref linkend=\"ref_guide_logging\"/>.\n             </para>\n@@ -2041,7 +2041,7 @@ For details on logging, see <xref linkend=\"ref_guide_logging\"/>.\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getManagedRuntime\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getManagedRuntime\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getManagedRuntime\n </methodname></ulink>\n             </para>\n@@ -2055,7 +2055,7 @@ ManagedRuntime</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n <xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n-<ulink url=\"../apidocs/org/apache/openjpa/ee/ManagedRuntime.html\"><classname>\n+<ulink url=\"../javadoc/org/apache/openjpa/ee/ManagedRuntime.html\"><classname>\n org.apache.openjpa.ee.ManagedRuntime</classname></ulink> implementation to use\n for obtaining a reference to the <classname>TransactionManager</classname> in an\n enterprise environment.\n@@ -2076,7 +2076,7 @@ enterprise environment.\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getMapping\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getMapping\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getMapping</methodname>\n </ulink>\n             </para>\n@@ -2115,7 +2115,7 @@ object-to-datastore mapping to use.\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getMaxFetchDepth\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getMaxFetchDepth\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getMaxFetchDepth\n </methodname></ulink>\n             </para>\n@@ -2155,7 +2155,7 @@ traverse when eager fetching. Use -1 for no limit. Defaults to no limit.  See\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getMetaDataFactory\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getMetaDataFactory\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getMetaDataFactory\n </methodname></ulink>\n             </para>\n@@ -2169,7 +2169,7 @@ MetaDataFactory</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n <xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n-<ulink url=\"../apidocs/org/apache/openjpa/meta/MetaDataFactory.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/meta/MetaDataFactory.html\">\n <classname>openjpa.meta.MetaDataFactory</classname></ulink> to use to store and\n retrieve metadata for your persistent classes. See\n <xref linkend=\"ref_guide_meta_factory\"/> for details.\n@@ -2198,7 +2198,7 @@ retrieve metadata for your persistent classes. See\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getMultithreaded\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getMultithreaded\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getMultithreaded\n </methodname></ulink>\n             </para>\n@@ -2238,7 +2238,7 @@ will be accessed by multiple threads at once.\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getOptimistic\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getOptimistic\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getOptimistic\n </methodname></ulink>\n             </para>\n@@ -2277,7 +2277,7 @@ openjpa.OrphanedKeyAction</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getOrphanedKeyAction\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getOrphanedKeyAction\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getOrphanedKeyAction\n </methodname></ulink>\n             </para>\n@@ -2295,7 +2295,7 @@ OrphanedKeyAction</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n <xref linkend=\"ref_guide_conf_plugins\"/>) describing a\n-<ulink url=\"../apidocs/org/apache/openjpa/event/OrphanedKeyAction.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/event/OrphanedKeyAction.html\">\n <classname>org.apache.openjpa.event.OrphanedKeyAction</classname></ulink> to\n invoke when OpenJPA discovers an orphaned datastore key. See\n <xref linkend=\"ref_guide_orphan\"/> for details.\n@@ -2316,7 +2316,7 @@ openjpa.NontransactionalRead</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getNontransactionalRead\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getNontransactionalRead\">\n <methodname>\n org.apache.openjpa.conf.OpenJPAConfiguration.getNontransactionalRead\n </methodname></ulink>\n@@ -2348,7 +2348,7 @@ openjpa.NontransactionalWrite</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getNontransactionalWrite\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getNontransactionalWrite\">\n <methodname>\n org.apache.openjpa.conf.OpenJPAConfiguration.getNontransactionalWrite\n </methodname></ulink>\n@@ -2389,7 +2389,7 @@ will take effect on the next transaction.\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getProxyManager\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getProxyManager\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getProxyManager\n </methodname></ulink>\n             </para>\n@@ -2403,7 +2403,7 @@ ProxyManager</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n <xref linkend=\"ref_guide_conf_plugins\"/>) describing a\n-<ulink url=\"../apidocs/org/apache/openjpa/util/ProxyManager.html\"><classname>\n+<ulink url=\"../javadoc/org/apache/openjpa/util/ProxyManager.html\"><classname>\n org.apache.openjpa.util.ProxyManager</classname></ulink> to use for proxying\n mutable second class objects. See\n <xref linkend=\"ref_guide_pc_scos_proxy_custom\"/> for details.\n@@ -2432,7 +2432,7 @@ mutable second class objects. See\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getQueryCache\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getQueryCache\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getQueryCache\n </methodname></ulink>\n             </para>\n@@ -2448,7 +2448,7 @@ false</literal> otherwise.\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n <xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n-<ulink url=\"../apidocs/org/apache/openjpa/datacache/QueryCache.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/datacache/QueryCache.html\">\n <classname>org.apache.openjpa.datacache.QueryCache</classname></ulink>\n implementation to use for caching of queries loaded from the data store. See\n <xref linkend=\"ref_guide_cache_query\"/> for details.\n@@ -2477,7 +2477,7 @@ implementation to use for caching of queries loaded from the data store. See\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getReadLockLevel\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getReadLockLevel\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getReadLockLevel\n </methodname></ulink>\n             </para>\n@@ -2531,7 +2531,7 @@ openjpa.RemoteCommitProvider</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getRemoteCommitProvider\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getRemoteCommitProvider\">\n <methodname>\n org.apache.openjpa.conf.OpenJPAConfiguration.getRemoteCommitProvider\n </methodname></ulink>\n@@ -2546,7 +2546,7 @@ RemoteCommitProvider</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n <xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n-<ulink url=\"../apidocs/org/apache/openjpa/event/RemoteCommitProvider.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/event/RemoteCommitProvider.html\">\n <classname>org.apache.openjpa.event.RemoteCommitProvider</classname></ulink>\n implementation to use for distributed event notification. See\n <xref linkend=\"ref_guide_event_conf\"/> for more information.\n@@ -2567,7 +2567,7 @@ implementation to use for distributed event notification. See\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getRestoreState\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getRestoreState\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getRestoreState\n </methodname></ulink>\n             </para>\n@@ -2602,7 +2602,7 @@ to their pre-transaction values when a rollback occurs.\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getRetainState\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getRetainState\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getRetainState\n </methodname></ulink>\n             </para>\n@@ -2641,7 +2641,7 @@ openjpa.RetryClassRegistration</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getRetryClassRegistration\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getRetryClassRegistration\">\n <methodname>\n org.apache.openjpa.conf.OpenJPAConfiguration.getRetryClassRegistration\n </methodname></ulink>\n@@ -2672,7 +2672,7 @@ openjpa.SavepointManager</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getSavepointManager\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getSavepointManager\">\n org.apache.openjpa.conf.OpenJPAConfiguration.getSavepointManager</ulink>\n             </para>\n             <para>\n@@ -2689,7 +2689,7 @@ SavepointManager\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n <xref linkend=\"ref_guide_conf_plugins\"/>) describing a\n-<ulink url=\"../apidocs/org/apache/openjpa/kernel/SavepointManager.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/kernel/SavepointManager.html\">\n <classname>org.apache.openjpa.kernel.SavepointManager</classname></ulink> to \n use for managing transaction savepoints. See \n <xref linkend=\"ref_guide_savepoints\"/> for details.\n@@ -2710,7 +2710,7 @@ use for managing transaction savepoints. See\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getSequence\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getSequence\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getSequence\n </methodname></ulink>\n             </para>\n@@ -2724,7 +2724,7 @@ Sequence</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n <xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n-<ulink url=\"../apidocs/org/apache/openjpa/kernel/Seq.html\"><classname>\n+<ulink url=\"../javadoc/org/apache/openjpa/kernel/Seq.html\"><classname>\n org.apache.openjpa.kernel.Seq</classname></ulink> implementation to use for the\n system sequence. See <xref linkend=\"ref_guide_sequence\"/> for more\n information.\n@@ -2753,7 +2753,7 @@ information.\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getTransactionMode\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getTransactionMode\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getTransactionMode\n </methodname></ulink>\n             </para>\n@@ -2796,7 +2796,7 @@ use. You can override this setting per-session.\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getWriteLockLevel\">\n+<ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#getWriteLockLevel\">\n <methodname>org.apache.openjpa.conf.OpenJPAConfiguration.getWriteLockLevel\n </methodname></ulink>\n             </para>\n@@ -2858,7 +2858,7 @@ openjpa.jdbc.ConnectionDecorators</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getConnectionDecorators\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getConnectionDecorators\">\n <methodname>\n org.apache.openjpa.jdbc.conf.JDBCConfiguration.getConnectionDecorators\n </methodname></ulink>\n@@ -2873,7 +2873,7 @@ ConnectionDecorators</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A comma-separated list of plugin\n strings (see <xref linkend=\"ref_guide_conf_plugins\"/>) describing\n-<ulink url=\"../apidocs/org/apache/openjpa/lib/jdbc/ConnectionDecorator.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/lib/jdbc/ConnectionDecorator.html\">\n <classname>org.apache.openjpa.lib.jdbc.ConnectionDecorator</classname></ulink>\n instances to install on the connection factory. These decorators can wrap\n connections passed from the underlying <classname>DataSource</classname> to add\n@@ -2906,7 +2906,7 @@ openjpa.jdbc.DBDictionary</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getDBDictionary\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getDBDictionary\">\n <methodname>org.apache.openjpa.jdbc.conf.JDBCConfiguration.getDBDictionary\n </methodname></ulink>\n             </para>\n@@ -2923,7 +2923,7 @@ openjpa.ConnectionDriverName</literal></link>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n <xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/sql/DBDictionary.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/sql/DBDictionary.html\">\n <classname>org.apache.openjpa.jdbc.sql.DBDictionary</classname></ulink> to use\n for database interaction. OpenJPA typically auto-configures the dictionary based\n on the JDBC URL, but you may have to set this property explicitly if you are\n@@ -2955,7 +2955,7 @@ openjpa.jdbc.DriverDataSource</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getDriverDataSource\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getDriverDataSource\">\n <methodname>org.apache.openjpa.jdbc.conf.JDBCConfiguration.getDriverDataSource\n </methodname></ulink>\n             </para>\n@@ -2969,7 +2969,7 @@ DriverDataSource</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> The alias or full class name of\n the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/schema/DriverDataSource.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/schema/DriverDataSource.html\">\n <classname>org.apache.openjpa.jdbc.schema.DriverDataSource</classname></ulink>\n implementation to use to wrap JDBC Driver classes with javax.sql.DataSource\n instances.\n@@ -2998,7 +2998,7 @@ openjpa.jdbc.EagerFetchMode</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getEagerFetchMode\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getEagerFetchMode\">\n <methodname>org.apache.openjpa.jdbc.conf.JDBCConfiguration.getEagerFetchMode\n </methodname></ulink>\n             </para>\n@@ -3042,7 +3042,7 @@ openjpa.jdbc.FetchDirection</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getFetchDirection\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getFetchDirection\">\n <methodname>org.apache.openjpa.jdbc.conf.JDBCConfiguration.getFetchDirection\n </methodname></ulink>\n             </para>\n@@ -3086,7 +3086,7 @@ openjpa.jdbc.JDBCListeners</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getJDBCListeners\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getJDBCListeners\">\n <methodname>org.apache.openjpa.jdbc.conf.JDBCConfiguration.getJDBCListeners\n </methodname></ulink>\n             </para>\n@@ -3100,7 +3100,7 @@ JDBCListeners</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A comma-separated list of plugin\n strings (see <xref linkend=\"ref_guide_conf_plugins\"/>) describing\n-<ulink url=\"../apidocs/org/apache/openjpa/lib/jdbc/JDBCListener.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/lib/jdbc/JDBCListener.html\">\n <classname>org.apache.openjpa.lib.jdbc.JDBCListener</classname></ulink> event\n listeners to install. These listeners will be notified on various JDBC-related\n events.\n@@ -3129,7 +3129,7 @@ events.\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getLRSSize\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getLRSSize\">\n <methodname>org.apache.openjpa.jdbc.conf.JDBCConfiguration.getLRSSize\n </methodname></ulink>\n             </para>\n@@ -3173,7 +3173,7 @@ openjpa.jdbc.MappingDefaults</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getMappingDefaults\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getMappingDefaults\">\n <methodname>org.apache.openjpa.jdbc.conf.JDBCConfiguration.getMappingDefaults\n </methodname></ulink>\n             </para>\n@@ -3187,7 +3187,7 @@ MappingDefaults</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n <xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/meta/MappingDefaults.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/meta/MappingDefaults.html\">\n <classname>org.apache.openjpa.jdbc.meta.MappingDefaults</classname></ulink> to\n use to define default column names, table names, and constraints for your\n persistent classes. See <xref linkend=\"ref_guide_mapping_factory\"/> for\n@@ -3217,7 +3217,7 @@ openjpa.jdbc.MappingFactory</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getMappingFactory\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getMappingFactory\">\n <methodname>org.apache.openjpa.jdbc.conf.JDBCConfiguration.getMappingFactory\n </methodname></ulink>\n             </para>\n@@ -3231,7 +3231,7 @@ MappingFactory</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n <xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n-<ulink url=\"../apidocs/org/apache/openjpa/meta/MetaDataFactory.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/meta/MetaDataFactory.html\">\n <classname>org.apache.openjpa.meta.MetaDataFactory</classname></ulink> to use to\n store and retrieve object-relational mapping information for your persistent\n classes. See <xref linkend=\"ref_guide_mapping_factory\"/> for details.\n@@ -3260,7 +3260,7 @@ openjpa.jdbc.ResultSetType</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getResultSetType\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getResultSetType\">\n <methodname>org.apache.openjpa.jdbc.conf.JDBCConfiguration.getResultSetType\n </methodname></ulink>\n             </para>\n@@ -3299,7 +3299,7 @@ when fetching result lists. This property can also be varied at runtime. See\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getSchema\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getSchema\">\n <methodname>org.apache.openjpa.jdbc.conf.JDBCConfiguration.getSchema\n </methodname></ulink>\n             </para>\n@@ -3339,7 +3339,7 @@ openjpa.jdbc.SchemaFactory</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getSchemaFactory\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getSchemaFactory\">\n <methodname>org.apache.openjpa.jdbc.conf.JDBCConfiguration.getSchemaFactory\n </methodname></ulink>\n             </para>\n@@ -3358,7 +3358,7 @@ others\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n <xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/schema/SchemaFactory.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/schema/SchemaFactory.html\">\n <classname>org.apache.openjpa.jdbc.schema.SchemaFactory</classname></ulink> to\n use to store and retrieve information about the database schema. See\n <xref linkend=\"ref_guide_schema_info_factory\"/> for details.\n@@ -3382,7 +3382,7 @@ use to store and retrieve information about the database schema. See\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getSchemas\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getSchemas\">\n <methodname>org.apache.openjpa.jdbc.conf.JDBCConfiguration.getSchemas\n </methodname></ulink>\n             </para>\n@@ -3422,7 +3422,7 @@ schemas and/or tables used for your persistent data. See\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getSQLFactory\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getSQLFactory\">\n <methodname>org.apache.openjpa.jdbc.conf.JDBCConfiguration.getSQLFactory\n </methodname></ulink>\n             </para>\n@@ -3436,7 +3436,7 @@ SQLFactory</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n <xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/sql/SQLFactory.html\"><classname>\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/sql/SQLFactory.html\"><classname>\n org.apache.openjpa.jdbc.sql.SQLFactory</classname></ulink> to use to abstract\n common SQL constructs.\n             </para>\n@@ -3472,7 +3472,7 @@ openjpa.jdbc.SubclassFetchMode</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getSubclassFetchMode\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getSubclassFetchMode\">\n <methodname>org.apache.openjpa.jdbc.conf.JDBCConfiguration.getSubclassFetchMode\n </methodname></ulink>\n             </para>\n@@ -3516,7 +3516,7 @@ openjpa.jdbc.SynchronizeMappings</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getSynchronizeMappings\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getSynchronizeMappings\">\n <methodname>\n org.apache.openjpa.jdbc.conf.JDBCConfiguration.getSynchronizeMappings\n </methodname></ulink>\n@@ -3566,7 +3566,7 @@ openjpa.jdbc.TransactionIsolation</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getTransactionIsolation\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getTransactionIsolation\">\n <methodname>\n org.apache.openjpa.jdbc.conf.JDBCConfiguration.getTransactionIsolation\n </methodname></ulink>\n@@ -3613,7 +3613,7 @@ openjpa.jdbc.UpdateManager</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getUpdateManager\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html#getUpdateManager\">\n <methodname>org.apache.openjpa.jdbc.conf.JDBCConfiguration.getUpdateManager\n </methodname></ulink>\n             </para>\n@@ -3626,11 +3626,11 @@ UpdateManager</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> The full class name of the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/kernel/UpdateManager.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/kernel/UpdateManager.html\">\n <classname>org.apache.openjpa.jdbc.kernel.UpdateManager</classname></ulink> to\n use to flush persistent object changes to the datastore. The provided default\n implementation is\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/kernel/OperationOrderUpdateManager\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/kernel/OperationOrderUpdateManager\">\n <classname>org.apache.openjpa.jdbc.kernel.OperationOrderUpdateManager</classname>\n </ulink>.\n             </para>"},{"sha":"5fa6d023ff4e8dc1a4fe97b6788c19795a65e20e","filename":"openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","status":"modified","additions":22,"deletions":22,"changes":44,"blob_url":"https://github.com/apache/openjpa/blob/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","raw_url":"https://github.com/apache/openjpa/raw/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml?ref=17b27d44d0a26ceb91c4494905e2e2660a713309","patch":"@@ -364,7 +364,7 @@ EntityManagerFactory</classname>'s <classname>DataSource</classname>.\n         </para>\n         <para>\n The \n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n <methodname>OpenJPAEntityManager.getConnection</methodname></ulink> method\n returns an <classname>EntityManager</classname>'s connection. If the <classname>\n EntityManager</classname> does not already have a connection, it will obtain\n@@ -455,7 +455,7 @@ configuration properties.\n         <para>\n If OpenJPA cannot detect what type of database you are using, or if you are\n using an unsupported database, you will have to tell OpenJPA what\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/sql/DBDictionary.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/sql/DBDictionary.html\">\n <classname>org.apache.openjpa.jdbc.sql.DBDictionary</classname></ulink> to use.\n The <classname>DBDictionary</classname> abstracts away the differences between\n databases. You can plug a dictionary into OpenJPA using the\n@@ -474,7 +474,7 @@ below. If you are using an unsupported database, you may have to write your own\n                 </indexterm>\n <literal>access</literal>: Dictionary for Microsoft Access. This is an alias\n for the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/sql/AccessDictionary.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/sql/AccessDictionary.html\">\n <classname>org.apache.openjpa.jdbc.sql.AccessDictionary</classname></ulink>\n class.\n                 </para>\n@@ -487,7 +487,7 @@ class.\n                     </primary>\n                 </indexterm>\n <literal>db2</literal>: Dictionary for IBM's DB2 database. This is an alias for\n-the <ulink url=\"../apidocs/org/apache/openjpa/jdbc/sql/DB2Dictionary.html\">\n+the <ulink url=\"../javadoc/org/apache/openjpa/jdbc/sql/DB2Dictionary.html\">\n <classname>org.apache.openjpa.jdbc.sql.DB2Dictionary</classname></ulink> class.\n                 </para>\n             </listitem>\n@@ -500,7 +500,7 @@ the <ulink url=\"../apidocs/org/apache/openjpa/jdbc/sql/DB2Dictionary.html\">\n                 </indexterm>\n <literal>derby</literal>: Dictionary for the Apache Derby database. This is an\n alias for the \n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/sql/DerbyDictionary.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/sql/DerbyDictionary.html\">\n <classname>org.apache.openjpa.jdbc.sql.DerbyDictionary</classname> class.\n </ulink>\n                 </para>\n@@ -514,7 +514,7 @@ alias for the\n                 </indexterm>\n <literal>empress</literal>: Dictionary for Empress database This is an alias\n for the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/sql/EmpressDictionary.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/sql/EmpressDictionary.html\">\n <classname>org.apache.openjpa.jdbc.sql.EmpressDictionary</classname></ulink>\n class.\n                 </para>\n@@ -528,7 +528,7 @@ class.\n                 </indexterm>\n <literal>foxpro</literal>: Dictionary for Microsoft Visual FoxPro. This is an\n alias for the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/sql/FoxProDictionary.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/sql/FoxProDictionary.html\">\n <classname>org.apache.openjpa.jdbc.sql.FoxProDictionary</classname></ulink>\n class.\n                 </para>\n@@ -542,7 +542,7 @@ class.\n                 </indexterm>\n <literal>hsql</literal>: Dictionary for the Hypersonic SQL database. This is an\n alias for the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/sql/HSQLDictionary.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/sql/HSQLDictionary.html\">\n <classname>org.apache.openjpa.jdbc.sql.HSQLDictionary</classname></ulink> class.\n                 </para>\n             </listitem>\n@@ -555,7 +555,7 @@ alias for the\n                 </indexterm>\n <literal>informix</literal>: Dictionary for the Informix database. This is an\n alias for the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/sql/InformixDictionary.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/sql/InformixDictionary.html\">\n <classname>org.apache.openjpa.jdbc.sql.InformixDictionary</classname></ulink>\n class.\n                 </para>\n@@ -569,7 +569,7 @@ class.\n                 </indexterm>\n <literal>jdatastore</literal>: Dictionary for Borland JDataStore. This is an\n alias for the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/sql/JDataStoreDictionary.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/sql/JDataStoreDictionary.html\">\n <classname>org.apache.openjpa.jdbc.sql.JDataStoreDictionary</classname></ulink>\n class.\n                 </para>\n@@ -583,7 +583,7 @@ class.\n                 </indexterm>\n <literal>mysql</literal>: Dictionary for the MySQL database. This is an alias\n for the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/sql/MySQLDictionary.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/sql/MySQLDictionary.html\">\n <classname>org.apache.openjpa.jdbc.sql.MySQLDictionary</classname></ulink>\n class.\n                 </para>\n@@ -596,7 +596,7 @@ class.\n                     </primary>\n                 </indexterm>\n <literal>oracle</literal>: Dictionary for Oracle. This is an alias for the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/sql/OracleDictionary.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/sql/OracleDictionary.html\">\n <classname>org.apache.openjpa.jdbc.sql.OracleDictionary</classname></ulink>\n class.\n                 </para>\n@@ -610,7 +610,7 @@ class.\n                 </indexterm>\n <literal>pointbase</literal>: Dictionary for Pointbase Embedded database. This\n is an alias for the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/sql/PointbaseDictionary.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/sql/PointbaseDictionary.html\">\n <classname>org.apache.openjpa.jdbc.sql.PointbaseDictionary</classname></ulink>\n class.\n                 </para>\n@@ -623,7 +623,7 @@ class.\n                     </primary>\n                 </indexterm>\n <literal>postgres</literal>: Dictionary for PostgreSQL. This is an alias for\n-the <ulink url=\"../apidocs/org/apache/openjpa/jdbc/sql/PostgresDictionary.html\">\n+the <ulink url=\"../javadoc/org/apache/openjpa/jdbc/sql/PostgresDictionary.html\">\n <classname>org.apache.openjpa.jdbc.sql.PostgresDictionary</classname></ulink>\n class.\n                 </para>\n@@ -637,7 +637,7 @@ class.\n                 </indexterm>\n <literal>sqlserver</literal>: Dictionary for Microsoft's SQLServer database.\n This is an alias for the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/sql/SQLServerDictionary.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/sql/SQLServerDictionary.html\">\n <classname>org.apache.openjpa.jdbc.sql.SQLServerDictionary</classname></ulink>\n class.\n                 </para>\n@@ -650,7 +650,7 @@ class.\n                     </primary>\n                 </indexterm>\n <literal>sybase</literal>: Dictionary for Sybase. This is an alias for the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/sql/SybaseDictionary.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/sql/SybaseDictionary.html\">\n <classname>org.apache.openjpa.jdbc.sql.SybaseDictionary</classname></ulink>\n class.\n                 </para>\n@@ -3325,7 +3325,7 @@ Oracle, for example, requires names in all upper case.\n             </indexterm>\n             <para>\n OpenJPA relies on the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/schema/SchemaFactory.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/schema/SchemaFactory.html\">\n <classname>openjpa.jdbc.SchemaFactory</classname></ulink> interface for runtime\n schema information. You can control the schema factory OpenJPA uses through the\n <literal>openjpa.jdbc.SchemaFactory</literal> property. There are several\n@@ -3335,7 +3335,7 @@ built-in options to choose from:\n                 <listitem>\n                     <para>\n <literal>dynamic</literal>: This is the default setting. It is an alias for the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/schema/DynamicSchemaFactory.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/schema/DynamicSchemaFactory.html\">\n <classname>\n org.apache.openjpa.jdbc.schema.DynamicSchemaFactory</classname></ulink>. The \n <classname>DynamicSchemaFactory</classname> is the most performant\n@@ -3350,7 +3350,7 @@ that OpenJPA can order its SQL statements to meet them.\n                 <listitem>\n                     <para>\n <literal>native</literal>: This is an alias for the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/schema/LazySchemaFactory.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/schema/LazySchemaFactory.html\">\n <classname>org.apache.openjpa.jdbc.schema.LazySchemaFactory</classname></ulink>\n . As persistent classes are loaded by the application, OpenJPA reads their\n metadata and object-relational mapping information. This factory uses the\n@@ -3372,7 +3372,7 @@ read foreign key information during schema validation.\n                 <listitem>\n                     <para>\n <literal>table</literal>: This is an alias for the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/schema/TableSchemaFactory.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/schema/TableSchemaFactory.html\">\n <classname>org.apache.openjpa.jdbc.schema.TableSchemaFactory</classname></ulink>\n . This schema factory stores schema information as an XML document in a database\n table it creates for this purpose. If your JDBC driver doesn't support the\n@@ -3407,7 +3407,7 @@ holding the schema definition as an XML string. Defaults to <literal>SCHEMA_DEF\n                 <listitem>\n                     <para>\n <literal>file</literal>: This is an alias for the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/schema/FileSchemaFactory.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/schema/FileSchemaFactory.html\">\n <classname>org.apache.openjpa.jdbc.schema.FileSchemaFactory</classname></ulink>\n . This factory is a lot like the <classname>TableSchemaFactory</classname>, and\n has the same advantages and disadvantages. Instead of storing its XML schema\n@@ -3505,7 +3505,7 @@ schemas.\n         </para>\n         <para>\n You can invoke the schema tool through its Java class, \n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/schema/SchemaTool.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/schema/SchemaTool.html\">\n <classname>org.apache.openjpa.jdbc.schema.SchemaTool</classname></ulink>. In\n addition to the universal flags of the <link linkend=\"ref_guide_conf\">\n configuration framework</link>, the schema tool accepts the following command"},{"sha":"f2a5cb5399a012d5c0af70ddcfa6c02fdc3e51c6","filename":"openjpa-project/src/doc/manual/ref_guide_deploy.xml","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/ref_guide_deploy.xml","raw_url":"https://github.com/apache/openjpa/raw/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/ref_guide_deploy.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_deploy.xml?ref=17b27d44d0a26ceb91c4494905e2e2660a713309","patch":"@@ -39,7 +39,7 @@ The JPA Overview describes the <classname>javax.persistence.Persistence\n <classname>Persistence</classname> to add additional <classname>\n EntityManagerFactory</classname> creation methods. The <classname>\n org.apache.openjpa.persistence.OpenJPAPersistence</classname> class\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAPersistence.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/OpenJPAPersistence.html\">\n Javadoc</ulink> details these extensions.\n             </para>\n             <para>\n@@ -145,7 +145,7 @@ manager for an unrecognized or non-standard application server setup.  This is\n accomplished through the <link linkend=\"openjpa.ManagedRuntime\"><literal>\n openjpa.ManagedRuntime</literal></link> configuration property.  This\n property describes an \n-<ulink url=\"../apidocs/org/apache/openjpa/ee/ManagedRuntime.html\"><classname>\n+<ulink url=\"../javadoc/org/apache/openjpa/ee/ManagedRuntime.html\"><classname>\n org.apache.openjpa.ee.ManagedRuntime</classname></ulink> implementation to use\n for transaction manager discovery.  You can specify your own implementation, \n or use one of the built-ins:\n@@ -154,7 +154,7 @@ or use one of the built-ins:\n \t\t\t<listitem>\n \t\t\t\t<para>\n <literal>auto</literal>: This is the default.  It is an alias for the\n-<ulink url=\"../apidocs/org/apache/openjpa/ee/AutomaticManagedRuntime.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/ee/AutomaticManagedRuntime.html\">\n <classname>org.apache.openjpa.ee.AutomaticManagedRuntime</classname></ulink>\n class.  This managed runtime is able to automatically integrate with several \n common application servers.\n@@ -163,7 +163,7 @@ common application servers.\n \t\t\t<listitem>\n \t\t\t\t<para>\n <literal>invocation</literal>: An alias for the \n-<ulink url=\"../apidocs/org/apache/openjpa/ee/InvocationManagedRuntime.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/ee/InvocationManagedRuntime.html\">\n <classname>org.apache.openjpa.ee.InvocationManagedRuntime</classname></ulink>\n class.  You can configure this runtime to invoke any static\n method in order to obtain the appserver's transaction manager.\n@@ -172,7 +172,7 @@ method in order to obtain the appserver's transaction manager.\n \t\t\t<listitem>\n \t\t\t\t<para>\n <literal>jndi</literal>: An alias for the \n-<ulink url=\"../apidocs/org/apache/openjpa/ee/JNDIManagedRuntime.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/ee/JNDIManagedRuntime.html\">\n <classname>org.apache.openjpa.ee.JNDIManagedRuntime</classname></ulink>\n class.  You can configure this runtime to look up the transaction manager at \n any JNDI location."},{"sha":"9e5d544f662b741a3c2b80966d2bafb569faab04","filename":"openjpa-project/src/doc/manual/ref_guide_integration.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/ref_guide_integration.xml","raw_url":"https://github.com/apache/openjpa/raw/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/ref_guide_integration.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_integration.xml?ref=17b27d44d0a26ceb91c4494905e2e2660a713309","patch":"@@ -79,7 +79,7 @@ environment.\n All OpenJPA tasks accept a nested <literal>config</literal> element, which\n defines the configuration environment in which the specified task will run. The\n attributes for the <literal>config</literal> tag are defined by the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/conf/JDBCConfiguration.html\">\n <classname>JDBCConfiguration</classname></ulink> bean methods. Note that\n excluding the <literal>config</literal> element will cause the Ant task to use\n the default system configuration mechanism, such as the configuration defined in\n@@ -268,7 +268,7 @@ The application identity tool task allows you to invoke the application identity\n tool directly from within the Ant build process. The task's parameters\n correspond exactly to the long versions of the command-line arguments to the\n <link linkend=\"ref_guide_pc_appid_appidtool\"><classname>\n-org.openjpa.enhance.ApplicationIdTool</classname></link>.\n+org.apache.openjpa.enhance.ApplicationIdTool</classname></link>.\n             </para>\n             <para>\n The application identity tool task accepts a nested <literal>fileset</literal>"},{"sha":"2db45e32485522243d5d2c83c71569ae0505816c","filename":"openjpa-project/src/doc/manual/ref_guide_logging.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/ref_guide_logging.xml","raw_url":"https://github.com/apache/openjpa/raw/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/ref_guide_logging.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_logging.xml?ref=17b27d44d0a26ceb91c4494905e2e2660a713309","patch":"@@ -484,7 +484,7 @@ logging to a graphical component for GUI applications.\n         </para>\n         <para>\n A custom logging framework must include an implementation of the\n-<ulink url=\"../apidocs/org/apache/openjpa/lib/log/LogFactory.html\"><classname>\n+<ulink url=\"../javadoc/org/apache/openjpa/lib/log/LogFactory.html\"><classname>\n org.apache.openjpa.lib.log.LogFactory</classname></ulink> interface. We present\n a custom <classname>LogFactory</classname> below.\n         </para>"},{"sha":"bedc8316d68fce153b00f11d333a6efac5cf3432","filename":"openjpa-project/src/doc/manual/ref_guide_mapping.xml","status":"modified","additions":59,"deletions":59,"changes":118,"blob_url":"https://github.com/apache/openjpa/blob/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/ref_guide_mapping.xml","raw_url":"https://github.com/apache/openjpa/raw/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/ref_guide_mapping.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_mapping.xml?ref=17b27d44d0a26ceb91c4494905e2e2660a713309","patch":"@@ -47,7 +47,7 @@ their corresponding database schema from your object featureSelection. OpenJPA supports\n forward mapping through the <emphasis>mapping tool</emphasis>. The next section\n presents several common mapping tool use cases. You can invoke the tool through\n its Java class,\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/meta/MappingTool\"><classname>\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/meta/MappingTool\"><classname>\n org.apache.openjpa.jdbc.meta.MappingTool</classname></ulink>.\n         </para>\n         <note>\n@@ -456,7 +456,7 @@ proper relations between the persistent classes it creates.\n Run the reverse mapping tool on the finished schema file. If you do not supply\n the schema file to reverse map, the tool will run directly against the schema in\n the database. The tool can be run via its Java class,\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/meta/ReverseMappingTool\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/meta/ReverseMappingTool\">\n <classname>org.apache.openjpa.jdbc.meta.ReverseMappingTool</classname></ulink>.\n                 </para>\n                 <example id=\"ref_guide_pc_reverse_reversemappingtool\">\n@@ -606,11 +606,11 @@ OpenJPA is examining.\n                         <para>\n <literal>-customizerClass/-cc &lt;class name&gt;</literal>: The full class name\n of a\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/meta/ReverseCustomizer.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/meta/ReverseCustomizer.html\">\n <classname>org.apache.openjpa.jdbc.meta.ReverseCustomizer</classname></ulink>\n customization plugin. If you do not specify a reverse customizer of your own,\n the system defaults to a\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/meta/PropertiesReverseCustomizer.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/meta/PropertiesReverseCustomizer.html\">\n <classname>PropertiesReverseCustomizer</classname></ulink>. This customizer\n allows you to specify simple customization options in the properties file given\n with the <literal>-customizerProperties</literal> flag below. We present the\n@@ -669,15 +669,15 @@ Your persistent classes are now ready to access your existing schema.\n             <para>\n The <classname>org.apache.openjpa.jdbc.meta.ReverseCustomizer</classname> plugin\n interface allows you to customze the reverse mapping process. See the class\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/meta/ReverseCustomizer.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/meta/ReverseCustomizer.html\">\n Javadoc</ulink> for details on the hooks that this interface provides. Specify\n the concrete plugin implementation to use with the <literal>\n -customizerClass/-cc</literal> command-line flag, described in the preceding\n section.\n             </para>\n             <para>\n By default, the reverse mapping tool uses a\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/meta/PropertiesReverseCustomizer.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/meta/PropertiesReverseCustomizer.html\">\n <classname>org.apache.openjpa.jdbc.meta.PropertiesReverseCustomizer</classname>\n </ulink>. This customizer allows you to perform relatively simple\n customizations through the properties file named with the <literal>\n@@ -912,7 +912,7 @@ database's tools to bring the schema up-to-date.\n The previous sections showed how to use the mapping tool to generate default\n mappings. But how does the mapping tool know what mappings to generate? The\n answer lies in the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/meta/MappingDefaults.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/meta/MappingDefaults.html\">\n <classname>org.apache.openjpa.jdbc.meta.MappingDefaults</classname></ulink>\n interface. OpenJPA uses an instance of this interface to decide how to name\n tables and columns, where to put foreign keys, and generally how to create a\n@@ -941,7 +941,7 @@ OpenJPA includes the following standard implementations:\n                 <para>\n <literal>jpa</literal>: Provides defaults in compliance with the JPA standard.\n This is an alias for the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/PersistenceMappingDefaults.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/PersistenceMappingDefaults.html\">\n <classname>org.apache.openjpa.persistence.jdbc.PersistenceMappingDefaults\n </classname></ulink> class. This class extends the <classname>\n MappingDefaultsImpl</classname> class described below, so it has all the same\n@@ -951,7 +951,7 @@ properties (though with different default values).\n             <listitem>\n                 <para>\n <literal>default</literal>: This is an alias for the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/meta/MappingDefaultsImpl.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/meta/MappingDefaultsImpl.html\">\n <classname>org.apache.openjpa.jdbc.meta.MappingDefaultsImpl</classname></ulink>\n class. This default implementation is highly configurable. It has the following\n properties:\n@@ -973,7 +973,7 @@ classes. You can specify a built-in strategy alias or the full class name of a\n You can also use OpenJPA's plugin format (see\n <xref linkend=\"ref_guide_conf_plugins\"/>) to pass arguments to the\n strategy instance. See the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/meta/strats/package-summary.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/meta/strats/package-summary.html\">\n <literal>org.apache.openjpa.jdbc.meta.strats</literal></ulink> package for\n available strategies.\n                         </para>\n@@ -987,7 +987,7 @@ You can also use OpenJPA's plugin format (see\n <xref linkend=\"ref_guide_conf_plugins\"/>) to pass arguments to the\n strategy instance. Common strategies are <literal>vertical</literal> and\n <literal>flat</literal>, the default. See the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/meta/strats/package-summary.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/meta/strats/package-summary.html\">\n <literal>org.apache.openjpa.jdbc.meta.strats</literal></ulink> package for all\n available strategies.\n                         </para>\n@@ -1002,7 +1002,7 @@ version strategy</link>. You can also use OpenJPA's plugin format (see\n strategy instance. Common strategies are <literal>none</literal>, <literal>\n state-comparison</literal>, <literal> timestamp</literal>, and <literal>\n version-number</literal>, the default. See the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/meta/strats/package-summary.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/meta/strats/package-summary.html\">\n <literal>org.apache.openjpa.jdbc.meta.strats</literal></ulink> package for all\n available strategies.\n                         </para>\n@@ -1019,7 +1019,7 @@ strategy instance. Common strategies are <literal>final</literal> for a base\n class without subclasses, <literal>none</literal> to use joins to subclass\n tables rather than a discriminator column, and <literal> class-name</literal>,\n the default. See the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/meta/strats/package-summary.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/meta/strats/package-summary.html\">\n <literal>org.apache.openjpa.jdbc.meta.strats</literal></ulink> package for all\n available strategies.\n                         </para>\n@@ -1273,7 +1273,7 @@ In a non-primary key join, at least one of the target columns is not a primary\n key. Once again, OpenJPA supports this join type with the same syntax as a\n primary key join. There is one restriction, however: each non-primary key column\n you are joining to must be controlled by a field mapping that implements the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/meta/Joinable.html\"><classname>\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/meta/Joinable.html\"><classname>\n org.apache.openjpa.jdbc.meta.Joinable</classname></ulink> interface. All built\n in basic mappings implement this interface, including basic fields of embedded\n objects. OpenJPA will also respect any custom mappings that implement this\n@@ -1434,7 +1434,7 @@ to map entities using these strategies to the database.\n <xref linkend=\"ref_guide_pc_oid\"/> describes how to use datastore identity\n in JPA. OpenJPA requires a single numeric primary key column to hold datastore\n identity values. The\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/DataStoreIdColumn.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/DataStoreIdColumn.html\">\n <classname>org.apache.openjpa.persistence.jdbc.DataStoreIdColumn</classname>\n </ulink> annotation customizes the datastore identity column. This annotation\n has the following properties:\n@@ -1527,10 +1527,10 @@ public class LogEntry {\n OpenJPA supports version fields as defined by the JPA specification, but allows\n you to use a surrogate version column in place of a version field if you like.\n You map the surrogate version column with the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/VersionColumn.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/VersionColumn.html\">\n <classname>org.apache.openjpa.persistence.jdbc.VersionColumn</classname></ulink>\n annotation. You can also use the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/VersionColumns.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/VersionColumns.html\">\n <classname>org.apache.openjpa.persistence.jdbc.VersionColumns</classname>\n </ulink> annotation to declare an array of <classname>VersionColumn</classname>\n values. Each <classname>VersionColumn</classname> has the following properties:\n@@ -1623,7 +1623,7 @@ OpenJPA makes it easy to create multi-column\n specification includes a <classname>Column</classname> annotation, but is\n missing a way to declare multiple columns for a single field. OpenJPA remedies\n this with the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/Columns.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/Columns.html\">\n <classname>org.apache.openjpa.persistence.jdbc.Columns</classname></ulink>\n annotation, which contains an array of <classname>Column</classname> values.\n             </para>\n@@ -1652,7 +1652,7 @@ OpenJPA rectifies this by allowing you to declare which <emphasis>attribute\n </emphasis> in the related type each join column links to, rather than which\n column. If the attribute is mapped differently in various subclass tables,\n OpenJPA automatically forms the proper join for the subclass record at hand. The\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/XJoinColumn.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/XJoinColumn.html\">\n <classname>org.apache.openjpa.persistence.jdbc.XJoinColumn</classname></ulink>\n annotation has all the same properties as the standard <classname>JoinColumn\n </classname> annotation, but adds an additional <literal>\n@@ -1662,7 +1662,7 @@ referencedAttributeName</literal> property for this purpose. Simply use a\n             </para>\n             <para>\n For compound keys, use the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/XJoinColumns.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/XJoinColumns.html\">\n <classname>org.apache.openjpa.persistence.jdbc.XJoinColumns</classname></ulink>\n annotation. The value of this annotation is an array of individual <classname>\n XJoinColumn</classname>s.\n@@ -1682,7 +1682,7 @@ a null embedded object and one with default values for all of its fields.\n             </para>\n             <para>\n OpenJPA overcomes these shortcomings with the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/EmbeddedMapping.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/EmbeddedMapping.html\">\n <classname>org.apache.openjpa.persistence.jdbc.EmbeddedMapping</classname>\n </ulink> annotation. This annotation has the following properties:\n             </para>\n@@ -1734,7 +1734,7 @@ allows you to overide multiple mapped superclass mappings.\n             </para>\n             <para>\n Each\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/MappingOverride.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/MappingOverride.html\">\n <classname>org.apache.openjpa.persistence.jdbc.MappingOverride</classname>\n </ulink> annotation has the following properties:\n             </para>\n@@ -1853,7 +1853,7 @@ We explore the annotations below.\n                 </indexterm>\n                 <para>\n The\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/ContainerTable.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/ContainerTable.html\">\n <classname>org.apache.openjpa.persistence.jdbc.ContainerTable</classname>\n </ulink> annotation describes a database table that holds collection (or map)\n elements. This annotation has the following properties:\n@@ -1924,11 +1924,11 @@ of the next sections.\n Element join columns are equivalent to standard JPA join columns, except that\n they represent a join to a collection or map element entity rather than a direct\n relation. You represent an element join column with OpenJPA's\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/ElementJoinColumn.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/ElementJoinColumn.html\">\n <classname>org.apache.openjpa.persistence.jdbc.ElementJoinColumn</classname>\n </ulink> annotation. To declare a compound join, enclose an array of <classname>\n ElementJoinColumn</classname>s in the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/ElementJoinColumns.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/ElementJoinColumns.html\">\n <classname>org.apache.openjpa.persistence.jdbc.ElementJoinColumns</classname>\n </ulink> annotation.\n                 </para>\n@@ -1961,7 +1961,7 @@ Relational databases do not guarantee that records are returned in insertion\n order. If you want to make sure that your collection elements are loaded in the\n same order they were in when last stored, you must declare an order column.\n OpenJPA's\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/OrderColumn\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/OrderColumn\">\n <classname>org.apache.openjpa.persistence.jdbc.OrderColumn</classname></ulink>\n annotation has the following properties:\n                 </para>\n@@ -2138,13 +2138,13 @@ presented in the following sections.\n                     </primary>\n                 </indexterm>\n                 <para>\n-The <ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/Index.html\">\n+The <ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/Index.html\">\n <classname>org.apache.openjpa.persistence.jdbc.Index</classname></ulink>\n annotation represents an index on the columns of a field. It is also used within\n the <link linkend=\"ref_guide_mapping_jpa_coll_table\"><classname>ContainerTable\n </classname></link> annotation to index join columns.\n To index the columns of a collection element, use the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/ElementIndex.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/ElementIndex.html\">\n <classname> org.apache.openjpa.persistence.jdbc.ElementIndex</classname></ulink>\n annotation. These annotations have the following properties:\n                 </para>\n@@ -2188,14 +2188,14 @@ to false.\n                     </primary>\n                 </indexterm>\n                 <para>\n-The <ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/ForeignKey.html\">\n+The <ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/ForeignKey.html\">\n <classname>org.apache.openjpa.persistence.jdbc.ForeignKey</classname></ulink>\n annotation represents a foreign key on the columns of a field. It is also used\n within the <link linkend=\"ref_guide_mapping_jpa_coll_table\"><classname>\n ContainerTable</classname></link> annotation to set a database foreign key on\n join columns.  To set a constraint to the columns of a collection element, use \n the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/ElementForeignKey.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/ElementForeignKey.html\">\n <classname> org.apache.openjpa.persistence.jdbc.ElementForeignKey</classname>\n </ulink> annotation. These annotations have the following properties:\n                 </para>\n@@ -2222,7 +2222,7 @@ supported by the database.\n                     <listitem>\n                         <para>\n <literal>ForeignKeyAction deleteAction</literal>: Value from the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/ForeignKeyAction.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/ForeignKeyAction.html\">\n <classname>org.apache.openjpa.persistence.jdbc.ForeignKeyAction</classname>\n </ulink> enum identifying the desired delete action. Defaults to <literal>\n RESTRICT</literal>.\n@@ -2231,7 +2231,7 @@ RESTRICT</literal>.\n                     <listitem>\n                         <para>\n <literal>ForeignKeyAction updateAction</literal>: Value from the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/ForeignKeyAction.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/ForeignKeyAction.html\">\n <classname>org.apache.openjpa.persistence.jdbc.ForeignKeyAction</classname>\n </ulink> enum identifying the desired update action. Defaults to <literal>\n RESTRICT</literal>.\n@@ -2266,7 +2266,7 @@ to discover existing foreign keys (see\n                     </primary>\n                 </indexterm>\n                 <para>\n-The <ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/Unique.html\">\n+The <ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/Unique.html\">\n <classname>org.apache.openjpa.persistence.jdbc.Unique</classname></ulink>\n annotation represents a unqiue constraint on the columns of a field. It is more\n convenient than using the <literal>uniqueConstraints</literal> property of\n@@ -2408,10 +2408,10 @@ OpenJPA recognizes the following class extensions.\n This extension specifies how to eagerly fetch subclass state. It overrides the\n global <link linkend=\"openjpa.jdbc.SubclassFetchMode\"><literal>\n openjpa.jdbc.SubclassFetchMode</literal></link> property. Set the JPA\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/SubclassFetchMode.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/SubclassFetchMode.html\">\n <classname>org.apache.openjpa.persistence.jdbc.SubclassFetchMode</classname>\n </ulink> annotation to a value from the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/EagerFetchType.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/EagerFetchType.html\">\n <classname>org.apache.openjpa.persistence.jdbc.EagerFetchType</classname>\n </ulink> enum: <literal>JOIN</literal>, <literal>PARALLEL</literal>, or\n <literal>NONE</literal>. See <xref linkend=\"ref_guide_perfpack_eager\"/>\n@@ -2437,7 +2437,7 @@ openjpa.jdbc.SubclassFetchMode</literal></link> property. Set the JPA\n                     </seealso>\n                 </indexterm>\n                 <para>\n-The <ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/Strategy.html\">\n+The <ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/Strategy.html\">\n <classname>org.apache.openjpa.persistence.jdbc.Strategy</classname></ulink>\n class annotation allows you to specify a custom mapping strategy for your class.\n See <xref linkend=\"ref_guide_mapping_custom\"/> for information on custom\n@@ -2464,7 +2464,7 @@ mappings.\n                 </indexterm>\n                 <para>\n The\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/DiscriminatorStrategy.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/DiscriminatorStrategy.html\">\n <classname>org.apache.openjpa.persistence.jdbc.DiscriminatorStrategy</classname>\n </ulink> class annotation allows you to specify a custom discriminator strategy.\n See <xref linkend=\"ref_guide_mapping_custom\"/> for information on custom\n@@ -2491,7 +2491,7 @@ mappings.\n                 </indexterm>\n                 <para>\n The\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/VersionStrategy.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/VersionStrategy.html\">\n <classname>org.apache.openjpa.persistence.jdbc.VersionStrategy</classname>\n </ulink> class annotation allows you to specify a custom version strategy. See\n <xref linkend=\"ref_guide_mapping_custom\"/> for information on custom\n@@ -2528,10 +2528,10 @@ OpenJPA recognizes the following field extensions.\n This extension specifies how to eagerly fetch related objects. It overrides the\n global <link linkend=\"openjpa.jdbc.EagerFetchMode\"><literal>\n openjpa.jdbc.EagerFetchMode</literal></link> property. Set the JPA\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/EagerFetchMode.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/EagerFetchMode.html\">\n <classname>org.apache.openjpa.persistence.jdbc.EagerFetchMode</classname>\n </ulink> annotation to a value from the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/EagerFetchType.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/EagerFetchType.html\">\n <classname>org.apache.openjpa.persistence.jdbc.EagerFetchType</classname>\n </ulink> enum: <literal>JOIN</literal>, <literal>PARALLEL</literal>, or\n <literal>NONE</literal>. See <xref linkend=\"ref_guide_perfpack_eager\"/>\n@@ -2574,22 +2574,22 @@ OpenJPA defines the following extensions for nonpolymorphic values:\n                 <itemizedlist>\n                     <listitem>\n                         <para>\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/Nonpolymorphic.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/Nonpolymorphic.html\">\n <classname>org.apache.openjpa.persistence.jdbc.Nonpolymorphic</classname>\n </ulink>\n                         </para>\n                     </listitem>\n                     <listitem>\n                         <para>\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/ElementNonpolymorphic.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/ElementNonpolymorphic.html\">\n <classname>org.apache.openjpa.persistence.jdbc.ElementNonpolymorphic</classname>\n </ulink>\n                         </para>\n                     </listitem>\n                 </itemizedlist>\n                 <para>\n The value of these extensions is a constant from the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/NonpolymorphicType.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/NonpolymorphicType.html\">\n <classname>org.apache.openjpa.persistence.jdbc.NonpolymorphicType</classname>\n </ulink> enumeration. The default value, <literal>EXACT</literal>, indicates\n that the relation will always be of the exact declared type. A value of\n@@ -2642,13 +2642,13 @@ array or collection element relations, respectively:\n                 <itemizedlist>\n                     <listitem>\n                         <para>\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/ClassCriteria.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/ClassCriteria.html\">\n <classname>org.apache.openjpa.persistence.jdbc.ClassCriteria</classname></ulink>\n                         </para>\n                     </listitem>\n                     <listitem>\n                         <para>\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/ElementClassCriteria.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/ElementClassCriteria.html\">\n <classname>org.apache.openjpa.persistence.jdbc.ElementClassCriteria</classname>\n </ulink>\n                         </para>\n@@ -2675,7 +2675,7 @@ array or collection element relations, respectively:\n                 </indexterm>\n                 <para>\n OpenJPA's \n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/Strategy.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/Strategy.html\">\n <classname>org.apache.openjpa.persistence.jdbc.Strategy</classname></ulink>\n extension allows you to specify a custom mapping\n strategy or value handler for a field. See\n@@ -2717,14 +2717,14 @@ strategies.\n             </title>\n             <para>\n To create a custom class mapping, write an implementation of the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/meta/ClassStrategy.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/meta/ClassStrategy.html\">\n <classname>org.apache.openjpa.jdbc.meta.ClassStrategy</classname></ulink>\n interface. You will probably want to extend one of the existing abstract or\n concrete strategies in the <literal>org.apache.openjpa.jdbc.meta.strats\n </literal> package.\n             </para>\n             <para>\n-The <ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/Strategy.html\">\n+The <ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/Strategy.html\">\n <classname>org.apache.openjpa.persistence.jdbc.Strategy</classname></ulink>\n annotation allows you to declare a custom class mapping strategy in JPA mapping\n metadata. Set the value of the annotation to the full class name of your custom\n@@ -2738,21 +2738,21 @@ OpenJPA's plugin syntax, detailed in <xref linkend=\"ref_guide_conf_plugins\"/>.\n             </title>\n             <para>\n To define a custom discriminator or version strategy, implement the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/meta/DiscriminatorStrategy.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/meta/DiscriminatorStrategy.html\">\n <classname>org.apache.openjpa.jdbc.meta.DiscriminatorStrategy</classname>\n </ulink> or\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/meta/VersionStrategy.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/meta/VersionStrategy.html\">\n <classname>org.apache.openjpa.jdbc.meta.VersionStrategy</classname></ulink>\n interface, respectively. You might extend one of the existing abstract or\n concrete strategies in the <literal>org.apache.openjpa.jdbc.meta.strats\n </literal> package.\n             </para>\n             <para>\n OpenJPA includes the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/DiscriminatorStrategy.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/DiscriminatorStrategy.html\">\n <classname>org.apache.openjpa.persistence.jdbc.DiscriminatorStrategy</classname>\n </ulink> and\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/VersionStrategy.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/VersionStrategy.html\">\n <classname>org.apache.openjpa.persistence.jdbc.VersionStrategy</classname>\n </ulink> class annotations for declaring a custom discriminator or version\n strategy in JPA mapping metadata. Set the string value of these annotations to\n@@ -2802,7 +2802,7 @@ sections examine each.\n Value handlers make it trivial to map any type that you can break down into one\n or more simple values. All value handlers implement the <classname>\n org.apache.openjpa.jdbc.meta.ValueHandler</classname> interface; see its\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/meta/ValueHandler.html\"> Javadoc\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/meta/ValueHandler.html\"> Javadoc\n </ulink> for details.  Also, examine the built-in handlers in the <filename>\n src/openjpa/jdbc/meta/strats</filename> directory of your OpenJPA source \n distribution.  Use these functional implementations as examples when you \n@@ -2826,7 +2826,7 @@ create your own value handlers.\n                 </indexterm>\n                 <para>\n OpenJPA interacts with persistent fields through the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/meta/FieldStrategy\"><classname>\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/meta/FieldStrategy\"><classname>\n org.apache.openjpa.jdbc.meta.FieldStrategy</classname></ulink> interface. You\n can implement this interface yourself to create a custom field strategy, or\n extend one of the existing abstract or concrete strategies in the <literal>\n@@ -2865,7 +2865,7 @@ defaults in detail.\n Your other option is to explicitly install a custom value handler or strategy on\n a particular field. To do so, specify the full name of your implementation class\n in the proper mapping metadata extension. OpenJPA includes the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/Strategy.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/Strategy.html\">\n <classname>org.apache.openjpa.persistence.jdbc.Strategy</classname></ulink>\n annotation. You can configure the named strategy or handler's bean\n properties in these extensions using OpenJPA's plugin format (see\n@@ -2899,7 +2899,7 @@ openjpa.OrphanedKeyAction</literal></link> configuration property controls what\n action to take when OpenJPA encounters an orphaned key. You can set this plugin\n string (see <xref linkend=\"ref_guide_conf_plugins\"/>) to a custom\n implementation of the\n-<ulink url=\"../apidocs/org/apache/openjpa/event/OrphanedKeyAction.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/event/OrphanedKeyAction.html\">\n <classname> org.apache.openjpa.event.OrphanedKeyAction</classname></ulink>\n interface, or use one of the built-in options:\n         </para>\n@@ -2908,7 +2908,7 @@ interface, or use one of the built-in options:\n                 <para>\n <literal>log</literal>: This is the default setting. This option logs a message\n for each orphaned key. It is an alias for the\n-<ulink url=\"../apidocs/org/apache/openjpa/event/LogOrphanedKeyAction.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/event/LogOrphanedKeyAction.html\">\n <classname>org.apache.openjpa.event.LogOrphanedKeyAction</classname></ulink>\n class, which has the following additional properties:\n                 </para>\n@@ -2932,15 +2932,15 @@ openjpa.Runtime</literal>.\n <literal>exception</literal>: Throw an <classname>\n EntityNotFoundException</classname> when OpenJPA discovers an\n orphaned key. This is an alias for the\n-<ulink url=\"../apidocs/org/apache/openjpa/event/ExceptionOrphanedKeyAction.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/event/ExceptionOrphanedKeyAction.html\">\n <classname>org.apache.openjpa.event.ExceptionOrphanedKeyAction</classname>\n </ulink> class.\n                 </para>\n             </listitem>\n             <listitem>\n                 <para>\n <literal>none</literal>: Ignore orphaned keys. This is an alias for the\n-<ulink url=\"../apidocs/org/apache/openjpa/event/NoneOrphanedKeyAction.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/event/NoneOrphanedKeyAction.html\">\n <classname>org.apache.openjpa.event.NoneOrphanedKeyAction</classname></ulink>\n class.\n                 </para>"},{"sha":"81c5622c847a007d0b6e9287e421ef4468ca8635","filename":"openjpa-project/src/doc/manual/ref_guide_meta.xml","status":"modified","additions":23,"deletions":23,"changes":46,"blob_url":"https://github.com/apache/openjpa/blob/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/ref_guide_meta.xml","raw_url":"https://github.com/apache/openjpa/raw/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/ref_guide_meta.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_meta.xml?ref=17b27d44d0a26ceb91c4494905e2e2660a713309","patch":"@@ -26,7 +26,7 @@ The <link linkend=\"openjpa.MetaDataFactory\"><literal>openjpa.MetaDataFactory\n </literal></link> configuration property controls metadata loading and storing.\n This property takes a plugin string (see \n <xref linkend=\"ref_guide_conf_plugins\"/>) describing a concrete\n-<ulink url=\"../apidocs/org/apache/openjpa/meta/MetaDataFactory.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/meta/MetaDataFactory.html\">\n <classname>org.apache.openjpa.meta.MetaDataFactory</classname></ulink>\n implementation. A metadata factory can load mapping information as well as\n persistence metadata, or it can leave mapping information to a separate\n@@ -38,7 +38,7 @@ following built-in metadata factories:\n             <listitem>\n                 <para>\n <literal>jpa</literal>: Standard JPA metadata. This is an alias for the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/PersistenceMetaDataFactory.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/PersistenceMetaDataFactory.html\">\n <classname> \n org.apache.openjpa.persistence.PersistenceMetaDataFactory</classname></ulink>.\n                 </para>\n@@ -175,7 +175,7 @@ JPA defines <literal>Basic</literal>, <literal>Lob</literal>, <literal>Embedded\n </literal>, <literal>ManyToOne</literal>, and <literal>OneToOne</literal>\n persistence strategies for direct field values. OpenJPA supports all of these\n standard strategies, but adds one of its own: <literal>Persistent</literal>.\n-The <ulink url=\"../apidocs/org/apache/openjpa/persistence/Persistent.html\">\n+The <ulink url=\"../javadoc/org/apache/openjpa/persistence/Persistent.html\">\n <classname>org.apache.openjpa.persistence.Persistent</classname></ulink>\n metadata annotation can represent any direct field value, including custom\n types. It has the following properties:\n@@ -241,7 +241,7 @@ JPA standardizes support for collections of entities with the <literal>\n OneToMany</literal> and <literal>ManyToMany</literal> persistence strategies.  \n OpenJPA supports these strategies, and may be extended for other strategies as \n well.  For extended strategies, use the \n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/PersistentCollection.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/PersistentCollection.html\">\n <classname>kodo.persistence.PersistentCollection</classname></ulink> metadata \n annotation to represents any persistent collection field.  It has the following\n properties:\n@@ -297,7 +297,7 @@ ManyToMany</classname></link>. Defaults to empty array.\n \t\t\t<para>\n JPA has limited support for maps.  If you extend JPA's standard map support to \n encompass new mappings, use the \n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/PersistentMap.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/PersistentMap.html\">\n <classname>kodo.persistence.PersistentMap</classname></ulink> metadata \n annotation to represent your custom persistent map fields.  It has the \n following properties:\n@@ -403,9 +403,9 @@ OpenJPA recognizes the following class extensions:\n                     </seealso>\n                 </indexterm>\n                 <para>\n-The <ulink url=\"../apidocs/org/apache/openjpa/persistence/FetchGroups.html\">\n+The <ulink url=\"../javadoc/org/apache/openjpa/persistence/FetchGroups.html\">\n <classname>org.apache.openjpa.persistence.FetchGroups</classname></ulink> and\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/FetchGroup.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/FetchGroup.html\">\n <classname>org.apache.openjpa.persistence.FetchGroup</classname></ulink>\n annotations allow you to define fetch groups in your JPA entities.\n <xref linkend=\"ref_guide_fetch\"/> discusses OpenJPA's support for fetch\n@@ -437,7 +437,7 @@ extensions allow individual classes to override system caching defaults.\n                 </para>\n                 <para>\n OpenJPA defines the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/DataCache.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/DataCache.html\">\n <classname>org.apache.openjpa.persistence.DataCache</classname></ulink>\n annotation for caching information. This annotation has the following\n properties:\n@@ -491,7 +491,7 @@ modifications.\n                 </para>\n                 <para>\n OpenJPA defines the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/DetachedState.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/DetachedState.html\">\n <classname>org.apache.openjpa.persistence.DetachedState</classname></ulink>\n annotation for controlling detached state. When used to annotate a class,\n <classname>DetachedState</classname> recognizes the following properties:\n@@ -564,21 +564,21 @@ JPA entities:\n                 <itemizedlist>\n                     <listitem>\n                         <para>\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/Dependent.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/Dependent.html\">\n <classname> org.apache.openjpa.persistence.Dependent</classname></ulink>: Marks\n a direct relation as dependent.\n                         </para>\n                     </listitem>\n                     <listitem>\n                         <para>\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/ElementDependent.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/ElementDependent.html\">\n <classname> org.apache.openjpa.persistence.ElementDependent</classname></ulink>\n : Marks the entity elements of a collection, array, or map field as dependent.\n                         </para>\n                     </listitem>\n                     <listitem>\n                         <para>\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/KeyDependent.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/KeyDependent.html\">\n <classname> org.apache.openjpa.persistence.KeyDependent</classname></ulink>:\n Marks the key entities in a map field as dependent.\n                         </para>\n@@ -609,7 +609,7 @@ Marks the key entities in a map field as dependent.\n                     </secondary>\n                 </indexterm>\n                 <para>\n-The <ulink url=\"../apidocs/org/apache/openjpa/persistence/LoadFetchGroup.html\">\n+The <ulink url=\"../javadoc/org/apache/openjpa/persistence/LoadFetchGroup.html\">\n <classname>org.apache.openjpa.persistence.LoadFetchGroup</classname></ulink>\n annotation specifies a field's load fetch group.\n <xref linkend=\"ref_guide_fetch\"/> discusses OpenJPA's support for fetch groups\n@@ -637,7 +637,7 @@ annotation in particular.\n                 </indexterm>\n                 <para>\n This boolean extension, denoted by the OpenJPA\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/LRS.html\"><classname>\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/LRS.html\"><classname>\n org.apache.openjpa.persistence.LRS</classname></ulink> annotation,\n indicates that a field should use OpenJPA's special large result set collection\n or map proxies. A complete description of large result set proxies is available\n@@ -665,7 +665,7 @@ in <xref linkend=\"ref_guide_pc_scos_proxy_lrs\"/>.\n                 <para>\n This extension names the inverse field in a logical bidirectional relation.\n To create a logical bidrectional relation in OpenJPA, use the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/InverseLogical.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/InverseLogical.html\">\n <classname>org.apache.openjpa.persistence.InverseLogical</classname></ulink>\n annotation. We discuss logical bidirectional relations and this\n extension in detail in <xref linkend=\"ref_guide_inverses\"/>.\n@@ -703,10 +703,10 @@ existing persistent objects; new object fields are always writeable.\n                 </para>\n                 <para>\n To mark a field read-only in JPA metadata, set the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/ReadOnly.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/ReadOnly.html\">\n <classname>org.apache.openjpa.persistence.ReadOnly</classname></ulink>\n annotation to an\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/UpdateAction.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/UpdateAction.html\">\n <classname>org.apache.openjpa.persistence.UpdateAction</classname></ulink> enum\n value. The <classname>UpdateAction</classname> enum includes:\n                 </para>\n@@ -804,19 +804,19 @@ array, and map elements, and map keys, respectively:\n                 <itemizedlist>\n                     <listitem>\n                         <para>\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/Type.html\"><classname>\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/Type.html\"><classname>\n org.apache.openjpa.persistence.Type</classname></ulink>\n                         </para>\n                     </listitem>\n                     <listitem>\n                         <para>\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/ElementType.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/ElementType.html\">\n <classname>org.apache.openjpa.persistence.ElementType</classname></ulink>\n                         </para>\n                     </listitem>\n                     <listitem>\n                         <para>\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/KeyType.html\"><classname>\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/KeyType.html\"><classname>\n org.apache.openjpa.persistence.KeyType</classname></ulink>\n                         </para>\n                     </listitem>\n@@ -842,7 +842,7 @@ org.apache.openjpa.persistence.KeyType</classname></ulink>\n                 </indexterm>\n                 <para>\n The OpenJPA\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/Externalizer.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/Externalizer.html\">\n <classname>org.apache.openjpa.persistence.Externalizer</classname></ulink>\n annotation names a method to transform a field value into a value of\n another type. See <xref linkend=\"ref_guide_pc_extern\"/> for details.\n@@ -868,7 +868,7 @@ another type. See <xref linkend=\"ref_guide_pc_extern\"/> for details.\n                 </indexterm>\n                 <para>\n The OpenJPA\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/Factory.html\"><classname>\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/Factory.html\"><classname>\n org.apache.openjpa.persistence.Factory</classname></ulink> annotation\n names a method to re-create a field value from its externalized form. See\n <xref linkend=\"ref_guide_pc_extern\"/> for details.\n@@ -894,7 +894,7 @@ names a method to re-create a field value from its externalized form. See\n                 </indexterm>\n                 <para>\n The OpenJPA\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/ExternalValues.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/ExternalValues.html\">\n <classname>org.apache.openjpa.persistence.ExternalValues</classname></ulink>\n annotation declares values for transformation of simple fields to\n different constant values in the datastore. See"},{"sha":"4d0dc7bea0960b061bd01d0603d6a9159011e4e8","filename":"openjpa-project/src/doc/manual/ref_guide_optimization.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/ref_guide_optimization.xml","raw_url":"https://github.com/apache/openjpa/raw/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/ref_guide_optimization.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_optimization.xml?ref=17b27d44d0a26ceb91c4494905e2e2660a713309","patch":"@@ -134,7 +134,7 @@ features in a transaction that will delete, modify, or create a very large\n number of objects you can set <literal>LargeTransaction</literal> to true and \n perform periodic flushes during your transaction to reduce its memory \n requirements.  See the Javadoc: \n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n OpenJPAEntityManager.setLargeTransaction</ulink>.  Note that transactions in \n large mode have to more aggressively flush items from the data cache.\n                         <para>\n@@ -143,7 +143,7 @@ accessed by other transactions, for example an exhaustive report run only once a\n month, you can turn off population of the data cache so that the transaction\n doesn't fill the entire data cache with objects that won't be accessed again.\n Again, see the Javadoc: \n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n OpenJPAEntityManager.setPopulateDataCache</ulink>\n                         </para>\n                     </entry>"},{"sha":"149fd541c438c97ce946a8b69039fd156b220941","filename":"openjpa-project/src/doc/manual/ref_guide_pc.xml","status":"modified","additions":19,"deletions":19,"changes":38,"blob_url":"https://github.com/apache/openjpa/blob/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/ref_guide_pc.xml","raw_url":"https://github.com/apache/openjpa/raw/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/ref_guide_pc.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_pc.xml?ref=17b27d44d0a26ceb91c4494905e2e2660a713309","patch":"@@ -396,7 +396,7 @@ persistent objects for you through a surrogate key in the database.\n         <para>\n You can control how your JPA datastore identity value is generated through\n OpenJPA's\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/DataStoreId.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/DataStoreId.html\">\n <classname>org.apache.openjpa.persistence.DataStoreId</classname></ulink> class\n annotation. This annotation has <literal>strategy</literal> and <literal>\n generator</literal> properties that mirror the same-named properties on the\n@@ -438,7 +438,7 @@ public class LineItem {\n             </indexterm>\n             <para>\n Internally, OpenJPA uses the public\n-<ulink url=\"../apidocs/org/apache/openjpa/util/Id.html\"><classname>\n+<ulink url=\"../javadoc/org/apache/openjpa/util/Id.html\"><classname>\n org.apache.openjpa.util.Id</classname></ulink> class for datastore identity\n objects. When writing OpenJPA plugins, you can manipulate datastore identity\n objects by casting them to this class. You can also create your own <classname>\n@@ -499,7 +499,7 @@ class code, you can set the <literal>@IdClass</literal> annotation.\n             </para>\n             <para>\n The application identity tool can be invoked via its Java class,\n-<ulink url=\"../apidocs/org/apache/openjpa/enhance/ApplicationIdTool\">\n+<ulink url=\"../javadoc/org/apache/openjpa/enhance/ApplicationIdTool\">\n <classname>org.apache.openjpa.enhance.ApplicationIdTool</classname></ulink>.\n             </para>\n             <note>\n@@ -673,7 +673,7 @@ relations that also share datastore storage in JPA.\n         </para>\n         <para>\n OpenJPA also allows you to define purely logical bidirectional relations.  The\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/InverseLogical.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/InverseLogical.html\">\n <classname>org.apache.openjpa.persistence.InverseLogical</classname></ulink>\n annotation names a logical inverse in JPA metadata.\n         </para>\n@@ -1015,7 +1015,7 @@ collection and map methods, and to update the field's database record on commit.\n                 </para>\n                 <para>\n In order to use large result set proxies in JPA, add the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/LRS.html\"><classname>\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/LRS.html\"><classname>\n org.apache.openjpa.persistence.LRS</classname></ulink> annotation to the\n persistent field.\n                 </para>\n@@ -1090,7 +1090,7 @@ public class Company {\n                 </indexterm>\n                 <para>\n OpenJPA manages proxies through the\n-<ulink url=\"../apidocs/org/apache/openjpa/util/ProxyManager.html\"><classname>\n+<ulink url=\"../javadoc/org/apache/openjpa/util/ProxyManager.html\"><classname>\n org.apache.openjpa.util.ProxyManager</classname></ulink> interface. OpenJPA\n includes a default proxy manager, the <classname>\n org.apache.openjpa.util.ProxyManagerImpl</classname> (with a plugin alias name\n@@ -1109,7 +1109,7 @@ default proxy manager understands the following configuration properties:\n                 <para>\n For custom behavior, OpenJPA allows you to define your own proxy classes, and\n your own proxy manager. See the <literal>openjpa.util</literal> package\n-<ulink url=\"../apidocs/\">Javadoc</ulink> for details on the interfaces involved,\n+<ulink url=\"../javadoc/\">Javadoc</ulink> for details on the interfaces involved,\n and the utility classes OpenJPA provides to assist you.\n                 </para>\n                 <para>\n@@ -1166,14 +1166,14 @@ JPA cannot have externalizers.\n             </note>\n             <para>\n The OpenJPA\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/Externalizer.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/Externalizer.html\">\n <classname>org.apache.openjpa.persistence.Externalizer</classname></ulink>\n annotation sets the name of a method that will be invoked to convert\n the field into its external form for database storage. You can specify either\n the name of a non-static method, which will be invoked on the field value, or a\n static method, which will be invoked with the field value as a parameter. Each\n method can also take an optional\n-<ulink url=\"../apidocs/org/apache/openjpa/kernel/StoreContext.html\"><classname>\n+<ulink url=\"../javadoc/org/apache/openjpa/kernel/StoreContext.html\"><classname>\n StoreContext</classname></ulink> parameter for access to a persistence context.\n The return value of the method is the field's external form. By default, OpenJPA\n assumes that all named methods belong to the field value's class (or its\n@@ -1258,13 +1258,13 @@ public static String AnyClass.toString(CustomType ct, StoreContext ctx)\n             </table>\n             <para>\n The OpenJPA\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/Factory.html\"><classname>\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/Factory.html\"><classname>\n org.apache.openjpa.persistence.Factory</classname></ulink> annotation\n contains the name of a method that will be invoked to instantiate the field from\n the external form stored in the database. Specify a static method name. The\n method will will be invoked with the externalized value and must return an\n instance of the field type. The method can also take an optional\n-<ulink url=\"../apidocs/org/apache/openjpa/kernel/StoreContext.html\"><classname>\n+<ulink url=\"../javadoc/org/apache/openjpa/kernel/StoreContext.html\"><classname>\n StoreContext</classname></ulink> parameter for access to a persistence context.\n If a factory is not specified, OpenJPA will use the constructor of the field\n type that takes a single argument of the external type, or will throw an\n@@ -1366,7 +1366,7 @@ If your custom field type is mutable and is not a standard collection, map, or\n date class, OpenJPA will not be able to detect changes to the field. You must\n mark the field dirty manually, or create a custom field proxy.\n See\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n <methodname>OpenJPAEntityManager.dirty</methodname></ulink> for how to mark a\n field dirty manually in JPA.\n See <xref linkend=\"ref_guide_pc_scos_proxy\"/> for a discussion of proxies.\n@@ -1498,7 +1498,7 @@ primitive wrappers, and Strings), to other pre-defined simple values.\n                 </para>\n                 <para>\n Use the OpenJPA\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/ExternalValues.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/ExternalValues.html\">\n <classname>org.apache.openjpa.persistence.ExternalValues</classname></ulink>\n annotation to define external value translations. The values are\n defined in a format similar to that of <link linkend=\"ref_guide_conf_plugins\">\n@@ -1510,7 +1510,7 @@ true=T,false=F</literal>.\n                 </para>\n                 <para>\n If the type of the datastore value is different from the field's type, use the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/Type.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/Type.html\">\n <classname>org.apache.openjpa.persistence.Type</classname></ulink> annotation\n to define the datastore type.\n                 </para>\n@@ -1572,11 +1572,11 @@ active fetch groups when loading objects from the datastore.\n             </para>\n             <para>\n You create fetch groups with the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/FetchGroup.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/FetchGroup.html\">\n <classname>org.apache.openjpa.persistence.FetchGroup</classname></ulink>\n annotation. If your class only has one custom fetch group, you can place this\n annotation directly on the class declaration. Otherwise, use the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/FetchGroups.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/FetchGroups.html\">\n <classname>org.apache.openjpa.persistence.FetchGroups</classname></ulink>\n annotation to declare an array of individual <classname>FetchGroup</classname>\n values. The <classname>FetchGroup</classname> annotation has the following\n@@ -1615,7 +1615,7 @@ include in this group.\n             </itemizedlist>\n             <para>\n As you might expect, listing a\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/FetchAttribute.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/FetchAttribute.html\">\n <classname>org.apache.openjpa.persistence.FetchAttribute</classname></ulink>\n within a <classname>FetchGroup</classname> includes the corresponding persistent\n field or property in the fetch group. Each <classname>FetchAttribute</classname>\n@@ -1681,7 +1681,7 @@ accessed.\n             </para>\n             <para>\n Use OpenJPA's\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/LoadFetchGroup.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/LoadFetchGroup.html\">\n <classname>org.apache.openjpa.persistence.LoadFetchGroup</classname></ulink>\n annotation to specify the load fetch group of any persistent field. The value of\n the annotation is the name of a declared fetch group whose members should be\n@@ -1759,7 +1759,7 @@ the fetch depth to something less than the configured maximum.\n OpenJPA's <classname>OpenJPAEntityManager</classname> and <classname>\n OpenJPAQuery</classname> extensions to the standard <classname>EntityManager\n </classname> and <classname>Query</classname> interfaces provide access to a\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/FetchPlan.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/FetchPlan.html\">\n <classname>org.apache.openjpa.persistence.FetchPlan</classname></ulink> object.\n The <classname>FetchPlan</classname> maintains the set of active fetch groups \n and the maximum fetch depth. It begins with the groups and depth defined in the"},{"sha":"e9e6026660f1f3661e13915efaeedf1d145690b8","filename":"openjpa-project/src/doc/manual/ref_guide_remote.xml","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/ref_guide_remote.xml","raw_url":"https://github.com/apache/openjpa/raw/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/ref_guide_remote.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_remote.xml?ref=17b27d44d0a26ceb91c4494905e2e2660a713309","patch":"@@ -73,7 +73,7 @@ In JPA, objects detach automatically when they are serialized or when a\n <link linkend=\"jpa_overview_emfactory_perscontext\">persistence context</link>\n ends. The specification does not define any way to explicitly detach objects.\n The extended\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n <classname>OpenJPAEntityManager</classname></ulink>, however, allows you to\n explicitly detach objects at any time.\n             </para>\n@@ -111,7 +111,7 @@ your objects. Setting the <literal>RollbackOnly</literal> flag prevents OpenJPA\n from flushing when detaching dirty objects; instead OpenJPA just runs its\n pre-flush actions (see the <methodname>OpenJPAEntityManager.preFlush\n </methodname>\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n Javadoc</ulink> for details).\n             </para>\n             <para>\n@@ -320,7 +320,7 @@ use detached state managers, as determined by the settings above.\n             <para>\n You can also alter the set of fields that will be included in the detached graph\n at runtime.\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n <classname>OpenJPAEntityManager</classname></ulink>s expose the following APIs\n for controlling detached state:\n             </para>\n@@ -433,7 +433,7 @@ To enable remote events, you must configure the <classname> EntityManagerFactory\n         <para>\n When a <literal>RemoteCommitProvider</literal> is properly configured, you can\n register\n-<ulink url=\"../apidocs/org/apache/openjpa/event/RemoteCommitListener.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/event/RemoteCommitListener.html\">\n <classname>RemoteCommitListener</classname></ulink>s that will be alerted with\n a list of modified object ids whenever a transaction on a remote machine\n successfully commits.\n@@ -678,10 +678,10 @@ provider, we modify the previous example as follows:\n             <para>\n You can develop additional mechanisms for remote event notification be by\n creating an implementation of the\n-<ulink url=\"../apidocs/org/apache/openjpa/event/RemoteCommitProvider.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/event/RemoteCommitProvider.html\">\n <classname> RemoteCommitProvider</classname></ulink> interface, possibly by\n extending the\n-<ulink url=\"../apidocs/org/apache/openjpa/event/AbstractRemoteCommitProvider.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/event/AbstractRemoteCommitProvider.html\">\n <classname>AbstractRemoteCommitProvider</classname></ulink> abstract class..\n             </para>\n         </section>"},{"sha":"7cf2fc0887525355b92684f38cfe3a6c2eca94af","filename":"openjpa-project/src/doc/manual/ref_guide_runtime.xml","status":"modified","additions":35,"deletions":35,"changes":70,"blob_url":"https://github.com/apache/openjpa/blob/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/ref_guide_runtime.xml","raw_url":"https://github.com/apache/openjpa/raw/17b27d44d0a26ceb91c4494905e2e2660a713309/openjpa-project/src/doc/manual/ref_guide_runtime.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_runtime.xml?ref=17b27d44d0a26ceb91c4494905e2e2660a713309","patch":"@@ -101,7 +101,7 @@ and <classname>Broker</classname>s.\n             </indexterm>\n             <para>\n Some advanced users may want to add capabilities to OpenJPA's internal\n-<ulink url=\"../apidocs/org/apache/openjpa/kernel/BrokerImpl.html\"><classname>\n+<ulink url=\"../javadoc/org/apache/openjpa/kernel/BrokerImpl.html\"><classname>\n org.apache.openjpa.kernel.BrokerImpl</classname></ulink>. You can configure\n OpenJPA to use a custom subclass of <classname>BrokerImpl</classname> through\n the <link linkend=\"openjpa.BrokerImpl\"><literal>openjpa.BrokerImpl</literal>\n@@ -189,7 +189,7 @@ javax.persistence.EntityManagerFactory</classname> with OpenJPA-specific\n features. The <classname>OpenJPAEntityManagerFactory</classname> offers APIs to\n access the OpenJPA data and query caches and to perform other OpenJPA-specific \n operations. See the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAEntityManagerFactory.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/OpenJPAEntityManagerFactory.html\">\n interface Javadoc</ulink> for details.\n             </para>\n         </section>\n@@ -215,7 +215,7 @@ interface Javadoc</ulink> for details.\n             </indexterm>\n             <para>\n All OpenJPA <classname>EntityManager</classname>s implement the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n <classname>org.apache.openjpa.persistence.OpenJPAEntityManager</classname>\n </ulink> interface. This interface extends the standard <classname>\n javax.persistence.EntityManager</classname>. Just as the standard <classname>\n@@ -248,7 +248,7 @@ extensions this interface contains.\n             <para>\n OpenJPA extends JPA's standard query functionality with the <classname>\n org.apache.openjpa.persistence.OpenJPAQuery</classname> interface. See its\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAQuery.html\">Javadoc\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/OpenJPAQuery.html\">Javadoc\n </ulink> for details on the convenience methods it provides.\n             </para>\n         </section>\n@@ -275,7 +275,7 @@ org.apache.openjpa.persistence.OpenJPAQuery</classname> interface. See its\n             <para>\n An <classname>Extent</classname> is a logical view of all persistent instances\n of a given entity class, possibly including subclasses. OpenJPA adds the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/Extent.html\"><classname>\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/Extent.html\"><classname>\n org.apache.openjpa.persistence.Extent</classname></ulink> class to the set of\n Java Persistence APIs. The following code illustrates iterating over all\n instances of the <classname>Magazine</classname> entity, without subclasses:\n@@ -309,7 +309,7 @@ for (Magazine m : mags)\n In addition to the <classname>EntityManager</classname> object cache mandated by\n the JPA specification, OpenJPA includes a flexible datastore-level cache. You\n can access this cache from your JPA code using the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/StoreCache.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/StoreCache.html\">\n <classname>org.apache.openjpa.persistence.StoreCache</classname></ulink> facade.\n <xref linkend=\"ref_guide_cache\"/> has detailed information on OpenJPA's\n data caching system, including the <classname>StoreCache</classname> facade.\n@@ -326,7 +326,7 @@ data caching system, including the <classname>StoreCache</classname> facade.\n             </indexterm>\n             <para>\n OpenJPA can cache query results as well as persistent object data. The\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/QueryResultCache.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/QueryResultCache.html\">\n <classname>org.apache.openjpa.persistence.QueryResultCache</classname></ulink> \n is an JPA-flavored facade to OpenJPA's internal query cache. See\n <xref linkend=\"ref_guide_cache_query\"/> for details on query caching in\n@@ -360,7 +360,7 @@ groups</link>, and <link linkend=\"ref_guide_locking\">lock levels</link>.\n             </para>\n             <para>\n OpenJPA goes one step further, extending <classname>FetchPlan</classname> with\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/JDBCFetchPlan.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/JDBCFetchPlan.html\">\n <classname>org.apache.openjpa.persistence.jdbc.JDBCFetchPlan</classname></ulink>\n to add additional JDBC-specific tuning methods. Unless you have customized \n OpenJPA to use a non-relational back-end (see\n@@ -396,7 +396,7 @@ FetchPlan</classname>s.\n                 </primary>\n             </indexterm>\n             <para>\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAPersistence.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/OpenJPAPersistence.html\">\n <classname>org.apache.openjpa.persistence.OpenJPAPersistence</classname></ulink>\n is a static helper class that adds OpenJPA-specific utility methods to \n <classname>javax.persistence.Persistence</classname>.\n@@ -585,7 +585,7 @@ In addition to the standard\n <ulink url=\"http://java.sun.com/javaee/5/docs/api/javax/persistence/EntityManager.html\">\n <methodname>EntityManager.lock(Object, LockModeType)</methodname></ulink>\n method, the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n <classname>OpenJPAEntityManager</classname></ulink> exposes the following\n methods to lock objects explicitly:\n             </para>\n@@ -646,7 +646,7 @@ oem.getTransaction().commit();\n                 </primary>\n             </indexterm>\n OpenJPA delegates the actual work of locking objects to the system's\n-<ulink url=\"../apidocs/org/apache/openjpa/kernel/LockManager.html\"><classname>\n+<ulink url=\"../javadoc/org/apache/openjpa/kernel/LockManager.html\"><classname>\n org.apache.openjpa.kernel.LockManager</classname></ulink>. This plugin is\n controlled by the <link linkend=\"openjpa.LockManager\"><literal>\n openjpa.LockManager</literal></link> configuration property. You can write your\n@@ -656,7 +656,7 @@ own lock manager, or use one of the bundled options:\n                 <listitem>\n                     <para>\n <literal>pessimistic</literal>: This is an alias for the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/kernel/PessimisticLockManager.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/kernel/PessimisticLockManager.html\">\n <classname>o\n rg.apache.openjpa.jdbc.kernel.PessimisticLockManager</classname></ulink>, which\n uses SELECT FOR UPDATE statements (or the database's equivalent) to lock the \n@@ -678,15 +678,15 @@ properties:\n                 <listitem>\n                     <para>\n <literal>none</literal>: An alias for the\n-<ulink url=\"../apidocs/org/apache/openjpa/kernel/NoneLockManager.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/kernel/NoneLockManager.html\">\n <classname>org.apache.openjpa.kernel.NoneLockManager</classname></ulink>, which\n does not perform any locking at all.\n                     </para>\n                 </listitem>\n                 <listitem>\n                     <para>\n <literal>version</literal>: An alias for the\n-<ulink url=\"../apidocs/org/apache/openjpa/kernel/VersionLockManager.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/kernel/VersionLockManager.html\">\n <classname>org.apache.openjpa.kernel.VersionLockManager</classname></ulink>.\n This lock manager does not perform any exclusive locking, but instead ensures\n read consistency by verifying that the version of all read-locked instances is\n@@ -870,7 +870,7 @@ changes. This chapter describes how to use and configure OpenJPA savepoints.\n             </title>\n             <para>\n OpenJPA's \n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n <classname>OpenJPAEntityManager</classname></ulink> have the following\n methods to control savepoint behavior. Note that the savepoints work in tandem\n with the current transaction. This means that savepoints require an open\n@@ -949,7 +949,7 @@ oem.getTransaction().commit();\n             </title>\n             <para>\n OpenJPA uses the \n-<ulink url=\"../apidocs/org/apache/openjpa/kernel/SavepointManager\">\n+<ulink url=\"../javadoc/org/apache/openjpa/kernel/SavepointManager\">\n <classname>org.apache.openjpa.kernel.SavepointManager</classname></ulink>\n <link linkend=\"ref_guide_conf_plugins\">plugin</link> to handle perserving the\n savepoint state. OpenJPA includes the following <classname>SavepointManager\n@@ -1141,7 +1141,7 @@ select p from Product p where p.price &lt; ext:sql ('(SELECT AVG(PRICE) FROM PRO\n                 </indexterm>\n                 <para>\n You can write your own extensions by implementing the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/kernel/exps/JDBCFilterListener.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/kernel/exps/JDBCFilterListener.html\">\n <classname>org.apache.openjpa.jdbc.kernel.exps.JDBCFilterListener</classname>\n </ulink> interface. View the Javadoc documentation for details. Additionally,\n the source for all of OpenJPA's built-in query extensions is included in your\n@@ -1190,7 +1190,7 @@ registration for very specific extensions that do not apply globally.\n                         </para>\n                         <para>\n See the <classname>OpenJPAQuery</classname>\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAQuery.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/OpenJPAQuery.html\">\n Javadoc</ulink> for details.\n                         </para>\n                     </listitem>\n@@ -1212,7 +1212,7 @@ Javadoc</ulink> for details.\n             <para>\n Just as you can write your own filter methods, you can write your own query\n aggregates by implementing the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/kernel/exps/JDBCAggregateListener.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/kernel/exps/JDBCAggregateListener.html\">\n <classname>org.apache.openjpa.jdbc.kernel.exps.JDBCAggregateListener</classname>\n </ulink> interface. View the Javadoc documentation for details. When using your\n custom aggregates in result or having query clauses, you can optionally prefix\n@@ -1258,7 +1258,7 @@ registration for very specific aggregates that do not apply globally.\n                         </para>\n                         <para>\n See the <classname>OpenJPAQuery</classname>\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAQuery.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/OpenJPAQuery.html\">\n Javadoc</ulink> for details.\n                         </para>\n                     </listitem>\n@@ -1318,7 +1318,7 @@ List results = q.getResultList();\n For datastore queries, the method must have the following signature:\n             </para>\n <programlisting>\n-public static <ulink url=\"../apidocs/org/apache/openjpa/lib/rop/ResultObjectProvider.html\">ResultObjectProvider</ulink> xxx(<ulink url=\"../apidocs/org/apache/openjpa/kernel/StoreContext.html\">StoreContext</ulink> ctx, <ulink url=\"../apidocs/org/apache/openjpa/meta/ClassMetaData.html\">ClassMetaData</ulink> meta, boolean subclasses, Map params, <ulink url=\"../apidocs/org/apache/openjpa/kernel/FetchConfiguration.html\">FetchConfiguration </ulink> fetch)\n+public static <ulink url=\"../javadoc/org/apache/openjpa/lib/rop/ResultObjectProvider.html\">ResultObjectProvider</ulink> xxx(<ulink url=\"../javadoc/org/apache/openjpa/kernel/StoreContext.html\">StoreContext</ulink> ctx, <ulink url=\"../javadoc/org/apache/openjpa/meta/ClassMetaData.html\">ClassMetaData</ulink> meta, boolean subclasses, Map params, <ulink url=\"../javadoc/org/apache/openjpa/kernel/FetchConfiguration.html\">FetchConfiguration </ulink> fetch)\n </programlisting>\n             <para>\n The returned result object provider should produce objects of the candidate\n@@ -1332,7 +1332,7 @@ In-memory execution is slightly different, taking in one object at a time and\n returning a boolean on whether the object matches the query:\n             </para>\n <programlisting>\n-public static boolean xxx(<ulink url=\"../apidocs/org/apache/openjpa/kernel/StoreContext.html\">StoreContext</ulink> ctx, <ulink url=\"../apidocs/org/apache/openjpa/meta/ClassMetaData.html\">ClassMetaData</ulink> meta, boolean subclasses, Object obj, Map params, <ulink url=\"../apidocs/org/apache/openjpa/kernel/FetchConfiguration.html\">FetchConfiguration</ulink> fetch)\n+public static boolean xxx(<ulink url=\"../javadoc/org/apache/openjpa/kernel/StoreContext.html\">StoreContext</ulink> ctx, <ulink url=\"../javadoc/org/apache/openjpa/meta/ClassMetaData.html\">ClassMetaData</ulink> meta, boolean subclasses, Object obj, Map params, <ulink url=\"../javadoc/org/apache/openjpa/kernel/FetchConfiguration.html\">FetchConfiguration</ulink> fetch)\n </programlisting>\n             <para>\n In both method versions, the given <literal>params</literal> map contains the\n@@ -1360,12 +1360,12 @@ generators to automatically populate identity fields in JPA.\n         </para>\n         <para>\n OpenJPA represents all generators internally with the\n-<ulink url=\"../apidocs/org/apache/openjpa/kernel/Seq.html\"><classname>\n+<ulink url=\"../javadoc/org/apache/openjpa/kernel/Seq.html\"><classname>\n org.apache.openjpa.kernel.Seq</classname></ulink> interface. This interface\n supplies all the context you need to create your own custom generators,\n including the current persistence environment, the JDBC <classname>DataSource\n </classname>, and other essentials. The\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/kernel/AbstractJDBCSeq.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/kernel/AbstractJDBCSeq.html\">\n <classname>org.apache.openjpa.jdbc.kernel.AbstractJDBCSeq</classname></ulink>\n helps you create custom JDBC-based sequences. OpenJPA also supplies the\n following built-in <classname>Seq</classname>s:\n@@ -1383,7 +1383,7 @@ following built-in <classname>Seq</classname>s:\n                 </indexterm>\n <literal>table</literal>: This is OpenJPA's default implementation. It is an\n alias for the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/kernel/TableJDBCSeq.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/kernel/TableJDBCSeq.html\">\n <classname>org.apache.openjpa.jdbc.kernel.TableJDBCSeq</classname></ulink>\n class. The <classname>TableJDBCSeq</classname> uses a special single-row table\n to store a global sequence number. If the table does not already exist, it is\n@@ -1437,7 +1437,7 @@ requests.\n                     </secondary>\n                 </indexterm>\n <literal>class-table</literal>: This is an alias for the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/kernel/ClassTableJDBCSeq.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/kernel/ClassTableJDBCSeq.html\">\n <classname>org.apache.openjpa.jdbc.kernel.ClassTableJDBCSeq</classname></ulink>\n . This <classname>Seq</classname> is like the <classname>TableJDBCSeq\n </classname> above, but maintains a separate table row, and therefore a separate\n@@ -1480,7 +1480,7 @@ tool runs. However, you can manually manipulate the table through the class'\n                     </secondary>\n                 </indexterm>\n <literal>value-table</literal>: This is an alias for the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/kernel/ValueTableJDBCSeq.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/kernel/ValueTableJDBCSeq.html\">\n <classname>org.apache.openjpa.jdbc.kernel.ValueTableJDBCSeq</classname></ulink>\n . This <classname>Seq</classname> is like the <classname>ClassTableJDBCSeq\n </classname> above, but has an arbitrary number of rows for sequence values,\n@@ -1514,7 +1514,7 @@ tool runs. However, you can manually manipulate the table through the class'\n                     </secondary>\n                 </indexterm>\n <literal>native</literal>: This is an alias for the\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/kernel/NativeJDBCSeq.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/kernel/NativeJDBCSeq.html\">\n <classname>org.apache.openjpa.jdbc.kernel.NativeJDBCSeq</classname></ulink>.\n Many databases have a concept of \"native sequences\" - a built-in mechanism for\n obtaining incrementing numbers. For example, in Oracle, you can create a\n@@ -1561,7 +1561,7 @@ service subsequent sequence requests faster.\n                     </secondary>\n                 </indexterm>\n <literal>time</literal>: This is an alias for the\n-<ulink url=\"../apidocs/org/apache/openjpa/kernel/TimeSeededSeq.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/kernel/TimeSeededSeq.html\">\n <classname>org.apache.openjpa.kernel.TimeSeededSeq</classname></ulink>. This\n type uses an in-memory static counter, initialized to the current time in\n milliseconds and monotonically incremented for each value requested. It is only\n@@ -1654,7 +1654,7 @@ public Generator getNamedGenerator(String name);\n </programlisting>\n             <para>\n The returned \n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/Generator.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/Generator.html\">\n <classname>org.apache.openjpa.persistence.Generator</classname></ulink> is a\n facade over an internal OpenJPA <classname>Seq</classname>.\n             </para>\n@@ -1664,7 +1664,7 @@ retrieve the identity generator of any class, or the generator of any field.\n With these APIs, you do not have to know the generator name. Additionally, they\n allow you to access the implicit generator used by default for datastore\n identity classes. See the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n Javadoc</ulink> for the <methodname> OpenJPAEntityManager.getIdentityGenerator\n </methodname> and <methodname>OpenJPAEntityManager.getFieldGenerator\n </methodname> methods for API details.\n@@ -1686,7 +1686,7 @@ Javadoc</ulink> for the <methodname> OpenJPAEntityManager.getIdentityGenerator\n         <para>\n The OpenJPA runtime supports broadcasting transaction-related events. By\n registering one or more\n-<ulink url=\"../apidocs/org/apache/openjpa/event/TransactionListener.html\">\n+<ulink url=\"../javadoc/org/apache/openjpa/event/TransactionListener.html\">\n <classname>org.apache.openjpa.event.TransactionListener</classname></ulink> s,\n you can receive notifications when transactions begin, flush, rollback, commit,\n and more. Where appropriate, event notifications include the set of\n@@ -1703,7 +1703,7 @@ remove listeners.\n         <para>\n For details on the transaction framework, see the <literal>\n org.apache.openjpa.event</literal> package\n-<ulink url=\"../apidocs/org/apache/openjpa/event/package.html\">Javadoc</ulink>.\n+<ulink url=\"../javadoc/org/apache/openjpa/event/package.html\">Javadoc</ulink>.\n Also see <xref linkend=\"ref_guide_event\"/> for a description of OpenJPA's\n remote event support.\n         </para>\n@@ -1715,11 +1715,11 @@ remote event support.\n         <para>\n It is possible to adapt OpenJPA to access a non-relational datastore by creating\n an implementation of the\n-<ulink url=\"../apidocs/org/apache/openjpa/kernel/StoreManager.html\"><literal>\n+<ulink url=\"../javadoc/org/apache/openjpa/kernel/StoreManager.html\"><literal>\n org.apache.openjpa.kernel.StoreManager</literal></ulink> interface. OpenJPA\n provides an abstract <literal>StoreManager</literal> implementation to\n facilitate this process. See the <literal>org.apache.openjpa.abstractstore\n-</literal> package <ulink url=\"../apidocs/org/apache/openjpa/abstractstore\">\n+</literal> package <ulink url=\"../javadoc/org/apache/openjpa/abstractstore\">\n Javadoc</ulink> for details.\n         </para>\n     </section>"}]}

