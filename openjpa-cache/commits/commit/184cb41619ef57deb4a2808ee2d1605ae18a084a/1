{"sha":"184cb41619ef57deb4a2808ee2d1605ae18a084a","node_id":"MDY6Q29tbWl0MjA2MzY0OjE4NGNiNDE2MTllZjU3ZGViNGEyODA4ZWUyZDE2MDVhZTE4YTA4NGE=","commit":{"author":{"name":"Kevin W. Sutter","email":"kwsutter@apache.org","date":"2010-01-21T18:48:31Z"},"committer":{"name":"Kevin W. Sutter","email":"kwsutter@apache.org","date":"2010-01-21T18:48:31Z"},"message":"OPENJPA-1476.  Turning off the QueryCache by default.  The new default value for this property will be \"false\".  Also, disabling the Write Behind testcases.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@901825 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"e94d69fa4f206078b437306346fa6335571a3f25","url":"https://api.github.com/repos/apache/openjpa/git/trees/e94d69fa4f206078b437306346fa6335571a3f25"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/184cb41619ef57deb4a2808ee2d1605ae18a084a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/184cb41619ef57deb4a2808ee2d1605ae18a084a","html_url":"https://github.com/apache/openjpa/commit/184cb41619ef57deb4a2808ee2d1605ae18a084a","comments_url":"https://api.github.com/repos/apache/openjpa/commits/184cb41619ef57deb4a2808ee2d1605ae18a084a/comments","author":null,"committer":null,"parents":[{"sha":"6d253cfe105d6423759860e2ec33ad07409626e4","url":"https://api.github.com/repos/apache/openjpa/commits/6d253cfe105d6423759860e2ec33ad07409626e4","html_url":"https://github.com/apache/openjpa/commit/6d253cfe105d6423759860e2ec33ad07409626e4"}],"stats":{"total":72,"additions":52,"deletions":20},"files":[{"sha":"f6e47a9a829ed0dca9b20c66b3ab72b9ea50b0e2","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfigurationImpl.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/184cb41619ef57deb4a2808ee2d1605ae18a084a/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfigurationImpl.java","raw_url":"https://github.com/apache/openjpa/raw/184cb41619ef57deb4a2808ee2d1605ae18a084a/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfigurationImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfigurationImpl.java?ref=184cb41619ef57deb4a2808ee2d1605ae18a084a","patch":"@@ -28,7 +28,6 @@\n import org.apache.openjpa.datacache.ConcurrentQueryCache;\n import org.apache.openjpa.datacache.DataCacheManager;\n import org.apache.openjpa.datacache.DataCacheManagerImpl;\n-import org.apache.openjpa.datacache.DataCacheMode;\n import org.apache.openjpa.datacache.PartitionedDataCache;\n import org.apache.openjpa.ee.ManagedRuntime;\n import org.apache.openjpa.enhance.RuntimeUnenhancedClassesModes;\n@@ -252,11 +251,11 @@ public OpenJPAConfigurationImpl(boolean derivations, boolean loadGlobals) {\n         dataCacheTimeout.set(-1);\n         dataCacheTimeout.setDynamic(true);\n \n-        queryCachePlugin = addPlugin(\"QueryCache\", true);\n+        queryCachePlugin = addPlugin(\"QueryCache\", false);\n         aliases = new String[] { \n+            \"false\", null, \n             \"true\", ConcurrentQueryCache.class.getName(),\n             \"concurrent\", ConcurrentQueryCache.class.getName(), \n-            \"false\", null, \n         };\n         queryCachePlugin.setAliases(aliases);\n         queryCachePlugin.setDefault(aliases[0]);"},{"sha":"95458b3bf9ef6a17f878ae39e72ebd71dd6d1121","filename":"openjpa-persistence-jdbc/pom.xml","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/184cb41619ef57deb4a2808ee2d1605ae18a084a/openjpa-persistence-jdbc/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/184cb41619ef57deb4a2808ee2d1605ae18a084a/openjpa-persistence-jdbc/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/pom.xml?ref=184cb41619ef57deb4a2808ee2d1605ae18a084a","patch":"@@ -965,6 +965,9 @@\n \n                         <!-- TestEJBTransactionalClass tests nothing -->\n                         <exclude>org/apache/openjpa/persistence/kernel/TestEJBTransactionalClass.java</exclude>\n+                        \n+                        <!-- Exclude WriteBehind testcases until they are deleted... -->\n+                        <exclude>org/apache/openjpa/jdbc/writebehind/**/Test*.java</exclude>\n                     </excludes>\n                     <systemProperties>\n                         <property>"},{"sha":"68f1305deac71327e4cbf985f9ab8fafc9f0d198","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/cache/jpa/AbstractCacheTestCase.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/184cb41619ef57deb4a2808ee2d1605ae18a084a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/cache/jpa/AbstractCacheTestCase.java","raw_url":"https://github.com/apache/openjpa/raw/184cb41619ef57deb4a2808ee2d1605ae18a084a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/cache/jpa/AbstractCacheTestCase.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/cache/jpa/AbstractCacheTestCase.java?ref=184cb41619ef57deb4a2808ee2d1605ae18a084a","patch":"@@ -64,6 +64,7 @@ public OpenJPAEntityManagerFactorySPI createEntityManagerFactory(String puName)\n         OpenJPAEntityManagerFactorySPI emf =\n             (OpenJPAEntityManagerFactorySPI) OpenJPAPersistence.createEntityManagerFactory(puName,\n                 \"META-INF/caching-persistence.xml\", getPropertiesMap(\"openjpa.DataCache\", \"true\",\n+                    \"openjpa.QueryCache\", \"true\",\n                     \"openjpa.RemoteCommitProvider\", \"sjvm\", persistentTypes, \n                     \"openjpa.jdbc.JDBCListeners\", new JDBCListener [] { getListener() } ));\n         return emf;"},{"sha":"06262894f462e71ebe8033926adce1998a1c61a8","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestBulkJPQLAndDataCache.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/184cb41619ef57deb4a2808ee2d1605ae18a084a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestBulkJPQLAndDataCache.java","raw_url":"https://github.com/apache/openjpa/raw/184cb41619ef57deb4a2808ee2d1605ae18a084a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestBulkJPQLAndDataCache.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestBulkJPQLAndDataCache.java?ref=184cb41619ef57deb4a2808ee2d1605ae18a084a","patch":"@@ -34,6 +34,7 @@\n \n     public void setUp() throws Exception {\n         setUp(\"openjpa.DataCache\", \"true\",\n+            \"openjpa.QueryCache\", \"true\",\n             \"openjpa.RemoteCommitProvider\", \"sjvm\",\n             CLEAR_TABLES,\n             AllFieldTypes.class, CascadeParent.class, CascadeChild.class);"},{"sha":"242d41387f6d1ed7a07198ea7068f97928e670d2","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/TestQueryDefaultEviction.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/184cb41619ef57deb4a2808ee2d1605ae18a084a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/TestQueryDefaultEviction.java","raw_url":"https://github.com/apache/openjpa/raw/184cb41619ef57deb4a2808ee2d1605ae18a084a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/TestQueryDefaultEviction.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/TestQueryDefaultEviction.java?ref=184cb41619ef57deb4a2808ee2d1605ae18a084a","patch":"@@ -25,8 +25,7 @@\n     public void setUp() throws Exception {\n         super.setUp(\n                 \"openjpa.DataCache\", \"true\",\n-                \"openjpa.QueryCache\",\n-                \"CacheSize=1000\",\n+                \"openjpa.QueryCache\", \"true(CacheSize=1000)\",\n                 \"openjpa.RemoteCommitProvider\", \"sjvm\");\n     }\n "},{"sha":"af99460ce4a0fcbe7f6ecd2db2f393133536e17a","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/TestQueryTimestampEviction.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/184cb41619ef57deb4a2808ee2d1605ae18a084a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/TestQueryTimestampEviction.java","raw_url":"https://github.com/apache/openjpa/raw/184cb41619ef57deb4a2808ee2d1605ae18a084a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/TestQueryTimestampEviction.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/TestQueryTimestampEviction.java?ref=184cb41619ef57deb4a2808ee2d1605ae18a084a","patch":"@@ -30,8 +30,7 @@\n     public void setUp() throws Exception {\n         super.setUp(\n                 \"openjpa.DataCache\", \"true\",\n-                \"openjpa.QueryCache\",\n-                \"CacheSize=1000, EvictPolicy='timestamp'\",\n+                \"openjpa.QueryCache\", \"true(CacheSize=1000, EvictPolicy='timestamp')\",\n                 \"openjpa.RemoteCommitProvider\", \"sjvm\");\n     }\n "},{"sha":"f0745da1f9cce9993d1113e0b8d6f083fc39caed","filename":"openjpa-project/src/doc/manual/migration_considerations.xml","status":"modified","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/apache/openjpa/blob/184cb41619ef57deb4a2808ee2d1605ae18a084a/openjpa-project/src/doc/manual/migration_considerations.xml","raw_url":"https://github.com/apache/openjpa/raw/184cb41619ef57deb4a2808ee2d1605ae18a084a/openjpa-project/src/doc/manual/migration_considerations.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/migration_considerations.xml?ref=184cb41619ef57deb4a2808ee2d1605ae18a084a","patch":"@@ -281,6 +281,38 @@\n                                 See OPENJPA-1203 for more details.\n \t\t\t</para>\n \t\t</section>\n+            <section id=\"querycache\">\n+                <title>\n+                openjpa.QueryCache default   \n+                </title>\n+                <para>\n+                    In previous releases, the default value for the openjpa.QueryCache property was \n+                    <literal>true</literal> when the openjpa.DataCache was enabled.  Depending on application\n+                    characteristics, this default QueryCache enablement actually could negate much of the potential\n+                    gains achieved by using the DataCache.  Thus, the default value for the openjpa.QueryCache\n+                    property will now by <emphasis><literal>false</literal></emphasis>.\n+                </para>\n+                <para>\n+                    To re-enable the default QueryCache behavior, you just need to include the following property\n+                    into your persistence.xml configuration.\n+                    \n+                    <programlisting>\n+                    &lt;property name=\"openjpa.QueryCache\" value=\"true\"/&gt;\n+                    </programlisting>\n+                </para>\n+                <para>\n+                    If your configuration had previously enabled the QueryCache explicitly, then you might have to \n+                    include the <literal>true</literal> value into your configuration (if you relied on the previous \n+                    default).  Otherwise, your current QueryCache enablement will continue to work.\n+                    \n+                    <programlisting>\n+                    &lt;property name=\"openjpa.QueryCache\" value=\"true(CacheSize=1000, SoftReferenceSize=100)\"/&gt;\n+                    </programlisting>\n+                </para>\n+                <para>\n+                    See OPENJPA-1469 and sub-tasks for more details.\n+                </para>\n+            </section>\n         </section>\n     </section>\n </appendix>"},{"sha":"bd3f8ace74626be17d7df80ccd9547ef8638946d","filename":"openjpa-project/src/doc/manual/ref_guide_caching.xml","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/apache/openjpa/blob/184cb41619ef57deb4a2808ee2d1605ae18a084a/openjpa-project/src/doc/manual/ref_guide_caching.xml","raw_url":"https://github.com/apache/openjpa/raw/184cb41619ef57deb4a2808ee2d1605ae18a084a/openjpa-project/src/doc/manual/ref_guide_caching.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_caching.xml?ref=184cb41619ef57deb4a2808ee2d1605ae18a084a","patch":"@@ -571,8 +571,8 @@ argument, treats null argument as <classname>java.lang.Object</classname>\n             <para>\n In addition to the data cache, the <literal>org.apache.openjpa.datacache\n </literal> package defines service provider interfaces for a query cache. The\n-query cache is enabled by default when the data cache is enabled. The query\n-cache stores the object ids returned by query executions. When you run a query,\n+query cache is disabled by default and needs to be enabled separately from the data cache. \n+The query cache stores the object ids returned by query executions. When you run a query,\n OpenJPA assembles a key based on the query properties and the parameters used at\n execution time, and checks for a cached query result. If one is found, the\n object ids in the cached result are looked up, and the resultant\n@@ -613,11 +613,11 @@ cache also has a backing soft reference map. The <literal>SoftReferenceSize\n                     Query Cache Size\n                 </title>\n <programlisting>\n-&lt;property name=\"openjpa.QueryCache\" value=\"CacheSize=1000, SoftReferenceSize=100\"/&gt;\n+&lt;property name=\"openjpa.QueryCache\" value=\"true(CacheSize=1000, SoftReferenceSize=100)\"/&gt;\n </programlisting>\n             </example>\n             <para>\n-To disable the query cache completely, set the <literal>openjpa.QueryCache\n+To disable the query cache (default), set the <literal>openjpa.QueryCache\n </literal> property to <literal>false</literal>:\n             </para>\n             <example id=\"ref_guide_cache_disablequery\">\n@@ -632,7 +632,7 @@ To disable the query cache completely, set the <literal>openjpa.QueryCache\n Query Cache's default behaviour on eviction is to evict all the queries from\n the cache if any of the entities that are in the access path of the query are \n modified. Scanning through the whole query cache to evict the queries upon an \n-entity update slows down the entity updation. \n+entity update slows down the entity update action. \n \n The configurable eviction policy \"timestamp\" is to track the timestamp of the\n query and the timestamp of last update for each entity class and compare the \n@@ -648,7 +648,7 @@ here is an example:\n                     Query Cache Eviction Policy\n                 </title>\n <programlisting>\n-&lt;property name=\"openjpa.QueryCache\" value=\"EvictPolicy='timestamp'\"/&gt;\n+&lt;property name=\"openjpa.QueryCache\" value=\"true(EvictPolicy='timestamp')\"/&gt;\n </programlisting>\n             </example>\n             <para>\n@@ -852,9 +852,9 @@ oq.getFetchPlan().setQueryResultCacheEnabled(true);\n             <para>\n The provided data cache classes can be easily extended to add additional\n functionality. If you are adding new behavior, you should extend <classname>\n-org.apache.openjpa.datacache.DataCacheImpl</classname>. To use your own storage\n+org.apache.openjpa.datacache.ConcurrentDataCache</classname>. To use your own storage\n mechanism, extend <classname>org.apache.openjpa.datacache.AbstractDataCache\n-</classname>, or implement <classname>org.apache.openjpa.datacache.DataCache\n+</classname> (preferred), or implement <classname>org.apache.openjpa.datacache.DataCache\n </classname> directly. If you want to implement a distributed cache that uses an\n unsupported method for communications, create an implementation of <classname>\n org.apache.openjpa.event.RemoteCommitProvider</classname>. This process is\n@@ -863,9 +863,9 @@ described in greater detail in\n             </para>\n             <para>\n The query cache is just as easy to extend. Add functionality by extending the\n-default <classname>org.apache.openjpa.datacache.QueryCacheImpl</classname>.\n+default <classname>org.apache.openjpa.datacache.ConcurrentQueryCache</classname>.\n Implement your own storage mechanism for query results by extending <classname>\n-org.apache.openjpa.datacache.AbstractQueryCache</classname> or implementing the\n+org.apache.openjpa.datacache.AbstractQueryCache</classname> (preferred) or implementing the\n <classname>org.apache.openjpa.datacache.QueryCache</classname> interface\n directly.\n             </para>"},{"sha":"36404e7763a3594e430189eda389c0f926c1b1ef","filename":"openjpa-project/src/doc/manual/ref_guide_conf.xml","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/184cb41619ef57deb4a2808ee2d1605ae18a084a/openjpa-project/src/doc/manual/ref_guide_conf.xml","raw_url":"https://github.com/apache/openjpa/raw/184cb41619ef57deb4a2808ee2d1605ae18a084a/openjpa-project/src/doc/manual/ref_guide_conf.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_conf.xml?ref=184cb41619ef57deb4a2808ee2d1605ae18a084a","patch":"@@ -2780,9 +2780,7 @@ mutable second class objects. See\n QueryCache</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default: </emphasis><literal>true</literal>, when the data\n-cache (see <xref linkend=\"openjpa.DataCache\"/>) is also enabled, <literal>\n-false</literal> otherwise.\n+<emphasis role=\"bold\">Default: </emphasis><literal>false</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see"}]}

