{"sha":"1896a2850ca9721c5c00f76cfedceb7441df5651","node_id":"MDY6Q29tbWl0MjA2MzY0OjE4OTZhMjg1MGNhOTcyMWM1YzAwZjc2Y2ZlZGNlYjc0NDFkZjU2NTE=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2013-08-16T18:25:23Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2013-08-16T18:25:23Z"},"message":"OPENJPA-2318: Left outer join is not generated because allowNull was not passed correctly\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1514833 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"312b3bf41e18d48248f2a7c79dd5ac0f6a170440","url":"https://api.github.com/repos/apache/openjpa/git/trees/312b3bf41e18d48248f2a7c79dd5ac0f6a170440"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/1896a2850ca9721c5c00f76cfedceb7441df5651","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/1896a2850ca9721c5c00f76cfedceb7441df5651","html_url":"https://github.com/apache/openjpa/commit/1896a2850ca9721c5c00f76cfedceb7441df5651","comments_url":"https://api.github.com/repos/apache/openjpa/commits/1896a2850ca9721c5c00f76cfedceb7441df5651/comments","author":null,"committer":null,"parents":[{"sha":"2841d18dda10cd57ffbff878980d15cc869fed2c","url":"https://api.github.com/repos/apache/openjpa/commits/2841d18dda10cd57ffbff878980d15cc869fed2c","html_url":"https://github.com/apache/openjpa/commit/2841d18dda10cd57ffbff878980d15cc869fed2c"}],"stats":{"total":11,"additions":6,"deletions":5},"files":[{"sha":"082d371284208d642fc491e81b08be273c047266","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/Joins.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/1896a2850ca9721c5c00f76cfedceb7441df5651/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/Joins.java","raw_url":"https://github.com/apache/openjpa/raw/1896a2850ca9721c5c00f76cfedceb7441df5651/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/Joins.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/Joins.java?ref=1896a2850ca9721c5c00f76cfedceb7441df5651","patch":"@@ -197,17 +197,18 @@ else if (parent.inSubquery(subquery)) {\n                         if (c.isRegistered(_parent)) { \n                             Value var = c.getRegisteredVariable(_parent);\n                             path = factory.newPath(var);\n-                        } else \n+                        } else {\n                             path = factory.newPath(subQ);\n+                        }\n                         path.setMetaData(meta);\n-                        path.get(_member.fmd, false);\n+                        path.get(_member.fmd, allowNull);\n                         path.setSchemaAlias(c.getAlias(_parent));\n                     } \n                 } else if (c.isRegistered(_parent)) {\n                     Value var = c.getRegisteredVariable(_parent);\n                     path = factory.newPath(var);\n                     path.setMetaData(meta);\n-                    path.get(_member.fmd, false);\n+                    path.get(_member.fmd, allowNull);\n                 } else            \n                     path = (org.apache.openjpa.kernel.exps.Path)toValue(factory, c);\n                 \n@@ -409,14 +410,14 @@ public Value toValue(ExpressionFactory factory, CriteriaQueryImpl<?> c) {\n                             path = factory.newPath(subQ);\n                         }\n                         path.setMetaData(meta);\n-                        path.get(_member.fmd, false);\n+                        path.get(_member.fmd, allowNull);\n                         path.setSchemaAlias(c.getAlias(_parent));\n                     } \n                 } else if (c.isRegistered(_parent)) {\n                     Value var = c.getRegisteredVariable(_parent);\n                     path = factory.newPath(var);\n                     path.setMetaData(meta);\n-                    path.get(_member.fmd, false);\n+                    path.get(_member.fmd, allowNull);\n                 } else {           \n                     path = (org.apache.openjpa.kernel.exps.Path)toValue(factory, c);\n                 }"}]}

