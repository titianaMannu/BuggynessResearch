{"sha":"18dd7e8542ca5e97f2e9d7b54495018c8864e5b9","node_id":"MDY6Q29tbWl0MjA2MzY0OjE4ZGQ3ZTg1NDJjYTVlOTdmMmU5ZDdiNTQ0OTUwMThjODg2NGU1Yjk=","commit":{"author":{"name":"Milosz Tylenda","email":"mtylenda@apache.org","date":"2010-05-21T19:49:58Z"},"committer":{"name":"Milosz Tylenda","email":"mtylenda@apache.org","date":"2010-05-21T19:49:58Z"},"message":"OPENJPA-1667: Fix incorrect column type for LOB streaming in MySQL.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@947144 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"ed22c47bec8c3eab192eafbffcf09c378b08c9a1","url":"https://api.github.com/repos/apache/openjpa/git/trees/ed22c47bec8c3eab192eafbffcf09c378b08c9a1"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/18dd7e8542ca5e97f2e9d7b54495018c8864e5b9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/18dd7e8542ca5e97f2e9d7b54495018c8864e5b9","html_url":"https://github.com/apache/openjpa/commit/18dd7e8542ca5e97f2e9d7b54495018c8864e5b9","comments_url":"https://api.github.com/repos/apache/openjpa/commits/18dd7e8542ca5e97f2e9d7b54495018c8864e5b9/comments","author":null,"committer":null,"parents":[{"sha":"52402f10833bb93e36072ffa2fbc48c54e9228c9","url":"https://api.github.com/repos/apache/openjpa/commits/52402f10833bb93e36072ffa2fbc48c54e9228c9","html_url":"https://github.com/apache/openjpa/commit/52402f10833bb93e36072ffa2fbc48c54e9228c9"}],"stats":{"total":9,"additions":7,"deletions":2},"files":[{"sha":"1321f8b9085f3ec5a388a0320deecc2895cf08d0","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/MySQLDictionary.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/18dd7e8542ca5e97f2e9d7b54495018c8864e5b9/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/MySQLDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/18dd7e8542ca5e97f2e9d7b54495018c8864e5b9/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/MySQLDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/MySQLDictionary.java?ref=18dd7e8542ca5e97f2e9d7b54495018c8864e5b9","patch":"@@ -460,7 +460,7 @@ public boolean isFatalException(int subtype, SQLException ex) {\n     @Override\n     public String getTypeName(Column col) {\n         if (col.getType() == Types.BLOB) {\n-            if (col.getSize() == 0)   // unknown size\n+            if (col.getSize() <= 0)   // unknown size\n                 return blobTypeName;  // return old default of 64KB\n             else if (col.getSize() <= 255)\n                 return tinyBlobTypeName;"},{"sha":"a0972f90eb69539877d01e70177e5f2a59f390fc","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/meta/strats/AbstractLobTest.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/18dd7e8542ca5e97f2e9d7b54495018c8864e5b9/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/meta/strats/AbstractLobTest.java","raw_url":"https://github.com/apache/openjpa/raw/18dd7e8542ca5e97f2e9d7b54495018c8864e5b9/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/meta/strats/AbstractLobTest.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/meta/strats/AbstractLobTest.java?ref=18dd7e8542ca5e97f2e9d7b54495018c8864e5b9","patch":"@@ -48,6 +48,8 @@\n \n public abstract class AbstractLobTest extends SingleEMFTestCase {\n \n+    protected static boolean firstTestExecuted;\n+\n     protected List<Class<? extends DBDictionary>> supportedDatabases =\n         new ArrayList<Class<? extends DBDictionary>>\n             (Arrays.asList(MySQLDictionary.class, OracleDictionary.class, SQLServerDictionary.class));\n@@ -58,7 +60,10 @@ public void setUp() throws Exception {\n             return;\n         }\n \n-        super.setUp(getLobEntityClass(), CLEAR_TABLES,\n+        // Test CREATE TABLE but only once to save time.\n+        Object clearOrDropTables = (firstTestExecuted) ? CLEAR_TABLES : DROP_TABLES;\n+        firstTestExecuted = true;\n+        super.setUp(getLobEntityClass(), clearOrDropTables,\n             \"openjpa.DataCache\", \"true\",\n             \"openjpa.RemoteCommitProvider\", \"sjvm\",\n             \"openjpa.ConnectionRetainMode\", \"transaction\");"}]}

