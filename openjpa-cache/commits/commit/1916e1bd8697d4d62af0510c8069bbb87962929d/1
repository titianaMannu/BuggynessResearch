{"sha":"1916e1bd8697d4d62af0510c8069bbb87962929d","node_id":"MDY6Q29tbWl0MjA2MzY0OjE5MTZlMWJkODY5N2Q0ZDYyYWYwNTEwYzgwNjliYmI4Nzk2MjkyOWQ=","commit":{"author":{"name":"Fay Wang","email":"faywang@apache.org","date":"2010-07-19T22:31:41Z"},"committer":{"name":"Fay Wang","email":"faywang@apache.org","date":"2010-07-19T22:31:41Z"},"message":"OPENJPA-1726: fix test case problem for Postgres. Postgres returns nextval depending on whether the two consecutive calls to nextval are in the same session or not. If they are in different sessions, the nextval returned by Postgres will be the next sequence number preallocated and stored in memory for the current session. The second nextval is not necessarily the first nextval + increment.  \n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@965663 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"ddce2835e8c57106f06dc5f358bee045b6db99c1","url":"https://api.github.com/repos/apache/openjpa/git/trees/ddce2835e8c57106f06dc5f358bee045b6db99c1"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/1916e1bd8697d4d62af0510c8069bbb87962929d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/1916e1bd8697d4d62af0510c8069bbb87962929d","html_url":"https://github.com/apache/openjpa/commit/1916e1bd8697d4d62af0510c8069bbb87962929d","comments_url":"https://api.github.com/repos/apache/openjpa/commits/1916e1bd8697d4d62af0510c8069bbb87962929d/comments","author":null,"committer":null,"parents":[{"sha":"9225c60a74271459b857eb74a1756d06319e051d","url":"https://api.github.com/repos/apache/openjpa/commits/9225c60a74271459b857eb74a1756d06319e051d","html_url":"https://github.com/apache/openjpa/commit/9225c60a74271459b857eb74a1756d06319e051d"}],"stats":{"total":2,"additions":1,"deletions":1},"files":[{"sha":"349a681b41780c4d85af27a0ec409eb1b247e595","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/generationtype/TestNativeSeqGenerator.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/1916e1bd8697d4d62af0510c8069bbb87962929d/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/generationtype/TestNativeSeqGenerator.java","raw_url":"https://github.com/apache/openjpa/raw/1916e1bd8697d4d62af0510c8069bbb87962929d/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/generationtype/TestNativeSeqGenerator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/generationtype/TestNativeSeqGenerator.java?ref=1916e1bd8697d4d62af0510c8069bbb87962929d","patch":"@@ -59,7 +59,7 @@ public void testGetIdGeneratorSeqGen() {\n         em.getTransaction().commit();\n         int genId = entityE2.getId();        \n         int nextId = (int)((Long)em.getIdGenerator(EntityE2.class).next()).longValue();\n-        assertTrue(\"Next value should depend on previous genid\", nextId == genId + 1);\n+        assertTrue(\"Next value should depend on previous genid\", nextId >= genId + 1);\n         em.close();\n     }\n }"}]}

