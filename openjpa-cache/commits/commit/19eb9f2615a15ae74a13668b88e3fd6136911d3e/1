{"sha":"19eb9f2615a15ae74a13668b88e3fd6136911d3e","node_id":"MDY6Q29tbWl0MjA2MzY0OjE5ZWI5ZjI2MTVhMTVhZTc0YTEzNjY4Yjg4ZTNmZDYxMzY5MTFkM2U=","commit":{"author":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2009-11-09T22:02:15Z"},"committer":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2009-11-09T22:02:15Z"},"message":"OPENJPA-1379: Fixed locking problem in AbstractQueryCache when using timestamp eviction policy and added new test case.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@834252 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"067bd4c876c02c4d330c6c0cde2d2d7c90aef8b8","url":"https://api.github.com/repos/apache/openjpa/git/trees/067bd4c876c02c4d330c6c0cde2d2d7c90aef8b8"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/19eb9f2615a15ae74a13668b88e3fd6136911d3e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/19eb9f2615a15ae74a13668b88e3fd6136911d3e","html_url":"https://github.com/apache/openjpa/commit/19eb9f2615a15ae74a13668b88e3fd6136911d3e","comments_url":"https://api.github.com/repos/apache/openjpa/commits/19eb9f2615a15ae74a13668b88e3fd6136911d3e/comments","author":null,"committer":null,"parents":[{"sha":"218f57a731b60405ed3d6fc88ca5d38b47652a22","url":"https://api.github.com/repos/apache/openjpa/commits/218f57a731b60405ed3d6fc88ca5d38b47652a22","html_url":"https://github.com/apache/openjpa/commit/218f57a731b60405ed3d6fc88ca5d38b47652a22"}],"stats":{"total":34,"additions":32,"deletions":2},"files":[{"sha":"ad9cb6f6a15d47331edec0470b9635ad422c926d","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/datacache/AbstractQueryCache.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/19eb9f2615a15ae74a13668b88e3fd6136911d3e/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/AbstractQueryCache.java","raw_url":"https://github.com/apache/openjpa/raw/19eb9f2615a15ae74a13668b88e3fd6136911d3e/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/AbstractQueryCache.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/AbstractQueryCache.java?ref=19eb9f2615a15ae74a13668b88e3fd6136911d3e","patch":"@@ -94,9 +94,9 @@ public void initialize(DataCacheManager manager) {\n     }\n \n     public void onTypesChanged(TypesChangedEvent ev) {\n-        writeLock();\n-        Collection keys = null;\n         if (evictPolicy == EvictPolicy.DEFAULT) {\n+            writeLock();\n+            Collection keys = null;\n             try {\n                 if (hasListeners())\n                     fireEvent(ev);"},{"sha":"95e030747d8e936fa110c6f5e7b3bfe0d3ae3f3b","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/TestQueryTimestampEviction.java","status":"modified","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/apache/openjpa/blob/19eb9f2615a15ae74a13668b88e3fd6136911d3e/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/TestQueryTimestampEviction.java","raw_url":"https://github.com/apache/openjpa/raw/19eb9f2615a15ae74a13668b88e3fd6136911d3e/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/TestQueryTimestampEviction.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/TestQueryTimestampEviction.java?ref=19eb9f2615a15ae74a13668b88e3fd6136911d3e","patch":"@@ -18,7 +18,11 @@\n  */\n package org.apache.openjpa.persistence.jdbc.query.cache;\n \n+import java.util.Collections;\n+\n import org.apache.openjpa.datacache.ConcurrentQueryCache;\n+import org.apache.openjpa.datacache.QueryCache;\n+import org.apache.openjpa.datacache.TypesChangedEvent;\n import org.apache.openjpa.datacache.AbstractQueryCache.EvictPolicy;\n import org.apache.openjpa.jdbc.conf.JDBCConfiguration;\n \n@@ -58,5 +62,31 @@ public void testLoadQueries() {\n \n         this.recreateData = false;\n     }\n+\n+    /**\n+     * This testcase was added for OPENJPA-1379. Prior to this fix, the main thread holds a lock on\n+     * the QueryCache which it never released. As a result, thread t2 will never successfully obtain\n+     * the writeLock().\n+     * \n+     * The main thread holds the writeLock because setUp(..) calls deleteAllData() which eventually\n+     * results in AbstractQueryCache.onTypesChanges(TypesChangedEvent) being called.\n+     * \n+     * @throws Exception\n+     */\n+    public void testWriteLock() throws Exception {\n+        final QueryCache qc = emf.getConfiguration().getDataCacheManagerInstance().getSystemQueryCache();\n+        Thread t2 = new Thread() {\n+            public void run() {\n+                qc.writeLock();\n+                qc.writeUnlock();\n+            }\n+        };\n+        t2.start();\n+        t2.join(5000);\n+        \n+        if (t2.getState().equals(java.lang.Thread.State.WAITING)) {\n+            fail(\"The thread is still waiting on a writeLock()!\");\n+        }\n+    }\n }\n "}]}

