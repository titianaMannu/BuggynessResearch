{"sha":"1a130afb05ed4fd791884f403e516822fb2dc9ad","node_id":"MDY6Q29tbWl0MjA2MzY0OjFhMTMwYWZiMDVlZDRmZDc5MTg4NGY0MDNlNTE2ODIyZmIyZGM5YWQ=","commit":{"author":{"name":"David J. Wisneski","email":"wisneskid@apache.org","date":"2007-06-15T23:45:00Z"},"committer":{"name":"David J. Wisneski","email":"wisneskid@apache.org","date":"2007-06-15T23:45:00Z"},"message":"OPENJPA-240 Feature:Persistent field mapping support for XML column type.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@547832 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"59bfb7b55d2514087a21746573f77f04ad38f1fc","url":"https://api.github.com/repos/apache/openjpa/git/trees/59bfb7b55d2514087a21746573f77f04ad38f1fc"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/1a130afb05ed4fd791884f403e516822fb2dc9ad","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/1a130afb05ed4fd791884f403e516822fb2dc9ad","html_url":"https://github.com/apache/openjpa/commit/1a130afb05ed4fd791884f403e516822fb2dc9ad","comments_url":"https://api.github.com/repos/apache/openjpa/commits/1a130afb05ed4fd791884f403e516822fb2dc9ad/comments","author":null,"committer":null,"parents":[{"sha":"f026af58cd50053116d8aad238f2e041ba76d8a5","url":"https://api.github.com/repos/apache/openjpa/commits/f026af58cd50053116d8aad238f2e041ba76d8a5","html_url":"https://github.com/apache/openjpa/commit/f026af58cd50053116d8aad238f2e041ba76d8a5"}],"stats":{"total":11,"additions":11,"deletions":0},"files":[{"sha":"e46eba7cd39c964e6a9e04bca4c9f368a82f95ff","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/AnnotationPersistenceMappingParser.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/1a130afb05ed4fd791884f403e516822fb2dc9ad/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/AnnotationPersistenceMappingParser.java","raw_url":"https://github.com/apache/openjpa/raw/1a130afb05ed4fd791884f403e516822fb2dc9ad/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/AnnotationPersistenceMappingParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/AnnotationPersistenceMappingParser.java?ref=1a130afb05ed4fd791884f403e516822fb2dc9ad","patch":"@@ -51,6 +51,7 @@\n import javax.persistence.TableGenerator;\n import javax.persistence.Temporal;\n import javax.persistence.UniqueConstraint;\n+import javax.xml.bind.annotation.XmlType;\n \n import org.apache.commons.lang.StringUtils;\n import org.apache.openjpa.jdbc.conf.JDBCConfiguration;\n@@ -70,6 +71,7 @@\n import org.apache.openjpa.jdbc.meta.strats.VerticalClassStrategy;\n import org.apache.openjpa.jdbc.schema.Column;\n import org.apache.openjpa.jdbc.schema.Unique;\n+import org.apache.openjpa.jdbc.sql.DBDictionary;\n import org.apache.openjpa.lib.log.Log;\n import org.apache.openjpa.lib.util.Localizer;\n import org.apache.openjpa.meta.ClassMetaData;\n@@ -1031,6 +1033,15 @@ protected void parseColumns(FieldMapping fm,\n                     cols = new ArrayList<Column>(pcols.length);\n                 cols.add(newColumn(pcols[i]));\n             }\n+            \n+            if (StringUtils.isEmpty(pcols[i].columnDefinition())\n+                && fm.getDeclaredType().isAnnotationPresent(XmlType.class)) {\n+                DBDictionary dict = ((MappingRepository) getRepository())\n+                    .getDBDictionary();\n+                if (dict.supportsXMLColumn)\n+                  // column maps to xml type\n+                  ((Column) cols.get(i)).setTypeName(dict.xmlTypeName);\n+            }\n \n             unique |= (pcols[i].unique()) ? TRUE : FALSE;\n             secondary = trackSecondaryTable(fm, secondary,"}]}

