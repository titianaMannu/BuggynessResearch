{"sha":"1a2d048f3df28611a51888d74599285664d3ed30","node_id":"MDY6Q29tbWl0MjA2MzY0OjFhMmQwNDhmM2RmMjg2MTFhNTE4ODhkNzQ1OTkyODU2NjRkM2VkMzA=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2006-08-04T21:12:35Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2006-08-04T21:12:35Z"},"message":"load-fetch-group annotation added\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@428883 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"8111f807b83e7ff70268f9106b23e094a557db48","url":"https://api.github.com/repos/apache/openjpa/git/trees/8111f807b83e7ff70268f9106b23e094a557db48"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/1a2d048f3df28611a51888d74599285664d3ed30","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/1a2d048f3df28611a51888d74599285664d3ed30","html_url":"https://github.com/apache/openjpa/commit/1a2d048f3df28611a51888d74599285664d3ed30","comments_url":"https://api.github.com/repos/apache/openjpa/commits/1a2d048f3df28611a51888d74599285664d3ed30/comments","author":null,"committer":null,"parents":[{"sha":"ca83f07b459322422b7916f04307b81a553ca193","url":"https://api.github.com/repos/apache/openjpa/commits/ca83f07b459322422b7916f04307b81a553ca193","html_url":"https://github.com/apache/openjpa/commit/ca83f07b459322422b7916f04307b81a553ca193"}],"stats":{"total":41,"additions":41,"deletions":0},"files":[{"sha":"5e59f2eab186f5c8299d3b15b659ba0a08ea66c1","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/1a2d048f3df28611a51888d74599285664d3ed30/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java","raw_url":"https://github.com/apache/openjpa/raw/1a2d048f3df28611a51888d74599285664d3ed30/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java?ref=1a2d048f3df28611a51888d74599285664d3ed30","patch":"@@ -160,6 +160,7 @@\n         _tags.put(Factory.class, FACTORY);\n         _tags.put(FetchGroup.class, FETCH_GROUP);\n         _tags.put(FetchGroups.class, FETCH_GROUPS);\n+        _tags.put(LoadFetchGroup.class, LOAD_FETCH_GROUP);\n         _tags.put(InverseLogical.class, INVERSE_LOGICAL);\n         _tags.put(KeyDependent.class, KEY_DEPENDENT);\n         _tags.put(KeyType.class, KEY_TYPE);\n@@ -1042,6 +1043,10 @@ private void parseMemberAnnotations(FieldMetaData fmd) {\n                         fmd.setTypeOverride(toOverrideType(((Type) anno).\n                             value()));\n                     break;\n+                case LOAD_FETCH_GROUP:\n+                \tif (isMetaDataMode())\n+                \t\tfmd.setLoadFetchGroup(((LoadFetchGroup)anno).value());\n+                \tbreak;\n                 default:\n                     throw new UnsupportedException(_loc.get(\"unsupported\", fmd,\n                         anno.toString()));"},{"sha":"e125a46d16a2cca2e6af3d21ab40263aecf0a1b8","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/LoadFetchGroup.java","status":"added","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/apache/openjpa/blob/1a2d048f3df28611a51888d74599285664d3ed30/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/LoadFetchGroup.java","raw_url":"https://github.com/apache/openjpa/raw/1a2d048f3df28611a51888d74599285664d3ed30/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/LoadFetchGroup.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/LoadFetchGroup.java?ref=1a2d048f3df28611a51888d74599285664d3ed30","patch":"@@ -0,0 +1,35 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence;\n+\n+import static java.lang.annotation.ElementType.FIELD;\n+import static java.lang.annotation.ElementType.METHOD;\n+import java.lang.annotation.Retention;\n+import static java.lang.annotation.RetentionPolicy.RUNTIME;\n+import java.lang.annotation.Target;\n+\n+/**\n+ * Fetch group loaded when the annotated field/property is loaded. \n+ *\n+ * @author Pinaki Poddar\n+ * @since 4.0\n+ */\n+@Target({ METHOD, FIELD })\n+@Retention(RUNTIME)\n+public @interface LoadFetchGroup {\n+\n+    String value();\n+}"},{"sha":"2eaa53513745ea0ecf67e03f9d9aba5a7872e6dd","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/MetaDataTag.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/1a2d048f3df28611a51888d74599285664d3ed30/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/MetaDataTag.java","raw_url":"https://github.com/apache/openjpa/raw/1a2d048f3df28611a51888d74599285664d3ed30/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/MetaDataTag.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/MetaDataTag.java?ref=1a2d048f3df28611a51888d74599285664d3ed30","patch":"@@ -67,6 +67,7 @@\n     FACTORY,\n     FETCH_GROUP,\n     FETCH_GROUPS,\n+    LOAD_FETCH_GROUP,\n     INVERSE_LOGICAL,\n     KEY_DEPENDENT,\n     KEY_TYPE,"}]}

