{"sha":"1aaa1aa08647c357a406ecee42e6b2439c60fb27","node_id":"MDY6Q29tbWl0MjA2MzY0OjFhYWExYWEwODY0N2MzNTdhNDA2ZWNlZTQyZTZiMjQzOWM2MGZiMjc=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-12-01T22:51:01Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-12-01T22:51:01Z"},"message":"OPENJPA-1409: Preserve type for currentDate/Time expressions\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@885989 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"82870ed889270cfce9362234cadca9aae2a97694","url":"https://api.github.com/repos/apache/openjpa/git/trees/82870ed889270cfce9362234cadca9aae2a97694"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/1aaa1aa08647c357a406ecee42e6b2439c60fb27","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/1aaa1aa08647c357a406ecee42e6b2439c60fb27","html_url":"https://github.com/apache/openjpa/commit/1aaa1aa08647c357a406ecee42e6b2439c60fb27","comments_url":"https://api.github.com/repos/apache/openjpa/commits/1aaa1aa08647c357a406ecee42e6b2439c60fb27/comments","author":null,"committer":null,"parents":[{"sha":"ab52f1fa03ec427efc9bcd477d87d6c9437b2882","url":"https://api.github.com/repos/apache/openjpa/commits/ab52f1fa03ec427efc9bcd477d87d6c9437b2882","html_url":"https://github.com/apache/openjpa/commit/ab52f1fa03ec427efc9bcd477d87d6c9437b2882"}],"stats":{"total":99,"additions":66,"deletions":33},"files":[{"sha":"05519fb90813637b30a73ce2a36163600703ffe2","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/JDBCExpressionFactory.java","status":"modified","additions":8,"deletions":12,"changes":20,"blob_url":"https://github.com/apache/openjpa/blob/1aaa1aa08647c357a406ecee42e6b2439c60fb27/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/JDBCExpressionFactory.java","raw_url":"https://github.com/apache/openjpa/raw/1aaa1aa08647c357a406ecee42e6b2439c60fb27/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/JDBCExpressionFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/JDBCExpressionFactory.java?ref=1aaa1aa08647c357a406ecee42e6b2439c60fb27","patch":"@@ -19,6 +19,7 @@\n package org.apache.openjpa.jdbc.kernel.exps;\n \n import java.io.Serializable;\n+import java.util.Date;\n \n import org.apache.openjpa.jdbc.meta.ClassMapping;\n import org.apache.openjpa.jdbc.meta.JavaSQLTypes;\n@@ -49,13 +50,8 @@\n     implements ExpressionFactory, Serializable {\n \n     private static final Val NULL = new Null();\n-    private static final Val CURRENT_DATE = new CurrentDate(JavaSQLTypes.DATE);\n-    private static final Val CURRENT_TIME = new CurrentDate(JavaSQLTypes.TIME);\n-    private static final Val CURRENT_TIMESTAMP =\n-        new CurrentDate(JavaSQLTypes.TIMESTAMP);\n \n-    private static final Localizer _loc = Localizer.forPackage\n-        (JDBCExpressionFactory.class);\n+    private static final Localizer _loc = Localizer.forPackage(JDBCExpressionFactory.class);\n \n     private final ClassMapping _type;\n     private final SelectConstructor _cons = new SelectConstructor();\n@@ -263,16 +259,16 @@ public Value getNull() {\n         return NULL;\n     }\n \n-    public Value getCurrentDate() {\n-        return CURRENT_DATE;\n+    public <T extends Date> Value getCurrentDate(Class<T> dateType) {\n+        return new CurrentDate(dateType);\n     }\n \n-    public Value getCurrentTime() {\n-        return CURRENT_TIME;\n+    public <T extends Date> Value getCurrentTime(Class<T> dateType) {\n+        return  new CurrentDate(dateType);\n     }\n \n-    public Value getCurrentTimestamp() {\n-        return CURRENT_TIMESTAMP;\n+    public <T extends Date> Value getCurrentTimestamp(Class<T> dateType) {\n+        return  new CurrentDate(dateType);\n     }\n \n     public Parameter newParameter(Object name, Class type) {"},{"sha":"ec2505fe440e3661484f1e87412d2821bb94981b","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/CurrentDate.java","status":"modified","additions":14,"deletions":5,"changes":19,"blob_url":"https://github.com/apache/openjpa/blob/1aaa1aa08647c357a406ecee42e6b2439c60fb27/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/CurrentDate.java","raw_url":"https://github.com/apache/openjpa/raw/1aaa1aa08647c357a406ecee42e6b2439c60fb27/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/CurrentDate.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/CurrentDate.java?ref=1aaa1aa08647c357a406ecee42e6b2439c60fb27","patch":"@@ -29,16 +29,25 @@\n  */\n class CurrentDate\n     extends Val {\n-\n+    private final Class<? extends Date> _type;\n+    \n+    public CurrentDate(Class<? extends Date> type) {\n+        _type = type;\n+    }\n+    \n     public Class getType() {\n-        return Date.class;\n+        return _type;\n     }\n \n     public void setImplicitType(Class type) {\n     }\n \n-    protected Object eval(Object candidate, Object orig,\n-        StoreContext ctx, Object[] params) {\n-        return new Date();\n+    protected Object eval(Object candidate, Object orig, StoreContext ctx, Object[] params) {\n+        try {\n+            _type.getConstructor(long.class).newInstance(System.currentTimeMillis());\n+        } catch (Exception e) {\n+            return new Date();\n+        }\n+        return null;\n     }\n }"},{"sha":"ddc3829b811bce04213bce0ba8f506f9f91d324b","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/ExpressionFactory.java","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/1aaa1aa08647c357a406ecee42e6b2439c60fb27/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/ExpressionFactory.java","raw_url":"https://github.com/apache/openjpa/raw/1aaa1aa08647c357a406ecee42e6b2439c60fb27/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/ExpressionFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/ExpressionFactory.java?ref=1aaa1aa08647c357a406ecee42e6b2439c60fb27","patch":"@@ -18,6 +18,10 @@\n  */\n package org.apache.openjpa.kernel.exps;\n \n+import java.sql.Time;\n+import java.sql.Timestamp;\n+import java.util.Date;\n+\n import org.apache.openjpa.meta.ClassMetaData;\n \n /**\n@@ -229,17 +233,17 @@ public Subquery newSubquery(ClassMetaData candidate, boolean subs,\n     /**\n      * Return a value representing the current date.\n      */\n-    public Value getCurrentDate();\n+    public <T extends Date> Value getCurrentDate(Class<T> dateType);\n \n     /**\n      * Return a value representing the current time.\n      */\n-    public Value getCurrentTime();\n+    public <T extends Date> Value getCurrentTime(Class<T> timeType);\n \n     /**\n      * Return a value representing the current timestamp.\n      */\n-    public Value getCurrentTimestamp();\n+    public <T extends Date> Value getCurrentTimestamp(Class<T> timestampType);\n \n     /**\n      * Return a value representing a parameter for the given value. The"},{"sha":"6363126ec065bd551a929b829ecea05edfde1745","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/InMemoryExpressionFactory.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/apache/openjpa/blob/1aaa1aa08647c357a406ecee42e6b2439c60fb27/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/InMemoryExpressionFactory.java","raw_url":"https://github.com/apache/openjpa/raw/1aaa1aa08647c357a406ecee42e6b2439c60fb27/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/InMemoryExpressionFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/InMemoryExpressionFactory.java?ref=1aaa1aa08647c357a406ecee42e6b2439c60fb27","patch":"@@ -23,6 +23,7 @@\n import java.util.Collection;\n import java.util.Collections;\n import java.util.Comparator;\n+import java.util.Date;\n import java.util.HashSet;\n import java.util.Iterator;\n import java.util.List;\n@@ -49,7 +50,6 @@\n     implements ExpressionFactory {\n \n     private static final Value NULL = new Null();\n-    private static final Value CURRENT_DATE = new CurrentDate();\n     private static final Object UNIQUE = new Object();\n \n     // list of unbound variables in this query\n@@ -493,16 +493,16 @@ public Value getNull() {\n         return NULL;\n     }\n \n-    public Value getCurrentDate() {\n-        return CURRENT_DATE;\n+    public <T extends Date> Value getCurrentDate(Class<T> dateType) {\n+        return new CurrentDate(dateType);\n     }\n \n-    public Value getCurrentTime() {\n-        return CURRENT_DATE;\n+    public  <T extends Date> Value getCurrentTime(Class<T> dateType) {\n+        return new CurrentDate(dateType);\n     }\n \n-    public Value getCurrentTimestamp() {\n-        return CURRENT_DATE;\n+    public <T extends Date> Value getCurrentTimestamp(Class<T> dateType) {\n+        return new CurrentDate(dateType);\n     }\n \n     public Parameter newParameter(Object name, Class type) {"},{"sha":"4f0ba85ca50635cb3a498e5a01e6fbdeddd74eac","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/jpql/JPQLExpressionBuilder.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/1aaa1aa08647c357a406ecee42e6b2439c60fb27/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/jpql/JPQLExpressionBuilder.java","raw_url":"https://github.com/apache/openjpa/raw/1aaa1aa08647c357a406ecee42e6b2439c60fb27/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/jpql/JPQLExpressionBuilder.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/jpql/JPQLExpressionBuilder.java?ref=1aaa1aa08647c357a406ecee42e6b2439c60fb27","patch":"@@ -22,9 +22,12 @@\n import java.io.Serializable;\n import java.lang.reflect.Field;\n import java.math.BigDecimal;\n+import java.sql.Time;\n+import java.sql.Timestamp;\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n+import java.util.Date;\n import java.util.Iterator;\n import java.util.LinkedHashSet;\n import java.util.List;\n@@ -1367,13 +1370,13 @@ else if (node.getChildCount() == 2\n                 return evalNot(not, factory.contains(val2, val1));\n \n             case JJTCURRENTDATE:\n-                return factory.getCurrentDate();\n+                return factory.getCurrentDate(Date.class);\n \n             case JJTCURRENTTIME:\n-                return factory.getCurrentTime();\n+                return factory.getCurrentTime(Time.class);\n \n             case JJTCURRENTTIMESTAMP:\n-                return factory.getCurrentTimestamp();\n+                return factory.getCurrentTimestamp(Timestamp.class);\n \n             case JJTSELECTEXTENSION:\n                 assertQueryExtensions(\"SELECT\");"},{"sha":"b95177495a52b87259e5391c9705be55b908aa04","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/TestTypesafeCriteria.java","status":"modified","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/apache/openjpa/blob/1aaa1aa08647c357a406ecee42e6b2439c60fb27/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/TestTypesafeCriteria.java","raw_url":"https://github.com/apache/openjpa/raw/1aaa1aa08647c357a406ecee42e6b2439c60fb27/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/TestTypesafeCriteria.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/TestTypesafeCriteria.java?ref=1aaa1aa08647c357a406ecee42e6b2439c60fb27","patch":"@@ -19,6 +19,7 @@\n package org.apache.openjpa.persistence.criteria;\n \n import java.math.BigDecimal;\n+import java.sql.Time;\n import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.List;\n@@ -27,6 +28,7 @@\n import javax.persistence.Parameter;\n import javax.persistence.Query;\n import javax.persistence.Tuple;\n+import javax.persistence.TypedQuery;\n import javax.persistence.criteria.CriteriaQuery;\n import javax.persistence.criteria.Expression;\n import javax.persistence.criteria.Join;\n@@ -1456,4 +1458,23 @@ public void testDisjunctionAsFalse() {\n \n        List result = q.getResultList();        \n     }\n+    \n+    public void testCurrentTimeReturnsSQLTypes() {\n+        em.getTransaction().begin();\n+        Product pc = new Product();\n+        em.persist(pc);\n+        em.getTransaction().commit();\n+        \n+        int pid = pc.getPid();\n+        \n+        CriteriaQuery<Time> cquery = cb.createQuery(Time.class);\n+        Root<Product> product = cquery.from(Product.class);\n+        cquery.select(cb.currentTime());\n+        cquery.where(cb.equal(product.get(Product_.pid), pid));\n+\n+        TypedQuery<Time> tq = em.createQuery(cquery);\n+        Object result = tq.getSingleResult();\n+        assertTrue(result.getClass() + \" not instance of Time\", result instanceof Time);  \n+        \n+    }\n }"},{"sha":"fb36b89540ec8d622f9a8234c1c5baf5fcf7ba4f","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/Expressions.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/1aaa1aa08647c357a406ecee42e6b2439c60fb27/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/Expressions.java","raw_url":"https://github.com/apache/openjpa/raw/1aaa1aa08647c357a406ecee42e6b2439c60fb27/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/Expressions.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/Expressions.java?ref=1aaa1aa08647c357a406ecee42e6b2439c60fb27","patch":"@@ -792,7 +792,7 @@ public  CurrentDate() {\n \n         @Override\n         public Value toValue(ExpressionFactory factory, CriteriaQueryImpl<?> q) {\n-            return factory.getCurrentDate();\n+            return factory.getCurrentDate(getJavaType());\n         }\n         \n         @Override\n@@ -808,7 +808,7 @@ public  CurrentTime() {\n \n         @Override\n         public Value toValue(ExpressionFactory factory, CriteriaQueryImpl<?> q) {\n-            return factory.getCurrentTime();\n+            return factory.getCurrentTime(getJavaType());\n         }\n         \n         @Override\n@@ -824,7 +824,7 @@ public  CurrentTimestamp() {\n \n         @Override\n         public Value toValue(ExpressionFactory factory, CriteriaQueryImpl<?> q) {\n-            return factory.getCurrentTimestamp();\n+            return factory.getCurrentTimestamp(getJavaType());\n         }\n         \n         @Override"}]}

