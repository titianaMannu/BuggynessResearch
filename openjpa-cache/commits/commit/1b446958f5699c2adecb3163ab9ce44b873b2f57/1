{"sha":"1b446958f5699c2adecb3163ab9ce44b873b2f57","node_id":"MDY6Q29tbWl0MjA2MzY0OjFiNDQ2OTU4ZjU2OTljMmFkZWNiMzE2M2FiOWNlNDRiODczYjJmNTc=","commit":{"author":{"name":"A. Abram White","email":"awhite@apache.org","date":"2007-02-20T16:33:54Z"},"committer":{"name":"A. Abram White","email":"awhite@apache.org","date":"2007-02-20T16:33:54Z"},"message":"OPENJPA-146 : When copying an OID superclass field for re-mapping, revert type\nto PC.  It will re-resolve to OID on its own when the field's metadata is\nresolved, and in the meantime it will ensure we use the same path for \nmetadata resolution as non-copied fields.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@509632 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0cb587e5d312d722790c40cb975180e7d439aae0","url":"https://api.github.com/repos/apache/openjpa/git/trees/0cb587e5d312d722790c40cb975180e7d439aae0"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/1b446958f5699c2adecb3163ab9ce44b873b2f57","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/1b446958f5699c2adecb3163ab9ce44b873b2f57","html_url":"https://github.com/apache/openjpa/commit/1b446958f5699c2adecb3163ab9ce44b873b2f57","comments_url":"https://api.github.com/repos/apache/openjpa/commits/1b446958f5699c2adecb3163ab9ce44b873b2f57/comments","author":null,"committer":null,"parents":[{"sha":"4f102a7c77a321699663e9fba7449725e52d86ba","url":"https://api.github.com/repos/apache/openjpa/commits/4f102a7c77a321699663e9fba7449725e52d86ba","html_url":"https://github.com/apache/openjpa/commit/4f102a7c77a321699663e9fba7449725e52d86ba"}],"stats":{"total":12,"additions":9,"deletions":3},"files":[{"sha":"a33036ad399c36a9edbc30428192a3dbf1f20948","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingTool.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/1b446958f5699c2adecb3163ab9ce44b873b2f57/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingTool.java","raw_url":"https://github.com/apache/openjpa/raw/1b446958f5699c2adecb3163ab9ce44b873b2f57/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingTool.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingTool.java?ref=1b446958f5699c2adecb3163ab9ce44b873b2f57","patch":"@@ -888,7 +888,8 @@ private void drop(Class cls) {\n      * <ul>\n      * <li>Refresh the mappings for given package, without dropping any\n      * schema components:<br />\n-     * <code>java org.apache.openjpa.jdbc.meta.MappingTool mypackage.jdo</code></li>\n+     * <code>java org.apache.openjpa.jdbc.meta.MappingTool \n+     *      mypackage.jdo</code></li>\n      * <li>Refresh the mappings for all persistent classes in the classpath,\n      * dropping any unused columns and even tables:<br />\n      * <code>java org.apache.openjpa.jdbc.meta.MappingTool -sa refresh"},{"sha":"218f9805ab88ca15b5adf6bfd6323ab6189971db","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/ValueMetaDataImpl.java","status":"modified","additions":7,"deletions":2,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/1b446958f5699c2adecb3163ab9ce44b873b2f57/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ValueMetaDataImpl.java","raw_url":"https://github.com/apache/openjpa/raw/1b446958f5699c2adecb3163ab9ce44b873b2f57/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ValueMetaDataImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ValueMetaDataImpl.java?ref=1b446958f5699c2adecb3163ab9ce44b873b2f57","patch":"@@ -201,8 +201,8 @@ public int getCascadeDelete() {\n \n         switch (_delete) {\n             case CASCADE_NONE:\n-                // if the user marks the owning field dependent and we externalize\n-                // to a pc type, then become dependent\n+                // if the user marks the owning field dependent and we \n+                // externalize to a pc type, then become dependent\n                 if (this != _owner.getValue() && isTypePC()\n                     && ((ValueMetaDataImpl) _owner.getValue())._delete\n                     == CASCADE_AUTO)\n@@ -432,8 +432,13 @@ private void resolveDeclaredType(Class type) {\n     }\n \n     public void copy(ValueMetaData vmd) {\n+        // copy declared types, but if OID revert to PC until we resolve\n+        // to OID ourselves\n         _decType = vmd.getDeclaredType();\n         _decCode = vmd.getDeclaredTypeCode();\n+        if (_decCode == JavaTypes.OID)\n+            _decCode = JavaTypes.PC;\n+\n         _delete = vmd.getCascadeDelete();\n         _persist = vmd.getCascadePersist();\n         _attach = vmd.getCascadeAttach();"}]}

