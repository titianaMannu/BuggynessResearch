{"sha":"1c01e8da2a9d37f885b7693b2e758608c04bd10f","node_id":"MDY6Q29tbWl0MjA2MzY0OjFjMDFlOGRhMmE5ZDM3Zjg4NWI3NjkzYjJlNzU4NjA4YzA0YmQxMGY=","commit":{"author":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-05-19T18:39:56Z"},"committer":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-05-19T18:39:56Z"},"message":"OPENJPA-1670: PCRegistry should not save duplicate listeners.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@946332 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"9993981e5cf960ff2edcb8047a48b07d8cd9afca","url":"https://api.github.com/repos/apache/openjpa/git/trees/9993981e5cf960ff2edcb8047a48b07d8cd9afca"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/1c01e8da2a9d37f885b7693b2e758608c04bd10f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/1c01e8da2a9d37f885b7693b2e758608c04bd10f","html_url":"https://github.com/apache/openjpa/commit/1c01e8da2a9d37f885b7693b2e758608c04bd10f","comments_url":"https://api.github.com/repos/apache/openjpa/commits/1c01e8da2a9d37f885b7693b2e758608c04bd10f/comments","author":null,"committer":null,"parents":[{"sha":"dd92e31eda3cd11ca91aae5beb12eee344076e28","url":"https://api.github.com/repos/apache/openjpa/commits/dd92e31eda3cd11ca91aae5beb12eee344076e28","html_url":"https://github.com/apache/openjpa/commit/dd92e31eda3cd11ca91aae5beb12eee344076e28"}],"stats":{"total":21,"additions":16,"deletions":5},"files":[{"sha":"404cee77f2ee98cc69930d5e39129084b0bfa792","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCRegistry.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/1c01e8da2a9d37f885b7693b2e758608c04bd10f/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCRegistry.java","raw_url":"https://github.com/apache/openjpa/raw/1c01e8da2a9d37f885b7693b2e758608c04bd10f/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCRegistry.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCRegistry.java?ref=1c01e8da2a9d37f885b7693b2e758608c04bd10f","patch":"@@ -20,6 +20,7 @@\n \n import java.util.Collection;\n import java.util.Collections;\n+import java.util.LinkedHashSet;\n import java.util.LinkedList;\n import java.util.Map;\n \n@@ -44,7 +45,7 @@\n             ReferenceMap.HARD);\n \n     // register class listeners\n-    private static final Collection<RegisterClassListener> _listeners = new LinkedList<RegisterClassListener>();\n+    private static final Collection<RegisterClassListener> _listeners = new LinkedHashSet<RegisterClassListener>();\n \n     /**\n      * Register a {@link RegisterClassListener}.\n@@ -67,9 +68,9 @@ public static void addRegisterClassListener(RegisterClassListener rcl) {\n     /**\n      * Removes a {@link RegisterClassListener}.\n      */\n-    public static void removeRegisterClassListener(RegisterClassListener rcl) {\n+    public static boolean removeRegisterClassListener(RegisterClassListener rcl) {\n         synchronized (_listeners) {\n-            _listeners.remove(rcl);\n+            return _listeners.remove(rcl);\n         }\n     }\n "},{"sha":"d6ec9200d0bf5e403da13e881a9e2ab5bd9af895","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/meta/TestMetaDataRepository.java","status":"modified","additions":12,"deletions":2,"changes":14,"blob_url":"https://github.com/apache/openjpa/blob/1c01e8da2a9d37f885b7693b2e758608c04bd10f/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/meta/TestMetaDataRepository.java","raw_url":"https://github.com/apache/openjpa/raw/1c01e8da2a9d37f885b7693b2e758608c04bd10f/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/meta/TestMetaDataRepository.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/meta/TestMetaDataRepository.java?ref=1c01e8da2a9d37f885b7693b2e758608c04bd10f","patch":"@@ -20,11 +20,11 @@\n \n import java.util.Collection;\n \n+import org.apache.openjpa.enhance.PCRegistry;\n+import org.apache.openjpa.enhance.PCRegistry.RegisterClassListener;\n import org.apache.openjpa.meta.ClassMetaData;\n-import org.apache.openjpa.meta.FieldMetaData;\n import org.apache.openjpa.meta.MetaDataRepository;\n import org.apache.openjpa.meta.QueryMetaData;\n-import org.apache.openjpa.meta.XMLMetaData;\n import org.apache.openjpa.persistence.OpenJPAEntityManagerFactorySPI;\n import org.apache.openjpa.persistence.test.AbstractPersistenceTestCase;\n import org.apache.openjpa.persistence.xmlmapping.entities.Customer;\n@@ -74,6 +74,16 @@ public void testPreloadBasic() {\n \t\t\t}\n \t\t}\n \t}\n+\t\n+\tpublic void testPreloadCleanUp() {\n+        OpenJPAEntityManagerFactorySPI emf = null;\n+        emf = createNamedEMF(PU_NAME, \"openjpa.MetaDataRepository\", \"Preload=true\");\n+        MetaDataRepository repo = emf.getConfiguration().getMetaDataRepositoryInstance();\n+        emf.createEntityManager();\n+        emf.close();\n+        assertFalse(\"The PCRegistry should no longer reference the MetaDataRepository.\", PCRegistry\n+            .removeRegisterClassListener(repo));\n+    }\n \n \tpublic void testXmlMappingPreload() {\n         OpenJPAEntityManagerFactorySPI emf = null;"}]}

