{"sha":"1c992feeb723b6e1b4464f7bdbf1a1961583124f","node_id":"MDY6Q29tbWl0MjA2MzY0OjFjOTkyZmVlYjcyM2I2ZTFiNDQ2NGY3YmRiZjFhMTk2MTU4MzEyNGY=","commit":{"author":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2010-03-07T16:16:06Z"},"committer":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2010-03-07T16:16:06Z"},"message":"OPENJPA-1552 Add proper QueryImpl creation in EntityManagerImpl subclass.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@920024 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c55f7f4d7a977ad2cfa0b18560c8ffac13b3e33b","url":"https://api.github.com/repos/apache/openjpa/git/trees/c55f7f4d7a977ad2cfa0b18560c8ffac13b3e33b"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/1c992feeb723b6e1b4464f7bdbf1a1961583124f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/1c992feeb723b6e1b4464f7bdbf1a1961583124f","html_url":"https://github.com/apache/openjpa/commit/1c992feeb723b6e1b4464f7bdbf1a1961583124f","comments_url":"https://api.github.com/repos/apache/openjpa/commits/1c992feeb723b6e1b4464f7bdbf1a1961583124f/comments","author":null,"committer":null,"parents":[{"sha":"b01f5718f9ee88246f3f771c7b63306802732ce7","url":"https://api.github.com/repos/apache/openjpa/commits/b01f5718f9ee88246f3f771c7b63306802732ce7","html_url":"https://github.com/apache/openjpa/commit/b01f5718f9ee88246f3f771c7b63306802732ce7"}],"stats":{"total":21,"additions":12,"deletions":9},"files":[{"sha":"d280e137ad420aa507d528c08a23d82be7582f93","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java","status":"modified","additions":12,"deletions":9,"changes":21,"blob_url":"https://github.com/apache/openjpa/blob/1c992feeb723b6e1b4464f7bdbf1a1961583124f/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/1c992feeb723b6e1b4464f7bdbf1a1961583124f/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java?ref=1c992feeb723b6e1b4464f7bdbf1a1961583124f","patch":"@@ -105,7 +105,7 @@\n     private DelegatingBroker _broker;\n     private EntityManagerFactoryImpl _emf;\n     private Map<FetchConfiguration,FetchPlan> _plans = new IdentityHashMap<FetchConfiguration,FetchPlan>(1);\n-    private RuntimeExceptionTranslator _ret = PersistenceExceptions.getRollbackTranslator(this);\n+    protected RuntimeExceptionTranslator _ret = PersistenceExceptions.getRollbackTranslator(this);\n \n     public EntityManagerImpl() {\n         // for Externalizable\n@@ -972,7 +972,7 @@ public OpenJPAQuery createQuery(String language, String query) {\n             if (pq != null) {\n                 pq.setInto(q);\n             }\n-            return new QueryImpl(this, _ret, q).setId(qid);\n+            return newQueryImpl(q).setId(qid);\n         } catch (RuntimeException re) {\n             throw PersistenceExceptions.toPersistenceException(re);\n         }\n@@ -983,8 +983,7 @@ public OpenJPAQuery createQuery(Query query) {\n             return createQuery((String) null);\n         assertNotCloseInvoked();\n         org.apache.openjpa.kernel.Query q = ((QueryImpl) query).getDelegate();\n-        return new QueryImpl(this, _ret, _broker.newQuery(q.getLanguage(),\n-            q));\n+        return newQueryImpl(_broker.newQuery(q.getLanguage(), q));\n     }\n     \n     @SuppressWarnings(\"unchecked\")\n@@ -1014,7 +1013,7 @@ public OpenJPAQuery createNamedQuery(String name) {\n                 del.compile();\n             }\n             \n-            OpenJPAQuery q = new QueryImpl(this, _ret, del).setId(qid);\n+            OpenJPAQuery q = newQueryImpl(del).setId(qid);\n             String[] hints = meta.getHintKeys();\n             Object[] values = meta.getHintValues();\n             for (int i = 0; i < hints.length; i++)\n@@ -1040,13 +1039,17 @@ public OpenJPAQuery createNativeQuery(String query, String mappingName) {\n         org.apache.openjpa.kernel.Query kernelQuery = _broker.newQuery(\n             QueryLanguages.LANG_SQL, query);\n         kernelQuery.setResultMapping(null, mappingName);\n-        return new QueryImpl(this, _ret, kernelQuery);\n+        return newQueryImpl(kernelQuery);\n+    }\n+\n+    protected <X> QueryImpl<X> newQueryImpl(org.apache.openjpa.kernel.Query kernelQuery) {\n+        return new QueryImpl<X>(this, _ret, kernelQuery);\n     }\n \n     /**\n      * Validate that the user provided SQL.\n      */\n-    private static void validateSQL(String query) {\n+    protected void validateSQL(String query) {\n         if (StringUtils.trimToNull(query) == null)\n             throw new ArgumentException(_loc.get(\"no-sql\"), null, null, false);\n     }\n@@ -1325,7 +1328,7 @@ public Object getVersion(Object o) {\n      * closed, it will throw its own more informative exception when we \n      * delegate the pending operation to it.\n      */\n-    void assertNotCloseInvoked() {\n+    protected void assertNotCloseInvoked() {\n         if (!_broker.isClosed() && _broker.isCloseInvoked())\n             throw new InvalidStateException(_loc.get(\"close-invoked\"), null,\n                 null, true);\n@@ -1562,7 +1565,7 @@ public void detach(Object entity) {\n         \n         org.apache.openjpa.kernel.Query kernelQuery =_broker.newQuery(CriteriaBuilderImpl.LANG_CRITERIA, criteriaQuery);\n         \n-        QueryImpl<T> facadeQuery = new QueryImpl<T>(this, _ret, kernelQuery);\n+        QueryImpl<T> facadeQuery = newQueryImpl(kernelQuery);\n         Set<ParameterExpression<?>> params = criteriaQuery.getParameters();\n         \n         for (ParameterExpression<?> param : params) {"}]}

