{"sha":"1dd5571047bccbd75043e7d8c7048ed88b914e03","node_id":"MDY6Q29tbWl0MjA2MzY0OjFkZDU1NzEwNDdiY2NiZDc1MDQzZTdkOGM3MDQ4ZWQ4OGI5MTRlMDM=","commit":{"author":{"name":"Romain Manni-Bucau","email":"rmannibucau@apache.org","date":"2015-11-27T12:15:47Z"},"committer":{"name":"Romain Manni-Bucau","email":"rmannibucau@apache.org","date":"2015-11-27T12:15:47Z"},"message":"OPENJPA-2617 adding BlacklistClassResolver to support blacklisting of class loading in our ObjectInputStream\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1716859 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"32940196a193d1de3aac93e34c92cefa07d76623","url":"https://api.github.com/repos/apache/openjpa/git/trees/32940196a193d1de3aac93e34c92cefa07d76623"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/1dd5571047bccbd75043e7d8c7048ed88b914e03","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/1dd5571047bccbd75043e7d8c7048ed88b914e03","html_url":"https://github.com/apache/openjpa/commit/1dd5571047bccbd75043e7d8c7048ed88b914e03","comments_url":"https://api.github.com/repos/apache/openjpa/commits/1dd5571047bccbd75043e7d8c7048ed88b914e03/comments","author":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","site_admin":false},"committer":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","site_admin":false},"parents":[{"sha":"ffaa46ef9985194421000bc6a3133a2e8252d80d","url":"https://api.github.com/repos/apache/openjpa/commits/ffaa46ef9985194421000bc6a3133a2e8252d80d","html_url":"https://github.com/apache/openjpa/commit/ffaa46ef9985194421000bc6a3133a2e8252d80d"}],"stats":{"total":68,"additions":66,"deletions":2},"files":[{"sha":"79922550270a327c481e2a082ee11055adcfe93a","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/BlacklistClassResolver.java","status":"added","additions":62,"deletions":0,"changes":62,"blob_url":"https://github.com/apache/openjpa/blob/1dd5571047bccbd75043e7d8c7048ed88b914e03/openjpa-kernel/src/main/java/org/apache/openjpa/util/BlacklistClassResolver.java","raw_url":"https://github.com/apache/openjpa/raw/1dd5571047bccbd75043e7d8c7048ed88b914e03/openjpa-kernel/src/main/java/org/apache/openjpa/util/BlacklistClassResolver.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/BlacklistClassResolver.java?ref=1dd5571047bccbd75043e7d8c7048ed88b914e03","patch":"@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.util;\n+\n+public class BlacklistClassResolver {\n+    public static final BlacklistClassResolver DEFAULT = new BlacklistClassResolver(\n+        toArray(\n+            System.getProperty(\n+                \"openjpa.serialization.class.blacklist\",\n+                \"org.codehaus.groovy.runtime.,org.apache.commons.collections.functors.,org.apache.xalan\")),\n+        toArray(System.getProperty(\"openjpa.serialization.class.whitelist\")));\n+\n+    private final String[] blacklist;\n+    private final String[] whitelist;\n+\n+    protected BlacklistClassResolver(final String[] blacklist, final String[] whitelist) {\n+        this.whitelist = whitelist;\n+        this.blacklist = blacklist;\n+    }\n+\n+    protected boolean isBlacklisted(final String name) {\n+        return !contains(whitelist, name) && contains(blacklist, name);\n+    }\n+\n+    public final String check(final String name) {\n+        if (isBlacklisted(name)) {\n+            throw new SecurityException(name + \" is not whitelisted as deserialisable, prevented before loading.\");\n+        }\n+        return name;\n+    }\n+\n+    private static String[] toArray(final String property) {\n+        return property == null ? null : property.split(\" *, *\");\n+    }\n+\n+    private static boolean contains(final String[] list, String name) {\n+        if (list != null) {\n+            for (final String white : list) {\n+                if (name.startsWith(white)) {\n+                    return true;\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+}"},{"sha":"0a12ea64c5459323010383bba33e4c3897dcbe44","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/Serialization.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/1dd5571047bccbd75043e7d8c7048ed88b914e03/openjpa-kernel/src/main/java/org/apache/openjpa/util/Serialization.java","raw_url":"https://github.com/apache/openjpa/raw/1dd5571047bccbd75043e7d8c7048ed88b914e03/openjpa-kernel/src/main/java/org/apache/openjpa/util/Serialization.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/Serialization.java?ref=1dd5571047bccbd75043e7d8c7048ed88b914e03","patch":"@@ -128,12 +128,13 @@ public ClassResolvingObjectInputStream(InputStream delegate)\n \n         protected Class resolveClass(ObjectStreamClass desc) \n             throws IOException, ClassNotFoundException {\n+            String name = BlacklistClassResolver.DEFAULT.check(desc.getName());\n             MultiClassLoader loader = AccessController\n                 .doPrivileged(J2DoPrivHelper.newMultiClassLoaderAction());\n             addContextClassLoaders(loader);\n             loader.addClassLoader(getClass().getClassLoader());\n             loader.addClassLoader(MultiClassLoader.SYSTEM_LOADER);\n-            return Class.forName(desc.getName(), true, loader);\n+            return Class.forName(name, true, loader);\n         }\n \n         protected void addContextClassLoaders(MultiClassLoader loader) {"},{"sha":"cfa0f1d35b198a4de08a8352bbd2b44bb9e98ce7","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/1dd5571047bccbd75043e7d8c7048ed88b914e03/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/1dd5571047bccbd75043e7d8c7048ed88b914e03/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java?ref=1dd5571047bccbd75043e7d8c7048ed88b914e03","patch":"@@ -84,6 +84,7 @@\n import org.apache.openjpa.persistence.criteria.OpenJPACriteriaBuilder;\n import org.apache.openjpa.persistence.criteria.OpenJPACriteriaQuery;\n import org.apache.openjpa.persistence.validation.ValidationUtils;\n+import org.apache.openjpa.util.BlacklistClassResolver;\n import org.apache.openjpa.util.ExceptionInfo;\n import org.apache.openjpa.util.Exceptions;\n import org.apache.openjpa.util.ImplHelper;\n@@ -1543,7 +1544,7 @@ private Class primitiveType(char type) {\n         protected Class<?> resolveClass(ObjectStreamClass classDesc)\n             throws IOException, ClassNotFoundException {\n \n-            String cname = classDesc.getName();\n+            String cname = BlacklistClassResolver.DEFAULT.check(classDesc.getName());\n             if (cname.startsWith(\"[\")) {\n                 // An array\n                 Class<?> component;\t\t// component class"}]}

