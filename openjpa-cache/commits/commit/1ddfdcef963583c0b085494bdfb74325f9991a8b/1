{"sha":"1ddfdcef963583c0b085494bdfb74325f9991a8b","node_id":"MDY6Q29tbWl0MjA2MzY0OjFkZGZkY2VmOTYzNTgzYzBiMDg1NDk0YmRmYjc0MzI1Zjk5OTFhOGI=","commit":{"author":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-04-14T18:39:54Z"},"committer":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-04-14T18:39:54Z"},"message":"OPENJPA-1630: Synchronize when modifying MetaDataRepository._registered regardless of MetaDataRepository.Preload setting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@934103 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"50c4f3128c2c97a7895230dbf58895705c3625e4","url":"https://api.github.com/repos/apache/openjpa/git/trees/50c4f3128c2c97a7895230dbf58895705c3625e4"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/1ddfdcef963583c0b085494bdfb74325f9991a8b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/1ddfdcef963583c0b085494bdfb74325f9991a8b","html_url":"https://github.com/apache/openjpa/commit/1ddfdcef963583c0b085494bdfb74325f9991a8b","comments_url":"https://api.github.com/repos/apache/openjpa/commits/1ddfdcef963583c0b085494bdfb74325f9991a8b/comments","author":null,"committer":null,"parents":[{"sha":"8a034d671755a672ce2c77af3830c97c1216b5b7","url":"https://api.github.com/repos/apache/openjpa/commits/8a034d671755a672ce2c77af3830c97c1216b5b7","html_url":"https://github.com/apache/openjpa/commit/8a034d671755a672ce2c77af3830c97c1216b5b7"}],"stats":{"total":15,"additions":2,"deletions":13},"files":[{"sha":"f92d0903c0228e6489ece168d760a3db501e6b7c","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataRepository.java","status":"modified","additions":2,"deletions":13,"changes":15,"blob_url":"https://github.com/apache/openjpa/blob/1ddfdcef963583c0b085494bdfb74325f9991a8b/openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataRepository.java","raw_url":"https://github.com/apache/openjpa/raw/1ddfdcef963583c0b085494bdfb74325f9991a8b/openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataRepository.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataRepository.java?ref=1ddfdcef963583c0b085494bdfb74325f9991a8b","patch":"@@ -1567,12 +1567,7 @@ private void clearInternal(){\n     public void register(Class<?> cls) {\n         // buffer registered classes until an oid metadata request is made,\n         // at which point we'll parse everything in the buffer\n-        if (_locking) {\n-            synchronized (_registered) {\n-                _registered.add(cls);\n-                registerAlias(cls);\n-            }\n-        } else {\n+        synchronized (_registered) {\n             _registered.add(cls);\n             registerAlias(cls);\n         }\n@@ -1603,16 +1598,10 @@ private void loadRegisteredClassMetaData(ClassLoader envLoader) {\n         // copy into new collection to avoid concurrent mod errors on reentrant\n         // registrations\n         Class<?>[] reg;\n-        if (_locking) {\n-            synchronized (_registered) {\n-                reg = _registered.toArray(new Class[_registered.size()]);\n-                _registered.clear();\n-            }\n-        } else {\n+        synchronized (_registered) {\n             reg = _registered.toArray(new Class[_registered.size()]);\n             _registered.clear();\n         }\n-        \n \n         Collection<String> pcNames = getPersistentTypeNames(false, envLoader);\n         Collection<Class<?>> failed = null;"}]}

