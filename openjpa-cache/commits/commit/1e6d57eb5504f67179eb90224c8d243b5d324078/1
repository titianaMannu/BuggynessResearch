{"sha":"1e6d57eb5504f67179eb90224c8d243b5d324078","node_id":"MDY6Q29tbWl0MjA2MzY0OjFlNmQ1N2ViNTUwNGY2NzE3OWViOTAyMjRjOGQyNDNiNWQzMjQwNzg=","commit":{"author":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-08-07T21:02:31Z"},"committer":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-08-07T21:02:31Z"},"message":"git-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@429477 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"46874490eed890051f979c270ba62d088f24c9b7","url":"https://api.github.com/repos/apache/openjpa/git/trees/46874490eed890051f979c270ba62d088f24c9b7"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/1e6d57eb5504f67179eb90224c8d243b5d324078","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/1e6d57eb5504f67179eb90224c8d243b5d324078","html_url":"https://github.com/apache/openjpa/commit/1e6d57eb5504f67179eb90224c8d243b5d324078","comments_url":"https://api.github.com/repos/apache/openjpa/commits/1e6d57eb5504f67179eb90224c8d243b5d324078/comments","author":null,"committer":null,"parents":[{"sha":"b499aded0d302ea393559215aafc6ceea242452d","url":"https://api.github.com/repos/apache/openjpa/commits/b499aded0d302ea393559215aafc6ceea242452d","html_url":"https://github.com/apache/openjpa/commit/b499aded0d302ea393559215aafc6ceea242452d"}],"stats":{"total":44,"additions":41,"deletions":3},"files":[{"sha":"cf97544e51dbf15d2ebf673204d565453a212c22","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingRepository.java","status":"modified","additions":41,"deletions":3,"changes":44,"blob_url":"https://github.com/apache/openjpa/blob/1e6d57eb5504f67179eb90224c8d243b5d324078/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingRepository.java","raw_url":"https://github.com/apache/openjpa/raw/1e6d57eb5504f67179eb90224c8d243b5d324078/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingRepository.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingRepository.java?ref=1e6d57eb5504f67179eb90224c8d243b5d324078","patch":"@@ -791,6 +791,12 @@ protected FieldStrategy defaultTypeStrategy(FieldMapping field,\n             case JavaTypes.ARRAY:\n             case JavaTypes.COLLECTION:\n                 ValueMapping elem = field.getElementMapping();\n+                ValueHandler ehandler = namedHandler(elem);\n+                if (ehandler == null)\n+                    ehandler = defaultHandler(elem);\n+                if (ehandler != null)\n+                    return handlerCollectionStrategy(field, ehandler, \n+                        installHandlers);\n                 if (elem.getTypeCode() == JavaTypes.PC\n                     && !elem.isSerialized() && !elem.isEmbeddedPC()) {\n                     if (useInverseKeyMapping(field))\n@@ -800,21 +806,53 @@ protected FieldStrategy defaultTypeStrategy(FieldMapping field,\n                 break;\n             case JavaTypes.MAP:\n                 ValueMapping key = field.getKeyMapping();\n+                ValueHandler khandler = namedHandler(key);\n+                if (khandler == null)\n+                    khandler = defaultHandler(key);\n                 ValueMapping val = field.getElementMapping();\n-                boolean krel = key.getTypeCode() == JavaTypes.PC\n+                ValueHandler vhandler = namedHandler(val);\n+                if (vhandler == null)\n+                    vhandler = defaultHandler(val);\n+                boolean krel = khandler == null \n+                    && key.getTypeCode() == JavaTypes.PC\n                     && !key.isSerialized() && !key.isEmbeddedPC();\n-                boolean vrel = val.getTypeCode() == JavaTypes.PC\n+                boolean vrel = vhandler == null \n+                    && val.getTypeCode() == JavaTypes.PC\n                     && !val.isSerialized() && !val.isEmbeddedPC();\n                 if (!krel && vrel && key.getValueMappedBy() != null) {\n                     if (useInverseKeyMapping(field))\n                         return new RelationMapInverseKeyFieldStrategy();\n                     return new RelationMapTableFieldStrategy();\n                 }\n-                break;\n+                if (!krel && khandler == null)\n+                    break;\n+                if (!vrel && vhandler == null)\n+                    break;\n+                return handlerMapStrategy(field, khandler, vhandler, krel,\n+                    vrel, installHandlers);\n         }\n         return null;\n     }\n \n+    /**\n+     * Return the collection strategy for the given element handler, or null\n+     * if none.\n+     */\n+    protected FieldStrategy handlerCollectionStrategy(FieldMapping field, \n+        ValueHandler ehandler, boolean installHandlers) {\n+        return null;\n+    }\n+\n+    /**\n+     * Return the map strategy for the given key and value handlers / relations,\n+     * or null if none.\n+     */\n+    protected FieldStrategy handlerMapStrategy(FieldMapping field, \n+        ValueHandler khandler, ValueHandler vhandler, boolean krel, \n+        boolean vrel,  boolean installHandlers) {\n+        return null;\n+    }\n+\n     /**\n      * Use hints in mapping data to figure out whether the given relation\n      * field should use an inverse foreign key or an association table mapping."}]}

