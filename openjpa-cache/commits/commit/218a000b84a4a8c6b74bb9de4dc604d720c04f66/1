{"sha":"218a000b84a4a8c6b74bb9de4dc604d720c04f66","node_id":"MDY6Q29tbWl0MjA2MzY0OjIxOGEwMDBiODRhNGE4YzZiNzRiYjlkZTRkYzYwNGQ3MjBjMDRmNjY=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2007-01-13T00:35:45Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2007-01-13T00:35:45Z"},"message":"ClassMappingInfo.addUnique() accepts a Unique instance rather than an array of column names\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@495800 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2dc0d371030ea361911ac88826134e2934ad7c6b","url":"https://api.github.com/repos/apache/openjpa/git/trees/2dc0d371030ea361911ac88826134e2934ad7c6b"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/218a000b84a4a8c6b74bb9de4dc604d720c04f66","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/218a000b84a4a8c6b74bb9de4dc604d720c04f66","html_url":"https://github.com/apache/openjpa/commit/218a000b84a4a8c6b74bb9de4dc604d720c04f66","comments_url":"https://api.github.com/repos/apache/openjpa/commits/218a000b84a4a8c6b74bb9de4dc604d720c04f66/comments","author":null,"committer":null,"parents":[{"sha":"b7c7a47aac588b33749bf29b2113ba4dafb1755b","url":"https://api.github.com/repos/apache/openjpa/commits/b7c7a47aac588b33749bf29b2113ba4dafb1755b","html_url":"https://github.com/apache/openjpa/commit/b7c7a47aac588b33749bf29b2113ba4dafb1755b"}],"stats":{"total":56,"additions":33,"deletions":23},"files":[{"sha":"60d75989298ad4d45d0d74be74c73f6a49e910cb","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ClassMappingInfo.java","status":"modified","additions":3,"deletions":13,"changes":16,"blob_url":"https://github.com/apache/openjpa/blob/218a000b84a4a8c6b74bb9de4dc604d720c04f66/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ClassMappingInfo.java","raw_url":"https://github.com/apache/openjpa/raw/218a000b84a4a8c6b74bb9de4dc604d720c04f66/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ClassMappingInfo.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ClassMappingInfo.java?ref=218a000b84a4a8c6b74bb9de4dc604d720c04f66","patch":"@@ -322,22 +322,12 @@ public void copy(MappingInfo info) {\n            _uniques = new ArrayList(cinfo._uniques);\n     }\n \n-    public void addUnique(String name, String[] columnNames) {\n-        if (columnNames == null || columnNames.length == 0)\n+    public void addUnique(Unique unique) {\n+        if (unique == null)\n             return;\n         if (_uniques == null)\n             _uniques = new ArrayList();\n-        Unique uniqueConstraint = new Unique();\n-        uniqueConstraint.setName(name);\n-        for (int i=0; i<columnNames.length; i++) {\n-            if (StringUtils.isEmpty(columnNames[i]))\n-                throw new UserException(_loc.get(\"empty-unique-column\", \n-                    getClassName()));\n-            Column column = new Column();\n-            column.setName(columnNames[i]);\n-            uniqueConstraint.addColumn(column);\n-         }\n-        _uniques.add(uniqueConstraint);\n+        _uniques.add(unique);\n     }\n     \n     public Unique[] getUniques(ClassMapping cm, boolean adapt) {"},{"sha":"aaecf0cddb901f85690d960e6985ee1a95a2e97a","filename":"openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/localizer.properties","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/218a000b84a4a8c6b74bb9de4dc604d720c04f66/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/218a000b84a4a8c6b74bb9de4dc604d720c04f66/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/localizer.properties?ref=218a000b84a4a8c6b74bb9de4dc604d720c04f66","patch":"@@ -403,7 +403,4 @@ num-cols-path: Result path \"{2}\" in result type \"{1}\" of mapping \"{0}\" \\\n \tattempts to map a field that does not have exactly 1 column.\n missing-unique-column: A unique constraint specified in mapping of class \"{0}\" \\\n     to table \"{1}\" includes a column \"{2}\". However, the column does not \\\n-\texist in \"{1}\" table. \n-empty-unique-column: A unique constraint specified in mapping of class \"{0}\" \\\n-    includes an empty column \"{2}\".\n-\t\n\\ No newline at end of file\n+\texist in \"{1}\" table."},{"sha":"9215a918c16d39bdf7e2ec40d23c6e132e678461","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/AnnotationPersistenceMappingParser.java","status":"modified","additions":27,"deletions":6,"changes":33,"blob_url":"https://github.com/apache/openjpa/blob/218a000b84a4a8c6b74bb9de4dc604d720c04f66/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/AnnotationPersistenceMappingParser.java","raw_url":"https://github.com/apache/openjpa/raw/218a000b84a4a8c6b74bb9de4dc604d720c04f66/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/AnnotationPersistenceMappingParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/AnnotationPersistenceMappingParser.java?ref=218a000b84a4a8c6b74bb9de4dc604d720c04f66","patch":"@@ -66,6 +66,7 @@\n import org.apache.openjpa.jdbc.meta.strats.FullClassStrategy;\n import org.apache.openjpa.jdbc.meta.strats.VerticalClassStrategy;\n import org.apache.openjpa.jdbc.schema.Column;\n+import org.apache.openjpa.jdbc.schema.Unique;\n import org.apache.openjpa.lib.log.Log;\n import org.apache.openjpa.lib.util.Localizer;\n import org.apache.openjpa.meta.ClassMetaData;\n@@ -76,6 +77,7 @@\n import org.apache.openjpa.util.InternalException;\n import org.apache.openjpa.util.MetaDataException;\n import org.apache.openjpa.util.UnsupportedException;\n+import org.apache.openjpa.util.UserException;\n \n /**\n  * Persistence annotation mapping parser.\n@@ -460,9 +462,9 @@ private void parseTable(ClassMapping cm, Table table) {\n         if (tableName != null)\n             cm.getMappingInfo().setTableName(tableName);\n \n-        for (UniqueConstraint unique:table.uniqueConstraints()) {\n-            ((ClassMappingInfo)cm.getMappingInfo())\n-                .addUnique(null, unique.columnNames());\n+        for (UniqueConstraint uniqueConstraint:table.uniqueConstraints()) {\n+            Unique unique = newUnique(cm, null, uniqueConstraint.columnNames());\n+            cm.getMappingInfo().addUnique(unique);\n         }\n     }\n \n@@ -682,14 +684,15 @@ protected void parseIndex(MappingInfo info, String name,\n     /**\n      * Set unique data on the given mapping info.\n      */\n-    private void parseUnique(FieldMapping fm, Unique anno) {\n+    private void parseUnique(FieldMapping fm, \n+        org.apache.openjpa.persistence.jdbc.Unique anno) {\n         ValueMappingInfo info = fm.getValueInfo();\n         if (!anno.enabled()) {\n             info.setCanUnique(false);\n             return;\n         }\n \n-        org.apache.openjpa.jdbc.schema.Unique unq =\n+        org.apache.openjpa.jdbc.schema.Unique unq = \n             new org.apache.openjpa.jdbc.schema.Unique();\n         if (!StringUtils.isEmpty(anno.name()))\n             unq.setName(anno.name());\n@@ -879,7 +882,8 @@ protected void parseMemberMappingAnnotations(FieldMetaData fmd) {\n                     fm.getValueInfo().setStrategy(((Strategy) anno).value());\n                     break;\n                 case UNIQUE:\n-                    parseUnique(fm, (Unique) anno);\n+                    parseUnique(fm, \n+                        (org.apache.openjpa.persistence.jdbc.Unique) anno);\n                     break;\n                 case X_JOIN_COL:\n                     parseXJoinColumns(fm, fm.getValueInfo(), true,\n@@ -1325,4 +1329,21 @@ private static Column newColumn(ElementJoinColumn join) {\n \t\tcol.setFlag (Column.FLAG_UNUPDATABLE, !join.updatable ());\n \t\treturn col;\n \t}\n+    \n+    private static Unique newUnique(ClassMapping cm, String name, \n+        String[] columnNames) {\n+        if (columnNames == null || columnNames.length == 0)\n+            return null;\n+        Unique uniqueConstraint = new Unique();\n+        uniqueConstraint.setName(name);\n+        for (int i=0; i<columnNames.length; i++) {\n+            if (StringUtils.isEmpty(columnNames[i]))\n+                throw new UserException(_loc.get(\"empty-unique-column\", \n+                    Arrays.toString(columnNames), cm));\n+            Column column = new Column();\n+            column.setName(columnNames[i]);\n+            uniqueConstraint.addColumn(column);\n+        }\n+        return uniqueConstraint;\n+    }\n }"},{"sha":"5a81e1663981cc8d5a8a3a560299599d97e2510d","filename":"openjpa-persistence-jdbc/src/main/resources/org/apache/openjpa/persistence/jdbc/localizer.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/218a000b84a4a8c6b74bb9de4dc604d720c04f66/openjpa-persistence-jdbc/src/main/resources/org/apache/openjpa/persistence/jdbc/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/218a000b84a4a8c6b74bb9de4dc604d720c04f66/openjpa-persistence-jdbc/src/main/resources/org/apache/openjpa/persistence/jdbc/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/resources/org/apache/openjpa/persistence/jdbc/localizer.properties?ref=218a000b84a4a8c6b74bb9de4dc604d720c04f66","patch":"@@ -43,3 +43,5 @@ second-version: Version property \"{0}\" cannot map to a secondary table column. \\\n \tVersion columns must always be in the primary table of the class.\n not-embedded: Attempt to declare mapping overrides on non-embedded field \"{0}\".\n no-gen-table: No generated table found at \"{0}\".\n+empty-unique-column: A unique constraint \"{0}\" specified in mapping of class  \\\n+    \"{1}\" includes an empty column.\n\\ No newline at end of file"}]}

