{"sha":"2353db803d1f862a2b1a30052cc56346ac59cf06","node_id":"MDY6Q29tbWl0MjA2MzY0OjIzNTNkYjgwM2QxZjg2MmEyYjFhMzAwNTJjYzU2MzQ2YWM1OWNmMDY=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-12-02T03:55:09Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-12-02T03:55:09Z"},"message":"OPENJPA-1409: Missing from TeamCity commit\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@886045 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"483da6365109547aaa96e55f98cf4c7d1c99707b","url":"https://api.github.com/repos/apache/openjpa/git/trees/483da6365109547aaa96e55f98cf4c7d1c99707b"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/2353db803d1f862a2b1a30052cc56346ac59cf06","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/2353db803d1f862a2b1a30052cc56346ac59cf06","html_url":"https://github.com/apache/openjpa/commit/2353db803d1f862a2b1a30052cc56346ac59cf06","comments_url":"https://api.github.com/repos/apache/openjpa/commits/2353db803d1f862a2b1a30052cc56346ac59cf06/comments","author":null,"committer":null,"parents":[{"sha":"1aaa1aa08647c357a406ecee42e6b2439c60fb27","url":"https://api.github.com/repos/apache/openjpa/commits/1aaa1aa08647c357a406ecee42e6b2439c60fb27","html_url":"https://github.com/apache/openjpa/commit/1aaa1aa08647c357a406ecee42e6b2439c60fb27"}],"stats":{"total":55,"additions":35,"deletions":20},"files":[{"sha":"5d8da25d5d6f8a9b9310800ee47cdb4761817bd7","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/CurrentDate.java","status":"modified","additions":35,"deletions":20,"changes":55,"blob_url":"https://github.com/apache/openjpa/blob/2353db803d1f862a2b1a30052cc56346ac59cf06/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/CurrentDate.java","raw_url":"https://github.com/apache/openjpa/raw/2353db803d1f862a2b1a30052cc56346ac59cf06/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/CurrentDate.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/CurrentDate.java?ref=2353db803d1f862a2b1a30052cc56346ac59cf06","patch":"@@ -18,9 +18,13 @@\n  */\n package org.apache.openjpa.jdbc.kernel.exps;\n \n+import java.sql.SQLException;\n+import java.sql.Time;\n+import java.sql.Timestamp;\n import java.util.Date;\n \n import org.apache.openjpa.jdbc.meta.JavaSQLTypes;\n+import org.apache.openjpa.jdbc.sql.Result;\n import org.apache.openjpa.jdbc.sql.SQLBuffer;\n import org.apache.openjpa.jdbc.sql.Select;\n import org.apache.openjpa.util.InternalException;\n@@ -33,38 +37,49 @@\n class CurrentDate\n     extends Const {\n \n-    private final int _type;\n+    private final Class<? extends Date> _type;\n \n-    public CurrentDate(int type) {\n+    public CurrentDate(Class<? extends Date> type) {\n         _type = type;\n     }\n \n-    public Class getType() {\n-        return Date.class;\n+    public Class<? extends Date> getType() {\n+        return _type;\n     }\n \n     public void setImplicitType(Class type) {\n     }\n \n+    public Object load(ExpContext ctx, ExpState state, Result res) throws SQLException {\n+        if (Timestamp.class.isAssignableFrom(_type)) {\n+            return res.getTimestamp(this, null);\n+        } else if (Time.class.isAssignableFrom(_type)) {\n+            return res.getTime(this, null);\n+        } else if (Date.class.isAssignableFrom(_type)) {\n+            return res.getDate(this, null);\n+        } else {\n+            throw new InternalException();\n+        }\n+    }\n+    \n     public Object getValue(Object[] params) {\n-        return new Date();\n+        try {\n+            _type.getConstructor(long.class).newInstance(System.currentTimeMillis());\n+        } catch (Exception e) {\n+            return new Date();\n+        }\n+        return null;\n     }\n \n-    public void appendTo(Select sel, ExpContext ctx, ExpState state, \n-        SQLBuffer sql, int index) {\n-        switch (_type) {\n-            case JavaSQLTypes.DATE:\n-                sql.append(ctx.store.getDBDictionary().currentDateFunction);\n-                break;\n-            case JavaSQLTypes.TIME:\n-                sql.append(ctx.store.getDBDictionary().currentTimeFunction);\n-                break;\n-            case JavaSQLTypes.TIMESTAMP:\n-                sql.append(ctx.store.getDBDictionary().\n-                    currentTimestampFunction);\n-                break;\n-            default:\n-                throw new InternalException();\n+    public void appendTo(Select sel, ExpContext ctx, ExpState state, SQLBuffer sql, int index) {\n+        if (Timestamp.class.isAssignableFrom(_type)) {\n+            sql.append(ctx.store.getDBDictionary().currentTimestampFunction);\n+        } else if (Time.class.isAssignableFrom(_type)) {\n+            sql.append(ctx.store.getDBDictionary().currentTimeFunction);\n+        } else if (Date.class.isAssignableFrom(_type)) {\n+            sql.append(ctx.store.getDBDictionary().currentDateFunction);\n+        } else {\n+            throw new InternalException();\n         }\n     }\n }"}]}

