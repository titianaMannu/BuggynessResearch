{"sha":"23beb964c591d2c6dac0a3f3b7828fcfcfcc67b8","node_id":"MDY6Q29tbWl0MjA2MzY0OjIzYmViOTY0YzU5MWQyYzZkYWMwYTNmM2I3ODI4ZmNmY2ZjYzY3Yjg=","commit":{"author":{"name":"David J. Wisneski","email":"wisneskid@apache.org","date":"2007-05-09T22:23:16Z"},"committer":{"name":"David J. Wisneski","email":"wisneskid@apache.org","date":"2007-05-09T22:23:16Z"},"message":"undo patch for OPENJPA-51, revert back to r52881\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@536692 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"42178073cd3344a2332a994238dc1ccb36685b3d","url":"https://api.github.com/repos/apache/openjpa/git/trees/42178073cd3344a2332a994238dc1ccb36685b3d"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/23beb964c591d2c6dac0a3f3b7828fcfcfcc67b8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/23beb964c591d2c6dac0a3f3b7828fcfcfcc67b8","html_url":"https://github.com/apache/openjpa/commit/23beb964c591d2c6dac0a3f3b7828fcfcfcc67b8","comments_url":"https://api.github.com/repos/apache/openjpa/commits/23beb964c591d2c6dac0a3f3b7828fcfcfcc67b8/comments","author":null,"committer":null,"parents":[{"sha":"d9fbb9cc11df15d29964f620f2fb467e5b6d6b73","url":"https://api.github.com/repos/apache/openjpa/commits/d9fbb9cc11df15d29964f620f2fb467e5b6d6b73","html_url":"https://github.com/apache/openjpa/commit/d9fbb9cc11df15d29964f620f2fb467e5b6d6b73"}],"stats":{"total":35,"additions":7,"deletions":28},"files":[{"sha":"0c26abaaf2149bf3a562e983089ff280b46d64b2","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java","status":"modified","additions":7,"deletions":28,"changes":35,"blob_url":"https://github.com/apache/openjpa/blob/23beb964c591d2c6dac0a3f3b7828fcfcfcc67b8/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java","raw_url":"https://github.com/apache/openjpa/raw/23beb964c591d2c6dac0a3f3b7828fcfcfcc67b8/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java?ref=23beb964c591d2c6dac0a3f3b7828fcfcfcc67b8","patch":"@@ -26,7 +26,6 @@\n import java.sql.Types;\n import java.util.AbstractList;\n import java.util.ArrayList;\n-import java.util.BitSet;\n import java.util.Collection;\n import java.util.Collections;\n import java.util.HashMap;\n@@ -159,13 +158,6 @@\n     // from select if this select selects from a tmp table created by another\n     private SelectImpl _from = null;\n     private SelectImpl _outer = null;\n-    \n-    // bitSet indicating if an alias is removed from parent select\n-    // bit 0 : correspond to alias 0\n-    // bit 1 : correspond to alias 1, etc.\n-    // if the bit is set, the corresponding alias has been removed from parent\n-    // and recorded under subselect.\n-    private BitSet _removedAliasFromParent = new BitSet(16);\n      \n     /**\n      * Helper method to return the proper table alias for the given alias index.\n@@ -1495,13 +1487,8 @@ else if (!pre) {\n     private void removeParentJoins(PathJoins pj) {\n         if (_parent == null)\n             return;\n-        if (_parent._joins != null && !_parent._joins.isEmpty()) {\n-            boolean removed = false;\n-            if (!_removedAliasFromParent.isEmpty())\n-                removed = _parent._joins.joins().removeAll(pj.joins());\n-            if (!removed)\n-                pj.joins().removeAll(_parent._joins.joins());\n-        }\n+        if (_parent._joins != null && !_parent._joins.isEmpty())\n+            pj.joins().removeAll(_parent._joins.joins());\n         if (!pj.isEmpty())\n             _parent.removeParentJoins(pj);\n     }\n@@ -1910,15 +1897,9 @@ private Integer findAlias(Table table, Object key, boolean fromParent,\n             }\n         }\n         if (!fromParent && _parent != null) {\n-            boolean removeAliasFromParent = key.toString().contains(\":\");\n-            alias = _parent.findAlias(table, key, removeAliasFromParent, this);\n-            if (alias != null) {\n-                if (removeAliasFromParent) {\n-                    recordTableAlias(table, key, alias);\n-                    _removedAliasFromParent.set(alias.intValue());\n-                }\n+            alias = _parent.findAlias(table, key, false, this);\n+            if (alias != null)\n                 return alias;\n-            }\n         }\n         if (_subsels != null) {\n             SelectImpl sub;\n@@ -1932,11 +1913,9 @@ private Integer findAlias(Table table, Object key, boolean fromParent,\n                     if (sub._tables != null)\n                         sub._tables.remove(alias);\n                 } else {\n-                    if (fromSub == null) {\n-                        alias = sub.findAlias(table, key, true, null);\n-                        if (!fromParent && alias != null)\n-                            recordTableAlias(table, key, alias);\n-                    }\n+                    alias = sub.findAlias(table, key, true, null);\n+                    if (!fromParent && alias != null)\n+                        recordTableAlias(table, key, alias);\n                 }\n             }\n         }"}]}

