{"sha":"24c51d9fe60896520b2a810fbc6f88ff019a0d35","node_id":"MDY6Q29tbWl0MjA2MzY0OjI0YzUxZDlmZTYwODk2NTIwYjJhODEwZmJjNmY4OGZmMDE5YTBkMzU=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2006-09-28T03:00:31Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2006-09-28T03:00:31Z"},"message":"Adding informative messages when non-default Persistence Provider is configured.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@450674 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"d145b8c799d7895b2299536ebf7b30aa6afb53a1","url":"https://api.github.com/repos/apache/openjpa/git/trees/d145b8c799d7895b2299536ebf7b30aa6afb53a1"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/24c51d9fe60896520b2a810fbc6f88ff019a0d35","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/24c51d9fe60896520b2a810fbc6f88ff019a0d35","html_url":"https://github.com/apache/openjpa/commit/24c51d9fe60896520b2a810fbc6f88ff019a0d35","comments_url":"https://api.github.com/repos/apache/openjpa/commits/24c51d9fe60896520b2a810fbc6f88ff019a0d35/comments","author":null,"committer":null,"parents":[{"sha":"e1e96406e898ba85af2f6fc47939522d6e8b9758","url":"https://api.github.com/repos/apache/openjpa/commits/e1e96406e898ba85af2f6fc47939522d6e8b9758","html_url":"https://github.com/apache/openjpa/commit/e1e96406e898ba85af2f6fc47939522d6e8b9758"}],"stats":{"total":31,"additions":25,"deletions":6},"files":[{"sha":"a47986ec9ff35233024850b130ec2174bec6bf2b","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java","status":"modified","additions":19,"deletions":5,"changes":24,"blob_url":"https://github.com/apache/openjpa/blob/24c51d9fe60896520b2a810fbc6f88ff019a0d35/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java","raw_url":"https://github.com/apache/openjpa/raw/24c51d9fe60896520b2a810fbc6f88ff019a0d35/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java?ref=24c51d9fe60896520b2a810fbc6f88ff019a0d35","patch":"@@ -248,6 +248,8 @@ private Boolean load(ConfigurationProviderImpl cp, String rsrc,\n                 rsrc, String.valueOf(name)).getMessage(), getClass().getName(), \n                 rsrc);\n         } else if (!isOpenJPAPersistenceProvider(pinfo, loader)) {\n+            if (!explicit)\n+                return Boolean.FALSE;\n             throw new MissingResourceException(_loc.get(\"unknown-provider\", \n                 rsrc, name, pinfo.getPersistenceProviderClassName()).\n                 getMessage(), getClass().getName(), rsrc);\n@@ -307,19 +309,31 @@ private PersistenceUnitInfoImpl findUnit(List<PersistenceUnitInfoImpl>\n      */\n     private static boolean isOpenJPAPersistenceProvider\n         (PersistenceUnitInfo pinfo, ClassLoader loader) {\n-        String name = pinfo.getPersistenceProviderClassName();\n-        if (StringUtils.isEmpty(name) \n-            || PersistenceProviderImpl.class.getName().equals(name))\n+        String provider = pinfo.getPersistenceProviderClassName();\n+        if (StringUtils.isEmpty(provider) \n+            || PersistenceProviderImpl.class.getName().equals(provider))\n             return true;\n \n         if (loader == null)\n             loader = Thread.currentThread().getContextClassLoader();\n         try {\n-            return PersistenceProviderImpl.class.isAssignableFrom\n-                (Class.forName(name, false, loader));\n+            if (PersistenceProviderImpl.class.isAssignableFrom\n+                (Class.forName(provider, false, loader))) {\n+                // log not configured yet\n+                warn(_loc.get(\"extended-provider\", provider).getMessage());\n+                return true;\n+            }\n         } catch (Throwable t) {\n+            warn(_loc.get(\"unloadable-provider\", provider, t).\n+                getMessage());\n             return false;\n         }\n+        warn(_loc.get(\"unrecognized-provider\", provider).getMessage());\n+        return false;\n+    }\n+    \n+    private static void warn(String msg) {\n+        System.err.println(msg);\n     }\n \n     /**"},{"sha":"7d7355b2242090d559944619f53bc1c648780deb","filename":"openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/24c51d9fe60896520b2a810fbc6f88ff019a0d35/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/24c51d9fe60896520b2a810fbc6f88ff019a0d35/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties?ref=24c51d9fe60896520b2a810fbc6f88ff019a0d35","patch":"@@ -93,7 +93,12 @@ multiple-methods-on-callback-error: Class \"{0}\" declares method \"{1}\" as well \\\n missing-no-arg-constructor: Entity listener class \"{0}\" must declare a no-arg \\\n \tconstructor. \"AllowsNoArgConstructorCallback\" property of MetaDataDefaults \\\n \tcan be set to true to ignore this exception.\t  \n-\n+extended-provider: WARNING: Configured to use extended Persistence Provider \\\n+\t\"{0}\".\n+unloadable-provider: WARNING: Can not load configured Persistence Provider \\\n+\t\"{0}\" due to \"{1}\"\n+unrecognized-provider: WARNING: Configured to use non-recognized Persistence \\\n+\tProvider \"{0}\" \n EntityManagerFactory-name: EntityManagerFactory implementation\n EntityManagerFactory-desc: Allows extension of standard \\\n     org.apache.openjpa.persistence.EntityManagerFactoryImpl for custom behavior."}]}

