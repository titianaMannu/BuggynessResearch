{"sha":"24cf4c939e58914168c4e548c25a2c3d977022b7","node_id":"MDY6Q29tbWl0MjA2MzY0OjI0Y2Y0YzkzOWU1ODkxNDE2OGM0ZTU0OGMyNWEyYzNkOTc3MDIyYjc=","commit":{"author":{"name":"Marc Prud'hommeaux","email":"mprudhom@apache.org","date":"2007-01-30T00:54:19Z"},"committer":{"name":"Marc Prud'hommeaux","email":"mprudhom@apache.org","date":"2007-01-30T00:54:19Z"},"message":"If we don't know the access type for a class when parsing, first check for a superclass and default to that class' access type.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@501255 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"25a107902d05e539a5312eaa02c1c52b6e78dedb","url":"https://api.github.com/repos/apache/openjpa/git/trees/25a107902d05e539a5312eaa02c1c52b6e78dedb"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/24cf4c939e58914168c4e548c25a2c3d977022b7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/24cf4c939e58914168c4e548c25a2c3d977022b7","html_url":"https://github.com/apache/openjpa/commit/24cf4c939e58914168c4e548c25a2c3d977022b7","comments_url":"https://api.github.com/repos/apache/openjpa/commits/24cf4c939e58914168c4e548c25a2c3d977022b7/comments","author":null,"committer":null,"parents":[{"sha":"62358d36d15d4b50d95b4e8726dac4715dba9a25","url":"https://api.github.com/repos/apache/openjpa/commits/62358d36d15d4b50d95b4e8726dac4715dba9a25","html_url":"https://github.com/apache/openjpa/commit/62358d36d15d4b50d95b4e8726dac4715dba9a25"}],"stats":{"total":10,"additions":9,"deletions":1},"files":[{"sha":"986ad53aa73d260a5eeb68158ec041e19c2f8f6a","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","status":"modified","additions":9,"deletions":1,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/24cf4c939e58914168c4e548c25a2c3d977022b7/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","raw_url":"https://github.com/apache/openjpa/raw/24cf4c939e58914168c4e548c25a2c3d977022b7/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java?ref=24cf4c939e58914168c4e548c25a2c3d977022b7","patch":"@@ -742,9 +742,17 @@ protected boolean startClass(String elem, Attributes attrs)\n             return false;\n         }\n \n+        // if we don't know the access type, check for a superclass\n+        int defaultAccess = _access;\n+        if (defaultAccess == ClassMetaData.ACCESS_UNKNOWN) {\n+            ClassMetaData sup = repos.getCachedMetaData(_cls.getSuperclass());\n+            if (sup != null)\n+                defaultAccess = sup.getAccessType();\n+        }\n+\n         if (meta == null) {\n             // add metadata for this type\n-            int access = toAccessType(attrs.getValue(\"access\"), _access);\n+            int access = toAccessType(attrs.getValue(\"access\"), defaultAccess);\n             meta = repos.addMetaData(_cls, access);\n             meta.setEnvClassLoader(_envLoader);\n             meta.setSourceMode(MODE_NONE);"}]}

