{"sha":"250186fbcbf7b82437ae4e912cdcd92bab8640b8","node_id":"MDY6Q29tbWl0MjA2MzY0OjI1MDE4NmZiY2JmN2I4MjQzN2FlNGU5MTJjZGNkOTJiYWI4NjQwYjg=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-08-28T01:39:15Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-08-28T01:39:15Z"},"message":"OPENJPA-1100: Raise exception for unsupported version field type rather than silently ignoring\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@808725 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"8e53b9f24b17dd96c9f0881f41d5d5776044311b","url":"https://api.github.com/repos/apache/openjpa/git/trees/8e53b9f24b17dd96c9f0881f41d5d5776044311b"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/250186fbcbf7b82437ae4e912cdcd92bab8640b8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/250186fbcbf7b82437ae4e912cdcd92bab8640b8","html_url":"https://github.com/apache/openjpa/commit/250186fbcbf7b82437ae4e912cdcd92bab8640b8","comments_url":"https://api.github.com/repos/apache/openjpa/commits/250186fbcbf7b82437ae4e912cdcd92bab8640b8/comments","author":null,"committer":null,"parents":[{"sha":"149dbef93b99ab50350f352a4864054c38ec863d","url":"https://api.github.com/repos/apache/openjpa/commits/149dbef93b99ab50350f352a4864054c38ec863d","html_url":"https://github.com/apache/openjpa/commit/149dbef93b99ab50350f352a4864054c38ec863d"}],"stats":{"total":87,"additions":85,"deletions":2},"files":[{"sha":"bdc8f520b1720e07ae8df6653d1ed39e83e67522","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingRepository.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/250186fbcbf7b82437ae4e912cdcd92bab8640b8/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingRepository.java","raw_url":"https://github.com/apache/openjpa/raw/250186fbcbf7b82437ae4e912cdcd92bab8640b8/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingRepository.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingRepository.java?ref=250186fbcbf7b82437ae4e912cdcd92bab8640b8","patch":"@@ -96,6 +96,7 @@\n import org.apache.openjpa.meta.SequenceMetaData;\n import org.apache.openjpa.meta.ValueMetaData;\n import org.apache.openjpa.util.MetaDataException;\n+import org.apache.openjpa.util.UserException;\n \n /**\n  * Repository of object/relational mapping information.\n@@ -1266,7 +1267,8 @@ protected VersionStrategy defaultStrategy(Version vers,\n             case JavaTypes.NUMBER:\n                 return new NumberVersionStrategy();\n             default:\n-                return NoneVersionStrategy.getInstance();\n+                throw new UserException(_loc.get(\"version-type-unsupported\", vfield, vfield.getDeclaredType()));\n+//                return NoneVersionStrategy.getInstance();\n         }\n     }\n     "},{"sha":"841df94afa40c23894176f29fe298b7c6411cba7","filename":"openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/localizer.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/250186fbcbf7b82437ae4e912cdcd92bab8640b8/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/250186fbcbf7b82437ae4e912cdcd92bab8640b8/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/localizer.properties?ref=250186fbcbf7b82437ae4e912cdcd92bab8640b8","patch":"@@ -416,4 +416,5 @@ unique-no-table: A unique constraint on table \"{0}\" can not be added to \\\n \tmapping of class \"{1}\" because the table does neither match its primary \\\n \ttable \"{2}\" nor any of its secondary table(s) \"{3}\".\n bad-version-column-table: One of the version column \"{0}\" has been associated \\\n-\twith table \"{1}\", but no primary or secondary table of such name exists.\n\\ No newline at end of file\n+\twith table \"{1}\", but no primary or secondary table of such name exists.\n+version-type-unsupported: Version field \"{0}\" of {1} is not supported. \n\\ No newline at end of file"},{"sha":"12817beb25761addbe4cf982530c3d170c6d73f9","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jira1100/TestBadVersionField.java","status":"added","additions":80,"deletions":0,"changes":80,"blob_url":"https://github.com/apache/openjpa/blob/250186fbcbf7b82437ae4e912cdcd92bab8640b8/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jira1100/TestBadVersionField.java","raw_url":"https://github.com/apache/openjpa/raw/250186fbcbf7b82437ae4e912cdcd92bab8640b8/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jira1100/TestBadVersionField.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jira1100/TestBadVersionField.java?ref=250186fbcbf7b82437ae4e912cdcd92bab8640b8","patch":"@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.jira1100;\n+\n+import java.math.BigDecimal;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.EntityManager;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.Table;\n+import javax.persistence.Version;\n+\n+import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n+\n+/**\n+ * Tests that entity with unsupported version type can not be used.\n+ * Used to ignore such field silently before. \n+ * <BR>\n+ * For more details refer\n+ * \n+ *   <A HREF=\"https://issues.apache.org/jira/browse/OPENJPA-1100\">OPENJPA-1100</A>\n+ *   \n+ * @author Pinaki Poddar\n+ *\n+ */\n+public class TestBadVersionField extends SingleEMFTestCase {\n+    public void setUp() {\n+        super.setUp(CLEAR_TABLES, Data.class);\n+    }\n+    \n+    public void testWrongVersionFieldNotSupported() {\n+        try {\n+            EntityManager em = emf.createEntityManager();\n+            fail(\"Expected to fail with unsupported Version field type\");\n+        } catch (Exception ex) {\n+            \n+        }\n+    }\n+    \n+    /**\n+     * Declares a Version field of unsupported type.\n+     *  \n+     */\n+    @Entity\n+    @Table(name=\"BadVersionField\")\n+    public class Data {\n+        @Id\n+        @GeneratedValue\n+        private long id;\n+        \n+        @Version\n+        private BigDecimal version;\n+\n+        public long getId() {\n+            return id;\n+        }\n+\n+        public BigDecimal getVersion() {\n+            return version;\n+        }\n+    }\n+\n+}"}]}

