{"sha":"2578261469a3982a7082566b945c64ca7eab5e0a","node_id":"MDY6Q29tbWl0MjA2MzY0OjI1NzgyNjE0NjlhMzk4MmE3MDgyNTY2Yjk0NWM2NGNhN2VhYjVlMGE=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-12-10T00:18:20Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-12-10T00:18:20Z"},"message":"Making code compatiable with OpenJPA coding standards\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@889031 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"70a6cfa812713cd03313708caca36491fa03574d","url":"https://api.github.com/repos/apache/openjpa/git/trees/70a6cfa812713cd03313708caca36491fa03574d"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/2578261469a3982a7082566b945c64ca7eab5e0a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/2578261469a3982a7082566b945c64ca7eab5e0a","html_url":"https://github.com/apache/openjpa/commit/2578261469a3982a7082566b945c64ca7eab5e0a","comments_url":"https://api.github.com/repos/apache/openjpa/commits/2578261469a3982a7082566b945c64ca7eab5e0a/comments","author":null,"committer":null,"parents":[{"sha":"658f01ee388a893ff8e3e2dc1b280b2956f7ddb2","url":"https://api.github.com/repos/apache/openjpa/commits/658f01ee388a893ff8e3e2dc1b280b2956f7ddb2","html_url":"https://github.com/apache/openjpa/commit/658f01ee388a893ff8e3e2dc1b280b2956f7ddb2"}],"stats":{"total":83,"additions":41,"deletions":42},"files":[{"sha":"67210619f128a7a405a18d3711efc9c8fa6d4371","filename":"contrib/devtools/org.apache.openjpa.eclipse.feature/feature.xml","status":"modified","additions":14,"deletions":3,"changes":17,"blob_url":"https://github.com/apache/openjpa/blob/2578261469a3982a7082566b945c64ca7eab5e0a/contrib/devtools/org.apache.openjpa.eclipse.feature/feature.xml","raw_url":"https://github.com/apache/openjpa/raw/2578261469a3982a7082566b945c64ca7eab5e0a/contrib/devtools/org.apache.openjpa.eclipse.feature/feature.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/contrib/devtools/org.apache.openjpa.eclipse.feature/feature.xml?ref=2578261469a3982a7082566b945c64ca7eab5e0a","patch":"@@ -6,15 +6,26 @@\n       provider-name=\"Michael Vorburger &amp; others, for Apache.org\">\n \n    <description url=\"http://www.example.com/description\">\n-      [Enter Feature Description here.]\n+      Activates bytecode enhancement for persistence Java classes \n+      during compilation  for OpenJPA applications.\n    </description>\n \n    <copyright url=\"http://www.example.com/copyright\">\n-      [Enter Copyright Description here.]\n+      Copyright 2009-2019 the original author or authors.\n    </copyright>\n \n    <license url=\"http://www.example.com/license\">\n-      [Enter License Description here.]\n+     Licensed under the Apache License, Version 2.0 (the \"License\");\n+     you may not use this file except in compliance with the License.\n+     You may obtain a copy of the License at\n+ \n+       http://www.apache.org/licenses/LICENSE-2.0\n+ \n+     Unless required by applicable law or agreed to in writing, software\n+     distributed under the License is distributed on an \"AS IS\" BASIS,\n+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+     See the License for the specific language governing permissions and\n+     limitations under the License.\n    </license>\n \n    <plugin"},{"sha":"7f87341e437580f8ed19bcfc6fdcff56712e7f91","filename":"contrib/devtools/org.apache.openjpa.eclipse/src/main/java/org/apache/openjpa/eclipse/Activator.java","status":"modified","additions":3,"deletions":9,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/2578261469a3982a7082566b945c64ca7eab5e0a/contrib/devtools/org.apache.openjpa.eclipse/src/main/java/org/apache/openjpa/eclipse/Activator.java","raw_url":"https://github.com/apache/openjpa/raw/2578261469a3982a7082566b945c64ca7eab5e0a/contrib/devtools/org.apache.openjpa.eclipse/src/main/java/org/apache/openjpa/eclipse/Activator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/contrib/devtools/org.apache.openjpa.eclipse/src/main/java/org/apache/openjpa/eclipse/Activator.java?ref=2578261469a3982a7082566b945c64ca7eab5e0a","patch":"@@ -21,7 +21,7 @@\n import org.osgi.framework.BundleContext;\n \n /**\n- * The activator class controls the plug-in life cycle\n+ * The activator class controls the plug-in life cycle.\n  * \n  * @author Eclipse PDE Example Wizard! ;-)\n  * @author Michael Vorburger (MVO)\n@@ -40,19 +40,13 @@\n \tpublic Activator() {\n \t}\n \n-\t/*\n-\t * (non-Javadoc)\n-\t * @see org.eclipse.ui.plugin.AbstractUIPlugin#start(org.osgi.framework.BundleContext)\n-\t */\n+\t@Override\n \tpublic void start(BundleContext context) throws Exception {\n \t\tsuper.start(context);\n \t\tplugin = this;\n \t}\n \n-\t/*\n-\t * (non-Javadoc)\n-\t * @see org.eclipse.ui.plugin.AbstractUIPlugin#stop(org.osgi.framework.BundleContext)\n-\t */\n+\t@Override\n \tpublic void stop(BundleContext context) throws Exception {\n \t\tplugin = null;\n \t\tsuper.stop(context);"},{"sha":"cc4e0424349702a3700e8e41c52d28cf1661cf15","filename":"contrib/devtools/org.apache.openjpa.eclipse/src/main/java/org/apache/openjpa/eclipse/OpenJPAEnhancerBuilder.java","status":"modified","additions":14,"deletions":7,"changes":21,"blob_url":"https://github.com/apache/openjpa/blob/2578261469a3982a7082566b945c64ca7eab5e0a/contrib/devtools/org.apache.openjpa.eclipse/src/main/java/org/apache/openjpa/eclipse/OpenJPAEnhancerBuilder.java","raw_url":"https://github.com/apache/openjpa/raw/2578261469a3982a7082566b945c64ca7eab5e0a/contrib/devtools/org.apache.openjpa.eclipse/src/main/java/org/apache/openjpa/eclipse/OpenJPAEnhancerBuilder.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/contrib/devtools/org.apache.openjpa.eclipse/src/main/java/org/apache/openjpa/eclipse/OpenJPAEnhancerBuilder.java?ref=2578261469a3982a7082566b945c64ca7eab5e0a","patch":"@@ -61,14 +61,16 @@\n \t\tprivate final PCEnhancerHelper enhancerHelper;\n \t\tprivate final BuilderOptions opts;\n \n-\t\tpublic MyIncrementalBuildResourceDeltaVisitor(IProgressMonitor monitor, PCEnhancerHelper enhancerHelper, BuilderOptions opts) {\n+\t\tpublic MyIncrementalBuildResourceDeltaVisitor(IProgressMonitor monitor, PCEnhancerHelper enhancerHelper, \n+\t\t        BuilderOptions opts) {\n \t\t\tthis.monitor = monitor;\n \t\t\tthis.enhancerHelper = enhancerHelper;\n \t\t\tthis.opts = opts;\n \t\t}\n \n \t\tpublic boolean visit(IResourceDelta delta) throws CoreException {\n-\t\t\t// better do NOT use monitor.worked() & monitor.subTask() here, as this is fast enough and any UI will only slow it down\n+\t\t\t// better do NOT use monitor.worked() & monitor.subTask() here, as this is fast enough and any UI will only \n+\t\t    // slow it down\n \t\t\tIResource resource = delta.getResource();\n \t\t\tswitch (delta.getKind()) {\n \t\t\t// If Added or Changed, handle changed resource:\n@@ -150,7 +152,8 @@ private void fullBuild(final IProgressMonitor monitor, BuilderOptions opts) thro\n \t\n \t\tList<IResource> resources = visitor.getResourcesPotentiallyNeedingEnhancement();\n \t\tif (!resources.isEmpty()) {\n-\t\t\tSubMonitor subMonitor = SubMonitor.convert(monitor, \"OpenJPA Enhancement... (Full Build, actual bytecode work)\", resources.size());\n+\t\t\tSubMonitor subMonitor = SubMonitor.convert(monitor, \n+\t\t\t    \"OpenJPA Enhancement... (Full Build, actual bytecode work)\", resources.size());\n \t\t\ttry {\n \t\t\t\tint actuallyEnhanced = 0;\n \t\t\t\tstartTime = System.currentTimeMillis();\n@@ -179,7 +182,8 @@ private void fullBuild(final IProgressMonitor monitor, BuilderOptions opts) thro\n \t\t}\n \t}\n \n-\tprivate void incrementalBuild(IResourceDelta delta, IProgressMonitor monitor, BuilderOptions opts) throws CoreException {\n+\tprivate void incrementalBuild(IResourceDelta delta, IProgressMonitor monitor, BuilderOptions opts) \n+\t    throws CoreException {\n \t\tmonitor.subTask(\"OpenJPA Enhancement... (Incremental Build)\");\n \t\ttry {\n \t\t\tClassLoader classLoader = ClassLoaderFromIProjectHelper.createClassLoader(getProject());\n@@ -203,7 +207,8 @@ private boolean needsEnhancement(IResource resource, BuilderOptions opts) throws\n \t\t\t\n \t\t\tif (!opts.pathMatcher.match(iFile.getLocation().toString())) {\n \t\t\t\tif (opts.isVerboseLoggingEnabled) {\n-\t\t\t\t\tLogUtil.logInfo(\"OpenJPA Enhancer skipped class because it did not match pattern \" + fileNameForLog );\n+\t\t\t\t\tLogUtil.logInfo(\"OpenJPA Enhancer skipped class because it did not match pattern \" \n+\t\t\t\t\t    + fileNameForLog );\n \t\t\t\t}\n \t\t\t\treturn false;\n \t\t\t}\n@@ -214,7 +219,8 @@ private boolean needsEnhancement(IResource resource, BuilderOptions opts) throws\n \t\t}\n \t}\n \t\n-\tprivate boolean enhance(IResource resource, PCEnhancerHelper enhancerHelper, BuilderOptions opts) throws CoreException {\n+\tprivate boolean enhance(IResource resource, PCEnhancerHelper enhancerHelper, BuilderOptions opts) \n+\t    throws CoreException {\n \t\tIFile iFile = (IFile) resource;\n \t\tString fileNameForLog = iFile.getFullPath().toString();\n \t\ttry {\n@@ -229,7 +235,8 @@ private boolean enhance(IResource resource, PCEnhancerHelper enhancerHelper, Bui\n \t\t\t\n \t\t\treturn hasEnhanced;\n \t\t} catch (Throwable e) {\n-\t\t\tString msg = \"OpenJPA Enhancement Builder failed with message '\" + e.toString() + \"' for class: \" + iFile.getLocation();\n+\t\t\tString msg = \"OpenJPA Enhancement Builder failed with message '\" + e.toString() + \"' for class: \" \n+\t\t\t    + iFile.getLocation();\n \t\t\taddMarkerAndThrowNewCoreException(iFile, msg, e);\n \t\t\treturn false;\n \t\t}"},{"sha":"e682c1425dacc9e652a30bfb5e2fc15961992952","filename":"contrib/devtools/org.apache.openjpa.eclipse/src/main/java/org/apache/openjpa/eclipse/OpenJPANature.java","status":"modified","additions":0,"deletions":15,"changes":15,"blob_url":"https://github.com/apache/openjpa/blob/2578261469a3982a7082566b945c64ca7eab5e0a/contrib/devtools/org.apache.openjpa.eclipse/src/main/java/org/apache/openjpa/eclipse/OpenJPANature.java","raw_url":"https://github.com/apache/openjpa/raw/2578261469a3982a7082566b945c64ca7eab5e0a/contrib/devtools/org.apache.openjpa.eclipse/src/main/java/org/apache/openjpa/eclipse/OpenJPANature.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/contrib/devtools/org.apache.openjpa.eclipse/src/main/java/org/apache/openjpa/eclipse/OpenJPANature.java?ref=2578261469a3982a7082566b945c64ca7eab5e0a","patch":"@@ -61,11 +61,6 @@ public void configure() throws CoreException {\n \t\tproject.setDescription(desc, null);\n \t}\n \n-\t/*\n-\t * (non-Javadoc)\n-\t * \n-\t * @see org.eclipse.core.resources.IProjectNature#deconfigure()\n-\t */\n \tpublic void deconfigure() throws CoreException {\n \t\tIProjectDescription description = getProject().getDescription();\n \t\tICommand[] commands = description.getBuildSpec();\n@@ -81,20 +76,10 @@ public void deconfigure() throws CoreException {\n \t\t}\n \t}\n \n-\t/*\n-\t * (non-Javadoc)\n-\t * \n-\t * @see org.eclipse.core.resources.IProjectNature#getProject()\n-\t */\n \tpublic IProject getProject() {\n \t\treturn project;\n \t}\n \n-\t/*\n-\t * (non-Javadoc)\n-\t * \n-\t * @see org.eclipse.core.resources.IProjectNature#setProject(org.eclipse.core.resources.IProject)\n-\t */\n \tpublic void setProject(IProject project) {\n \t\tthis.project = project;\n \t}"},{"sha":"39ec85147ad9cf519e5dbb5e22437d94f82cb753","filename":"contrib/devtools/org.apache.openjpa.eclipse/src/main/java/org/apache/openjpa/eclipse/ToggleNatureAction.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/2578261469a3982a7082566b945c64ca7eab5e0a/contrib/devtools/org.apache.openjpa.eclipse/src/main/java/org/apache/openjpa/eclipse/ToggleNatureAction.java","raw_url":"https://github.com/apache/openjpa/raw/2578261469a3982a7082566b945c64ca7eab5e0a/contrib/devtools/org.apache.openjpa.eclipse/src/main/java/org/apache/openjpa/eclipse/ToggleNatureAction.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/contrib/devtools/org.apache.openjpa.eclipse/src/main/java/org/apache/openjpa/eclipse/ToggleNatureAction.java?ref=2578261469a3982a7082566b945c64ca7eab5e0a","patch":"@@ -115,5 +115,4 @@ private void toggleNature(IProject project) {\n \t\t} catch (CoreException e) {\n \t\t}\n \t}\n-\n }"},{"sha":"36964c6219aa2412eea257705c17f8976962917b","filename":"contrib/devtools/org.apache.openjpa.eclipse/src/main/java/org/apache/openjpa/eclipse/util/EclipseLogFactory.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/2578261469a3982a7082566b945c64ca7eab5e0a/contrib/devtools/org.apache.openjpa.eclipse/src/main/java/org/apache/openjpa/eclipse/util/EclipseLogFactory.java","raw_url":"https://github.com/apache/openjpa/raw/2578261469a3982a7082566b945c64ca7eab5e0a/contrib/devtools/org.apache.openjpa.eclipse/src/main/java/org/apache/openjpa/eclipse/util/EclipseLogFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/contrib/devtools/org.apache.openjpa.eclipse/src/main/java/org/apache/openjpa/eclipse/util/EclipseLogFactory.java?ref=2578261469a3982a7082566b945c64ca7eab5e0a","patch":"@@ -49,9 +49,10 @@ protected void log(short type, String message, Throwable t) {\n             \tif (type == Log.WARN)\n             \t\tLogUtil.logWarn(\"OpenJPA Warning: \" + message, t);\n             \t\n-            \t// Ignore other internal messages... could be made this configurable via Builder argument (like include pattern), if really needed \n+            \t// Ignore other internal messages... could be made this configurable via Builder argument \n+            \t// (like include pattern), if really needed \n             \t// else\n-            \t\t// LogUtil.logInfo(\"OpenJPA Info: \" + message, t);\n+            \t// LogUtil.logInfo(\"OpenJPA Info: \" + message, t);\n             }\n         };\n \t}"},{"sha":"99a5c1db83d2af28e62a519af2ea88fbcdc562f0","filename":"contrib/devtools/org.apache.openjpa.eclipse/src/main/java/org/apache/openjpa/eclipse/util/PCEnhancerHelperImpl.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/2578261469a3982a7082566b945c64ca7eab5e0a/contrib/devtools/org.apache.openjpa.eclipse/src/main/java/org/apache/openjpa/eclipse/util/PCEnhancerHelperImpl.java","raw_url":"https://github.com/apache/openjpa/raw/2578261469a3982a7082566b945c64ca7eab5e0a/contrib/devtools/org.apache.openjpa.eclipse/src/main/java/org/apache/openjpa/eclipse/util/PCEnhancerHelperImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/contrib/devtools/org.apache.openjpa.eclipse/src/main/java/org/apache/openjpa/eclipse/util/PCEnhancerHelperImpl.java?ref=2578261469a3982a7082566b945c64ca7eab5e0a","patch":"@@ -90,8 +90,7 @@ public boolean enhance(File resource) throws CoreException, IOException, ClassNo\n \t\tPCEnhancer delegate = new PCEnhancer(repos, bcls, meta);\n \t\tint result = delegate.run();\n \t\tif ((result != PCEnhancer.ENHANCE_NONE)\n-\t\t && (result != PCEnhancer.ENHANCE_INTERFACE)) \n-\t\t{\n+\t\t && (result != PCEnhancer.ENHANCE_INTERFACE)) {\n \t\t\tdelegate.record();\n \t\t\treturn true;\n \t\t} else {"},{"sha":"d9c5a7682fba621140b5a0771718e3a1cf923a3e","filename":"contrib/devtools/org.apache.openjpa.eclipse/src/main/java/org/apache/openjpa/eclipse/util/pathmatch/AntPathMatcher.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/2578261469a3982a7082566b945c64ca7eab5e0a/contrib/devtools/org.apache.openjpa.eclipse/src/main/java/org/apache/openjpa/eclipse/util/pathmatch/AntPathMatcher.java","raw_url":"https://github.com/apache/openjpa/raw/2578261469a3982a7082566b945c64ca7eab5e0a/contrib/devtools/org.apache.openjpa.eclipse/src/main/java/org/apache/openjpa/eclipse/util/pathmatch/AntPathMatcher.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/contrib/devtools/org.apache.openjpa.eclipse/src/main/java/org/apache/openjpa/eclipse/util/pathmatch/AntPathMatcher.java?ref=2578261469a3982a7082566b945c64ca7eab5e0a","patch":"@@ -29,9 +29,12 @@\n  * or more characters</li> <li>** matches zero or more 'directories' in a path</li> </ul>\n  *\n  * <p>Some examples:<br> <ul> <li><code>com/t?st.jsp</code> - matches <code>com/test.jsp</code> but also\n- * <code>com/tast.jsp</code> or <code>com/txst.jsp</code></li> <li><code>com/*.jsp</code> - matches all\n- * <code>.jsp</code> files in the <code>com</code> directory</li> <li><code>com/&#42;&#42;/test.jsp</code> - matches all\n- * <code>test.jsp</code> files underneath the <code>com</code> path</li> <li><code>org/springframework/&#42;&#42;/*.jsp</code>\n+ * <code>com/tast.jsp</code> or <code>com/txst.jsp</code></li> \n+ * <li><code>com/*.jsp</code> - matches all\n+ * <code>.jsp</code> files in the <code>com</code> directory</li> \n+ * <li><code>com/&#42;&#42;/test.jsp</code> - matches all\n+ * <code>test.jsp</code> files underneath the <code>com</code> path</li> \n+ * <li><code>org/springframework/&#42;&#42;/*.jsp</code>\n  * - matches all <code>.jsp</code> files underneath the <code>org/springframework</code> path</li>\n  * <li><code>org/&#42;&#42;/servlet/bla.jsp</code> - matches <code>org/springframework/servlet/bla.jsp</code> but also\n  * <code>org/springframework/testing/servlet/bla.jsp</code> and <code>org/servlet/bla.jsp</code></li> </ul>"}]}

