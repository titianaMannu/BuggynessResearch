{"sha":"2615a9b42666e867c50cf5537c91e6f2f4b58908","node_id":"MDY6Q29tbWl0MjA2MzY0OjI2MTVhOWI0MjY2NmU4NjdjNTBjZjU1MzdjOTFlNmYyZjRiNTg5MDg=","commit":{"author":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2009-08-21T18:53:40Z"},"committer":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2009-08-21T18:53:40Z"},"message":"OPENJPA-1112 JPA2 Query result of embeddable object can not be further updated\nBulk update of embedded field is not allowed\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@806675 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"ea5345af31024ad2a07b1b871dc532fee560ad8d","url":"https://api.github.com/repos/apache/openjpa/git/trees/ea5345af31024ad2a07b1b871dc532fee560ad8d"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/2615a9b42666e867c50cf5537c91e6f2f4b58908","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/2615a9b42666e867c50cf5537c91e6f2f4b58908","html_url":"https://github.com/apache/openjpa/commit/2615a9b42666e867c50cf5537c91e6f2f4b58908","comments_url":"https://api.github.com/repos/apache/openjpa/commits/2615a9b42666e867c50cf5537c91e6f2f4b58908/comments","author":null,"committer":null,"parents":[{"sha":"382bafc874466e32efb8d67c3a92373b35dde932","url":"https://api.github.com/repos/apache/openjpa/commits/382bafc874466e32efb8d67c3a92373b35dde932","html_url":"https://github.com/apache/openjpa/commit/382bafc874466e32efb8d67c3a92373b35dde932"}],"stats":{"total":32,"additions":31,"deletions":1},"files":[{"sha":"357f18a8637a7e74b0af31982ab69838c5b3eccd","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/jpql/JPQLExpressionBuilder.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/2615a9b42666e867c50cf5537c91e6f2f4b58908/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/jpql/JPQLExpressionBuilder.java","raw_url":"https://github.com/apache/openjpa/raw/2615a9b42666e867c50cf5537c91e6f2f4b58908/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/jpql/JPQLExpressionBuilder.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/jpql/JPQLExpressionBuilder.java?ref=2615a9b42666e867c50cf5537c91e6f2f4b58908","patch":"@@ -558,6 +558,10 @@ protected void evalSetClause(QueryExpressions exps) {\n         JPQLNode[] nodes = root().findChildrenByID(JJTUPDATEITEM);\n         for (int i = 0; nodes != null && i < nodes.length; i++) {\n             Path path = getPath(firstChild(nodes[i]));\n+            if (path.last().getValue().getEmbeddedMetaData() != null)\n+                throw parseException(EX_USER, \"cant-bulk-update-embeddable\",\n+                        new Object[]{assemble(firstChild(nodes[i]))}, null);\n+\n             JPQLNode lastChild = lastChild(nodes[i]);\n             Value val = (lastChild.children == null) \n                       ? null : getValue(onlyChild(lastChild));"},{"sha":"6533bbc44f1aad52f7732f4acc5548bdab049a09","filename":"openjpa-kernel/src/main/resources/org/apache/openjpa/kernel/jpql/localizer.properties","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/2615a9b42666e867c50cf5537c91e6f2f4b58908/openjpa-kernel/src/main/resources/org/apache/openjpa/kernel/jpql/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/2615a9b42666e867c50cf5537c91e6f2f4b58908/openjpa-kernel/src/main/resources/org/apache/openjpa/kernel/jpql/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/resources/org/apache/openjpa/kernel/jpql/localizer.properties?ref=2615a9b42666e867c50cf5537c91e6f2f4b58908","patch":"@@ -79,4 +79,7 @@ bad-qualified-path: Attemp to navigate a basic type of Key(\"{0}\").\n bad-general-identifier: The identitier \"{0}\" in \"{1}\" operator is not valid \\\n     in conditional expression.\n bad-predicate: JPQL query does not support conditional expression over \\\n-    embeddable class. JPQL string: \"{0}\".  \n\\ No newline at end of file\n+    embeddable class. JPQL string: \"{0}\". \n+cant-bulk-update-embeddable: Bulk update of embeddable field is not allowed: \\\n+    \"{0}\".\n+ \n\\ No newline at end of file"},{"sha":"980b97600ed817ef710d2994cd33d790e015bcde","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestUpdateEmbeddedQueryResult.java","status":"modified","additions":23,"deletions":0,"changes":23,"blob_url":"https://github.com/apache/openjpa/blob/2615a9b42666e867c50cf5537c91e6f2f4b58908/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestUpdateEmbeddedQueryResult.java","raw_url":"https://github.com/apache/openjpa/raw/2615a9b42666e867c50cf5537c91e6f2f4b58908/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestUpdateEmbeddedQueryResult.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestUpdateEmbeddedQueryResult.java?ref=2615a9b42666e867c50cf5537c91e6f2f4b58908","patch":"@@ -84,6 +84,29 @@ public Embed createEmbed(int id, int idx) {\n         return embed;\r\n     }\r\n \r\n+    /*\r\n+     * \r\n+     */\r\n+    public void testBulkUpdateEmbeddedField() {\r\n+        EntityManager em = emf.createEntityManager();\r\n+        String update = \"UPDATE EntityA_Embed_Embed a set a.embed.embed.intVal1 = ?1,\" +\r\n+                \" a.embed.embed.intVal2 = ?2 where a.id = 10\";\r\n+        em.getTransaction().begin();\r\n+        int count = em.createQuery(update).setParameter(1, 100).setParameter(2, 200).executeUpdate();\r\n+        em.getTransaction().commit();\r\n+        assertEquals(count, 0);\r\n+\r\n+        // test invalid bulk update embeddable field\r\n+        update = \"UPDATE EntityA_Embed_Embed a set a.embed.embed = ?1\";\r\n+        Embed embed1 = createEmbed(ID, 10);\r\n+        try {\r\n+        int updateCount = em.createQuery(update).setParameter(1, embed1).executeUpdate();\r\n+        } catch (ArgumentException e) {\r\n+            // as expected: Bulk update of embeddable field is not allowed.\r\n+        }\r\n+        em.close();\r\n+    }\r\n+\r\n     /*\r\n      * update embedded object returned from query\r\n      */\r"}]}

