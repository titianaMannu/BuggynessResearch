{"sha":"2641d43ed44233b666048977a260aa4a85cde518","node_id":"MDY6Q29tbWl0MjA2MzY0OjI2NDFkNDNlZDQ0MjMzYjY2NjA0ODk3N2EyNjBhYTRhODVjZGU1MTg=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2010-02-10T02:39:38Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2010-02-10T02:39:38Z"},"message":"OPENJPA-1334: Separate distribution policy from DataCacheManager.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@908327 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c03b14304a1ab6981d71f5039e61ef58539c118f","url":"https://api.github.com/repos/apache/openjpa/git/trees/c03b14304a1ab6981d71f5039e61ef58539c118f"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/2641d43ed44233b666048977a260aa4a85cde518","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/2641d43ed44233b666048977a260aa4a85cde518","html_url":"https://github.com/apache/openjpa/commit/2641d43ed44233b666048977a260aa4a85cde518","comments_url":"https://api.github.com/repos/apache/openjpa/commits/2641d43ed44233b666048977a260aa4a85cde518/comments","author":null,"committer":null,"parents":[{"sha":"92f162bd4b12b0700f9784df26cfb21982a44c91","url":"https://api.github.com/repos/apache/openjpa/commits/92f162bd4b12b0700f9784df26cfb21982a44c91","html_url":"https://github.com/apache/openjpa/commit/92f162bd4b12b0700f9784df26cfb21982a44c91"}],"stats":{"total":32,"additions":24,"deletions":8},"files":[{"sha":"9338df0e2b84d8a4b042c1853c5b33fb6c49f4ba","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestCacheExclusions.java","status":"modified","additions":8,"deletions":5,"changes":13,"blob_url":"https://github.com/apache/openjpa/blob/2641d43ed44233b666048977a260aa4a85cde518/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestCacheExclusions.java","raw_url":"https://github.com/apache/openjpa/raw/2641d43ed44233b666048977a260aa4a85cde518/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestCacheExclusions.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestCacheExclusions.java?ref=2641d43ed44233b666048977a260aa4a85cde518","patch":"@@ -194,17 +194,20 @@ public OpenJPAEntityManagerFactorySPI getEntityManagerFactoryCacheSettings(\n         }\n         StringBuilder dataCacheSettings = new StringBuilder();\n         dataCacheSettings.append(\"default\");\n+        \n+        StringBuilder policySettings = new StringBuilder();\n         if (includes.length() > 0 || excludes.length() > 0) {\n-            dataCacheSettings.append(\"(\");\n-            dataCacheSettings.append(includes);\n+            policySettings.append(\"type-based(\");\n+            policySettings.append(includes);\n             if (includes.length() > 0 && excludes.length() > 0) {\n-                dataCacheSettings.append(\",\");\n+                policySettings.append(\",\");\n             }\n-            dataCacheSettings.append(excludes);\n-            dataCacheSettings.append(\")\");\n+            policySettings.append(excludes);\n+            policySettings.append(\")\");\n         }\n         Map<String, String> props = new HashMap<String, String>();\n         props.put(\"openjpa.DataCacheManager\", dataCacheSettings.toString());\n+        props.put(\"openjpa.CacheDistributionPolicy\", policySettings.toString());\n         props.put(\"openjpa.DataCache\", \"true\");\n         props.put(\"openjpa.RemoteCommitProvider\", \"sjvm\");\n         props.put(\"openjpa.MetaDataFactory\", \"jpa(Types=\""},{"sha":"ba7d62c3266a3e24a41f0eec8a383b14bfbc453d","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestPartitionedDataCache.java","status":"modified","additions":16,"deletions":3,"changes":19,"blob_url":"https://github.com/apache/openjpa/blob/2641d43ed44233b666048977a260aa4a85cde518/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestPartitionedDataCache.java","raw_url":"https://github.com/apache/openjpa/raw/2641d43ed44233b666048977a260aa4a85cde518/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestPartitionedDataCache.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestPartitionedDataCache.java?ref=2641d43ed44233b666048977a260aa4a85cde518","patch":"@@ -23,6 +23,7 @@\n import org.apache.openjpa.datacache.DataCache;\n import org.apache.openjpa.datacache.PartitionedDataCache;\n import org.apache.openjpa.kernel.OpenJPAStateManager;\n+import org.apache.openjpa.lib.conf.Configuration;\n import org.apache.openjpa.persistence.StoreCacheImpl;\n import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n import org.apache.openjpa.util.UserException;\n@@ -32,8 +33,8 @@ public void setUp() {\n         super.setUp(\"openjpa.DataCache\", \"partitioned(PartitionType=concurrent,partitions=\"+\n                 \"'(name=a,cacheSize=100),(name=b,cacheSize=200)')\",\n                     \"openjpa.RemoteCommitProvider\", \"sjvm\",\n-        \"openjpa.DataCacheManager\", \n-        \"DistributionPolicy=org.apache.openjpa.persistence.datacache.TestPartitionedDataCache$TestPolicy\");\n+        \"openjpa.CacheDistributionPolicy\",\n+        \"org.apache.openjpa.persistence.datacache.TestPartitionedDataCache$TestPolicy\");\n     }\n     \n     public void testPropertyParsing() {\n@@ -76,7 +77,10 @@ public void testPropertyParsing() {\n         \n     }\n     \n-    public void testPolicy() {\n+    public void testPolicyConfiguration() {\n+        Object v = emf.getConfiguration().toProperties(true).get(\"openjpa.CacheDistributionPolicy\");\n+        String policyPlugin = emf.getConfiguration().getCacheDistributionPolicy();\n+        CacheDistributionPolicy policyInstance = emf.getConfiguration().getCacheDistributionPolicyInstance();\n         CacheDistributionPolicy policy = emf.getConfiguration().getDataCacheManagerInstance().getDistributionPolicy();\n         assertNotNull(policy);\n         assertTrue(policy.getClass() + \" not TestPolicy\", policy instanceof TestPolicy);\n@@ -105,6 +109,15 @@ void assertCacheConfiguration(String name, int size) {\n         public String selectCache(OpenJPAStateManager sm, Object context) {\n             return \"a\";\n         }\n+\n+        public void endConfiguration() {\n+        }\n+\n+        public void setConfiguration(Configuration conf) {\n+        }\n+\n+        public void startConfiguration() {\n+        }\n         \n     }\n }"}]}

