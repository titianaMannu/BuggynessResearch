{"sha":"26a3499fe56803d29b8421fec6c404a46b68f5df","node_id":"MDY6Q29tbWl0MjA2MzY0OjI2YTM0OTlmZTU2ODAzZDI5Yjg0MjFmZWM2YzQwNGE0NmI2OGY1ZGY=","commit":{"author":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-09-26T18:53:14Z"},"committer":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-09-26T18:53:14Z"},"message":"Leave escape character in string if we use db wildchars as matches wildcards.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@450144 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"1f357d3cf39899c2c57f25a57089c0de575f0945","url":"https://api.github.com/repos/apache/openjpa/git/trees/1f357d3cf39899c2c57f25a57089c0de575f0945"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/26a3499fe56803d29b8421fec6c404a46b68f5df","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/26a3499fe56803d29b8421fec6c404a46b68f5df","html_url":"https://github.com/apache/openjpa/commit/26a3499fe56803d29b8421fec6c404a46b68f5df","comments_url":"https://api.github.com/repos/apache/openjpa/commits/26a3499fe56803d29b8421fec6c404a46b68f5df/comments","author":null,"committer":null,"parents":[{"sha":"9a40eb69b0aea72c05c0c3812b1b03561b820d84","url":"https://api.github.com/repos/apache/openjpa/commits/9a40eb69b0aea72c05c0c3812b1b03561b820d84","html_url":"https://github.com/apache/openjpa/commit/9a40eb69b0aea72c05c0c3812b1b03561b820d84"}],"stats":{"total":13,"additions":3,"deletions":10},"files":[{"sha":"90cc0241f93b1a47e08024989ab4d80942b85fd6","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/MatchesExpression.java","status":"modified","additions":3,"deletions":10,"changes":13,"blob_url":"https://github.com/apache/openjpa/blob/26a3499fe56803d29b8421fec6c404a46b68f5df/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/MatchesExpression.java","raw_url":"https://github.com/apache/openjpa/raw/26a3499fe56803d29b8421fec6c404a46b68f5df/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/MatchesExpression.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/MatchesExpression.java?ref=26a3499fe56803d29b8421fec6c404a46b68f5df","patch":"@@ -95,12 +95,8 @@ public void appendTo(Select sel, ExpContext ctx, ExpState state,\n             // create a DB wildcard string by replacing the\n             // multi token (e.g., '.*') and the single token (e.g., \".\")\n             // with '%' and '.' with '_'\n-            String[] parts;\n-            StringBuffer repbuf;\n-\n             str = replaceEscape(str, _multi, \"%\", _escape);\n             str = replaceEscape(str, _single, \"_\", _escape);\n-\n             buf.append(\" LIKE \").appendValue(str, col);\n \n             // escape out characters by using the database's escape sequence\n@@ -123,23 +119,20 @@ private static String replaceEscape(String str, String from, String to,\n         String escape) {\n         String[] parts = Strings.split(str, from, Integer.MAX_VALUE);\n         StringBuffer repbuf = new StringBuffer();\n-        for (int i = 0; parts != null && i < parts.length; i++) {\n+        for (int i = 0; i < parts.length; i++) {\n             if (i > 0) {\n                 // if the previous part ended with an escape character, then\n                 // escape the character and remove the previous escape;\n                 // this doesn't support any double-escaping or other more\n                 // sophisticated features\n-                if (parts[i - 1].endsWith(escape)) {\n+                if (!from.equals(to) && parts[i - 1].endsWith(escape)) {\n                     repbuf.setLength(repbuf.length() - 1);\n                     repbuf.append(from);\n-                }\n-                else {\n+                } else\n                     repbuf.append(to);\n-                }\n             }\n             repbuf.append(parts[i]);\n         }\n-\n         return repbuf.toString();\n     }\n "}]}

