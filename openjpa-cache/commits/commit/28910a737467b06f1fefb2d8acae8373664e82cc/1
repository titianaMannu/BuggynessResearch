{"sha":"28910a737467b06f1fefb2d8acae8373664e82cc","node_id":"MDY6Q29tbWl0MjA2MzY0OjI4OTEwYTczNzQ2N2IwNmYxZmVmYjJkOGFjYWU4MzczNjY0ZTgyY2M=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2006-10-08T02:05:49Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2006-10-08T02:05:49Z"},"message":"Changed OpenJPAProductDerivation to have a proper lifecycle callback for BrokerFactoryValue initialization; added supporting infrastructure as needed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@454064 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"6f8ab04fd6bbfbd405d27226a50cf4e6a1eee393","url":"https://api.github.com/repos/apache/openjpa/git/trees/6f8ab04fd6bbfbd405d27226a50cf4e6a1eee393"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/28910a737467b06f1fefb2d8acae8373664e82cc","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/28910a737467b06f1fefb2d8acae8373664e82cc","html_url":"https://github.com/apache/openjpa/commit/28910a737467b06f1fefb2d8acae8373664e82cc","comments_url":"https://api.github.com/repos/apache/openjpa/commits/28910a737467b06f1fefb2d8acae8373664e82cc/comments","author":null,"committer":null,"parents":[{"sha":"43f5348782f4600b745f5157a2d9ef7711052785","url":"https://api.github.com/repos/apache/openjpa/commits/43f5348782f4600b745f5157a2d9ef7711052785","html_url":"https://github.com/apache/openjpa/commit/43f5348782f4600b745f5157a2d9ef7711052785"}],"stats":{"total":55,"additions":48,"deletions":7},"files":[{"sha":"ee499e2b8f1c04e484562d92b63743b9d2198f7c","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/JDBCProductDerivation.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/28910a737467b06f1fefb2d8acae8373664e82cc/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/JDBCProductDerivation.java","raw_url":"https://github.com/apache/openjpa/raw/28910a737467b06f1fefb2d8acae8373664e82cc/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/JDBCProductDerivation.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/JDBCProductDerivation.java?ref=28910a737467b06f1fefb2d8acae8373664e82cc","patch":"@@ -21,15 +21,16 @@\n import org.apache.openjpa.lib.conf.AbstractProductDerivation;\n import org.apache.openjpa.lib.conf.ConfigurationProvider;\n \n+import java.util.Map;\n+\n /**\n  * Sets JDBC as default store.\n  */\n public class JDBCProductDerivation extends AbstractProductDerivation\n     implements OpenJPAProductDerivation {\n \n-    static {\n-        BrokerFactoryValue.addDefaultAlias(\"jdbc\",\n-            JDBCBrokerFactory.class.getName());\n+    public void initializeBrokerFactoryValueAliases(Map m) {\n+        m.put(\"jdbc\", JDBCBrokerFactory.class.getName());\n     }\n \n     public int getType() {\n@@ -39,7 +40,7 @@ public int getType() {\n     public boolean beforeConfigurationConstruct(ConfigurationProvider cp) {\n         // default to JDBC when no broker factory set\n         if (BrokerFactoryValue.get(cp) == null) {\n-            BrokerFactoryValue.set(cp, JDBCBrokerFactory.class.getName());\n+            BrokerFactoryValue.set(cp, \"jdbc\");\n             return true;\n         }\n         return false;"},{"sha":"afe9dffd26352452d51c2f6ef47d6847c0d791be","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/conf/BrokerFactoryValue.java","status":"modified","additions":18,"deletions":1,"changes":19,"blob_url":"https://github.com/apache/openjpa/blob/28910a737467b06f1fefb2d8acae8373664e82cc/openjpa-kernel/src/main/java/org/apache/openjpa/conf/BrokerFactoryValue.java","raw_url":"https://github.com/apache/openjpa/raw/28910a737467b06f1fefb2d8acae8373664e82cc/openjpa-kernel/src/main/java/org/apache/openjpa/conf/BrokerFactoryValue.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/conf/BrokerFactoryValue.java?ref=28910a737467b06f1fefb2d8acae8373664e82cc","patch":"@@ -17,13 +17,17 @@\n \n import java.util.List;\n import java.util.ArrayList;\n+import java.util.HashMap;\n import java.util.Map;\n+import java.util.Map.Entry;\n+import java.util.Iterator;\n \n import org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory;\n import org.apache.openjpa.kernel.BrokerFactory;\n import org.apache.openjpa.lib.conf.ConfigurationProvider;\n import org.apache.openjpa.lib.conf.PluginValue;\n import org.apache.openjpa.lib.conf.ProductDerivations;\n+import org.apache.openjpa.lib.conf.ProductDerivation;\n \n /**\n  * Value type used to represent the {@link BrokerFactory}. This type is\n@@ -40,9 +44,22 @@\n \n     private static final List _aliases = new ArrayList();\n     private static final List _prefixes = new ArrayList(2);\n+\n     static {\n-        addDefaultAlias(\"abstractstore\",\n+        Map aliases = new HashMap();\n+        aliases.put(\"abstractstore\", \n             AbstractStoreBrokerFactory.class.getName());\n+        ProductDerivation[] ds = ProductDerivations.getProductDerivations();\n+        for (int i = 0; i < ds.length; i++) {\n+            if (ds[i] instanceof OpenJPAProductDerivation)\n+                ((OpenJPAProductDerivation) ds[i])\n+                    .initializeBrokerFactoryValueAliases(aliases);\n+        }\n+\n+        for (Iterator iter = aliases.entrySet().iterator(); iter.hasNext(); ) {\n+            Map.Entry e = (Map.Entry) iter.next();\n+            addDefaultAlias((String) e.getKey(), (String) e.getValue());\n+        }\n     }\n \n     /**"},{"sha":"3c5aca1c157480bad8c72b6242fe01d64bd90ede","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAProductDerivation.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/28910a737467b06f1fefb2d8acae8373664e82cc/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAProductDerivation.java","raw_url":"https://github.com/apache/openjpa/raw/28910a737467b06f1fefb2d8acae8373664e82cc/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAProductDerivation.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAProductDerivation.java?ref=28910a737467b06f1fefb2d8acae8373664e82cc","patch":"@@ -16,6 +16,7 @@\n package org.apache.openjpa.conf;\r\n \r\n import org.apache.openjpa.lib.conf.ProductDerivation;\r\n+import java.util.Map;\r\n \r\n /**\r\n  * Adds datastore based extension to ProductDerivation.  \r\n@@ -29,4 +30,11 @@\n     public static final int TYPE_STORE = 200;\r\n     public static final int TYPE_SPEC_STORE = 300;\r\n     public static final int TYPE_PRODUCT_STORE = 400;\r\n+\r\n+    /**\r\n+     * Load default alias options into the BrokerFactoryValue's static data\r\n+     * structures. In the case of multiple ProductDerivations, this will be\r\n+     * invoked in the order defined by the type of the product derivation.\r\n+     */\r\n+    public void initializeBrokerFactoryValueAliases(Map aliases);\r\n }\r"},{"sha":"8156446543c49d1ca4e0cb7dc70f1b58a17f8f12","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ProductDerivation.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/28910a737467b06f1fefb2d8acae8373664e82cc/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ProductDerivation.java","raw_url":"https://github.com/apache/openjpa/raw/28910a737467b06f1fefb2d8acae8373664e82cc/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ProductDerivation.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ProductDerivation.java?ref=28910a737467b06f1fefb2d8acae8373664e82cc","patch":"@@ -47,14 +47,14 @@\n \n     /**\n      * Load globals into the returned ConfigurationProvider, or return null if \n-     * no globals is found.\n+     * no globals are found.\n      */\n     public ConfigurationProvider loadGlobals(ClassLoader loader) \n         throws Exception;\n \n     /**\n      * Load defaults into the returned ConfigurationProvider, or return null if \n-     * no defaults is found.\n+     * no defaults are found.\n      */\n     public ConfigurationProvider loadDefaults(ClassLoader loader) \n         throws Exception;"},{"sha":"fd1a13b3882fcc7bb7d1478a433157c620773da8","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ProductDerivations.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/28910a737467b06f1fefb2d8acae8373664e82cc/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ProductDerivations.java","raw_url":"https://github.com/apache/openjpa/raw/28910a737467b06f1fefb2d8acae8373664e82cc/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ProductDerivations.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ProductDerivations.java?ref=28910a737467b06f1fefb2d8acae8373664e82cc","patch":"@@ -75,6 +75,13 @@\n             _prefixes[i + 1] = (String) prefixes.get(i);\n     }\n \n+    /**\n+     * Return all the product derivations registered in the current classloader\n+     */\n+    public static ProductDerivation[] getProductDerivations() {\n+        return _derivations;\n+    }\n+\n     /**\n      * Return the recognized prefixes for configuration properties.\n      */"},{"sha":"55fb8cf05b47e0c773bdbd55459cff4a6ca59249","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCPersistenceProductDerivation.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/28910a737467b06f1fefb2d8acae8373664e82cc/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCPersistenceProductDerivation.java","raw_url":"https://github.com/apache/openjpa/raw/28910a737467b06f1fefb2d8acae8373664e82cc/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCPersistenceProductDerivation.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCPersistenceProductDerivation.java?ref=28910a737467b06f1fefb2d8acae8373664e82cc","patch":"@@ -24,6 +24,8 @@\n import org.apache.openjpa.persistence.FetchPlan;\n import org.apache.openjpa.persistence.PersistenceProductDerivation;\n \n+import java.util.Map;\n+\n /**\n  * Sets JDBC-specific JPA specification defaults.\n  *\n@@ -34,6 +36,9 @@\n     extends AbstractProductDerivation \n     implements OpenJPAProductDerivation {\n     \n+    public void initializeBrokerFactoryValueAliases(Map m) {\n+    }\n+\n     public int getType() {\n         return TYPE_SPEC_STORE;\n     }"},{"sha":"89c69fc2fba29651f182124d4b17c97441868a10","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/28910a737467b06f1fefb2d8acae8373664e82cc/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java","raw_url":"https://github.com/apache/openjpa/raw/28910a737467b06f1fefb2d8acae8373664e82cc/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java?ref=28910a737467b06f1fefb2d8acae8373664e82cc","patch":"@@ -70,6 +70,9 @@\n     private static final Localizer _loc = Localizer.forPackage\n         (PersistenceProductDerivation.class);\n \n+    public void initializeBrokerFactoryValueAliases(Map m) {\n+    }\n+\n     public int getType() {\n         return TYPE_SPEC;\n     }"}]}

