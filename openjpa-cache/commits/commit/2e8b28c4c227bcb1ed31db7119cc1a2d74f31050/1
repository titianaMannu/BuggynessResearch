{"sha":"2e8b28c4c227bcb1ed31db7119cc1a2d74f31050","node_id":"MDY6Q29tbWl0MjA2MzY0OjJlOGIyOGM0YzIyN2JjYjFlZDMxZGI3MTE5Y2MxYTJkNzRmMzEwNTA=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2007-06-12T16:43:10Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2007-06-12T16:43:10Z"},"message":"Replace usage of String.contains() by JDK1.4 compliant method \n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@546567 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"39205a7f03a38ce6d56f46e3942b063525c2563e","url":"https://api.github.com/repos/apache/openjpa/git/trees/39205a7f03a38ce6d56f46e3942b063525c2563e"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/2e8b28c4c227bcb1ed31db7119cc1a2d74f31050","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/2e8b28c4c227bcb1ed31db7119cc1a2d74f31050","html_url":"https://github.com/apache/openjpa/commit/2e8b28c4c227bcb1ed31db7119cc1a2d74f31050","comments_url":"https://api.github.com/repos/apache/openjpa/commits/2e8b28c4c227bcb1ed31db7119cc1a2d74f31050/comments","author":null,"committer":null,"parents":[{"sha":"273045b321a61bc2b0cbb25bc9269323341e21bb","url":"https://api.github.com/repos/apache/openjpa/commits/273045b321a61bc2b0cbb25bc9269323341e21bb","html_url":"https://github.com/apache/openjpa/commit/273045b321a61bc2b0cbb25bc9269323341e21bb"}],"stats":{"total":14,"additions":9,"deletions":5},"files":[{"sha":"7f6204b15059aa660595633d5b8be7b5cf139f78","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingTool.java","status":"modified","additions":9,"deletions":5,"changes":14,"blob_url":"https://github.com/apache/openjpa/blob/2e8b28c4c227bcb1ed31db7119cc1a2d74f31050/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingTool.java","raw_url":"https://github.com/apache/openjpa/raw/2e8b28c4c227bcb1ed31db7119cc1a2d74f31050/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingTool.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingTool.java?ref=2e8b28c4c227bcb1ed31db7119cc1a2d74f31050","patch":"@@ -393,8 +393,8 @@ public SchemaGroup getSchemaGroup() {\n                 factory.setConfiguration(_conf);\n                 _schema = factory;\n             } else if (_readSchema \n-                || _schemaActions.contains(SchemaTool.ACTION_RETAIN)\n-                || _schemaActions.contains(SchemaTool.ACTION_REFRESH)) {\n+                || contains(_schemaActions,SchemaTool.ACTION_RETAIN)\n+                || contains(_schemaActions,SchemaTool.ACTION_REFRESH)) {\n                 _schema = (SchemaGroup) newSchemaTool(null).getDBSchemaGroup().\n                     clone();\n             } else {\n@@ -726,8 +726,8 @@ private void validate(Class cls) {\n         MappingRepository repos = getRepository();\n         repos.setStrategyInstaller(new RuntimeStrategyInstaller(repos));\n         if (getMapping(repos, cls, true) != null)\n-            _flushSchema = !_schemaActions.contains(SCHEMA_ACTION_NONE)\n-                && !_schemaActions.contains(SchemaTool.ACTION_ADD);\n+            _flushSchema = !contains(_schemaActions,SCHEMA_ACTION_NONE)\n+                && !contains(_schemaActions,SchemaTool.ACTION_ADD);\n     }\n \n     /**\n@@ -771,7 +771,7 @@ private void drop(Class cls) {\n         if (_dropCls == null)\n             _dropCls = new HashSet();\n         _dropCls.add(cls);\n-        if (!_schemaActions.contains(SchemaTool.ACTION_DROP))\n+        if (!contains(_schemaActions,SchemaTool.ACTION_DROP))\n             return;\n \n         MappingRepository repos = getRepository();\n@@ -1081,6 +1081,10 @@ public static boolean run(JDBCConfiguration conf, String[] args,\n             throw new InternalException(_loc.get(\"importexport-instantiate\"),t);\n         }\n     }\n+    \n+    private static boolean contains(String list, String key) {\n+    \treturn (list == null) ? false : list.indexOf(key) != -1;\n+    }\n \n     /**\n      * Run flags."}]}

