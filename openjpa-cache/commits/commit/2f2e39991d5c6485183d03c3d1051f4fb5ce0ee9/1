{"sha":"2f2e39991d5c6485183d03c3d1051f4fb5ce0ee9","node_id":"MDY6Q29tbWl0MjA2MzY0OjJmMmUzOTk5MWQ1YzY0ODUxODNkMDNjM2QxMDUxZjRmYjVjZTBlZTk=","commit":{"author":{"name":"Kevin W. Sutter","email":"kwsutter@apache.org","date":"2007-10-29T16:23:17Z"},"committer":{"name":"Kevin W. Sutter","email":"kwsutter@apache.org","date":"2007-10-29T16:23:17Z"},"message":"OPENJPA-421.  Committing Daniel's changes to ensure that the datasource configuration is complete before attempting to generate SQL.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@589723 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"496d0e83a12671edca91912ba16175585c5d5693","url":"https://api.github.com/repos/apache/openjpa/git/trees/496d0e83a12671edca91912ba16175585c5d5693"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/2f2e39991d5c6485183d03c3d1051f4fb5ce0ee9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/2f2e39991d5c6485183d03c3d1051f4fb5ce0ee9","html_url":"https://github.com/apache/openjpa/commit/2f2e39991d5c6485183d03c3d1051f4fb5ce0ee9","comments_url":"https://api.github.com/repos/apache/openjpa/commits/2f2e39991d5c6485183d03c3d1051f4fb5ce0ee9/comments","author":null,"committer":null,"parents":[{"sha":"80d2c39020e4aa201d1bc066db6d97044863e1a1","url":"https://api.github.com/repos/apache/openjpa/commits/80d2c39020e4aa201d1bc066db6d97044863e1a1","html_url":"https://github.com/apache/openjpa/commit/80d2c39020e4aa201d1bc066db6d97044863e1a1"}],"stats":{"total":22,"additions":20,"deletions":2},"files":[{"sha":"560c15dfd6a22a33727dda8f5a7f6b7c62184811","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/DataSourceFactory.java","status":"modified","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/apache/openjpa/blob/2f2e39991d5c6485183d03c3d1051f4fb5ce0ee9/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/DataSourceFactory.java","raw_url":"https://github.com/apache/openjpa/raw/2f2e39991d5c6485183d03c3d1051f4fb5ce0ee9/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/DataSourceFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/DataSourceFactory.java?ref=2f2e39991d5c6485183d03c3d1051f4fb5ce0ee9","patch":"@@ -189,6 +189,7 @@ public static DecoratingDataSource installDBDictionary(DBDictionary dict,\n         DataSource inner = ds.getInnermostDelegate();\n         if (inner instanceof DriverDataSource)\n             ((DriverDataSource) inner).initDBDictionary(dict);\n+        Connection conn = null;\n \n         try {\n             // add the dictionary as a warning handler on the logging\n@@ -219,9 +220,26 @@ public static DecoratingDataSource installDBDictionary(DBDictionary dict,\n \n             // allow the dbdictionary to decorate the connection further\n             ds.addDecorator(dict);\n+            \n+            // ensure dbdictionary to process connectedConfiguration()\n+            if (!factory2)\n+                conn = ds.getConnection(conf.getConnectionUserName(), conf\n+                        .getConnectionPassword());\n+            else\n+                conn = ds.getConnection(conf.getConnection2UserName(), conf\n+                        .getConnection2Password());\n+\n             return ds;\n         } catch (Exception e) {\n             throw new StoreException(e).setFatal(true);\n+        } finally {\n+            if (conn != null)\n+                try {\n+                    conn.close();\n+                } catch (SQLException se) {\n+                    // ignore any exception since the connection is not going\n+                    // to be used anyway\n+                }\n         }\n     }\n "},{"sha":"d48c00946867f2c06759f752b84de53d73df3158","filename":"openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/conf/localizer.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/2f2e39991d5c6485183d03c3d1051f4fb5ce0ee9/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/conf/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/2f2e39991d5c6485183d03c3d1051f4fb5ce0ee9/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/conf/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/conf/localizer.properties?ref=2f2e39991d5c6485183d03c3d1051f4fb5ce0ee9","patch":"@@ -238,8 +238,8 @@ ConnectionURL-values: jdbc:JSQLConnect://<hostname>/database=<database>,\\\n \tjdbc:dbaw://<hostname>:8889/<database>\n \n connecting-for-dictionary: OpenJPA will now connect to the database to attempt \\\n-    to determine what type of database dictionary to use.  To prevent this \\\n-\tconnection in the future, set your openjpa.jdbc.DBDictionary \\\n+    to determine what type of database dictionary to use. You may prevent this \\\n+\tconnection in the future by setting your openjpa.jdbc.DBDictionary \\\n     configuration property to the appropriate value for your database (see \\\n     the documentation for available values).\n map-factory: Using mapping factory \"{0}\"."}]}

