{"sha":"2f4cafdcfb6f0333538602b794a11e084d19cd3f","node_id":"MDY6Q29tbWl0MjA2MzY0OjJmNGNhZmRjZmI2ZjAzMzM1Mzg2MDJiNzk0YTExZTA4NGQxOWNkM2Y=","commit":{"author":{"name":"Marc Prud'hommeaux","email":"mprudhom@apache.org","date":"2007-05-04T09:31:17Z"},"committer":{"name":"Marc Prud'hommeaux","email":"mprudhom@apache.org","date":"2007-05-04T09:31:17Z"},"message":"OPENJPA-148 Fix for scanning directories for persistent types.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@535139 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0d3478b3d9d0bc677d09552bf19cfb2e99594ae1","url":"https://api.github.com/repos/apache/openjpa/git/trees/0d3478b3d9d0bc677d09552bf19cfb2e99594ae1"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/2f4cafdcfb6f0333538602b794a11e084d19cd3f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/2f4cafdcfb6f0333538602b794a11e084d19cd3f","html_url":"https://github.com/apache/openjpa/commit/2f4cafdcfb6f0333538602b794a11e084d19cd3f","comments_url":"https://api.github.com/repos/apache/openjpa/commits/2f4cafdcfb6f0333538602b794a11e084d19cd3f/comments","author":null,"committer":null,"parents":[{"sha":"d7d400b818b752add7bf3e061e1b1870a682afe8","url":"https://api.github.com/repos/apache/openjpa/commits/d7d400b818b752add7bf3e061e1b1870a682afe8","html_url":"https://github.com/apache/openjpa/commit/d7d400b818b752add7bf3e061e1b1870a682afe8"}],"stats":{"total":14,"additions":7,"deletions":7},"files":[{"sha":"bcdd3d3046e99ace55e0b8695e0fe9ead0562285","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/AbstractCFMetaDataFactory.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/apache/openjpa/blob/2f4cafdcfb6f0333538602b794a11e084d19cd3f/openjpa-kernel/src/main/java/org/apache/openjpa/meta/AbstractCFMetaDataFactory.java","raw_url":"https://github.com/apache/openjpa/raw/2f4cafdcfb6f0333538602b794a11e084d19cd3f/openjpa-kernel/src/main/java/org/apache/openjpa/meta/AbstractCFMetaDataFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/AbstractCFMetaDataFactory.java?ref=2f4cafdcfb6f0333538602b794a11e084d19cd3f","patch":"@@ -609,7 +609,7 @@ private Set parsePersistentTypeNames(ClassLoader loader)\n                 if (file.isDirectory()) {\n                     if (log.isTraceEnabled())\n                         log.trace(_loc.get(\"scanning-directory\", file));\n-                    scan(new FileMetaDataIterator(dir, newMetaDataFilter()),\n+                    scan(new FileMetaDataIterator(file, newMetaDataFilter()),\n                         cparser, names, true, file);\n                 } else if (file.getName().endsWith(\".jar\")) {\n                     if (log.isTraceEnabled())\n@@ -668,7 +668,7 @@ private Set parsePersistentTypeNames(ClassLoader loader)\n                             log.trace(_loc.get(\"scanning-jar-stream-url\", url));\n                         scan(new ZipStreamMetaDataIterator\n                             (new ZipInputStream(url.openStream()),\n-                                newMetaDataFilter()), cparser, names, true, \n+                                newMetaDataFilter()), cparser, names, true,\n                                 url);\n                     }\n                 } else {\n@@ -695,7 +695,7 @@ private Set parsePersistentTypeNames(ClassLoader loader)\n         }\n         if (types != null)\n             names.addAll(types);\n-        \n+\n         if (log.isTraceEnabled())\n             log.trace(_loc.get(\"parse-found-names\", names));\n         \n@@ -799,8 +799,8 @@ public void clear() {\n \n         /**\n          * Add all components in the given repository to the set to be\n-\t\t * serialized.\n-\t\t */\n-\t\tpublic void addAll (MetaDataRepository repos);\n-\t}\n+         * serialized.\n+         */\n+        public void addAll (MetaDataRepository repos);\n+    }\n }"}]}

