{"sha":"301fc200d184da687730336c6da1eb6608bf0d44","node_id":"MDY6Q29tbWl0MjA2MzY0OjMwMWZjMjAwZDE4NGRhNjg3NzMwMzM2YzZkYTFlYjY2MDhiZjBkNDQ=","commit":{"author":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2009-09-03T16:22:06Z"},"committer":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2009-09-03T16:22:06Z"},"message":"Fix testcase : SQL assertion for Derby only\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@811012 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"f43b7591bb839fe528ce8e15fe20734a7d6709bd","url":"https://api.github.com/repos/apache/openjpa/git/trees/f43b7591bb839fe528ce8e15fe20734a7d6709bd"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/301fc200d184da687730336c6da1eb6608bf0d44","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/301fc200d184da687730336c6da1eb6608bf0d44","html_url":"https://github.com/apache/openjpa/commit/301fc200d184da687730336c6da1eb6608bf0d44","comments_url":"https://api.github.com/repos/apache/openjpa/commits/301fc200d184da687730336c6da1eb6608bf0d44/comments","author":null,"committer":null,"parents":[{"sha":"e01390051bc617047b7153868289c11ccb6f4cba","url":"https://api.github.com/repos/apache/openjpa/commits/e01390051bc617047b7153868289c11ccb6f4cba","html_url":"https://github.com/apache/openjpa/commit/e01390051bc617047b7153868289c11ccb6f4cba"}],"stats":{"total":14,"additions":6,"deletions":8},"files":[{"sha":"455c04369466a161c6fb2a8a887ce4baf9cbee01","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/AbstractCriteriaTestCase.java","status":"modified","additions":6,"deletions":8,"changes":14,"blob_url":"https://github.com/apache/openjpa/blob/301fc200d184da687730336c6da1eb6608bf0d44/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/AbstractCriteriaTestCase.java","raw_url":"https://github.com/apache/openjpa/raw/301fc200d184da687730336c6da1eb6608bf0d44/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/AbstractCriteriaTestCase.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/AbstractCriteriaTestCase.java?ref=301fc200d184da687730336c6da1eb6608bf0d44","patch":"@@ -50,6 +50,7 @@\n     protected abstract OpenJPAEntityManagerFactorySPI getEntityManagerFactory();\n     \n     protected abstract EntityManager getEntityManager();\n+    private DBDictionary dict = null;\n \n     /**\n      * Create an entity manager factory for persistence unit <code>pu</code>. Put {@link #CLEAR_TABLES} in this list to\n@@ -84,7 +85,7 @@ protected OpenJPAEntityManagerFactorySPI createNamedEMF(Class<?>... types) {\n \n     void setDictionary() {\n         JDBCConfiguration conf = (JDBCConfiguration) getEntityManagerFactory().getConfiguration();\n-        DBDictionary dict = conf.getDBDictionaryInstance();\n+        dict = conf.getDBDictionaryInstance();\n         dict.requiresCastForComparisons = false;\n         dict.requiresCastForMathFunctions = false;\n     }\n@@ -181,7 +182,10 @@ void executeAndCompareSQL(String jpql, Query cQ, Query jQ, String expectedSQL) {\n                     .get(i));\n             }\n         }\n-        \n+\n+        if (!(dict instanceof DerbyDictionary))\n+            return;\n+\n         if (expectedSQL != null) {\n             assertEquals(\"SQL for JPQL and ExpectedSQL for \" + jpql + \" is different\", jSQL.get(0), \n                     expectedSQL);\n@@ -190,9 +194,6 @@ void executeAndCompareSQL(String jpql, Query cQ, Query jQ, String expectedSQL) {\n     }\n \n     void executeAndCompareSQL(String jpql, String expectedSQL) {\n-        JDBCConfiguration conf = (JDBCConfiguration) getEntityManagerFactory().getConfiguration();\n-        DBDictionary dict = conf.getDBDictionaryInstance();\n-\n         Query jQ = getEntityManager().createQuery(jpql);\n \n         List<String> jSQL = null;\n@@ -218,9 +219,6 @@ void executeAndCompareSQL(String jpql, String expectedSQL) {\n     }\n \n     void executeAndCompareSQL(Query jQ, String expectedSQL) {\n-        JDBCConfiguration conf = (JDBCConfiguration) getEntityManagerFactory().getConfiguration();\n-        DBDictionary dict = conf.getDBDictionaryInstance();\n-\n         List<String> jSQL = null;\n         try {\n             jSQL = executeQueryAndCollectSQL(jQ);"}]}

