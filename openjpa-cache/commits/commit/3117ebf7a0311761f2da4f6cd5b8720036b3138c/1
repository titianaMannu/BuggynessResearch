{"sha":"3117ebf7a0311761f2da4f6cd5b8720036b3138c","node_id":"MDY6Q29tbWl0MjA2MzY0OjMxMTdlYmY3YTAzMTE3NjFmMmRhNGY2Y2Q1Yjg3MjAwMzZiMzEzOGM=","commit":{"author":{"name":"Dianne E. Richards","email":"dianner@apache.org","date":"2010-03-31T17:11:48Z"},"committer":{"name":"Dianne E. Richards","email":"dianner@apache.org","date":"2010-03-31T17:11:48Z"},"message":"OPENJPA-1606 Add JPQL tests for element collections\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@929623 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"b1ab2edcbf3edf404a6189ccd75ba96baddaf0b0","url":"https://api.github.com/repos/apache/openjpa/git/trees/b1ab2edcbf3edf404a6189ccd75ba96baddaf0b0"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/3117ebf7a0311761f2da4f6cd5b8720036b3138c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/3117ebf7a0311761f2da4f6cd5b8720036b3138c","html_url":"https://github.com/apache/openjpa/commit/3117ebf7a0311761f2da4f6cd5b8720036b3138c","comments_url":"https://api.github.com/repos/apache/openjpa/commits/3117ebf7a0311761f2da4f6cd5b8720036b3138c/comments","author":null,"committer":null,"parents":[{"sha":"a0c79a3cca00ee21077165b0e7f714ad5632113a","url":"https://api.github.com/repos/apache/openjpa/commits/a0c79a3cca00ee21077165b0e7f714ad5632113a","html_url":"https://github.com/apache/openjpa/commit/a0c79a3cca00ee21077165b0e7f714ad5632113a"}],"stats":{"total":49,"additions":39,"deletions":10},"files":[{"sha":"5dacbc530fbb889a4a0ebb03e16c6afe5a544209","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/maps/spec_10_1_27_ex0/TestSpec10_1_27.java","status":"modified","additions":39,"deletions":10,"changes":49,"blob_url":"https://github.com/apache/openjpa/blob/3117ebf7a0311761f2da4f6cd5b8720036b3138c/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/maps/spec_10_1_27_ex0/TestSpec10_1_27.java","raw_url":"https://github.com/apache/openjpa/raw/3117ebf7a0311761f2da4f6cd5b8720036b3138c/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/maps/spec_10_1_27_ex0/TestSpec10_1_27.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/maps/spec_10_1_27_ex0/TestSpec10_1_27.java?ref=3117ebf7a0311761f2da4f6cd5b8720036b3138c","patch":"@@ -41,8 +41,8 @@\n     public int compId = 1;\n     public int divId = 1;\n     public int vpId = 1;\n-    public List rsAllCompny1 = null;\n-    public List rsAllCompny2 = null;\n+    public List<Compny1> rsAllCompny1 = null;\n+    public List<Compny2> rsAllCompny2 = null;\n \n     public void setUp() {\n         super.setUp(CLEAR_TABLES,\n@@ -63,10 +63,10 @@ public void testQueryQualifiedId() throws Exception {\n         queryQualifiedId(false);\n     }\n \n-    public void setCandidate(Query q, Class clz) \n+    public void setCandidate(Query q, Class<?> clz) \n         throws Exception {\n-        org.apache.openjpa.persistence.QueryImpl q1 = \n-            (org.apache.openjpa.persistence.QueryImpl) q;\n+        org.apache.openjpa.persistence.QueryImpl<?> q1 = \n+            (org.apache.openjpa.persistence.QueryImpl<?>) q;\n         org.apache.openjpa.kernel.Query q2 = q1.getDelegate();\n         org.apache.openjpa.kernel.QueryImpl qi = (QueryImpl) q2;\n         if (clz == Compny1.class)\n@@ -83,7 +83,7 @@ public void queryQualifiedId(boolean inMemory) throws Exception {\n         Query q = em.createQuery(query);\n         if (inMemory) \n             setCandidate(q, Compny1.class);\n-        List rs = q.getResultList();\n+        List<?> rs = q.getResultList();\n         Division d = (Division) rs.get(0);\n \n         em.clear();\n@@ -115,6 +115,35 @@ public void queryQualifiedId(boolean inMemory) throws Exception {\n         me = (Map.Entry) rs.get(0);\n \n         assertTrue(d.equals(me.getKey()));\n+        \n+        // new tests for element collection\n+        em.clear();\n+        query = \"select im from Item1 i, in (i.images) im \" +\n+            \" order by VALUE(im)\";\n+        q = em.createQuery(query);\n+        if (inMemory) \n+            setCandidate(q, Item1.class);\n+        rs = q.getResultList();\n+        assertEquals(numItems * numImagesPerItem, rs.size());\n+        \n+        em.clear();\n+        query = \"select im from Item1 i, in (i.images) im \" +\n+            \" where VALUE(im) = 'file11'\";\n+        q = em.createQuery(query);\n+        if (inMemory) \n+            setCandidate(q, Item1.class);\n+        rs = q.getResultList();\n+        assertEquals(1, rs.size());\n+        \n+        em.clear();\n+        query = \"select im from Item1 i, in (i.images) im \" +\n+            \" group by im \" +\n+            \" having VALUE(im) like 'file1%'\";\n+        q = em.createQuery(query);\n+        if (inMemory) \n+            setCandidate(q, Item1.class);\n+        rs = q.getResultList();\n+        assertEquals(numImagesPerItem, rs.size());       \n \n         em.close();\n     }\n@@ -222,25 +251,25 @@ public void findObj(EntityManagerFactory emf) {\n \n     public void assertItem1(Item1 item) {\n         int id = item.getId();\n-        Map images = item.getImages();\n+        Map<String, String> images = item.getImages();\n         Assert.assertEquals(numImagesPerItem, images.size());\n     }\n \n     public void assertItem2(Item2 item) {\n         int id = item.getId();\n-        Map images = item.getImages();\n+        Map<String, String> images = item.getImages();\n         Assert.assertEquals(numImagesPerItem, images.size());\n     }\n \n     public void assertCompany1(Compny1 c) {\n         int id = c.getId();\n-        Map organization = c.getOrganization();\n+        Map<Division, VicePresident> organization = c.getOrganization();\n         Assert.assertEquals(2,organization.size());\n     }\n \n     public void assertCompany2(Compny2 c) {\n         int id = c.getId();\n-        Map organization = c.getOrganization();\n+        Map<Division, VicePresident> organization = c.getOrganization();\n         Assert.assertEquals(2,organization.size());\n     }    \n "}]}

