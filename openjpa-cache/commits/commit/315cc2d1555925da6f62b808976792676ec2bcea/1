{"sha":"315cc2d1555925da6f62b808976792676ec2bcea","node_id":"MDY6Q29tbWl0MjA2MzY0OjMxNWNjMmQxNTU1OTI1ZGE2ZjYyYjgwODk3Njc5MjY3NmVjMmJjZWE=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2008-07-24T16:05:10Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2008-07-24T16:05:10Z"},"message":"OPENJPA-664: Check for length of schema component name during generation of SQL DDL generation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@679442 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"d92e053bda3afa8f7a81222c5d4deb916a367025","url":"https://api.github.com/repos/apache/openjpa/git/trees/d92e053bda3afa8f7a81222c5d4deb916a367025"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/315cc2d1555925da6f62b808976792676ec2bcea","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/315cc2d1555925da6f62b808976792676ec2bcea","html_url":"https://github.com/apache/openjpa/commit/315cc2d1555925da6f62b808976792676ec2bcea","comments_url":"https://api.github.com/repos/apache/openjpa/commits/315cc2d1555925da6f62b808976792676ec2bcea/comments","author":null,"committer":null,"parents":[{"sha":"388754a28024505a7d523f066c112537e94fa831","url":"https://api.github.com/repos/apache/openjpa/commits/388754a28024505a7d523f066c112537e94fa831","html_url":"https://github.com/apache/openjpa/commit/388754a28024505a7d523f066c112537e94fa831"}],"stats":{"total":50,"additions":41,"deletions":9},"files":[{"sha":"92b1ed7c9c9a85e2e738914b86e4156dc4b3b3fe","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","status":"modified","additions":26,"deletions":7,"changes":33,"blob_url":"https://github.com/apache/openjpa/blob/315cc2d1555925da6f62b808976792676ec2bcea/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/315cc2d1555925da6f62b808976792676ec2bcea/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java?ref=315cc2d1555925da6f62b808976792676ec2bcea","patch":"@@ -3062,7 +3062,9 @@ protected String makeNameValid(String name, NameSet set, int maxLen,\n      */\n     public String[] getCreateTableSQL(Table table) {\n         StringBuffer buf = new StringBuffer();\n-        buf.append(\"CREATE TABLE \").append(getFullName(table, false));\n+        String tableName = checkNameLength(getFullName(table, false), \n+        \t\tmaxTableNameLength, \"long-table-name\");\n+        buf.append(\"CREATE TABLE \").append(tableName);\n         if (supportsComments && table.hasComment()) {\n             buf.append(\" \");\n             comment(buf, table.getComment());\n@@ -3135,7 +3137,9 @@ protected StringBuffer comment(StringBuffer buf, String comment) {\n \n         StringBuffer buf = new StringBuffer();\n         buf.append(\"CREATE SEQUENCE \");\n-        buf.append(getFullName(seq));\n+        String seqName = checkNameLength(getFullName(seq), maxTableNameLength, \n+        \t\t\"long-seq-name\");\n+        buf.append(seqName);\n         if (seq.getInitialValue() != 0)\n             buf.append(\" START WITH \").append(seq.getInitialValue());\n         if (seq.getIncrement() > 1)\n@@ -3162,8 +3166,9 @@ protected StringBuffer comment(StringBuffer buf, String comment) {\n         if (index.isUnique())\n             buf.append(\"UNIQUE \");\n         buf.append(\"INDEX \").append(index.getName());\n-\n-        buf.append(\" ON \").append(getFullName(index.getTable(), false));\n+        String indexName = checkNameLength(getFullName(index.getTable(), false), \n+        \t\tmaxIndexNameLength, \"long-index-name\");\n+        buf.append(\" ON \").append(indexName);\n         buf.append(\" (\").append(Strings.join(index.getColumns(), \", \")).\n             append(\")\");\n \n@@ -3272,7 +3277,9 @@ protected StringBuffer comment(StringBuffer buf, String comment) {\n      */\n     protected String getDeclareColumnSQL(Column col, boolean alter) {\n         StringBuffer buf = new StringBuffer();\n-        buf.append(col).append(\" \");\n+        String columnName = checkNameLength(col.getName(), maxColumnNameLength, \n+        \t\t\"long-column-name\");\n+        buf.append(columnName).append(\" \");\n         buf.append(getTypeName(col));\n \n         // can't add constraints to a column we're adding after table\n@@ -3459,11 +3466,11 @@ protected String getUniqueConstraintSQL(Unique unq) {\n         if (!supportsUniqueConstraints\n             || (unq.isDeferred() && !supportsDeferredUniqueConstraints()))\n             return null;\n-\n         StringBuffer buf = new StringBuffer();\n         if (unq.getName() != null\n             && CONS_NAME_BEFORE.equals(constraintNameMode))\n-            buf.append(\"CONSTRAINT \").append(unq.getName()).append(\" \");\n+            buf.append(\"CONSTRAINT \").append(checkNameLength(unq.getName(), \n+            \tmaxConstraintNameLength, \"long-constraint-name\")).append(\" \");\n         buf.append(\"UNIQUE \");\n         if (unq.getName() != null && CONS_NAME_MID.equals(constraintNameMode))\n             buf.append(unq.getName()).append(\" \");\n@@ -4536,4 +4543,16 @@ public void setTrimSchemaName(boolean trimSchemaName) {\n     public void deleteStream(JDBCStore store, Select sel) throws SQLException {\n         // Do nothing\n     }\n+    \n+    /**\n+     * Validate that the given name is no longer than given maximum length.\n+     * If the given name is indeed longer then raises an UserException with the \n+     * given message key otherwise returns the same name.\n+     */\n+    final String checkNameLength(String name, int length, String msgKey) {\n+    \tif (name.length() > length)\n+    \t\tthrow new UserException(_loc.get(msgKey, name, name.length(), \n+    \t\t\t\tlength));\n+    \treturn name;\n+    }\n }"},{"sha":"7a26c6934581123a8d365afc4f54d7d674cddbff","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DerbyDictionary.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/315cc2d1555925da6f62b808976792676ec2bcea/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DerbyDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/315cc2d1555925da6f62b808976792676ec2bcea/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DerbyDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DerbyDictionary.java?ref=315cc2d1555925da6f62b808976792676ec2bcea","patch":"@@ -46,9 +46,11 @@ public DerbyDictionary() {\n         stringLengthFunction = \"LENGTH({0})\";\n         substringFunctionName = \"SUBSTR\";\n \n-        maxConstraintNameLength = 18;\n+        // Derby name length restriction has been relaxed \n+        // http://www.archivum.info/derby-dev@db.apache.org/2004-12/msg00270.html\n+        maxConstraintNameLength = 128;\n         maxIndexNameLength = 128;\n-        maxColumnNameLength = 30;\n+        maxColumnNameLength = 128;\n         maxTableNameLength = 128;\n \n         useGetBytesForBlobs = true;"},{"sha":"6b6a103ecd7b4bd1a26b66a0e40a97045b40f38a","filename":"openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/localizer.properties","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/315cc2d1555925da6f62b808976792676ec2bcea/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/315cc2d1555925da6f62b808976792676ec2bcea/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/localizer.properties?ref=315cc2d1555925da6f62b808976792676ec2bcea","patch":"@@ -175,3 +175,14 @@ function-not-supported: The database dictionary in use (\"{0}\") \\\n batch-update-success-count: ExecuteBatch command returns update success count {0}\n connection-defaults: Initial connection autoCommit: {0}, holdability: {1}, \\\n     TransactionIsolation: {2}\n+long-table-name: Table name \"{0}\" is {1}-character long. The database allows \\\n+\tmaximum {2}-character for a table name. \n+long-column-name: Column name \"{0}\" is {1}-character long. The database allows \\\n+\tmaximum {2}-character for a column name. \n+long-index-name: Index name \"{0}\" is {1}-character long. The database allows \\\n+\tmaximum {2}-character for an index name. \n+long-constraint-name: Constraint name \"{0}\" is {1}-character long. The \\\n+\tdatabase allows maximum {2}-character for a constraint name. \n+long-seq-name: Sequence name \"{0}\" is {1}-character long. The database allows \\\n+\tmaximum {2}-character for a sequence name. \n+\t\n\\ No newline at end of file"}]}

