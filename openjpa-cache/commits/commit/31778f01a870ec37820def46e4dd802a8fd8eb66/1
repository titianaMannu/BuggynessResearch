{"sha":"31778f01a870ec37820def46e4dd802a8fd8eb66","node_id":"MDY6Q29tbWl0MjA2MzY0OjMxNzc4ZjAxYTg3MGVjMzc4MjBkZWY0NmU0ZGQ4MDJhOGZkOGViNjY=","commit":{"author":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2008-02-15T20:47:09Z"},"committer":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2008-02-15T20:47:09Z"},"message":"Enable PersisentProviderImpl subclass to override the configuration impl used by class transformer. The current OpenJPAConfigurationImpl does not recognize options defined in its sub-class and posted an invalid warning message.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@628168 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a0cda035e70e31e536001a56ce436b10e5b8f72e","url":"https://api.github.com/repos/apache/openjpa/git/trees/a0cda035e70e31e536001a56ce436b10e5b8f72e"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/31778f01a870ec37820def46e4dd802a8fd8eb66","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/31778f01a870ec37820def46e4dd802a8fd8eb66","html_url":"https://github.com/apache/openjpa/commit/31778f01a870ec37820def46e4dd802a8fd8eb66","comments_url":"https://api.github.com/repos/apache/openjpa/commits/31778f01a870ec37820def46e4dd802a8fd8eb66/comments","author":null,"committer":null,"parents":[{"sha":"699f06e06c7e07a37442bf7534aa02e3873d3f96","url":"https://api.github.com/repos/apache/openjpa/commits/699f06e06c7e07a37442bf7534aa02e3873d3f96","html_url":"https://github.com/apache/openjpa/commit/699f06e06c7e07a37442bf7534aa02e3873d3f96"}],"stats":{"total":16,"additions":12,"deletions":4},"files":[{"sha":"cf6e154223a882936252e1f1c33b3bd8d54fa06d","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProviderImpl.java","status":"modified","additions":12,"deletions":4,"changes":16,"blob_url":"https://github.com/apache/openjpa/blob/31778f01a870ec37820def46e4dd802a8fd8eb66/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProviderImpl.java","raw_url":"https://github.com/apache/openjpa/raw/31778f01a870ec37820def46e4dd802a8fd8eb66/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProviderImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProviderImpl.java?ref=31778f01a870ec37820def46e4dd802a8fd8eb66","patch":"@@ -124,7 +124,7 @@ public OpenJPAEntityManagerFactory createContainerEntityManagerFactory(\n                 (CLASS_TRANSFORMER_OPTIONS, pui.getProperties());\n             try {\n                 pui.addTransformer(new ClassTransformerImpl(cp, ctOpts,\n-                    pui.getNewTempClassLoader()));\n+                    pui.getNewTempClassLoader(), newConfigurationImpl()));\n             } catch (Exception e) {\n                 // fail gracefully\n                 transformerException = e;\n@@ -168,6 +168,16 @@ protected String getDefaultBrokerAlias() {\n         return BrokerValue.NON_FINALIZING_ALIAS;\n     }\n     \n+    /*\n+     * Return a new instance of Configuration subclass used by entity\n+     * enhancement in ClassTransformerImpl. If OpenJPAConfigurationImpl\n+     * instance is used, configuration options declared in configuration\n+     * sub-class will not be recognized and a warning is posted in the log.\n+     */\n+    protected OpenJPAConfiguration newConfigurationImpl() {\n+        return new OpenJPAConfigurationImpl();\n+    }\n+    \n     /**\n      * Java EE 5 class transformer.\n      */\n@@ -177,9 +187,7 @@ protected String getDefaultBrokerAlias() {\n         private final ClassFileTransformer _trans;\n \n         private ClassTransformerImpl(ConfigurationProvider cp, String props, \n-            final ClassLoader tmpLoader) {\n-            // create an independent conf for enhancement\n-            OpenJPAConfiguration conf = new OpenJPAConfigurationImpl();\n+            final ClassLoader tmpLoader, OpenJPAConfiguration conf) {\n             cp.setInto(conf);\n             // don't allow connections\n             conf.setConnectionUserName(null);"}]}

