{"sha":"31c47a6c04a3c7d024ccd1318ca06e7696c222e8","node_id":"MDY6Q29tbWl0MjA2MzY0OjMxYzQ3YTZjMDRhM2M3ZDAyNGNjZDEzMThjYTA2ZTc2OTZjMjIyZTg=","commit":{"author":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2008-04-15T15:12:11Z"},"committer":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2008-04-15T15:12:11Z"},"message":"OPENJPA-570 - Model after the AnnotationPersistenceMetaDataParser.parsePackageAnnotations(), an extra test is performed in parseClassAnnotations() method for the Named*Quer* annotations to see if the MODE_QUERY has been performed before by examining the meta.getSourceMode() before the actualNamed*Queries() method is invoked.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@648275 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"4d9a4ff6ac02f18221a8ceb90850161cfa77bc1d","url":"https://api.github.com/repos/apache/openjpa/git/trees/4d9a4ff6ac02f18221a8ceb90850161cfa77bc1d"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/31c47a6c04a3c7d024ccd1318ca06e7696c222e8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/31c47a6c04a3c7d024ccd1318ca06e7696c222e8","html_url":"https://github.com/apache/openjpa/commit/31c47a6c04a3c7d024ccd1318ca06e7696c222e8","comments_url":"https://api.github.com/repos/apache/openjpa/commits/31c47a6c04a3c7d024ccd1318ca06e7696c222e8/comments","author":null,"committer":null,"parents":[{"sha":"07cd1728a1148a37bb64216241d3bde4330ec5ba","url":"https://api.github.com/repos/apache/openjpa/commits/07cd1728a1148a37bb64216241d3bde4330ec5ba","html_url":"https://github.com/apache/openjpa/commit/07cd1728a1148a37bb64216241d3bde4330ec5ba"}],"stats":{"total":8,"additions":4,"deletions":4},"files":[{"sha":"f98f7ec4360a655a6bb1e3b9fc79bd64280a1f79","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/31c47a6c04a3c7d024ccd1318ca06e7696c222e8/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java","raw_url":"https://github.com/apache/openjpa/raw/31c47a6c04a3c7d024ccd1318ca06e7696c222e8/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java?ref=31c47a6c04a3c7d024ccd1318ca06e7696c222e8","patch":"@@ -534,20 +534,20 @@ private ClassMetaData parseClassAnnotations() {\n                         meta.setObjectIdType(((IdClass) anno).value(), true);\n                     break;\n                 case NATIVE_QUERIES:\n-                    if (isQueryMode())\n+                    if (isQueryMode() && (meta.getSourceMode() & MODE_QUERY) == 0)\n                         parseNamedNativeQueries(_cls,\n                             ((NamedNativeQueries) anno).value());\n                     break;\n                 case NATIVE_QUERY:\n-                    if (isQueryMode())\n+                    if (isQueryMode() && (meta.getSourceMode() & MODE_QUERY) == 0)\n                         parseNamedNativeQueries(_cls, (NamedNativeQuery) anno);\n                     break;\n                 case QUERIES:\n-                    if (isQueryMode())\n+                    if (isQueryMode() && (meta.getSourceMode() & MODE_QUERY) == 0)\n                         parseNamedQueries(_cls, ((NamedQueries) anno).value());\n                     break;\n                 case QUERY:\n-                    if (isQueryMode())\n+                    if (isQueryMode() && (meta.getSourceMode() & MODE_QUERY) == 0)\n                         parseNamedQueries(_cls, (NamedQuery) anno);\n                     break;\n                 case SEQ_GENERATOR:"}]}

