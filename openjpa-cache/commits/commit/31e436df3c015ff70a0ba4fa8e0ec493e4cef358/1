{"sha":"31e436df3c015ff70a0ba4fa8e0ec493e4cef358","node_id":"MDY6Q29tbWl0MjA2MzY0OjMxZTQzNmRmM2MwMTVmZjcwYTBiYTRmYThlMGVjNDkzZTRjZWYzNTg=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2007-10-12T15:36:08Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2007-10-12T15:36:08Z"},"message":"OPENJPA-401\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@584190 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"e4ab277ad916d0d91403d3068b4c2c0e8bead84b","url":"https://api.github.com/repos/apache/openjpa/git/trees/e4ab277ad916d0d91403d3068b4c2c0e8bead84b"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/31e436df3c015ff70a0ba4fa8e0ec493e4cef358","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/31e436df3c015ff70a0ba4fa8e0ec493e4cef358","html_url":"https://github.com/apache/openjpa/commit/31e436df3c015ff70a0ba4fa8e0ec493e4cef358","comments_url":"https://api.github.com/repos/apache/openjpa/commits/31e436df3c015ff70a0ba4fa8e0ec493e4cef358/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"027c4724491724f771a3c803d132ec0dfc90507d","url":"https://api.github.com/repos/apache/openjpa/commits/027c4724491724f771a3c803d132ec0dfc90507d","html_url":"https://github.com/apache/openjpa/commit/027c4724491724f771a3c803d132ec0dfc90507d"}],"stats":{"total":2,"additions":1,"deletions":1},"files":[{"sha":"0c9e9509229df8b0b72f7e2255b26aac319849db","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/ant/MappingToolTask.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/31e436df3c015ff70a0ba4fa8e0ec493e4cef358/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/ant/MappingToolTask.java","raw_url":"https://github.com/apache/openjpa/raw/31e436df3c015ff70a0ba4fa8e0ec493e4cef358/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/ant/MappingToolTask.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/ant/MappingToolTask.java?ref=31e436df3c015ff70a0ba4fa8e0ec493e4cef358","patch":"@@ -188,9 +188,9 @@ protected void executeOn(String[] files)\n         flags.sqlWriter = Files.getWriter(sqlFile, loader);\n \n         MultiLoaderClassResolver resolver = new MultiLoaderClassResolver();\n-        resolver.addClassLoader(loader);\n         resolver.addClassLoader((ClassLoader) AccessController.doPrivileged(\n             J2DoPrivHelper.getClassLoaderAction(MappingTool.class)));\n+        resolver.addClassLoader(loader);\n         JDBCConfiguration conf = (JDBCConfiguration) getConfiguration();\n         conf.setClassResolver(resolver);\n         "}]}

