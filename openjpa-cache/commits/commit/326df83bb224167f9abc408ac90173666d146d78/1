{"sha":"326df83bb224167f9abc408ac90173666d146d78","node_id":"MDY6Q29tbWl0MjA2MzY0OjMyNmRmODNiYjIyNDE2N2Y5YWJjNDA4YWM5MDE3MzY2NmQxNDZkNzg=","commit":{"author":{"name":"Kevin W. Sutter","email":"kwsutter@apache.org","date":"2007-02-05T16:18:23Z"},"committer":{"name":"Kevin W. Sutter","email":"kwsutter@apache.org","date":"2007-02-05T16:18:23Z"},"message":"Use single line commenting style (//) instead of the block commenting style (/*..*/).\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@503757 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"029faf4f84c1b1b735d8d2188317b98934208fc9","url":"https://api.github.com/repos/apache/openjpa/git/trees/029faf4f84c1b1b735d8d2188317b98934208fc9"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/326df83bb224167f9abc408ac90173666d146d78","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/326df83bb224167f9abc408ac90173666d146d78","html_url":"https://github.com/apache/openjpa/commit/326df83bb224167f9abc408ac90173666d146d78","comments_url":"https://api.github.com/repos/apache/openjpa/commits/326df83bb224167f9abc408ac90173666d146d78/comments","author":null,"committer":null,"parents":[{"sha":"8d288589c2a595c4df5dc2099ba567d040109e46","url":"https://api.github.com/repos/apache/openjpa/commits/8d288589c2a595c4df5dc2099ba567d040109e46","html_url":"https://github.com/apache/openjpa/commit/8d288589c2a595c4df5dc2099ba567d040109e46"}],"stats":{"total":10,"additions":4,"deletions":6},"files":[{"sha":"41c39e0ed6015916241e09a5c4b5e16e3d3ad958","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractBrokerFactory.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/326df83bb224167f9abc408ac90173666d146d78/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractBrokerFactory.java","raw_url":"https://github.com/apache/openjpa/raw/326df83bb224167f9abc408ac90173666d146d78/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractBrokerFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractBrokerFactory.java?ref=326df83bb224167f9abc408ac90173666d146d78","patch":"@@ -287,8 +287,7 @@ public void close() {\n             Broker broker;\n             for (Iterator itr = _brokers.iterator(); itr.hasNext();) {\n                 broker = (Broker) itr.next();\n-                /* Check for null here because _brokers is a weak reference\n-                collection */\n+                // Check for null because _brokers contains weak references\n                 if ((broker != null) && (!broker.isClosed()))\n                     broker.close();\n             }"},{"sha":"e080aa83ae7429183eb1f7250f889664a6293048","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/326df83bb224167f9abc408ac90173666d146d78/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/326df83bb224167f9abc408ac90173666d146d78/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java?ref=326df83bb224167f9abc408ac90173666d146d78","patch":"@@ -3094,9 +3094,8 @@ public void detachAll(OpCallbacks call) {\n     public void detachAll(OpCallbacks call, boolean flush) {\n         beginOperation(true);\n         try {\n-            /* If a flush is desired (based on input parm), then check if the\n-             * \"dirty\" flag is set before calling flush().\n-             */\n+            // If a flush is desired (based on input parm), then check if the\n+            //   \"dirty\" flag is set before calling flush().\n             if ((flush) && ((_flags & FLAG_FLUSH_REQUIRED) != 0))\n                 flush();\n             detachAllInternal(call);\n@@ -3486,7 +3485,7 @@ private Seq getSequence(ClassMetaData meta, FieldMetaData fmd) {\n             default:\n                 // use store manager for native sequence\n                 if (fmd == null) {\n-                    // this will return a sequence even for app id classes, \n+                    // this will return a sequence even for app id classes,\n                     // which is what we want for backwards-compatibility\n                     return _store.getDataStoreIdSequence(meta);\n                 }"}]}

