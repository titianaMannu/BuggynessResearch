{"sha":"371a31a41a78267170b4af8958578d291e074d5d","node_id":"MDY6Q29tbWl0MjA2MzY0OjM3MWEzMWE0MWE3ODI2NzE3MGI0YWY4OTU4NTc4ZDI5MWUwNzRkNWQ=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-03-29T18:09:58Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-03-29T18:09:58Z"},"message":"OPENJPA-1597 cleanup code comments. merged in from 2.0.x.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@928853 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"18e4a8b1c6d52f66fe93ff1ffa87c149091186a1","url":"https://api.github.com/repos/apache/openjpa/git/trees/18e4a8b1c6d52f66fe93ff1ffa87c149091186a1"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/371a31a41a78267170b4af8958578d291e074d5d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/371a31a41a78267170b4af8958578d291e074d5d","html_url":"https://github.com/apache/openjpa/commit/371a31a41a78267170b4af8958578d291e074d5d","comments_url":"https://api.github.com/repos/apache/openjpa/commits/371a31a41a78267170b4af8958578d291e074d5d/comments","author":null,"committer":null,"parents":[{"sha":"3df86b0e95cf008678785f5dd8671ab1154dad1c","url":"https://api.github.com/repos/apache/openjpa/commits/3df86b0e95cf008678785f5dd8671ab1154dad1c","html_url":"https://github.com/apache/openjpa/commit/3df86b0e95cf008678785f5dd8671ab1154dad1c"}],"stats":{"total":17,"additions":13,"deletions":4},"files":[{"sha":"9f64c84626ecc0ca4e91c428a8616cde6145e627","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/Proxies.java","status":"modified","additions":13,"deletions":4,"changes":17,"blob_url":"https://github.com/apache/openjpa/blob/371a31a41a78267170b4af8958578d291e074d5d/openjpa-kernel/src/main/java/org/apache/openjpa/util/Proxies.java","raw_url":"https://github.com/apache/openjpa/raw/371a31a41a78267170b4af8958578d291e074d5d/openjpa-kernel/src/main/java/org/apache/openjpa/util/Proxies.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/Proxies.java?ref=371a31a41a78267170b4af8958578d291e074d5d","patch":"@@ -96,9 +96,18 @@ public static Object writeReplace(Proxy proxy, boolean detachable) {\n          *   1) Runtime created proxy (!detachable), then unproxy\n          *   2) No Proxy, then return as-is\n          *   3) No StateManager (DetachedStateField==false), then return as-is\n-         *   4) If detached, then return as-is <--- ERROR as EM.clear() marks\n-         *      entity as detached but doesn't remove any $proxy usage\n-         *   5) Else, unproxy\n+         *   Get the new IgnoreDetachedStateFieldForProxySerialization\n+         *      Compatibility flag from either the metadata/configuration if\n+         *      this is a normal StateManager, otherwise use the new flag\n+         *      added to the DetachedStateManager\n+         *   4) If new 2.0 behavior\n+         *      4a) If ClassMetaData exists and DetachedStateField == TRUE\n+         *          then do not remove the proxy and return as-is\n+         *      4b) Else, using DetachedStateField of transient(default) or\n+         *          false, so unproxy\n+         *   5) If 1.0 app or requested old 1.0 behavior\n+         *      5a) If detached, then do not unproxy and return as-is\n+         *      5b) Else, unproxy\n          * \n          *  if (detachable && (proxy == null || proxy.getOwner() == null \n          *      || proxy.getOwner().isDetached()))\n@@ -128,7 +137,7 @@ public static Object writeReplace(Proxy proxy, boolean detachable) {\n                 } else if (sm.getContext() != null && sm.getContext().getConfiguration() != null) {\n                     compat = sm.getContext().getConfiguration().getCompatibilityInstance();\n                 } else {\n-                    // no-op - using a StateManager, but no Compatibilty settings available\n+                    // no-op - using a StateManager, but no Compatibility settings available\n                 }\n                 if (compat != null) {\n                     // new 2.0 behavior of using DetachedStateField to determine unproxy during serialization"}]}

