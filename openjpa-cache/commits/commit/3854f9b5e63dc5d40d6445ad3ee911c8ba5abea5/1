{"sha":"3854f9b5e63dc5d40d6445ad3ee911c8ba5abea5","node_id":"MDY6Q29tbWl0MjA2MzY0OjM4NTRmOWI1ZTYzZGM1ZDQwZDY0NDVhZDNlZTkxMWM4YmE1YWJlYTU=","commit":{"author":{"name":"Fay Wang","email":"faywang@apache.org","date":"2010-02-09T00:17:50Z"},"committer":{"name":"Fay Wang","email":"faywang@apache.org","date":"2010-02-09T00:17:50Z"},"message":"OPENJPA-931: support nested embeddedId in IdClass during remove\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@907853 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"1a3f6f7c88d5e3d8d3cf4a43a91ae9c3fd74ea05","url":"https://api.github.com/repos/apache/openjpa/git/trees/1a3f6f7c88d5e3d8d3cf4a43a91ae9c3fd74ea05"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/3854f9b5e63dc5d40d6445ad3ee911c8ba5abea5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/3854f9b5e63dc5d40d6445ad3ee911c8ba5abea5","html_url":"https://github.com/apache/openjpa/commit/3854f9b5e63dc5d40d6445ad3ee911c8ba5abea5","comments_url":"https://api.github.com/repos/apache/openjpa/commits/3854f9b5e63dc5d40d6445ad3ee911c8ba5abea5/comments","author":null,"committer":null,"parents":[{"sha":"69c5eb11ff8545473e4d65102313e1a562f65cf8","url":"https://api.github.com/repos/apache/openjpa/commits/69c5eb11ff8545473e4d65102313e1a562f65cf8","html_url":"https://github.com/apache/openjpa/commit/69c5eb11ff8545473e4d65102313e1a562f65cf8"}],"stats":{"total":12,"additions":10,"deletions":2},"files":[{"sha":"7a536ca58f47b61763e4eec8d1e172cc32e099c8","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationFieldStrategy.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/3854f9b5e63dc5d40d6445ad3ee911c8ba5abea5/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationFieldStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/3854f9b5e63dc5d40d6445ad3ee911c8ba5abea5/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationFieldStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationFieldStrategy.java?ref=3854f9b5e63dc5d40d6445ad3ee911c8ba5abea5","patch":"@@ -1012,7 +1012,9 @@ public Object getJoinValue(Object fieldVal, Column col, JDBCStore store) {\n                 getPrimaryKeyIndex()];\n         } else if (relmapping.getObjectIdType() == ObjectId.class && \n             relmapping.getPrimaryKeyFieldMappings()[0].getValueMapping().isEmbedded()) {\n-            return j.getJoinValue(savedFieldVal, col, store);\n+            if (fieldVal == null)\n+                return j.getJoinValue(savedFieldVal, col, store);\n+            return j.getJoinValue(fieldVal, col, store);\n         }\n         return j.getJoinValue(fieldVal, col, store);\n     }"},{"sha":"25cedc71717d58642fbe0c47d198c8910e242bf4","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/enhance/identity/TestMappedById.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/3854f9b5e63dc5d40d6445ad3ee911c8ba5abea5/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/enhance/identity/TestMappedById.java","raw_url":"https://github.com/apache/openjpa/raw/3854f9b5e63dc5d40d6445ad3ee911c8ba5abea5/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/enhance/identity/TestMappedById.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/enhance/identity/TestMappedById.java?ref=3854f9b5e63dc5d40d6445ad3ee911c8ba5abea5","patch":"@@ -187,7 +187,7 @@ public void testEnumIdClass() {\n         em.close();\n     }\n     \n-    public void testEmbeddedIdContainedInIdClass() {\n+    public void testEmbeddedIdNestedInIdClass() {\n         EntityManager em = emf.createEntityManager();\n         EmployeeId5 eId1 = new EmployeeId5(\"Java\", \"Duke\");\n         Employee5 employee1 = new Employee5(eId1);\n@@ -204,6 +204,12 @@ public void testEmbeddedIdContainedInIdClass() {\n         DependentId5 depId1 = new DependentId5(\"1\", eId1);\n         Dependent5 newDep = em.find(Dependent5.class, depId1);\n         assertNotNull(newDep);\n+        em.getTransaction().begin();\n+        em.remove(newDep);\n+        em.getTransaction().commit();\n+        newDep = em.find(Dependent5.class, depId1);\n+        assertNull(newDep);        \n+        em.close();\n     }\n     \n     public void testCountDistinctMultiCols() {"}]}

