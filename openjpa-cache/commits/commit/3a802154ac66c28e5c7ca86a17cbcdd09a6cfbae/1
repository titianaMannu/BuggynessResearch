{"sha":"3a802154ac66c28e5c7ca86a17cbcdd09a6cfbae","node_id":"MDY6Q29tbWl0MjA2MzY0OjNhODAyMTU0YWM2NmMyOGU1YzdjYTg2YTE3Y2JjZGQwOWE2Y2ZiYWU=","commit":{"author":{"name":"Kevin W. Sutter","email":"kwsutter@apache.org","date":"2007-10-01T21:42:40Z"},"committer":{"name":"Kevin W. Sutter","email":"kwsutter@apache.org","date":"2007-10-01T21:42:40Z"},"message":"OPENJPA-387.  Committing the latest patch from Daniel (with slight modifications by me).\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/1.0.x@581080 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"83cda50e030d87a3fd28529f4ce31c8d2708f657","url":"https://api.github.com/repos/apache/openjpa/git/trees/83cda50e030d87a3fd28529f4ce31c8d2708f657"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/3a802154ac66c28e5c7ca86a17cbcdd09a6cfbae","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/3a802154ac66c28e5c7ca86a17cbcdd09a6cfbae","html_url":"https://github.com/apache/openjpa/commit/3a802154ac66c28e5c7ca86a17cbcdd09a6cfbae","comments_url":"https://api.github.com/repos/apache/openjpa/commits/3a802154ac66c28e5c7ca86a17cbcdd09a6cfbae/comments","author":null,"committer":null,"parents":[{"sha":"b045de88c007da74d82bab160683f2a8db18db7b","url":"https://api.github.com/repos/apache/openjpa/commits/b045de88c007da74d82bab160683f2a8db18db7b","html_url":"https://github.com/apache/openjpa/commit/b045de88c007da74d82bab160683f2a8db18db7b"}],"stats":{"total":55,"additions":32,"deletions":23},"files":[{"sha":"5e17ef96b0aa9f5dc21b639544a4d763552281ae","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configurations.java","status":"modified","additions":32,"deletions":23,"changes":55,"blob_url":"https://github.com/apache/openjpa/blob/3a802154ac66c28e5c7ca86a17cbcdd09a6cfbae/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configurations.java","raw_url":"https://github.com/apache/openjpa/raw/3a802154ac66c28e5c7ca86a17cbcdd09a6cfbae/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configurations.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configurations.java?ref=3a802154ac66c28e5c7ca86a17cbcdd09a6cfbae","patch":"@@ -181,30 +181,39 @@ static Object newInstance(String clsName, Value val, Configuration conf,\n \n         Class cls = null; \n \n-        // can't have a null reference in the map, so use symbolic \n-        // constant as key\n-        Object key = loader == null ? NULL_LOADER : loader;\n-        Map loaderCache = (Map) _loaders.get(key);\n-        if (loaderCache == null) { // We don't have a cache for this loader.\n-            loaderCache = new ConcurrentHashMap();\n-            _loaders.put(key, loaderCache);\n-        } else {  // We have a cache for this loader.\n-            cls = (Class) loaderCache.get(clsName);\n-        }\n+        while (cls == null) {\n+            // can't have a null reference in the map, so use symbolic\n+            // constant as key\n+            Object key = loader == null ? NULL_LOADER : loader;\n+            Map loaderCache = (Map) _loaders.get(key);\n+            if (loaderCache == null) { // We don't have a cache for this loader.\n+                loaderCache = new ConcurrentHashMap();\n+                _loaders.put(key, loaderCache);\n+            } else {  // We have a cache for this loader.\n+                cls = (Class) loaderCache.get(clsName);\n+            }\n \n-        if (cls == null) { // we haven't cached this.\n-            try {\n-                cls = Strings.toClass(clsName, findDerivedLoader(conf, loader));\n-                loaderCache.put(clsName, cls);\n-            } catch (RuntimeException re) {\n-                if (val != null)\n-                    re = getCreateException(clsName, val, re);\n-                if (fatal)\n-                    throw re;\n-                Log log = (conf == null) ? null : conf.getConfigurationLog();\n-                if (log != null && log.isErrorEnabled())\n-                    log.error(_loc.get(\"plugin-creation-exception\", val), re);\n-                return null;\n+            if (cls == null) {\n+                try {\n+                    cls = Strings.toClass(clsName, findDerivedLoader(conf,\n+                            loader));\n+                    loaderCache.put(clsName, cls);\n+                } catch (RuntimeException re) {\n+                    if (loader != null)  // Try one more time with loader=null\n+                        loader = null;\n+                    else {\n+                        if (val != null)\n+                            re = getCreateException(clsName, val, re);\n+                        if (fatal)\n+                            throw re;\n+                        Log log = (conf == null) ? null : conf\n+                                .getConfigurationLog();\n+                        if (log != null && log.isErrorEnabled())\n+                            log.error(_loc\n+                                    .get(\"plugin-creation-exception\", val), re);\n+                        return null;\n+                    }\n+                }\n             }\n         }\n "}]}

