{"sha":"3b91451d1669c3b8025730bcacc0e4f0d385eb61","node_id":"MDY6Q29tbWl0MjA2MzY0OjNiOTE0NTFkMTY2OWMzYjgwMjU3MzBiY2FjYzBlNGYwZDM4NWViNjE=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2008-08-01T16:55:22Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2008-08-01T16:55:22Z"},"message":"OPENJPA-207: Add new test case for multi-level derived id\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@681746 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"6bee1575edafdbfc06404fd1abbe9a1a84352da3","url":"https://api.github.com/repos/apache/openjpa/git/trees/6bee1575edafdbfc06404fd1abbe9a1a84352da3"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/3b91451d1669c3b8025730bcacc0e4f0d385eb61","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/3b91451d1669c3b8025730bcacc0e4f0d385eb61","html_url":"https://github.com/apache/openjpa/commit/3b91451d1669c3b8025730bcacc0e4f0d385eb61","comments_url":"https://api.github.com/repos/apache/openjpa/commits/3b91451d1669c3b8025730bcacc0e4f0d385eb61/comments","author":null,"committer":null,"parents":[{"sha":"2d7faf24b1827f2465ff2f818d45678dd75ca7bd","url":"https://api.github.com/repos/apache/openjpa/commits/2d7faf24b1827f2465ff2f818d45678dd75ca7bd","html_url":"https://github.com/apache/openjpa/commit/2d7faf24b1827f2465ff2f818d45678dd75ca7bd"}],"stats":{"total":55,"additions":42,"deletions":13},"files":[{"sha":"2dc3c57c5f076eed61263597d3c32601b3be8bcb","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/enhance/identity/Book.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/3b91451d1669c3b8025730bcacc0e4f0d385eb61/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/enhance/identity/Book.java","raw_url":"https://github.com/apache/openjpa/raw/3b91451d1669c3b8025730bcacc0e4f0d385eb61/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/enhance/identity/Book.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/enhance/identity/Book.java?ref=3b91451d1669c3b8025730bcacc0e4f0d385eb61","patch":"@@ -55,7 +55,7 @@\n     \n     @Id\n     @Column(nullable = false)\n-    @ManyToOne (cascade = CascadeType.ALL)\n+    @ManyToOne\n     private Library library;\n     \n     private String author;"},{"sha":"7e61d667c70623065fa6c3955c558e4ce3bf0851","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/enhance/identity/Page.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/3b91451d1669c3b8025730bcacc0e4f0d385eb61/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/enhance/identity/Page.java","raw_url":"https://github.com/apache/openjpa/raw/3b91451d1669c3b8025730bcacc0e4f0d385eb61/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/enhance/identity/Page.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/enhance/identity/Page.java?ref=3b91451d1669c3b8025730bcacc0e4f0d385eb61","patch":"@@ -51,7 +51,7 @@\n \n     @Id\n     @Column(nullable = false)\n-    @ManyToOne (cascade = CascadeType.ALL)\n+    @ManyToOne\n     @JoinColumns({\n         @JoinColumn(name=\"BOOK_LIBRARY_LIBRARY_NAME\", referencedColumnName=\"LIBRARY_LIBRARY_NAME\"),\n         @JoinColumn(name=\"BOOK_BOOK_NAME\", referencedColumnName=\"BOOK_NAME\")    "},{"sha":"4b5c0bfde09b5f2373401d59c3afac727108d5dc","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/enhance/identity/TestMultipleLevelDerivedIdentity.java","status":"modified","additions":40,"deletions":11,"changes":51,"blob_url":"https://github.com/apache/openjpa/blob/3b91451d1669c3b8025730bcacc0e4f0d385eb61/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/enhance/identity/TestMultipleLevelDerivedIdentity.java","raw_url":"https://github.com/apache/openjpa/raw/3b91451d1669c3b8025730bcacc0e4f0d385eb61/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/enhance/identity/TestMultipleLevelDerivedIdentity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/enhance/identity/TestMultipleLevelDerivedIdentity.java?ref=3b91451d1669c3b8025730bcacc0e4f0d385eb61","patch":"@@ -25,19 +25,20 @@\n import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n \n /**\n- * Tests entities that use compound keys that includes entity relationship at\n+ * Tests entities with compound keys that include entity relationship at\n  * more than one level.\n  * \n- * Page has a compound identity to Book which itself uses a compound identity to\n- * Library.\n+ * Page has a compound identity to Book which in turn uses a compound identity \n+ * to Library.\n  * \n- * Test case and domain classes were originally part of the reported issue <A\n- * href=\"https://issues.apache.org/jira/browse/OPENJPA-207\">OPENJPA-207</A>\n+ * Test case and domain classes were originally part of the reported issue \n+ * <A href=\"https://issues.apache.org/jira/browse/OPENJPA-207\">OPENJPA-207</A>\n  * \n  * @author Jeffrey Blattman\n  * @author Pinaki Poddar\n  * \n  */\n+@SuppressWarnings(\"unchecked\")\n public class TestMultipleLevelDerivedIdentity extends SingleEMFTestCase {\n \tprivate static String LIBRARY_NAME = \"LIB\";\n \tprivate static String BOOK_NAME    = \"foo\";\n@@ -49,10 +50,6 @@ public void setUp() throws Exception {\n \t\tcreate();\n \t}\n \t\n-//\tpublic void tearDown() throws Exception {\n-//\t\t\n-//\t}\n-\t\n \tpublic void testPersist() {\n \t\tcreate();\n \t}\n@@ -82,7 +79,6 @@ public void testQueryIntermediateLevel() {\n \t\t\tassertEquals(page, page.getBook().getPage(page.getNumber()));\n \t\t}\n \t}\n-\n \t\n \tpublic void testQueryLeafLevel() {\n \t\tEntityManager em = emf.createEntityManager();\n@@ -141,7 +137,7 @@ public void testUpdate() {\n \t\tem.getTransaction().commit();\n \t}\n \t\n-\tpublic void testDelete() {\n+\tpublic void testDeleteRoot() {\n \t\tEntityManager em = emf.createEntityManager();\n \t\tem.getTransaction().begin();\n \t\tLibrary lib = em.find(Library.class, LIBRARY_NAME);\n@@ -152,6 +148,39 @@ public void testDelete() {\n \t    assertEquals(0, count(Book.class));\n \t    assertEquals(0, count(Page.class));\n \t}\n+\t\n+\tpublic void testDeleteLeafObtainedByQuery() {\n+\t\tEntityManager em = emf.createEntityManager();\n+\t\tem.getTransaction().begin();\n+\t\tPage page = (Page)em.createQuery(\"SELECT p FROM Page p WHERE p.number=2\")\n+\t\t\t.getSingleResult();\n+\t\tassertNotNull(page);\n+\t\tem.remove(page);\n+\t\tem.getTransaction().commit();\n+\t\t\n+\t    assertEquals(1, count(Library.class));\n+\t    assertEquals(1, count(Book.class));\n+\t    assertEquals(NUM_PAGES-1, count(Page.class));\n+\t}\n+\t\n+\tpublic void testDeleteLeafObtainedByFind() {\n+\t\tEntityManager em = emf.createEntityManager();\n+\t\tem.getTransaction().begin();\n+\t\tBookId bookId = new BookId();\n+\t\tbookId.setLibrary(LIBRARY_NAME);\n+\t\tbookId.setName(BOOK_NAME);\n+\t\tPageId pageId = new PageId();\n+\t\tpageId.setBook(bookId);\n+\t\tpageId.setNumber(2);\n+\t\tPage page = em.find(Page.class, pageId);\n+\t\tassertNotNull(page);\n+\t\tem.remove(page);\n+\t\tem.getTransaction().commit();\n+\t\t\n+\t    assertEquals(1, count(Library.class));\n+\t    assertEquals(1, count(Book.class));\n+\t    assertEquals(NUM_PAGES-1, count(Page.class));\n+\t}\n \n \t\n \t/**"}]}

