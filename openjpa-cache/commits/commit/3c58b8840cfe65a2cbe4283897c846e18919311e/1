{"sha":"3c58b8840cfe65a2cbe4283897c846e18919311e","node_id":"MDY6Q29tbWl0MjA2MzY0OjNjNThiODg0MGNmZTY1YTJjYmU0MjgzODk3Yzg0NmUxODkxOTMxMWU=","commit":{"author":{"name":"Kevin W. Sutter","email":"kwsutter@apache.org","date":"2007-02-01T22:53:20Z"},"committer":{"name":"Kevin W. Sutter","email":"kwsutter@apache.org","date":"2007-02-01T22:53:20Z"},"message":"Changes for OPENJPA-115.  Removed the explicit lock/unlock invocations when obtaining an EM (broker).  Changed\n_brokers to use ConcurrentReferenceHashSet (with weak references).  And, due to the weak references (probable\ncause), I had to check for nulls when iterating through the _brokers during the close processing.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@502392 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"957ddeba0cffd10c72e7f54d75bf3ea67666e23f","url":"https://api.github.com/repos/apache/openjpa/git/trees/957ddeba0cffd10c72e7f54d75bf3ea67666e23f"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/3c58b8840cfe65a2cbe4283897c846e18919311e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/3c58b8840cfe65a2cbe4283897c846e18919311e","html_url":"https://github.com/apache/openjpa/commit/3c58b8840cfe65a2cbe4283897c846e18919311e","comments_url":"https://api.github.com/repos/apache/openjpa/commits/3c58b8840cfe65a2cbe4283897c846e18919311e/comments","author":null,"committer":null,"parents":[{"sha":"0b60936d33c10ed2e8a95403bbb2bd43a3d312a8","url":"https://api.github.com/repos/apache/openjpa/commits/0b60936d33c10ed2e8a95403bbb2bd43a3d312a8","html_url":"https://github.com/apache/openjpa/commit/0b60936d33c10ed2e8a95403bbb2bd43a3d312a8"}],"stats":{"total":13,"additions":6,"deletions":7},"files":[{"sha":"5f1c5b6fb8e66d4f4219179838144849acf411d9","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractBrokerFactory.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/apache/openjpa/blob/3c58b8840cfe65a2cbe4283897c846e18919311e/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractBrokerFactory.java","raw_url":"https://github.com/apache/openjpa/raw/3c58b8840cfe65a2cbe4283897c846e18919311e/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractBrokerFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractBrokerFactory.java?ref=3c58b8840cfe65a2cbe4283897c846e18919311e","patch":"@@ -37,6 +37,7 @@\n import org.apache.openjpa.lib.log.Log;\n import org.apache.openjpa.lib.util.Localizer;\n import org.apache.openjpa.lib.util.ReferenceHashSet;\n+import org.apache.openjpa.lib.util.concurrent.ConcurrentReferenceHashSet;\n import org.apache.openjpa.lib.util.concurrent.ReentrantLock;\n import org.apache.openjpa.meta.MetaDataRepository;\n import org.apache.openjpa.util.GeneralException;\n@@ -73,8 +74,8 @@\n     private transient Map _transactional = new HashMap();\n \n     // weak-ref tracking of open brokers\n-    private transient Collection _brokers = new ReferenceHashSet\n-        (ReferenceHashSet.WEAK);\n+    private transient Collection _brokers = new ConcurrentReferenceHashSet\n+        (ConcurrentReferenceHashSet.WEAK);\n \n     // cache the class names loaded from the persistent classes property so\n     // that we can re-load them for each new broker\n@@ -141,7 +142,6 @@ public Broker newBroker(String user, String pass, boolean managed,\n \n     public Broker newBroker(String user, String pass, boolean managed,\n         int connRetainMode, boolean findExisting) {\n-        lock();\n         try {\n             assertOpen();\n             makeReadOnly();\n@@ -181,8 +181,6 @@ public Broker newBroker(String user, String pass, boolean managed,\n             throw ke;\n         } catch (RuntimeException re) {\n             throw new GeneralException(re);\n-        } finally {\n-            unlock();\n         }\n     }\n \n@@ -289,7 +287,7 @@ public void close() {\n             Broker broker;\n             for (Iterator itr = _brokers.iterator(); itr.hasNext();) {\n                 broker = (Broker) itr.next();\n-                if (!broker.isClosed())\n+                if ((broker != null) && (!broker.isClosed()))\n                     broker.close();\n             }\n \n@@ -363,7 +361,8 @@ protected Object readResolve()\n \n         // reset these transient fields to empty values\n         _transactional = new HashMap();\n-        _brokers = new ReferenceHashSet(ReferenceHashSet.WEAK);\n+        _brokers = new ConcurrentReferenceHashSet(\n+                ConcurrentReferenceHashSet.WEAK);\n \n         makeReadOnly();\n         return this;"}]}

