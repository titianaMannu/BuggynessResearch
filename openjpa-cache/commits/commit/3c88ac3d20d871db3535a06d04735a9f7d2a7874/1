{"sha":"3c88ac3d20d871db3535a06d04735a9f7d2a7874","node_id":"MDY6Q29tbWl0MjA2MzY0OjNjODhhYzNkMjBkODcxZGIzNTM1YTA2ZDA0NzM1YTlmN2QyYTc4NzQ=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2009-05-28T18:31:12Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2009-05-28T18:31:12Z"},"message":"OPENJPA-1054 committing patch from Rick Curtis and Fay Wang. Testcase has been updated to use jMock instead of creating its own mock objects\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@779715 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"91b0032704ddc0553331596e1c0a589440befffd","url":"https://api.github.com/repos/apache/openjpa/git/trees/91b0032704ddc0553331596e1c0a589440befffd"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/3c88ac3d20d871db3535a06d04735a9f7d2a7874","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/3c88ac3d20d871db3535a06d04735a9f7d2a7874","html_url":"https://github.com/apache/openjpa/commit/3c88ac3d20d871db3535a06d04735a9f7d2a7874","comments_url":"https://api.github.com/repos/apache/openjpa/commits/3c88ac3d20d871db3535a06d04735a9f7d2a7874/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"b2a8732a8b6b872b803e4fab187aedc3f8d319bb","url":"https://api.github.com/repos/apache/openjpa/commits/b2a8732a8b6b872b803e4fab187aedc3f8d319bb","html_url":"https://github.com/apache/openjpa/commit/b2a8732a8b6b872b803e4fab187aedc3f8d319bb"}],"stats":{"total":113,"additions":111,"deletions":2},"files":[{"sha":"dddd5526b7d544be94804128c1b0ffffbbe4bb84","filename":"openjpa-jdbc/pom.xml","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/3c88ac3d20d871db3535a06d04735a9f7d2a7874/openjpa-jdbc/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/3c88ac3d20d871db3535a06d04735a9f7d2a7874/openjpa-jdbc/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/pom.xml?ref=3c88ac3d20d871db3535a06d04735a9f7d2a7874","patch":"@@ -64,5 +64,15 @@\n             <artifactId>ant</artifactId>\n             <scope>provided</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>org.jmock</groupId>\n+            <artifactId>jmock</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.jmock</groupId>\n+            <artifactId>jmock-junit3</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n     </dependencies>\n </project>"},{"sha":"6c3423cc6555bac78bf4dde76be83ee55efbad3a","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/3c88ac3d20d871db3535a06d04735a9f7d2a7874/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/3c88ac3d20d871db3535a06d04735a9f7d2a7874/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java?ref=3c88ac3d20d871db3535a06d04735a9f7d2a7874","patch":"@@ -3273,6 +3273,10 @@ private String addCharsToEnd(String name,\n         buf.append(\")\");\n         return new String[]{ buf.toString() };\n     }\n+    \n+    public int getBatchFetchSize(int batchFetchSize) {\n+        return batchFetchSize;\n+    }\n \n     protected StringBuffer comment(StringBuffer buf, String comment) {\n         return buf.append(\"-- \").append(comment);"},{"sha":"cd4429a6ebd42176615a8007847806d55cfdf828","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/MySQLDictionary.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/3c88ac3d20d871db3535a06d04735a9f7d2a7874/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/MySQLDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/3c88ac3d20d871db3535a06d04735a9f7d2a7874/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/MySQLDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/MySQLDictionary.java?ref=3c88ac3d20d871db3535a06d04735a9f7d2a7874","patch":"@@ -29,7 +29,6 @@\n import org.apache.openjpa.jdbc.kernel.JDBCStore;\n import org.apache.openjpa.jdbc.kernel.exps.FilterValue;\n import org.apache.openjpa.jdbc.schema.Column;\n-import org.apache.openjpa.jdbc.schema.ForeignKey;\n import org.apache.openjpa.jdbc.schema.Index;\n import org.apache.openjpa.jdbc.schema.PrimaryKey;\n import org.apache.openjpa.jdbc.schema.Table;\n@@ -311,4 +310,9 @@ private void appendXmlValue(SQLBuffer buf, FilterValue val) {\n         val.appendTo(buf);\n         buf.append(\"')\");\n     }\n+    \n+    public int getBatchFetchSize(int batchFetchSize) {\n+        return Integer.MIN_VALUE;\n+    }\n+    \n }"},{"sha":"13d5bf3db3915b1804d5a8227e916e1534283036","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SQLBuffer.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/3c88ac3d20d871db3535a06d04735a9f7d2a7874/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SQLBuffer.java","raw_url":"https://github.com/apache/openjpa/raw/3c88ac3d20d871db3535a06d04735a9f7d2a7874/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SQLBuffer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SQLBuffer.java?ref=3c88ac3d20d871db3535a06d04735a9f7d2a7874","patch":"@@ -534,7 +534,8 @@ else if (rsType == -1)\n             setParameters(stmnt);\n             if (fetch != null) {\n                 if (fetch.getFetchBatchSize() > 0)\n-                    stmnt.setFetchSize(fetch.getFetchBatchSize());\n+                    stmnt.setFetchSize(\n+                        _dict.getBatchFetchSize(fetch.getFetchBatchSize()));\n                 if (rsType != ResultSet.TYPE_FORWARD_ONLY\n                     && fetch.getFetchDirection() != ResultSet.FETCH_FORWARD)\n                     stmnt.setFetchDirection(fetch.getFetchDirection());"},{"sha":"dc1721e451f846123a7e8b100d3f8954eadfe6fa","filename":"openjpa-jdbc/src/test/java/org/apache/openjpa/jdbc/sql/TestMySQLDictionary.java","status":"added","additions":70,"deletions":0,"changes":70,"blob_url":"https://github.com/apache/openjpa/blob/3c88ac3d20d871db3535a06d04735a9f7d2a7874/openjpa-jdbc/src/test/java/org/apache/openjpa/jdbc/sql/TestMySQLDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/3c88ac3d20d871db3535a06d04735a9f7d2a7874/openjpa-jdbc/src/test/java/org/apache/openjpa/jdbc/sql/TestMySQLDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/test/java/org/apache/openjpa/jdbc/sql/TestMySQLDictionary.java?ref=3c88ac3d20d871db3535a06d04735a9f7d2a7874","patch":"@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.jdbc.sql;\n+\n+import java.sql.Connection;\n+import java.sql.PreparedStatement;\n+import java.sql.ResultSet;\n+\n+import org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration;\n+import org.apache.openjpa.jdbc.kernel.JDBCFetchConfigurationImpl;\n+import org.jmock.Expectations;\n+import org.jmock.integration.junit3.MockObjectTestCase;\n+\n+public class TestMySQLDictionary extends MockObjectTestCase {\n+    public void testDBDictionaryGetBatchFetchSize() throws Exception {\n+        DBDictionary db = new MySQLDictionary();\n+        assertEquals(Integer.MIN_VALUE, db.getBatchFetchSize(1));\n+    }\n+\n+    /**\n+     * <P>\n+     * Ensure thaqt a connection obtained from a MySQLDictionary sets the\n+     * fetchBatchSize to Integer.MIN_VALUE\n+     * </P>\n+     * \n+     * @throws Exception\n+     *             If any of the expectations are not met or any unexpected\n+     *             method calls are made\n+     */\n+    public void testPreparedStatementGetFetchBatchSize() throws Exception {\n+        DBDictionary db = new MySQLDictionary();\n+        SQLBuffer sql = new SQLBuffer(db);\n+        \n+        final PreparedStatement mockStatement = mock(PreparedStatement.class);\n+        final Connection mockConnection = mock(Connection.class);\n+\n+        // Expected method calls on the mock objects above. If any of these are \n+        // do not occur, or if any other methods are invoked on the mock objects\n+        // an exception will be thrown and the test will fail. \n+        checking(new Expectations() {\n+            {\n+                oneOf(mockConnection).prepareStatement(with(any(String.class)));\n+                will(returnValue(mockStatement));\n+                oneOf(mockStatement).setFetchSize(Integer.MIN_VALUE);\n+            }\n+        });\n+        \n+        JDBCFetchConfiguration fetch = new JDBCFetchConfigurationImpl();\n+        fetch.setResultSetType(ResultSet.TYPE_FORWARD_ONLY);\n+        fetch.setFetchBatchSize(1);\n+\n+        sql.prepareStatement(mockConnection, fetch, -1, -1);\n+    }\n+}"},{"sha":"b5413a8052ddbc50d2884bfaba36833ef4207d0f","filename":"openjpa-project/src/doc/manual/supported_databases.xml","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/3c88ac3d20d871db3535a06d04735a9f7d2a7874/openjpa-project/src/doc/manual/supported_databases.xml","raw_url":"https://github.com/apache/openjpa/raw/3c88ac3d20d871db3535a06d04735a9f7d2a7874/openjpa-project/src/doc/manual/supported_databases.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/supported_databases.xml?ref=3c88ac3d20d871db3535a06d04735a9f7d2a7874","patch":"@@ -819,6 +819,16 @@ being able to interrogate the database for foreign keys. Version 3.0.14 (or\n higher) of the MySQL driver is required in order to get around this bug.\n                     </para>\n                 </listitem>\n+                <listitem>\n+                    <para>\n+When using large result sets with MySQL there are a number of documented limitations.\n+Please read the section titled \"ResultSet\" in the \"MySQL JDBC API Implementation Notes\".\n+The net of these limitations is that you will have to read all of the rows of a\n+result set (or close the connection) before you can issue any other queries on\n+the connection, or an exception will be thrown. Setting openjpa.FetchBatchSize \n+to any value greater than zero will enable streaming result sets. \n+                    </para>\n+                </listitem>                \n             </itemizedlist>\n         </section>\n     </section>"},{"sha":"7530053dcc71013cfd19c9801169e71c58a3e734","filename":"pom.xml","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/3c88ac3d20d871db3535a06d04735a9f7d2a7874/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/3c88ac3d20d871db3535a06d04735a9f7d2a7874/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/pom.xml?ref=3c88ac3d20d871db3535a06d04735a9f7d2a7874","patch":"@@ -494,6 +494,16 @@\n                 <artifactId>ant</artifactId>\n                 <version>1.6.5</version>\n             </dependency>\n+            <dependency>\n+                <groupId>org.jmock</groupId>\n+                <artifactId>jmock</artifactId>\n+                <version>2.5.1</version>\n+            </dependency>\n+            <dependency>\n+                <groupId>org.jmock</groupId>\n+                <artifactId>jmock-junit3</artifactId>\n+                <version>2.5.1</version>\n+            </dependency>\n         </dependencies>\n     </dependencyManagement>\n     <dependencies>"}]}

