{"sha":"3df86b0e95cf008678785f5dd8671ab1154dad1c","node_id":"MDY6Q29tbWl0MjA2MzY0OjNkZjg2YjBlOTVjZjAwODY3ODc4NWY1ZGQ4NjcxYWIxMTU0ZGFkMWM=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-03-27T19:33:52Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-03-27T19:33:52Z"},"message":"OPENJPA-1597 Revert code added to DetachManager to unproxy objects when detached in-place.  Updated tests to verify old behavior of detached entites still having  references, but that they are removed during serialization.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@928251 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"df8393bd059c134bf3ceb19e31127f246f98cc04","url":"https://api.github.com/repos/apache/openjpa/git/trees/df8393bd059c134bf3ceb19e31127f246f98cc04"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/3df86b0e95cf008678785f5dd8671ab1154dad1c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/3df86b0e95cf008678785f5dd8671ab1154dad1c","html_url":"https://github.com/apache/openjpa/commit/3df86b0e95cf008678785f5dd8671ab1154dad1c","comments_url":"https://api.github.com/repos/apache/openjpa/commits/3df86b0e95cf008678785f5dd8671ab1154dad1c/comments","author":null,"committer":null,"parents":[{"sha":"cb0ca8f009a53d1856ec082674b35714c355407f","url":"https://api.github.com/repos/apache/openjpa/commits/cb0ca8f009a53d1856ec082674b35714c355407f","html_url":"https://github.com/apache/openjpa/commit/cb0ca8f009a53d1856ec082674b35714c355407f"}],"stats":{"total":134,"additions":5,"deletions":129},"files":[{"sha":"33c6761e309b7432a691b9e082cf96c3784a49f2","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DetachManager.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/3df86b0e95cf008678785f5dd8671ab1154dad1c/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DetachManager.java","raw_url":"https://github.com/apache/openjpa/raw/3df86b0e95cf008678785f5dd8671ab1154dad1c/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DetachManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DetachManager.java?ref=3df86b0e95cf008678785f5dd8671ab1154dad1c","patch":"@@ -708,10 +708,8 @@ public void storeObjectField(int field, Object curVal) {\n          * Set the owner of the field's proxy to the detached state manager.\n          */\n         private Object reproxy(Object obj, int field) {\n-            if (obj != null && _detSM != null && obj instanceof Proxy) {\n+            if (obj != null && _detSM != null && obj instanceof Proxy)\n                 ((Proxy) obj).setOwner(_detSM, field);\n-                return ((Proxy) obj).copy(obj); \n-            }\n             return obj;\n         }\n "},{"sha":"5f0e07155ee373058b637f9efee671f1d815bb99","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/TestDetachNoProxy.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/3df86b0e95cf008678785f5dd8671ab1154dad1c/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/TestDetachNoProxy.java","raw_url":"https://github.com/apache/openjpa/raw/3df86b0e95cf008678785f5dd8671ab1154dad1c/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/TestDetachNoProxy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/TestDetachNoProxy.java?ref=3df86b0e95cf008678785f5dd8671ab1154dad1c","patch":"@@ -97,7 +97,7 @@ public void testDetach20() {\n         // in-place updated entity should not have any proxy classes and should be detached\n         assertFalse(em.contains(e20));\n         assertTrue(em.isDetached(e20));\n-        verifySerializable(e20, false, false);\n+        verifySerializable(e20, true, false);\n                \n         em.close();\n         emf2.close();\n@@ -202,7 +202,7 @@ public void testDetachAll20() {\n             // entity should not have any proxy classes (in-place updated) and is detached\n             assertFalse(em.contains(e20));\n             assertTrue(em.isDetached(e20));\n-            verifySerializable(e20, false, false);\n+            verifySerializable(e20, true, false);\n         }\n \n         em.close();"},{"sha":"a14f4dda097572808ac08b234c0631941825d591","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/proxy/TestDetachMerge.java","status":"modified","additions":1,"deletions":70,"changes":71,"blob_url":"https://github.com/apache/openjpa/blob/3df86b0e95cf008678785f5dd8671ab1154dad1c/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/proxy/TestDetachMerge.java","raw_url":"https://github.com/apache/openjpa/raw/3df86b0e95cf008678785f5dd8671ab1154dad1c/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/proxy/TestDetachMerge.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/proxy/TestDetachMerge.java?ref=3df86b0e95cf008678785f5dd8671ab1154dad1c","patch":"@@ -77,7 +77,6 @@ public void setUp() {\n     /* \n      * Test default 1.0 compatibility behavior, which should pass AS-IS\n      */\n-    @AllowFailure(message=\"Will fail until root cause of OPENJPA-1597 is found\")\n     public void testAnnuity1Compat() throws Exception {\n         OpenJPAEntityManagerFactorySPI emf1 = \n             (OpenJPAEntityManagerFactorySPI) OpenJPAPersistence.createEntityManagerFactory(\n@@ -107,9 +106,8 @@ public void testAnnuity1Compat() throws Exception {\n     }\n     \n     /* \n-     * Test 2.0 behavior with Compatibility flag and DetachedStateField=true, which should PASS\n+     * Test default 2.0 compatibility behavior, which should PASS\n      */\n-    @AllowFailure(message=\"Will fail until root cause of OPENJPA-1597 is found\")\n     public void testAnnuity2Compat() throws Exception {\n         OpenJPAEntityManagerFactorySPI emf2 = \n             (OpenJPAEntityManagerFactorySPI) OpenJPAPersistence.createEntityManagerFactory(\n@@ -138,73 +136,6 @@ public void testAnnuity2Compat() throws Exception {\n         }\n     }\n     \n-    /* \n-     * Test 2.0 behavior with DetachedStateField=true, which should FAIL\n-     */\n-    public void testAnnuity2Fail() throws Exception {\n-        OpenJPAEntityManagerFactorySPI emf2 = \n-            (OpenJPAEntityManagerFactorySPI) OpenJPAPersistence.createEntityManagerFactory(\n-            \"Annuity2Fail\", \"org/apache/openjpa/persistence/proxy/persistence2.xml\");\n-        assertNotNull(emf2);\n-\n-        Log log = emf2.getConfiguration().getLog(\"test\");\n-\n-        if (log.isTraceEnabled()) {\n-            Compatibility compat = emf2.getConfiguration().getCompatibilityInstance();\n-            assertNotNull(compat);\n-            log.trace(\"started testAnnuity2Fail()\");\n-            log.trace(\"FlushBeforeDetach=\" + compat.getFlushBeforeDetach());\n-            log.trace(\"CopyOnDetach=\" + compat.getCopyOnDetach());\n-            log.trace(\"CascadeWithDetach=\" + compat.getCascadeWithDetach());\n-            log.trace(\"IgnoreDetachedStateFieldForProxySerialization=\" +\n-                compat.getIgnoreDetachedStateFieldForProxySerialization());\n-        }\n-\n-        try {\n-            execute(emf2);\n-            fail(\"testAnuity2Fail() should have caused an execption!\");\n-        } catch (RuntimeException e) {\n-            if (e.getMessage().startsWith(\"Annuity:\")) {\n-                // no-op caught our expected exception\n-            } else {\n-                fail(\"testAnuity2Fail() caught an unexpected execption!\" + e);\n-            }\n-        } finally {\n-            emf2.close();\n-        }\n-    }\n-    \n-    /* \n-     * Test default 2.0 behavior with DetachedStateField=transient, which should PASS\n-     */\n-    public void testAnnuity2New() throws Exception {\n-        OpenJPAEntityManagerFactorySPI emf2 = \n-            (OpenJPAEntityManagerFactorySPI) OpenJPAPersistence.createEntityManagerFactory(\n-            \"Annuity2New\", \"org/apache/openjpa/persistence/proxy/persistence2.xml\");\n-        assertNotNull(emf2);\n-\n-        Log log = emf2.getConfiguration().getLog(\"test\");\n-\n-        if (log.isTraceEnabled()) {\n-            Compatibility compat = emf2.getConfiguration().getCompatibilityInstance();\n-            assertNotNull(compat);\n-            log.trace(\"started testAnnuity2New()\");\n-            log.trace(\"FlushBeforeDetach=\" + compat.getFlushBeforeDetach());\n-            log.trace(\"CopyOnDetach=\" + compat.getCopyOnDetach());\n-            log.trace(\"CascadeWithDetach=\" + compat.getCascadeWithDetach());\n-            log.trace(\"IgnoreDetachedStateFieldForProxySerialization=\" +\n-                compat.getIgnoreDetachedStateFieldForProxySerialization());\n-        }\n-\n-        try {\n-            execute(emf2);\n-        } catch (RuntimeException e) {\n-            fail(\"testAnuity2New() should not have caused an execption!\" + e);\n-        } finally {\n-            emf2.close();\n-        }\n-    }\n-    \n     private void execute(OpenJPAEntityManagerFactorySPI myEMF) throws Exception {\n         Log log = myEMF.getConfiguration().getLog(\"test\");\n         //EntityManager em = myEMF.createEntityManager();"},{"sha":"3e8ddd4b9cb41151ef86154cec79b6cdd6ab8ef3","filename":"openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/proxy/persistence2.xml","status":"modified","additions":1,"deletions":54,"changes":55,"blob_url":"https://github.com/apache/openjpa/blob/3df86b0e95cf008678785f5dd8671ab1154dad1c/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/proxy/persistence2.xml","raw_url":"https://github.com/apache/openjpa/raw/3df86b0e95cf008678785f5dd8671ab1154dad1c/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/proxy/persistence2.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/proxy/persistence2.xml?ref=3df86b0e95cf008678785f5dd8671ab1154dad1c","patch":"@@ -26,58 +26,6 @@\n     <!-- \n          This is the original PU from 1.0, but running as a 2.0 app\n     -->\n-    <persistence-unit name=\"Annuity2Fail\">\n-        <class>org.apache.openjpa.persistence.proxy.entities.Address</class>\n-        <class>org.apache.openjpa.persistence.proxy.entities.Annuity</class>\n-        <class>org.apache.openjpa.persistence.proxy.entities.AnnuityHolder</class>\n-        <class>org.apache.openjpa.persistence.proxy.entities.AnnuityPersistebleObject</class>\n-        <class>org.apache.openjpa.persistence.proxy.entities.Contact</class>\n-        <class>org.apache.openjpa.persistence.proxy.entities.EquityAnnuity</class>\n-        <class>org.apache.openjpa.persistence.proxy.entities.FixedAnnuity</class>\n-        <class>org.apache.openjpa.persistence.proxy.entities.Payor</class>\n-        <class>org.apache.openjpa.persistence.proxy.entities.Payout</class>\n-        <class>org.apache.openjpa.persistence.proxy.entities.Person</class>\n-        <class>org.apache.openjpa.persistence.proxy.entities.Rider</class>\n-        <exclude-unlisted-classes>true</exclude-unlisted-classes>\n-        <properties>\t\t\t\n-            <property name=\"openjpa.DetachState\"\n-                value=\"fgs(DetachedStateField=true)\" />\n-            <property name=\"openjpa.jdbc.SynchronizeMappings\"\n-                value=\"buildSchema(ForeignKeys=true)\" />\n-        </properties>\n-    </persistence-unit>\n-\n-    <!--\n-         This is the original PU from 1.0, but with the DetachedStateField\n-         override removed, which will cause a transient one to be used\n-         and the tests will pass.\n-    -->\n-    <persistence-unit name=\"Annuity2New\">\n-        <class>org.apache.openjpa.persistence.proxy.entities.Address</class>\n-        <class>org.apache.openjpa.persistence.proxy.entities.Annuity</class>\n-        <class>org.apache.openjpa.persistence.proxy.entities.AnnuityHolder</class>\n-        <class>org.apache.openjpa.persistence.proxy.entities.AnnuityPersistebleObject</class>\n-        <class>org.apache.openjpa.persistence.proxy.entities.Contact</class>\n-        <class>org.apache.openjpa.persistence.proxy.entities.EquityAnnuity</class>\n-        <class>org.apache.openjpa.persistence.proxy.entities.FixedAnnuity</class>\n-        <class>org.apache.openjpa.persistence.proxy.entities.Payor</class>\n-        <class>org.apache.openjpa.persistence.proxy.entities.Payout</class>\n-        <class>org.apache.openjpa.persistence.proxy.entities.Person</class>\n-        <class>org.apache.openjpa.persistence.proxy.entities.Rider</class>\n-        <exclude-unlisted-classes>true</exclude-unlisted-classes>\n-        <properties>\t\t\t\n-            <!-- <property name=\"openjpa.DetachState\"\n-                value=\"fgs(DetachedStateField=true)\" /> -->\n-            <property name=\"openjpa.jdbc.SynchronizeMappings\"\n-                value=\"buildSchema(ForeignKeys=true)\" />\n-        </properties>\n-    </persistence-unit>\n-\n-    <!-- \n-         This is the original PU from 1.0, but running as a 2.0 app\n-         with the new Compatibility flag set to use the old 1.0 behavior,\n-         so the tests will pass.\n-    -->\n     <persistence-unit name=\"Annuity2Compat\">\n         <class>org.apache.openjpa.persistence.proxy.entities.Address</class>\n         <class>org.apache.openjpa.persistence.proxy.entities.Annuity</class>\n@@ -92,12 +40,11 @@\n         <class>org.apache.openjpa.persistence.proxy.entities.Rider</class>\n         <exclude-unlisted-classes>true</exclude-unlisted-classes>\n         <properties>\t\t\t\n-            <property name=\"openjpa.Compatibility\"\n-                value=\"IgnoreDetachedStateFieldForProxySerialization=true\" />\n             <property name=\"openjpa.DetachState\"\n                 value=\"fgs(DetachedStateField=true)\" />\n             <property name=\"openjpa.jdbc.SynchronizeMappings\"\n                 value=\"buildSchema(ForeignKeys=true)\" />\n         </properties>\n     </persistence-unit>\n+\n </persistence>"}]}

