{"sha":"3e6410b75de317b93eb0fbefa0e40d408999ea7e","node_id":"MDY6Q29tbWl0MjA2MzY0OjNlNjQxMGI3NWRlMzE3YjkzZWIwZmJlZmEwZTQwZDQwODk5OWVhN2U=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2007-01-03T17:17:38Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2007-01-03T17:17:38Z"},"message":"Adding @UniqueConstraint annotation.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@492225 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0dd6f806986c42f5ef67ed0c9615f6d4d39141a3","url":"https://api.github.com/repos/apache/openjpa/git/trees/0dd6f806986c42f5ef67ed0c9615f6d4d39141a3"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/3e6410b75de317b93eb0fbefa0e40d408999ea7e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/3e6410b75de317b93eb0fbefa0e40d408999ea7e","html_url":"https://github.com/apache/openjpa/commit/3e6410b75de317b93eb0fbefa0e40d408999ea7e","comments_url":"https://api.github.com/repos/apache/openjpa/commits/3e6410b75de317b93eb0fbefa0e40d408999ea7e/comments","author":null,"committer":null,"parents":[{"sha":"f69eb137143b7b67f947e4be25ddc1d8a02ff496","url":"https://api.github.com/repos/apache/openjpa/commits/f69eb137143b7b67f947e4be25ddc1d8a02ff496","html_url":"https://github.com/apache/openjpa/commit/f69eb137143b7b67f947e4be25ddc1d8a02ff496"}],"stats":{"total":95,"additions":89,"deletions":6},"files":[{"sha":"7209c59d245ae26a793c205e08a71cdf321d9d70","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ClassMapping.java","status":"modified","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/apache/openjpa/blob/3e6410b75de317b93eb0fbefa0e40d408999ea7e/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ClassMapping.java","raw_url":"https://github.com/apache/openjpa/raw/3e6410b75de317b93eb0fbefa0e40d408999ea7e/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ClassMapping.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ClassMapping.java?ref=3e6410b75de317b93eb0fbefa0e40d408999ea7e","patch":"@@ -36,6 +36,8 @@\n import org.apache.openjpa.jdbc.schema.ForeignKey;\n import org.apache.openjpa.jdbc.schema.Schemas;\n import org.apache.openjpa.jdbc.schema.Table;\n+import org.apache.openjpa.jdbc.schema.Unique;\n+import org.apache.openjpa.jdbc.schema.XMLSchemaParser;\n import org.apache.openjpa.jdbc.sql.Joins;\n import org.apache.openjpa.jdbc.sql.Result;\n import org.apache.openjpa.jdbc.sql.RowManager;\n@@ -793,6 +795,44 @@ protected void resolveMapping(boolean runtime) {\n                     _cols[i].setFlag(Column.FLAG_DIRECT_UPDATE, true);\n             }\n         }\n+        mapUniqueConstraints();\n+    }\n+    \n+    /**\n+     * Adds unique constraints to the mapped table.\n+     *\n+     */\n+    void mapUniqueConstraints() {\n+        Log log = getRepository().getLog();\n+        Collection uniqueInfos = _info.getUniqueConstraints();\n+        if (uniqueInfos == null || uniqueInfos.isEmpty())\n+            return;\n+        Iterator iter = uniqueInfos.iterator();\n+        Table table = getTable();\n+        int i = 1;\n+        while (iter.hasNext()) {\n+            XMLSchemaParser.UniqueInfo uniqueInfo = \n+                (XMLSchemaParser.UniqueInfo)iter.next();\n+            if (uniqueInfo.cols == null || uniqueInfo.cols.isEmpty())\n+                continue;\n+            String constraintName = table.getName() + \"_UNIQUE_\" + i;\n+            i++;\n+            Unique uniqueConstraint = table.addUnique(constraintName);\n+            Iterator uniqueColumnNames = uniqueInfo.cols.iterator();\n+            while (uniqueColumnNames.hasNext()) {\n+                String uniqueColumnName = (String)uniqueColumnNames.next();\n+                Column uniqueColumn = table.getColumn(uniqueColumnName);\n+                if (uniqueColumn != null) {\n+                    uniqueConstraint.addColumn(uniqueColumn);\n+                } else {\n+                    table.removeUnique(uniqueConstraint);\n+                    if (log.isWarnEnabled())\n+                        log.warn(_loc.get(\"missing-unique-column\", this, \n+                            table.getName(), uniqueColumnName));\n+                    break;\n+                }\n+            }\n+        }\n     }\n \n     /**"},{"sha":"66314ce0498d5bb8d30400efe23683cb6d15eb62","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ClassMappingInfo.java","status":"modified","additions":20,"deletions":1,"changes":21,"blob_url":"https://github.com/apache/openjpa/blob/3e6410b75de317b93eb0fbefa0e40d408999ea7e/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ClassMappingInfo.java","raw_url":"https://github.com/apache/openjpa/raw/3e6410b75de317b93eb0fbefa0e40d408999ea7e/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ClassMappingInfo.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ClassMappingInfo.java?ref=3e6410b75de317b93eb0fbefa0e40d408999ea7e","patch":"@@ -21,13 +21,17 @@\n import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n+import java.util.Collection;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n \n import org.apache.openjpa.jdbc.meta.strats.FullClassStrategy;\n import org.apache.openjpa.jdbc.schema.Column;\n import org.apache.openjpa.jdbc.schema.ForeignKey;\n import org.apache.openjpa.jdbc.schema.Schema;\n import org.apache.openjpa.jdbc.schema.SchemaGroup;\n import org.apache.openjpa.jdbc.schema.Table;\n+import org.apache.openjpa.jdbc.schema.XMLSchemaParser;\n import org.apache.openjpa.lib.meta.SourceTracker;\n import org.apache.openjpa.lib.xml.Commentable;\n \n@@ -51,6 +55,7 @@\n     private File _file = null;\n     private int _srcType = SRC_OTHER;\n     private String[] _comments = null;\n+    private Collection _uniqueConstraints = null;//XMLSchemaParser.UniqueInfo\n \n     /**\n      * The described class name.\n@@ -275,7 +280,7 @@ else if (cls.getIdentityType() == ClassMapping.ID_DATASTORE)\n             : cls.getStrategy().getAlias();\n         if (strat != null && (cls.getPCSuperclass() != null\n             || !FullClassStrategy.ALIAS.equals(strat)))\n-            setStrategy(strat);\n+            setStrategy(strat);        \n     }\n \n     public boolean hasSchemaComponents() {\n@@ -308,8 +313,22 @@ public void copy(MappingInfo info) {\n                     _seconds.put(key, cinfo._seconds.get(key));\n             }\n         }\n+        if (cinfo._uniqueConstraints != null)\n+           _uniqueConstraints = new ArrayList(cinfo._uniqueConstraints);\n     }\n \n+    public void addUniqueConstaint(String[] columnNames) {\n+        if (_uniqueConstraints == null)\n+            _uniqueConstraints = new ArrayList();\n+        XMLSchemaParser.UniqueInfo uniqueInfo = new XMLSchemaParser.UniqueInfo();\n+        uniqueInfo.cols = Arrays.asList(columnNames);\n+        _uniqueConstraints.add(uniqueInfo);\n+    }\n+    \n+    public Collection getUniqueConstraints() {\n+        return _uniqueConstraints;\n+    }\n+    \n     public File getSourceFile() {\n         return _file;\n     }"},{"sha":"78ccfd145f399fc3e0f1016f725fe626fd31862c","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaTool.java","status":"modified","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/apache/openjpa/blob/3e6410b75de317b93eb0fbefa0e40d408999ea7e/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaTool.java","raw_url":"https://github.com/apache/openjpa/raw/3e6410b75de317b93eb0fbefa0e40d408999ea7e/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaTool.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaTool.java?ref=3e6410b75de317b93eb0fbefa0e40d408999ea7e","patch":"@@ -560,6 +560,27 @@ else if (!pk.equalsPrimaryKey(dbTable.getPrimaryKey()))\n             }\n         }\n \n+        // Unique Constraints on group of columns\n+        Unique[] uniques;\n+        for (int i = 0; i < schemas.length; i++) {\n+            tabs = schemas[i].getTables();\n+            for (int j = 0; j < tabs.length; j++) {\n+                // create unique constraints only on new tables \n+                if (!newTables.contains(tabs[j]))\n+                    continue;\n+\n+                uniques = tabs[j].getUniques();\n+                if (uniques == null || uniques.length == 0)\n+                    continue;\n+                dbTable = db.findTable(tabs[j]);\n+                if (dbTable == null)\n+                    continue;\n+                for (int k = 0; k < uniques.length; k++) {\n+                    dbTable.importUnique(uniques[k]);\n+                }\n+            }\n+        }\n+        \n         // foreign keys\n         ForeignKey[] fks;\n         ForeignKey fk;"},{"sha":"1ef150fb54c7abb8d728e017a3871bb075b04561","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/XMLSchemaParser.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/3e6410b75de317b93eb0fbefa0e40d408999ea7e/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/XMLSchemaParser.java","raw_url":"https://github.com/apache/openjpa/raw/3e6410b75de317b93eb0fbefa0e40d408999ea7e/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/XMLSchemaParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/XMLSchemaParser.java?ref=3e6410b75de317b93eb0fbefa0e40d408999ea7e","patch":"@@ -579,7 +579,7 @@ private void throwUserException(Message msg) {\n     /**\n      * Used to hold unique constraint info before it is resolved.\n      */\n-    private static class UniqueInfo {\n+    public static class UniqueInfo {\n \n         public Unique unq = null;\n         public Collection cols = new LinkedList();"},{"sha":"b14ec60273971a92cc997f7b4062530c82cf2d67","filename":"openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/localizer.properties","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/3e6410b75de317b93eb0fbefa0e40d408999ea7e/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/3e6410b75de317b93eb0fbefa0e40d408999ea7e/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/localizer.properties?ref=3e6410b75de317b93eb0fbefa0e40d408999ea7e","patch":"@@ -401,3 +401,6 @@ untraversable-path: Result path \"{2}\" in result type \"{1}\" of mapping \"{0}\" \\\n \tattempts to traverse through a non-relation field.\n num-cols-path: Result path \"{2}\" in result type \"{1}\" of mapping \"{0}\" \\\n \tattempts to map a field that does not have exactly 1 column.\n+missing-unique-column: A unique constraint includes a column \"{2}\" specified \\\n+\tin mapping of class \"{0}\" to table \"{1}\". However, the column does not \\\n+\texist in \"{1}\" table. This constraint will not be defined in the schema."},{"sha":"8cdf67091b299da0ac72d78dbb7d627a095abb33","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/AnnotationPersistenceMappingParser.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/3e6410b75de317b93eb0fbefa0e40d408999ea7e/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/AnnotationPersistenceMappingParser.java","raw_url":"https://github.com/apache/openjpa/raw/3e6410b75de317b93eb0fbefa0e40d408999ea7e/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/AnnotationPersistenceMappingParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/AnnotationPersistenceMappingParser.java?ref=3e6410b75de317b93eb0fbefa0e40d408999ea7e","patch":"@@ -47,6 +47,7 @@\n import javax.persistence.Table;\n import javax.persistence.TableGenerator;\n import javax.persistence.Temporal;\n+import javax.persistence.UniqueConstraint;\n \n import org.apache.commons.lang.StringUtils;\n import org.apache.openjpa.jdbc.conf.JDBCConfiguration;\n@@ -459,10 +460,9 @@ private void parseTable(ClassMapping cm, Table table) {\n         if (tableName != null)\n             cm.getMappingInfo().setTableName(tableName);\n \n-        //### EJB3\n-        Log log = getLog();\n-        if (table.uniqueConstraints().length > 0 && log.isWarnEnabled())\n-            log.warn(_loc.get(\"unique-constraints\", cm));\n+        for (UniqueConstraint unique:table.uniqueConstraints()) {\n+            ((ClassMappingInfo)cm.getMappingInfo()).addUniqueConstaint(unique.columnNames());\n+        }\n     }\n \n     /**"}]}

