{"sha":"3e7b11582165b175d0297482033e3e2bf7b19792","node_id":"MDY6Q29tbWl0MjA2MzY0OjNlN2IxMTU4MjE2NWIxNzVkMDI5NzQ4MjAzM2UzZTJiZjdiMTk3OTI=","commit":{"author":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2008-10-24T20:35:19Z"},"committer":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2008-10-24T20:35:19Z"},"message":"OPENJPA-752: Enhance exception message text to improve serviceability.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/1.0.x@707739 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0ecded6b735cc43a9c5d9c328e7cc2bd709b6fd3","url":"https://api.github.com/repos/apache/openjpa/git/trees/0ecded6b735cc43a9c5d9c328e7cc2bd709b6fd3"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/3e7b11582165b175d0297482033e3e2bf7b19792","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/3e7b11582165b175d0297482033e3e2bf7b19792","html_url":"https://github.com/apache/openjpa/commit/3e7b11582165b175d0297482033e3e2bf7b19792","comments_url":"https://api.github.com/repos/apache/openjpa/commits/3e7b11582165b175d0297482033e3e2bf7b19792/comments","author":null,"committer":null,"parents":[{"sha":"bfed7bda156a604d2bbadf6fefeeebad8039371c","url":"https://api.github.com/repos/apache/openjpa/commits/bfed7bda156a604d2bbadf6fefeeebad8039371c","html_url":"https://github.com/apache/openjpa/commit/bfed7bda156a604d2bbadf6fefeeebad8039371c"}],"stats":{"total":51,"additions":39,"deletions":12},"files":[{"sha":"9fe2390054558e6e27670c4c2c9739de0f846d3d","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/ProxySetupStateManager.java","status":"modified","additions":31,"deletions":9,"changes":40,"blob_url":"https://github.com/apache/openjpa/blob/3e7b11582165b175d0297482033e3e2bf7b19792/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ProxySetupStateManager.java","raw_url":"https://github.com/apache/openjpa/raw/3e7b11582165b175d0297482033e3e2bf7b19792/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ProxySetupStateManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ProxySetupStateManager.java?ref=3e7b11582165b175d0297482033e3e2bf7b19792","patch":"@@ -25,6 +25,7 @@\n \n import org.apache.openjpa.enhance.PersistenceCapable;\n import org.apache.openjpa.enhance.StateManager;\n+import org.apache.openjpa.lib.util.Localizer;\n import org.apache.openjpa.util.InternalException;\n \n /**\n@@ -37,6 +38,9 @@\n class ProxySetupStateManager\n     implements StateManager {\n \n+\tprivate static final Localizer _loc = Localizer\n+\t\t.forPackage(ProxySetupStateManager.class);\n+\n     private Object _object = null;\n \n     public void setProxyData(PersistenceCapable pc, ClassMetaData meta) {\n@@ -199,39 +203,57 @@ public void settingObjectField(PersistenceCapable pc, int i, Object o,\n     }\n \n     public void providedBooleanField(PersistenceCapable pc, int i, boolean b) {\n-        throw new InternalException();\n+        throw new InternalException(_loc.get(\n+\t\t\t\t\"unexpected_proxy_sm_attribute_type\", pc.getClass().getName(),\n+\t\t\t\t\"boolean\"));\n     }\n \n     public void providedCharField(PersistenceCapable pc, int i, char c) {\n-        throw new InternalException();\n+        throw new InternalException(_loc.get(\n+\t\t\t\t\"unexpected_proxy_sm_attribute_type\", pc.getClass().getName(),\n+\t\t\t\t\"char\"));\n     }\n \n     public void providedByteField(PersistenceCapable pc, int i, byte b) {\n-        throw new InternalException();\n+        throw new InternalException(_loc.get(\n+\t\t\t\t\"unexpected_proxy_sm_attribute_type\", pc.getClass().getName(),\n+\t\t\t\t\"byte\"));\n     }\n \n     public void providedShortField(PersistenceCapable pc, int i, short s) {\n-        throw new InternalException();\n+        throw new InternalException(_loc.get(\n+\t\t\t\t\"unexpected_proxy_sm_attribute_type\", pc.getClass().getName(),\n+\t\t\t\t\"short\"));\n     }\n \n     public void providedIntField(PersistenceCapable pc, int i, int i2) {\n-        throw new InternalException();\n+        throw new InternalException(_loc.get(\n+\t\t\t\t\"unexpected_proxy_sm_attribute_type\", pc.getClass().getName(),\n+\t\t\t\t\"int\"));\n     }\n \n     public void providedLongField(PersistenceCapable pc, int i, long l) {\n-        throw new InternalException();\n+        throw new InternalException(_loc.get(\n+\t\t\t\t\"unexpected_proxy_sm_attribute_type\", pc.getClass().getName(),\n+\t\t\t\t\"long\"));\n     }\n \n     public void providedFloatField(PersistenceCapable pc, int i, float f) {\n-        throw new InternalException();\n+        throw new InternalException(_loc.get(\n+\t\t\t\t\"unexpected_proxy_sm_attribute_type\", pc.getClass().getName(),\n+\t\t\t\t\"float\"));\n     }\n \n     public void providedDoubleField(PersistenceCapable pc, int i, double d) {\n-        throw new InternalException();\n+        throw new InternalException(_loc.get(\n+\t\t\t\t\"unexpected_proxy_sm_attribute_type\", pc.getClass().getName(),\n+\t\t\t\t\"double\"));\n     }\n \n     public void providedStringField(PersistenceCapable pc, int i, String s) {\n-        throw new InternalException();\n+        throw new InternalException(_loc.get(\n+\t\t\t\t\"unexpected_proxy_sm_attribute_type\", pc.getClass().getName(),\n+\t\t\t\t\"String\"));\n     }\n \n     public void providedObjectField(PersistenceCapable pc, int i, Object o) {"},{"sha":"2caacb7c544f09c233ef934d392d814baa83119e","filename":"openjpa-kernel/src/main/resources/org/apache/openjpa/meta/localizer.properties","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/3e7b11582165b175d0297482033e3e2bf7b19792/openjpa-kernel/src/main/resources/org/apache/openjpa/meta/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/3e7b11582165b175d0297482033e3e2bf7b19792/openjpa-kernel/src/main/resources/org/apache/openjpa/meta/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/resources/org/apache/openjpa/meta/localizer.properties?ref=3e7b11582165b175d0297482033e3e2bf7b19792","patch":"@@ -171,7 +171,7 @@ invalid-id: The id class specified by type \"{0}\" does not match the \\\n \tprimary key fields of the class.  Make sure your identity class has the \\\n \tsame primary keys as your persistent type, including pk field types. \\\n     Mismatched property: \"{1}\"\n-null-cons: The id class specified by type \"{0}\" does not have public a \\\n+null-cons: The id class specified by type \"{0}\" does not have a public \\\n \tno-args constructor.\n hc-method: The identity class specified by type \"{0}\" is not valid, as the \\\n \thashCode method is not overridden. Implement hashCode so that two \\\n@@ -301,8 +301,13 @@ scan-found-names: Scan of \"{1}\" found persistent types {0}.\n parse-found-names: parsePersistentTypeNames() found {0}.\n interface-load: Dynamic implementation of managed \"{0}\" can not be defined \\\n \tusing classloader \"{1}\". See nested exception for details.\n-interface-load2: Enhanced dynamic implementaion of managed \"{0}\" can not be \\\n+interface-load2: Enhanced dynamic implementation of managed \"{0}\" can not be \\\n \tdefined using classloader \"{1}\". See nested exception for details.\n-interface-badenhance: Dynamic implementaion of \"{0}\" can not be enhanced.\n+interface-badenhance: Dynamic implementation of \"{0}\" can not be enhanced.\n bad-externalized-value: Value \"{0}\" was not found in the list of \\\n \tExternalValues for field \"{2}\". Valid values are {1}\n+unexpected_proxy_sm_attribute_type: Unexpected attribute type \"{1}\" for \\\n+\tpersistence-capable class \"{0}\" is detected. If the entity is packaged in \\\n+    a jar file, this may be caused by one or more inherited class of the \\\n+    entity not being packaged in the same jar file. Please check all \\\n+    inherited class(es) are packaged in the same jar file."}]}

