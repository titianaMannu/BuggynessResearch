{"sha":"3e83d5d15b2095330d21739e1244db9b52a1a9b3","node_id":"MDY6Q29tbWl0MjA2MzY0OjNlODNkNWQxNWIyMDk1MzMwZDIxNzM5ZTEyNDRkYjliNTJhMWE5YjM=","commit":{"author":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2009-11-05T19:54:32Z"},"committer":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2009-11-05T19:54:32Z"},"message":"OPENJPA-1375 - Clean _plans IdentityHashMap when clear or close is called.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@833150 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"9eac8af6932923d1e57899a8bf407f2f8a22c7e1","url":"https://api.github.com/repos/apache/openjpa/git/trees/9eac8af6932923d1e57899a8bf407f2f8a22c7e1"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/3e83d5d15b2095330d21739e1244db9b52a1a9b3","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/3e83d5d15b2095330d21739e1244db9b52a1a9b3","html_url":"https://github.com/apache/openjpa/commit/3e83d5d15b2095330d21739e1244db9b52a1a9b3","comments_url":"https://api.github.com/repos/apache/openjpa/commits/3e83d5d15b2095330d21739e1244db9b52a1a9b3/comments","author":null,"committer":null,"parents":[{"sha":"00fcf4cfd3cf28c95c9ba413358a7b680a719302","url":"https://api.github.com/repos/apache/openjpa/commits/00fcf4cfd3cf28c95c9ba413358a7b680a719302","html_url":"https://github.com/apache/openjpa/commit/00fcf4cfd3cf28c95c9ba413358a7b680a719302"}],"stats":{"total":10,"additions":5,"deletions":5},"files":[{"sha":"9907065fc934e85f0390fd1b5f4db85e3d1d6164","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/3e83d5d15b2095330d21739e1244db9b52a1a9b3/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/3e83d5d15b2095330d21739e1244db9b52a1a9b3/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java?ref=3e83d5d15b2095330d21739e1244db9b52a1a9b3","patch":"@@ -33,7 +33,6 @@\n import java.util.Arrays;\n import java.util.Collection;\n import java.util.EnumSet;\n-import java.util.HashMap;\n import java.util.IdentityHashMap;\n import java.util.Map;\n import java.util.Set;\n@@ -50,7 +49,6 @@\n import javax.persistence.metamodel.Metamodel;\n \n import org.apache.commons.lang.StringUtils;\n-import org.apache.commons.logging.LogFactory;\n import org.apache.openjpa.conf.Compatibility;\n import org.apache.openjpa.conf.OpenJPAConfiguration;\n import org.apache.openjpa.ee.ManagedRuntime;\n@@ -1113,6 +1111,7 @@ static int toFlushBeforeQueries(FlushModeType flushMode) {\n     public void clear() {\n         assertNotCloseInvoked();\n         _broker.detachAll(this, false);\n+        _plans.clear();\n     }\n \n     public Object getDelegate() {\n@@ -1245,6 +1244,7 @@ public void dirtyClass(Class cls) {\n     public void close() {\n         assertNotCloseInvoked();\n         _broker.close();\n+        _plans.clear();\n     }\n \n     public boolean isOpen() {\n@@ -1473,13 +1473,13 @@ private Class primitiveType(char type) {\n             }\n         }\n \n-        protected Class resolveClass(ObjectStreamClass classDesc)\n+        protected Class<?> resolveClass(ObjectStreamClass classDesc)\n             throws IOException, ClassNotFoundException {\n \n             String cname = classDesc.getName();\n             if (cname.startsWith(\"[\")) {\n                 // An array\n-                Class component;\t\t// component class\n+                Class<?> component;\t\t// component class\n                 int dcount;\t\t\t    // dimension\n                 for (dcount=1; cname.charAt(dcount)=='['; dcount++) ;\n                 if (cname.charAt(dcount) == 'L') {\n@@ -1505,7 +1505,7 @@ protected Class resolveClass(ObjectStreamClass classDesc)\n          * If this is a generated subclass, look up the corresponding Class\n          * object via metadata.\n          */\n-        private Class lookupClass(String className)\n+        private Class<?> lookupClass(String className)\n             throws ClassNotFoundException {\n             try {\n                 return Class.forName(className);"}]}

