{"sha":"3f47c13c68f439f274c735862184cfb19c37b151","node_id":"MDY6Q29tbWl0MjA2MzY0OjNmNDdjMTNjNjhmNDM5ZjI3NGM3MzU4NjIxODRjZmIxOWMzN2IxNTE=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2008-12-01T12:34:17Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2008-12-01T12:34:17Z"},"message":"OPENJPA-787,OPENJPA-799: getSingleResult() and multiple aggregate projections\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@722059 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"9718a451b0a0664943c798f5c6a1b90533848066","url":"https://api.github.com/repos/apache/openjpa/git/trees/9718a451b0a0664943c798f5c6a1b90533848066"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/3f47c13c68f439f274c735862184cfb19c37b151","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/3f47c13c68f439f274c735862184cfb19c37b151","html_url":"https://github.com/apache/openjpa/commit/3f47c13c68f439f274c735862184cfb19c37b151","comments_url":"https://api.github.com/repos/apache/openjpa/commits/3f47c13c68f439f274c735862184cfb19c37b151/comments","author":null,"committer":null,"parents":[{"sha":"492a92a26043b75c470dd4be7908550f92d00577","url":"https://api.github.com/repos/apache/openjpa/commits/492a92a26043b75c470dd4be7908550f92d00577","html_url":"https://github.com/apache/openjpa/commit/492a92a26043b75c470dd4be7908550f92d00577"}],"stats":{"total":452,"additions":198,"deletions":254},"files":[{"sha":"6d357a264634d7a7b75f21f851cf43c2e0ce4650","filename":"openjpa-slice/src/main/java/org/apache/openjpa/slice/jdbc/DistributedResultSet.java","status":"modified","additions":167,"deletions":245,"changes":412,"blob_url":"https://github.com/apache/openjpa/blob/3f47c13c68f439f274c735862184cfb19c37b151/openjpa-slice/src/main/java/org/apache/openjpa/slice/jdbc/DistributedResultSet.java","raw_url":"https://github.com/apache/openjpa/raw/3f47c13c68f439f274c735862184cfb19c37b151/openjpa-slice/src/main/java/org/apache/openjpa/slice/jdbc/DistributedResultSet.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-slice/src/main/java/org/apache/openjpa/slice/jdbc/DistributedResultSet.java?ref=3f47c13c68f439f274c735862184cfb19c37b151","patch":"@@ -40,22 +40,26 @@\n \r\n /**\r\n  * A chain of ResultSet.\r\n+ * Assumes added ResultSet are identical in structure and fetches forward.\r\n+ * Can not move absolutely or change fetch direction. \r\n  * \r\n  * @author Pinaki Poddar \r\n  *\r\n  */\r\n class DistributedResultSet implements ResultSet {\r\n-\tLinkedList<ResultSet> comps = new LinkedList<ResultSet>();\r\n-\tResultSet current;\r\n-\tint cursor = -1;\r\n+\tprivate LinkedList<ResultSet> comps = new LinkedList<ResultSet>();\r\n+\tprivate ResultSet current;\r\n+\tprivate int cursor = -1;\r\n \t\r\n \t/**\r\n \t * Adds the ResultSet only if it has rows.\r\n \t */\r\n \tpublic void add(ResultSet rs) {\r\n \t\ttry {\r\n-\t\t\tif (rs.first())\r\n+\t\t\tif (rs.first()) {\r\n \t\t\t\tcomps.add(rs);\r\n+\t\t\t\trs.beforeFirst();\r\n+\t\t\t}\r\n \t\t} catch (SQLException e) {\r\n \t\t\t// ignore\r\n \t\t}\r\n@@ -76,31 +80,32 @@ public void beforeFirst() throws SQLException {\n \t}\r\n \r\n \tpublic void cancelRowUpdates() throws SQLException {\r\n-\t\tthrow new UnsupportedOperationException();\r\n+\t\tcurrent.cancelRowUpdates();\r\n \t}\r\n \r\n \tpublic void clearWarnings() throws SQLException {\r\n-\t\tfor (ResultSet rs:comps)\r\n+\t\tfor (ResultSet rs : comps)\r\n \t\t\trs.clearWarnings();\r\n \t}\r\n \r\n \tpublic void close() throws SQLException {\r\n-\t\tfor (ResultSet rs:comps)\r\n+\t\tfor (ResultSet rs : comps)\r\n \t\t\trs.close();\r\n \t}\r\n-\r\n+ \r\n \tpublic void deleteRow() throws SQLException {\r\n-\t\tcurrent.deleteRow();\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic int findColumn(String arg0) throws SQLException {\r\n-\t\treturn 0;\r\n+\t\treturn current.findColumn(arg0);\r\n \t}\r\n \r\n \tpublic boolean first() throws SQLException {\r\n-\t\tif (comps.isEmpty()) return false;\r\n+\t\tif (comps.isEmpty()) \r\n+\t\t\treturn false;\r\n \t\tcursor = 0;\r\n-\t\tcurrent = comps.get(0);\r\n+\t\tcurrent = comps.getFirst();\r\n \t\treturn true;\r\n \t}\r\n \r\n@@ -149,615 +154,532 @@ public Blob getBlob(int arg0) throws SQLException {\n \t}\r\n \r\n \tpublic Blob getBlob(String arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getBlob(arg0);\r\n \t}\r\n \r\n \tpublic boolean getBoolean(int arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn false;\r\n+\t\treturn current.getBoolean(arg0);\r\n \t}\r\n \r\n \tpublic boolean getBoolean(String arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn false;\r\n+\t\treturn current.getBoolean(arg0);\r\n \t}\r\n \r\n \tpublic byte getByte(int arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn 0;\r\n+\t\treturn current.getByte(arg0);\r\n \t}\r\n \r\n \tpublic byte getByte(String arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn 0;\r\n+\t\treturn current.getByte(arg0);\r\n \t}\r\n \r\n \tpublic byte[] getBytes(int arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getBytes(arg0);\r\n \t}\r\n \r\n \tpublic byte[] getBytes(String arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getBytes(arg0);\r\n \t}\r\n \r\n \tpublic Reader getCharacterStream(int arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getCharacterStream(arg0);\r\n \t}\r\n \r\n \tpublic Reader getCharacterStream(String arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getCharacterStream(arg0);\r\n \t}\r\n \r\n \tpublic Clob getClob(int arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getClob(arg0);\r\n \t}\r\n \r\n \tpublic Clob getClob(String arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getClob(arg0);\r\n \t}\r\n \r\n \tpublic int getConcurrency() throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn 0;\r\n+\t\treturn current.getConcurrency();\r\n \t}\r\n \r\n \tpublic String getCursorName() throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getCursorName();\r\n \t}\r\n \r\n \tpublic Date getDate(int arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getDate(arg0);\r\n \t}\r\n \r\n \tpublic Date getDate(String arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getDate(arg0);\r\n \t}\r\n \r\n \tpublic Date getDate(int arg0, Calendar arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getDate(arg0, arg1);\r\n \t}\r\n \r\n \tpublic Date getDate(String arg0, Calendar arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getDate(arg0, arg1);\r\n \t}\r\n \r\n \tpublic double getDouble(int arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn 0;\r\n+\t\treturn current.getDouble(arg0);\r\n \t}\r\n \r\n \tpublic double getDouble(String arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn 0;\r\n+\t\treturn current.getDouble(arg0);\r\n \t}\r\n \r\n \tpublic int getFetchDirection() throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn 0;\r\n+\t\treturn current.getFetchDirection();\r\n \t}\r\n \r\n \tpublic int getFetchSize() throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn 0;\r\n+\t\treturn current.getFetchSize();\r\n \t}\r\n \r\n \tpublic float getFloat(int arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn 0;\r\n+\t\treturn current.getFloat(arg0);\r\n \t}\r\n \r\n \tpublic float getFloat(String arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn 0;\r\n+\t\treturn current.getFloat(arg0);\r\n \t}\r\n \r\n \tpublic int getInt(int arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn 0;\r\n+\t\treturn current.getInt(arg0);\r\n \t}\r\n \r\n \tpublic int getInt(String arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn 0;\r\n+\t\treturn current.getInt(arg0);\r\n \t}\r\n \r\n \tpublic long getLong(int arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn 0;\r\n+\t\treturn current.getLong(arg0);\r\n \t}\r\n \r\n \tpublic long getLong(String arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn 0;\r\n+\t\treturn current.getLong(arg0);\r\n \t}\r\n \r\n \tpublic ResultSetMetaData getMetaData() throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getMetaData();\r\n \t}\r\n \r\n \tpublic Object getObject(int arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getObject(arg0);\r\n \t}\r\n \r\n \tpublic Object getObject(String arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getObject(arg0);\r\n \t}\r\n \r\n \tpublic Object getObject(int arg0, Map<String, Class<?>> arg1)\r\n \t\t\tthrows SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getObject(arg0, arg1);\r\n \t}\r\n \r\n \tpublic Object getObject(String arg0, Map<String, Class<?>> arg1)\r\n \t\t\tthrows SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getObject(arg0, arg1);\r\n \t}\r\n \r\n \tpublic Ref getRef(int arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getRef(arg0);\r\n \t}\r\n \r\n \tpublic Ref getRef(String arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getRef(arg0);\r\n \t}\r\n \r\n \tpublic int getRow() throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn 0;\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic short getShort(int arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn 0;\r\n+\t\treturn current.getShort(arg0);\r\n \t}\r\n \r\n \tpublic short getShort(String arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn 0;\r\n+\t\treturn current.getShort(arg0);\r\n \t}\r\n \r\n \tpublic Statement getStatement() throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getStatement();\r\n \t}\r\n \r\n \tpublic String getString(int arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getString(arg0);\r\n \t}\r\n \r\n \tpublic String getString(String arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getString(arg0);\r\n \t}\r\n \r\n \tpublic Time getTime(int arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getTime(arg0);\r\n \t}\r\n \r\n \tpublic Time getTime(String arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getTime(arg0);\r\n \t}\r\n \r\n \tpublic Time getTime(int arg0, Calendar arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getTime(arg0, arg1);\r\n \t}\r\n \r\n \tpublic Time getTime(String arg0, Calendar arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getTime(arg0, arg1);\r\n \t}\r\n \r\n \tpublic Timestamp getTimestamp(int arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getTimestamp(arg0);\r\n \t}\r\n \r\n \tpublic Timestamp getTimestamp(String arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getTimestamp(arg0);\r\n \t}\r\n \r\n \tpublic Timestamp getTimestamp(int arg0, Calendar arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getTimestamp(arg0, arg1);\r\n \t}\r\n \r\n \tpublic Timestamp getTimestamp(String arg0, Calendar arg1)\r\n \t\t\tthrows SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getTimestamp(arg0, arg1);\r\n \t}\r\n \r\n \tpublic int getType() throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn 0;\r\n+\t\treturn current.getType();\r\n \t}\r\n \r\n \tpublic URL getURL(int arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getURL(arg0);\r\n \t}\r\n \r\n \tpublic URL getURL(String arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getURL(arg0);\r\n \t}\r\n \r\n \tpublic InputStream getUnicodeStream(int arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getUnicodeStream(arg0);\r\n \t}\r\n \r\n \tpublic InputStream getUnicodeStream(String arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getUnicodeStream(arg0);\r\n \t}\r\n \r\n \tpublic SQLWarning getWarnings() throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn null;\r\n+\t\treturn current.getWarnings();\r\n \t}\r\n \r\n \tpublic void insertRow() throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic boolean isAfterLast() throws SQLException {\r\n \t\treturn current == null && cursor >= comps.size();\r\n \t}\r\n \r\n \tpublic boolean isBeforeFirst() throws SQLException {\r\n-\t\treturn current == null && cursor<0;\r\n+\t\treturn current == null && cursor < 0;\r\n \t}\r\n \r\n \tpublic boolean isFirst() throws SQLException {\r\n-\t\treturn current != null && current.isFirst() && cursor==0;\r\n+\t\treturn current != null && current.isFirst() && cursor == 0;\r\n \t}\r\n \r\n \tpublic boolean isLast() throws SQLException {\r\n-\t\treturn current != null && current.isLast() && cursor==comps.size()-1;\r\n+\t\treturn current != null && current.isLast() && cursor == comps.size()-1;\r\n \t}\r\n \r\n \tpublic boolean last() throws SQLException {\r\n-\t\tif (comps.isEmpty()) return false;\r\n+\t\tif (comps.isEmpty()) \r\n+\t\t\treturn false;\r\n \t\tcursor = comps.size()-1;\r\n-\t\treturn false;\r\n+\t\tcurrent = comps.getLast();\r\n+\t\treturn current.last();\r\n \t}\r\n \r\n \tpublic void moveToCurrentRow() throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void moveToInsertRow() throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic boolean next() throws SQLException {\r\n+\t\tif (comps.isEmpty())\r\n+\t\t\treturn false;\r\n \t\tif (current == null) {\r\n-\t\t\tcurrent = comps.get(0);\r\n+\t\t\tcurrent = comps.getFirst();\r\n \t\t\tcursor = 0;\r\n \t\t}\r\n \t\tif (current.next())\r\n \t\t\treturn true;\r\n \t\tcursor++;\r\n-\t\tif (cursor<comps.size())\r\n+\t\tif (cursor < comps.size()) {\r\n \t\t\tcurrent = comps.get(cursor);\r\n-\t\treturn cursor<comps.size();\r\n+\t\t\treturn current.first();\r\n+\t\t}\r\n+\t\treturn false;\r\n \t}\r\n \r\n \tpublic boolean previous() throws SQLException {\r\n-\t\treturn current.previous();\r\n+\t\tif (comps.isEmpty())\r\n+\t\t\treturn false;\r\n+\t\tif (current.previous())\r\n+\t\t\treturn true;\r\n+\t\tcursor--;\r\n+\t\tif (cursor >= 0) {\r\n+\t\t\tcurrent = comps.get(cursor);\r\n+\t\t\treturn current.last();\r\n+\t\t}\r\n+\t\treturn false;\r\n \t}\r\n \r\n \tpublic void refreshRow() throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic boolean relative(int arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n+\t\tif (arg0 == 0)\r\n+\t\t\treturn current != null;\r\n+\t\tboolean forward = arg0 > 0;\r\n+\t\tfor (int i = 0; i < arg0; i++) {\r\n+\t\t\tif (forward) {\r\n+\t\t\t\tif (!next()) {\r\n+\t\t\t\t\treturn false;\r\n+\t\t\t\t}\r\n+\t\t\t} else {\r\n+\t\t\t\tif (!previous()) {\r\n+\t\t\t\t\treturn false;\r\n+\t\t\t\t}\r\n+\t\t\t}\r\n+\t\t}\r\n \t\treturn false;\r\n \t}\r\n \r\n \tpublic boolean rowDeleted() throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn false;\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic boolean rowInserted() throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn false;\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic boolean rowUpdated() throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn false;\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void setFetchDirection(int arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void setFetchSize(int arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tfor (ResultSet rs : comps)\r\n+\t\t\trs.setFetchSize(arg0);\r\n \t}\r\n \r\n \tpublic void updateArray(int arg0, Array arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateArray(String arg0, Array arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateAsciiStream(int arg0, InputStream arg1, int arg2)\r\n \t\t\tthrows SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateAsciiStream(String arg0, InputStream arg1, int arg2)\r\n \t\t\tthrows SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateBigDecimal(int arg0, BigDecimal arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateBigDecimal(String arg0, BigDecimal arg1)\r\n \t\t\tthrows SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateBinaryStream(int arg0, InputStream arg1, int arg2)\r\n \t\t\tthrows SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateBinaryStream(String arg0, InputStream arg1, int arg2)\r\n \t\t\tthrows SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateBlob(int arg0, Blob arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateBlob(String arg0, Blob arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateBoolean(int arg0, boolean arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateBoolean(String arg0, boolean arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateByte(int arg0, byte arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateByte(String arg0, byte arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateBytes(int arg0, byte[] arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateBytes(String arg0, byte[] arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateCharacterStream(int arg0, Reader arg1, int arg2)\r\n \t\t\tthrows SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateCharacterStream(String arg0, Reader arg1, int arg2)\r\n \t\t\tthrows SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateClob(int arg0, Clob arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateClob(String arg0, Clob arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateDate(int arg0, Date arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateDate(String arg0, Date arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateDouble(int arg0, double arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateDouble(String arg0, double arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateFloat(int arg0, float arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateFloat(String arg0, float arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateInt(int arg0, int arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateInt(String arg0, int arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateLong(int arg0, long arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateLong(String arg0, long arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateNull(int arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateNull(String arg0) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateObject(int arg0, Object arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateObject(String arg0, Object arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateObject(int arg0, Object arg1, int arg2)\r\n \t\t\tthrows SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateObject(String arg0, Object arg1, int arg2)\r\n \t\t\tthrows SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateRef(int arg0, Ref arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateRef(String arg0, Ref arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateRow() throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateShort(int arg0, short arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateShort(String arg0, short arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateString(int arg0, String arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateString(String arg0, String arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateTime(int arg0, Time arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateTime(String arg0, Time arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateTimestamp(int arg0, Timestamp arg1) throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic void updateTimestamp(String arg0, Timestamp arg1)\r\n \t\t\tthrows SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\r\n+\t\tthrow new UnsupportedOperationException();\r\n \t}\r\n \r\n \tpublic boolean wasNull() throws SQLException {\r\n-\t\t// TODO Auto-generated method stub\r\n-\t\treturn false;\r\n+\t\treturn current.wasNull();\r\n \t}\r\n-\r\n }\r"},{"sha":"8c51c8324bbcc4c40ca5360cc81da2adfa66534a","filename":"openjpa-slice/src/main/java/org/apache/openjpa/slice/jdbc/DistributedStoreQuery.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/3f47c13c68f439f274c735862184cfb19c37b151/openjpa-slice/src/main/java/org/apache/openjpa/slice/jdbc/DistributedStoreQuery.java","raw_url":"https://github.com/apache/openjpa/raw/3f47c13c68f439f274c735862184cfb19c37b151/openjpa-slice/src/main/java/org/apache/openjpa/slice/jdbc/DistributedStoreQuery.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-slice/src/main/java/org/apache/openjpa/slice/jdbc/DistributedStoreQuery.java?ref=3f47c13c68f439f274c735862184cfb19c37b151","patch":"@@ -147,10 +147,10 @@ public ResultObjectProvider executeQuery(StoreQuery q,\n         \t}\r\n         \tboolean[] ascending = getAscending(q);\r\n         \tboolean isAscending = ascending.length > 0;\r\n-        \tboolean isUnique    = q.getContext().isUnique();\r\n+        \tboolean isAggregate = q.getContext().isAggregate();\r\n         \tboolean hasRange    = q.getContext().getEndRange() != Long.MAX_VALUE;\r\n         \tResultObjectProvider result = null;\r\n-        \tif (isUnique) {\r\n+        \tif (isAggregate) {\r\n         \t    result = new UniqueResultObjectProvider(tmp, q, \r\n         \t            getQueryExpressions());\r\n         \t} else if (isAscending) {\r"},{"sha":"0b4ebd6b2162d355ebed010c44ff4f5ba470638f","filename":"openjpa-slice/src/main/java/org/apache/openjpa/slice/jdbc/UniqueResultObjectProvider.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/3f47c13c68f439f274c735862184cfb19c37b151/openjpa-slice/src/main/java/org/apache/openjpa/slice/jdbc/UniqueResultObjectProvider.java","raw_url":"https://github.com/apache/openjpa/raw/3f47c13c68f439f274c735862184cfb19c37b151/openjpa-slice/src/main/java/org/apache/openjpa/slice/jdbc/UniqueResultObjectProvider.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-slice/src/main/java/org/apache/openjpa/slice/jdbc/UniqueResultObjectProvider.java?ref=3f47c13c68f439f274c735862184cfb19c37b151","patch":"@@ -88,7 +88,8 @@ public boolean next() throws Exception {\n             boolean isAggregate = v.isAggregate();\r\n             String op = v.getClass().getSimpleName();\r\n             for (ResultObjectProvider rop:_rops) {\r\n-                rop.next();\r\n+                if (i == 0) \r\n+                \trop.next();\r\n                 Object[] row = (Object[]) rop.getResultObject();\r\n                 if (isAggregate) {\r\n                     if (COUNT.equals(op)) {\r"},{"sha":"39d73c310f8595c3aa45b6264930c61d201312a6","filename":"openjpa-slice/src/test/java/org/apache/openjpa/slice/TestBasic.java","status":"modified","additions":22,"deletions":6,"changes":28,"blob_url":"https://github.com/apache/openjpa/blob/3f47c13c68f439f274c735862184cfb19c37b151/openjpa-slice/src/test/java/org/apache/openjpa/slice/TestBasic.java","raw_url":"https://github.com/apache/openjpa/raw/3f47c13c68f439f274c735862184cfb19c37b151/openjpa-slice/src/test/java/org/apache/openjpa/slice/TestBasic.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-slice/src/test/java/org/apache/openjpa/slice/TestBasic.java?ref=3f47c13c68f439f274c735862184cfb19c37b151","patch":"@@ -47,7 +47,7 @@ public void setUp() throws Exception {\n     /**\r\n      * Persist N independent objects.\r\n      */\r\n-    List<PObject> create(int N) {\r\n+    List<PObject> createIndependentObjects(int N) {\r\n         List<PObject> pcs = new ArrayList<PObject>();\r\n         EntityManager em = emf.createEntityManager();\r\n         em.getTransaction().begin();\r\n@@ -65,16 +65,16 @@ public void setUp() throws Exception {\n     /**\r\n      * Create a single object.\r\n      */\r\n-    PObject create() {\r\n-        return create(1).get(0);\r\n+    PObject createIndependentObject() {\r\n+        return createIndependentObjects(1).get(0);\r\n     }\r\n \r\n     /**\r\n      * Delete a single object by EntityManager.remove()\r\n      */\r\n     public void testDelete() {\r\n         int N = 10;\r\n-        create(N);\r\n+        createIndependentObjects(N);\r\n         EntityManager em = emf.createEntityManager();\r\n         em.getTransaction().begin();\r\n         int before = count(PObject.class);\r\n@@ -106,7 +106,7 @@ public void testBulkDelete() {\n      * Store and find the same object.\r\n      */\r\n     public void testFind() {\r\n-        PObject pc = create();\r\n+        PObject pc = createIndependentObject();\r\n         int value = pc.getValue();\r\n \r\n         EntityManager em = emf.createEntityManager();\r\n@@ -181,7 +181,7 @@ public void testPersistConnectedObjectGraph() {\n      * from which the instance was fetched.\r\n      */\r\n     public void testMerge() {\r\n-        PObject pc = create(1).get(0);\r\n+        PObject pc = createIndependentObjects(1).get(0);\r\n         int value = pc.getValue();\r\n         pc.setValue(value + 1);\r\n         assertNotNull(pc);\r\n@@ -237,5 +237,21 @@ public void testUpdateReplicatedObjects() {\n         em.merge(india);\r\n         em.getTransaction().commit();\r\n     }\r\n+    \r\n+    public void testQuerySingleObject() {\r\n+    \tPObject pc = createIndependentObject();\r\n+    \tlong pid = pc.getId();\r\n+        int value = pc.getValue();\r\n+\r\n+        EntityManager em = emf.createEntityManager();\r\n+        em.getTransaction().begin();\r\n+        String jpql = \"select p from PObject p where p.id=:id\";\r\n+        PObject pc2 = (PObject)em.createQuery(jpql).setParameter(\"id\", pid)\r\n+        \t\t\t.getSingleResult();\r\n+        assertNotNull(pc2);\r\n+        assertNotEquals(pc, pc2);\r\n+        assertEquals(pc.getId(), pc2.getId());\r\n+        assertEquals(value, pc2.getValue());\r\n+    }\r\n \r\n }\r"},{"sha":"09de0ca0fa405b00a06f1b792a392a54e8cc0ef1","filename":"openjpa-slice/src/test/java/org/apache/openjpa/slice/TestQuery.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/3f47c13c68f439f274c735862184cfb19c37b151/openjpa-slice/src/test/java/org/apache/openjpa/slice/TestQuery.java","raw_url":"https://github.com/apache/openjpa/raw/3f47c13c68f439f274c735862184cfb19c37b151/openjpa-slice/src/test/java/org/apache/openjpa/slice/TestQuery.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-slice/src/test/java/org/apache/openjpa/slice/TestQuery.java?ref=3f47c13c68f439f274c735862184cfb19c37b151","patch":"@@ -85,12 +85,17 @@ public void testAggregateQuery() {\n         Object max   = em.createQuery(\"SELECT MAX(p.value) FROM PObject p\").getSingleResult();\r\n         Object min   = em.createQuery(\"SELECT MIN(p.value) FROM PObject p\").getSingleResult();\r\n         Object sum   = em.createQuery(\"SELECT SUM(p.value) FROM PObject p\").getSingleResult();\r\n+        Object minmax   = em.createQuery(\"SELECT MIN(p.value),MAX(p.value) FROM PObject p\").getSingleResult();\r\n+        Object min1 = ((Object[])minmax)[0];\r\n+        Object max1 = ((Object[])minmax)[1];\r\n         em.getTransaction().rollback();\r\n         \r\n         assertEquals(POBJECT_COUNT, ((Number)count).intValue());\r\n         assertEquals(VALUE_MAX, ((Number)max).intValue());\r\n         assertEquals(VALUE_MIN, ((Number)min).intValue());\r\n         assertEquals((VALUE_MIN+VALUE_MAX)*POBJECT_COUNT, 2*((Number)sum).intValue());\r\n+        assertEquals(min, min1);\r\n+        assertEquals(max, max1);\r\n     }\r\n     \r\n     public void testSetMaxResult() {\r"}]}

