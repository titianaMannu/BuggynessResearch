{"sha":"3f79c25dfcfae0cd6d3de56e72bd6a3602d671f6","node_id":"MDY6Q29tbWl0MjA2MzY0OjNmNzljMjVkZmNmYWUwY2Q2ZDNkZTU2ZTcyYmQ2YTM2MDJkNjcxZjY=","commit":{"author":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2010-06-18T00:47:25Z"},"committer":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2010-06-18T00:47:25Z"},"message":"OPENJPA-1697: A EnumValueHandler strategy along with XmlType annotation incorrectly mapped to XmlType in create table DDL\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@955806 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"b0e2788b01250dcdd18e6220742b2e795c70b657","url":"https://api.github.com/repos/apache/openjpa/git/trees/b0e2788b01250dcdd18e6220742b2e795c70b657"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/3f79c25dfcfae0cd6d3de56e72bd6a3602d671f6","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/3f79c25dfcfae0cd6d3de56e72bd6a3602d671f6","html_url":"https://github.com/apache/openjpa/commit/3f79c25dfcfae0cd6d3de56e72bd6a3602d671f6","comments_url":"https://api.github.com/repos/apache/openjpa/commits/3f79c25dfcfae0cd6d3de56e72bd6a3602d671f6/comments","author":null,"committer":null,"parents":[{"sha":"eac9c66b74a1ef21bf3f430ed84f83965bdc3a4f","url":"https://api.github.com/repos/apache/openjpa/commits/eac9c66b74a1ef21bf3f430ed84f83965bdc3a4f","html_url":"https://github.com/apache/openjpa/commit/eac9c66b74a1ef21bf3f430ed84f83965bdc3a4f"}],"stats":{"total":234,"additions":117,"deletions":117},"files":[{"sha":"4cbff51141ebed5615b06e53597a2b00f592dfa9","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/mapping/Authority.java","status":"modified","additions":79,"deletions":79,"changes":158,"blob_url":"https://github.com/apache/openjpa/blob/3f79c25dfcfae0cd6d3de56e72bd6a3602d671f6/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/mapping/Authority.java","raw_url":"https://github.com/apache/openjpa/raw/3f79c25dfcfae0cd6d3de56e72bd6a3602d671f6/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/mapping/Authority.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/mapping/Authority.java?ref=3f79c25dfcfae0cd6d3de56e72bd6a3602d671f6","patch":"@@ -1,79 +1,79 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.    \n- */\n-package org.apache.openjpa.persistence.jdbc.mapping;\n-\n-import javax.persistence.Column;\n-import javax.persistence.Entity;\n-import javax.persistence.EnumType;\n-import javax.persistence.Enumerated;\n-import javax.persistence.GeneratedValue;\n-import javax.persistence.GenerationType;\n-import javax.persistence.Id;\n-import javax.persistence.NamedQueries;\n-import javax.persistence.NamedQuery;\n-import javax.persistence.Table;\n-import javax.xml.bind.annotation.XmlEnum;\n-import javax.xml.bind.annotation.XmlType;\n-\n-import org.apache.openjpa.persistence.Persistent;\n-import org.apache.openjpa.persistence.jdbc.Strategy;\n-\n-@Entity\n-@Table(name=\"authority\")\n-@NamedQueries( {\n-       @NamedQuery(name = \"AllIonAuthorities\", query = \"SELECT x FROM IonAuthority x\")\n-})\n-public class Authority {\n-@Id\n-       @GeneratedValue(strategy = GenerationType.AUTO)\n-       @Column(name = \"ID\")\n-       private Integer id;\n-\n-       @Enumerated( EnumType.STRING )\n-       @Column(nullable=false, length=128, updatable=true, insertable=true)\n-       @Persistent\n-       @Strategy(\"org.apache.openjpa.jdbc.meta.strats.EnumValueHandler\")\n-       private AuthorityValues authorityName;\n-\n-       \n-       @XmlType(name = \"IonAuthorityValues\")\n-       @XmlEnum\n-       public enum AuthorityValues {\n-\n-          AUTH1,\n-          AUTH2,\n-       }\n-\n-       public Authority() {}\n-       public Authority(AuthorityValues auth) {\n-           authorityName = auth;\n-       }\n-\n-       public Integer getId() {\n-           return id;\n-       }\n-\n-       public void setAuthorityName(AuthorityValues auth) {\n-           authorityName = auth;\n-       }\n-       \n-       public AuthorityValues getAuthorityName() {\n-           return authorityName;\n-       }\n-}\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.    \r\n+ */\r\n+package org.apache.openjpa.persistence.jdbc.mapping;\r\n+\r\n+import javax.persistence.Column;\r\n+import javax.persistence.Entity;\r\n+import javax.persistence.EnumType;\r\n+import javax.persistence.Enumerated;\r\n+import javax.persistence.GeneratedValue;\r\n+import javax.persistence.GenerationType;\r\n+import javax.persistence.Id;\r\n+import javax.persistence.NamedQueries;\r\n+import javax.persistence.NamedQuery;\r\n+import javax.persistence.Table;\r\n+import javax.xml.bind.annotation.XmlEnum;\r\n+import javax.xml.bind.annotation.XmlType;\r\n+\r\n+import org.apache.openjpa.persistence.Persistent;\r\n+import org.apache.openjpa.persistence.jdbc.Strategy;\r\n+\r\n+@Entity\r\n+@Table(name=\"authority\")\r\n+@NamedQueries( {\r\n+       @NamedQuery(name = \"AllIonAuthorities\", query = \"SELECT x FROM IonAuthority x\")\r\n+})\r\n+public class Authority {\r\n+@Id\r\n+       @GeneratedValue(strategy = GenerationType.AUTO)\r\n+       @Column(name = \"ID\")\r\n+       private Integer id;\r\n+\r\n+       @Enumerated( EnumType.STRING )\r\n+       @Column(nullable=false, length=128, updatable=true, insertable=true)\r\n+       @Persistent\r\n+       @Strategy(\"org.apache.openjpa.jdbc.meta.strats.EnumValueHandler\")\r\n+       private AuthorityValues authorityName;\r\n+\r\n+       \r\n+       @XmlType(name = \"IonAuthorityValues\")\r\n+       @XmlEnum\r\n+       public enum AuthorityValues {\r\n+\r\n+          AUTH1,\r\n+          AUTH2,\r\n+       }\r\n+\r\n+       public Authority() {}\r\n+       public Authority(AuthorityValues auth) {\r\n+           authorityName = auth;\r\n+       }\r\n+\r\n+       public Integer getId() {\r\n+           return id;\r\n+       }\r\n+\r\n+       public void setAuthorityName(AuthorityValues auth) {\r\n+           authorityName = auth;\r\n+       }\r\n+       \r\n+       public AuthorityValues getAuthorityName() {\r\n+           return authorityName;\r\n+       }\r\n+}\r"},{"sha":"75e4f79235c4aa65963b193f36a190daa0b3859f","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/mapping/TestEnumXmlTypeMapping.java","status":"modified","additions":38,"deletions":38,"changes":76,"blob_url":"https://github.com/apache/openjpa/blob/3f79c25dfcfae0cd6d3de56e72bd6a3602d671f6/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/mapping/TestEnumXmlTypeMapping.java","raw_url":"https://github.com/apache/openjpa/raw/3f79c25dfcfae0cd6d3de56e72bd6a3602d671f6/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/mapping/TestEnumXmlTypeMapping.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/mapping/TestEnumXmlTypeMapping.java?ref=3f79c25dfcfae0cd6d3de56e72bd6a3602d671f6","patch":"@@ -1,38 +1,38 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one\n- * or more contributor license agreements.  See the NOTICE file\n- * distributed with this work for additional information\n- * regarding copyright ownership.  The ASF licenses this file\n- * to you under the Apache License, Version 2.0 (the\n- * \"License\"); you may not use this file except in compliance\n- * with the License.  You may obtain a copy of the License at\n- *\n- * http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing,\n- * software distributed under the License is distributed on an\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n- * KIND, either express or implied.  See the License for the\n- * specific language governing permissions and limitations\n- * under the License.    \n- */\n-package org.apache.openjpa.persistence.jdbc.mapping;\n-\n-import org.apache.openjpa.jdbc.meta.ClassMapping;\n-import org.apache.openjpa.jdbc.meta.FieldMapping;\n-import org.apache.openjpa.jdbc.schema.Column;\n-import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n-\n-public class TestEnumXmlTypeMapping extends SingleEMFTestCase {\n-    \n-    public void setUp() { \n-        setUp(Authority.class, DROP_TABLES);\n-    }\n-    \n-    public void testEnumXmlType() {\n-        ClassMapping mapping = getMapping(Authority.class);\n-        FieldMapping fm = mapping.getFieldMapping(\"authorityName\");\n-        Column[] cols = fm.getColumns();\n-        assertFalse(cols[0].isXML());\n-    }\n-}\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.    \r\n+ */\r\n+package org.apache.openjpa.persistence.jdbc.mapping;\r\n+\r\n+import org.apache.openjpa.jdbc.meta.ClassMapping;\r\n+import org.apache.openjpa.jdbc.meta.FieldMapping;\r\n+import org.apache.openjpa.jdbc.schema.Column;\r\n+import org.apache.openjpa.persistence.test.SingleEMFTestCase;\r\n+\r\n+public class TestEnumXmlTypeMapping extends SingleEMFTestCase {\r\n+    \r\n+    public void setUp() { \r\n+        setUp(Authority.class, DROP_TABLES);\r\n+    }\r\n+    \r\n+    public void testEnumXmlType() {\r\n+        ClassMapping mapping = getMapping(Authority.class);\r\n+        FieldMapping fm = mapping.getFieldMapping(\"authorityName\");\r\n+        Column[] cols = fm.getColumns();\r\n+        assertFalse(cols[0].isXML());\r\n+    }\r\n+}\r"}]}

