{"sha":"4083018e380a5c8a08323a43dc49fa8dda3635e0","node_id":"MDY6Q29tbWl0MjA2MzY0OjQwODMwMThlMzgwYTVjOGEwODMyM2E0M2RjNDlmYThkZGEzNjM1ZTA=","commit":{"author":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-08-26T16:10:55Z"},"committer":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-08-26T16:10:55Z"},"message":"OPENJPA-1266: no need to cast for JDBC escape syntax for date, time, timestamp in DB2\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@808086 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"de80ef713fe2539177e01cd4333c297e514dfdfc","url":"https://api.github.com/repos/apache/openjpa/git/trees/de80ef713fe2539177e01cd4333c297e514dfdfc"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/4083018e380a5c8a08323a43dc49fa8dda3635e0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/4083018e380a5c8a08323a43dc49fa8dda3635e0","html_url":"https://github.com/apache/openjpa/commit/4083018e380a5c8a08323a43dc49fa8dda3635e0","comments_url":"https://api.github.com/repos/apache/openjpa/commits/4083018e380a5c8a08323a43dc49fa8dda3635e0/comments","author":null,"committer":null,"parents":[{"sha":"e19c75a9c3e067ff75e6bd7444d8e18785418036","url":"https://api.github.com/repos/apache/openjpa/commits/e19c75a9c3e067ff75e6bd7444d8e18785418036","html_url":"https://github.com/apache/openjpa/commit/e19c75a9c3e067ff75e6bd7444d8e18785418036"}],"stats":{"total":10,"additions":8,"deletions":2},"files":[{"sha":"547fd1f8609d3fa9941fd3edfc8c737cea9fafec","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java","status":"modified","additions":8,"deletions":2,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/4083018e380a5c8a08323a43dc49fa8dda3635e0/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java","raw_url":"https://github.com/apache/openjpa/raw/4083018e380a5c8a08323a43dc49fa8dda3635e0/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java?ref=4083018e380a5c8a08323a43dc49fa8dda3635e0","patch":"@@ -44,6 +44,7 @@\n import org.apache.openjpa.jdbc.schema.Table;\n import org.apache.openjpa.kernel.Filters;\n import org.apache.openjpa.kernel.MixedLockLevels;\n+import org.apache.openjpa.kernel.exps.Literal;\n import org.apache.openjpa.lib.util.Localizer;\n import org.apache.openjpa.meta.JavaTypes;\n import org.apache.openjpa.util.OpenJPAException;\n@@ -195,14 +196,19 @@ protected void appendSelect(SQLBuffer selectSQL, Object alias, Select sel,\n         int idx) {\n         // if this is a literal value, add a cast...\n         Object val = sel.getSelects().get(idx);\n-        if (val instanceof Lit)\n+        boolean toCast = (val instanceof Lit) && \n+            ((Lit)val).getParseType() != Literal.TYPE_DATE && \n+            ((Lit)val).getParseType() != Literal.TYPE_TIME &&\n+            ((Lit)val).getParseType() != Literal.TYPE_TIMESTAMP;\n+        \n+        if (toCast) \n             selectSQL.append(\"CAST(\");\n \n         // ... and add the select per super's behavior...\n         super.appendSelect(selectSQL, alias, sel, idx);\n \n         // ... and finish the cast\n-        if (val instanceof Lit) {\n+        if (toCast) {\n             Class c = ((Lit) val).getType();\n             int javaTypeCode = JavaTypes.getTypeCode(c);\n             int jdbcTypeCode = getJDBCType(javaTypeCode, false);"}]}

