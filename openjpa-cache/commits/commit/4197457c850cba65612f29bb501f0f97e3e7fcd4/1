{"sha":"4197457c850cba65612f29bb501f0f97e3e7fcd4","node_id":"MDY6Q29tbWl0MjA2MzY0OjQxOTc0NTdjODUwY2JhNjU2MTJmMjliYjUwMWYwZjk3ZTNlN2ZjZDQ=","commit":{"author":{"name":"Fay Wang","email":"faywang@apache.org","date":"2010-01-28T00:04:31Z"},"committer":{"name":"Fay Wang","email":"faywang@apache.org","date":"2010-01-28T00:04:31Z"},"message":"OPENJPA-1485: isLoaded util method should return true for an entity when an unloaded basic type is not in the fetch plan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@903914 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"7932c65b00edeb6bd7348028be4e8b015e21637c","url":"https://api.github.com/repos/apache/openjpa/git/trees/7932c65b00edeb6bd7348028be4e8b015e21637c"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/4197457c850cba65612f29bb501f0f97e3e7fcd4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/4197457c850cba65612f29bb501f0f97e3e7fcd4","html_url":"https://github.com/apache/openjpa/commit/4197457c850cba65612f29bb501f0f97e3e7fcd4","comments_url":"https://api.github.com/repos/apache/openjpa/commits/4197457c850cba65612f29bb501f0f97e3e7fcd4/comments","author":null,"committer":null,"parents":[{"sha":"b3a931f4b0994d539e2e2dca98fa3a6a6914ee65","url":"https://api.github.com/repos/apache/openjpa/commits/b3a931f4b0994d539e2e2dca98fa3a6a6914ee65","html_url":"https://github.com/apache/openjpa/commit/b3a931f4b0994d539e2e2dca98fa3a6a6914ee65"}],"stats":{"total":26,"additions":25,"deletions":1},"files":[{"sha":"3310e0538d744e8bccefa3fc2989a22f699c0546","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/4197457c850cba65612f29bb501f0f97e3e7fcd4/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/4197457c850cba65612f29bb501f0f97e3e7fcd4/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java?ref=4197457c850cba65612f29bb501f0f97e3e7fcd4","patch":"@@ -3376,4 +3376,8 @@ PersistenceCapable readPC(ObjectInputStream in)\n     public List<FieldMetaData> getMappedByIdFields() {\n         return _mappedByIdFields;\n     }\n+    \n+    public boolean requiresFetch(FieldMetaData fmd) {\n+        return (_broker.getFetchConfiguration().requiresFetch(fmd) != FetchConfiguration.FETCH_NONE);\n+    }\n }"},{"sha":"ab38e93c563add278448282872df63b621b2a7fb","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/util/TestPersistenceUnitUtil.java","status":"modified","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/apache/openjpa/blob/4197457c850cba65612f29bb501f0f97e3e7fcd4/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/util/TestPersistenceUnitUtil.java","raw_url":"https://github.com/apache/openjpa/raw/4197457c850cba65612f29bb501f0f97e3e7fcd4/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/util/TestPersistenceUnitUtil.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/util/TestPersistenceUnitUtil.java?ref=4197457c850cba65612f29bb501f0f97e3e7fcd4","patch":"@@ -33,6 +33,7 @@\n import javax.persistence.spi.PersistenceProvider;\n import javax.persistence.spi.ProviderUtil;\n \n+import org.apache.openjpa.persistence.OpenJPAEntityManager;\n import org.apache.openjpa.persistence.OpenJPAEntityManagerFactorySPI;\n import org.apache.openjpa.persistence.OpenJPAPersistence;\n import org.apache.openjpa.persistence.PersistenceProviderImpl;\n@@ -425,6 +426,24 @@ public void testSetNullEagerRelationship() {\n         em.close();\n     }\n \n+    public void testBasicTypeNotLoaded() {\n+        PersistenceUnitUtil puu = emf.getPersistenceUnitUtil();\n+        EntityManager em = emf.createEntityManager();\n+        EagerEntity ee = createEagerEntity();\n+        int id = ee.getId();\n+        \n+        em.getTransaction().begin();\n+        em.persist(ee);\n+        em.getTransaction().commit();\n+        em.clear();\n+        // name is not eagerly loaded, only eagerEmbed is eagerly loaded\n+        OpenJPAEntityManager kem = OpenJPAPersistence.cast(em);\n+        kem.getFetchPlan().resetFetchGroups().removeFetchGroup(\"default\")\n+            .addField(EagerEntity.class, \"eagerEmbed\");\n+        ee = em.find(EagerEntity.class, id);\n+        assertEquals(true, puu.isLoaded(ee));\n+    }\n+\n     private EagerEntity createEagerEntity() {\n         EagerEntity ee = new EagerEntity();\n         ee.setId(new Random().nextInt());"},{"sha":"e3cc24b49d660d73d4b8f4642d996b44b122807e","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAPersistenceUtil.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/4197457c850cba65612f29bb501f0f97e3e7fcd4/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAPersistenceUtil.java","raw_url":"https://github.com/apache/openjpa/raw/4197457c850cba65612f29bb501f0f97e3e7fcd4/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAPersistenceUtil.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAPersistenceUtil.java?ref=4197457c850cba65612f29bb501f0f97e3e7fcd4","patch":"@@ -29,6 +29,7 @@\n import org.apache.openjpa.enhance.StateManager;\n import org.apache.openjpa.kernel.Broker;\n import org.apache.openjpa.kernel.OpenJPAStateManager;\n+import org.apache.openjpa.kernel.StateManagerImpl;\n import org.apache.openjpa.meta.FieldMetaData;\n import org.apache.openjpa.meta.JavaTypes;\n import org.apache.openjpa.meta.ValueMetaData;\n@@ -161,7 +162,7 @@ private static LoadState isLoaded(OpenJPAStateManager sm, String attr,\n             if (fmds != null && fmds.length > 0) {\n                 pcs = addToLoadSet(pcs, sm);\n                 for (FieldMetaData fmd : fmds) {\n-                    if (fmd.isInDefaultFetchGroup()) {\n+                    if (((StateManagerImpl)sm).requiresFetch(fmd)) {\n                         if (!isLoadedField(sm, fmd, pcs)) {\n                             isLoaded = false;\n                             break;"}]}

