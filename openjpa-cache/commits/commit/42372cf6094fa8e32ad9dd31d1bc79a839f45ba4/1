{"sha":"42372cf6094fa8e32ad9dd31d1bc79a839f45ba4","node_id":"MDY6Q29tbWl0MjA2MzY0OjQyMzcyY2Y2MDk0ZmE4ZTMyYWQ5ZGQzMWQxYmM3OWE4MzlmNDViYTQ=","commit":{"author":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2012-03-29T17:50:19Z"},"committer":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2012-03-29T17:50:19Z"},"message":"OPENJPA-2163 Simplify configuration: move SingletonLifecycleEventManager from property to Compatibility option.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1307018 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c35cd8a6b4adb510de1f86f186c527f21b267c55","url":"https://api.github.com/repos/apache/openjpa/git/trees/c35cd8a6b4adb510de1f86f186c527f21b267c55"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/42372cf6094fa8e32ad9dd31d1bc79a839f45ba4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/42372cf6094fa8e32ad9dd31d1bc79a839f45ba4","html_url":"https://github.com/apache/openjpa/commit/42372cf6094fa8e32ad9dd31d1bc79a839f45ba4","comments_url":"https://api.github.com/repos/apache/openjpa/commits/42372cf6094fa8e32ad9dd31d1bc79a839f45ba4/comments","author":null,"committer":null,"parents":[{"sha":"284b6e5ceda27eb678399930bc49e028e2e2a39b","url":"https://api.github.com/repos/apache/openjpa/commits/284b6e5ceda27eb678399930bc49e028e2e2a39b","html_url":"https://github.com/apache/openjpa/commit/284b6e5ceda27eb678399930bc49e028e2e2a39b"}],"stats":{"total":113,"additions":27,"deletions":86},"files":[{"sha":"1ad8ed8a43add58074a80d6e5f9acb5768356368","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/conf/Compatibility.java","status":"modified","additions":18,"deletions":1,"changes":19,"blob_url":"https://github.com/apache/openjpa/blob/42372cf6094fa8e32ad9dd31d1bc79a839f45ba4/openjpa-kernel/src/main/java/org/apache/openjpa/conf/Compatibility.java","raw_url":"https://github.com/apache/openjpa/raw/42372cf6094fa8e32ad9dd31d1bc79a839f45ba4/openjpa-kernel/src/main/java/org/apache/openjpa/conf/Compatibility.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/conf/Compatibility.java?ref=42372cf6094fa8e32ad9dd31d1bc79a839f45ba4","patch":"@@ -74,7 +74,7 @@\n     private boolean _useListAttributeForArrays = false; \n     private boolean _metaFactoriesAreStrict = false; \n     private boolean _resetFlushFlagForCascadePersist = true;//OPENJPA-2051\n-\n+    private boolean _singletonLifecycleEventManager = false;\n     \n     /**\n      * Whether to require exact identity value types when creating object\n@@ -696,4 +696,21 @@ public boolean getResetFlushFlagForCascadePersist(){\n     public void setResetFlushFlagForCascadePersist(boolean b){\n         _resetFlushFlagForCascadePersist = b;\n     }\n+\n+    /**\n+     * Returns true if life cycle event manager is a singleton configuration.\n+     */\n+    public boolean isSingletonLifecycleEventManager() {\n+        return _singletonLifecycleEventManager;\n+    }\n+\n+    /**\n+     * This property set whether each EntityManager has its own life cycle event manager.\n+       By default, each EntityManager only fires events to the registered listeners to the entities\n+       it manages. If the life cycle event manager is a singleton, events will be fired to listeners\n+       registered to all instances of EntityManager in the same persistence unit.\n+     */\n+    public void setSingletonLifecycleEventManager(boolean singleton) {\n+        _singletonLifecycleEventManager = singleton;\n+    }\n }"},{"sha":"99f82478b06ef6fcac0e8b0f2277d904f2b513b6","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfiguration.java","status":"modified","additions":0,"deletions":10,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/42372cf6094fa8e32ad9dd31d1bc79a839f45ba4/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfiguration.java","raw_url":"https://github.com/apache/openjpa/raw/42372cf6094fa8e32ad9dd31d1bc79a839f45ba4/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfiguration.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfiguration.java?ref=42372cf6094fa8e32ad9dd31d1bc79a839f45ba4","patch":"@@ -1737,16 +1737,6 @@\n      */\n     public void setLifecycleEventManager(String eventMgr);\n \n-    /**\n-     * Returns if lifecycle event manager is a singlton configuration.\n-     */\n-    public boolean isSingletonLifecycleEventManager();\n-\n-    /**\n-     * Sets the lifecycle event manager singleton state.\n-     */\n-    public void setSingletonLifecycleEventManager(boolean singleton);\n-\n     /**\n      * Gets the validation groups for pre-persist\n      * "},{"sha":"d3a186c8fef4097e2be59cf71f6c4de6cb0ca3a5","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfigurationImpl.java","status":"modified","additions":5,"deletions":46,"changes":51,"blob_url":"https://github.com/apache/openjpa/blob/42372cf6094fa8e32ad9dd31d1bc79a839f45ba4/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfigurationImpl.java","raw_url":"https://github.com/apache/openjpa/raw/42372cf6094fa8e32ad9dd31d1bc79a839f45ba4/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfigurationImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfigurationImpl.java?ref=42372cf6094fa8e32ad9dd31d1bc79a839f45ba4","patch":"@@ -167,8 +167,7 @@\n     public StringValue validationMode;\n     public ObjectValue validationFactory;\n     public ObjectValue validator;\n-    public LEMValue lifecycleEventManager;\n-    public SingletonLEMValue singletonLifecycleEventManager;\n+    public ObjectValue lifecycleEventManager;\n     public StringValue validationGroupPrePersist;\n     public StringValue validationGroupPreUpdate;\n     public StringValue validationGroupPreRemove;\n@@ -574,7 +573,7 @@ public OpenJPAConfigurationImpl(boolean derivations, boolean loadGlobals) {\n         queryTimeout.setDefault(\"-1\");\n         queryTimeout.setDynamic(true);\n       \n-        lifecycleEventManager = addValue(new LEMValue(\"LifecycleEventManager\", false));\n+        lifecycleEventManager = addPlugin(\"LifecycleEventManager\", true);\n         aliases = new String[] {\n             \"default\", LifecycleEventManager.class.getName(),\n             \"validating\", ValidatingLifecycleEventManager.class.getName(),\n@@ -584,11 +583,6 @@ public OpenJPAConfigurationImpl(boolean derivations, boolean loadGlobals) {\n         lifecycleEventManager.setString(aliases[0]);\n         lifecycleEventManager.setInstantiatingGetter(\"getLifecycleEventManagerInstance\");\n \n-        singletonLifecycleEventManager = (SingletonLEMValue) addValue(new SingletonLEMValue(\n-                \"SingletonLifecycleEventManager\"));\n-        singletonLifecycleEventManager.setDefault(\"false\");\n-        singletonLifecycleEventManager.set(false);\n-\n         dynamicEnhancementAgent  = addBoolean(\"DynamicEnhancementAgent\");\n         dynamicEnhancementAgent.setDefault(\"true\");\n         dynamicEnhancementAgent.set(true);\n@@ -1754,9 +1748,9 @@ public String getLifecycleEventManager() {\n     }\n \n     public LifecycleEventManager getLifecycleEventManagerInstance() {\n-        LifecycleEventManager lem = (LifecycleEventManager)\n-            lifecycleEventManager.get();\n-        if (lem == null) {\n+        LifecycleEventManager lem = null;\n+        if (!getCompatibilityInstance().isSingletonLifecycleEventManager() ||\n+                (lem = (LifecycleEventManager)lifecycleEventManager.get()) == null) {\n             lem = (LifecycleEventManager)lifecycleEventManager\n                 .instantiate(LifecycleEventManager.class, this);\n         }\n@@ -1777,41 +1771,6 @@ public void setLifecycleEventManager(String lem) {\n         }\n     }\n \n-    class LEMValue extends PluginValue {\n-        boolean singleton;\n-\n-        public LEMValue(String prop, boolean singleton) {\n-            super(prop, true);\n-            this.singleton = singleton;\n-        }\n-\n-        public Object get() {\n-            return this.singleton ? super.get() : null;\n-        }\n-    }\n-\n-    public boolean isSingletonLifecycleEventManager() {\n-        return singletonLifecycleEventManager.get();\n-    }\n-\n-    public void setSingletonLifecycleEventManager(boolean singleton) {\n-        singletonLifecycleEventManager.set(singleton);\n-    }\n-\n-    class SingletonLEMValue extends BooleanValue {\n-\n-        public SingletonLEMValue(String prop) {\n-            super(prop);\n-        }\n-\n-        public void set(boolean value) {\n-            super.set(value);\n-            if (value && !lifecycleEventManager.singleton) {\n-                lifecycleEventManager.singleton = true;\n-            }\n-        }\n-    }\n-\n     public boolean getDynamicEnhancementAgent() {\n         return dynamicEnhancementAgent.get();\n     }"},{"sha":"29fc7eead14cc683586e5a29f6af7ccf1b245cb5","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/callbacks/TestMultiEmEntityListeners.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/42372cf6094fa8e32ad9dd31d1bc79a839f45ba4/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/callbacks/TestMultiEmEntityListeners.java","raw_url":"https://github.com/apache/openjpa/raw/42372cf6094fa8e32ad9dd31d1bc79a839f45ba4/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/callbacks/TestMultiEmEntityListeners.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/callbacks/TestMultiEmEntityListeners.java?ref=42372cf6094fa8e32ad9dd31d1bc79a839f45ba4","patch":"@@ -26,7 +26,7 @@\n \n     public void setUp() {\n         setUp(CLEAR_TABLES, ListenerInEntity.class, AddListenerEntity.class\n-//                , \"openjpa.SingletonLifecycleEventManager\", \"true\"\n+//                , \"openjpa.Compatibility\", \"SingletonLifecycleEventManager=true\"\n             );\n     }\n "},{"sha":"783be5c831c8c264c578fcd0b97c7965430c1217","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/validation/TestValidationMode.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/42372cf6094fa8e32ad9dd31d1bc79a839f45ba4/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/validation/TestValidationMode.java","raw_url":"https://github.com/apache/openjpa/raw/42372cf6094fa8e32ad9dd31d1bc79a839f45ba4/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/validation/TestValidationMode.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/validation/TestValidationMode.java?ref=42372cf6094fa8e32ad9dd31d1bc79a839f45ba4","patch":"@@ -258,7 +258,8 @@ public void testUniqueLifecycleManager() {\n         // create our EMF\n         Map<String,String> prop = new HashMap<String,String>();\n         prop.put(\"openjpa.jdbc.SynchronizeMappings\", \"buildSchema(ForeignKeys=true)\");\n-//        prop.put(\"openjpa.SingletonLifecycleEventManager\", \"true\");\n+//        prop.put(\"openjpa.Compatibility\", \"SingletonLifecycleEventManager=true\");\n+\n         OpenJPAEntityManagerFactorySPI emf = (OpenJPAEntityManagerFactorySPI)\n             OpenJPAPersistence.createEntityManagerFactory(\n                 \"simple\","},{"sha":"69f74a633c3d32122238f67230dc90c870e23ea2","filename":"openjpa-project/src/doc/manual/migration_considerations.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/42372cf6094fa8e32ad9dd31d1bc79a839f45ba4/openjpa-project/src/doc/manual/migration_considerations.xml","raw_url":"https://github.com/apache/openjpa/raw/42372cf6094fa8e32ad9dd31d1bc79a839f45ba4/openjpa-project/src/doc/manual/migration_considerations.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/migration_considerations.xml?ref=42372cf6094fa8e32ad9dd31d1bc79a839f45ba4","patch":"@@ -426,7 +426,7 @@\n                             <para> Regenerate the canonical metamodel classes</para>\n                         </listitem>\n                         <listitem>\n-                            <para> Set the Compatibility property <literal>UseListAttributeForArrays</literal> to <literal>true</literal>in persistence.xml \n+                            <para> Set the Compatibility property <literal>UseListAttributeForArrays</literal> to <literal>true</literal> in persistence.xml \n                                 <programlisting> &lt;property name=\"openjpa.Compatibility\" value=\"UseListAttributeForArrays=true\"/&gt;</programlisting>\n                             </para>\n                         </listitem>"},{"sha":"04dea67bbe10c3e61480a07d7b9e038690b6960e","filename":"openjpa-project/src/doc/manual/ref_guide_conf.xml","status":"modified","additions":0,"deletions":26,"changes":26,"blob_url":"https://github.com/apache/openjpa/blob/42372cf6094fa8e32ad9dd31d1bc79a839f45ba4/openjpa-project/src/doc/manual/ref_guide_conf.xml","raw_url":"https://github.com/apache/openjpa/raw/42372cf6094fa8e32ad9dd31d1bc79a839f45ba4/openjpa-project/src/doc/manual/ref_guide_conf.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_conf.xml?ref=42372cf6094fa8e32ad9dd31d1bc79a839f45ba4","patch":"@@ -3279,32 +3279,6 @@ system sequence. See <xref linkend=\"ref_guide_sequence\"/> for more\n information.\n             </para>\n         </section>\n-        <section id=\"openjpa.SingletonLifecycleEventManager\">\n-            <title>openjpa.SingletonLifecycleEventManager</title>\n-            <para>\n-                <emphasis role=\"bold\">Property name: </emphasis>\n-                <literal>openjpa.SingletonLifecycleEventManager</literal>\n-            </para>\n-            <para>\n-                 <emphasis role=\"bold\">Configuration API: </emphasis>\n-                 <ulink url=\"../javadoc/org/apache/openjpa/conf/OpenJPAConfiguration.html#isSingletonLifecycleEventManager()\">org.apache.openjpa.conf.OpenJPAConfiguration.isSingletonLifecycleEventManager</ulink>\n-            </para>\n-            <para>\n-                <emphasis role=\"bold\">Resource adaptor config property:</emphasis>\n-                SingletonLifecycleEventManager\n-            </para>\n-            <para>\n-                <emphasis role=\"bold\">Default: </emphasis>\n-                <literal>false</literal>                \n-            </para>\n-            <para>\n-                <emphasis role=\"bold\">Description:</emphasis>\n-                This property controls whether each EntityManager has its own life cycle event manager.\n-                By default, each EntityManager only fires events to the registered listeners to the entities\n-                it manages. If the life cycle event manager is a singleton, events will be fired to listeners\n-                registered to all instances of EntityManager in the same persistence unit.\n-            </para>\n-        </section>\n         <section id=\"openjpa.Specification\">\n             <title>\n                 openjpa.Specification"}]}

