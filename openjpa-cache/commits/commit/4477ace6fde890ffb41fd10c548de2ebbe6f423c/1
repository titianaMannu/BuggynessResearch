{"sha":"4477ace6fde890ffb41fd10c548de2ebbe6f423c","node_id":"MDY6Q29tbWl0MjA2MzY0OjQ0NzdhY2U2ZmRlODkwZmZiNDFmZDEwYzU0OGRlMmViYmU2ZjQyM2M=","commit":{"author":{"name":"Will Dazey","email":"dazeydev@apache.org","date":"2018-07-02T21:07:29Z"},"committer":{"name":"Will Dazey","email":"dazeydev@apache.org","date":"2018-07-02T21:07:29Z"},"message":"OPENJPA-2704: The openjpa.jdbc.Schema no longer overrides orm.xml default\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1834900 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0a7f87d0c50274ef2c9c6782877ac9e5cfedb92f","url":"https://api.github.com/repos/apache/openjpa/git/trees/0a7f87d0c50274ef2c9c6782877ac9e5cfedb92f"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/4477ace6fde890ffb41fd10c548de2ebbe6f423c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/4477ace6fde890ffb41fd10c548de2ebbe6f423c","html_url":"https://github.com/apache/openjpa/commit/4477ace6fde890ffb41fd10c548de2ebbe6f423c","comments_url":"https://api.github.com/repos/apache/openjpa/commits/4477ace6fde890ffb41fd10c548de2ebbe6f423c/comments","author":null,"committer":null,"parents":[{"sha":"0303fb28f85d185e8029353918a96ea100173d7c","url":"https://api.github.com/repos/apache/openjpa/commits/0303fb28f85d185e8029353918a96ea100173d7c","html_url":"https://github.com/apache/openjpa/commit/0303fb28f85d185e8029353918a96ea100173d7c"}],"stats":{"total":109,"additions":94,"deletions":15},"files":[{"sha":"a22a4b9a1008f7e737f26e692ab76ad041500903","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ClassMappingInfo.java","status":"modified","additions":2,"deletions":8,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/4477ace6fde890ffb41fd10c548de2ebbe6f423c/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ClassMappingInfo.java","raw_url":"https://github.com/apache/openjpa/raw/4477ace6fde890ffb41fd10c548de2ebbe6f423c/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ClassMappingInfo.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ClassMappingInfo.java?ref=4477ace6fde890ffb41fd10c548de2ebbe6f423c","patch":"@@ -306,14 +306,8 @@ public Table getTable(final ClassMapping cls, String tableName,\n      * Return the named table for the given class.\n      */\n     public Table getTable(final ClassMapping cls, DBIdentifier tableName, \n-    \t\tboolean adapt) {\n-        // If the schemaName is NULL type then check for a system default schema name\n-        // and if available use it.\n-        if (_schemaName != null && _schemaName.getType() == DBIdentifierType.NULL){            \n-            String name = cls.getMappingRepository().getMetaDataFactory().getDefaults().getDefaultSchema();\n-            _schemaName = (name != null ? DBIdentifier.newSchema(name) : _schemaName);\n-        }        \n-        \n+            boolean adapt) {\n+\n         Table t = createTable(cls, new TableDefaults() {\n             public String get(Schema schema) {\n                 // delay this so that we don't do schema reflection for unique"},{"sha":"4bf62f98325b7bb105441ede55b96aa91358969c","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingInfo.java","status":"modified","additions":11,"deletions":1,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/4477ace6fde890ffb41fd10c548de2ebbe6f423c/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingInfo.java","raw_url":"https://github.com/apache/openjpa/raw/4477ace6fde890ffb41fd10c548de2ebbe6f423c/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingInfo.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingInfo.java?ref=4477ace6fde890ffb41fd10c548de2ebbe6f423c","patch":"@@ -29,6 +29,7 @@\n import org.apache.openjpa.jdbc.identifier.Normalizer;\n import org.apache.openjpa.jdbc.identifier.DBIdentifier;\n import org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier;\n+import org.apache.openjpa.jdbc.identifier.DBIdentifier.DBIdentifierType;\n import org.apache.openjpa.jdbc.schema.Column;\n import org.apache.openjpa.jdbc.schema.ColumnIO;\n import org.apache.openjpa.jdbc.schema.ForeignKey;\n@@ -499,10 +500,19 @@ public Table createTable(MetaDataContext context, TableDefaults def,\n             && !repos.getMappingDefaults().defaultMissingInfo())))\n             throw new MetaDataException(_loc.get(\"no-table\", context));\n \n-        if (DBIdentifier.isNull(schemaName))\n+        if (DBIdentifier.isNull(schemaName)) {\n+            //Check the configuration first for a set Schema to use\n             schemaName = Schemas.getNewTableSchemaIdentifier((JDBCConfiguration)\n                 repos.getConfiguration());\n \n+            // If the schemaName is still NULL type then check for a system default schema name\n+            // and if available use it.\n+            if (schemaName != null && (schemaName.getType() == DBIdentifierType.NULL)) {\n+                String name = repos.getMetaDataFactory().getDefaults().getDefaultSchema();\n+                schemaName = (name != null ? DBIdentifier.newSchema(name) : schemaName);\n+            }\n+        }\n+\n         // if no given and adapting or defaulting missing info, use template\n         SchemaGroup group = repos.getSchemaGroup();\n         Schema schema = null;"},{"sha":"c2a349f0c247d0a1eed060f12c91e62e3bed22a1","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/pudefaults/TestOpenJPASchemaPUDefault.java","status":"added","additions":65,"deletions":0,"changes":65,"blob_url":"https://github.com/apache/openjpa/blob/4477ace6fde890ffb41fd10c548de2ebbe6f423c/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/pudefaults/TestOpenJPASchemaPUDefault.java","raw_url":"https://github.com/apache/openjpa/raw/4477ace6fde890ffb41fd10c548de2ebbe6f423c/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/pudefaults/TestOpenJPASchemaPUDefault.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/pudefaults/TestOpenJPASchemaPUDefault.java?ref=4477ace6fde890ffb41fd10c548de2ebbe6f423c","patch":"@@ -0,0 +1,65 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.openjpa.persistence.pudefaults;\r\n+\r\n+import javax.persistence.EntityManager;\r\n+import javax.persistence.EntityTransaction;\r\n+\r\n+import org.apache.openjpa.persistence.test.SQLListenerTestCase;\r\n+\r\n+/*\r\n+ * OPENJPA-2704: These tests expand on TestSchemaPUDefault to verify \r\n+ * that a schema defined in an orm's persistence-unit-default is \r\n+ * overriden by the \"openjpa.jdbc.Schema\" property .  \r\n+ */\r\n+public class TestOpenJPASchemaPUDefault extends SQLListenerTestCase {\r\n+\r\n+    public void setUp() throws Exception {\r\n+        super.setUp(PUDefaultSchemaEntity.class, PUSchemaInSequenceAnnotationEntity.class,\r\n+            PUSchemaInTableAnnotationEntity.class, PUSchemaInTableMappingEntity.class,\r\n+            PUSchemaInSequenceMappingEntity.class);\r\n+        setSupportedDatabases(org.apache.openjpa.jdbc.sql.DB2Dictionary.class);\r\n+    }\r\n+\r\n+    public void tearDown() throws Exception {\r\n+        super.tearDown();\r\n+    }\r\n+\r\n+    @Override\r\n+    protected String getPersistenceUnitName() {\r\n+        return \"overrideMappingSchema\";\r\n+    }\r\n+\r\n+    public void testOpenJPASchemaOverridesORM() {\r\n+        persist(new PUDefaultSchemaEntity());\r\n+\r\n+        // The Sequence and Table SQL should use the PU default schema\r\n+        assertContainsSQL(\"ALTER SEQUENCE PUSCHEMA.SeqName_4DefaultSchema\");\r\n+        assertContainsSQL(\"INSERT INTO PUSCHEMA.PUDefaultSchemaEntity\");\r\n+    }\r\n+\r\n+    public void persist(Object ent){\r\n+        EntityManager em = emf.createEntityManager();\r\n+        EntityTransaction tx = em.getTransaction();\r\n+        tx.begin();\r\n+        em.persist(ent);\r\n+        tx.commit();\r\n+        em.close();\r\n+    }\r\n+}\r"},{"sha":"da4ade91d1b9c48c501ab78325aad8b3a62b3ad4","filename":"openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","status":"modified","additions":16,"deletions":6,"changes":22,"blob_url":"https://github.com/apache/openjpa/blob/4477ace6fde890ffb41fd10c548de2ebbe6f423c/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/4477ace6fde890ffb41fd10c548de2ebbe6f423c/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml?ref=4477ace6fde890ffb41fd10c548de2ebbe6f423c","patch":"@@ -499,12 +499,22 @@\n     </properties>\n </persistence-unit>\n \n-\t<persistence-unit name=\"TableNameInXml-PU\" transaction-type=\"RESOURCE_LOCAL\">\n-\t\t<mapping-file>META-INF/table-orm.xml</mapping-file>\n-\t\t<properties>\n-\t\t\t<property name=\"openjpa.jdbc.SynchronizeMappings\" value=\"buildSchema(ForeignKeys=true)\" />\n-\t\t</properties>\n-\t</persistence-unit>      \n+    <persistence-unit name=\"overrideMappingSchema\" transaction-type=\"RESOURCE_LOCAL\">\n+        <mapping-file>META-INF/pudefaults-orm.xml</mapping-file>\n+        <mapping-file>META-INF/pudefaults2-orm.xml</mapping-file>\n+        <properties>\n+            <property name=\"openjpa.jdbc.Schema\" value=\"PUSCHEMA\" />\n+            <property name=\"openjpa.jdbc.SynchronizeMappings\"\n+                value=\"buildSchema(ForeignKeys=true)\"/>\n+    </properties>\n+  </persistence-unit>\n+\n+    <persistence-unit name=\"TableNameInXml-PU\" transaction-type=\"RESOURCE_LOCAL\">\n+        <mapping-file>META-INF/table-orm.xml</mapping-file>\n+        <properties>\n+            <property name=\"openjpa.jdbc.SynchronizeMappings\" value=\"buildSchema(ForeignKeys=true)\" />\n+        </properties>\n+    </persistence-unit>\n \n     <persistence-unit name=\"TestPUDefaultCascadePersist\" transaction-type=\"RESOURCE_LOCAL\">\n         <!--  <provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider> -->"}]}

