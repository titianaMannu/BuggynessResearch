{"sha":"44c97873fbc1677650d6ed7cf21406c26cf61703","node_id":"MDY6Q29tbWl0MjA2MzY0OjQ0Yzk3ODczZmJjMTY3NzY1MGQ2ZWQ3Y2YyMTQwNmMyNmNmNjE3MDM=","commit":{"author":{"name":"A. Abram White","email":"awhite@apache.org","date":"2007-04-24T18:43:43Z"},"committer":{"name":"A. Abram White","email":"awhite@apache.org","date":"2007-04-24T18:43:43Z"},"message":"Fix bytecode generation to use new FetchConfiguration.requiresFetch signature.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@532039 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2f7d93da81d719ac0035b054a4f4663577cabdfb","url":"https://api.github.com/repos/apache/openjpa/git/trees/2f7d93da81d719ac0035b054a4f4663577cabdfb"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/44c97873fbc1677650d6ed7cf21406c26cf61703","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/44c97873fbc1677650d6ed7cf21406c26cf61703","html_url":"https://github.com/apache/openjpa/commit/44c97873fbc1677650d6ed7cf21406c26cf61703","comments_url":"https://api.github.com/repos/apache/openjpa/commits/44c97873fbc1677650d6ed7cf21406c26cf61703/comments","author":null,"committer":null,"parents":[{"sha":"9b05b6305de99beeb2eabee6331a62b6d4565c24","url":"https://api.github.com/repos/apache/openjpa/commits/9b05b6305de99beeb2eabee6331a62b6d4565c24","html_url":"https://github.com/apache/openjpa/commit/9b05b6305de99beeb2eabee6331a62b6d4565c24"}],"stats":{"total":8,"additions":4,"deletions":4},"files":[{"sha":"648a6304258182ed3d77c85b53e009888e70d4ff","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCDataGenerator.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/44c97873fbc1677650d6ed7cf21406c26cf61703/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCDataGenerator.java","raw_url":"https://github.com/apache/openjpa/raw/44c97873fbc1677650d6ed7cf21406c26cf61703/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCDataGenerator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCDataGenerator.java?ref=44c97873fbc1677650d6ed7cf21406c26cf61703","patch":"@@ -555,7 +555,7 @@ private void addLoadMethod(BCClass bc, ClassMetaData meta) {\n                 addLoadIntermediate(code, i, objectCount, jumps2, inter);\n             jumps2.add(code.go2());\n \n-            // if (fetch.requiresFetch(fmds[i]))\n+            // if (fetch.requiresFetch(fmds[i])!=FetchConfiguration.FETCH_NONE)\n             setTarget(code.aload().setParam(1), jumps);\n             code.aload().setParam(0);\n             code.invokeinterface().setMethod(OpenJPAStateManager.class,\n@@ -564,9 +564,9 @@ private void addLoadMethod(BCClass bc, ClassMetaData meta) {\n             code.invokevirtual().setMethod(ClassMetaData.class,\n                 \"getField\", FieldMetaData.class, new Class[]{int.class});\n             code.invokeinterface().setMethod (FetchConfiguration.class, \n-                \"requiresFetch\", boolean.class, \n-                new Class[]{FieldMetaData.class});\n-            jumps2.add(code.ifeq());\n+                \"requiresFetch\", int.class, new Class[]{FieldMetaData.class});\n+            code.constant().setValue(FetchConfiguration.FETCH_NONE);\n+            jumps2.add(code.ificmpeq());\n             addLoad(bc, code, fmds[i], objectCount, local, false);\n \n             jumps = jumps2;"}]}

