{"sha":"450f8352f856cd49bbf53525502db99821654441","node_id":"MDY6Q29tbWl0MjA2MzY0OjQ1MGY4MzUyZjg1NmNkNDliYmY1MzUyNTUwMmRiOTk4MjE2NTQ0NDE=","commit":{"author":{"name":"Milosz Tylenda","email":"mtylenda@apache.org","date":"2009-09-28T17:37:54Z"},"committer":{"name":"Milosz Tylenda","email":"mtylenda@apache.org","date":"2009-09-28T17:37:54Z"},"message":"OPENJPA-1153: Speed tests up by using only needed entities rather than all entities from persistence.xml\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@819658 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"237d049b76a2bf005dbfa85fe2ef630a9dede698","url":"https://api.github.com/repos/apache/openjpa/git/trees/237d049b76a2bf005dbfa85fe2ef630a9dede698"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/450f8352f856cd49bbf53525502db99821654441","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/450f8352f856cd49bbf53525502db99821654441","html_url":"https://github.com/apache/openjpa/commit/450f8352f856cd49bbf53525502db99821654441","comments_url":"https://api.github.com/repos/apache/openjpa/commits/450f8352f856cd49bbf53525502db99821654441/comments","author":null,"committer":null,"parents":[{"sha":"562b4942df21464b85b1a040019dde5936c06f0e","url":"https://api.github.com/repos/apache/openjpa/commits/562b4942df21464b85b1a040019dde5936c06f0e","html_url":"https://github.com/apache/openjpa/commit/562b4942df21464b85b1a040019dde5936c06f0e"}],"stats":{"total":93,"additions":42,"deletions":51},"files":[{"sha":"406327bae963c6e5f9b908eaa67197e278c12a60","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestFetchGroups.java","status":"modified","additions":7,"deletions":18,"changes":25,"blob_url":"https://github.com/apache/openjpa/blob/450f8352f856cd49bbf53525502db99821654441/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestFetchGroups.java","raw_url":"https://github.com/apache/openjpa/raw/450f8352f856cd49bbf53525502db99821654441/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestFetchGroups.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestFetchGroups.java?ref=450f8352f856cd49bbf53525502db99821654441","patch":"@@ -68,8 +68,9 @@ public TestFetchGroups(String s) {\n     public TestFetchGroups() {\n     }\n \n-    public void setUp() {\n-        deleteAll(FetchGroupTestObject.class);\n+    public void setUp() throws Exception {\n+        super.setUp(FetchGroupTestObject.class, FetchGroupTestObjectChild.class,\n+            AttachA.class, AttachB.class, AttachC.class, AttachD.class, AttachE.class, AttachF.class);\n \n         FetchGroupTestObject o1 = new FetchGroupTestObject();\n         // the value that 'a' is set to is important -- TestFetchGroupsExtent\n@@ -128,8 +129,7 @@ public void testFetchGroupsFromConfiguration() {\n         props.put(\"openjpa.FetchGroups\", \"default,fg1,fg2\");\n         OpenJPAEntityManagerFactory factory = getEmf(props);\n \n-        OpenJPAEntityManager pm =\n-            (OpenJPAEntityManager) factory.createEntityManager();\n+        OpenJPAEntityManager pm = factory.createEntityManager();\n         checkGroups(pm, new String[]{ \"fg1\", \"fg2\" });\n         factory.close();\n     }\n@@ -359,16 +359,7 @@ protected FetchGroupTestObjectChild getC1(OpenJPAEntityManager pm) {\n      * managed object.\n      */\n     public void testFetchGroupInstantiated() {\n-        deleteAll(AttachA.class);\n-        deleteAll(AttachB.class);\n-        deleteAll(AttachC.class);\n-        deleteAll(AttachD.class);\n-        deleteAll(AttachE.class);\n-        deleteAll(AttachF.class);\n-\n-        OpenJPAEntityManager pm;\n-\n-        pm = getPM();\n+        OpenJPAEntityManager pm = getPM();\n         startTx(pm);\n         AttachE e = new AttachE();\n         AttachB b = new AttachB();\n@@ -378,12 +369,10 @@ public void testFetchGroupInstantiated() {\n         endTx(pm);\n         endEm(pm);\n \n-        Object ob;\n-\n         pm = getPM();\n         startTx(pm);\n         assertSize(0, pm.getManagedObjects());\n-        ob = pm.createExtent(AttachE.class, true).iterator().next();\n+        pm.createExtent(AttachE.class, true).iterator().next();\n         // make sure relation is not loaded\n         assertSize(1, pm.getManagedObjects());\n         rollbackTx(pm);\n@@ -394,7 +383,7 @@ public void testFetchGroupInstantiated() {\n         // now make sure we load relations\n         pm.getFetchPlan().addFetchGroup(\"all\");\n         assertSize(0, pm.getManagedObjects());\n-        ob = pm.createExtent(AttachE.class, true).iterator().next();\n+        pm.createExtent(AttachE.class, true).iterator().next();\n         // make sure relation is loaded\n         assertSize(2, pm.getManagedObjects());\n         rollbackTx(pm);"},{"sha":"768b93ca318651344e0ea358d226d41938be8aec","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestFieldState.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/450f8352f856cd49bbf53525502db99821654441/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestFieldState.java","raw_url":"https://github.com/apache/openjpa/raw/450f8352f856cd49bbf53525502db99821654441/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestFieldState.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestFieldState.java?ref=450f8352f856cd49bbf53525502db99821654441","patch":"@@ -30,6 +30,8 @@\n \n \n import org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest1;\n+import org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest2;\n+import org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest3;\n \n import org.apache.openjpa.kernel.OpenJPAStateManager;\n import org.apache.openjpa.meta.FieldMetaData;\n@@ -49,8 +51,8 @@ public TestFieldState(String name) {\n         super(name);\n     }\n \n-    public void setUp() {\n-        deleteAll(RuntimeTest1.class);\n+    public void setUp() throws Exception {\n+        super.setUp(RuntimeTest1.class, RuntimeTest2.class, RuntimeTest3.class);\n \n         OpenJPAEntityManager pm = getPM();\n         startTx(pm);\n@@ -69,7 +71,7 @@ public void testNotDirtyAfterSameChange() {\n         OpenJPAEntityManager pm = getPM();\n         startTx(pm);\n \n-        RuntimeTest1 a = (RuntimeTest1) pm.find(RuntimeTest1.class, oid);\n+        RuntimeTest1 a = pm.find(RuntimeTest1.class, oid);\n         a.setStringField(a.getStringField());\n         OpenJPAStateManager sm = getStateManager(a, pm);\n         FieldMetaData fmd = sm.getMetaData().getField(\"stringField\");"},{"sha":"7e02e2bff30bbf66ef2310c55407a41fdfc82dfb","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestIncrementalFlushesDeletes.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/450f8352f856cd49bbf53525502db99821654441/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestIncrementalFlushesDeletes.java","raw_url":"https://github.com/apache/openjpa/raw/450f8352f856cd49bbf53525502db99821654441/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestIncrementalFlushesDeletes.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestIncrementalFlushesDeletes.java?ref=450f8352f856cd49bbf53525502db99821654441","patch":"@@ -30,6 +30,8 @@\n \n \n import org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest1;\n+import org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest2;\n+import org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest3;\n \n import org.apache.openjpa.kernel.OpenJPAStateManager;\n import org.apache.openjpa.kernel.PCState;\n@@ -51,8 +53,8 @@ public TestIncrementalFlushesDeletes(String str) {\n     public TestIncrementalFlushesDeletes() {\n     }\n \n-    public void setUp() {\n-        deleteAll(RuntimeTest1.class);\n+    public void setUp() throws Exception {\n+        super.setUp(RuntimeTest1.class, RuntimeTest2.class, RuntimeTest3.class);\n \n         pm = getPM(true, false);\n         startTx(pm);"},{"sha":"0cbf61bf35bb2d6ef55c360aa29e9f0a88229778","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestInheritance.java","status":"modified","additions":7,"deletions":9,"changes":16,"blob_url":"https://github.com/apache/openjpa/blob/450f8352f856cd49bbf53525502db99821654441/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestInheritance.java","raw_url":"https://github.com/apache/openjpa/raw/450f8352f856cd49bbf53525502db99821654441/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestInheritance.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestInheritance.java?ref=450f8352f856cd49bbf53525502db99821654441","patch":"@@ -51,9 +51,7 @@ public TestInheritance(String name) {\n \n     public void setUp()\n         throws Exception {\n-        deleteAll(RuntimeTest1.class);\n-        deleteAll(RuntimeTest2.class);\n-        deleteAll(RuntimeTest3.class);\n+        super.setUp(RuntimeTest1.class, RuntimeTest2.class, RuntimeTest3.class);\n \n         // create some instances to query on\n         OpenJPAEntityManager pm = getPM();\n@@ -71,7 +69,7 @@ public void setUp()\n     public void testGetAllRuntimeTest1s() {\n         OpenJPAEntityManager pm = getPM();\n         OpenJPAQuery q = pm.createQuery(\"SELECT o FROM RuntimeTest1 o\");\n-        Collection c = (Collection) q.getResultList();\n+        Collection c = q.getResultList();\n         assertEquals(3, c.size());\n         endEm(pm);\n     }\n@@ -82,7 +80,7 @@ public void testGetAllRuntimeTest1s() {\n     public void testGetAllRuntimeTest2s() {\n         OpenJPAEntityManager pm = getPM();\n         OpenJPAQuery q = pm.createQuery(\"SELECT o FROM RuntimeTest2 o\");\n-        Collection c = (Collection) q.getResultList();\n+        Collection c = q.getResultList();\n         assertEquals(2, c.size());\n         endEm(pm);\n     }\n@@ -93,7 +91,7 @@ public void testGetAllRuntimeTest2s() {\n     public void testGetAllRuntimeTest3s() {\n         OpenJPAEntityManager pm = getPM();\n         OpenJPAQuery q = pm.createQuery(\"SELECT o FROM RuntimeTest3 o\");\n-        Collection c = (Collection) q.getResultList();\n+        Collection c = q.getResultList();\n         assertEquals(1, c.size());\n         endEm(pm);\n     }\n@@ -109,7 +107,7 @@ public void testGetJustRuntimeTest1s() {\n //        OpenJPAQuery q = pm.createNativeQuery(\"\",RuntimeTest1.class);\n //        FIXME jthomas\n //        q.setCandidates(pm.getExtent(RuntimeTest1.class, false));\n-        Collection c = (Collection) q.getResultList();\n+        Collection c = q.getResultList();\n         assertEquals(1, c.size());\n         endEm(pm);\n     }\n@@ -125,7 +123,7 @@ public void testGetJustRuntimeTest2s() {\n //        FIXME jthomas        \n //        OpenJPAQuery q = pm.createNativeQuery(\"\",RuntimeTest2.class);\n //        q.setCandidates(pm.createExtent(RuntimeTest2.class, false));\n-        Collection c = (Collection) q.getResultList();\n+        Collection c = q.getResultList();\n         assertEquals(1, c.size());\n         endEm(pm);\n     }\n@@ -141,7 +139,7 @@ public void testGetJustRuntimeTest3() {\n //      FIXME jthomas\n //        OpenJPAQuery q = pm.createNativeQuery(\"\",RuntimeTest3.class);\n //        q.setCandidates(pm.getExtent(RuntimeTest3.class, false));\n-        Collection c = (Collection) q.getResultList();\n+        Collection c = q.getResultList();\n         assertEquals(1, c.size());\n         endEm(pm);\n     }"},{"sha":"9f7d706c0fedb7589de08e15cc29b5233b48d09a","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestInitialValueFetching.java","status":"modified","additions":9,"deletions":11,"changes":20,"blob_url":"https://github.com/apache/openjpa/blob/450f8352f856cd49bbf53525502db99821654441/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestInitialValueFetching.java","raw_url":"https://github.com/apache/openjpa/raw/450f8352f856cd49bbf53525502db99821654441/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestInitialValueFetching.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestInitialValueFetching.java?ref=450f8352f856cd49bbf53525502db99821654441","patch":"@@ -34,6 +34,8 @@\n \n \n import org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest1;\n+import org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest2;\n+import org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest3;\n import org.apache.openjpa.persistence.test.AllowFailure;\n \n import org.apache.openjpa.kernel.OpenJPAStateManager;\n@@ -52,8 +54,8 @@ public TestInitialValueFetching(String name) {\n         super(name);\n     }\n \n-    public void setUp() {\n-        deleteAll(RuntimeTest1.class);\n+    public void setUp() throws Exception {\n+        super.setUp(RuntimeTest1.class, RuntimeTest2.class, RuntimeTest3.class);\n         OpenJPAEntityManager pm = getPM();\n         startTx(pm);\n         RuntimeTest1 rt1 = new RuntimeTest1(\"TestInitialValueFetching\", 10);\n@@ -102,14 +104,12 @@ public void testInitialValueInt() {\n     public void testInitialValueMutableValueFailures() {\n         Map props = new HashMap();\n         props.put(\"openjpa.RestoreMutableValues\", \"false\");\n-        OpenJPAEntityManagerFactory pmf = (OpenJPAEntityManagerFactory)\n-            getEmf(props);\n+        OpenJPAEntityManagerFactory pmf = getEmf(props);\n \n-        OpenJPAEntityManager pm = (OpenJPAEntityManager)\n-            pmf.createEntityManager();\n+        OpenJPAEntityManager pm = pmf.createEntityManager();\n         RuntimeTest1 rt1 = getObject(pm);\n \n-        Date d = rt1.getDateField();\n+        rt1.getDateField();\n         OpenJPAStateManager sm = getStateManager(rt1, pm);\n         FieldMetaData fmd = sm.getMetaData().getField(\"dateField\");\n         try {\n@@ -126,10 +126,8 @@ public void testInitialValueMutableValueFailures() {\n     public void testInitialValueDate() {\n         Map props = new HashMap();\n         props.put(\"openjpa.RestoreState\", \"all\");\n-        OpenJPAEntityManagerFactory pmf = (OpenJPAEntityManagerFactory)\n-            getEmf(props);\n-        OpenJPAEntityManager pm = (OpenJPAEntityManager)\n-            pmf.createEntityManager();\n+        OpenJPAEntityManagerFactory pmf = getEmf(props);\n+        OpenJPAEntityManager pm = pmf.createEntityManager();\n         startTx(pm);\n         RuntimeTest1 rt1 = getObject(pm);\n "},{"sha":"e078d8e3b4235792d8be53c4cff9fdeed54750f9","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestPCClass.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/450f8352f856cd49bbf53525502db99821654441/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestPCClass.java","raw_url":"https://github.com/apache/openjpa/raw/450f8352f856cd49bbf53525502db99821654441/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestPCClass.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestPCClass.java?ref=450f8352f856cd49bbf53525502db99821654441","patch":"@@ -52,8 +52,8 @@ public TestPCClass(String test) {\n         super(test);\n     }\n \n-    public void setUp() {\n-        deleteAll(PCClassPC.class);\n+    public void setUp() throws Exception {\n+        super.setUp(PCClassPC.class);\n     }\n \n     public void testMetaData() {\n@@ -138,7 +138,7 @@ public void testPersist() {\n \n         pm = getPM();\n \n-        pc = (PCClassPC) pm.find(PCClassPC.class, oid);\n+        pc = pm.find(PCClassPC.class, oid);\n \n         assertTrue(pc == pc.getSpecificPC());\n         assertTrue(pc == pc.getGenericPC());"},{"sha":"6a134cfd00e4df15c3ef13af51c99b46918ac764","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestPessimisticLocking.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/450f8352f856cd49bbf53525502db99821654441/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestPessimisticLocking.java","raw_url":"https://github.com/apache/openjpa/raw/450f8352f856cd49bbf53525502db99821654441/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestPessimisticLocking.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestPessimisticLocking.java?ref=450f8352f856cd49bbf53525502db99821654441","patch":"@@ -33,6 +33,8 @@\n \n \n import org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest1;\n+import org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest2;\n+import org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest3;\n import org.apache.openjpa.persistence.common.utils.AbstractTestCase;\n \n import org.apache.openjpa.jdbc.conf.JDBCConfiguration;\n@@ -82,11 +84,11 @@ protected OpenJPAEntityManager getLockingPM() {\n     }\n \n     public void setUp() throws Exception {\n-        deleteAll(RuntimeTest1.class);\n+        super.setUp(RuntimeTest1.class, RuntimeTest2.class, RuntimeTest3.class);\n \n         Map propsMap = new HashMap();\n         propsMap.put(\"openjpa.LockManager\", \"pessimistic\");\n-        _factory = (OpenJPAEntityManagerFactory) getEmf(propsMap);\n+        _factory = getEmf(propsMap);\n \n         OpenJPAEntityManager pm = getLockingPM();\n         startTx(pm);\n@@ -188,7 +190,7 @@ public void pessimisticLockingTest(boolean useReentrantLock)\n \n         getLog().trace(\"verifying pessimistic locking worked...\");\n         OpenJPAEntityManager pm = getLockingPM();\n-        RuntimeTest1 a = (RuntimeTest1) pm.find(RuntimeTest1.class, _id);\n+        RuntimeTest1 a = pm.find(RuntimeTest1.class, _id);\n         assertEquals(20 - _bugCount, a.getIntField1());\n         getLog().trace(\"closing pm\");\n         endEm(pm);"},{"sha":"0f636aaf7c7d6cd6247a7486e3fd48c3b6dcff7b","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestProxies2.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/450f8352f856cd49bbf53525502db99821654441/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestProxies2.java","raw_url":"https://github.com/apache/openjpa/raw/450f8352f856cd49bbf53525502db99821654441/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestProxies2.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestProxies2.java?ref=450f8352f856cd49bbf53525502db99821654441","patch":"@@ -44,8 +44,8 @@ public TestProxies2(String casename) {\n         super(casename);\n     }\n \n-    public void setUp() {\n-        deleteAll(ProxiesPC.class);\n+    public void setUp() throws Exception {\n+        super.setUp(ProxiesPC.class);\n \n         OpenJPAEntityManager pm = getPM(false, false);\n         startTx(pm);"}]}

