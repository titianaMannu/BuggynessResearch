{"sha":"4551bbc69664833548429cd05beeca38d9f80e67","node_id":"MDY6Q29tbWl0MjA2MzY0OjQ1NTFiYmM2OTY2NDgzMzU0ODQyOWNkMDViZWVjYTM4ZDlmODBlNjc=","commit":{"author":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2013-10-25T07:13:13Z"},"committer":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2013-10-25T07:13:13Z"},"message":"OPENJPA-2444 fix default orm.xml location for ReverseMappingTool\n\nI also fixed the badly formatted and partly broken TestUseSchemaElement.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1535648 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2d4e6694891c8d9daca318f75998145564118134","url":"https://api.github.com/repos/apache/openjpa/git/trees/2d4e6694891c8d9daca318f75998145564118134"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/4551bbc69664833548429cd05beeca38d9f80e67","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/4551bbc69664833548429cd05beeca38d9f80e67","html_url":"https://github.com/apache/openjpa/commit/4551bbc69664833548429cd05beeca38d9f80e67","comments_url":"https://api.github.com/repos/apache/openjpa/commits/4551bbc69664833548429cd05beeca38d9f80e67/comments","author":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"committer":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"parents":[{"sha":"70f1188d19e91f8a6269049d0c4dcadf9c2a9005","url":"https://api.github.com/repos/apache/openjpa/commits/70f1188d19e91f8a6269049d0c4dcadf9c2a9005","html_url":"https://github.com/apache/openjpa/commit/70f1188d19e91f8a6269049d0c4dcadf9c2a9005"}],"stats":{"total":216,"additions":106,"deletions":110},"files":[{"sha":"0064870be852bda587df84acf0bd3611a49f152f","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/meta/TestUseSchemaElement.java","status":"modified","additions":105,"deletions":109,"changes":214,"blob_url":"https://github.com/apache/openjpa/blob/4551bbc69664833548429cd05beeca38d9f80e67/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/meta/TestUseSchemaElement.java","raw_url":"https://github.com/apache/openjpa/raw/4551bbc69664833548429cd05beeca38d9f80e67/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/meta/TestUseSchemaElement.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/meta/TestUseSchemaElement.java?ref=4551bbc69664833548429cd05beeca38d9f80e67","patch":"@@ -20,15 +20,11 @@\n \r\n import java.io.File;\r\n import java.io.FileNotFoundException;\r\n-import java.io.IOException;\r\n-import java.sql.SQLException;\r\n import java.util.Scanner;\r\n \r\n import javax.persistence.EntityManager;\r\n import javax.persistence.Query;\r\n \r\n-import junit.textui.TestRunner;\r\n-\r\n import org.apache.openjpa.jdbc.conf.JDBCConfiguration;\r\n import org.apache.openjpa.jdbc.meta.ReverseMappingTool;\r\n import org.apache.openjpa.lib.util.Files;\r\n@@ -38,112 +34,112 @@\n /**\r\n  * Tests the added useSchemaElement functionality of the\r\n  * ReverseMappingTool and CodeGenerator classes.\r\n- * \r\n+ *\r\n  * @author Austin Dorenkamp (ajdorenk)\r\n  */\r\n public class TestUseSchemaElement extends /*TestCase*/ SingleEMFTestCase {\r\n-\t\r\n-\tpublic void setUp() throws Exception {\r\n-\t\tsuper.setUp();\r\n-\t\tFile f = new File(\"./orm.xml\");\r\n-\t\t\r\n-\t\t// Make sure to clean up orm.xml from a prior run\r\n-\t\tif (f.exists()) {\r\n-\t\t\tassertTrue(f.delete());\r\n-\t\t}\r\n-\t\tsetSupportedDatabases(org.apache.openjpa.jdbc.sql.DerbyDictionary.class);\r\n-\t}\r\n-\t\r\n-\t@Override\r\n-\tpublic String getPersistenceUnitName(){\r\n-\t\treturn \"rev-mapping-pu\";\r\n-\t}\r\n-\t\r\n-\tpublic void testGettersAndSetters() {\r\n-\t\t\r\n-\t\tJDBCConfiguration conf = (JDBCConfiguration) ((OpenJPAEntityManagerFactory) emf).getConfiguration();\r\n-\t\t\r\n-\t\tEntityManager em = emf.createEntityManager();\r\n-\t\t\r\n-\t\tem.getTransaction().begin();\r\n-\r\n-\t\tQuery q = em.createNativeQuery(\"CREATE TABLE USCHEMA.USCHANTBL (ID INTEGER PRIMARY KEY)\");\r\n-\t\ttry {\r\n-\t\t\tq.executeUpdate();\r\n-\t\t\tem.getTransaction().commit();\r\n-\t\t} catch (Throwable t) {\r\n-\t\t\tem.getTransaction().rollback();\r\n-\t\t\tSystem.out.println(t.toString());\r\n-\t\t}\t\t\r\n-\t\t\r\n-\t\ttry {\r\n-\t\t\tReverseMappingTool.Flags flags = new ReverseMappingTool.Flags();\r\n-\t\t\tflags.metaDataLevel = \"package\"; \r\n-\t\t\tflags.generateAnnotations = true;\r\n-\t\t\tflags.accessType = \"property\";\r\n-\t\t\tflags.nullableAsObject = true;\r\n-\t\t\tflags.useSchemaName = false;\r\n-\t\t\tflags.useSchemaElement = false;\r\n-\t        flags.packageName = \"\";\r\n-\t        flags.directory = Files.getFile(\"./target\", null);\r\n-\t\t\tReverseMappingTool.run(conf, new String[0], flags, null);\r\n-\t\t} catch (IOException e) {\r\n-\t\t\te.printStackTrace();\r\n-\t\t} catch (SQLException e) {\r\n-\t\t\te.printStackTrace();\r\n-\t\t} catch (Throwable t) {\r\n-\t\t\tt.printStackTrace();\r\n-\t\t}\r\n-\t\t\r\n-\t\t/* Now that the tool has been run, we will test it by reading the generated files */\r\n-\t\t\r\n-\t\t// This tests the removal of the schema annotation in the Uschantbl.java file\r\n-\t\tFile uschantbl = new File(\"./target/Uschantbl.java\");\r\n-\t\tScanner inFile = new Scanner(\"\");\r\n-\t\tString currentLine;\r\n-\t\ttry {\r\n-\t\t\tinFile = new Scanner(uschantbl);\r\n-\t\t} catch (FileNotFoundException e) {\r\n-\t\t\tfail(\"Uschantbl.java not generated in ./target by ReverseMappingTool\");\r\n-\t\t}\r\n-\t\twhile(inFile.hasNextLine())\r\n-\t\t{\r\n-\t\t\tcurrentLine = inFile.nextLine();\r\n-\t\t\tif((currentLine.length()) > 0 && (currentLine.charAt(0) != '@'))\r\n-\t\t\t{\r\n-\t\t\t\tcontinue;\r\n-\t\t\t}\r\n-\t\t\t\r\n-\t\t\tif(currentLine.contains(\"Table(schema=\"))\r\n-\t\t\t{\r\n-\t\t\t\tfail(\"Uschantbl.java still contains schema name\");\r\n-\t\t\t}\r\n-\t\t}\r\n-\t\tinFile.close();\r\n-\t\t// Delete file to clean up workspace\r\n-\t\tassertTrue(uschantbl.delete());\r\n-\t\t\t\r\n-\t\t// This tests the removal of the schema name from the orm.xml file\r\n-\t\tFile orm = new File(\"./orm.xml\");\r\n-\t\ttry {\r\n-\t\t\tinFile = new Scanner(orm);\r\n-\t\t} catch (FileNotFoundException e) {\r\n-\t\t\tfail(\"Orm.xml not generated in root directory by ReverseMappingTool\");\r\n-\t\t}\r\n-\t\twhile(inFile.hasNextLine())\r\n-\t\t{\r\n-\t\t\tif(inFile.nextLine().contains(\"<table schema=\"))\r\n-\t\t\t{\r\n-\t\t\t\tfail(\"Orm.xml still contains schema name\");\r\n-\t\t\t}\r\n-\t\t}\r\n-\t\tinFile.close();\t\r\n-\t\t// Delete file to clean up workspace. Also, test will break with \r\n-\t\t// org.apache.openjpa.util.UserException if orm.xml exists prior to running\r\n-//\t\tassertTrue(orm.delete());\t\r\n-\t}\r\n-\t\r\n-\tpublic static void main(String[] args) {\r\n-\t\tTestRunner.run(TestUseSchemaElement.class);\r\n-\t}\r\n+\r\n+    public void setUp() throws Exception {\r\n+        super.setUp();\r\n+        File f = new File(\"./orm.xml\");\r\n+\r\n+        // Make sure to clean up orm.xml from a prior run\r\n+        if (f.exists()) {\r\n+            assertTrue(f.delete());\r\n+        }\r\n+        setSupportedDatabases(org.apache.openjpa.jdbc.sql.DerbyDictionary.class);\r\n+    }\r\n+\r\n+    @Override\r\n+    public String getPersistenceUnitName(){\r\n+        return \"rev-mapping-pu\";\r\n+    }\r\n+\r\n+    public void testGettersAndSetters() throws Exception {\r\n+\r\n+        JDBCConfiguration conf = (JDBCConfiguration) ((OpenJPAEntityManagerFactory) emf).getConfiguration();\r\n+\r\n+        EntityManager em = emf.createEntityManager();\r\n+\r\n+        em.getTransaction().begin();\r\n+\r\n+        Query q = em.createNativeQuery(\"CREATE TABLE USCHEMA.USCHANTBL (ID INTEGER PRIMARY KEY)\");\r\n+        try {\r\n+            q.executeUpdate();\r\n+            em.getTransaction().commit();\r\n+        } catch (Throwable t) {\r\n+            em.getTransaction().rollback();\r\n+            System.out.println(t.toString());\r\n+        }\r\n+\r\n+        ReverseMappingTool.Flags flags = new ReverseMappingTool.Flags();\r\n+        flags.metaDataLevel = \"package\";\r\n+        flags.generateAnnotations = true;\r\n+        flags.accessType = \"property\";\r\n+        flags.nullableAsObject = true;\r\n+        flags.useSchemaName = false;\r\n+        flags.useSchemaElement = false;\r\n+        flags.packageName = \"\";\r\n+        flags.directory = Files.getFile(\"./target\", null);\r\n+        ReverseMappingTool.run(conf, new String[0], flags, null);\r\n+\r\n+        /* Now that the tool has been run, we will test it by reading the generated files */\r\n+\r\n+        // This tests the removal of the schema annotation in the Uschantbl.java file\r\n+        File uschantbl = new File(\"./target/Uschantbl.java\");\r\n+        Scanner inFile = null;\r\n+        String currentLine;\r\n+        try {\r\n+            inFile = new Scanner(uschantbl);\r\n+\r\n+            while(inFile.hasNextLine())\r\n+            {\r\n+                currentLine = inFile.nextLine();\r\n+                if((currentLine.length()) > 0 && (currentLine.charAt(0) != '@'))\r\n+                {\r\n+                    continue;\r\n+                }\r\n+\r\n+                if(currentLine.contains(\"Table(schema=\"))\r\n+                {\r\n+                    fail(\"Uschantbl.java still contains schema name\");\r\n+                }\r\n+            }\r\n+\r\n+            // Delete file to clean up workspace\r\n+            assertTrue(uschantbl.delete());\r\n+\r\n+        } catch (FileNotFoundException e) {\r\n+            fail(\"Uschantbl.java not generated in ./target by ReverseMappingTool\");\r\n+        }\r\n+        finally {\r\n+            if (inFile != null) {\r\n+                inFile.close();\r\n+            }\r\n+        }\r\n+\r\n+        // This tests the removal of the schema name from the orm.xml file\r\n+        File orm = new File(\"target/orm.xml\");\r\n+        try {\r\n+            inFile = new Scanner(orm);\r\n+            while(inFile.hasNextLine())\r\n+            {\r\n+                if(inFile.nextLine().contains(\"<table schema=\"))\r\n+                {\r\n+                    fail(\"Orm.xml still contains schema name\");\r\n+                }\r\n+            }\r\n+        } catch (FileNotFoundException e) {\r\n+            fail(\"Orm.xml not generated in root directory by ReverseMappingTool\");\r\n+        }\r\n+        finally {\r\n+            if (inFile != null) {\r\n+                inFile.close();\r\n+            }\r\n+        }\r\n+        // Delete file to clean up workspace. Also, test will break with\r\n+        // org.apache.openjpa.util.UserException if orm.xml exists prior to running\r\n+        //assertTrue(orm.delete());\r\n+    }\r\n+\r\n }\r"},{"sha":"79f718e4b7094d21b5fbc495186f53ce18e342ee","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceMetaDataFactory.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/4551bbc69664833548429cd05beeca38d9f80e67/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceMetaDataFactory.java","raw_url":"https://github.com/apache/openjpa/raw/4551bbc69664833548429cd05beeca38d9f80e67/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceMetaDataFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceMetaDataFactory.java?ref=4551bbc69664833548429cd05beeca38d9f80e67","patch":"@@ -521,7 +521,7 @@ private File defaultXMLFile() {\n                 J2DoPrivHelper.existsAction(file))).booleanValue())\n                 return file;\n         }\n-        return new File(\"orm.xml\");\n+        return new File(dir, \"orm.xml\");\n     }\n \n     public void setConfiguration(Configuration conf) {"}]}

