{"sha":"46734cf443c69afc0221c427a349aa251f9a1969","node_id":"MDY6Q29tbWl0MjA2MzY0OjQ2NzM0Y2Y0NDNjNjlhZmMwMjIxYzQyN2EzNDlhYTI1MWY5YTE5Njk=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2009-09-11T19:27:08Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2009-09-11T19:27:08Z"},"message":"OPENJPA-1184 apply source formatting to new files\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@813990 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0702f8dbba0477b4a72895e65b90c39fcb6cd8db","url":"https://api.github.com/repos/apache/openjpa/git/trees/0702f8dbba0477b4a72895e65b90c39fcb6cd8db"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/46734cf443c69afc0221c427a349aa251f9a1969","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/46734cf443c69afc0221c427a349aa251f9a1969","html_url":"https://github.com/apache/openjpa/commit/46734cf443c69afc0221c427a349aa251f9a1969","comments_url":"https://api.github.com/repos/apache/openjpa/commits/46734cf443c69afc0221c427a349aa251f9a1969/comments","author":null,"committer":null,"parents":[{"sha":"32c6ca132ce4daa64f736d2ab50aa5267bc8048a","url":"https://api.github.com/repos/apache/openjpa/commits/32c6ca132ce4daa64f736d2ab50aa5267bc8048a","html_url":"https://github.com/apache/openjpa/commit/32c6ca132ce4daa64f736d2ab50aa5267bc8048a"}],"stats":{"total":132,"additions":64,"deletions":68},"files":[{"sha":"e010d60e52feb057516998a8bcfca720d90abd14","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/MapKeyChild.java","status":"modified","additions":18,"deletions":20,"changes":38,"blob_url":"https://github.com/apache/openjpa/blob/46734cf443c69afc0221c427a349aa251f9a1969/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/MapKeyChild.java","raw_url":"https://github.com/apache/openjpa/raw/46734cf443c69afc0221c427a349aa251f9a1969/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/MapKeyChild.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/MapKeyChild.java?ref=46734cf443c69afc0221c427a349aa251f9a1969","patch":"@@ -21,10 +21,8 @@\n import java.io.Serializable;\n \n import javax.persistence.Basic;\n-import javax.persistence.CascadeType;\n import javax.persistence.Column;\n import javax.persistence.Entity;\n-import javax.persistence.FetchType;\n import javax.persistence.GeneratedValue;\n import javax.persistence.Id;\n import javax.persistence.JoinColumn;\n@@ -38,30 +36,30 @@\n     private long id;\n \n     @Basic\n-    @Column(length=32)\n+    @Column(length = 32)\n     private String mapKey;\n \n-\t@ManyToOne\n-\t@JoinColumn\n+    @ManyToOne\n+    @JoinColumn\n     private MapKeyParent parent;\n \n-    public long getId() { \n-        return id; \n+    public long getId() {\n+        return id;\n     }\n-    \n-\tpublic MapKeyParent getParent() {\n-\t\treturn this.parent;\n-\t}\n \n-\tpublic void setParent(MapKeyParent parent) {\n-\t\tthis.parent = parent;\n-\t}\n+    public MapKeyParent getParent() {\n+        return this.parent;\n+    }\n \n-\tpublic String getMapKey() {\n-\t\treturn this.mapKey;\n-\t}\n+    public void setParent(MapKeyParent parent) {\n+        this.parent = parent;\n+    }\n \n-\tpublic void setMapKey(String mapKey) {\n-\t\tthis.mapKey = mapKey;\n-\t}\n+    public String getMapKey() {\n+        return this.mapKey;\n+    }\n+\n+    public void setMapKey(String mapKey) {\n+        this.mapKey = mapKey;\n+    }\n }"},{"sha":"7b10373dcf924d6f532b983caef23f8469e11a72","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/MapKeyParent.java","status":"modified","additions":11,"deletions":14,"changes":25,"blob_url":"https://github.com/apache/openjpa/blob/46734cf443c69afc0221c427a349aa251f9a1969/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/MapKeyParent.java","raw_url":"https://github.com/apache/openjpa/raw/46734cf443c69afc0221c427a349aa251f9a1969/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/MapKeyParent.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/MapKeyParent.java?ref=46734cf443c69afc0221c427a349aa251f9a1969","patch":"@@ -29,30 +29,27 @@\n import javax.persistence.MapKey;\n import javax.persistence.OneToMany;\n \n-\n @Entity\n public class MapKeyParent implements Serializable {\n \n     @Id\n     @GeneratedValue\n     private long id;\n \n-\t@OneToMany(mappedBy = \"parent\", cascade = CascadeType.ALL, \n-\t\t\tfetch=FetchType.EAGER)\n-\t@MapKey(name = \"mapKey\")\n-    private Map<String,MapKeyChild> children;\n-\n+    @OneToMany(mappedBy = \"parent\", cascade = CascadeType.ALL, fetch = FetchType.EAGER)\n+    @MapKey(name = \"mapKey\")\n+    private Map<String, MapKeyChild> children;\n \n-    public long getId() { \n-        return id; \n+    public long getId() {\n+        return id;\n     }\n \n-\tpublic Map<String, MapKeyChild> getChildren() {\n-\t\treturn this.children;\n-\t}\n+    public Map<String, MapKeyChild> getChildren() {\n+        return this.children;\n+    }\n \n-\tpublic void setChildren(Map<String, MapKeyChild> children) {\n-\t\tthis.children = children;\n-\t}\n+    public void setChildren(Map<String, MapKeyChild> children) {\n+        this.children = children;\n+    }\n \n }"},{"sha":"652d4cdd06074be9fe6aff0a631e65be33b743bb","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestParallelEagerMap.java","status":"modified","additions":35,"deletions":34,"changes":69,"blob_url":"https://github.com/apache/openjpa/blob/46734cf443c69afc0221c427a349aa251f9a1969/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestParallelEagerMap.java","raw_url":"https://github.com/apache/openjpa/raw/46734cf443c69afc0221c427a349aa251f9a1969/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestParallelEagerMap.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestParallelEagerMap.java?ref=46734cf443c69afc0221c427a349aa251f9a1969","patch":"@@ -24,44 +24,45 @@\n import org.apache.openjpa.persistence.OpenJPAEntityManager;\n import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n \n-public class TestParallelEagerMap\n-    extends SingleEMFTestCase {\n+public class TestParallelEagerMap extends SingleEMFTestCase {\n \n     public void setUp() {\n-    \tsuper.setUp(CLEAR_TABLES, MapKeyParent.class, MapKeyChild.class,\n-    \t\t\t\"openjpa.jdbc.EagerFetchMode\", \"parallel\");\n+        super.setUp(CLEAR_TABLES, MapKeyParent.class, MapKeyChild.class,\n+            \"openjpa.jdbc.EagerFetchMode\", \"parallel\");\n     }\n \n     public void testParentNotNull() {\n-    \t\n-    \tMapKeyParent[] parents = { new MapKeyParent(), new MapKeyParent() };\n-    \tfor( MapKeyParent parent : parents ) {\n-\t    \tMap<String,MapKeyChild> children = new HashMap<String,MapKeyChild>();\n-\t    \tfor(String key : new String[]{\"childA\"}) {\n-\t    \t\tMapKeyChild child = new MapKeyChild();\n-\t    \t\tchild.setParent(parent);\n-\t    \t\tchild.setMapKey(key);\n-\t    \t\tchildren.put(key, child);\n-\t    \t}\n-\t    \tparent.setChildren(children);\n-    \t}\n-    \t\n-    \tOpenJPAEntityManager em = emf.createEntityManager();\n-    \tem.getTransaction().begin();\n-    \tfor(MapKeyParent parent : parents) {\n-    \t\tem.persist(parent);\n-    \t}\n-    \tem.getTransaction().commit();\n-    \tem.close();\n-    \t\n-    \tem = emf.createEntityManager();\n-    \tMapKeyParent parent2 = (MapKeyParent)em.createQuery(\n-    \t\t\t\"SELECT p FROM MapKeyParent p WHERE p.id=\" + parents[0].getId() + \n-    \t\t\t\" OR p.id=\" + parents[1].getId()).getResultList().get(1);\n-    \tem.close();\n-    \t\n-    \tfor(MapKeyChild child : parent2.getChildren().values()) {\n-    \t\tassertNotNull(\"Parent should not be null\", child.getParent());\n-    \t}\n+\n+        MapKeyParent[] parents = { new MapKeyParent(), new MapKeyParent() };\n+        for (MapKeyParent parent : parents) {\n+            Map<String, MapKeyChild> children =\n+                new HashMap<String, MapKeyChild>();\n+            for (String key : new String[] { \"childA\" }) {\n+                MapKeyChild child = new MapKeyChild();\n+                child.setParent(parent);\n+                child.setMapKey(key);\n+                children.put(key, child);\n+            }\n+            parent.setChildren(children);\n+        }\n+\n+        OpenJPAEntityManager em = emf.createEntityManager();\n+        em.getTransaction().begin();\n+        for (MapKeyParent parent : parents) {\n+            em.persist(parent);\n+        }\n+        em.getTransaction().commit();\n+        em.close();\n+\n+        em = emf.createEntityManager();\n+        MapKeyParent parent2 =\n+            (MapKeyParent) em.createQuery(\n+                \"SELECT p FROM MapKeyParent p WHERE p.id=\" + parents[0].getId()\n+                    + \" OR p.id=\" + parents[1].getId()).getResultList().get(1);\n+        em.close();\n+\n+        for (MapKeyChild child : parent2.getChildren().values()) {\n+            assertNotNull(\"Parent should not be null\", child.getParent());\n+        }\n     }\n }"}]}

