{"sha":"4754f0921c4ee9b574e0c5c68b1c83854e9dd43d","node_id":"MDY6Q29tbWl0MjA2MzY0OjQ3NTRmMDkyMWM0ZWU5YjU3NGUwYzVjNjhiMWM4Mzg1NGU5ZGQ0M2Q=","commit":{"author":{"name":"Craig Russell","email":"clr@apache.org","date":"2007-04-03T20:02:07Z"},"committer":{"name":"Craig Russell","email":"clr@apache.org","date":"2007-04-03T20:02:07Z"},"message":"Fixed autoboxing issue\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@525258 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"379abed8143288e158b04b8ecf5c7f9d0990ce7d","url":"https://api.github.com/repos/apache/openjpa/git/trees/379abed8143288e158b04b8ecf5c7f9d0990ce7d"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/4754f0921c4ee9b574e0c5c68b1c83854e9dd43d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/4754f0921c4ee9b574e0c5c68b1c83854e9dd43d","html_url":"https://github.com/apache/openjpa/commit/4754f0921c4ee9b574e0c5c68b1c83854e9dd43d","comments_url":"https://api.github.com/repos/apache/openjpa/commits/4754f0921c4ee9b574e0c5c68b1c83854e9dd43d/comments","author":{"login":"papajdo","id":2455884,"node_id":"MDQ6VXNlcjI0NTU4ODQ=","avatar_url":"https://avatars.githubusercontent.com/u/2455884?v=4","gravatar_id":"","url":"https://api.github.com/users/papajdo","html_url":"https://github.com/papajdo","followers_url":"https://api.github.com/users/papajdo/followers","following_url":"https://api.github.com/users/papajdo/following{/other_user}","gists_url":"https://api.github.com/users/papajdo/gists{/gist_id}","starred_url":"https://api.github.com/users/papajdo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/papajdo/subscriptions","organizations_url":"https://api.github.com/users/papajdo/orgs","repos_url":"https://api.github.com/users/papajdo/repos","events_url":"https://api.github.com/users/papajdo/events{/privacy}","received_events_url":"https://api.github.com/users/papajdo/received_events","type":"User","site_admin":false},"committer":{"login":"papajdo","id":2455884,"node_id":"MDQ6VXNlcjI0NTU4ODQ=","avatar_url":"https://avatars.githubusercontent.com/u/2455884?v=4","gravatar_id":"","url":"https://api.github.com/users/papajdo","html_url":"https://github.com/papajdo","followers_url":"https://api.github.com/users/papajdo/followers","following_url":"https://api.github.com/users/papajdo/following{/other_user}","gists_url":"https://api.github.com/users/papajdo/gists{/gist_id}","starred_url":"https://api.github.com/users/papajdo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/papajdo/subscriptions","organizations_url":"https://api.github.com/users/papajdo/orgs","repos_url":"https://api.github.com/users/papajdo/repos","events_url":"https://api.github.com/users/papajdo/events{/privacy}","received_events_url":"https://api.github.com/users/papajdo/received_events","type":"User","site_admin":false},"parents":[{"sha":"9e8e265d6ce4c198945b534489f02838870e8ae3","url":"https://api.github.com/repos/apache/openjpa/commits/9e8e265d6ce4c198945b534489f02838870e8ae3","html_url":"https://github.com/apache/openjpa/commit/9e8e265d6ce4c198945b534489f02838870e8ae3"}],"stats":{"total":10,"additions":5,"deletions":5},"files":[{"sha":"688b6526c7841fb80554070de60d5839a9a82b29","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/4754f0921c4ee9b574e0c5c68b1c83854e9dd43d/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java","raw_url":"https://github.com/apache/openjpa/raw/4754f0921c4ee9b574e0c5c68b1c83854e9dd43d/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java?ref=4754f0921c4ee9b574e0c5c68b1c83854e9dd43d","patch":"@@ -228,28 +228,28 @@ else if (isDB2ISeriesV5R4AndLater(metaData))\n      */\r\n     public String getForUpdateClause(JDBCFetchConfiguration fetch, boolean forUpdate) {\r\n         String isolationLevel = null;\r\n-        Boolean updateClause = null;\r\n+        boolean updateClause;\r\n         DatabaseMetaData metaData = null;\r\n         StringBuffer forUpdateString = new StringBuffer();\r\n         try {\r\n             // Determine the update clause/isolationLevel the hint \r\n             // overrides the persistence.xml value\r\n             if (fetch != null && fetch.getHint(\"openjpa.hint.updateClause\")\r\n                 !=null )\r\n-                updateClause = (Boolean)fetch.\r\n-                getHint(\"openjpa.hint.updateClause\");\r\n+                updateClause = ((Boolean)fetch.\r\n+                    getHint(\"openjpa.hint.updateClause\")).booleanValue();\r\n             else \r\n                 updateClause = forUpdate;\r\n             if (fetch != null &&fetch.getHint(\"openjpa.hint.isolationLevel\")\r\n                 !=null )\r\n                 isolationLevel = (String)fetch.\r\n-                getHint(\"openjpa.hint.isolationLevel\");\r\n+                    getHint(\"openjpa.hint.isolationLevel\");\r\n             else \r\n                 isolationLevel = conf.getTransactionIsolation();\r\n             if (updateClause == false)\r\n                 //This sql is not for update so add FOR Read Only clause\r\n                 forUpdateString.append(\" \").append(forReadOnlyClause)\r\n-                .append(\" \");\r\n+                    .append(\" \");\r\n             else if (updateClause == true){\r\n \r\n                 switch(db2ServerType){\r"}]}

