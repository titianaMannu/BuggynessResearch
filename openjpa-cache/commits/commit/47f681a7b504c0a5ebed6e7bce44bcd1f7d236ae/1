{"sha":"47f681a7b504c0a5ebed6e7bce44bcd1f7d236ae","node_id":"MDY6Q29tbWl0MjA2MzY0OjQ3ZjY4MWE3YjUwNGMwYTVlYmVkNmU3YmNlNDRiY2QxZjdkMjM2YWU=","commit":{"author":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2008-05-22T07:30:25Z"},"committer":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2008-05-22T07:30:25Z"},"message":"OPENJPA-607 Extraneous \"( )\" on DISTINCT, ALL, ANY results in SQL syntax errors on some database systems\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@659027 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a608edf89a2f56fc9d6ea74dc56acb0b213efff9","url":"https://api.github.com/repos/apache/openjpa/git/trees/a608edf89a2f56fc9d6ea74dc56acb0b213efff9"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/47f681a7b504c0a5ebed6e7bce44bcd1f7d236ae","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/47f681a7b504c0a5ebed6e7bce44bcd1f7d236ae","html_url":"https://github.com/apache/openjpa/commit/47f681a7b504c0a5ebed6e7bce44bcd1f7d236ae","comments_url":"https://api.github.com/repos/apache/openjpa/commits/47f681a7b504c0a5ebed6e7bce44bcd1f7d236ae/comments","author":null,"committer":null,"parents":[{"sha":"11f4d0d7ad451519c662521d289c3853eb2cd61b","url":"https://api.github.com/repos/apache/openjpa/commits/11f4d0d7ad451519c662521d289c3853eb2cd61b","html_url":"https://github.com/apache/openjpa/commit/11f4d0d7ad451519c662521d289c3853eb2cd61b"}],"stats":{"total":31,"additions":12,"deletions":19},"files":[{"sha":"f90f42535577d2a464d504d77888c8a0277543be","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/All.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/47f681a7b504c0a5ebed6e7bce44bcd1f7d236ae/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/All.java","raw_url":"https://github.com/apache/openjpa/raw/47f681a7b504c0a5ebed6e7bce44bcd1f7d236ae/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/All.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/All.java?ref=47f681a7b504c0a5ebed6e7bce44bcd1f7d236ae","patch":"@@ -27,7 +27,7 @@\n     extends UnaryOp {\n \n     public All(Val val) {\n-        super(val);\n+        super(val, true);\n     }\n \n     protected String getOperator() {"},{"sha":"45a04fce96e11cb2406e3dd3e4ff6ee4137c8e80","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/Any.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/47f681a7b504c0a5ebed6e7bce44bcd1f7d236ae/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/Any.java","raw_url":"https://github.com/apache/openjpa/raw/47f681a7b504c0a5ebed6e7bce44bcd1f7d236ae/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/Any.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/Any.java?ref=47f681a7b504c0a5ebed6e7bce44bcd1f7d236ae","patch":"@@ -27,7 +27,7 @@\n     extends UnaryOp {\n \n     public Any(Val val) {\n-        super(val);\n+        super(val, true);\n     }\n \n     protected String getOperator() {"},{"sha":"36f4ec7123c7cbb9002c0ba9ddec566a6a848dcd","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/Distinct.java","status":"modified","additions":1,"deletions":15,"changes":16,"blob_url":"https://github.com/apache/openjpa/blob/47f681a7b504c0a5ebed6e7bce44bcd1f7d236ae/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/Distinct.java","raw_url":"https://github.com/apache/openjpa/raw/47f681a7b504c0a5ebed6e7bce44bcd1f7d236ae/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/Distinct.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/Distinct.java?ref=47f681a7b504c0a5ebed6e7bce44bcd1f7d236ae","patch":"@@ -30,7 +30,7 @@\n     extends UnaryOp {\n \n     public Distinct(Val val) {\n-        super(val);\n+        super(val, true);\n     }\n \n     public ExpState initialize(Select sel, ExpContext ctx, int flags) {\n@@ -41,18 +41,4 @@ public ExpState initialize(Select sel, ExpContext ctx, int flags) {\n     protected String getOperator() {\n         return \"DISTINCT\";\n     }\n-    \n-\n-    public void appendTo(Select sel, ExpContext ctx, ExpState state, \n-        SQLBuffer sql, int index) {\n-        if (sel.getConfiguration().getDBDictionaryInstance().platform.indexOf(\n-            \"Informix\") > -1) {\n-            sql.append(getOperator());\n-            sql.append(\" \");\n-            getValue().appendTo(sel, ctx, state, sql, 0);\n-            sql.addCastForParam(getOperator(), getValue());\n-        }\n-        else\n-            super.appendTo(sel, ctx, state, sql, index);\n-    }\n }"},{"sha":"b9d262b16ba6949280f26d4a98b603fa12690f82","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/UnaryOp.java","status":"modified","additions":9,"deletions":2,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/47f681a7b504c0a5ebed6e7bce44bcd1f7d236ae/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/UnaryOp.java","raw_url":"https://github.com/apache/openjpa/raw/47f681a7b504c0a5ebed6e7bce44bcd1f7d236ae/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/UnaryOp.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/UnaryOp.java?ref=47f681a7b504c0a5ebed6e7bce44bcd1f7d236ae","patch":"@@ -39,13 +39,19 @@\n     private final Val _val;\n     private ClassMetaData _meta = null;\n     private Class _cast = null;\n+    private boolean _noParen = false;\n \n     /**\n      * Constructor. Provide the value to operate on.\n      */\n     public UnaryOp(Val val) {\n         _val = val;\n     }\n+    \n+    public UnaryOp(Val val, boolean noParen) {\n+        _val = val;\n+        _noParen = noParen;\n+    }\n \n     protected Val getValue() {\n         return _val;\n@@ -123,10 +129,11 @@ public int length(Select sel, ExpContext ctx, ExpState state) {\n     public void appendTo(Select sel, ExpContext ctx, ExpState state, \n         SQLBuffer sql, int index) {\n         sql.append(getOperator());\n-        sql.append(\"(\");\n+        sql.append(_noParen ? \" \" : \"(\");\n         _val.appendTo(sel, ctx, state, sql, 0);\n         sql.addCastForParam(getOperator(), _val);\n-        sql.append(\")\");\n+        if (!_noParen)\n+            sql.append(\")\");\n     }\n \n     /**"}]}

