{"sha":"49857ff1e88ee3d62af4cd3a692dad039eec5037","node_id":"MDY6Q29tbWl0MjA2MzY0OjQ5ODU3ZmYxZTg4ZWUzZDYyYWY0Y2QzYTY5MmRhZDAzOWVlYzUwMzc=","commit":{"author":{"name":"Marc Prud'hommeaux","email":"mprudhom@apache.org","date":"2007-01-16T22:26:04Z"},"committer":{"name":"Marc Prud'hommeaux","email":"mprudhom@apache.org","date":"2007-01-16T22:26:04Z"},"message":"Added 'openjpa.loglevel' property to build which allows one to control the verbosity of logging via the system property. Also added various profiles for testing different databases (test-derby, test-hsqldb, test-mysql, test-postgresql, test-sqlserver, test-sybase, and test-custom)\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@496880 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a7d3053d9cc4489673b7590a471415c594fa1fc2","url":"https://api.github.com/repos/apache/openjpa/git/trees/a7d3053d9cc4489673b7590a471415c594fa1fc2"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/49857ff1e88ee3d62af4cd3a692dad039eec5037","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/49857ff1e88ee3d62af4cd3a692dad039eec5037","html_url":"https://github.com/apache/openjpa/commit/49857ff1e88ee3d62af4cd3a692dad039eec5037","comments_url":"https://api.github.com/repos/apache/openjpa/commits/49857ff1e88ee3d62af4cd3a692dad039eec5037/comments","author":null,"committer":null,"parents":[{"sha":"c87c187f102faa5c4e541ae3a387a54625f7dafe","url":"https://api.github.com/repos/apache/openjpa/commits/c87c187f102faa5c4e541ae3a387a54625f7dafe","html_url":"https://github.com/apache/openjpa/commit/c87c187f102faa5c4e541ae3a387a54625f7dafe"}],"stats":{"total":328,"additions":306,"deletions":22},"files":[{"sha":"ef8f5f26b5bb69269cd1bb4669dc6f8c86976348","filename":"openjpa-persistence-jdbc/pom.xml","status":"modified","additions":285,"deletions":6,"changes":291,"blob_url":"https://github.com/apache/openjpa/blob/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/pom.xml?ref=49857ff1e88ee3d62af4cd3a692dad039eec5037","patch":"@@ -29,6 +29,291 @@\n         <artifactId>openjpa</artifactId>\n         <version>0.9.7-incubating-SNAPSHOT</version>\n     </parent>\n+\n+    <properties>\n+        <openjpa.loglevel>INFO</openjpa.loglevel>\n+    </properties>\n+\n+    <profiles>\n+        <!-- Profile for testing with Apache Derby -->\n+        <profile>\n+            <id>test-derby</id>\n+            <activation>\n+                <activeByDefault>true</activeByDefault>\n+                <property><name>test-derby</name></property>\n+            </activation>\n+            <dependencies>\n+                <dependency>\n+                    <groupId>org.apache.derby</groupId>\n+                    <artifactId>derby</artifactId>\n+                    <version>10.2.1.6</version>\n+                    <scope>test</scope>\n+                </dependency>\n+            </dependencies>\n+\n+            <build>\n+                <pluginManagement>\n+                    <plugins>\n+                        <plugin>\n+                            <groupId>org.apache.maven.plugins</groupId>\n+                            <artifactId>maven-surefire-plugin</artifactId>\n+                            <configuration>\n+                                <systemProperties>\n+                                    <property>\n+                                        <name>openjpa.Log</name>\n+                                        <value>DefaultLevel=${openjpa.loglevel}</value>\n+                                    </property>\n+                                    <property>\n+                                        <name>openjpa.ConnectionDriverName</name>\n+                                        <value>org.apache.commons.dbcp.BasicDataSource</value>\n+                                    </property>\n+                                    <property>\n+                                        <name>openjpa.ConnectionProperties</name>\n+                                        <value>DriverClassName=org.apache.derby.jdbc.EmbeddedDriver,Url=jdbc:derby:target/database/openjpa-derby-database;create=true,MaxActive=100,MaxWait=10000,TestOnBorrow=true</value>\n+                                    </property>\n+                                </systemProperties>\n+                            </configuration>\n+                        </plugin>\n+                    </plugins>\n+                </pluginManagement>\n+            </build>\n+        </profile>\n+\n+\n+        <!-- Profile for testing with HSQL DB -->\n+        <profile>\n+            <id>test-hsqldb</id>\n+            <activation><property><name>test-hsqldb</name></property></activation>\n+            <dependencies>\n+                <dependency>\n+                    <groupId>hsqldb</groupId>\n+                    <artifactId>hsqldb</artifactId>\n+                    <version>1.8.0.7</version>\n+                    <scope>test</scope>\n+                </dependency>\n+            </dependencies>\n+            <build>\n+                <pluginManagement>\n+                    <plugins>\n+                        <plugin>\n+                            <groupId>org.apache.maven.plugins</groupId>\n+                            <artifactId>maven-surefire-plugin</artifactId>\n+                            <configuration>\n+                                <systemProperties>\n+                                    <property>\n+                                        <name>openjpa.ConnectionDriverName</name>\n+                                        <value>org.apache.commons.dbcp.BasicDataSource</value>\n+                                    </property>\n+                                    <property>\n+                                        <name>openjpa.ConnectionProperties</name>\n+                                        <value>DriverClassName=org.hsqldb.jdbcDriver,Url=jdbc:hsqldb:target/database/openjpa-hsqldb-database;create=true,MaxActive=100,MaxWait=10000,TestOnBorrow=true</value>\n+                                    </property>\n+                                </systemProperties>\n+                            </configuration>\n+                        </plugin>\n+                    </plugins>\n+                </pluginManagement>\n+            </build>\n+        </profile>\n+\n+\n+        <!-- Profile for testing with MySQL DB -->\n+        <profile>\n+            <id>test-mysql</id>\n+            <activation><property><name>test-mysql</name></property></activation>\n+            <dependencies>\n+                <dependency>\n+                    <groupId>mysql</groupId>\n+                    <artifactId>mysql-connector-java</artifactId>\n+                    <version>5.0.4</version>\n+                    <scope>test</scope>\n+                </dependency>\n+            </dependencies>\n+            <build>\n+                <pluginManagement>\n+                    <plugins>\n+                        <plugin>\n+                            <groupId>org.apache.maven.plugins</groupId>\n+                            <artifactId>maven-surefire-plugin</artifactId>\n+                            <configuration>\n+                                <systemProperties>\n+                                    <property>\n+                                        <name>openjpa.ConnectionDriverName</name>\n+                                        <value>org.apache.commons.dbcp.BasicDataSource</value>\n+                                    </property>\n+                                    <property>\n+                                        <name>openjpa.ConnectionProperties</name>\n+                                        <value>DriverClassName=com.mysql.jdbc.Driver,Url=${openjpa.mysql.url},MaxActive=100,MaxWait=10000,TestOnBorrow=true,Username=${openjpa.mysql.username},Password=${openjpa.mysql.password}</value>\n+                                    </property>\n+                                </systemProperties>\n+                            </configuration>\n+                        </plugin>\n+                    </plugins>\n+                </pluginManagement>\n+            </build>\n+        </profile>\n+\n+\n+        <!-- Profile for testing with PostgreSQL DB -->\n+        <profile>\n+            <id>test-postgresql</id>\n+            <activation><property><name>test-postgresql</name></property></activation>\n+            <dependencies>\n+                <dependency>\n+                    <groupId>postgresql</groupId>\n+                    <artifactId>postgresql</artifactId>\n+                    <version>8.1-407.jdbc3</version>\n+                    <scope>test</scope>\n+                </dependency>\n+            </dependencies>\n+            <build>\n+                <pluginManagement>\n+                    <plugins>\n+                        <plugin>\n+                            <groupId>org.apache.maven.plugins</groupId>\n+                            <artifactId>maven-surefire-plugin</artifactId>\n+                            <configuration>\n+                                <systemProperties>\n+                                    <property>\n+                                        <name>openjpa.ConnectionDriverName</name>\n+                                        <value>org.apache.commons.dbcp.BasicDataSource</value>\n+                                    </property>\n+                                    <property>\n+                                        <name>openjpa.ConnectionProperties</name>\n+                                        <value>DriverClassName=org.postgresql.Driver,Url=${openjpa.postgresql.url},MaxActive=100,MaxWait=10000,TestOnBorrow=true,Username=${openjpa.postgresql.username},Password=${openjpa.postgresql.password}</value>\n+                                    </property>\n+                                </systemProperties>\n+                            </configuration>\n+                        </plugin>\n+                    </plugins>\n+                </pluginManagement>\n+            </build>\n+        </profile>\n+\n+\n+        <!-- Profile for testing with SQLServer DB using the jTDS driver -->\n+        <profile>\n+            <id>test-sqlserver</id>\n+            <activation><property><name>test-sqlserver</name></property></activation>\n+            <dependencies>\n+                <dependency>\n+                    <groupId>net.sourceforge.jtds</groupId>\n+                    <artifactId>jtds</artifactId>\n+                    <version>1.2</version>\n+                    <scope>test</scope>\n+                </dependency>\n+            </dependencies>\n+            <build>\n+                <pluginManagement>\n+                    <plugins>\n+                        <plugin>\n+                            <groupId>org.apache.maven.plugins</groupId>\n+                            <artifactId>maven-surefire-plugin</artifactId>\n+                            <configuration>\n+                                <systemProperties>\n+                                    <property>\n+                                        <name>openjpa.ConnectionDriverName</name>\n+                                        <value>org.apache.commons.dbcp.BasicDataSource</value>\n+                                    </property>\n+                                    <property>\n+                                        <name>openjpa.ConnectionProperties</name>\n+                                        <value>DriverClassName=net.sourceforge.jtds.jdbc.Driver,Url=${openjpa.sqlserver.url},MaxActive=100,MaxWait=10000,TestOnBorrow=true,Username=${openjpa.sqlserver.username},Password=${openjpa.sqlserver.password}</value>\n+                                    </property>\n+                                </systemProperties>\n+                            </configuration>\n+                        </plugin>\n+                    </plugins>\n+                </pluginManagement>\n+            </build>\n+        </profile>\n+\n+\n+        <!-- Profile for testing with Sybase DB using the jTDS driver -->\n+        <profile>\n+            <id>test-sybase</id>\n+            <activation><property><name>test-sybase</name></property></activation>\n+            <dependencies>\n+                <dependency>\n+                    <groupId>net.sourceforge.jtds</groupId>\n+                    <artifactId>jtds</artifactId>\n+                    <version>1.2</version>\n+                    <scope>test</scope>\n+                </dependency>\n+            </dependencies>\n+            <build>\n+                <pluginManagement>\n+                    <plugins>\n+                        <plugin>\n+                            <groupId>org.apache.maven.plugins</groupId>\n+                            <artifactId>maven-surefire-plugin</artifactId>\n+                            <configuration>\n+                                <systemProperties>\n+                                    <property>\n+                                        <name>openjpa.ConnectionDriverName</name>\n+                                        <value>org.apache.commons.dbcp.BasicDataSource</value>\n+                                    </property>\n+                                    <property>\n+                                        <name>openjpa.ConnectionProperties</name>\n+                                        <value>DriverClassName=net.sourceforge.jtds.jdbc.Driver,Url=${openjpa.sybase.url},MaxActive=100,MaxWait=10000,TestOnBorrow=true,Username=${openjpa.sybase.username},Password=${openjpa.sybase.password}</value>\n+                                    </property>\n+                                </systemProperties>\n+                            </configuration>\n+                        </plugin>\n+                    </plugins>\n+                </pluginManagement>\n+            </build>\n+        </profile>\n+\n+        <!-- Profile for testing with a custom DB using a system jar -->\n+        <!--\n+            For example, to test with Oracle, you might run:\n+        mvn test -Dtest=TestPersistence -Ptest-custom \\\n+          -Dopenjpa.custom.driverjar=$(pwd)/drivers/jdbc-oracle-10_2_0_1_0.jar \\\n+          -Dopenjpa.custom.driverclass=oracle.jdbc.driver.OracleDriver \\\n+          -Dopenjpa.custom.url=jdbc:oracle:thin:@HOST:PORT:DBNAME \\\n+          -Dopenjpa.custom.username=USERNAME \\\n+          -Dopenjpa.custom.password=PASSWORD\n+        -->\n+        <profile>\n+            <id>test-custom</id>\n+            <activation><property><name>test-custom</name></property></activation>\n+            <dependencies>\n+                <dependency>\n+                    <groupId>openjpa.customdriver</groupId>\n+                    <artifactId>openjpa.customdriver</artifactId>\n+                    <version>1.0</version>\n+                    <scope>system</scope>\n+                    <systemPath>${openjpa.custom.driverjar}</systemPath>\n+                </dependency>\n+            </dependencies>\n+            <build>\n+                <pluginManagement>\n+                    <plugins>\n+                        <plugin>\n+                            <groupId>org.apache.maven.plugins</groupId>\n+                            <artifactId>maven-surefire-plugin</artifactId>\n+                            <configuration>\n+                                <systemProperties>\n+                                    <property>\n+                                        <name>openjpa.ConnectionDriverName</name>\n+                                        <value>org.apache.commons.dbcp.BasicDataSource</value>\n+                                    </property>\n+                                    <property>\n+                                        <name>openjpa.ConnectionProperties</name>\n+                                        <value>DriverClassName=${openjpa.custom.driverclass},Url=${openjpa.custom.url},MaxActive=100,MaxWait=10000,TestOnBorrow=true,Username=${openjpa.custom.username},Password=${openjpa.custom.password}</value>\n+                                    </property>\n+                                </systemProperties>\n+                            </configuration>\n+                        </plugin>\n+                    </plugins>\n+                </pluginManagement>\n+            </build>\n+        </profile>\n+\n+    </profiles>\n+\n+\n+\n     <dependencies>\n         <dependency>\n             <groupId>org.apache.openjpa</groupId>\n@@ -42,12 +327,6 @@\n             <version>${pom.version}</version>\n             <scope>compile</scope>\n         </dependency>\n-        <dependency>\n-            <groupId>org.apache.derby</groupId>\n-            <artifactId>derby</artifactId>\n-            <version>10.2.1.6</version>\n-            <scope>test</scope>\n-        </dependency>\n         <dependency>\n             <groupId>commons-dbcp</groupId>\n             <artifactId>commons-dbcp</artifactId>"},{"sha":"f5037c9b6a0e9be83d7ba189215bdf9ebfcce4ab","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/meta/TestMappingToolAutoDelete.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/meta/TestMappingToolAutoDelete.java","raw_url":"https://github.com/apache/openjpa/raw/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/meta/TestMappingToolAutoDelete.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/meta/TestMappingToolAutoDelete.java?ref=49857ff1e88ee3d62af4cd3a692dad039eec5037","patch":"@@ -24,7 +24,7 @@\n     private OpenJPAEntityManagerFactory emf;\n \n     public void setUp() {\n-        Map props = new HashMap();\n+        Map props = new HashMap(System.getProperties());\n         props.put(\"openjpa.MetaDataFactory\",\n             \"jpa(Types=\" + AllFieldTypes.class.getName() + \")\");\n         emf = OpenJPAPersistence.cast( "},{"sha":"c949dd07e4f813bcc1d7dcc2edbdf212a1b15f8c","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/kernel/TestQueryCompilationCache.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/kernel/TestQueryCompilationCache.java","raw_url":"https://github.com/apache/openjpa/raw/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/kernel/TestQueryCompilationCache.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/kernel/TestQueryCompilationCache.java?ref=49857ff1e88ee3d62af4cd3a692dad039eec5037","patch":"@@ -35,7 +35,7 @@\n     extends TestCase {\n     \n     public void testDynamicJPQLWithNamedEntity() {\n-        Map props = new HashMap();\n+        Map props = new HashMap(System.getProperties());\n         props.put(\"openjpa.MetaDataFactory\", \"jpa(Types=\" \n             + NamedEntity.class.getName() + \")\");\n         OpenJPAEntityManagerFactory emf = OpenJPAPersistence.cast("},{"sha":"f47ee96364fd9183e7a613fcc9827d757cf3fe00","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestDataCacheOptimisticLockRecovery.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestDataCacheOptimisticLockRecovery.java","raw_url":"https://github.com/apache/openjpa/raw/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestDataCacheOptimisticLockRecovery.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestDataCacheOptimisticLockRecovery.java?ref=49857ff1e88ee3d62af4cd3a692dad039eec5037","patch":"@@ -38,7 +38,7 @@\n     private int pk;\r\n \r\n     public void setUp() {\r\n-        Map options = new HashMap();\r\n+        Map options = new HashMap(System.getProperties());\r\n \r\n         // turn on caching\r\n         options.put(\"openjpa.DataCache\", \"true\");\r"},{"sha":"17e7eeffc343a8c6a02c48204f4518b42ed5c1e0","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/TestAttachWithNoChanges.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/TestAttachWithNoChanges.java","raw_url":"https://github.com/apache/openjpa/raw/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/TestAttachWithNoChanges.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/TestAttachWithNoChanges.java?ref=49857ff1e88ee3d62af4cd3a692dad039eec5037","patch":"@@ -39,7 +39,7 @@\n     public void setUp() {\n         String types = DetachmentOneManyParent.class.getName() + \";\"\n             + DetachmentOneManyChild.class.getName(); \n-        Map props = new HashMap();\n+        Map props = new HashMap(System.getProperties());\n         props.put(\"openjpa.MetaDataFactory\", \"jpa(Types=\" + types + \")\");\n         emf = Persistence.createEntityManagerFactory(\"test\", props);\n     }"},{"sha":"d5dbe599f379d37efea0f1e22b015cabed95af17","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/TestDetachmentOneMany.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/TestDetachmentOneMany.java","raw_url":"https://github.com/apache/openjpa/raw/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/TestDetachmentOneMany.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/TestDetachmentOneMany.java?ref=49857ff1e88ee3d62af4cd3a692dad039eec5037","patch":"@@ -40,7 +40,7 @@\n     public void setUp() {\n         String types = DetachmentOneManyParent.class.getName() + \";\"\n             + DetachmentOneManyChild.class.getName(); \n-        Map props = new HashMap();\n+        Map props = new HashMap(System.getProperties());\n         props.put(\"openjpa.MetaDataFactory\", \"jpa(Types=\" + types + \")\");\n         emf = (OpenJPAEntityManagerFactory) Persistence.\n             createEntityManagerFactory(\"test\", props);"},{"sha":"df9de20bd0c62dbfb37029b099e84d0b1ad145b2","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/generationtype/TestGenerationType.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/generationtype/TestGenerationType.java","raw_url":"https://github.com/apache/openjpa/raw/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/generationtype/TestGenerationType.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/generationtype/TestGenerationType.java?ref=49857ff1e88ee3d62af4cd3a692dad039eec5037","patch":"@@ -41,7 +41,7 @@\n     private OpenJPAEntityManagerFactory emf;\n \n     public void setUp() {\n-        Map props = new HashMap();\n+        Map props = new HashMap(System.getProperties());\n         props.put(\"openjpa.MetaDataFactory\",\n             \"jpa(Types=\" + IdentityGenerationType.class.getName() + \")\");\n         emf = (OpenJPAEntityManagerFactory) Persistence."},{"sha":"cad120ac678765129eeada541cd3e05ead9c7273","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/TestMultipleMappedSuperclassHierarchy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/TestMultipleMappedSuperclassHierarchy.java","raw_url":"https://github.com/apache/openjpa/raw/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/TestMultipleMappedSuperclassHierarchy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/TestMultipleMappedSuperclassHierarchy.java?ref=49857ff1e88ee3d62af4cd3a692dad039eec5037","patch":"@@ -39,7 +39,7 @@ public void setUp() {\n         String types = MappedSuperclassBase.class.getName() + \";\"\n             + MappedSuperclassL2.class.getName() + \";\"\n             + EntityL3.class.getName();\n-        Map props = new HashMap();\n+        Map props = new HashMap(System.getProperties());\n         props.put(\"openjpa.MetaDataFactory\", \"jpa(Types=\" + types + \")\");\n         emf = Persistence.createEntityManagerFactory(\"test\", props);\n     }"},{"sha":"948ac26f30c63523e7671a9ed8569a4122b9b811","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestAbstractSchemaName.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestAbstractSchemaName.java","raw_url":"https://github.com/apache/openjpa/raw/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestAbstractSchemaName.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestAbstractSchemaName.java?ref=49857ff1e88ee3d62af4cd3a692dad039eec5037","patch":"@@ -36,7 +36,7 @@\n     private EntityManagerFactory emf;\n \n     public void setUp() {\n-        Map props = new HashMap();\n+        Map props = new HashMap(System.getProperties());\n         props.put(\"openjpa.MetaDataFactory\", \"jpa(Types=\" \n             + NamedEntity.class.getName() + \")\");\n         emf = Persistence.createEntityManagerFactory(\"test\", props);"},{"sha":"13d6b0c6c112849180c1c1d67dea1f0a9933a87e","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestInMemoryQueryMatchEscapes.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestInMemoryQueryMatchEscapes.java","raw_url":"https://github.com/apache/openjpa/raw/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestInMemoryQueryMatchEscapes.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestInMemoryQueryMatchEscapes.java?ref=49857ff1e88ee3d62af4cd3a692dad039eec5037","patch":"@@ -34,7 +34,7 @@\n     private EntityManagerFactory emf;\r\n \r\n     public void setUp() {\r\n-        Map options = new HashMap();\r\n+        Map options = new HashMap(System.getProperties());\r\n \r\n         // ensure that OpenJPA knows about our type, so that \r\n         // auto-schema-creation works\r"},{"sha":"8192d707f183d70c4cf5fabcb6aab616c4aa411a","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestQueryExcludingSubclasses.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestQueryExcludingSubclasses.java","raw_url":"https://github.com/apache/openjpa/raw/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestQueryExcludingSubclasses.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestQueryExcludingSubclasses.java?ref=49857ff1e88ee3d62af4cd3a692dad039eec5037","patch":"@@ -38,7 +38,7 @@\n     private EntityManagerFactory emf;\n \n     public void setUp() {\n-        Map props = new HashMap();\n+        Map props = new HashMap(System.getProperties());\n         props.put(\"openjpa.MetaDataFactory\", \"jpa(Types=\" \n             + ManyOneEntity.class.getName() + \";\"\n             + ManyOneEntitySub.class.getName() + \")\");"},{"sha":"31e33d6ed7e7472a38faab7acb5fc839fb3ef24e","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestQueryIdOfRelationDoesNotJoin.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestQueryIdOfRelationDoesNotJoin.java","raw_url":"https://github.com/apache/openjpa/raw/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestQueryIdOfRelationDoesNotJoin.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestQueryIdOfRelationDoesNotJoin.java?ref=49857ff1e88ee3d62af4cd3a692dad039eec5037","patch":"@@ -39,7 +39,7 @@\n     private long e3Id;\n \n     public void setUp() {\n-        Map props = new HashMap();\n+        Map props = new HashMap(System.getProperties());\n         props.put(\"openjpa.MetaDataFactory\", \"jpa(Types=\"\n                 + ManyOneEntity.class.getName() + \";\"\n                 + ManyOneEntitySub.class.getName() + \")\");"},{"sha":"c8384931b433285e9145a9d2d999f82e33cddbe7","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestCascadingOneManyWithForeignKey.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestCascadingOneManyWithForeignKey.java","raw_url":"https://github.com/apache/openjpa/raw/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestCascadingOneManyWithForeignKey.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestCascadingOneManyWithForeignKey.java?ref=49857ff1e88ee3d62af4cd3a692dad039eec5037","patch":"@@ -40,7 +40,7 @@\n     public void setUp() {\n         String types = CascadingOneManyParent.class.getName() + \";\"\n             + CascadingOneManyChild.class.getName(); \n-        Map props = new HashMap();\n+        Map props = new HashMap(System.getProperties());\n         props.put(\"openjpa.MetaDataFactory\", \"jpa(Types=\" + types + \")\");\n         emf = (OpenJPAEntityManagerFactory) Persistence.\n             createEntityManagerFactory(\"test\", props);"},{"sha":"c1088bf27b97030987862d5d06fc0fb2ca52cf46","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestManyOneAsId.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestManyOneAsId.java","raw_url":"https://github.com/apache/openjpa/raw/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestManyOneAsId.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestManyOneAsId.java?ref=49857ff1e88ee3d62af4cd3a692dad039eec5037","patch":"@@ -41,7 +41,7 @@\n     private long cid;\n \n     public void setUp() {\n-        Map props = new HashMap();\n+        Map props = new HashMap(System.getProperties());\n         props.put(\"openjpa.MetaDataFactory\", \"jpa(Types=\" \n             + BasicEntity.class.getName() + \";\"\n             + DataStoreBasicEntity.class.getName() + \";\""},{"sha":"09d0207dbcb0d1e941fc89facb646ebb60beda88","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestMultipleSameTypedEmbeddedWithEagerRelations.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestMultipleSameTypedEmbeddedWithEagerRelations.java","raw_url":"https://github.com/apache/openjpa/raw/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestMultipleSameTypedEmbeddedWithEagerRelations.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestMultipleSameTypedEmbeddedWithEagerRelations.java?ref=49857ff1e88ee3d62af4cd3a692dad039eec5037","patch":"@@ -38,7 +38,7 @@\n     private EntityManagerFactory emf;\n \n     public void setUp() {\n-        Map props = new HashMap();\n+        Map props = new HashMap(System.getProperties());\n         props.put(\"openjpa.MetaDataFactory\", \"jpa(Types=\" \n             + EmbeddableWithRelation.class.getName() + \";\"\n             + MultipleSameTypedEmbedded.class.getName() + \")\");"},{"sha":"2c2652831a125434f930c9d2a014e0b80c0c7dfe","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestTargetedIFaceRelations.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestTargetedIFaceRelations.java","raw_url":"https://github.com/apache/openjpa/raw/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestTargetedIFaceRelations.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestTargetedIFaceRelations.java?ref=49857ff1e88ee3d62af4cd3a692dad039eec5037","patch":"@@ -36,7 +36,7 @@\n     private EntityManagerFactory emf;\n \n     public void setUp() {\n-        Map props = new HashMap();\n+        Map props = new HashMap(System.getProperties());\n         props.put(\"openjpa.MetaDataFactory\", \"jpa(Types=\" \n             + TargetedIFaceRelationParent.class.getName() + \")\");\n         emf = Persistence.createEntityManagerFactory(\"test\", props);"},{"sha":"a320665be55f9b593c95fec0b0248c8b040d585f","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/TestPersistence.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/TestPersistence.java","raw_url":"https://github.com/apache/openjpa/raw/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/TestPersistence.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/TestPersistence.java?ref=49857ff1e88ee3d62af4cd3a692dad039eec5037","patch":"@@ -37,7 +37,7 @@\n     private EntityManagerFactory emf;\n \n     public void setUp() {\n-        Map props = new HashMap();\n+        Map props = new HashMap(System.getProperties());\n         props.put(\"openjpa.MetaDataFactory\",\n             \"jpa(Types=\" + AllFieldTypes.class.getName() + \")\");\n         emf = Persistence.createEntityManagerFactory(\"test\", props);"},{"sha":"77b7411736cc6198f833ea6a4bfa4b03c5d57c47","filename":"openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/49857ff1e88ee3d62af4cd3a692dad039eec5037/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml?ref=49857ff1e88ee3d62af4cd3a692dad039eec5037","patch":"@@ -25,10 +25,14 @@\n         </provider>\n         -->\n         <properties>\n+            <!--\n+            These properties are instead passed via System properties\n+\n             <property name=\"openjpa.ConnectionDriverName\"\n                 value=\"org.apache.commons.dbcp.BasicDataSource\"/>\n             <property name=\"openjpa.ConnectionProperties\"\n                 value=\"DriverClassName=org.apache.derby.jdbc.EmbeddedDriver,Url=jdbc:derby:target/database/openjpa-test-database;create=true,MaxActive=100,MaxWait=10000,TestOnBorrow=true\"/>\n+            -->\n             <property name=\"openjpa.jdbc.SynchronizeMappings\"\n                 value=\"buildSchema(ForeignKeys=true)\"/>\n         </properties>"},{"sha":"5a75ddd18d9f1d9fa526121bf5ca29659d32ebc8","filename":"pom.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/49857ff1e88ee3d62af4cd3a692dad039eec5037/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/49857ff1e88ee3d62af4cd3a692dad039eec5037/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/pom.xml?ref=49857ff1e88ee3d62af4cd3a692dad039eec5037","patch":"@@ -237,6 +237,7 @@\n                     <artifactId>maven-surefire-plugin</artifactId>\n                     <configuration>\n                         <useFile>false</useFile>\n+                        <trimStackTrace>false</trimStackTrace>\n                     </configuration>\n                 </plugin>\n             </plugins>"}]}

