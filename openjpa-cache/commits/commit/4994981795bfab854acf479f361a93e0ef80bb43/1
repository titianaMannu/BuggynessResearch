{"sha":"4994981795bfab854acf479f361a93e0ef80bb43","node_id":"MDY6Q29tbWl0MjA2MzY0OjQ5OTQ5ODE3OTViZmFiODU0YWNmNDc5ZjM2MWE5M2UwZWY4MGJiNDM=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2009-10-07T13:11:21Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2009-10-07T13:11:21Z"},"message":"OPENJPA-1338:\nSetting svn:eol-style = native for new files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@822708 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"9b6f47e6589597fefd78db4caf4bafbe384b5a4e","url":"https://api.github.com/repos/apache/openjpa/git/trees/9b6f47e6589597fefd78db4caf4bafbe384b5a4e"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/4994981795bfab854acf479f361a93e0ef80bb43","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/4994981795bfab854acf479f361a93e0ef80bb43","html_url":"https://github.com/apache/openjpa/commit/4994981795bfab854acf479f361a93e0ef80bb43","comments_url":"https://api.github.com/repos/apache/openjpa/commits/4994981795bfab854acf479f361a93e0ef80bb43/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"6ab4b48d5546b4c6b345a0a98b8d3f2ac547438e","url":"https://api.github.com/repos/apache/openjpa/commits/6ab4b48d5546b4c6b345a0a98b8d3f2ac547438e","html_url":"https://github.com/apache/openjpa/commit/6ab4b48d5546b4c6b345a0a98b8d3f2ac547438e"}],"stats":{"total":288,"additions":144,"deletions":144},"files":[{"sha":"4cca8513230eed2d6d24345f4fa2e85508d9bbeb","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/Embed_Coll_Map.java","status":"modified","additions":67,"deletions":67,"changes":134,"blob_url":"https://github.com/apache/openjpa/blob/4994981795bfab854acf479f361a93e0ef80bb43/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/Embed_Coll_Map.java","raw_url":"https://github.com/apache/openjpa/raw/4994981795bfab854acf479f361a93e0ef80bb43/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/Embed_Coll_Map.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/Embed_Coll_Map.java?ref=4994981795bfab854acf479f361a93e0ef80bb43","patch":"@@ -1,67 +1,67 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one\r\n- * or more contributor license agreements.  See the NOTICE file\r\n- * distributed with this work for additional information\r\n- * regarding copyright ownership.  The ASF licenses this file\r\n- * to you under the Apache License, Version 2.0 (the\r\n- * \"License\"); you may not use this file except in compliance\r\n- * with the License.  You may obtain a copy of the License at\r\n- *\r\n- * http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing,\r\n- * software distributed under the License is distributed on an\r\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- * KIND, either express or implied.  See the License for the\r\n- * specific language governing permissions and limitations\r\n- * under the License.\r\n- */\r\n-package org.apache.openjpa.persistence.embed;\r\n-\r\n-import java.util.HashMap;\r\n-import java.util.Map;\r\n-\r\n-import javax.persistence.ElementCollection;\r\n-import javax.persistence.Embeddable;\r\n-\r\n-@Embeddable \r\n-public class Embed_Coll_Map {\r\n-    protected String name1;\r\n-    protected String name2;\r\n-    protected String name3;\r\n-    \r\n-    @ElementCollection\r\n-    public Map<Integer, Integer> mapKeyInteger = new HashMap<Integer, Integer>();\r\n-    \r\n-    public String getName1() {\r\n-        return name1;\r\n-    }\r\n-    \r\n-    public void setName1(String name1) {\r\n-        this.name1 = name1;\r\n-    }\r\n-    \r\n-    public String getName2() {\r\n-        return name2;\r\n-    }\r\n-    \r\n-    public void setName2(String name2) {\r\n-        this.name2 = name2;\r\n-    }\r\n-    \r\n-    public String getName3() {\r\n-        return name3;\r\n-    }\r\n-    \r\n-    public void setName3(String name3) {\r\n-        this.name3 = name3;\r\n-    }\r\n-    \r\n-    public Map<Integer,Integer> getMap() {\r\n-        return mapKeyInteger;\r\n-    }\r\n- \r\n-    public void addMap(Integer key, Integer value) {\r\n-        mapKeyInteger.put(key, value);\r\n-    }\r\n-}\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.embed;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import javax.persistence.ElementCollection;\n+import javax.persistence.Embeddable;\n+\n+@Embeddable \n+public class Embed_Coll_Map {\n+    protected String name1;\n+    protected String name2;\n+    protected String name3;\n+    \n+    @ElementCollection\n+    public Map<Integer, Integer> mapKeyInteger = new HashMap<Integer, Integer>();\n+    \n+    public String getName1() {\n+        return name1;\n+    }\n+    \n+    public void setName1(String name1) {\n+        this.name1 = name1;\n+    }\n+    \n+    public String getName2() {\n+        return name2;\n+    }\n+    \n+    public void setName2(String name2) {\n+        this.name2 = name2;\n+    }\n+    \n+    public String getName3() {\n+        return name3;\n+    }\n+    \n+    public void setName3(String name3) {\n+        this.name3 = name3;\n+    }\n+    \n+    public Map<Integer,Integer> getMap() {\n+        return mapKeyInteger;\n+    }\n+ \n+    public void addMap(Integer key, Integer value) {\n+        mapKeyInteger.put(key, value);\n+    }\n+}"},{"sha":"6b4601e01e21a68024f998419736c837db2e08a3","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/EntityA_Embed_Coll_Map.java","status":"modified","additions":77,"deletions":77,"changes":154,"blob_url":"https://github.com/apache/openjpa/blob/4994981795bfab854acf479f361a93e0ef80bb43/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/EntityA_Embed_Coll_Map.java","raw_url":"https://github.com/apache/openjpa/raw/4994981795bfab854acf479f361a93e0ef80bb43/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/EntityA_Embed_Coll_Map.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/EntityA_Embed_Coll_Map.java?ref=4994981795bfab854acf479f361a93e0ef80bb43","patch":"@@ -1,77 +1,77 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one\r\n- * or more contributor license agreements.  See the NOTICE file\r\n- * distributed with this work for additional information\r\n- * regarding copyright ownership.  The ASF licenses this file\r\n- * to you under the Apache License, Version 2.0 (the\r\n- * \"License\"); you may not use this file except in compliance\r\n- * with the License.  You may obtain a copy of the License at\r\n- *\r\n- * http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing,\r\n- * software distributed under the License is distributed on an\r\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- * KIND, either express or implied.  See the License for the\r\n- * specific language governing permissions and limitations\r\n- * under the License.\r\n- */\r\n-package org.apache.openjpa.persistence.embed;\r\n-\r\n-import java.io.Serializable;\r\n-\r\n-import javax.persistence.Basic;\r\n-import javax.persistence.Column;\r\n-import javax.persistence.Embedded;\r\n-import javax.persistence.Entity;\r\n-import javax.persistence.FetchType;\r\n-import javax.persistence.Id;\r\n-import javax.persistence.Table;\r\n-\r\n-@Entity\r\n-@Table(name=\"EETMM\")\r\n-public class EntityA_Embed_Coll_Map implements Serializable {\r\n-    @Id\r\n-    Integer id;\r\n-\r\n-    @Column(length = 30)\r\n-    String name;\r\n-\r\n-    @Basic(fetch = FetchType.LAZY)\r\n-    int age;\r\n-\r\n-    @Embedded\r\n-    protected Embed_Coll_Map embed;\r\n-\r\n-    public int getAge() {\r\n-        return age;\r\n-    }\r\n-\r\n-    public void setAge(int age) {\r\n-        this.age = age;\r\n-    }\r\n-\r\n-    public Integer getId() {\r\n-        return id;\r\n-    }\r\n-\r\n-    public void setId(Integer id) {\r\n-        this.id = id;\r\n-    }\r\n-\r\n-    public String getName() {\r\n-        return name;\r\n-    }\r\n-\r\n-    public void setName(String name) {\r\n-        this.name = name;\r\n-    }\r\n-\r\n-    public Embed_Coll_Map getEmbed() {\r\n-        return embed;\r\n-    }\r\n-\r\n-    public void setEmbed(Embed_Coll_Map embed) {\r\n-        this.embed = embed;\r\n-    }\r\n-}\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.embed;\n+\n+import java.io.Serializable;\n+\n+import javax.persistence.Basic;\n+import javax.persistence.Column;\n+import javax.persistence.Embedded;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.Id;\n+import javax.persistence.Table;\n+\n+@Entity\n+@Table(name=\"EETMM\")\n+public class EntityA_Embed_Coll_Map implements Serializable {\n+    @Id\n+    Integer id;\n+\n+    @Column(length = 30)\n+    String name;\n+\n+    @Basic(fetch = FetchType.LAZY)\n+    int age;\n+\n+    @Embedded\n+    protected Embed_Coll_Map embed;\n+\n+    public int getAge() {\n+        return age;\n+    }\n+\n+    public void setAge(int age) {\n+        this.age = age;\n+    }\n+\n+    public Integer getId() {\n+        return id;\n+    }\n+\n+    public void setId(Integer id) {\n+        this.id = id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public Embed_Coll_Map getEmbed() {\n+        return embed;\n+    }\n+\n+    public void setEmbed(Embed_Coll_Map embed) {\n+        this.embed = embed;\n+    }\n+}"}]}

