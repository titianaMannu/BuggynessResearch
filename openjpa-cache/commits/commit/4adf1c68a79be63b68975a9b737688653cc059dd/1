{"sha":"4adf1c68a79be63b68975a9b737688653cc059dd","node_id":"MDY6Q29tbWl0MjA2MzY0OjRhZGYxYzY4YTc5YmU2M2I2ODk3NWE5YjczNzY4ODY1M2NjMDU5ZGQ=","commit":{"author":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2010-01-20T17:33:59Z"},"committer":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2010-01-20T17:33:59Z"},"message":"OPENJPA-1466 Fix Junit test failures on Oracle\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@901295 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"9429acd2b2745509b5fc8047aec146b7665ab33f","url":"https://api.github.com/repos/apache/openjpa/git/trees/9429acd2b2745509b5fc8047aec146b7665ab33f"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/4adf1c68a79be63b68975a9b737688653cc059dd","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/4adf1c68a79be63b68975a9b737688653cc059dd","html_url":"https://github.com/apache/openjpa/commit/4adf1c68a79be63b68975a9b737688653cc059dd","comments_url":"https://api.github.com/repos/apache/openjpa/commits/4adf1c68a79be63b68975a9b737688653cc059dd/comments","author":null,"committer":null,"parents":[{"sha":"9e736884121e01a153c1931cab19389d746c8779","url":"https://api.github.com/repos/apache/openjpa/commits/9e736884121e01a153c1931cab19389d746c8779","html_url":"https://github.com/apache/openjpa/commit/9e736884121e01a153c1931cab19389d746c8779"}],"stats":{"total":62,"additions":53,"deletions":9},"files":[{"sha":"2ad1629698c000758c564be58119679250779c31","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/TestTypesafeCriteria.java","status":"modified","additions":46,"deletions":6,"changes":52,"blob_url":"https://github.com/apache/openjpa/blob/4adf1c68a79be63b68975a9b737688653cc059dd/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/TestTypesafeCriteria.java","raw_url":"https://github.com/apache/openjpa/raw/4adf1c68a79be63b68975a9b737688653cc059dd/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/TestTypesafeCriteria.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/TestTypesafeCriteria.java?ref=4adf1c68a79be63b68975a9b737688653cc059dd","patch":"@@ -19,23 +19,20 @@\n package org.apache.openjpa.persistence.criteria;\n \n import java.math.BigDecimal;\n+import java.sql.Date;\n import java.sql.Time;\n+import java.sql.Timestamp;\n import java.util.ArrayList;\n-import java.util.Arrays;\n import java.util.HashMap;\n-import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n-import java.util.Set;\n \n import javax.persistence.Parameter;\n import javax.persistence.Query;\n import javax.persistence.Tuple;\n import javax.persistence.TypedQuery;\n-import javax.persistence.criteria.CriteriaBuilder;\n import javax.persistence.criteria.CriteriaQuery;\n import javax.persistence.criteria.Expression;\n-import javax.persistence.criteria.Fetch;\n import javax.persistence.criteria.Join;\n import javax.persistence.criteria.JoinType;\n import javax.persistence.criteria.ListJoin;\n@@ -49,6 +46,7 @@\n import javax.persistence.metamodel.EntityType;\n import javax.persistence.metamodel.Metamodel;\n \n+import org.apache.openjpa.jdbc.sql.OracleDictionary;\n import org.apache.openjpa.persistence.test.AllowFailure;\n \n /**\n@@ -1463,8 +1461,12 @@ public void testDisjunctionAsFalse() {\n \n        List result = q.getResultList();        \n     }\n-    \n+\n     public void testCurrentTimeReturnsSQLTypes() {\n+        if (getDictionary() instanceof OracleDictionary) {\n+            // Oracle does not have CURRENT_TIME function, nor does it support DB generated identity\n+            return;\n+        }\n         em.getTransaction().begin();\n         Product pc = new Product();\n         em.persist(pc);\n@@ -1481,6 +1483,44 @@ public void testCurrentTimeReturnsSQLTypes() {\n         Object result = tq.getSingleResult();\n         assertTrue(result.getClass() + \" not instance of Time\", result instanceof Time);  \n         \n+    }    \n+\n+    public void testCurrentDateReturnsSQLTypes() {\n+        em.getTransaction().begin();\n+        Order pc = new Order();\n+        em.persist(pc);\n+        em.getTransaction().commit();\n+        \n+        int oid = pc.getId();\n+        \n+        CriteriaQuery<Date> cquery = cb.createQuery(Date.class);\n+        Root<Order> order = cquery.from(Order.class);\n+        cquery.select(cb.currentDate());\n+        cquery.where(cb.equal(order.get(Order_.id), oid));\n+\n+        TypedQuery<Date> tq = em.createQuery(cquery);\n+        Object result = tq.getSingleResult();\n+        assertTrue(result.getClass() + \" not instance of Date\", result instanceof Date);  \n+\n+    }\n+\n+    public void testCurrentTimestampReturnsSQLTypes() {\n+        em.getTransaction().begin();\n+        Order pc = new Order();\n+        em.persist(pc);\n+        em.getTransaction().commit();\n+\n+        int oid = pc.getId();\n+\n+        CriteriaQuery<Timestamp> cquery = cb.createQuery(Timestamp.class);\n+        Root<Order> order = cquery.from(Order.class);\n+        cquery.select(cb.currentTimestamp());\n+        cquery.where(cb.equal(order.get(Order_.id), oid));\n+\n+        TypedQuery<Timestamp> tq = em.createQuery(cquery);\n+        Object result = tq.getSingleResult();\n+        assertTrue(result.getClass() + \" not instance of Timestamp\", result instanceof Timestamp);  \n+        \n     }\n     \n //    public void testInMemoryAccessPath() {"},{"sha":"34d14a5e877ae2ee5829ef9ca9d29559c3ddc00a","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/TestDetachNoStateField.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/4adf1c68a79be63b68975a9b737688653cc059dd/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/TestDetachNoStateField.java","raw_url":"https://github.com/apache/openjpa/raw/4adf1c68a79be63b68975a9b737688653cc059dd/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/TestDetachNoStateField.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/TestDetachNoStateField.java?ref=4adf1c68a79be63b68975a9b737688653cc059dd","patch":"@@ -28,7 +28,7 @@\n \n     @Override\n     protected void setUp(Object... props) {\n-        super.setUp(CLEAR_TABLES, \"openjpa.DetachState\", \"loaded(DetachedStateField=false)\",\n+        super.setUp(DROP_TABLES, \"openjpa.DetachState\", \"loaded(DetachedStateField=false)\",\n             NoDetachedStateEntityPropertyAccess.class, NoDetachedStateEntityFieldAccess.class);\n         loadDB();\n     }\n@@ -78,9 +78,9 @@ public void testPersistRelationshipToDetchedEntityZeroVersion() {\n     void loadDB() {\n         OpenJPAEntityManagerSPI em = emf.createEntityManager();\n         em.getTransaction().begin();\n-        em.createNativeQuery(\"INSERT INTO NoDetachedStateEntityPropertyAccess (ID,VERSION) VALUES (1,0)\")\n+        em.createNativeQuery(\"INSERT INTO PropertyAccessNoDetachedState (ID,VERSION) VALUES (1,0)\")\n             .executeUpdate();\n-        em.createNativeQuery(\"INSERT INTO NoDetachedStateEntityFieldAccess (ID,VERSION) VALUES (1,0)\")\n+        em.createNativeQuery(\"INSERT INTO FieldAccessNoDetachedState (ID,VERSION) VALUES (1,0)\")\n             .executeUpdate();\n         em.getTransaction().commit();\n         em.close();"},{"sha":"cd03f98b894e32718290022c07052a162b362810","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/featureSelection/NoDetachedStateEntityFieldAccess.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/4adf1c68a79be63b68975a9b737688653cc059dd/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/featureSelection/NoDetachedStateEntityFieldAccess.java","raw_url":"https://github.com/apache/openjpa/raw/4adf1c68a79be63b68975a9b737688653cc059dd/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/featureSelection/NoDetachedStateEntityFieldAccess.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/featureSelection/NoDetachedStateEntityFieldAccess.java?ref=4adf1c68a79be63b68975a9b737688653cc059dd","patch":"@@ -24,9 +24,11 @@\n import javax.persistence.GenerationType;\n import javax.persistence.Id;\n import javax.persistence.ManyToOne;\n+import javax.persistence.Table;\n import javax.persistence.Version;\n \n @Entity\n+@Table(name=\"FieldAccessNoDetachedState\")\n public class NoDetachedStateEntityFieldAccess {\n \t@Id\n \t@GeneratedValue(strategy=GenerationType.AUTO)"},{"sha":"d14ec9425a116e3982556913f6a8bb3d5a78ac8d","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/featureSelection/NoDetachedStateEntityPropertyAccess.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/4adf1c68a79be63b68975a9b737688653cc059dd/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/featureSelection/NoDetachedStateEntityPropertyAccess.java","raw_url":"https://github.com/apache/openjpa/raw/4adf1c68a79be63b68975a9b737688653cc059dd/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/featureSelection/NoDetachedStateEntityPropertyAccess.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/featureSelection/NoDetachedStateEntityPropertyAccess.java?ref=4adf1c68a79be63b68975a9b737688653cc059dd","patch":"@@ -23,9 +23,11 @@\n import javax.persistence.GeneratedValue;\n import javax.persistence.GenerationType;\n import javax.persistence.Id;\n+import javax.persistence.Table;\n import javax.persistence.Version;\n \n @Entity\n+@Table(name=\"PropertyAccessNoDetachedState\")\n public class NoDetachedStateEntityPropertyAccess {\n \tint id;\n \tint version;"}]}

