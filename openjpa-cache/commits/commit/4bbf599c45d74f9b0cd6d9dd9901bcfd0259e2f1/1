{"sha":"4bbf599c45d74f9b0cd6d9dd9901bcfd0259e2f1","node_id":"MDY6Q29tbWl0MjA2MzY0OjRiYmY1OTljNDVkNzRmOWIwY2Q2ZDlkZDk5MDFiY2ZkMDI1OWUyZjE=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-01-03T02:44:57Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-01-03T02:44:57Z"},"message":"Added new SchemaTool action: deleteTableContents, and added support for comma-separated lists of schema actions, both via the MappingTool -schemaAction option and via direct SchemaTool usage. This implementation always processes all of the known types in the system; I have not tested running MappingTool against just one or two classes to see what 'all of the known types in the system' really means.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@492024 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0b7fec87c78bc28731f45c4fbe740c5936440a95","url":"https://api.github.com/repos/apache/openjpa/git/trees/0b7fec87c78bc28731f45c4fbe740c5936440a95"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/4bbf599c45d74f9b0cd6d9dd9901bcfd0259e2f1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/4bbf599c45d74f9b0cd6d9dd9901bcfd0259e2f1","html_url":"https://github.com/apache/openjpa/commit/4bbf599c45d74f9b0cd6d9dd9901bcfd0259e2f1","comments_url":"https://api.github.com/repos/apache/openjpa/commits/4bbf599c45d74f9b0cd6d9dd9901bcfd0259e2f1/comments","author":null,"committer":null,"parents":[{"sha":"056ecf52fdf1ec47bba26ed8b1a8026c1d568687","url":"https://api.github.com/repos/apache/openjpa/commits/056ecf52fdf1ec47bba26ed8b1a8026c1d568687","html_url":"https://github.com/apache/openjpa/commit/056ecf52fdf1ec47bba26ed8b1a8026c1d568687"}],"stats":{"total":248,"additions":192,"deletions":56},"files":[{"sha":"f5f727173d62006f0b4649cfe73eed181b10a7c6","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStoreQuery.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/4bbf599c45d74f9b0cd6d9dd9901bcfd0259e2f1/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStoreQuery.java","raw_url":"https://github.com/apache/openjpa/raw/4bbf599c45d74f9b0cd6d9dd9901bcfd0259e2f1/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStoreQuery.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStoreQuery.java?ref=4bbf599c45d74f9b0cd6d9dd9901bcfd0259e2f1","patch":"@@ -468,7 +468,7 @@ private Number executeBulkOperation(Executor ex, ClassMetaData base,\n             // this case, we need to perform the query in-memory and\n             // manually delete the instances\n             if (updates == null)\n-                sql[i] = dict.toDelete(mappings[i], sel, _store, params);\n+                sql[i] = dict.toDelete(mappings[i], sel, params);\n             else\n                 sql[i] = dict.toUpdate(mappings[i], sel, _store, params,\n                     updates);"},{"sha":"97a6401a97222c4b242b77b4b98daecd0ce88648","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingTool.java","status":"modified","additions":39,"deletions":39,"changes":78,"blob_url":"https://github.com/apache/openjpa/blob/4bbf599c45d74f9b0cd6d9dd9901bcfd0259e2f1/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingTool.java","raw_url":"https://github.com/apache/openjpa/raw/4bbf599c45d74f9b0cd6d9dd9901bcfd0259e2f1/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingTool.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingTool.java?ref=4bbf599c45d74f9b0cd6d9dd9901bcfd0259e2f1","patch":"@@ -102,7 +102,7 @@\n     private MappingRepository _repos = null;\n     private SchemaGroup _schema = null;\n     private SchemaTool _schemaTool = null;\n-    private String _schemaAction = SchemaTool.ACTION_ADD;\n+    private String _schemaActions = SchemaTool.ACTION_ADD;\n     private boolean _readSchema = false;\n     private boolean _pks = false;\n     private boolean _fks = false;\n@@ -159,20 +159,20 @@ public boolean isMetaDataAction() {\n \n     /**\n      * The schema modification policy, or <code>none</code>. See the\n-     * ACTION constants in {@link SchemaTool}. Defaults to\n-     * {@link SchemaTool#ACTION_ADD}.\n+     * ACTION constants in {@link SchemaTool}. May be a comma-separated\n+     * list of values. Defaults to {@link SchemaTool#ACTION_ADD}.\n      */\n     public String getSchemaAction() {\n-        return _schemaAction;\n+        return _schemaActions;\n     }\n \n     /**\n      * The schema modification policy, or <code>none</code>. See the\n-     * ACTION constants in {@link SchemaTool}. Defaults to\n-     * {@link SchemaTool#ACTION_ADD}.\n+     * ACTION constants in {@link SchemaTool}. May be a comma-separated\n+     * list of values. Defaults to {@link SchemaTool#ACTION_ADD}.\n      */\n     public void setSchemaAction(String schemaAction) {\n-        _schemaAction = schemaAction;\n+        _schemaActions = schemaAction;\n     }\n \n     /**\n@@ -291,15 +291,6 @@ public boolean getIgnoreErrors() {\n         return _ignoreErrors;\n     }\n \n-    /**\n-     * Return the schema tool to use for schema modification.\n-     */\n-    public SchemaTool getSchemaTool() {\n-        if (_schemaTool == null)\n-            _schemaTool = newSchemaTool(_schemaAction);\n-        return _schemaTool;\n-    }\n-\n     /**\n      * Return the schema tool to use for schema modification.\n      */\n@@ -394,14 +385,14 @@ public void setRepository(MappingRepository repos) {\n      */\n     public SchemaGroup getSchemaGroup() {\n         if (_schema == null) {\n-            if (ACTION_BUILD_SCHEMA.equals(_action)) {\n+            if (_action.contains(ACTION_BUILD_SCHEMA)) {\n                 DynamicSchemaFactory factory = new DynamicSchemaFactory();\n                 factory.setConfiguration(_conf);\n                 _schema = factory;\n-            } else if (_readSchema\n-                || SchemaTool.ACTION_RETAIN.equals(_schemaAction)\n-                || SchemaTool.ACTION_REFRESH.equals(_schemaAction)) {\n-                _schema = (SchemaGroup) getSchemaTool().getDBSchemaGroup().\n+            } else if (_readSchema \n+                || _schemaActions.contains(SchemaTool.ACTION_RETAIN)\n+                || _schemaActions.contains(SchemaTool.ACTION_REFRESH)) {\n+                _schema = (SchemaGroup) newSchemaTool(null).getDBSchemaGroup().\n                     clone();\n             } else {\n                 // with this we'll just read tables as different mappings\n@@ -449,6 +440,10 @@ public void clear() {\n      * involves clearing the internal mapping repository.\n      */\n     public void record() {\n+        record(null);\n+    }\n+    \n+    private void record(MappingTool.Flags flags) {\n         MappingRepository repos = getRepository();\n         MetaDataFactory io = repos.getMetaDataFactory();\n         ClassMapping[] mappings;\n@@ -477,13 +472,25 @@ else if (_dropMap != null)\n \n                 // now run the schematool as long as we're doing some schema\n                 // action and the user doesn't just want an xml output\n-                if (!SCHEMA_ACTION_NONE.equals(_schemaAction)\n-                    && (_schemaWriter == null || (_schemaTool != null\n-                    && _schemaTool.getWriter() != null))) {\n-                    SchemaTool tool = getSchemaTool();\n-                    tool.setSchemaGroup(getSchemaGroup());\n-                    tool.run();\n-                    tool.record();\n+                String[] schemaActions = _schemaActions.split(\",\");\n+                for (int i = 0; i < schemaActions.length; i++) {\n+                    if (!SCHEMA_ACTION_NONE.equals(schemaActions[i])\n+                        && (_schemaWriter == null || (_schemaTool != null\n+                            && _schemaTool.getWriter() != null))) {\n+                        SchemaTool tool = newSchemaTool(schemaActions[i]);\n+\n+                        // configure the tool with additional settings\n+                        if (flags != null) {\n+                            tool.setDropTables(flags.dropTables);\n+                            tool.setDropSequences(flags.dropSequences);\n+                            tool.setWriter(flags.sqlWriter);\n+                            tool.setOpenJPATables(flags.openjpaTables);\n+                        }\n+\n+                        tool.setSchemaGroup(getSchemaGroup());\n+                        tool.run();\n+                        tool.record();\n+                    }\n                 }\n \n                 // xml output of schema?\n@@ -716,8 +723,8 @@ private void validate(Class cls) {\n         MappingRepository repos = getRepository();\n         repos.setStrategyInstaller(new RuntimeStrategyInstaller(repos));\n         if (getMapping(repos, cls, true) != null)\n-            _flushSchema = !SCHEMA_ACTION_NONE.equals(_schemaAction)\n-                && !SchemaTool.ACTION_ADD.equals(_schemaAction);\n+            _flushSchema = !_schemaActions.contains(SCHEMA_ACTION_NONE)\n+                && !_schemaActions.contains(SchemaTool.ACTION_ADD);\n     }\n \n     /**\n@@ -761,7 +768,7 @@ private void drop(Class cls) {\n         if (_dropCls == null)\n             _dropCls = new HashSet();\n         _dropCls.add(cls);\n-        if (!SchemaTool.ACTION_DROP.equals(_schemaAction))\n+        if (!_schemaActions.contains(SchemaTool.ACTION_DROP))\n             return;\n \n         MappingRepository repos = getRepository();\n@@ -1044,13 +1051,6 @@ public static boolean run(JDBCConfiguration conf, String[] args,\n         tool.setIndexes(flags.indexes);\n         tool.setSequences(flags.sequences || flags.dropSequences);\n \n-        // make sure to do this after other settings so that other settings\n-        // are passed on to schema tool\n-        tool.getSchemaTool().setDropTables(flags.dropTables);\n-        tool.getSchemaTool().setDropSequences(flags.dropSequences);\n-        tool.getSchemaTool().setWriter(flags.sqlWriter);\n-        tool.getSchemaTool().setOpenJPATables(flags.openjpaTables);\n-\n         // and run the action\n         for (int i = 0; i < act.length; i++) {\n             log.info(_loc.get(\"tool-running\", act[i], flags.action));\n@@ -1059,7 +1059,7 @@ public static boolean run(JDBCConfiguration conf, String[] args,\n             tool.run(act[i]);\n         }\n         log.info(_loc.get(\"tool-record\"));\n-        tool.record();\n+        tool.record(flags);\n         return true;\n     }\n "},{"sha":"3bccecec5697e07b2b3cf855c6cd6eef979be294","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaTool.java","status":"modified","additions":45,"deletions":4,"changes":49,"blob_url":"https://github.com/apache/openjpa/blob/4bbf599c45d74f9b0cd6d9dd9901bcfd0259e2f1/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaTool.java","raw_url":"https://github.com/apache/openjpa/raw/4bbf599c45d74f9b0cd6d9dd9901bcfd0259e2f1/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaTool.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaTool.java?ref=4bbf599c45d74f9b0cd6d9dd9901bcfd0259e2f1","patch":"@@ -27,6 +27,7 @@\n import java.util.Collection;\n import java.util.HashSet;\n import java.util.Iterator;\n+import java.util.LinkedHashSet;\n import java.util.LinkedList;\n import java.util.Set;\n import javax.sql.DataSource;\n@@ -65,6 +66,8 @@\n     public static final String ACTION_DROPDB = \"dropDB\";\n     public static final String ACTION_IMPORT = \"import\";\n     public static final String ACTION_EXPORT = \"export\";\n+    public static final String ACTION_DELETE_TABLE_CONTENTS = \n+        \"deleteTableContents\";\n \n     public static final String[] ACTIONS = new String[]{\n         ACTION_ADD,\n@@ -77,6 +80,7 @@\n         ACTION_DROPDB,\n         ACTION_IMPORT,\n         ACTION_EXPORT,\n+        ACTION_DELETE_TABLE_CONTENTS,\n     };\n \n     private static final Localizer _loc = Localizer.forPackage\n@@ -324,6 +328,8 @@ else if (ACTION_CREATEDB.equals(_action))\n             createDB();\n         else if (ACTION_DROPDB.equals(_action))\n             dropDB();\n+        else if (ACTION_DELETE_TABLE_CONTENTS.equals(_action))\n+            deleteTableContents();\n     }\n \n     /**\n@@ -399,6 +405,26 @@ void dropDB()\n         retain(getDBSchemaGroup(true), new SchemaGroup(), true, true);\n     }\n \n+    /**\n+     * Issue DELETE statement against all known tables.\n+     */\n+    private void deleteTableContents() \n+        throws SQLException {\n+        SchemaGroup group = getSchemaGroup();\n+        Schema[] schemas = group.getSchemas();\n+        Collection tables = new LinkedHashSet();\n+        for (int i = 0; i < schemas.length; i++) {\n+            Table[] ts = schemas[i].getTables();\n+            for (int j = 0; j < ts.length; j++)\n+                tables.add(ts[j]);\n+        }\n+        Table[] tableArray = (Table[]) tables.toArray(new Table[tables.size()]);\n+        String[] sql = _conf.getDBDictionaryInstance()\n+            .getDeleteTableContentsSQL(tableArray);\n+        if (!executeSQL(sql))\n+            _log.warn(_loc.get(\"delete-table-contents\"));\n+    }\n+\n     /**\n      * Record the changes made to the DB in the current {@link SchemaFactory}.\n      */\n@@ -1233,7 +1259,8 @@ private void handleException(SQLException sql)\n      * <code>false</code> to prevent writing the schema changes to the\n      * current {@link SchemaFactory}.</li>\n      * </ul>\n-     *  The various actions are as follows.\n+     *  Actions can be composed in a comma-separated list. The various actions \n+     *  are as follows.\n      * <ul>\n      * <li><i>add</i>: Bring the schema up-to-date with the latest\n      * changes to the schema XML data by adding tables, columns,\n@@ -1255,6 +1282,8 @@ private void handleException(SQLException sql)\n      * <code>file</code> option, or to stdout if no file is given.</li>\n      * <li><i>dropDB</i>: Execute SQL to drop the current database. This\n      * action implies <code>dropTables</code>.</li>\n+     * <li><i>deleteTableContents</i>: Execute SQL to delete all rows from \n+     * all tables that OpenJPA knows about.</li>\n      * <li><i>import</i>: Import the given XML schema definition into the\n      * current {@link SchemaFactory}.</li>\n      * <li><i>export</i>: Export the current {@link SchemaFactory}'s recorded\n@@ -1269,6 +1298,9 @@ private void handleException(SQLException sql)\n      * <li>Drop the current database schema:<br />\n      * <code>java org.apache.openjpa.jdbc.schema.SchemaTool \n      * -a dropDB</code></li>\n+     * <li>Refresh the schema and delete all records in all tables:<br />\n+     * <code>java org.apache.openjpa.jdbc.schema.SchemaTool \n+     * -a refresh,deleteTableContents</code></li>\n      * <li>Create a schema based on an XML schema definition file:<br />\n      * <code>java org.apache.openjpa.jdbc.schema.SchemaTool \n      * myschema.xml</code></li>\n@@ -1316,12 +1348,14 @@ public static boolean run(JDBCConfiguration conf, String[] args,\n         flags.sequences = opts.removeBooleanProperty\n             (\"sequences\", \"sq\", flags.sequences);\n         flags.record = opts.removeBooleanProperty(\"record\", \"r\", flags.record);\n-        flags.action = opts.removeProperty(\"action\", \"a\", flags.action);\n         String fileName = opts.removeProperty(\"file\", \"f\", null);\n         String schemas = opts.removeProperty(\"s\");\n         if (schemas != null)\n             opts.setProperty(\"schemas\", schemas);\n \n+        String[] actions = opts.removeProperty(\"action\", \"a\", flags.action)\n+            .split(\",\");\n+        \n         // setup a configuration instance with cmd-line info\n         Configurations.populateConfiguration(conf, opts);\n \n@@ -1330,7 +1364,13 @@ public static boolean run(JDBCConfiguration conf, String[] args,\n             getClassLoader(SchemaTool.class, null);\n         flags.writer = Files.getWriter(fileName, loader);\n \n-        return run(conf, args, flags, loader);\n+        boolean returnValue = true;\n+        for (int i = 0; i < actions.length; i++) {\n+            flags.action = actions[i];\n+            returnValue &= run(conf, args, flags, loader);\n+        }\n+        \n+        return returnValue;\n     }\n \n     /**\n@@ -1370,7 +1410,8 @@ public static boolean run(JDBCConfiguration conf, String[] args,\n         if (args.length == 0\n             && !ACTION_CREATEDB.equals(flags.action)\n             && !ACTION_DROPDB.equals(flags.action)\n-            && !ACTION_EXPORT.equals(flags.action))\n+            && !ACTION_EXPORT.equals(flags.action)\n+            && !ACTION_DELETE_TABLE_CONTENTS.equals(flags.action))\n             return false;\n \n         // parse in the arguments"},{"sha":"a1b76d8c78457d7d9ed35170fb09295e97606baf","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","status":"modified","additions":44,"deletions":3,"changes":47,"blob_url":"https://github.com/apache/openjpa/blob/4bbf599c45d74f9b0cd6d9dd9901bcfd0259e2f1/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/4bbf599c45d74f9b0cd6d9dd9901bcfd0259e2f1/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java?ref=4bbf599c45d74f9b0cd6d9dd9901bcfd0259e2f1","patch":"@@ -50,6 +50,7 @@\n import java.util.Date;\n import java.util.HashSet;\n import java.util.Iterator;\n+import java.util.LinkedHashSet;\n import java.util.List;\n import java.util.Locale;\n import java.util.Map;\n@@ -1742,9 +1743,8 @@ public SQLBuffer toSelectCount(Select sel) {\n      * cases where a subselect is required and the database doesn't support\n      * subselects), this method should return null.\n      */\n-    public SQLBuffer toDelete(ClassMapping mapping, Select sel,\n-        JDBCStore store, Object[] params) {\n-        return toBulkOperation(mapping, sel, store, params, null);\n+    public SQLBuffer toDelete(ClassMapping mapping, Select sel, Object[] params) {\n+        return toBulkOperation(mapping, sel, null, params, null);\n     }\n \n     public SQLBuffer toUpdate(ClassMapping mapping, Select sel,\n@@ -1894,6 +1894,47 @@ protected void appendUpdates(Select sel, JDBCStore store, SQLBuffer sql,\n                 sql.append(\", \");\n         }\n     }\n+    \n+    /**\n+     * Create SQL to delete the contents of the specified tables. \n+     * The default implementation drops all non-deferred RESTRICT foreign key \n+     * constraints involving the specified tables, issues DELETE statements \n+     * against the tables, and then adds the dropped constraints back in. \n+     * Databases with more optimal ways of deleting the contents of several \n+     * tables should override this method.\n+     */\n+    public String[] getDeleteTableContentsSQL(Table[] tables) {\n+        Collection sql = new ArrayList();\n+        \n+        // collect and drop non-deferred physical restrict constraints, and\n+        // collect the DELETE FROM statements\n+        Collection deleteSQL = new ArrayList(tables.length);\n+        Collection restrictConstraints = new LinkedHashSet();\n+        for (int i = 0; i < tables.length; i++) {\n+            ForeignKey[] fks = tables[i].getForeignKeys();\n+            for (int j = 0; j < fks.length; j++) {\n+                if (!fks[j].isLogical() && !fks[j].isDeferred() \n+                    && fks[j].getDeleteAction() == ForeignKey.ACTION_RESTRICT)\n+                restrictConstraints.add(fks[j]);\n+                String[] constraintSQL = getDropForeignKeySQL(fks[j]);\n+                sql.addAll(Arrays.asList(constraintSQL));\n+            }\n+            \n+            deleteSQL.add(\"DELETE FROM \" + tables[i].getFullName());\n+        }\n+        \n+        // add the delete statements after all the constraint mutations\n+        sql.addAll(deleteSQL);\n+        \n+        // add the deleted constraints back to the schema\n+        for (Iterator iter = restrictConstraints.iterator(); iter.hasNext(); ) {\n+            String[] constraintSQL = \n+                getAddForeignKeySQL((ForeignKey) iter.next());\n+            sql.addAll(Arrays.asList(constraintSQL));\n+        }\n+        \n+        return (String[]) sql.toArray(new String[sql.size()]);\n+    }\n \n     /**\n      * Create a SELECT statement in the proper join syntax for the given"},{"sha":"bf15073b942ec10adf5177c47a6890309a61886d","filename":"openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/schema/localizer.properties","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/4bbf599c45d74f9b0cd6d9dd9901bcfd0259e2f1/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/schema/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/4bbf599c45d74f9b0cd6d9dd9901bcfd0259e2f1/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/schema/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/schema/localizer.properties?ref=4bbf599c45d74f9b0cd6d9dd9901bcfd0259e2f1","patch":"@@ -76,7 +76,7 @@ tool-usage: Usage: java org.apache.openjpa.jdbc.schema.SchemaTool\\n\\\n \t\\t[-indexes/-ix <true/t | false/f>]\\n\\\n \t\\t[-record/-r <true/t | false/f>]\\n\\\n \t\\t[-action/-a <add | retain | drop | refresh | build | reflect\\n\\\n-\t\\t\\t| createDB | dropDB | import | export>]\\n\\\n+\t\\t\\t| createDB | dropDB | import | export | deleteTableContents>]\\n\\\n \t\\t<.schema file or resource>*\n sch-reflect: Reflecting on schemas \"{0}\".  This process may take some time.  \\\n \tEnable the org.apache.openjpa.jdbc.Schema logging category to see messages about the \\\n@@ -142,3 +142,5 @@ generating-indexes: Reading indexes for table \"{1}\"\n generating-foreign: Reading foreign keys for table \"{1}\"\n generating-sequences: Reading sequences for schema \"{0}\"\n no-custom-ds: use a custom DataSource\n+delete-table-contents: An error occurred while attempting to delete all \\\n+    records from all mapped tables.\n\\ No newline at end of file"},{"sha":"babd1de6059d2c24102209a9bc8ec2ecd47e2d3f","filename":"openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","status":"modified","additions":36,"deletions":1,"changes":37,"blob_url":"https://github.com/apache/openjpa/blob/4bbf599c45d74f9b0cd6d9dd9901bcfd0259e2f1/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","raw_url":"https://github.com/apache/openjpa/raw/4bbf599c45d74f9b0cd6d9dd9901bcfd0259e2f1/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml?ref=4bbf599c45d74f9b0cd6d9dd9901bcfd0259e2f1","patch":"@@ -3626,7 +3626,8 @@ openjpa.jdbc.Schemas</link> property for a single run.\n         </itemizedlist>\n         <para>\n The schema tool also accepts an <literal>-action</literal> or <literal>-a\n-</literal> flag. The available actions are:\n+</literal> flag. Multiple actions can be composed in a comma-separated list. \n+The available actions are:\n         </para>\n         <itemizedlist>\n             <listitem>\n@@ -3701,6 +3702,12 @@ definition to XML. May produce an empty file if the factory does not store a\n record of the schema.\n                 </para>\n             </listitem>\n+            <listitem>\n+                <para>\n+<literal>deleteTableContents</literal>: Execute SQL to delete all rows from \n+all tables that OpenJPA knows about.\n+                </para>\n+            </listitem>\n         </itemizedlist>\n         <note>\n             <para>\n@@ -3749,6 +3756,34 @@ Write a SQL script that will re-create the current database:\n             </para>\n <programlisting>\n java org.apache.openjpa.jdbc.schema.SchemaTool -a createDB -f script.sql\n+</programlisting>\n+        </example>\n+        <example id=\"ref_guide_schema_schematool_table_cleanup\">\n+            <title>\n+                Table Cleanup\n+            </title>\n+            <indexterm zone=\"ref_guide_schema_schematool_table_cleanup\">\n+                <primary>\n+                    schema\n+                </primary>\n+                <secondary>\n+                    refresh schema and delete all contents of all tables\n+                </secondary>\n+            </indexterm>\n+            <indexterm zone=\"ref_guide_schema_schematool_table_cleanup\">\n+                <primary>\n+                    testing\n+                </primary>\n+                <secondary>\n+                    refresh schema and delete all contents of all tables\n+                </secondary>\n+            </indexterm>\n+            <para>\n+Refresh the schema and delete all contents of all tables that OpenJPA \n+knows about:\n+            </para>\n+<programlisting>\n+java org.apache.openjpa.jdbc.schema.SchemaTool -a refresh,deleteTableContents\n </programlisting>\n         </example>\n         <example id=\"ref_guide_schema_schematool_drop\">"},{"sha":"0e42b2ac1528eaa7b2418fc500db391ec6b47ca9","filename":"openjpa-project/src/doc/manual/ref_guide_mapping.xml","status":"modified","additions":24,"deletions":7,"changes":31,"blob_url":"https://github.com/apache/openjpa/blob/4bbf599c45d74f9b0cd6d9dd9901bcfd0259e2f1/openjpa-project/src/doc/manual/ref_guide_mapping.xml","raw_url":"https://github.com/apache/openjpa/raw/4bbf599c45d74f9b0cd6d9dd9901bcfd0259e2f1/openjpa-project/src/doc/manual/ref_guide_mapping.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_mapping.xml?ref=4bbf599c45d74f9b0cd6d9dd9901bcfd0259e2f1","patch":"@@ -88,15 +88,16 @@ mapping tool accepts the following command line arguments:\n         <itemizedlist>\n             <listitem>\n                 <para>\n-<literal>-schemaAction/-sa &lt;add | refresh | drop | build | retain | none&gt;\n+<literal>-schemaAction/-sa &lt;add | refresh | drop | build | retain | reflect | createDB | dropDB | import | export | none&gt;\n </literal>: The action to take on the schema. These options correspond to the\n same-named actions on the schema tool described in\n-<xref linkend=\"ref_guide_schema_schematool\"/>. Unless you are running the\n-mapping tool on all of your persistent types at once or dropping a mapping, we\n-strongly recommend you use the default <literal>add</literal> action or the\n-<literal>build</literal> action. Otherwise you may end up inadvertently dropping\n-schema components that are used by classes you are not currently running the\n-tool over.\n+<xref linkend=\"ref_guide_schema_schematool\"/>. Actions can be composed in a\n+comma-separated list. Unless you are running the mapping tool on all of\n+your persistent types at once or dropping a mapping, we strongly\n+recommend you use the default <literal>add</literal> action or the\n+<literal>build</literal> action. Otherwise you may end up inadvertently\n+dropping schema components that are used by classes you are not\n+currently running the tool over.\n                 </para>\n             </listitem>\n             <listitem>\n@@ -277,6 +278,22 @@ java org.apache.openjpa.jdbc.meta.MappingTool Magazine.java\n To drop the schema for a persistent class, set the mapping tool's <literal>\n schemaAction</literal> to <literal>drop</literal>.\n             </para>\n+            <example id=\"ref_guide_mapping_mappingtool_cleanup_tables\">\n+                <title>\n+                    Refreshing entire schema and cleaning out tables\n+                </title>\n+\t            <indexterm zone=\"ref_guide_mapping_mappingtool_cleanup_tables\">\n+    \t            <primary>\n+        \t            testing\n+            \t    </primary>\n+                \t<secondary>\n+                    \tRebuild mappings and clean tables\n+\t                </secondary>\n+    \t        </indexterm>\n+<programlisting>\n+java org.apache.openjpa.jdbc.meta.MappingTool -sa add,deleteTableContents\n+</programlisting>\n+            </example>\n             <example id=\"ref_guide_mapping_mappingtool_dropschema\">\n                 <title>\n                     Dropping Mappings and Association Schema"}]}

