{"sha":"4bf637f0747fcbba281b2ad2442475336cea8dfe","node_id":"MDY6Q29tbWl0MjA2MzY0OjRiZjYzN2YwNzQ3ZmNiYmEyODFiMmFkMjQ0MjQ3NTMzNmNlYThkZmU=","commit":{"author":{"name":"A. Abram White","email":"awhite@apache.org","date":"2007-02-27T18:14:45Z"},"committer":{"name":"A. Abram White","email":"awhite@apache.org","date":"2007-02-27T18:14:45Z"},"message":"Improve error checks for mapped-by mappings.  Mark deleted instances as\neligible for state restore on rollback so they don't always clear.  Always\ncascade attach to embedded instances.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@512350 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"7cc46c013397f3f72799925b887aea42396415cd","url":"https://api.github.com/repos/apache/openjpa/git/trees/7cc46c013397f3f72799925b887aea42396415cd"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/4bf637f0747fcbba281b2ad2442475336cea8dfe","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/4bf637f0747fcbba281b2ad2442475336cea8dfe","html_url":"https://github.com/apache/openjpa/commit/4bf637f0747fcbba281b2ad2442475336cea8dfe","comments_url":"https://api.github.com/repos/apache/openjpa/commits/4bf637f0747fcbba281b2ad2442475336cea8dfe/comments","author":null,"committer":null,"parents":[{"sha":"5ae6e7594f265d2af44c6f34a0c666b23f956cf4","url":"https://api.github.com/repos/apache/openjpa/commits/5ae6e7594f265d2af44c6f34a0c666b23f956cf4","html_url":"https://github.com/apache/openjpa/commit/5ae6e7594f265d2af44c6f34a0c666b23f956cf4"}],"stats":{"total":14,"additions":10,"deletions":4},"files":[{"sha":"8b46adca314acdafa0cc6eeb058ccd0798af1241","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationFieldStrategy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/4bf637f0747fcbba281b2ad2442475336cea8dfe/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationFieldStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/4bf637f0747fcbba281b2ad2442475336cea8dfe/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationFieldStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationFieldStrategy.java?ref=4bf637f0747fcbba281b2ad2442475336cea8dfe","patch":"@@ -86,7 +86,7 @@ public void map(boolean adapt) {\n             field.getValueInfo().assertNoSchemaComponents(field, !adapt);\n             mapped.resolve(mapped.MODE_META | mapped.MODE_MAPPING);\n \n-            if (!mapped.getDefiningMapping().isMapped())\n+            if (!mapped.isMapped() || mapped.isSerialized())\n                 throw new MetaDataException(_loc.get(\"mapped-by-unmapped\",\n                     field, mapped));\n "},{"sha":"d6f70de753558adef1525dbd4dc0ae3c5c691151","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationToManyInverseKeyFieldStrategy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/4bf637f0747fcbba281b2ad2442475336cea8dfe/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationToManyInverseKeyFieldStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/4bf637f0747fcbba281b2ad2442475336cea8dfe/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationToManyInverseKeyFieldStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationToManyInverseKeyFieldStrategy.java?ref=4bf637f0747fcbba281b2ad2442475336cea8dfe","patch":"@@ -119,7 +119,7 @@ public void map(boolean adapt) {\n         boolean criteria = vinfo.getUseClassCriteria();\n         if (mapped != null) {\n             mapped.resolve(mapped.MODE_META | mapped.MODE_MAPPING);\n-            if (!(mapped.getStrategy()instanceof RelationFieldStrategy))\n+            if (!(mapped.getStrategy() instanceof RelationFieldStrategy))\n                 throw new MetaDataException(_loc.get(\"not-inv-relation\",\n                     field, mapped));\n             vinfo.assertNoSchemaComponents(elem, !adapt);"},{"sha":"92ea16c47cce73183f54542cb8e217d64681808e","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationToManyTableFieldStrategy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/4bf637f0747fcbba281b2ad2442475336cea8dfe/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationToManyTableFieldStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/4bf637f0747fcbba281b2ad2442475336cea8dfe/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationToManyTableFieldStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationToManyTableFieldStrategy.java?ref=4bf637f0747fcbba281b2ad2442475336cea8dfe","patch":"@@ -110,7 +110,7 @@ public void map(boolean adapt) {\n             vinfo.assertNoSchemaComponents(elem, !adapt);\n             mapped.resolve(mapped.MODE_META | mapped.MODE_MAPPING);\n \n-            if (!mapped.getDefiningMapping().isMapped())\n+            if (!mapped.isMapped() || mapped.isSerialized())\n                 throw new MetaDataException(_loc.get(\"mapped-by-unmapped\",\n                     field, mapped));\n "},{"sha":"09cdbe522d30ca7120c2dc43e0b67c5542b4f40a","filename":"openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/strats/localizer.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/4bf637f0747fcbba281b2ad2442475336cea8dfe/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/strats/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/4bf637f0747fcbba281b2ad2442475336cea8dfe/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/strats/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/strats/localizer.properties?ref=4bf637f0747fcbba281b2ad2442475336cea8dfe","patch":"@@ -20,7 +20,7 @@ mapped-inverse-unjoined: Field \"{0}\" as defined in \"{1}\" cannot be mapped by \\\n \t\"{2}\".  You cannot use an inverse foreign key to map a superclass field of \\\n \tan unjoined subclass.\n mapped-by-unmapped: Field \"{0}\" cannot be mapped by \"{1}\", because the related \\\n-\ttype is unmapped.\n+\tfield or type is unmapped.\n cant-join: Cannot join across \"{0}\".  The related type has unjoined subclasses.\n cant-inverse: \"{0}\" is not a valid mapping.  Inverse foreign key-based \\\n \trelations to types with unjoined subclasses are not supported."},{"sha":"f7c5c008a2396816cf02a91ed1f3f95d498f3c54","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/PDeletedState.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/4bf637f0747fcbba281b2ad2442475336cea8dfe/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/PDeletedState.java","raw_url":"https://github.com/apache/openjpa/raw/4bf637f0747fcbba281b2ad2442475336cea8dfe/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/PDeletedState.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/PDeletedState.java?ref=4bf637f0747fcbba281b2ad2442475336cea8dfe","patch":"@@ -25,6 +25,10 @@\n class PDeletedState\n     extends PCState {\n \n+    void initialize(StateManagerImpl context) {\n+        context.saveFields(false);\n+    }\n+\n     PCState flush(StateManagerImpl context) {\n         return PDELETEDFLUSHED;\n     }"},{"sha":"03ed5a153f95f5ae33988b525d3904a42686ab94","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/ValueMetaDataImpl.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/4bf637f0747fcbba281b2ad2442475336cea8dfe/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ValueMetaDataImpl.java","raw_url":"https://github.com/apache/openjpa/raw/4bf637f0747fcbba281b2ad2442475336cea8dfe/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ValueMetaDataImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ValueMetaDataImpl.java?ref=4bf637f0747fcbba281b2ad2442475336cea8dfe","patch":"@@ -243,6 +243,8 @@ public int getCascadeAttach() {\n         if (_owner.getManagement() != FieldMetaData.MANAGE_PERSISTENT\n             || !isDeclaredTypePC()) // attach acts on declared type\n             return CASCADE_NONE;\n+        if (isEmbeddedPC())\n+            return CASCADE_IMMEDIATE;\n         return _attach;\n     }\n "}]}

