{"sha":"4c9a7258697bc5e2bc62f12a58979ace59f8b1f1","node_id":"MDY6Q29tbWl0MjA2MzY0OjRjOWE3MjU4Njk3YmM1ZTJiYzYyZjEyYTU4OTc5YWNlNTlmOGIxZjE=","commit":{"author":{"name":"Craig Russell","email":"clr@apache.org","date":"2007-08-08T20:25:47Z"},"committer":{"name":"Craig Russell","email":"clr@apache.org","date":"2007-08-08T20:25:47Z"},"message":"Fix typos in caching section of doc\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@564011 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"79e1c7be1ab41762ad83279426fe43f7b6d6e0e9","url":"https://api.github.com/repos/apache/openjpa/git/trees/79e1c7be1ab41762ad83279426fe43f7b6d6e0e9"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/4c9a7258697bc5e2bc62f12a58979ace59f8b1f1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/4c9a7258697bc5e2bc62f12a58979ace59f8b1f1","html_url":"https://github.com/apache/openjpa/commit/4c9a7258697bc5e2bc62f12a58979ace59f8b1f1","comments_url":"https://api.github.com/repos/apache/openjpa/commits/4c9a7258697bc5e2bc62f12a58979ace59f8b1f1/comments","author":{"login":"papajdo","id":2455884,"node_id":"MDQ6VXNlcjI0NTU4ODQ=","avatar_url":"https://avatars.githubusercontent.com/u/2455884?v=4","gravatar_id":"","url":"https://api.github.com/users/papajdo","html_url":"https://github.com/papajdo","followers_url":"https://api.github.com/users/papajdo/followers","following_url":"https://api.github.com/users/papajdo/following{/other_user}","gists_url":"https://api.github.com/users/papajdo/gists{/gist_id}","starred_url":"https://api.github.com/users/papajdo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/papajdo/subscriptions","organizations_url":"https://api.github.com/users/papajdo/orgs","repos_url":"https://api.github.com/users/papajdo/repos","events_url":"https://api.github.com/users/papajdo/events{/privacy}","received_events_url":"https://api.github.com/users/papajdo/received_events","type":"User","site_admin":false},"committer":{"login":"papajdo","id":2455884,"node_id":"MDQ6VXNlcjI0NTU4ODQ=","avatar_url":"https://avatars.githubusercontent.com/u/2455884?v=4","gravatar_id":"","url":"https://api.github.com/users/papajdo","html_url":"https://github.com/papajdo","followers_url":"https://api.github.com/users/papajdo/followers","following_url":"https://api.github.com/users/papajdo/following{/other_user}","gists_url":"https://api.github.com/users/papajdo/gists{/gist_id}","starred_url":"https://api.github.com/users/papajdo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/papajdo/subscriptions","organizations_url":"https://api.github.com/users/papajdo/orgs","repos_url":"https://api.github.com/users/papajdo/repos","events_url":"https://api.github.com/users/papajdo/events{/privacy}","received_events_url":"https://api.github.com/users/papajdo/received_events","type":"User","site_admin":false},"parents":[{"sha":"b7fe66357b6c964613866b773da5c2739c513e09","url":"https://api.github.com/repos/apache/openjpa/commits/b7fe66357b6c964613866b773da5c2739c513e09","html_url":"https://github.com/apache/openjpa/commit/b7fe66357b6c964613866b773da5c2739c513e09"}],"stats":{"total":6,"additions":3,"deletions":3},"files":[{"sha":"59dd953f13450dd625a69076c0fe743eb0f9f2ae","filename":"openjpa-project/src/doc/manual/ref_guide_caching.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/4c9a7258697bc5e2bc62f12a58979ace59f8b1f1/openjpa-project/src/doc/manual/ref_guide_caching.xml","raw_url":"https://github.com/apache/openjpa/raw/4c9a7258697bc5e2bc62f12a58979ace59f8b1f1/openjpa-project/src/doc/manual/ref_guide_caching.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_caching.xml?ref=4c9a7258697bc5e2bc62f12a58979ace59f8b1f1","patch":"@@ -341,7 +341,7 @@ public void unpinAll(Class cls, Collection oids);\n </programlisting>\n             <para>\n Most caches are of limited size. Pinning an identity to the cache ensures that\n-the cache will mill not kick the data for the corresponding instance out of the\n+the cache will will not kick the data for the corresponding instance out of the\n cache, unless you manually evict it. Note that even after manual eviction, the\n data will get pinned again the next time it is fetched from the store. You can\n only remove a pin and make the data once again available for normal cache\n@@ -709,11 +709,11 @@ specification.\n                 </listitem>\n                 <listitem>\n                     <para>\n-Invoking <methodname>OpenJPAEntityManager.evict</methodname><emphasis>does not\n+Invoking <methodname>OpenJPAEntityManager.evict</methodname><emphasis> does not\n </emphasis> result in the corresponding data being dropped from the data cache,\n unless you have set the proper configuration options as explained above (see\n <xref linkend=\"ref_guide_cache_pmevict\"/>). Other methods related to the\n-<classname>EntityManager</classname> cache also do not effect the data cache.\n+<classname>EntityManager</classname> cache also do not affect the data cache.\n                     </para>\n                     <para>\n The data cache assumes that it is up-to-date with respect to the datastore, so"}]}

