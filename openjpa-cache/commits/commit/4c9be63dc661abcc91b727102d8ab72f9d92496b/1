{"sha":"4c9be63dc661abcc91b727102d8ab72f9d92496b","node_id":"MDY6Q29tbWl0MjA2MzY0OjRjOWJlNjNkYzY2MWFiY2M5MWI3MjcxMDJkOGFiNzJmOWQ5MjQ5NmI=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2009-06-16T15:51:15Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2009-06-16T15:51:15Z"},"message":"OPENJPA-1133 committing patch provided by Ravi Palacherla. PostgreSQL\nDictionary will now use \"false\" as a placeholder instead of 0 for\ncolumns of type BIT.\n\tmodified:   openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/PostgresDictionary.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/meta/EntityBool.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/meta/TestBooleanValue.java\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@785268 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"f72db5369979e50f6a1a41805d30abae84ce7615","url":"https://api.github.com/repos/apache/openjpa/git/trees/f72db5369979e50f6a1a41805d30abae84ce7615"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/4c9be63dc661abcc91b727102d8ab72f9d92496b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/4c9be63dc661abcc91b727102d8ab72f9d92496b","html_url":"https://github.com/apache/openjpa/commit/4c9be63dc661abcc91b727102d8ab72f9d92496b","comments_url":"https://api.github.com/repos/apache/openjpa/commits/4c9be63dc661abcc91b727102d8ab72f9d92496b/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"8f2f9e1626b5e4efdf15e32c261038e5fdd2e2be","url":"https://api.github.com/repos/apache/openjpa/commits/8f2f9e1626b5e4efdf15e32c261038e5fdd2e2be","html_url":"https://github.com/apache/openjpa/commit/8f2f9e1626b5e4efdf15e32c261038e5fdd2e2be"}],"stats":{"total":108,"additions":108,"deletions":0},"files":[{"sha":"17e5af0f5c10d30cca9104ef655454a112e49303","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/PostgresDictionary.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/4c9be63dc661abcc91b727102d8ab72f9d92496b/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/PostgresDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/4c9be63dc661abcc91b727102d8ab72f9d92496b/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/PostgresDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/PostgresDictionary.java?ref=4c9be63dc661abcc91b727102d8ab72f9d92496b","patch":"@@ -649,6 +649,18 @@ private void appendXmlValue(SQLBuffer buf, FilterValue val) {\n         appendCast(buf, newBufer, type);\n     }\n \n+\n+    /**\n+     * Return a SQL string to act as a placeholder for the given column.\n+     */\n+    public String getPlaceholderValueString(Column col) {\n+        if (col.getType() == Types.BIT) {\n+            return \"false\";\n+        } else {\n+            return super.getPlaceholderValueString(col);\n+        }\n+    }\n+\n     /**\n      * Connection wrapper to work around the postgres empty result set bug.\n      */"},{"sha":"61bc472415263cd742c0288d2b208d2f5325d7b3","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/meta/EntityBool.java","status":"added","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/apache/openjpa/blob/4c9be63dc661abcc91b727102d8ab72f9d92496b/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/meta/EntityBool.java","raw_url":"https://github.com/apache/openjpa/raw/4c9be63dc661abcc91b727102d8ab72f9d92496b/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/meta/EntityBool.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/meta/EntityBool.java?ref=4c9be63dc661abcc91b727102d8ab72f9d92496b","patch":"@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.jdbc.meta;\n+import javax.persistence.*;\n+\n+@Entity\n+public class EntityBool {\n+    \n+    @Id \n+    private int id;\n+    private boolean dummy;\n+    \n+    public boolean isDummy() {\n+        return dummy;\n+    }\n+    \n+    public void setDummy(boolean value) {\n+        dummy = value;\n+    }\n+    \n+    public int getId() {\n+        return id;\n+    }\n+    \n+    public void setId(int id) {\n+        this.id = id;\n+    }\n+}\n+"},{"sha":"bad2ba74c6abd8e7eddc2d43c3a92c1c15ea585d","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/meta/TestBooleanValue.java","status":"added","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/apache/openjpa/blob/4c9be63dc661abcc91b727102d8ab72f9d92496b/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/meta/TestBooleanValue.java","raw_url":"https://github.com/apache/openjpa/raw/4c9be63dc661abcc91b727102d8ab72f9d92496b/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/meta/TestBooleanValue.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/meta/TestBooleanValue.java?ref=4c9be63dc661abcc91b727102d8ab72f9d92496b","patch":"@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.jdbc.meta;\n+\n+import javax.persistence.*;\n+import org.apache.openjpa.jdbc.conf.JDBCConfiguration;\n+import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n+import org.apache.openjpa.jdbc.schema.Column;\n+\n+public class TestBooleanValue extends SingleEMFTestCase {\n+\n+    public void setUp() throws Exception {\n+        super.setUp(EntityBool.class);\n+    }\n+\n+    public void testBooleanValue() {\n+        EntityManager em = emf.createEntityManager();\n+        EntityBool t0 = new EntityBool();\n+        t0.setDummy(false);\n+        em.getTransaction().begin();\n+        em.persist(t0);\n+        em.getTransaction().commit();\n+        Column boolCol =\n+            getMapping(EntityBool.class).getTable().getColumn(\"dummy\");\n+        Query q =\n+            em.createNativeQuery(\"Select \"\n+                    + ((JDBCConfiguration) emf.getConfiguration())\n+                        .getDBDictionaryInstance().getPlaceholderValueString(\n+                            boolCol)\n+                    + \" FROM EntityBool a UNION ALL Select a.dummy \" +\n+                    \t\t\"FROM EntityBool a\");\n+        q.getResultList();\n+        em.close();\n+    }\n+}"}]}

