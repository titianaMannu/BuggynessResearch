{"sha":"4d9a6759db880b67adf9cd233528da021524dc99","node_id":"MDY6Q29tbWl0MjA2MzY0OjRkOWE2NzU5ZGI4ODBiNjdhZGY5Y2QyMzM1MjhkYTAyMTUyNGRjOTk=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2008-01-23T15:16:01Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2008-01-23T15:16:01Z"},"message":"OPENJPA-245\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@614563 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"ca0fdd08cb4776bf91bfee505cbeaaff4cd4690c","url":"https://api.github.com/repos/apache/openjpa/git/trees/ca0fdd08cb4776bf91bfee505cbeaaff4cd4690c"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/4d9a6759db880b67adf9cd233528da021524dc99","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/4d9a6759db880b67adf9cd233528da021524dc99","html_url":"https://github.com/apache/openjpa/commit/4d9a6759db880b67adf9cd233528da021524dc99","comments_url":"https://api.github.com/repos/apache/openjpa/commits/4d9a6759db880b67adf9cd233528da021524dc99/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"92d1334e52ad95bc637260eb60b32b03598e61b8","url":"https://api.github.com/repos/apache/openjpa/commits/92d1334e52ad95bc637260eb60b32b03598e61b8","html_url":"https://github.com/apache/openjpa/commit/92d1334e52ad95bc637260eb60b32b03598e61b8"}],"stats":{"total":130,"additions":127,"deletions":3},"files":[{"sha":"931fdcd003abbbc3989f696a2bd5f4dca6d40758","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AttachManager.java","status":"modified","additions":31,"deletions":1,"changes":32,"blob_url":"https://github.com/apache/openjpa/blob/4d9a6759db880b67adf9cd233528da021524dc99/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AttachManager.java","raw_url":"https://github.com/apache/openjpa/raw/4d9a6759db880b67adf9cd233528da021524dc99/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AttachManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AttachManager.java?ref=4d9a6759db880b67adf9cd233528da021524dc99","patch":"@@ -98,7 +98,11 @@ public Object attach(Object pc) {\n \n         CallbackException excep = null;\n         try {\n-            return attach(pc, null, null, null, true);\n+            PersistenceCapable into = findFromDatabase(pc);\n+            OpenJPAStateManager owner = (into == null) ? null\n+                    : (OpenJPAStateManager) into.pcGetStateManager();\n+            return attach(pc, into, owner, null, true);\n+\n         } catch (CallbackException ce) {\n             excep = ce;\n             return null; // won't be reached as the exceps will be rethrown\n@@ -335,4 +339,30 @@ StateManagerImpl assertManaged(Object obj) {\n                 Exceptions.toString(obj))).setFailedObject (obj);\n \t\treturn sm;\n \t}\n+\n+    /**\n+     * Find a PersistenceCapable instance of an Object if it exists in the \n+     * database. If the object is null or can't be found in the database.  \n+     *  \n+     * @param pc An object which will be attached into the current context. The \n+     * object may or may not correspond to a row in the database. \n+     * \n+     * @return If the object is null or can't be found in the database this \n+     * method returns null. Otherwise a PersistenceCapable representation of the\n+     * object is returned.\n+     */\n+    protected PersistenceCapable findFromDatabase(Object pc) {\n+        PersistenceCapable rval = null;\n+\n+        if (pc != null) {\n+            Object oid = _broker.newObjectId(pc.getClass(),\n+                    getDetachedObjectId(pc));\n+\n+            if (oid != null) {\n+                rval = ImplHelper.toPersistenceCapable(_broker.find(oid, true,\n+                        null), getBroker().getConfiguration());\n+            }\n+        }\n+        return rval;\n+    }\n }"},{"sha":"8de18ed6feb002e3e1a90df833cc27162a0fba7d","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/VersionAttachStrategy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/4d9a6759db880b67adf9cd233528da021524dc99/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/VersionAttachStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/4d9a6759db880b67adf9cd233528da021524dc99/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/VersionAttachStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/VersionAttachStrategy.java?ref=4d9a6759db880b67adf9cd233528da021524dc99","patch":"@@ -73,7 +73,7 @@ public Object attach(AttachManager manager, Object toAttach,\n             meta.getRepository().getConfiguration());\n \n         boolean embedded = ownerMeta != null && ownerMeta.isEmbeddedPC();\n-        boolean isNew = !broker.isDetached(pc);\n+        boolean isNew = !broker.isDetached(pc) && into == null;\n         Object version = null;\n         StateManagerImpl sm;\n "},{"sha":"c5559892901183a086f8a096723481ac35a72eb4","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/Person.java","status":"added","additions":56,"deletions":0,"changes":56,"blob_url":"https://github.com/apache/openjpa/blob/4d9a6759db880b67adf9cd233528da021524dc99/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/Person.java","raw_url":"https://github.com/apache/openjpa/raw/4d9a6759db880b67adf9cd233528da021524dc99/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/Person.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/Person.java?ref=4d9a6759db880b67adf9cd233528da021524dc99","patch":"@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.simple;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.Version;\n+\n+@Entity\n+public class Person {\n+    private int id;\n+    private String forename;\n+    private String surname;\n+\n+    @Id\n+    public int getId() {\n+        return id;\n+    }\n+\n+    public void setId(int id) {\n+        this.id = id;\n+    }\n+\n+    public String getForename() {\n+        return forename;\n+    }\n+\n+    public void setForename(String forename) {\n+        this.forename = forename;\n+    }\n+\n+    public String getSurname() {\n+        return surname;\n+    }\n+\n+    public void setSurname(String surname) {\n+        this.surname = surname;\n+    }\n+}"},{"sha":"88fd5a71e7d745e3dd8c317bc1a03e9888602284","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/TestEntityManagerMerge.java","status":"modified","additions":39,"deletions":1,"changes":40,"blob_url":"https://github.com/apache/openjpa/blob/4d9a6759db880b67adf9cd233528da021524dc99/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/TestEntityManagerMerge.java","raw_url":"https://github.com/apache/openjpa/raw/4d9a6759db880b67adf9cd233528da021524dc99/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/TestEntityManagerMerge.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/TestEntityManagerMerge.java?ref=4d9a6759db880b67adf9cd233528da021524dc99","patch":"@@ -18,6 +18,8 @@\n  */\r\n package org.apache.openjpa.persistence.simple;\r\n \r\n+import javax.persistence.EntityManager;\r\n+\r\n import junit.textui.TestRunner;\r\n import org.apache.openjpa.persistence.test.SingleEMTestCase;\r\n \r\n@@ -30,7 +32,7 @@\n     extends SingleEMTestCase {\r\n \r\n     public void setUp() {\r\n-        setUp(AllFieldTypes.class);\r\n+        setUp(AllFieldTypes.class, Person.class);\r\n     }\r\n \r\n     public void testMerge() {\r\n@@ -70,6 +72,42 @@ public void testMerge() {\n   \r\n     }\r\n     \r\n+    /**\r\n+     * This test verifies that persisting a new entity which matches an existing \r\n+     * row in the database succeeds. \r\n+     */\r\n+    public void testMergeExistingEntity() {\r\n+        Person p = new Person();\r\n+        p.setId(102);\r\n+\r\n+        EntityManager em = emf.createEntityManager();\r\n+\r\n+        em.getTransaction().begin();\r\n+        em.persist(p);\r\n+        em.getTransaction().commit();\r\n+        em.close();\r\n+\r\n+        em = emf.createEntityManager();\r\n+        p = new Person();\r\n+        p.setId(102);\r\n+        p.setForename(\"Jane\");\r\n+\r\n+        em.getTransaction().begin();\r\n+        em.merge(p);\r\n+        em.getTransaction().commit();\r\n+\r\n+        em.close();\r\n+\r\n+        em = emf.createEntityManager();\r\n+        p = (Person) em.createQuery(\"Select p from Person p where p.id = 102\")\r\n+                .getSingleResult();\r\n+\r\n+        assertNotNull(p);\r\n+        assertEquals(\"Jane\", p.getForename());\r\n+        \r\n+        em.close();\r\n+    }\r\n+    \r\n     public static void main(String[] args) {\r\n         TestRunner.run(TestEntityManagerMerge.class);\r\n     }\r"}]}

