{"sha":"4e59c4836407382f853306dfd0ffbd14cba6e5c1","node_id":"MDY6Q29tbWl0MjA2MzY0OjRlNTljNDgzNjQwNzM4MmY4NTMzMDZkZmQwZmZiZDE0Y2JhNmU1YzE=","commit":{"author":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2019-04-05T08:29:27Z"},"committer":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2019-04-05T08:29:27Z"},"message":"OPENJPA-2555 use a defaultFractionLength of 0 for backward compat\n\nThis is how the default of MySQL and the previous behaviour of OpenJPA did.\nIf a user want he can use either @Column(scale=n) or set it via DBDictionary:\nopenjpa.jdbc.DBDictionary=(defaultFractionLength=6)","tree":{"sha":"327ab2c3eed6ff31608c3a0a7c299403f8c8f1dc","url":"https://api.github.com/repos/apache/openjpa/git/trees/327ab2c3eed6ff31608c3a0a7c299403f8c8f1dc"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/4e59c4836407382f853306dfd0ffbd14cba6e5c1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/4e59c4836407382f853306dfd0ffbd14cba6e5c1","html_url":"https://github.com/apache/openjpa/commit/4e59c4836407382f853306dfd0ffbd14cba6e5c1","comments_url":"https://api.github.com/repos/apache/openjpa/commits/4e59c4836407382f853306dfd0ffbd14cba6e5c1/comments","author":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"committer":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"parents":[{"sha":"a5b50a5bd4ca8b0de8ca8032aeaca0b383163bc9","url":"https://api.github.com/repos/apache/openjpa/commits/a5b50a5bd4ca8b0de8ca8032aeaca0b383163bc9","html_url":"https://github.com/apache/openjpa/commit/a5b50a5bd4ca8b0de8ca8032aeaca0b383163bc9"}],"stats":{"total":42,"additions":30,"deletions":12},"files":[{"sha":"903f3b66cda3e2f2d678d3a082f3c43dd9f771fb","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/4e59c4836407382f853306dfd0ffbd14cba6e5c1/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/4e59c4836407382f853306dfd0ffbd14cba6e5c1/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java?ref=4e59c4836407382f853306dfd0ffbd14cba6e5c1","patch":"@@ -453,7 +453,7 @@\n      * @see #fractionalTypeNameSet\n      * @see #getFractionLength(Column, String)\n      */\n-    protected int defaultFractionLength = 6;\n+    public int defaultFractionLength = 6;\n \n \n     protected final Set<String> typeModifierSet = new HashSet<>();"},{"sha":"454288cc74a689576f232c5ca19bc04b80f80e15","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/MariaDBDictionary.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/4e59c4836407382f853306dfd0ffbd14cba6e5c1/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/MariaDBDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/4e59c4836407382f853306dfd0ffbd14cba6e5c1/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/MariaDBDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/MariaDBDictionary.java?ref=4e59c4836407382f853306dfd0ffbd14cba6e5c1","patch":"@@ -165,6 +165,8 @@ public MariaDBDictionary() {\n         setTrailingDelimiter(DELIMITER_BACK_TICK);\n \n         fixedSizeTypeNameSet.remove(\"NUMERIC\");\n+\n+        defaultFractionLength = 0;\n     }\n \n     @Override"},{"sha":"256bd3637c292642811795c69b5dfff77f6dff6f","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/MySQLDictionary.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/4e59c4836407382f853306dfd0ffbd14cba6e5c1/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/MySQLDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/4e59c4836407382f853306dfd0ffbd14cba6e5c1/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/MySQLDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/MySQLDictionary.java?ref=4e59c4836407382f853306dfd0ffbd14cba6e5c1","patch":"@@ -166,6 +166,8 @@ public MySQLDictionary() {\n         setTrailingDelimiter(DELIMITER_BACK_TICK);\n \n         fixedSizeTypeNameSet.remove(\"NUMERIC\");\n+\n+        defaultFractionLength = 0;\n     }\n \n     @Override"},{"sha":"18787695fbfd7eb5d6b2716973f3a2f1dcc04dcd","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/TestExplicitAccess.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/4e59c4836407382f853306dfd0ffbd14cba6e5c1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/TestExplicitAccess.java","raw_url":"https://github.com/apache/openjpa/raw/4e59c4836407382f853306dfd0ffbd14cba6e5c1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/TestExplicitAccess.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/TestExplicitAccess.java?ref=4e59c4836407382f853306dfd0ffbd14cba6e5c1","patch":"@@ -41,6 +41,7 @@\n     @Override\n     public void setUp() {\n         setUp(CLEAR_TABLES,\n+            \"openjpa.jdbc.DBDictionary\", \"(defaultFractionLength=6)\",\n             PropAccess.class, FieldAccess.class,\n             DefFieldMixedPropAccess.class , DefPropMixedFieldAccess.class,\n             AbstractMappedSuperField.class, PropertySub.class,"},{"sha":"8891028a78d7b805307a33e16f82a410a58eab79","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/TestXMLExplicitAccess.java","status":"modified","additions":2,"deletions":5,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/4e59c4836407382f853306dfd0ffbd14cba6e5c1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/TestXMLExplicitAccess.java","raw_url":"https://github.com/apache/openjpa/raw/4e59c4836407382f853306dfd0ffbd14cba6e5c1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/TestXMLExplicitAccess.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/TestXMLExplicitAccess.java?ref=4e59c4836407382f853306dfd0ffbd14cba6e5c1","patch":"@@ -33,13 +33,10 @@\n \n     @Override\n     public void setUp() throws Exception {\n-        super.setUp();\n+        super.setUp(CLEAR_TABLES,\n+                \"openjpa.jdbc.DBDictionary\", \"(defaultFractionLength=6)\");\n     }\n \n-    @Override\n-    public void tearDown() throws Exception {\n-        super.tearDown();\n-    }\n \n     @Override\n     protected String getPersistenceUnitName() {"},{"sha":"5495d3021248f257c0c3a115d0127fe6a0fa2cf4","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/maps/m2mmapex10/TestMany2ManyMapEx10.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/4e59c4836407382f853306dfd0ffbd14cba6e5c1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/maps/m2mmapex10/TestMany2ManyMapEx10.java","raw_url":"https://github.com/apache/openjpa/raw/4e59c4836407382f853306dfd0ffbd14cba6e5c1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/maps/m2mmapex10/TestMany2ManyMapEx10.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/maps/m2mmapex10/TestMany2ManyMapEx10.java?ref=4e59c4836407382f853306dfd0ffbd14cba6e5c1","patch":"@@ -59,8 +59,10 @@\n \n     @Override\n     public void setUp() {\n-        super.setUp(DROP_TABLES,EmployeePK.class, PhonePK.class,\n-            Employee.class, PhoneNumber.class);\n+        super.setUp(DROP_TABLES,\n+                \"openjpa.jdbc.DBDictionary\", \"(defaultFractionLength=6)\",\n+                EmployeePK.class, PhonePK.class,\n+                Employee.class, PhoneNumber.class);\n         createObj();\n         rsAllPhones = getAll(PhoneNumber.class);\n         rsAllEmps = getAll(Employee.class);"},{"sha":"c1165db1aae9c8fab725a7c5512ad32b0f75a3e0","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestHintedQuery.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/4e59c4836407382f853306dfd0ffbd14cba6e5c1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestHintedQuery.java","raw_url":"https://github.com/apache/openjpa/raw/4e59c4836407382f853306dfd0ffbd14cba6e5c1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestHintedQuery.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestHintedQuery.java?ref=4e59c4836407382f853306dfd0ffbd14cba6e5c1","patch":"@@ -38,7 +38,9 @@\n \n     @Override\n     public void setUp() {\n-        super.setUp(CLEAR_TABLES, TimeKeeper.class);\n+        super.setUp(CLEAR_TABLES,\n+                \"openjpa.jdbc.DBDictionary\", \"(defaultFractionLength=6)\",\n+                TimeKeeper.class);\n     }\n \n     public void testHintedQuery() {"},{"sha":"a4f4c2a691abb7228b9d5b3d0c7bbe8fe6c3cc96","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestTemporalTypeQueryParameterBinding.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/4e59c4836407382f853306dfd0ffbd14cba6e5c1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestTemporalTypeQueryParameterBinding.java","raw_url":"https://github.com/apache/openjpa/raw/4e59c4836407382f853306dfd0ffbd14cba6e5c1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestTemporalTypeQueryParameterBinding.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestTemporalTypeQueryParameterBinding.java?ref=4e59c4836407382f853306dfd0ffbd14cba6e5c1","patch":"@@ -63,7 +63,9 @@\n     private EntityManager em;\n     @Override\n     public void setUp() throws Exception {\n-        super.setUp(CLEAR_TABLES, TimeKeeper.class, TimeEntity.class);\n+        super.setUp(CLEAR_TABLES,\n+                \"openjpa.jdbc.DBDictionary\", \"(defaultFractionLength=6)\",\n+                TimeKeeper.class, TimeEntity.class);\n         em = emf.createEntityManager();\n \n         TimeKeeper pc = new TimeKeeper();"},{"sha":"2b130386b51a2b093495d4fa94af88f7068a1969","filename":"openjpa-project/src/doc/manual/supported_databases.xml","status":"modified","additions":12,"deletions":2,"changes":14,"blob_url":"https://github.com/apache/openjpa/blob/4e59c4836407382f853306dfd0ffbd14cba6e5c1/openjpa-project/src/doc/manual/supported_databases.xml","raw_url":"https://github.com/apache/openjpa/raw/4e59c4836407382f853306dfd0ffbd14cba6e5c1/openjpa-project/src/doc/manual/supported_databases.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/supported_databases.xml?ref=4e59c4836407382f853306dfd0ffbd14cba6e5c1","patch":"@@ -1193,6 +1193,15 @@ The number of fractions can be explicitly set via scale:\n         <title>\n             MariaDB\n         </title>\n+        <example id=\"example_props_mariadb\">\n+            <title>\n+                Example properties for MariaDB\n+            </title>\n+            <programlisting>\n+                openjpa.ConnectionDriverName: org.mariadb.jdbc.Driver\n+                openjpa.ConnectionURL: jdbc:mariadb://SERVER_NAME/DB_NAME\n+            </programlisting>\n+        </example>\n         <section id=\"dbsupport_mariadb_issues\">\n             <title>\n                 Known issues with MariaDB\n@@ -1201,9 +1210,10 @@ The number of fractions can be explicitly set via scale:\n                 <listitem>\n                     <para>\n                         As of MariaDB 10.2 the <code>DATETIME</code> data type supports sub-second fractions.\n-                        The default of MariaDB is to use no fractions.\n+                        The default of MariaDB internally is to use no fractions.\n                         The number of fractions can be explicitly set via scale:\n-                        <code>@Column(scale=3)</code> will lead to a <code>DATETIME(3)</code> column.\n+                        <code>@Column(scale=6)</code> will lead to a <code>DATETIME(6)</code> column and able to store microseconds.\n+                        A value of <code>@Column(scale=-1)</code> will explicitly turn off all fractions.\n                     </para>\n                 </listitem>\n "}]}

