{"sha":"4efc384cbdfb85e9fd53ffd781d7652c9f3ac3bd","node_id":"MDY6Q29tbWl0MjA2MzY0OjRlZmMzODRjYmRmYjg1ZTlmZDUzZmZkNzgxZDc2NTJjOWYzYWMzYmQ=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2006-09-20T23:42:41Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2006-09-20T23:42:41Z"},"message":"added some extension points for sql pluggability\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@448405 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"93b261e2816067fc304c7558782982daec51a381","url":"https://api.github.com/repos/apache/openjpa/git/trees/93b261e2816067fc304c7558782982daec51a381"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/4efc384cbdfb85e9fd53ffd781d7652c9f3ac3bd","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/4efc384cbdfb85e9fd53ffd781d7652c9f3ac3bd","html_url":"https://github.com/apache/openjpa/commit/4efc384cbdfb85e9fd53ffd781d7652c9f3ac3bd","comments_url":"https://api.github.com/repos/apache/openjpa/commits/4efc384cbdfb85e9fd53ffd781d7652c9f3ac3bd/comments","author":null,"committer":null,"parents":[{"sha":"480a42df4a036e53f0a06813d7b3412213cc610c","url":"https://api.github.com/repos/apache/openjpa/commits/480a42df4a036e53f0a06813d7b3412213cc610c","html_url":"https://github.com/apache/openjpa/commit/480a42df4a036e53f0a06813d7b3412213cc610c"}],"stats":{"total":35,"additions":18,"deletions":17},"files":[{"sha":"9dc058fab9b88510fed1a1c49bf189da45dc9763","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStoreManager.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/4efc384cbdfb85e9fd53ffd781d7652c9f3ac3bd/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStoreManager.java","raw_url":"https://github.com/apache/openjpa/raw/4efc384cbdfb85e9fd53ffd781d7652c9f3ac3bd/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStoreManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStoreManager.java?ref=4efc384cbdfb85e9fd53ffd781d7652c9f3ac3bd","patch":"@@ -730,9 +730,9 @@ private void connect(boolean ref) {\n \n     /**\n      * Connect to the database. This method is separated out so that it\n-     * can be profiled.\n+     * can be overridden.\n      */\n-    private RefCountConnection connectInternal() throws SQLException {\n+    protected RefCountConnection connectInternal() throws SQLException {\n         return new RefCountConnection(_ds.getConnection());\n     }\n \n@@ -1237,7 +1237,7 @@ protected void finalize() throws SQLException {\n      * Connection wrapper that keeps an internal ref count so that it knows\n      * when to really close.\n      */\n-    private class RefCountConnection extends DelegatingConnection {\n+    protected class RefCountConnection extends DelegatingConnection {\n \n         private boolean _retain = false;\n         private int _refs = 0;"},{"sha":"06a6f0c2bce47836f25d2a910de9bb9c1ea3ff1a","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/LogicalUnion.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/4efc384cbdfb85e9fd53ffd781d7652c9f3ac3bd/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/LogicalUnion.java","raw_url":"https://github.com/apache/openjpa/raw/4efc384cbdfb85e9fd53ffd781d7652c9f3ac3bd/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/LogicalUnion.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/LogicalUnion.java?ref=4efc384cbdfb85e9fd53ffd781d7652c9f3ac3bd","patch":"@@ -85,7 +85,8 @@ protected LogicalUnion(JDBCConfiguration conf, int sels, Select[] seeds) {\n \n         SelectImpl seed;\n         for (int i = 0; i < sels; i++) {\n-            seed = (seeds == null) ? new SelectImpl(conf)\n+            seed = (seeds == null)\n+                ? (SelectImpl) conf.getSQLFactoryInstance().newSelect()\n                 : (SelectImpl) seeds[i];\n             this.sels[i] = newUnionSelect(seed, i);\n         }"},{"sha":"c4272fccc4d9cd1f1747800a28e235ca6fb56be2","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java","status":"modified","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/apache/openjpa/blob/4efc384cbdfb85e9fd53ffd781d7652c9f3ac3bd/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java","raw_url":"https://github.com/apache/openjpa/raw/4efc384cbdfb85e9fd53ffd781d7652c9f3ac3bd/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java?ref=4efc384cbdfb85e9fd53ffd781d7652c9f3ac3bd","patch":"@@ -283,7 +283,7 @@ public Result execute(JDBCStore store, JDBCFetchConfiguration fetch)\n         throws SQLException {\n         if (fetch == null)\n             fetch = store.getFetchConfiguration();\n-        return execute(this, store.getContext(), store, fetch,\n+        return execute(store.getContext(), store, fetch,\n             fetch.getReadLockLevel());\n     }\n \n@@ -292,31 +292,31 @@ public Result execute(JDBCStore store, JDBCFetchConfiguration fetch,\n         throws SQLException {\n         if (fetch == null)\n             fetch = store.getFetchConfiguration();\n-        return execute(this, store.getContext(), store, fetch, lockLevel);\n+        return execute(store.getContext(), store, fetch, lockLevel);\n     }\n \n     /**\n      * Execute this select in the context of the given store manager. The\n      * context is passed in separately for profiling purposes.\n      */\n-    private static Result execute(SelectImpl sel, StoreContext ctx,\n-        JDBCStore store, JDBCFetchConfiguration fetch, int lockLevel)\n+    protected Result execute(StoreContext ctx, JDBCStore store, \n+        JDBCFetchConfiguration fetch, int lockLevel)\n         throws SQLException {\n         boolean forUpdate = false;\n-        if (!sel.isAggregate() && sel._grouping == null) {\n+        if (!isAggregate() && _grouping == null) {\n             JDBCLockManager lm = store.getLockManager();\n             if (lm != null)\n-                forUpdate = lm.selectForUpdate(sel, lockLevel);\n+                forUpdate = lm.selectForUpdate(this, lockLevel);\n         }\n \n-        SQLBuffer sql = sel.toSelect(forUpdate, fetch);\n-        int rsType = (sel.isLRS() && sel.supportsRandomAccess(forUpdate))\n+        SQLBuffer sql = toSelect(forUpdate, fetch);\n+        int rsType = (isLRS() && supportsRandomAccess(forUpdate))\n             ? -1 : ResultSet.TYPE_FORWARD_ONLY;\n         Connection conn = store.getConnection();\n         PreparedStatement stmnt = null;\n         ResultSet rs = null;\n         try {\n-            if (sel.isLRS())\n+            if (isLRS())\n                 stmnt = sql.prepareStatement(conn, fetch, rsType, -1);\n             else\n                 stmnt = sql.prepareStatement(conn, rsType, -1);\n@@ -329,12 +329,12 @@ private static Result execute(SelectImpl sel, StoreContext ctx,\n             throw se;\n         }\n \n-        SelectResult res = new SelectResult(conn, stmnt, rs, sel._dict);\n-        res.setSelect(sel);\n+        SelectResult res = new SelectResult(conn, stmnt, rs, _dict);\n+        res.setSelect(this);\n         res.setStore(store);\n         res.setLocking(forUpdate);\n         try {\n-            addEagerResults(res, sel, store, fetch);\n+            addEagerResults(res, this, store, fetch);\n         } catch (SQLException se) {\n             res.close();\n             throw se;\n@@ -1470,7 +1470,7 @@ public SelectExecutor whereClone(int sels) {\n         Select[] clones = null;\n         SelectImpl sel;\n         for (int i = 0; i < sels; i++) {\n-            sel = new SelectImpl(_conf);\n+            sel = (SelectImpl) conf.getSQLFactoryInstance().newSelect();\n             sel._flags = _flags;\n             sel._flags &= ~AGGREGATE;\n             sel._flags &= ~OUTER;"}]}

