{"sha":"4fbf3fc1f0a0431d29765d041e74756f319bc3fe","node_id":"MDY6Q29tbWl0MjA2MzY0OjRmYmYzZmMxZjBhMDQzMWQyOTc2NWQwNDFlNzQ3NTZmMzE5YmMzZmU=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2013-02-19T22:30:34Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2013-02-19T22:30:34Z"},"message":"OPENJPA-2336: Consider database dictionary schema case while matching join column name\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1447945 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"22a024244b67a5323fba6148e0c7cf9e75c40d27","url":"https://api.github.com/repos/apache/openjpa/git/trees/22a024244b67a5323fba6148e0c7cf9e75c40d27"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/4fbf3fc1f0a0431d29765d041e74756f319bc3fe","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/4fbf3fc1f0a0431d29765d041e74756f319bc3fe","html_url":"https://github.com/apache/openjpa/commit/4fbf3fc1f0a0431d29765d041e74756f319bc3fe","comments_url":"https://api.github.com/repos/apache/openjpa/commits/4fbf3fc1f0a0431d29765d041e74756f319bc3fe/comments","author":null,"committer":null,"parents":[{"sha":"7ce7e556207f545a7bd688d4d8491a3021fa3aac","url":"https://api.github.com/repos/apache/openjpa/commits/7ce7e556207f545a7bd688d4d8491a3021fa3aac","html_url":"https://github.com/apache/openjpa/commit/7ce7e556207f545a7bd688d4d8491a3021fa3aac"}],"stats":{"total":17,"additions":13,"deletions":4},"files":[{"sha":"37b17aeed726e4fc5cdeaaf24df8596d8beb9249","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingInfo.java","status":"modified","additions":13,"deletions":4,"changes":17,"blob_url":"https://github.com/apache/openjpa/blob/4fbf3fc1f0a0431d29765d041e74756f319bc3fe/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingInfo.java","raw_url":"https://github.com/apache/openjpa/raw/4fbf3fc1f0a0431d29765d041e74756f319bc3fe/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingInfo.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingInfo.java?ref=4fbf3fc1f0a0431d29765d041e74756f319bc3fe","patch":"@@ -1530,10 +1530,19 @@ else if (foreign.getColumn(name) != null) {\n         tmplate.setIdentifier(name);\n         if (!constant) {\n             Column tcol = foreign.getColumn(targetName, false); \n-            if (tcol == null)\n-                throw new MetaDataException(_loc.get(prefix + \"-bad-fktarget\",\n-                    new Object[]{ context, targetName, name, foreign }));\n-\n+            if (tcol == null) {\n+            \tString schemaCase = rel.getMappingRepository().getDBDictionary().schemaCase;\n+            \tif (DBDictionary.SCHEMA_CASE_LOWER.equals(schemaCase)) {\n+                \ttcol = foreign.getColumn(DBIdentifier.toLower(targetName, true), false);\n+            \t} else if (DBDictionary.SCHEMA_CASE_UPPER.equals(schemaCase)) {\n+            \t\ttcol = foreign.getColumn(DBIdentifier.toUpper(targetName, true), false);\n+            \t}\n+            }\n+        \tif (tcol == null) {\n+        \t\t// give up\n+        \t\tthrow new MetaDataException(_loc.get(prefix + \"-bad-fktarget\",\n+    \t\t\t\tnew Object[]{ context, targetName, name, foreign }));\n+        \t}\n             if (DBIdentifier.isNull(name))\n                 tmplate.setIdentifier(tcol.getIdentifier());\n             tmplate.setJavaType(tcol.getJavaType());"}]}

