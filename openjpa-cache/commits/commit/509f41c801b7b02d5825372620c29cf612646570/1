{"sha":"509f41c801b7b02d5825372620c29cf612646570","node_id":"MDY6Q29tbWl0MjA2MzY0OjUwOWY0MWM4MDFiN2IwMmQ1ODI1MzcyNjIwYzI5Y2Y2MTI2NDY1NzA=","commit":{"author":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2008-10-29T18:36:39Z"},"committer":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2008-10-29T18:36:39Z"},"message":"OPENJPA-751 - Commit documentation changes contributed by Milosz Tylenda.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@708975 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"29c7aa7f6d5be988a1de98849f6bdd1f4991bad7","url":"https://api.github.com/repos/apache/openjpa/git/trees/29c7aa7f6d5be988a1de98849f6bdd1f4991bad7"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/509f41c801b7b02d5825372620c29cf612646570","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/509f41c801b7b02d5825372620c29cf612646570","html_url":"https://github.com/apache/openjpa/commit/509f41c801b7b02d5825372620c29cf612646570","comments_url":"https://api.github.com/repos/apache/openjpa/commits/509f41c801b7b02d5825372620c29cf612646570/comments","author":null,"committer":null,"parents":[{"sha":"7c1c9fca60d884d27b270070ad85857e196d7cfd","url":"https://api.github.com/repos/apache/openjpa/commits/7c1c9fca60d884d27b270070ad85857e196d7cfd","html_url":"https://github.com/apache/openjpa/commit/7c1c9fca60d884d27b270070ad85857e196d7cfd"}],"stats":{"total":151,"additions":76,"deletions":75},"files":[{"sha":"a3021e9c57cd7204305c48646885604ddbaaa0f6","filename":"openjpa-project/src/doc/manual/jpa_overview_arch.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/jpa_overview_arch.xml","raw_url":"https://github.com/apache/openjpa/raw/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/jpa_overview_arch.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_arch.xml?ref=509f41c801b7b02d5825372620c29cf612646570","patch":"@@ -110,7 +110,7 @@ Query</classname> instances.\n                 </primary>\n             </indexterm>\n <emphasis role=\"bold\"><link linkend=\"jpa_overview_pc\"><classname>Entity\n-</classname></link></emphasis>: Entites are persistent objects that represent\n+</classname></link></emphasis>: Entities are persistent objects that represent\n datastore records.\n             </para>\n         </listitem>"},{"sha":"7e3c1831440d4309dfec21b65bb45e7caf997cfa","filename":"openjpa-project/src/doc/manual/jpa_overview_em.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/jpa_overview_em.xml","raw_url":"https://github.com/apache/openjpa/raw/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/jpa_overview_em.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_em.xml?ref=509f41c801b7b02d5825372620c29cf612646570","patch":"@@ -530,7 +530,7 @@ but cannot concurrently update it.\n                 <para>\n <literal>WRITE</literal>: Other transactions cannot concurrently read or write\n the object. When a transaction is committed that holds WRITE locks on any\n-entites, those entites will have their version incremented even if the entities\n+entities, those entities will have their version incremented even if the entities\n themselves did not change in the transaction.\n                 </para>\n             </listitem>"},{"sha":"61825682ca54bfdd68a82e68b4e989676df54301","filename":"openjpa-project/src/doc/manual/jpa_overview_emfactory.xml","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/jpa_overview_emfactory.xml","raw_url":"https://github.com/apache/openjpa/raw/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/jpa_overview_emfactory.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_emfactory.xml?ref=509f41c801b7b02d5825372620c29cf612646570","patch":"@@ -127,7 +127,7 @@ public EntityManager createEntityManager(Map map);\n         <para>\n The two <methodname>createEntityManager</methodname> methods above create a new\n <classname>EntityManager</classname> each time they are invoked. The optional\n-<classname>Map</classname> is used to to supply vendor-specific settings. If you\n+<classname>Map</classname> is used to supply vendor-specific settings. If you\n have configured your implementation for JTA transactions and a JTA transaction\n is active, the returned <classname>EntityManager</classname> will be \n synchronized with that transaction.\n@@ -277,15 +277,15 @@ object.\n When the next transaction begins, the <classname>EntityManager</classname> will\n begin a new persistence context, and will again start returning managed\n entities. As you'll see in <xref linkend=\"jpa_overview_em\"/>, you can\n-also merge the previously-detached entites back into the new persistence\n+also merge the previously-detached entities back into the new persistence\n context.\n             </para>\n             <example id=\"jpa_overview_emfactory_perscontext_transex\">\n                 <title>\n                     Behavior of Transaction Persistence Context\n                 </title>\n                 <para>\n-The following code illustrates the behavior of entites under an <classname>\n+The following code illustrates the behavior of entities under an <classname>\n EntityManager</classname> using a transaction persistence context.\n                 </para>\n <programlisting>\n@@ -339,7 +339,7 @@ only become detached when you finally close the <classname>EntityManager\n                     Behavior of Extended Persistence Context\n                 </title>\n                 <para>\n-The following code illustrates the behavior of entites under an <classname>\n+The following code illustrates the behavior of entities under an <classname>\n EntityManager</classname> using an extended persistence context.\n                 </para>\n <programlisting>"},{"sha":"c00234d076bd7784705f9f99e8d8be71b01e1606","filename":"openjpa-project/src/doc/manual/jpa_overview_mapping.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/jpa_overview_mapping.xml","raw_url":"https://github.com/apache/openjpa/raw/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/jpa_overview_mapping.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_mapping.xml?ref=509f41c801b7b02d5825372620c29cf612646570","patch":"@@ -377,7 +377,7 @@ constraint spans.\n In XML, unique constraints are represented by nesting <literal>\n unique-constraint</literal> elements within the <literal> table</literal>\n element. Each <literal>unique-constraint</literal> element in turn nests\n-<literal>column-name</literal> text elements to enumerate the contraint's\n+<literal>column-name</literal> text elements to enumerate the constraint's\n columns.\n         </para>\n         <example id=\"jpa_overview_mapping_unq_attrex\">\n@@ -2349,7 +2349,7 @@ the discriminator strategy of the hierarchy.\n         </itemizedlist>\n         <para>\n The corresponding XML element is <literal> discriminator-column</literal>. Its\n-attribues mirror the annotation properties above:\n+attributes mirror the annotation properties above:\n         </para>\n         <itemizedlist>\n             <listitem>\n@@ -4212,7 +4212,7 @@ fields, namely dedicated <link linkend=\"jpa_overview_mapping_assoccoll\">join\n tables</link> or <link linkend=\"jpa_overview_mapping_bidi\">bidirectional\n relations</link>. The only additions are the <classname>MapKey</classname>\n annotation and <literal>map-key</literal> element to declare the key field. We\n-covered these additions in in <xref linkend=\"jpa_overview_meta_mapkey\"/>.\n+covered these additions in <xref linkend=\"jpa_overview_meta_mapkey\"/>.\n             </para>\n             <mediaobject>\n                 <imageobject>"},{"sha":"13ee19186c6156c5c6ee4fa0c5e94627eaa6a78e","filename":"openjpa-project/src/doc/manual/jpa_overview_meta.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/jpa_overview_meta.xml","raw_url":"https://github.com/apache/openjpa/raw/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/jpa_overview_meta.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_meta.xml?ref=509f41c801b7b02d5825372620c29cf612646570","patch":"@@ -361,7 +361,7 @@ types, see <xref linkend=\"jpa_overview_meta_field\"/>.\n             <note>\n                 <para>\n OpenJPA allows a persistent class to be both an entity and an embeddable class.\n-Instances of the class will act as entites when persisted explicitly or assigned\n+Instances of the class will act as entities when persisted explicitly or assigned\n to non-embedded fields of entities. Instances will act as embedded values when\n assigned to embedded fields of entities.\n                 </para>\n@@ -1159,7 +1159,7 @@ types.\n With a mix of eager and lazily-loaded fields, you can ensure that commonly-used\n fields load efficiently, and that other state loads transparently when accessed.\n As you will see in <xref linkend=\"jpa_overview_emfactory_perscontext\"/>,\n-you can also use eager fetching to ensure that entites have all needed data\n+you can also use eager fetching to ensure that entities have all needed data\n loaded before they become <emphasis>detached</emphasis> at the end of a\n persistence context.\n                 </para>"},{"sha":"62e6925bc58db2cacabc76ff1722055e66d46c20","filename":"openjpa-project/src/doc/manual/jpa_overview_pc.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/jpa_overview_pc.xml","raw_url":"https://github.com/apache/openjpa/raw/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/jpa_overview_pc.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_pc.xml?ref=509f41c801b7b02d5825372620c29cf612646570","patch":"@@ -709,7 +709,7 @@ The entity identity of each persistent instance is encapsulated in its\n <emphasis>identity field(s)</emphasis>. If two entities of the same type have\n the same identity field values, then the two entities represent the same state\n in the datastore. Each entity's identity field values must be unique among all\n-other entites of the same type.\n+other entities of the same type.\n         </para>\n         <para>\n Identity fields must be primitives, primitive wrappers, <classname>\n@@ -1112,7 +1112,7 @@ This is equivalent to the XML element tag <literal>post-load</literal>.\n                     <para>\n <classname>PostLoad</classname> is often used to initialize non-persistent\n fields whose values depend on the values of persistent fields, such as a complex\n-datastructure.\n+data structure.\n                     </para>\n                 </listitem>\n                 <listitem>"},{"sha":"5b475394c33b1fc6497ee30d781f41b2a8c2d12f","filename":"openjpa-project/src/doc/manual/jpa_overview_persistence.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/jpa_overview_persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/jpa_overview_persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_persistence.xml?ref=509f41c801b7b02d5825372620c29cf612646570","patch":"@@ -126,7 +126,7 @@ The root element of a <filename>persistence.xml</filename> file is <literal>\n persistence</literal>, which then contains one or more <literal>\n persistence-unit</literal> definitions. Each persistence unit describes the\n configuration for the entity managers created by the persistence unit's entity\n-manager factory. The persistence unit can specify these elements and attribtues.\n+manager factory. The persistence unit can specify these elements and attributes.\n         </para>\n         <itemizedlist>\n             <listitem>"},{"sha":"d6de6eccaa7be7ab57cfe4d009842bc10932952f","filename":"openjpa-project/src/doc/manual/jpa_overview_query.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/jpa_overview_query.xml","raw_url":"https://github.com/apache/openjpa/raw/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/jpa_overview_query.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_query.xml?ref=509f41c801b7b02d5825372620c29cf612646570","patch":"@@ -1585,7 +1585,7 @@ variables are case insensitive. An identification variable evaluates to a value\n of the type of the expression used in declaring the variable. For example,\n consider the previous query: <programlisting>SELECT DISTINCT mag FROM Magazine mag JOIN mag.articles art JOIN art.author auth WHERE auth.firstName = 'John'\n </programlisting> In the <literal>FROM</literal> clause declaration <literal>\n-mag.articles</literal><literal>art</literal>, the identification variable\n+mag.articles</literal> <literal>art</literal>, the identification variable\n <literal>art</literal> evaluates to any <literal>Article</literal> value\n directly reachable from <literal>Magazine</literal>. The association-field\n <literal>articles</literal> is a collection of instances of the abstract schema\n@@ -2286,7 +2286,7 @@ collection_valued_path_expression IS [NOT] EMPTY\n                 </para>\n                 <para>\n This expression tests whether or not the collection designated by the\n-collection-valued path expression is empty (i.e, has no elements).\n+collection-valued path expression is empty (i.e. has no elements).\n                 </para>\n                 <para>\n For example, the following query will return all magazines that don't have any"},{"sha":"e21ee567aab0698c939572e96c3c659a613da2b1","filename":"openjpa-project/src/doc/manual/jpa_overview_trans.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/jpa_overview_trans.xml","raw_url":"https://github.com/apache/openjpa/raw/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/jpa_overview_trans.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_trans.xml?ref=509f41c801b7b02d5825372620c29cf612646570","patch":"@@ -390,7 +390,7 @@ any exception is thrown during the commit process.\n         </para>\n         <para>\n Unless you are using an extended persistence context, committing or rolling back\n-also ends the persistence context. All managed entites will be detached from the\n+also ends the persistence context. All managed entities will be detached from the\n <classname>EntityManager</classname>.\n         </para>\n <programlisting>"},{"sha":"932ef4ca4f67bc8217b024a95924fa82c65bffaa","filename":"openjpa-project/src/doc/manual/ref_guide_conf.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/ref_guide_conf.xml","raw_url":"https://github.com/apache/openjpa/raw/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/ref_guide_conf.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_conf.xml?ref=509f41c801b7b02d5825372620c29cf612646570","patch":"@@ -2834,11 +2834,11 @@ serious problems.\n             <para>\n                 <emphasis role=\"bold\">Description:</emphasis>\n                 The RuntimeUnenhancedClasses property controls how OpenJPA \n-                handles classes that have not been enhanced byt the PCEnhancer \n-                tool or automatically by a javaagent. If RuntimeUnenhanced is \n+                handles classes that have not been enhanced by the PCEnhancer \n+                tool or automatically by a javaagent. If RuntimeUnenhancedClasses is \n                 set to <literal>supported</literal> OpenJPA will automatically \n                 create subclasses for unenhanced entity classes. If set to \n-                <literal>unsupported</literal>OpenJPA will not create subclasses \n+                <literal>unsupported</literal> OpenJPA will not create subclasses \n                 for unenhanced entity classes and will throw an exception when \n                 they are detected. If set to <literal>warn</literal> OpenJPA \n                 will not create subclasses for unenhanced entity classes "},{"sha":"7747ee1a992e0a78273b6113adb15b1d73d7920b","filename":"openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/apache/openjpa/blob/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","raw_url":"https://github.com/apache/openjpa/raw/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml?ref=509f41c801b7b02d5825372620c29cf612646570","patch":"@@ -855,7 +855,7 @@ the <literal>mappingtool</literal>.\n                     </indexterm>\n <literal>BlobBufferSize</literal>: This property establishes the buffer size in\n the <literal>INSERT/UPDATE</literal> operations with an \n-<literal>java.io.InputStream</literal>This is only used with OpenJPA's\n+<literal>java.io.InputStream</literal>. This is only used with OpenJPA's\n <xref linkend=\"ref_guide_streamsupport\"/>. Defaults to 50000.\n                     </para>\n                 </listitem>\n@@ -972,7 +972,7 @@ generated by the <literal>mappingtool</literal>.\n                     </indexterm>\n <literal>ClobBufferSize</literal>: This property establish the buffer size in \n the <literal>INSERT/UPDATE</literal> operations with a \n-<literal>java.io.Reader</literal>This is only used with OpenJPA's\n+<literal>java.io.Reader</literal>. This is only used with OpenJPA's\n <xref linkend=\"ref_guide_streamsupport\"/>. Defaults to 50000.\n                     </para>\n                 </listitem>\n@@ -2884,7 +2884,7 @@ argument.\n                             ToUpperCaseFunction\n                         </secondary>\n                     </indexterm>\n-<literal>ToUpperCaseFunction</literal>: SQL function call for for converting a\n+<literal>ToUpperCaseFunction</literal>: SQL function call for converting a\n string to upper case. Use the token <literal>{0}</literal> to represent the\n argument.\n                     </para>\n@@ -3289,7 +3289,7 @@ auto-increment support, see <xref linkend=\"ref_guide_pc_oid_pkgen_autoinc\"/>\n                     </indexterm>\n <literal>AutoAssignSequenceName</literal>: The global name of the sequence that\n OpenJPA will assume to hold the value of primary key value for rows that use\n-auto-increment. If left unset, OpenJPA will use a the sequence named <literal>\n+auto-increment. If left unset, OpenJPA will use a sequence named <literal>\n \"SEQ_&lt;table name&gt;\"</literal>.\n                     </para>\n                 </listitem>\n@@ -3336,7 +3336,7 @@ BLOB to persist with the embedded method. Defaults to 4000 bytes.\n                         </secondary>\n                     </indexterm>\n <literal>MaxEmbeddedClobSize</literal>: Oracle is unable to persist CLOBs using\n-the embedded update method when Clobs get over a certain size. The size depends\n+the embedded update method when CLOBs get over a certain size. The size depends\n on database configuration, e.g. encoding. This property defines the maximum size\n CLOB to persist with the embedded method. Defaults to 4000 characters.\n                     </para>\n@@ -3347,7 +3347,7 @@ CLOB to persist with the embedded method. Defaults to 4000 characters.\n executed against unicode capable columns (the <literal>NCHAR</literal>,\n <literal>NVARCHAR</literal>, <literal>NCLOB</literal> Oracle types) required\n special handling to be able to store unicode values. Setting this property to\n-<literal>true</literal> (the default) will cause OpenJPA to attempt to detect when the column of\n+<literal>true</literal> (the default) will cause OpenJPA to attempt to detect when the column is\n one of these types, and if so, will attempt to correctly configure the statement\n using the <methodname> OraclePreparedStatement.setFormOfUse</methodname>. For\n more details, see the Oracle\n@@ -3388,7 +3388,7 @@ properties:\n                         </secondary>\n                     </indexterm>\n <literal>IgnoreNumericTruncation</literal>: If true, Sybase will ignore numeric\n-truncation on SQL operations.  Otherwise, if numeric trunctation is detected, \n+truncation on SQL operations.  Otherwise, if numeric truncation is detected, \n the operation will fail.\n                     </para>\n                 </listitem>\n@@ -4055,7 +4055,7 @@ drivers support all types.\n                 </indexterm>\n <link linkend=\"openjpa.jdbc.FetchDirection\"><literal>\n openjpa.jdbc.FetchDirection</literal></link>: The expected order in which you\n-will access the query results. This property affects the type of datastructure\n+will access the query results. This property affects the type of data structure\n OpenJPA will use to hold the results, and is also given to the JDBC driver in\n case it can optimize for certain access patterns. This property accepts the\n following values, each of which corresponds exactly to the same-named\n@@ -4383,7 +4383,7 @@ top level of any jar in your <literal>CLASSPATH</literal>.\n             <para>\n You can switch freely between schema factories at any time. The XML file format\n used by some factories is detailed in <xref linkend=\"ref_guide_schema_xml\"/>\n-. As with any OpenJPA plugin, you can can also implement your own schema\n+. As with any OpenJPA plugin, you can also implement your own schema\n factory if you have needs not met by the existing options.\n             </para>\n         </section>"},{"sha":"5053011005850d82116a70b005cd663c958aae42","filename":"openjpa-project/src/doc/manual/ref_guide_mapping.xml","status":"modified","additions":17,"deletions":16,"changes":33,"blob_url":"https://github.com/apache/openjpa/blob/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/ref_guide_mapping.xml","raw_url":"https://github.com/apache/openjpa/raw/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/ref_guide_mapping.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_mapping.xml?ref=509f41c801b7b02d5825372620c29cf612646570","patch":"@@ -547,7 +547,8 @@ generation.\n                     </listitem>\r\n                     <listitem>\r\n                         <para>\r\n-<literal>-annotations/-ann &lt;true/t | false/f&gt;</literal>: Set to true to\r\n+<literal>-annotations/-ann &lt;true/t | false/f&gt;</literal>: Set to\r\n+<literal>true</literal> to\r\n generate JPA annotations in generated java classes.\r\n                         </para>\r\n                     </listitem>\r\n@@ -625,7 +626,7 @@ all generated classes.\n                         <para>\r\n <literal>-useBuiltinIdentityClass/-bic &lt;true/t | false/f&gt;</literal>: Set\r\n to <literal>false</literal> to prevent the tool from using built-in application\r\n-identity classes when possible. This will force the tool to to create custom\r\n+identity classes when possible. This will force the tool to create custom\r\n application identity classes even when there is only one primary key column.\r\n                         </para>\r\n                     </listitem>\r\n@@ -732,7 +733,7 @@ Your persistent classes are now ready to access your existing schema.\n             </title>\r\n             <para>\r\n The <classname>org.apache.openjpa.jdbc.meta.ReverseCustomizer</classname> plugin\r\n-interface allows you to customze the reverse mapping process. See the class\r\n+interface allows you to customize the reverse mapping process. See the class\r\n <ulink url=\"../javadoc/org/apache/openjpa/jdbc/meta/ReverseCustomizer.html\">\r\n Javadoc</ulink> for details on the hooks that this interface provides. Specify\r\n the concrete plugin implementation to use with the <literal>\r\n@@ -1118,7 +1119,7 @@ strings (see <xref linkend=\"ref_guide_conf_plugins\"/> ), without the class\n name. It is a comma-separated list of key/value pairs, where each key is a\r\n possible field type, and each value is itself a plugin string describing the\r\n strategy for that type. We present an example below. See\r\n-<xref linkend=\"ref_guide_mapping_custom_field\"/> for information on custum\r\n+<xref linkend=\"ref_guide_mapping_custom_field\"/> for information on custom\r\n field strategies.\r\n                         </para>\r\n                     </listitem>\r\n@@ -1137,8 +1138,8 @@ keys on relation columns. This is the default.\n                     </listitem>\r\n                     <listitem>\r\n                         <para>\r\n-<literal>JoinForeignKeyDeleteAction</literal>: The defualt delete action of\r\n-foreign keys that join join secondary, collection, map, or subclass tables to\r\n+<literal>JoinForeignKeyDeleteAction</literal>: The default delete action of\r\n+foreign keys that join secondary, collection, map, or subclass tables to\r\n the primary table. Accepts the same values as the <literal>\r\n ForeignKeyDeleteAction</literal> property above.\r\n                         </para>\r\n@@ -1808,7 +1809,7 @@ JPA uses the <classname>AttributeOverride</classname> annotation to override the\n default mappings of an embeddable class. The JPA Overview details this process\r\n in <xref linkend=\"jpa_overview_mapping_embed\"/>. <classname>\r\n AttributeOverride</classname>s suffice for simple mappings, but do not allow\r\n-you to override complex mappings. Also, JPA has no way to differentitate between\r\n+you to override complex mappings. Also, JPA has no way to differentiate between\r\n a null embedded object and one with default values for all of its fields.\r\n             </para>\r\n             <para>\r\n@@ -1861,7 +1862,7 @@ class to override a complex mapping of its mapped superclass, just as you can\n with <classname> AttributeOverride</classname> and <classname>\r\n AssociationOverride</classname> s. The <classname>MappingOverrides</classname>\r\n annotation, whose value is an array of <classname>MappingOverride</classname> s,\r\n-allows you to overide multiple mapped superclass mappings.\r\n+allows you to override multiple mapped superclass mappings.\r\n             </para>\r\n             <para>\r\n Each\r\n@@ -2412,7 +2413,7 @@ to discover existing foreign keys (see\n                 <para>\r\n The <ulink url=\"../javadoc/org/apache/openjpa/persistence/jdbc/Unique.html\">\r\n <classname>org.apache.openjpa.persistence.jdbc.Unique</classname></ulink>\r\n-annotation represents a unqiue constraint on the columns of a field. It is more\r\n+annotation represents a unique constraint on the columns of a field. It is more\r\n convenient than using the <literal>uniqueConstraints</literal> property of\r\n standard JPA <classname>Table</classname> and <classname>SecondaryTable\r\n </classname> annotations, because you can apply it directly to the constrained\r\n@@ -2461,7 +2462,7 @@ supported by the database.\n               </indexterm>\r\n               <para>\r\n DB2, Oracle and SQLServer support XML column types and\r\n-XPath queries and indexes over these columns.OpenJPA supports mapping of an\r\n+XPath queries and indexes over these columns. OpenJPA supports mapping of an\r\n entity property mapped to an XML column.\r\n               </para>\r\n               <para>\r\n@@ -2480,7 +2481,7 @@ The default fetch type is EAGER but can be changed to LAZY by using:\n               <para>\r\n The entity property class is required to have\r\n jaxb binding annotations.  This is produced when the classes are generated\r\n-from an xml schema using the jaxb generator XJC.Ensure that <classname>@XmlRootElement</classname>\r\n+from an XML schema using the jaxb generator XJC.Ensure that <classname>@XmlRootElement</classname>\r\n appears in the root class. In some case this annotation needs to be added manually if it is missing.\r\n               </para>\r\n               <para>\r\n@@ -2496,7 +2497,7 @@ The path expression is rewritten into an equivalent XPATH expression using SQL\n XML functions.\r\n               </para>\r\n               <para>\r\n-The path expression must be single valued.Path expressions over xml\r\n+The path expression must be single valued. Path expressions over XML\r\n mapped classes can only be used in WHERE as an operand to a simple predicate\r\n (=  &lt;&gt;  &lt;  &gt;  &gt;=  &lt;=).\r\n               </para>\r\n@@ -2527,7 +2528,7 @@ used in the FROM , GROUP BY, HAVING, ORDER BY clauses\n               </itemizedlist>\r\n               <para>\r\n XML schema must not contain namespace declarations. The EJB query path\r\n-expressions can not refer to java fields generated from XML ANY type or\r\n+expressions can not refer to Java fields generated from XML ANY type or\r\n XML mixed element types.\r\n               </para>\r\n               <para>\r\n@@ -2877,7 +2878,7 @@ import org.apache.openjpa.persistence.jdbc.*;\n \r\n @Entity\r\n @Table(name=\"AUTH\")\r\n-@DataStoreIdColumn(name=\"AID\" columnDefinition=\"INTEGER64\")\r\n+@DataStoreIdColumn(name=\"AID\", columnDefinition=\"INTEGER64\")\r\n public class Author {\r\n     ...\r\n }\r\n@@ -3233,7 +3234,7 @@ identify the record for the related object. Under some rare mappings, however,\n you may need to consider both foreign key values and the expected class of the\r\n related object - for example, if you have an inverse relation that shares the\r\n foreign key with another inverse relation to an object of a different subclass.\r\n-In these cases, set the proper class critera extension to <literal>true\r\n+In these cases, set the proper class criteria extension to <literal>true\r\n </literal> to force OpenJPA to append class criteria to its select SQL.\r\n                 </para>\r\n                 <para>\r\n@@ -3482,7 +3483,7 @@ properties in these extensions using OpenJPA's plugin format (see\n         <para>\r\n Unless you apply database foreign key constraints extensively, it is possible to\r\n end up with orphaned keys in your database. For example, suppose <classname>\r\n-Magazine</classname><literal>m</literal> has a reference to <classname>Article\r\n+Magazine</classname> <literal>m</literal> has a reference to <classname>Article\r\n </classname><literal>a</literal>. If you delete <literal>a</literal> without\r\n nulling <literal>m</literal>'s reference, <literal>m</literal>'s database\r\n record will wind up with an orphaned key to the non-existent <literal>a\r"},{"sha":"f3b1c26dbd83ed44ae5328a99bdf46b119dd2edf","filename":"openjpa-project/src/doc/manual/ref_guide_meta.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/ref_guide_meta.xml","raw_url":"https://github.com/apache/openjpa/raw/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/ref_guide_meta.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_meta.xml?ref=509f41c801b7b02d5825372620c29cf612646570","patch":"@@ -502,7 +502,7 @@ remains valid. Use -1 for no timeout. Defaults to the\n The OpenJPA <link linkend=\"ref_guide_pc_enhance\">enhancer</link> may add a\n synthetic field to detachable classes to hold detached state (see\n <xref linkend=\"ref_guide_detach_graph\"/> for details). You can instead\n-declare your own detached state field or supress the creation of a detached\n+declare your own detached state field or suppress the creation of a detached\n state field altogether. In the latter case, your class must not use\n <link linkend=\"ref_guide_pc_oid\">datastore identity</link>, and should declare\n a version field to detect optimistic concurrency errors during detached\n@@ -685,7 +685,7 @@ in <xref linkend=\"ref_guide_pc_scos_proxy_lrs\"/>.\n                 </indexterm>\n                 <para>\n This extension names the inverse field in a logical bidirectional relation.\n-To create a logical bidrectional relation in OpenJPA, use the\n+To create a logical bidirectional relation in OpenJPA, use the\n <ulink url=\"../javadoc/org/apache/openjpa/persistence/InverseLogical.html\">\n <classname>org.apache.openjpa.persistence.InverseLogical</classname></ulink>\n annotation. We discuss logical bidirectional relations and this"},{"sha":"c1e47ee0a51283ac2d2e5b9132550182720f6725","filename":"openjpa-project/src/doc/manual/ref_guide_optimization.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/ref_guide_optimization.xml","raw_url":"https://github.com/apache/openjpa/raw/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/ref_guide_optimization.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_optimization.xml?ref=509f41c801b7b02d5825372620c29cf612646570","patch":"@@ -256,7 +256,7 @@ different parts of your application.\n                         <para>\n The default setting of <literal>on-demand</literal> minimizes the amount of time\n that OpenJPA holds onto a datastore connection. This is generally the best\n-option from a scalability standpoind, as database resources are held for a\n+option from a scalability standpoint, as database resources are held for a\n minimal amount of time. However, if you are not using connection pooling, or\n if your <classname>DataSource</classname> is not efficient at managing its\n pool, then this default value could cause undesirable pool contention."},{"sha":"a2438f1ac25b9de98673093e2bdd39e6dbcfc76d","filename":"openjpa-project/src/doc/manual/ref_guide_pc.xml","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/ref_guide_pc.xml","raw_url":"https://github.com/apache/openjpa/raw/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/ref_guide_pc.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_pc.xml?ref=509f41c801b7b02d5825372620c29cf612646570","patch":"@@ -332,7 +332,7 @@ You can pass settings to the agent using OpenJPA's plugin syntax (see\n <xref linkend=\"ref_guide_conf_plugins\"/>). The agent accepts the long\n form of any of the standard configuration options\n (<xref linkend=\"ref_guide_conf_devtools\"/> ). It also accepts the following\n-options, the first three of which correspond exactly to to the same-named\n+options, the first three of which correspond exactly to the same-named\n options of the enhancer tool described in\n <xref linkend=\"ref_guide_pc_enhance_build\"/>:\n             </para>\n@@ -436,7 +436,7 @@ if you set the <literal>classLoadEnhancement</literal> javaagent flag to\n runtime enhancement process for some reason.\n                 </para></listitem>\n                 <listitem><para>\n-<emphasis>Runtime Unenhanced Classes</emphasis>: AKA statte comparison and \n+<emphasis>Runtime Unenhanced Classes</emphasis>: AKA state comparison and \n subclassing. If you are running\n in a Java 5 environment without a javaagent, or in a Java 6 environment that\n does not support class retransformation, OpenJPA will still create subclasses\n@@ -1141,7 +1141,7 @@ of type <classname>Calendar</classname>, with one exception: when using Java\n version 1.3, the <methodname>set()</methodname> method cannot be overridden, so\n when altering the calendar using that method, the field must be explicitly\n marked as dirty. This limitation does not apply when running with Java version\n-1.4 and higer.\n+1.4 and higher.\n                 </para>\n             </note>\n         </section>\n@@ -1674,7 +1674,7 @@ your field to be a persistence-capable type in order to embed it). This means\n that a field can externalize to something as simple as a primitive, something as\n complex as a collection or map of entities, or anything in\n between. If you do choose to externalize to a collection or map, OpenJPA\n-recognizes a family of metadata extensions for specying type information for the\n+recognizes a family of metadata extensions for specifying type information for the\n externalized form of your fields - see <xref linkend=\"type\"/>. If the\n external form of your field is an entity object or contains entities, OpenJPA \n will correctly include the objects in its persistence-by-reachability \n@@ -1841,7 +1841,7 @@ public class Magazine {\n             </primary>\n         </indexterm>\n         <para>\n-Fetch groups are sets of fields that load together. They can be used to to pool\n+Fetch groups are sets of fields that load together. They can be used to pool\n together associated fields in order to provide performance improvements over\n standard data fetching. Specifying fetch groups allows for tuning of lazy\n loading and eager fetching behavior."},{"sha":"85b31967d771cd926d268bbf137658810ef60a94","filename":"openjpa-project/src/doc/manual/ref_guide_remote.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/ref_guide_remote.xml","raw_url":"https://github.com/apache/openjpa/raw/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/ref_guide_remote.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_remote.xml?ref=509f41c801b7b02d5825372620c29cf612646570","patch":"@@ -130,7 +130,7 @@ ways :\n         <listitem>\n             <para>\n                 Invoke <methodname>EntityTransaction.setRollbackOnly\n-                </methodname> prior to detachingyour objects. Setting the \n+                </methodname> prior to detaching your objects. Setting the \n                 <literal>RollbackOnly</literal> flag prevents OpenJPA from \n                 flushing when detaching dirty objects; instead OpenJPA just \n                 runs its pre-flush actions (see the \n@@ -638,7 +638,7 @@ which notifications should be sent. No default value.\n                     <listitem>\n                         <para>\n <literal>NumBroadcastThreads</literal>: The number of threads to create for the\n-purpose of transmitting events to peers. You sould increase this value as the\n+purpose of transmitting events to peers. You should increase this value as the\n number of concurrent transactions increases. The maximum number of concurrent\n transactions is a function of the size of the connection pool. See the\n <literal>MaxActive</literal> property of <literal>"},{"sha":"8023f0022be0f84277ad8c05c68ab7c8c4175581","filename":"openjpa-project/src/doc/manual/ref_guide_runtime.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/ref_guide_runtime.xml","raw_url":"https://github.com/apache/openjpa/raw/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/ref_guide_runtime.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_runtime.xml?ref=509f41c801b7b02d5825372620c29cf612646570","patch":"@@ -737,7 +737,7 @@ manager does not distinguish between read locks and write locks; all locks are\n write locks.\n                     </para>\n                     <para>\n-The <literal>pessimistic</literal> LockManager can be configued to additionally\n+The <literal>pessimistic</literal> LockManager can be configured to additionally\n perform the version checking and incrementing behavior of the <literal>version\n </literal> lock manager described below by setting its <literal>\n VersionCheckOnReadLock</literal> and <literal>VersionUpdateOnWriteLock</literal>\n@@ -932,7 +932,7 @@ points in your transaction. You can then choose to rollback changes made only\n after a specific savepoint, then commit or continue making new changes in the\n transaction. This feature is useful for multi-stage transactions, such as\n editing a set of objects over several web pages or user screens. Savepoints also\n-provide more flexibilty to conditional transaction behavior, such as choosing to\n+provide more flexibility to conditional transaction behavior, such as choosing to\n commit or rollback a portion of the transaction based on the results of the\n changes. This chapter describes how to use and configure OpenJPA savepoints.\n         </para>\n@@ -1024,7 +1024,7 @@ oem.getTransaction().commit();\n OpenJPA uses the \n <ulink url=\"../javadoc/org/apache/openjpa/kernel/SavepointManager\">\n <classname>org.apache.openjpa.kernel.SavepointManager</classname></ulink>\n-<link linkend=\"ref_guide_conf_plugins\">plugin</link> to handle perserving the\n+<link linkend=\"ref_guide_conf_plugins\">plugin</link> to handle preserving the\n savepoint state. OpenJPA includes the following <classname>SavepointManager\n </classname> plugins:\n             </para>"},{"sha":"b910fa09535441391eb5529853bd598e3513175f","filename":"openjpa-project/src/doc/manual/ref_guide_slice.xml","status":"modified","additions":14,"deletions":14,"changes":28,"blob_url":"https://github.com/apache/openjpa/blob/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/ref_guide_slice.xml","raw_url":"https://github.com/apache/openjpa/raw/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/ref_guide_slice.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_slice.xml?ref=509f41c801b7b02d5825372620c29cf612646570","patch":"@@ -58,18 +58,18 @@\n          <section><title>Transparency</title>\r\n             <para>\r\n \t\t\t  The primary design objective for Slice is to make the user \r\n-\t\t\t  application transparent to the change in storage stratgey where \r\n+\t\t\t  application transparent to the change in storage strategy where \r\n \t\t\t  data resides in multiple (possibly heterogeneous) databases instead\r\n \t\t\t  of a single database. Slice achieves this transparency by \r\n \t\t\t  virtualization of multiple databases as a single database such \r\n-\t\t\t  that OpenJPA object management kernel continues to intract in\r\n+\t\t\t  that OpenJPA object management kernel continues to interact in\r\n \t\t\t  exactly the same manner with storage layer. Similarly, \r\n               the existing application or the persistent domain model requires \r\n               <emphasis>no change</emphasis> to upgrade from a single database \r\n               to a distributed database environment. \r\n             </para>\r\n \t\t\t<para>\r\n-\t\t\t  An existing application developed for a single databse can be \r\n+\t\t\t  An existing application developed for a single database can be \r\n \t\t\t  adapted to work with multiple databases purely by configuring\r\n \t\t\t  a persistence unit via <classname>META-INF/persistence.xml</classname>. \r\n \t\t\t</para>\r\n@@ -89,7 +89,7 @@\n \t\t\twhere the data is naturally amenable to horizontal partitions, \r\n \t\t\tfor example, by temporal interval (e.g. Purchase Orders per month) \r\n \t\t\tor by geographical regions (e.g. Customer by Zip Code) can derive\r\n-\t\t\tsingnificant performance benefit and favorable scaling behavior by \r\n+\t\t\tsignificant performance benefit and favorable scaling behavior by \r\n \t\t\tusing Slice.     \r\n \t\t\t</para>\r\n \t\t</section>\r\n@@ -109,9 +109,9 @@\n             </para>\r\n          \r\n             <para>\r\n-            By deafult, any query is executed against all available slices. \r\n+            By default, any query is executed against all available slices. \r\n \t\t\tHowever, the application can target the query only to a subset of \r\n-\t\t\tslices vy setting <emphasis>hint</emphasis> on <classname>javax.persistence.Query</classname>. \r\n+\t\t\tslices by setting <emphasis>hint</emphasis> on <classname>javax.persistence.Query</classname>. \r\n \t\t\tThe hint key is  <classname>openjpa.hint.slice.Target</classname> and \r\n             hint value is a comma-separated list of slice identifiers. The following \r\n             example shows how to target a query only to a pair of slices \r\n@@ -124,7 +124,7 @@\n               Query query = em.createQuery(\"SELECT p FROM PObject\")\r\n \t\t\t\t              .setHint(hint, \"One, Two\");\r\n               List result = query.getResultList();\r\n-              // verify that each instance is originaing from the hinted slices\r\n+              // verify that each instance is originating from the hinted slices\r\n               for (Object pc : result) {\r\n                  String sliceOrigin = SlicePersistence.getSlice(pc);\r\n                  assertTrue (\"One\".equals(sliceOrigin) || \"Two\".equals(sliceOrigin));\r\n@@ -167,7 +167,7 @@\n \t\t\t \r\n \t\t <para>\r\n \t\t\t Slice runtime invokes this user-supplied method for the newly\r\n-\t\t\t persistent instance that are explict argument of the \r\n+\t\t\t persistent instance that is explicit argument of the \r\n \t\t\t <classname>javax.persistence.EntityManager.persist(Object pc)</classname>\r\n \t\t\t method. The user application must return a valid slice name from\r\n \t\t\t this method to designate the target slice for the given instance.\r\n@@ -183,7 +183,7 @@\n              \r\n \t\t<para>\r\n \t\t\tThe user application needs to specify the target slice <emphasis>only</emphasis>\r\n-\t\t\tfor the <emphasis>root</emphasis> instance i.e. the explict argument for the\r\n+\t\t\tfor the <emphasis>root</emphasis> instance i.e. the explicit argument for the\r\n \t\t\t<classname>EntityManager.persist(Object pc)</classname> method. Slice computes\r\n \t\t\tthe transitive closure of the graph i.e. the set of all instances \r\n \t\t\tdirectly or indirectly reachable from the root instance and stores\r\n@@ -270,7 +270,7 @@\n             No relationship can exist across database slices. In O-R mapping parlance,\r\n             this condition translates to the limitation that the transitive closure of an object graph must be \r\n             <emphasis>collocated</emphasis> in the same database.\r\n-            For example, consider a domain model where Person relates to Adress.\r\n+            For example, consider a domain model where Person relates to Address.\r\n             Person X refers to Address A while Person Y refers to Address B. \r\n             Collocation Constraint means that <emphasis>both</emphasis> X and A \r\n             must be stored in the same\r\n@@ -431,7 +431,7 @@ public interface DistributionPolicy {\n \t\t<para>\r\n \t\t\tThe entities that are annotated with <classname>@Replicated</classname> \r\n \t\t\tannotation can be stored in multiple slices as identical copies.\r\n-        Specify the implementation class of <classname>ReplicationPolicy</classname>in configuration as\r\n+        Specify the implementation class of <classname>ReplicationPolicy</classname> in configuration as\r\n         <programlisting> \r\n          <![CDATA[ <property name=\"openjpa.slice.ReplicationPolicy\" value=\"com.acme.foo.MyReplicationPolicy\"/>]]>\r\n         </programlisting>\r\n@@ -485,14 +485,14 @@ the JDBC connection URL of a slice.\n \t\t <para>\r\n \t\t\t The user application often directs OpenJPA to generate primary keys \r\n \t\t\t for persistence instances automatically or from a specific database \r\n-\t\t\t sequence. For such primary key value generation startegy where \r\n+\t\t\t sequence. For such primary key value generation strategy where \r\n \t\t\t a database instance is required, Slice uses a designated slice \r\n \t\t\t referred as <emphasis>master</emphasis> slice. \r\n \t\t </para>\r\n          <para>\r\n-\t\t\t The master slice can be specified explictly via \r\n+\t\t\t The master slice can be specified explicitly via \r\n \t\t\t <classname>openjpa.slice.Master</classname> property and whose value is one\r\n-\t\t\t of the configured slice name. If this property is not explictly\r\n+\t\t\t of the configured slice names. If this property is not explicitly\r\n \t\t\t specified then, by default, the master slice is the first slice \r\n \t\t\t in the list of configured slice names. \r\n        </para>\r"},{"sha":"eac3f4baa3d6b1150174f7813e955e8ba75dace5","filename":"openjpa-project/src/doc/manual/supported_databases.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/supported_databases.xml","raw_url":"https://github.com/apache/openjpa/raw/509f41c801b7b02d5825372620c29cf612646570/openjpa-project/src/doc/manual/supported_databases.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/supported_databases.xml?ref=509f41c801b7b02d5825372620c29cf612646570","patch":"@@ -1002,7 +1002,7 @@ primary key field is manually added to the table.\n                 <listitem>\n                     <para>\n Persisting a zero-length string results in a string with a single space\n-characted being returned from Sybase, Inc.'s JDBC driver.\n+character being returned from Sybase, Inc.'s JDBC driver.\n                     </para>\n                 </listitem>\n                 <listitem>\n@@ -1016,11 +1016,11 @@ procedure.</literal> \".\n                 </listitem>\n                 <listitem>\n                     <para> \n-Applications performing update/insert data of the BigDecimal java type may fail \n+Applications performing update/insert data of the BigDecimal Java type may fail \n with OptimisticException if the data exceeds the scale or precision of the\n column on Sybase. To avoid this problem, applications can specify the precision\n and scale for the numeric type by setting numericTypeName='NUMERIC(p,s)' for\n-the column type mapped by the BigDecimal java type. See\n+the column type mapped by the BigDecimal Java type. See\n <link linkend=\"openjpa.jdbc.DBDictionary\">openjpa.jdbc.DBDictionary</link> for\n more detail. Alternatively, application can set the precision and scale using\n the standard <classname>Column</classname> annotation, described in"}]}

