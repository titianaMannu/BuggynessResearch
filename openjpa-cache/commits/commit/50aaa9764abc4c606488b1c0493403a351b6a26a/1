{"sha":"50aaa9764abc4c606488b1c0493403a351b6a26a","node_id":"MDY6Q29tbWl0MjA2MzY0OjUwYWFhOTc2NGFiYzRjNjA2NDg4YjFjMDQ5MzQwM2EzNTFiNmEyNmE=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2008-07-02T20:00:49Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2008-07-02T20:00:49Z"},"message":"OPENJPA-647: Simple edit for 80-column format rule\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@673479 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"91b203205aae918afc818e77fe5e7841ef410043","url":"https://api.github.com/repos/apache/openjpa/git/trees/91b203205aae918afc818e77fe5e7841ef410043"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/50aaa9764abc4c606488b1c0493403a351b6a26a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/50aaa9764abc4c606488b1c0493403a351b6a26a","html_url":"https://github.com/apache/openjpa/commit/50aaa9764abc4c606488b1c0493403a351b6a26a","comments_url":"https://api.github.com/repos/apache/openjpa/commits/50aaa9764abc4c606488b1c0493403a351b6a26a/comments","author":null,"committer":null,"parents":[{"sha":"1ad09239b378a4c495a8a35cd61cda8b807b22d0","url":"https://api.github.com/repos/apache/openjpa/commits/1ad09239b378a4c495a8a35cd61cda8b807b22d0","html_url":"https://github.com/apache/openjpa/commit/1ad09239b378a4c495a8a35cd61cda8b807b22d0"}],"stats":{"total":5,"additions":4,"deletions":1},"files":[{"sha":"e8949649b227480a0747662fc315531c3ccb5fdf","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/conf/TestDynamicConfiguration.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/50aaa9764abc4c606488b1c0493403a351b6a26a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/conf/TestDynamicConfiguration.java","raw_url":"https://github.com/apache/openjpa/raw/50aaa9764abc4c606488b1c0493403a351b6a26a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/conf/TestDynamicConfiguration.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/conf/TestDynamicConfiguration.java?ref=50aaa9764abc4c606488b1c0493403a351b6a26a","patch":"@@ -113,14 +113,17 @@ public void testDynamicChangeDoesNotChangeHashCode() {\n \t\r\n \tpublic void testClassMetaDataRecognizesDataCacheTimeoutValueChange() {\r\n \t\tOpenJPAConfiguration conf = emf.getConfiguration();\r\n+\t\t\r\n+\t\t// ensure that PObject is in metadata repository\r\n \t\tEntityManager em = emf.createEntityManager();\r\n \t\tem.getTransaction().begin();\r\n \t\tPObject pc = new PObject();\r\n \t\tem.persist(pc);\r\n \t\t\r\n \t\tint oldValue = conf.getDataCacheTimeout();\r\n \t\t\r\n-\t\tClassMetaData meta = conf.getMetaDataRepositoryInstance().getCachedMetaData(PObject.class);\r\n+\t\tClassMetaData meta = conf.getMetaDataRepositoryInstance()\r\n+\t\t\t.getCachedMetaData(PObject.class);\r\n \t\tassertNotNull(meta);\r\n \t\tassertEquals(oldValue, meta.getDataCacheTimeout());\r\n \t\t\r"}]}

