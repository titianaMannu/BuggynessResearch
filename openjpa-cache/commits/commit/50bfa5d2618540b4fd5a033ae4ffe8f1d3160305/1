{"sha":"50bfa5d2618540b4fd5a033ae4ffe8f1d3160305","node_id":"MDY6Q29tbWl0MjA2MzY0OjUwYmZhNWQyNjE4NTQwYjRmZDVhMDMzYWU0ZmZlOGYxZDMxNjAzMDU=","commit":{"author":{"name":"Jeremy Bauer","email":"jrbauer@apache.org","date":"2011-05-26T17:52:23Z"},"committer":{"name":"Jeremy Bauer","email":"jrbauer@apache.org","date":"2011-05-26T17:52:23Z"},"message":"OPENJPA-2007 jUnit for fetch plan isolation query hint validation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1128005 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"96234945278d17850ae1a3219622d0d908655cd2","url":"https://api.github.com/repos/apache/openjpa/git/trees/96234945278d17850ae1a3219622d0d908655cd2"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/50bfa5d2618540b4fd5a033ae4ffe8f1d3160305","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/50bfa5d2618540b4fd5a033ae4ffe8f1d3160305","html_url":"https://github.com/apache/openjpa/commit/50bfa5d2618540b4fd5a033ae4ffe8f1d3160305","comments_url":"https://api.github.com/repos/apache/openjpa/commits/50bfa5d2618540b4fd5a033ae4ffe8f1d3160305/comments","author":null,"committer":null,"parents":[{"sha":"dcf90c68eb5796aba5299aaee498953fa4340fec","url":"https://api.github.com/repos/apache/openjpa/commits/dcf90c68eb5796aba5299aaee498953fa4340fec","html_url":"https://github.com/apache/openjpa/commit/dcf90c68eb5796aba5299aaee498953fa4340fec"}],"stats":{"total":25,"additions":21,"deletions":4},"files":[{"sha":"b83ca2ff31d129d82051c8ca7921b71c0cc4a361","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/conf/TestQueryHints.java","status":"modified","additions":21,"deletions":4,"changes":25,"blob_url":"https://github.com/apache/openjpa/blob/50bfa5d2618540b4fd5a033ae4ffe8f1d3160305/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/conf/TestQueryHints.java","raw_url":"https://github.com/apache/openjpa/raw/50bfa5d2618540b4fd5a033ae4ffe8f1d3160305/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/conf/TestQueryHints.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/conf/TestQueryHints.java?ref=50bfa5d2618540b4fd5a033ae4ffe8f1d3160305","patch":"@@ -24,9 +24,10 @@\n import org.apache.openjpa.jdbc.sql.MySQLDictionary;\n import org.apache.openjpa.jdbc.sql.OracleDictionary;\n import org.apache.openjpa.kernel.QueryHints;\n-import org.apache.openjpa.persistence.HintHandler;\n import org.apache.openjpa.persistence.OpenJPAPersistence;\n import org.apache.openjpa.persistence.OpenJPAQuery;\n+import org.apache.openjpa.persistence.jdbc.IsolationLevel;\n+import org.apache.openjpa.persistence.jdbc.JDBCFetchPlan;\n import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n \n /**\n@@ -38,7 +39,7 @@\n  */\n public class TestQueryHints extends SingleEMFTestCase {\n     EntityManager em;\n-    OpenJPAQuery query;\n+    OpenJPAQuery<?> query;\n     \n     public void setUp() {\n        super.setUp((Object[])null);\n@@ -140,8 +141,6 @@ public void testSupportedKeyBooleanValueConversion() {\n         goodValue = \"false\";\n         query.setHint(supportedKey, goodValue);\n         assertTrue(query.getHints().containsKey(supportedKey));\n-        assertEquals(false, query.getFetchPlan().getDelegate().getHint(\n-                supportedKey));\n     }\n     \n     public void testJPAHintSetsFetchPlan() {\n@@ -169,6 +168,24 @@ public void testInvalidQueryTimeoutHint() {\n         }\n     }\n     \n+    /**\n+     * Verifies a valid fetchplan isolation level hint can be set and retrieved.\n+     */\n+    public void testFetchPlanIsolation() {\n+        query.setHint(\"openjpa.FetchPlan.Isolation\", \"SERIALIZABLE\");\n+        assertTrue(query.getHints().containsKey(\"openjpa.FetchPlan.Isolation\"));\n+        assertEquals(IsolationLevel.SERIALIZABLE, ((JDBCFetchPlan)query.getFetchPlan()).getIsolation());\n+    }\n+\n+    /**\n+     * Verifies an invalid fetchplan isolation level hint is ignored.\n+     */\n+    public void testInvalidFetchPlanIsolation() {\n+        query.setHint(\"openjpa.FetchPlan.TransactionIsolation\", \"SERIALIZABLE\");\n+        assertFalse(query.getHints().containsKey(\"openjpa.FetchPlan.TransactionIsolation\"));\n+        assertNotEquals(IsolationLevel.SERIALIZABLE, ((JDBCFetchPlan)query.getFetchPlan()).getIsolation());        \n+    }\n+\n     void assertSupportedHint(String hint, boolean contains) {\n         if (contains)\n             assertTrue(\"Expected supported hint [\" + hint + \"]\","}]}

