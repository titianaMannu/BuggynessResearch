{"sha":"515756b8237353b07d8fa617dc9d6f797ffddf6a","node_id":"MDY6Q29tbWl0MjA2MzY0OjUxNTc1NmI4MjM3MzUzYjA3ZDhmYTYxN2RjOWQ2Zjc5N2ZmZGRmNmE=","commit":{"author":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2021-04-04T13:11:28Z"},"committer":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2021-04-04T13:11:28Z"},"message":"OPENJPA-2648 map long to BIGINT","tree":{"sha":"1fd7c9f44d3d8d5b7c850050ff17b4c40bfdd4d8","url":"https://api.github.com/repos/apache/openjpa/git/trees/1fd7c9f44d3d8d5b7c850050ff17b4c40bfdd4d8"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/515756b8237353b07d8fa617dc9d6f797ffddf6a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/515756b8237353b07d8fa617dc9d6f797ffddf6a","html_url":"https://github.com/apache/openjpa/commit/515756b8237353b07d8fa617dc9d6f797ffddf6a","comments_url":"https://api.github.com/repos/apache/openjpa/commits/515756b8237353b07d8fa617dc9d6f797ffddf6a/comments","author":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"committer":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"parents":[{"sha":"1c30090c8c611843860ff83be862e22cbcf46cee","url":"https://api.github.com/repos/apache/openjpa/commits/1c30090c8c611843860ff83be862e22cbcf46cee","html_url":"https://github.com/apache/openjpa/commit/1c30090c8c611843860ff83be862e22cbcf46cee"}],"stats":{"total":11,"additions":0,"deletions":11},"files":[{"sha":"a3e333249fb512f074700c703ee7bca05f2c970f","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/HSQLDictionary.java","status":"modified","additions":0,"deletions":11,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/515756b8237353b07d8fa617dc9d6f797ffddf6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/HSQLDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/515756b8237353b07d8fa617dc9d6f797ffddf6a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/HSQLDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/HSQLDictionary.java?ref=515756b8237353b07d8fa617dc9d6f797ffddf6a","patch":"@@ -161,17 +161,6 @@ protected void determineHSQLDBVersion(Connection con) throws SQLException {\n         }\n     }\n \n-    @Override\n-    public int getJDBCType(int metaTypeCode, boolean lob) {\n-        int type = super.getJDBCType(metaTypeCode, lob);\n-        switch (type) {\n-            case Types.BIGINT:\n-                if (metaTypeCode == JavaTypes.BIGINTEGER)\n-                    return Types.NUMERIC;\n-                break;\n-        }\n-        return type;\n-    }\n \n     @Override\n     public int getPreferredType(int type) {"}]}

