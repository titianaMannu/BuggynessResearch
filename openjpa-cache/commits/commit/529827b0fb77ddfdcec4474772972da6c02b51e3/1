{"sha":"529827b0fb77ddfdcec4474772972da6c02b51e3","node_id":"MDY6Q29tbWl0MjA2MzY0OjUyOTgyN2IwZmI3N2RkZmRjZWM0NDc0NzcyOTcyZGE2YzAyYjUxZTM=","commit":{"author":{"name":"Heath Thomann","email":"hthomann@apache.org","date":"2011-08-09T13:30:29Z"},"committer":{"name":"Heath Thomann","email":"hthomann@apache.org","date":"2011-08-09T13:30:29Z"},"message":"OPENJPA-1376: Added property for forward compatibility, documented property and migration considerations.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1155358 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"3be28ee7a1456d1d53412a5b47337a1e8819299a","url":"https://api.github.com/repos/apache/openjpa/git/trees/3be28ee7a1456d1d53412a5b47337a1e8819299a"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/529827b0fb77ddfdcec4474772972da6c02b51e3","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/529827b0fb77ddfdcec4474772972da6c02b51e3","html_url":"https://github.com/apache/openjpa/commit/529827b0fb77ddfdcec4474772972da6c02b51e3","comments_url":"https://api.github.com/repos/apache/openjpa/commits/529827b0fb77ddfdcec4474772972da6c02b51e3/comments","author":null,"committer":null,"parents":[{"sha":"8a7ef392f3827e8d519b1076fd4d8f6c012420c4","url":"https://api.github.com/repos/apache/openjpa/commits/8a7ef392f3827e8d519b1076fd4d8f6c012420c4","html_url":"https://github.com/apache/openjpa/commit/8a7ef392f3827e8d519b1076fd4d8f6c012420c4"}],"stats":{"total":72,"additions":72,"deletions":0},"files":[{"sha":"dc4270877169b9f876f7ef433a51f4113c7c6655","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","status":"modified","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/apache/openjpa/blob/529827b0fb77ddfdcec4474772972da6c02b51e3/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/529827b0fb77ddfdcec4474772972da6c02b51e3/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java?ref=529827b0fb77ddfdcec4474772972da6c02b51e3","patch":"@@ -351,6 +351,26 @@\n     public String sequenceNameSQL = null;\n     // most native sequences can be run inside the business transaction\n     public int nativeSequenceType= Seq.TYPE_CONTIGUOUS;\n+    \n+    /**\n+     * This variable was used in 2.1.x and prior releases to indicate that \n+     * OpenJPA should not use the CACHE clause when getting a native \n+     * sequence; instead the INCREMENT BY clause gets its value equal to the \n+     * allocationSize property.  Post 2.1.x, code was added to allow\n+     * said functionality by default (see OPENJPA-1376).  For forward \n+     * compatibility, this variable should not be removed.\n+     */\n+    @Deprecated\n+    public boolean useNativeSequenceCache = true;    \n+    \n+    /**\n+     * If a user sets the previous variable (useNativeSequenceCache) to false, we should log a\n+     * warning indicating that the variable no longer has an effect due to the code changes\n+     * of OPENJPA-1376.  We only want to log the warning once per instance, thus this\n+     * variable will be used to indicate if the warning should be printed or not.  \n+     */\n+    @Deprecated\n+    private boolean logNativeSequenceCacheWarning = true;    \n \n     protected JDBCConfiguration conf = null;\n     protected Log log = null;\n@@ -3388,6 +3408,19 @@ protected StringBuilder comment(StringBuilder buf, String comment) {\n     public String[] getCreateSequenceSQL(Sequence seq) {\n         if (nextSequenceQuery == null)\n             return null;\n+        \n+    \t//We need a place to detect if the user is setting the 'useNativeSequenceCache' property.\n+    \t//While in previous releases this property had meaning, it is no longer useful\n+    \t//given the code added via OPENJPA-1327.  As such, we need to warn user's the\n+    \t//property no longer has meaning.  While it would be nice to have a better way\n+    \t//to detect if the useNativeSequenceCache property has been set, the best we can do\n+    \t//is detect the variable in this code path as this is the path a user's code\n+    \t//would go down if they are still executing code which actually made use of\n+    \t//the support provided via setting useNativeSequenceCache.\n+    \tif (!useNativeSequenceCache && logNativeSequenceCacheWarning){\n+    \t\tlog.warn(_loc.get(\"sequence-cache-warning\"));\n+    \t\tlogNativeSequenceCacheWarning=false;\n+    \t}        \n \n         StringBuilder buf = new StringBuilder();\n         buf.append(\"CREATE SEQUENCE \");"},{"sha":"d61480c420db9893350eb7cf22752039dfcb49a8","filename":"openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/localizer.properties","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/529827b0fb77ddfdcec4474772972da6c02b51e3/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/529827b0fb77ddfdcec4474772972da6c02b51e3/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/localizer.properties?ref=529827b0fb77ddfdcec4474772972da6c02b51e3","patch":"@@ -224,3 +224,7 @@ invalid-locking-mode: Invalid locking mode for SolidDB: \"{0}\"\n oracle-set-clob-warning: Setting the supportsSetClob property on the OracleDictionary no longer has an \\\n     effect.  Code has been added to allow, by default, the functionality provided in previous releases \\\n     via the supportsSetClob property.\n+sequence-cache-warning: Setting the useNativeSequenceCache property on the DBDictionary no longer has an \\\n+    effect.  Code has been added to allow, by default, the functionality provided in previous releases \\\n+    via the useNativeSequenceCache property.\n+    "},{"sha":"22d609cb702b1dd15639027c7e8bf20dcbb0bcae","filename":"openjpa-project/src/doc/manual/migration_considerations.xml","status":"modified","additions":14,"deletions":0,"changes":14,"blob_url":"https://github.com/apache/openjpa/blob/529827b0fb77ddfdcec4474772972da6c02b51e3/openjpa-project/src/doc/manual/migration_considerations.xml","raw_url":"https://github.com/apache/openjpa/raw/529827b0fb77ddfdcec4474772972da6c02b51e3/openjpa-project/src/doc/manual/migration_considerations.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/migration_considerations.xml?ref=529827b0fb77ddfdcec4474772972da6c02b51e3","patch":"@@ -444,6 +444,20 @@\n                     has no effect in 2.1.x and later releases and any occurrence of it should be removed.\n                 </para>\n             </section>            \n+            <section id=\"UseNativeSequenceCache\">\n+                <title>\n+                    useNativeSequenceCache property.  \n+                </title>\n+                <!-- See OPENJPA-1376 for details. -->\n+                <para>\n+                    In the OpenJPA 2.2.x release, code was added which changed the way sequences were generated, please see \n+                    <xref linkend=\"jpa_2.2_allocationSize\"/> for details.  This functionality was eventually back ported \n+                    to previous releases, and enabeld by the useNativeSequenceCache property on the DBDictionary.  Setting this property \n+                    has no effect in 2.2.x and later releases and any occurrence of it should be removed.  If previous behavior is\n+                    desired (i.e. useNativeSequenceCache=true), please see the details described in section \n+                    <xref linkend=\"jpa_2.2_allocationSize\"/>.\n+                </para>\n+            </section>            \n         </section>\n     </section>\n </appendix>"},{"sha":"f6a9232a48f0c99470af8670e55ef110dd948a92","filename":"openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","status":"modified","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/apache/openjpa/blob/529827b0fb77ddfdcec4474772972da6c02b51e3/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","raw_url":"https://github.com/apache/openjpa/raw/529827b0fb77ddfdcec4474772972da6c02b51e3/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml?ref=529827b0fb77ddfdcec4474772972da6c02b51e3","patch":"@@ -3419,6 +3419,27 @@ ResultSet.getString</methodname> will be used to obtain clob data rather than\n                             UseSchemaName\n                         </secondary>\n                     </indexterm>\n+<literal>UseNativeSequenceCache</literal>: This property was used in \n+2.1.x and prior releases to indicate (when set to false) that OpenJPA \n+should not use the CACHE clause when getting a native sequence; instead \n+the INCREMENT BY clause gets its value equal to the allocationSize \n+property.  Post 2.1.x, code was added to allow said functionality by \n+default (see OPENJPA-1376).  \n+For forward compatibility, this property still remains, however it has \n+been deprecated and will eventually be removed.  Setting this property \n+has no effect and any occurrence of it should be removed.\n+                    </para>\n+                </listitem>\n+                <listitem id=\"DBDictionary.UseNativeSequenceCache\">\n+                    <para>\n+                    <indexterm>\n+                        <primary>\n+                            Sequence\n+                        </primary>\n+                        <secondary>\n+                            UseNativeSequenceCache\n+                        </secondary>\n+                    </indexterm>\n <literal>UseSchemaName</literal>: If <literal>false</literal>, then avoid\n including the schema name in table name references. Defaults to <literal>true\n </literal>."}]}

