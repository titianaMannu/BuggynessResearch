{"sha":"529bd3a876723a7af1f09aeb2ddf082708c2c841","node_id":"MDY6Q29tbWl0MjA2MzY0OjUyOWJkM2E4NzY3MjNhN2FmMWYwOWFlYjJkZGYwODI3MDhjMmM4NDE=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-09-30T15:47:45Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-09-30T15:47:45Z"},"message":"OPENJPA-1276: Compound selection, JOIN clause rendering\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@820307 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"796852a21f10b70ed9c78416d172863e7eb683e7","url":"https://api.github.com/repos/apache/openjpa/git/trees/796852a21f10b70ed9c78416d172863e7eb683e7"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/529bd3a876723a7af1f09aeb2ddf082708c2c841","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/529bd3a876723a7af1f09aeb2ddf082708c2c841","html_url":"https://github.com/apache/openjpa/commit/529bd3a876723a7af1f09aeb2ddf082708c2c841","comments_url":"https://api.github.com/repos/apache/openjpa/commits/529bd3a876723a7af1f09aeb2ddf082708c2c841/comments","author":null,"committer":null,"parents":[{"sha":"c06481b4527a8e6903ebe62df9c040171435fbf5","url":"https://api.github.com/repos/apache/openjpa/commits/c06481b4527a8e6903ebe62df9c040171435fbf5","html_url":"https://github.com/apache/openjpa/commit/c06481b4527a8e6903ebe62df9c040171435fbf5"}],"stats":{"total":31,"additions":20,"deletions":11},"files":[{"sha":"2de619370550e457c413e23c38a9e30163332489","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/CompoundSelections.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/529bd3a876723a7af1f09aeb2ddf082708c2c841/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/CompoundSelections.java","raw_url":"https://github.com/apache/openjpa/raw/529bd3a876723a7af1f09aeb2ddf082708c2c841/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/CompoundSelections.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/CompoundSelections.java?ref=529bd3a876723a7af1f09aeb2ddf082708c2c841","patch":"@@ -103,6 +103,17 @@ public StringBuilder asValue(AliasContext q) {\n             }\n             return buffer;\n         }\n+        \n+        @Override\n+        public StringBuilder asProjection(AliasContext q) {\n+            StringBuilder buffer = new StringBuilder();\n+            for (int i = 0; i < _args.size(); i++) {\n+                buffer.append((((CriteriaExpression)_args.get(i)).asProjection(q)));\n+                if (i+1 != _args.size())\n+                    buffer.append(\", \");\n+            }\n+            return buffer;\n+        }\n     }\n     \n     /**"},{"sha":"00e9623f3781e3312ffb73e79737313bea12ce20","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/CriteriaQueryImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/529bd3a876723a7af1f09aeb2ddf082708c2c841/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/CriteriaQueryImpl.java","raw_url":"https://github.com/apache/openjpa/raw/529bd3a876723a7af1f09aeb2ddf082708c2c841/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/CriteriaQueryImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/CriteriaQueryImpl.java?ref=529bd3a876723a7af1f09aeb2ddf082708c2c841","patch":"@@ -681,7 +681,7 @@ void render(StringBuilder buffer, Set<Root<?>> roots, List<Join<?,?>> correlated\n     private void renderJoins(StringBuilder buffer, Collection<Join<?,?>> joins) {\n         if (joins == null) return;\n         for (Join j : joins) {\n-            buffer.append(((ExpressionImpl<?>)j).asVariable(this)).append(\" \");\n+            buffer.append(((CriteriaExpression)j).asVariable(this)).append(\" \");\n             renderJoins(buffer, j.getJoins());\n             renderFetches(buffer, j.getFetches());\n         }"},{"sha":"827b55f0e3d9949f1317be57fa343b98b0210103","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/Joins.java","status":"modified","additions":7,"deletions":9,"changes":16,"blob_url":"https://github.com/apache/openjpa/blob/529bd3a876723a7af1f09aeb2ddf082708c2c841/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/Joins.java","raw_url":"https://github.com/apache/openjpa/raw/529bd3a876723a7af1f09aeb2ddf082708c2c841/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/Joins.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/Joins.java?ref=529bd3a876723a7af1f09aeb2ddf082708c2c841","patch":"@@ -249,14 +249,7 @@ public void setImplicitContainsTypes(Value val1, Value val2, int op) {\n         \n         @Override\n         public StringBuilder asVariable(AliasContext q) {\n-            String varName = \"?\";\n-            Value var = q.getRegisteredVariable(this);\n-            if (var == null) {\n-                varName = \"\"+_member.fmd.getName().charAt(0);\n-            } else {\n-                varName = var.getName();\n-            }\n-            return new StringBuilder(\" \" + joinType + \" JOIN \").append(super.asVariable(q)).append(\" \" + varName);\n+            return new StringBuilder(\" \" + joinType + \" JOIN \").append(super.asVariable(q));\n         }\n     }\n     \n@@ -432,6 +425,11 @@ private Value getVariableForCorrPath(SubqueryImpl<?> subquery, PathImpl<?,?> pat\n                 return var;\n             return getVariableForCorrPath((SubqueryImpl<?>)parent, path);\n         }\n+        \n+        @Override\n+        public StringBuilder asVariable(AliasContext q) {\n+            return new StringBuilder(\" \" + joinType + \" JOIN \").append(super.asVariable(q));\n+        }\n     }\n     \n     /**\n@@ -441,7 +439,7 @@ private Value getVariableForCorrPath(SubqueryImpl<?> subquery, PathImpl<?,?> pat\n      * @param <E> the type of the the collection attribute elements\n      */\n     static class Collection<Z,E> extends AbstractCollection<Z,java.util.Collection<E>,E> \n-        implements CollectionJoin<Z,E>{\n+        implements CollectionJoin<Z,E> {\n         public Collection(FromImpl<?,Z> parent, Members.CollectionAttributeImpl<? super Z, E> member, JoinType jt) {\n             super(parent, member, jt);\n         }"},{"sha":"6a4fada87ff5a35d2030ae0bf1e06bde172179e1","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/SelectionImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/529bd3a876723a7af1f09aeb2ddf082708c2c841/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/SelectionImpl.java","raw_url":"https://github.com/apache/openjpa/raw/529bd3a876723a7af1f09aeb2ddf082708c2c841/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/SelectionImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/SelectionImpl.java?ref=529bd3a876723a7af1f09aeb2ddf082708c2c841","patch":"@@ -139,7 +139,7 @@ public StringBuilder asVariable(AliasContext q) {\n         throw new IllegalStateException(this.getClass().getSimpleName() + \" can not be rendered as variable\");\n     }\n     \n-    public final StringBuilder asProjection(AliasContext q) {\n+    public StringBuilder asProjection(AliasContext q) {\n         String as = (isAutoAliased() ? \"\" : \" AS \" + getAlias());\n         return asValue(q).append(as);\n     }"}]}

