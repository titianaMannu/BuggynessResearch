{"sha":"52d7ab797565c7b182a87128eb0a484a7e9237a7","node_id":"MDY6Q29tbWl0MjA2MzY0OjUyZDdhYjc5NzU2NWM3YjE4MmE4NzEyOGViMGE0ODRhN2U5MjM3YTc=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-08-21T05:26:15Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-08-21T05:26:15Z"},"message":"OPENJPA-321. Avoiding JDK1.5-specific String.replace() call. Also changed the method to return a well-balanced SQL, since it looks like the only usage is in a place where well-balanced-ness is possible.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@567962 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"69a2491ee15f813606b5dd41e6902ce6e7ed894a","url":"https://api.github.com/repos/apache/openjpa/git/trees/69a2491ee15f813606b5dd41e6902ce6e7ed894a"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/52d7ab797565c7b182a87128eb0a484a7e9237a7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/52d7ab797565c7b182a87128eb0a484a7e9237a7","html_url":"https://github.com/apache/openjpa/commit/52d7ab797565c7b182a87128eb0a484a7e9237a7","comments_url":"https://api.github.com/repos/apache/openjpa/commits/52d7ab797565c7b182a87128eb0a484a7e9237a7/comments","author":null,"committer":null,"parents":[{"sha":"eaeebf20c7e89466748e4c872a6c15a732351382","url":"https://api.github.com/repos/apache/openjpa/commits/eaeebf20c7e89466748e4c872a6c15a732351382","html_url":"https://github.com/apache/openjpa/commit/eaeebf20c7e89466748e4c872a6c15a732351382"}],"stats":{"total":6,"additions":4,"deletions":2},"files":[{"sha":"d3a088d93a1be84c40f5b88978442a2b1c185ef0","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/52d7ab797565c7b182a87128eb0a484a7e9237a7/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java","raw_url":"https://github.com/apache/openjpa/raw/52d7ab797565c7b182a87128eb0a484a7e9237a7/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java?ref=52d7ab797565c7b182a87128eb0a484a7e9237a7","patch":"@@ -37,6 +37,7 @@\n import org.apache.openjpa.meta.JavaTypes;\r\n import org.apache.openjpa.util.OpenJPAException;\r\n import org.apache.openjpa.util.UnsupportedException;\r\n+import serp.util.Strings;\r\n \r\n /**\r\n  * Dictionary for IBM DB2 database.\r\n@@ -630,7 +631,8 @@ private String addCastAsString(String func, String target,\n             String asString) {\r\n         String fstring = func;\r\n         if (func.indexOf(target) != -1)\r\n-            fstring = func.replace(target, \"CAST(\" + target + asString);\r\n+            fstring = Strings.replace(\r\n+                func, target, \"CAST(\" + target + asString + \")\");\r\n         return fstring;\r\n     }\r\n \r\n@@ -659,7 +661,7 @@ public String addCastAsType(String func, Val val) {\n     public String getCastFunction(Val val, String func) {\r\n         if (val instanceof Lit || val instanceof Param)\r\n             if (func.indexOf(\"VARCHAR\") == -1)\r\n-                func = addCastAsString(func, \"{0}\", \" AS VARCHAR(1000))\");\r\n+                func = addCastAsString(func, \"{0}\", \" AS VARCHAR(1000)\");\r\n         return func;\r\n     }\r\n \r"}]}

