{"sha":"5337ce10d0a4f00c3b04ca6bfe5cc05a76020afc","node_id":"MDY6Q29tbWl0MjA2MzY0OjUzMzdjZTEwZDBhNGYwMGMzYjA0Y2E2YmZlNWNjMDVhNzYwMjBhZmM=","commit":{"author":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-10-04T20:46:25Z"},"committer":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-10-04T20:46:25Z"},"message":"Possible fix for OPENJPA-13 JIRA issue.  Also fix possible NPE on delayed close\non transaction completion in managed environment.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@453016 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"6d698e3a13b8f7acb7aa9806e96f04a6cc28f297","url":"https://api.github.com/repos/apache/openjpa/git/trees/6d698e3a13b8f7acb7aa9806e96f04a6cc28f297"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/5337ce10d0a4f00c3b04ca6bfe5cc05a76020afc","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/5337ce10d0a4f00c3b04ca6bfe5cc05a76020afc","html_url":"https://github.com/apache/openjpa/commit/5337ce10d0a4f00c3b04ca6bfe5cc05a76020afc","comments_url":"https://api.github.com/repos/apache/openjpa/commits/5337ce10d0a4f00c3b04ca6bfe5cc05a76020afc/comments","author":null,"committer":null,"parents":[{"sha":"8785be46e71c65c4d87ab59203c17771d9faec26","url":"https://api.github.com/repos/apache/openjpa/commits/8785be46e71c65c4d87ab59203c17771d9faec26","html_url":"https://github.com/apache/openjpa/commit/8785be46e71c65c4d87ab59203c17771d9faec26"}],"stats":{"total":25,"additions":13,"deletions":12},"files":[{"sha":"b1090879afcd33a6d3ad337a4281c78b261da5e1","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/HandlerFieldStrategy.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/5337ce10d0a4f00c3b04ca6bfe5cc05a76020afc/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/HandlerFieldStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/5337ce10d0a4f00c3b04ca6bfe5cc05a76020afc/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/HandlerFieldStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/HandlerFieldStrategy.java?ref=5337ce10d0a4f00c3b04ca6bfe5cc05a76020afc","patch":"@@ -35,6 +35,7 @@\n import org.apache.openjpa.jdbc.sql.Select;\n import org.apache.openjpa.kernel.OpenJPAStateManager;\n import org.apache.openjpa.lib.util.Localizer;\n+import org.apache.openjpa.meta.JavaTypes;\n import org.apache.openjpa.meta.ValueStrategies;\n import org.apache.openjpa.util.InternalException;\n import org.apache.openjpa.util.MetaDataException;\n@@ -341,7 +342,7 @@ public void setAutoAssignedValue(OpenJPAStateManager sm, JDBCStore store,\n         Column col, Object autoInc) {\n         Object data;\n         if (_cols.length == 1)\n-            data = autoInc;\n+            data = JavaTypes.convert(autoInc, col.getJavaType());\n         else {\n             // multiple columns; have to get current value, replace this col's\n             // value with the given one, and reset\n@@ -351,7 +352,8 @@ public void setAutoAssignedValue(OpenJPAStateManager sm, JDBCStore store,\n                 data = new Object[_cols.length];\n             for (int i = 0; i < _cols.length; i++) {\n                 if (_cols[i] == col) {\n-                    ((Object[]) data)[i] = autoInc;\n+                    ((Object[]) data)[i] = JavaTypes.convert(autoInc, \n+                        col.getJavaType());\n                     break;\n                 }\n             }"},{"sha":"f31f072a17089012fc7aeed7f22741b45aa178df","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/5337ce10d0a4f00c3b04ca6bfe5cc05a76020afc/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/5337ce10d0a4f00c3b04ca6bfe5cc05a76020afc/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java?ref=5337ce10d0a4f00c3b04ca6bfe5cc05a76020afc","patch":"@@ -1794,7 +1794,9 @@ public void afterCompletion(int status) {\n             _flags &= ~FLAG_FLUSHED;\n             _flags &= ~FLAG_TRANS_ENDING;\n \n-            if (_transEventManager.hasEndListeners()) {\n+            // event manager nulled if freed broker\n+            if (_transEventManager != null \n+                && _transEventManager.hasEndListeners()) {\n                 fireTransactionEvent(new TransactionEvent(this,\n                     status == Status.STATUS_COMMITTED\n                         ? TransactionEvent.AFTER_COMMIT_COMPLETE\n@@ -4021,10 +4023,7 @@ protected void free() {\n             _extents = null;\n         }\n \n-        try {\n-            releaseConnection();\n-        } catch (RuntimeException re) {\n-        }\n+        try { releaseConnection(); } catch (RuntimeException re) {}\n \n         _lm.close();\n         _store.close();"},{"sha":"4748d0f06aefbfed789b8b255069f933828fbeeb","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/JavaTypes.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/5337ce10d0a4f00c3b04ca6bfe5cc05a76020afc/openjpa-kernel/src/main/java/org/apache/openjpa/meta/JavaTypes.java","raw_url":"https://github.com/apache/openjpa/raw/5337ce10d0a4f00c3b04ca6bfe5cc05a76020afc/openjpa-kernel/src/main/java/org/apache/openjpa/meta/JavaTypes.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/JavaTypes.java?ref=5337ce10d0a4f00c3b04ca6bfe5cc05a76020afc","patch":"@@ -287,7 +287,7 @@ public static Object convert(Object val, int typeCode) {\n                 // no break\n             case DOUBLE:\n                 if (val instanceof String)\n-                    new Double(val.toString());\n+                    return new Double(val.toString());\n                 return val;\n             case FLOAT_OBJ:\n                 if (val instanceof Float)\n@@ -297,7 +297,7 @@ public static Object convert(Object val, int typeCode) {\n                 // no break\n             case FLOAT:\n                 if (val instanceof String)\n-                    new Float(val.toString());\n+                    return new Float(val.toString());\n                 return val;\n             case INT_OBJ:\n                 if (val instanceof Integer)\n@@ -307,7 +307,7 @@ public static Object convert(Object val, int typeCode) {\n                 // no break\n             case INT:\n                 if (val instanceof String)\n-                    new Integer(val.toString());\n+                    return new Integer(val.toString());\n                 return val;\n             case LONG_OBJ:\n                 if (val instanceof Long)\n@@ -317,7 +317,7 @@ public static Object convert(Object val, int typeCode) {\n                 // no break\n             case LONG:\n                 if (val instanceof String)\n-                    new Long(val.toString());\n+                    return new Long(val.toString());\n                 return val;\n             case NUMBER:\n                 if (val instanceof Number)\n@@ -333,7 +333,7 @@ public static Object convert(Object val, int typeCode) {\n                 // no break\n             case SHORT:\n                 if (val instanceof String)\n-                    new Short(val.toString());\n+                    return new Short(val.toString());\n                 return val;\n             case STRING:\n                 return val.toString();"}]}

