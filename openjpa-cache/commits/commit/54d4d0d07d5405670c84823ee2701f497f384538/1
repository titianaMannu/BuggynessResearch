{"sha":"54d4d0d07d5405670c84823ee2701f497f384538","node_id":"MDY6Q29tbWl0MjA2MzY0OjU0ZDRkMGQwN2Q1NDA1NjcwYzg0ODIzZWUyNzAxZjQ5N2YzODQ1Mzg=","commit":{"author":{"name":"Jeremy Bauer","email":"jrbauer@apache.org","date":"2008-10-31T18:39:16Z"},"committer":{"name":"Jeremy Bauer","email":"jrbauer@apache.org","date":"2008-10-31T18:39:16Z"},"message":"OPENJPA-755 Update to SingleFieldManager to permit detached related entities on a merge with cascade persist.  Committing for Dinkar Rao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@709527 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"f04ec92aa95dfe3246cf06344a61acd0c82d8537","url":"https://api.github.com/repos/apache/openjpa/git/trees/f04ec92aa95dfe3246cf06344a61acd0c82d8537"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/54d4d0d07d5405670c84823ee2701f497f384538","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/54d4d0d07d5405670c84823ee2701f497f384538","html_url":"https://github.com/apache/openjpa/commit/54d4d0d07d5405670c84823ee2701f497f384538","comments_url":"https://api.github.com/repos/apache/openjpa/commits/54d4d0d07d5405670c84823ee2701f497f384538/comments","author":null,"committer":null,"parents":[{"sha":"1a378e13f9847f903fbe4ace6b3bd972c11979d3","url":"https://api.github.com/repos/apache/openjpa/commits/1a378e13f9847f903fbe4ace6b3bd972c11979d3","html_url":"https://github.com/apache/openjpa/commit/1a378e13f9847f903fbe4ace6b3bd972c11979d3"}],"stats":{"total":284,"additions":283,"deletions":1},"files":[{"sha":"b505fd89edbce88079c62ad5f7e881432cc1ff56","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SingleFieldManager.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/54d4d0d07d5405670c84823ee2701f497f384538/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SingleFieldManager.java","raw_url":"https://github.com/apache/openjpa/raw/54d4d0d07d5405670c84823ee2701f497f384538/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SingleFieldManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SingleFieldManager.java?ref=54d4d0d07d5405670c84823ee2701f497f384538","patch":"@@ -743,7 +743,8 @@ private void preFlushPC(ValueMetaData vmd, Object obj, boolean logical,\n         if (obj == null)\n             return;\n \n-        OpenJPAStateManager sm;\n+        OpenJPAStateManager sm;        \n+        \n         if (vmd.getCascadePersist() == ValueMetaData.CASCADE_NONE) {\n             if (!_broker.isDetachedNew() && _broker.isDetached(obj))\n                 return; // allow but ignore\n@@ -754,6 +755,10 @@ private void preFlushPC(ValueMetaData vmd, Object obj, boolean logical,\n                     _loc.get(\"cant-cascade-persist\", vmd))\n                     .setFailedObject(obj);\n         } else {\n+        \tif (vmd.getCascadePersist() == ValueMetaData.CASCADE_IMMEDIATE) {\n+                if (!_broker.isDetachedNew() && _broker.isDetached(obj))\n+                    return; // allow but ignore\n+            }        \t\n             sm = _broker.getStateManager(obj);\n             if (sm == null || !sm.isProvisional()) { \n                 sm = _broker.persist(obj, null, true, call);"},{"sha":"c176c9d90a20bd626c81120a7830b52344292bed","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/TestDetachedEntityCascadePersist.java","status":"added","additions":74,"deletions":0,"changes":74,"blob_url":"https://github.com/apache/openjpa/blob/54d4d0d07d5405670c84823ee2701f497f384538/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/TestDetachedEntityCascadePersist.java","raw_url":"https://github.com/apache/openjpa/raw/54d4d0d07d5405670c84823ee2701f497f384538/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/TestDetachedEntityCascadePersist.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/TestDetachedEntityCascadePersist.java?ref=54d4d0d07d5405670c84823ee2701f497f384538","patch":"@@ -0,0 +1,74 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.detachment;\n+\n+import javax.persistence.EntityManager;\n+\n+import org.apache.openjpa.persistence.detachment.model.DMCustomer;\n+import org.apache.openjpa.persistence.detachment.model.DMCustomerInventory;\n+import org.apache.openjpa.persistence.detachment.model.DMItem;\n+import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n+\n+public class TestDetachedEntityCascadePersist extends SingleEMFTestCase {\n+\n+\tpublic void setUp() {\t\t\n+        setUp(\n+        \tCLEAR_TABLES,\n+        \tDMCustomer.class, \n+        \tDMItem.class,\n+        \tDMCustomerInventory.class\n+        );        \n+    }\n+\t\n+    public void testDetachedEntityCascadePersist() {\n+    \t// Persist an item for finding later \n+    \tEntityManager em = emf.createEntityManager();\n+        DMItem item = new DMItem(); \n+        item.setName(\"openjpa\");\n+        item.setPrice(0.0);\n+        em.getTransaction().begin();        \n+        em.persist(item);\n+        // Persist a customer for finding later\n+        DMCustomer customer = new DMCustomer();\n+        customer.setFirstName(\"Open\");\n+        customer.setLastName(\"JPA\");\n+        em.persist(customer);\n+        em.getTransaction().commit();\n+        em.close();\n+        \n+        em = emf.createEntityManager();\n+        DMItem itemDetached = em.find(DMItem.class, item.getId());\n+        em.close();        \n+        em = emf.createEntityManager();\n+        DMCustomer customer2 = em.find(DMCustomer.class, customer.getId());       \n+        DMCustomerInventory customerInventory = new DMCustomerInventory();\n+        customerInventory.setCustomer(customer2);\n+        customerInventory.setItem(itemDetached);\n+        customerInventory.setQuantity(20);\n+        customer2.getCustomerInventories().add(customerInventory);\n+        em.getTransaction().begin();\n+        em.merge(customer2);        \n+        // At this point, itemDetached is still detached.\n+        // The following commit causes a persist on CustomerInventory,\n+        // which leads to a cascade-persist on the detached item.\n+        // This cascade-persist on a detached item should be ignored, \n+        // instead of a EntityExistsException being thrown\n+        em.getTransaction().commit();\n+    }\n+}"},{"sha":"f0992ac63357fe91ec0a4ab885df45580818864b","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/model/DMCustomer.java","status":"added","additions":77,"deletions":0,"changes":77,"blob_url":"https://github.com/apache/openjpa/blob/54d4d0d07d5405670c84823ee2701f497f384538/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/model/DMCustomer.java","raw_url":"https://github.com/apache/openjpa/raw/54d4d0d07d5405670c84823ee2701f497f384538/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/model/DMCustomer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/model/DMCustomer.java?ref=54d4d0d07d5405670c84823ee2701f497f384538","patch":"@@ -0,0 +1,77 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.detachment.model;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.Id;\n+import javax.persistence.OneToMany;\n+\n+@Entity \n+public class DMCustomer {\n+    \n+\tprivate static long idCounter = System.currentTimeMillis();\t\n+    @Id private long id = idCounter++;    \n+    private String firstName;    \n+    private String lastName;    \n+\n+    @OneToMany(mappedBy=\"customer\", \n+            fetch=FetchType.EAGER,\n+            cascade=CascadeType.ALL)\n+    private List<DMCustomerInventory> customerInventories = new ArrayList<DMCustomerInventory>();\n+    \n+    public DMCustomer() {\n+    }\n+\n+\tpublic long getId() {\n+\t\treturn id;\n+\t}\n+\n+\tpublic void setId(long id) {\n+\t\tthis.id = id;\n+\t}\n+\n+\tpublic String getFirstName() {\n+\t\treturn firstName;\n+\t}\n+\n+\tpublic void setFirstName(String firstName) {\n+\t\tthis.firstName = firstName;\n+\t}\n+\n+\tpublic String getLastName() {\n+\t\treturn lastName;\n+\t}\n+\n+\tpublic void setLastName(String lastName) {\n+\t\tthis.lastName = lastName;\n+\t}\n+\n+\tpublic List<DMCustomerInventory> getCustomerInventories() {\n+\t\treturn customerInventories;\n+\t}\n+\n+\tpublic void setCustomerInventories(List<DMCustomerInventory> customerInventories) {\n+\t\tthis.customerInventories = customerInventories;\n+\t}\n+}"},{"sha":"83d1d75e20277fa59422d91cae591e060a719050","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/model/DMCustomerInventory.java","status":"added","additions":75,"deletions":0,"changes":75,"blob_url":"https://github.com/apache/openjpa/blob/54d4d0d07d5405670c84823ee2701f497f384538/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/model/DMCustomerInventory.java","raw_url":"https://github.com/apache/openjpa/raw/54d4d0d07d5405670c84823ee2701f497f384538/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/model/DMCustomerInventory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/model/DMCustomerInventory.java?ref=54d4d0d07d5405670c84823ee2701f497f384538","patch":"@@ -0,0 +1,75 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.detachment.model;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+\n+@Entity\n+public class DMCustomerInventory  {\n+\tprivate static long idCounter = System.currentTimeMillis();\n+    @Id private long id = idCounter++;\n+    \n+    @ManyToOne(cascade=CascadeType.ALL)\n+    @JoinColumn(name = \"CI_ITEMID\")\n+    private DMItem  item;    \n+    private int quantity;\n+    \n+    @ManyToOne(cascade=CascadeType.MERGE)\n+    @JoinColumn(name=\"CI_CUSTOMERID\")\n+    private DMCustomer customer;\n+    \n+    public DMCustomerInventory() {\n+    }\n+\n+\tpublic long getId() {\n+\t\treturn id;\n+\t}\n+\n+\tpublic void setId(long id) {\n+\t\tthis.id = id;\n+\t}\n+\n+\tpublic DMItem getItem() {\n+\t\treturn item;\n+\t}\n+\n+\tpublic void setItem(DMItem item) {\n+\t\tthis.item = item;\n+\t}\n+\n+\tpublic int getQuantity() {\n+\t\treturn quantity;\n+\t}\n+\n+\tpublic void setQuantity(int quantity) {\n+\t\tthis.quantity = quantity;\n+\t}\n+\n+\tpublic DMCustomer getCustomer() {\n+\t\treturn customer;\n+\t}\n+\n+\tpublic void setCustomer(DMCustomer customer) {\n+\t\tthis.customer = customer;\n+\t}    \n+}"},{"sha":"c13c962ede54d0ca44bb1bd79dde9ba288f020a9","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/model/DMItem.java","status":"added","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/apache/openjpa/blob/54d4d0d07d5405670c84823ee2701f497f384538/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/model/DMItem.java","raw_url":"https://github.com/apache/openjpa/raw/54d4d0d07d5405670c84823ee2701f497f384538/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/model/DMItem.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detachment/model/DMItem.java?ref=54d4d0d07d5405670c84823ee2701f497f384538","patch":"@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.detachment.model;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+\n+@Entity\n+public class DMItem {\n+\tprivate static long idCounter = System.currentTimeMillis();\t\n+\t@Id private long id = idCounter++;\n+\n+\tprivate String name;\n+\tprivate double price;\n+\t\n+\t\n+\tpublic long getId() {\n+\t\treturn id;\n+\t}\n+\tpublic void setId(long id) {\n+\t\tthis.id = id;\n+\t}\n+\tpublic String getName() {\n+\t\treturn name;\n+\t}\n+\tpublic void setName(String name) {\n+\t\tthis.name = name;\n+\t}\n+\tpublic double getPrice() {\n+\t\treturn price;\n+\t}\n+\tpublic void setPrice(double price) {\n+\t\tthis.price = price;\n+\t}\n+}"}]}

