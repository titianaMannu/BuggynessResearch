{"sha":"551a5d211cd8907390f6df36fdcf6e7b497d733e","node_id":"MDY6Q29tbWl0MjA2MzY0OjU1MWE1ZDIxMWNkODkwNzM5MGY2ZGYzNmZkY2Y2ZTdiNDk3ZDczM2U=","commit":{"author":{"name":"Fay Wang","email":"faywang@apache.org","date":"2010-04-05T17:46:02Z"},"committer":{"name":"Fay Wang","email":"faywang@apache.org","date":"2010-04-05T17:46:02Z"},"message":"OPENJPA-1608: port the fix to openjpa 2.0.x\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@930916 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"d26ff84f0cf674ce1065c4161e497f043905e3ee","url":"https://api.github.com/repos/apache/openjpa/git/trees/d26ff84f0cf674ce1065c4161e497f043905e3ee"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/551a5d211cd8907390f6df36fdcf6e7b497d733e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/551a5d211cd8907390f6df36fdcf6e7b497d733e","html_url":"https://github.com/apache/openjpa/commit/551a5d211cd8907390f6df36fdcf6e7b497d733e","comments_url":"https://api.github.com/repos/apache/openjpa/commits/551a5d211cd8907390f6df36fdcf6e7b497d733e/comments","author":null,"committer":null,"parents":[{"sha":"e9ee2f588799ff893f99f287ebc8e5a05383e210","url":"https://api.github.com/repos/apache/openjpa/commits/e9ee2f588799ff893f99f287ebc8e5a05383e210","html_url":"https://github.com/apache/openjpa/commit/e9ee2f588799ff893f99f287ebc8e5a05383e210"}],"stats":{"total":42,"additions":24,"deletions":18},"files":[{"sha":"e7d2ee79d10f82cf24feca76c5f0c1f3b6ea7715","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/InformixDictionary.java","status":"modified","additions":24,"deletions":18,"changes":42,"blob_url":"https://github.com/apache/openjpa/blob/551a5d211cd8907390f6df36fdcf6e7b497d733e/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/InformixDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/551a5d211cd8907390f6df36fdcf6e7b497d733e/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/InformixDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/InformixDictionary.java?ref=551a5d211cd8907390f6df36fdcf6e7b497d733e","patch":"@@ -27,7 +27,6 @@\n import java.sql.Types;\n import java.util.Arrays;\n import java.util.Collection;\n-import java.util.Set;\n \n import org.apache.openjpa.jdbc.identifier.DBIdentifier;\n import org.apache.openjpa.jdbc.identifier.DBIdentifier.DBIdentifierType;\n@@ -317,24 +316,15 @@ public Connection decorate(Connection conn)\n \n         // if we haven't already done so, initialize the lock mode of the\n         // connection\n-        if (lockModeEnabled && _seenConnections.add(conn)) {\n-            String sql = \"SET LOCK MODE TO WAIT\";\n-            if (lockWaitSeconds > 0)\n-                sql = sql + \" \" + lockWaitSeconds;\n-\n-            Statement stmnt = null;\n-            try {\n-                stmnt = conn.createStatement();\n-                stmnt.executeUpdate(sql);\n-            } catch (SQLException se) {\n-                throw SQLExceptions.getStore(se, this);\n-            } finally {\n-                if (stmnt != null)\n-                    try {\n-                        stmnt.close();\n-                    } catch (SQLException se) {\n-                    }\n+        if (_seenConnections.add(conn)) {\n+            if (lockModeEnabled) {\n+                String sql = \"SET LOCK MODE TO WAIT\";\n+                if (lockWaitSeconds > 0)\n+                    sql = sql + \" \" + lockWaitSeconds;\n+                execute(sql, conn);\n             }\n+            String sql = \"SET ENVIRONMENT RETAINUPDATELOCKS 'ALL'\";\n+            execute(sql, conn);\n         }\n \n         // the datadirect driver requires that we issue a rollback before using\n@@ -346,6 +336,22 @@ public Connection decorate(Connection conn)\n             }\n         return conn;\n     }\n+    \n+    private void execute(String sql, Connection conn) {\n+        Statement stmnt = null;\n+        try {\n+            stmnt = conn.createStatement();\n+            stmnt.executeUpdate(sql);\n+        } catch (SQLException se) {\n+            throw SQLExceptions.getStore(se, this);\n+        } finally {\n+            if (stmnt != null)\n+                try {\n+                    stmnt.close();\n+                } catch (SQLException se) {\n+                }\n+        }\n+    }\n \n     @Override\n     public void indexOf(SQLBuffer buf, FilterValue str, FilterValue find,"}]}

