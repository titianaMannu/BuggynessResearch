{"sha":"59684e480e757270e547b00a29157e4404466a66","node_id":"MDY6Q29tbWl0MjA2MzY0OjU5Njg0ZTQ4MGU3NTcyNzBlNTQ3YjAwYTI5MTU3ZTQ0MDQ0NjZhNjY=","commit":{"author":{"name":"Milosz Tylenda","email":"mtylenda@apache.org","date":"2011-10-09T10:34:23Z"},"committer":{"name":"Milosz Tylenda","email":"mtylenda@apache.org","date":"2011-10-09T10:34:23Z"},"message":"OPENJPA-2056: Remove unnecessary casts from test case.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1180577 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"9e507b44916f090147e552f5953822e77c9805e4","url":"https://api.github.com/repos/apache/openjpa/git/trees/9e507b44916f090147e552f5953822e77c9805e4"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/59684e480e757270e547b00a29157e4404466a66","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/59684e480e757270e547b00a29157e4404466a66","html_url":"https://github.com/apache/openjpa/commit/59684e480e757270e547b00a29157e4404466a66","comments_url":"https://api.github.com/repos/apache/openjpa/commits/59684e480e757270e547b00a29157e4404466a66/comments","author":null,"committer":null,"parents":[{"sha":"12878c9c05199a62304b1ff807a3e4ea1e878af9","url":"https://api.github.com/repos/apache/openjpa/commits/12878c9c05199a62304b1ff807a3e4ea1e878af9","html_url":"https://github.com/apache/openjpa/commit/12878c9c05199a62304b1ff807a3e4ea1e878af9"}],"stats":{"total":13,"additions":6,"deletions":7},"files":[{"sha":"243b84106ef1d7ddd586bfc8f0d6c091c151333e","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestQueryEscapeCharacters.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/apache/openjpa/blob/59684e480e757270e547b00a29157e4404466a66/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestQueryEscapeCharacters.java","raw_url":"https://github.com/apache/openjpa/raw/59684e480e757270e547b00a29157e4404466a66/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestQueryEscapeCharacters.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestQueryEscapeCharacters.java?ref=59684e480e757270e547b00a29157e4404466a66","patch":"@@ -90,7 +90,7 @@ public void testWrongEscape() {\n     }\n \n     public void testDoubleSlashQuery() {\n-        // get the Dictionary and check the alwaysAddSearchString flag\n+        // get the Dictionary and check the requiresSearchStringEscapeForLike flag\n         OpenJPAEntityManagerFactorySPI ojpaEmf = \n             (OpenJPAEntityManagerFactorySPI) emf;\n         JDBCConfiguration conf = (JDBCConfiguration)ojpaEmf.getConfiguration();\n@@ -105,8 +105,7 @@ public void testDoubleSlashQuery() {\n \n     @SuppressWarnings(\"unchecked\")\n     public void testDifferentEscapeCharacter () {\n-        OpenJPAEntityManagerFactorySPI ojpaEmf = \n-            (OpenJPAEntityManagerFactorySPI) emf;\n+        OpenJPAEntityManagerFactorySPI ojpaEmf = emf;\n         JDBCConfiguration conf = (JDBCConfiguration)ojpaEmf.getConfiguration();\n \n         // Would be nice to just pass a map to the createEntityManager, but\n@@ -118,15 +117,15 @@ public void testDifferentEscapeCharacter () {\n \n         Query q = em.createNamedQuery(\"Employee.findByName\");\n         q.setParameter(\"name\", \"M|%%\");\n-        List<Employee> emps = (List<Employee>) q.getResultList();\n+        List<Employee> emps = q.getResultList();\n         assertEquals(1, emps.size());\n \n         String unnamedQuery =\n             \"Select e from Employee e where e.name LIKE :name\";\n \n         q = em.createQuery(unnamedQuery);\n         q.setParameter(\"name\", \"M|%%\");\n-        emps = (List<Employee>) q.getResultList();\n+        emps = q.getResultList();\n         assertEquals(1, emps.size());\n         em.close();\n     }\n@@ -138,7 +137,7 @@ private void performFind (String namedQuery, String parameter,\n \n         Query q = em.createNamedQuery(namedQuery);\n         q.setParameter(\"name\", parameter);\n-        List<Employee> emps = (List<Employee>) q.getResultList();\n+        List<Employee> emps = q.getResultList();\n         assertEquals(expected, emps.size());\n \n         String unnamedQuery =\n@@ -149,7 +148,7 @@ private void performFind (String namedQuery, String parameter,\n         }\n         q = em.createQuery(unnamedQuery);\n         q.setParameter(\"name\", parameter);\n-        emps = (List<Employee>) q.getResultList();\n+        emps = q.getResultList();\n         assertEquals(expected, emps.size());\n         em.close();\n     }"}]}

