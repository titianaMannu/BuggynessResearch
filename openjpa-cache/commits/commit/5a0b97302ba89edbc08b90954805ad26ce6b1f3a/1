{"sha":"5a0b97302ba89edbc08b90954805ad26ce6b1f3a","node_id":"MDY6Q29tbWl0MjA2MzY0OjVhMGI5NzMwMmJhODllZGJjMDhiOTA5NTQ4MDVhZDI2Y2U2YjFmM2E=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-01-20T22:53:02Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-01-20T22:53:02Z"},"message":"OPENJPA-1374 The @DatabasePlatform no longer works, as Derby will always be on the classpath.  Switching 3 junits over to use setSupportedDatabases() in their setUp() routines instead....\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@901419 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"3408bb66865adca3416b07e4e2310b006fa1af59","url":"https://api.github.com/repos/apache/openjpa/git/trees/3408bb66865adca3416b07e4e2310b006fa1af59"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/5a0b97302ba89edbc08b90954805ad26ce6b1f3a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/5a0b97302ba89edbc08b90954805ad26ce6b1f3a","html_url":"https://github.com/apache/openjpa/commit/5a0b97302ba89edbc08b90954805ad26ce6b1f3a","comments_url":"https://api.github.com/repos/apache/openjpa/commits/5a0b97302ba89edbc08b90954805ad26ce6b1f3a/comments","author":null,"committer":null,"parents":[{"sha":"acafc94a5e539c4b0bd2a3913006cb32da303f67","url":"https://api.github.com/repos/apache/openjpa/commits/acafc94a5e539c4b0bd2a3913006cb32da303f67","html_url":"https://github.com/apache/openjpa/commit/acafc94a5e539c4b0bd2a3913006cb32da303f67"}],"stats":{"total":54,"additions":37,"deletions":17},"files":[{"sha":"c928e9227eb674434b5b3825b8674ebfb38fe8ce","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/lib/conf/TestEquivalentConfiguration.java","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/5a0b97302ba89edbc08b90954805ad26ce6b1f3a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/lib/conf/TestEquivalentConfiguration.java","raw_url":"https://github.com/apache/openjpa/raw/5a0b97302ba89edbc08b90954805ad26ce6b1f3a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/lib/conf/TestEquivalentConfiguration.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/lib/conf/TestEquivalentConfiguration.java?ref=5a0b97302ba89edbc08b90954805ad26ce6b1f3a","patch":"@@ -27,6 +27,7 @@\n import org.apache.openjpa.conf.OpenJPAConfiguration;\n import org.apache.openjpa.enhance.TestEnhancementWithMultiplePUs;\n import org.apache.openjpa.jdbc.schema.DataSourceFactory;\n+import org.apache.openjpa.jdbc.sql.DerbyDictionary;\n import org.apache.openjpa.persistence.OpenJPAEntityManagerFactorySPI;\n import org.apache.openjpa.persistence.OpenJPAPersistence;\n import org.apache.openjpa.persistence.common.utils.AbstractTestCase;\n@@ -49,10 +50,7 @@\n  * \n  */\n \n-// Specifies that the test runs only if the driver is available in the \n-// execution classpath\n @DatabasePlatform(\"org.apache.derby.jdbc.EmbeddedDriver\")\n-\n public class TestEquivalentConfiguration extends SingleEMFTestCase {\n     private EntityManagerFactory emf;\n \n@@ -97,6 +95,13 @@\n      */\n     @Override\n     public void setUp() throws Exception {\n+        // Only run on Derby\n+        setSupportedDatabases(\n+            org.apache.openjpa.jdbc.sql.DerbyDictionary.class);\n+        if (isTestsDisabled()) {\n+            return;\n+        }\n+\n         _system = backup();\n         clear(_system);\n     }"},{"sha":"cbbaba739785ad064e992ca66206153b1798f1a4","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/identity/TestCompundIdWithNull.java","status":"modified","additions":19,"deletions":12,"changes":31,"blob_url":"https://github.com/apache/openjpa/blob/5a0b97302ba89edbc08b90954805ad26ce6b1f3a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/identity/TestCompundIdWithNull.java","raw_url":"https://github.com/apache/openjpa/raw/5a0b97302ba89edbc08b90954805ad26ce6b1f3a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/identity/TestCompundIdWithNull.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/identity/TestCompundIdWithNull.java?ref=5a0b97302ba89edbc08b90954805ad26ce6b1f3a","patch":"@@ -23,6 +23,7 @@\n \n import javax.persistence.EntityManager;\n \n+import org.apache.openjpa.jdbc.sql.DerbyDictionary;\n import org.apache.openjpa.persistence.OpenJPAEntityManager;\n import org.apache.openjpa.persistence.OpenJPAPersistence;\n import org.apache.openjpa.persistence.test.AllowFailure;\n@@ -43,22 +44,28 @@\n  * @author Pinaki Poddar\n  * @author Michael Vorburger\n  */\n-// Because we use DDL specific to Derby\n-@DatabasePlatform(\"org.apache.derby.jdbc.EmbeddedDriver\")\n \n+@DatabasePlatform(\"org.apache.derby.jdbc.EmbeddedDriver\")\n public class TestCompundIdWithNull extends SingleEMFTestCase {\n     private static boolean tablesCreated = false;\n-\tpublic void setUp() throws Exception {\n-\t    // do not use CLEAR_TABLES or DROP_TABLES\n-\t    super.setUp(SimpleCompoundIdTestEntity.class, ComplexCompoundIdTestEntity.class, TypeEntity.class);\n-\t    if (!tablesCreated) {\n-\t        createTables(emf.createEntityManager());\n-\t        tablesCreated = true;\n-\t    }\n-\t    \n-\t}\n+\n+    public void setUp() throws Exception {\n+        // Only run on Derby because we use DDL specific to Derby\n+        setSupportedDatabases(\n+            org.apache.openjpa.jdbc.sql.DerbyDictionary.class);\n+        if (isTestsDisabled()) {\n+            return;\n+        }\n+\n+        // do not use CLEAR_TABLES or DROP_TABLES\n+        super.setUp(SimpleCompoundIdTestEntity.class, ComplexCompoundIdTestEntity.class, TypeEntity.class);\n+        if (!tablesCreated) {\n+            createTables(emf.createEntityManager());\n+            tablesCreated = true;\n+        }\n+    }\n \t\n-\tpublic void testSimpleCompoundIdTestEntity() throws Exception  {\n+    public void testSimpleCompoundIdTestEntity() throws Exception  {\n \t\t\tEntityManager em = emf.createEntityManager();\n \t\t\tString jpql = \"SELECT o FROM SimpleCompoundIdTestEntity o ORDER BY o.secondId\";\n \t\t\tList<SimpleCompoundIdTestEntity> list = em.createQuery(jpql,SimpleCompoundIdTestEntity.class)"},{"sha":"0a153dd92d1d0f32a0fd2c7236d670dc88a49785","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/oracle/TestAutoIncrement.java","status":"modified","additions":10,"deletions":2,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/5a0b97302ba89edbc08b90954805ad26ce6b1f3a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/oracle/TestAutoIncrement.java","raw_url":"https://github.com/apache/openjpa/raw/5a0b97302ba89edbc08b90954805ad26ce6b1f3a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/oracle/TestAutoIncrement.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/oracle/TestAutoIncrement.java?ref=5a0b97302ba89edbc08b90954805ad26ce6b1f3a","patch":"@@ -22,6 +22,7 @@\n import javax.persistence.PersistenceException;\n import javax.persistence.Query;\n \n+import org.apache.openjpa.jdbc.sql.OracleDictionary;\n import org.apache.openjpa.persistence.OpenJPAEntityManagerFactorySPI;\n import org.apache.openjpa.persistence.OpenJPAEntityManagerSPI;\n import org.apache.openjpa.persistence.test.DatabasePlatform;\n@@ -46,7 +47,14 @@\n @DatabasePlatform(\"oracle.jdbc.driver.OracleDriver\")\n public class TestAutoIncrement extends SingleEMFTestCase {\n \n-\tpublic void setUp() throws Exception {\n+    public void setUp() throws Exception {\n+        // Only run on Oracle\n+        setSupportedDatabases(\n+            org.apache.openjpa.jdbc.sql.OracleDictionary.class);\n+        if (isTestsDisabled()) {\n+            return;\n+        }\n+\n         if (\"testAutoIncrementIdentityWithNamedSequence\".equals(getName())) {\n             String sequence = \"autoIncrementSequence\";\n             createSequence(sequence);\n@@ -58,7 +66,7 @@ public void setUp() throws Exception {\n \t\t\t\t\t\"openjpa.jdbc.DBDictionary\",\n                     \"oracle(UseTriggersForAutoAssign=true)\");\n \t\t}\n-\t}\n+    }\n \n     public void testAutoIncrementIdentityWithNamedSequence() {\n \t\tEntityManager em = emf.createEntityManager();"}]}

