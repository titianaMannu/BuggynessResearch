{"sha":"5b21125f5ee4b57cb8285e874e3c9724bd6e2c4c","node_id":"MDY6Q29tbWl0MjA2MzY0OjViMjExMjVmNWVlNGI1N2NiODI4NWU4NzRlM2M5NzI0YmQ2ZTJjNGM=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2013-01-10T21:16:14Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2013-01-10T21:16:14Z"},"message":"OPENJPA-2321: Remove synchrnization on output stream\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1431649 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"84becf0e3dfad647824f50a4a7be357fd541722d","url":"https://api.github.com/repos/apache/openjpa/git/trees/84becf0e3dfad647824f50a4a7be357fd541722d"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/5b21125f5ee4b57cb8285e874e3c9724bd6e2c4c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/5b21125f5ee4b57cb8285e874e3c9724bd6e2c4c","html_url":"https://github.com/apache/openjpa/commit/5b21125f5ee4b57cb8285e874e3c9724bd6e2c4c","comments_url":"https://api.github.com/repos/apache/openjpa/commits/5b21125f5ee4b57cb8285e874e3c9724bd6e2c4c/comments","author":null,"committer":null,"parents":[{"sha":"5c3070f571e168416c8c46a31c63fc6a1744ed15","url":"https://api.github.com/repos/apache/openjpa/commits/5c3070f571e168416c8c46a31c63fc6a1744ed15","html_url":"https://github.com/apache/openjpa/commit/5c3070f571e168416c8c46a31c63fc6a1744ed15"}],"stats":{"total":12,"additions":4,"deletions":8},"files":[{"sha":"bab7b4bd6cda6f9e3abac64854f78fa60c39def8","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/log/LogFactoryImpl.java","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/5b21125f5ee4b57cb8285e874e3c9724bd6e2c4c/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/LogFactoryImpl.java","raw_url":"https://github.com/apache/openjpa/raw/5b21125f5ee4b57cb8285e874e3c9724bd6e2c4c/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/LogFactoryImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/LogFactoryImpl.java?ref=5b21125f5ee4b57cb8285e874e3c9724bd6e2c4c","patch":"@@ -302,24 +302,21 @@ protected boolean isEnabled(short level) {\n \n         protected void log(short level, String message, Throwable t) {\n             String msg = formatMessage(level, message, t);\n-            synchronized (_out) {\n-                _out.print(msg);\n-            }\n+            _out.println(msg);\n         }\n \n         /**\n          * Convert <code>message</code> into a string ready to be written to\n-         * the log. The string should include the terminating newline.\n+         * the log. \n          *\n          * @param t may be null\n          */\n-        protected String formatMessage(short level, String message,\n-            Throwable t) {\n+        protected String formatMessage(short level, String message, Throwable t) {\n             // we write to a StringBuilder and then flush it all at\n             // once as a single line, since some environments(e.g., JBoss)\n             // override the System output stream to flush any calls\n             // to write without regard to line breaks, making the\n-            // output incomprehensibe.\n+            // output incomprehensible.\n             StringBuilder buf = new StringBuilder();\n \n             buf.append(getOffset());\n@@ -335,7 +332,6 @@ protected String formatMessage(short level, String message,\n             buf.append(_channel);\n             buf.append(\" - \");\n             buf.append(message);\n-            buf.append(NEWLINE);\n \n             if (t != null) {\n                 StringWriter swriter = new StringWriter();"}]}

