{"sha":"5bf35c3a409e2f4940b32ed8ea2ed419de4f6015","node_id":"MDY6Q29tbWl0MjA2MzY0OjViZjM1YzNhNDA5ZTJmNDk0MGIzMmVkOGVhMmVkNDE5ZGU0ZjYwMTU=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2008-12-04T09:09:35Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2008-12-04T09:09:35Z"},"message":"OPENJPA-812: Consider case when aggreate result from a slice can be null\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@723260 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"88638eca61a77e0bf94105a449470527ac49737c","url":"https://api.github.com/repos/apache/openjpa/git/trees/88638eca61a77e0bf94105a449470527ac49737c"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/5bf35c3a409e2f4940b32ed8ea2ed419de4f6015","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/5bf35c3a409e2f4940b32ed8ea2ed419de4f6015","html_url":"https://github.com/apache/openjpa/commit/5bf35c3a409e2f4940b32ed8ea2ed419de4f6015","comments_url":"https://api.github.com/repos/apache/openjpa/commits/5bf35c3a409e2f4940b32ed8ea2ed419de4f6015/comments","author":null,"committer":null,"parents":[{"sha":"ef7f18f30c168b1cb4b046bfde99ac23cd9ba934","url":"https://api.github.com/repos/apache/openjpa/commits/ef7f18f30c168b1cb4b046bfde99ac23cd9ba934","html_url":"https://github.com/apache/openjpa/commit/ef7f18f30c168b1cb4b046bfde99ac23cd9ba934"}],"stats":{"total":18,"additions":17,"deletions":1},"files":[{"sha":"206d16d00392f1d60541482153a7cd7991362c09","filename":"openjpa-slice/src/main/java/org/apache/openjpa/slice/jdbc/UniqueResultObjectProvider.java","status":"modified","additions":8,"deletions":1,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/5bf35c3a409e2f4940b32ed8ea2ed419de4f6015/openjpa-slice/src/main/java/org/apache/openjpa/slice/jdbc/UniqueResultObjectProvider.java","raw_url":"https://github.com/apache/openjpa/raw/5bf35c3a409e2f4940b32ed8ea2ed419de4f6015/openjpa-slice/src/main/java/org/apache/openjpa/slice/jdbc/UniqueResultObjectProvider.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-slice/src/main/java/org/apache/openjpa/slice/jdbc/UniqueResultObjectProvider.java?ref=5bf35c3a409e2f4940b32ed8ea2ed419de4f6015","patch":"@@ -116,27 +116,34 @@ public boolean next() throws Exception {\n     Object count(Object current, Object other) {\r\n         if (current == null)\r\n             return other;\r\n+        if (other == null)\r\n+        \treturn current;\r\n         return ((Number)current).longValue() + ((Number)other).longValue();\r\n     }\r\n     \r\n     Object max(Object current, Object other) {\r\n         if (current == null)\r\n             return other;\r\n-        \r\n+        if (other == null)\r\n+        \treturn current;\r\n         return Math.max(((Number)current).doubleValue(), \r\n                 ((Number)other).doubleValue());\r\n     }\r\n     \r\n     Object min(Object current, Object other) {\r\n         if (current == null)\r\n             return other;\r\n+        if (other == null)\r\n+        \treturn current;\r\n         return Math.min(((Number)current).doubleValue(), \r\n                 ((Number)other).doubleValue());\r\n     }\r\n     \r\n     Object sum(Object current, Object other) {\r\n         if (current == null)\r\n             return other;\r\n+        if (other == null)\r\n+        \treturn current;\r\n         return (((Number)current).doubleValue() +\r\n                 ((Number)other).doubleValue());\r\n     }\r"},{"sha":"0553eb5ef1971d53b637d608d81c043ebe3d7955","filename":"openjpa-slice/src/test/java/org/apache/openjpa/slice/TestQuery.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/5bf35c3a409e2f4940b32ed8ea2ed419de4f6015/openjpa-slice/src/test/java/org/apache/openjpa/slice/TestQuery.java","raw_url":"https://github.com/apache/openjpa/raw/5bf35c3a409e2f4940b32ed8ea2ed419de4f6015/openjpa-slice/src/test/java/org/apache/openjpa/slice/TestQuery.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-slice/src/test/java/org/apache/openjpa/slice/TestQuery.java?ref=5bf35c3a409e2f4940b32ed8ea2ed419de4f6015","patch":"@@ -98,6 +98,15 @@ public void testAggregateQuery() {\n         assertEquals(max, max1);\r\n     }\r\n     \r\n+    public void testAggregateQueryWithMissingValueFromSlice() {\r\n+        EntityManager em = emf.createEntityManager();\r\n+        em.getTransaction().begin();\r\n+        Object max   = em.createQuery(\"SELECT MAX(p.value) FROM PObject p WHERE MOD(p.value,2)=0\").getSingleResult();\r\n+        em.getTransaction().rollback();\r\n+        \r\n+        assertEquals(VALUE_MAX, ((Number)max).intValue());\r\n+    }\r\n+\r\n     public void testSetMaxResult() {\r\n         EntityManager em = emf.createEntityManager();\r\n         int limit = 3;\r"}]}

