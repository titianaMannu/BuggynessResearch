{"sha":"5d6581bf7f75ddf7c77e37a087cf6a63cc757e94","node_id":"MDY6Q29tbWl0MjA2MzY0OjVkNjU4MWJmN2Y3NWRkZjdjNzdlMzdhMDg3Y2Y2YTYzY2M3NTdlOTQ=","commit":{"author":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2009-09-03T00:45:17Z"},"committer":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2009-09-03T00:45:17Z"},"message":"OPENJPA-1283 Incorrect SQL for a JPQL query selecting Map value from an elementCollection of a Map and the map the value is an embeddable\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@810744 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"1e0c1b62b270185c49dfeabacbba0b03a8c1e908","url":"https://api.github.com/repos/apache/openjpa/git/trees/1e0c1b62b270185c49dfeabacbba0b03a8c1e908"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/5d6581bf7f75ddf7c77e37a087cf6a63cc757e94","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/5d6581bf7f75ddf7c77e37a087cf6a63cc757e94","html_url":"https://github.com/apache/openjpa/commit/5d6581bf7f75ddf7c77e37a087cf6a63cc757e94","comments_url":"https://api.github.com/repos/apache/openjpa/commits/5d6581bf7f75ddf7c77e37a087cf6a63cc757e94/comments","author":null,"committer":null,"parents":[{"sha":"1908a911803951e2a3bb27f203ee2bd077092ff1","url":"https://api.github.com/repos/apache/openjpa/commits/1908a911803951e2a3bb27f203ee2bd077092ff1","html_url":"https://github.com/apache/openjpa/commit/1908a911803951e2a3bb27f203ee2bd077092ff1"}],"stats":{"total":18,"additions":17,"deletions":1},"files":[{"sha":"9a8c52bb25c93ccd44398a846d859161cfb950bd","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/PCPath.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/5d6581bf7f75ddf7c77e37a087cf6a63cc757e94/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/PCPath.java","raw_url":"https://github.com/apache/openjpa/raw/5d6581bf7f75ddf7c77e37a087cf6a63cc757e94/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/PCPath.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/PCPath.java?ref=5d6581bf7f75ddf7c77e37a087cf6a63cc757e94","patch":"@@ -33,6 +33,7 @@\n import org.apache.openjpa.jdbc.meta.Strategy;\n import org.apache.openjpa.jdbc.meta.ValueMapping;\n import org.apache.openjpa.jdbc.meta.strats.HandlerCollectionTableFieldStrategy;\n+import org.apache.openjpa.jdbc.meta.strats.HandlerHandlerMapTableFieldStrategy;\n import org.apache.openjpa.jdbc.meta.strats.LRSMapFieldStrategy;\n import org.apache.openjpa.jdbc.schema.Column;\n import org.apache.openjpa.jdbc.schema.ForeignKey;\n@@ -320,7 +321,10 @@ else if (pstate.joinedRel\n                         Strategy strategy = pstate.field.getStrategy();\n                         if (strategy instanceof HandlerCollectionTableFieldStrategy) {\n                             return ((HandlerCollectionTableFieldStrategy) strategy).\n-                                getElementColumns(elem.getTypeMapping());                            \n+                                getElementColumns(elem.getTypeMapping());\n+                        } else if (strategy instanceof HandlerHandlerMapTableFieldStrategy) {\n+                            return ((HandlerHandlerMapTableFieldStrategy) strategy).\n+                            getValueColumns(elem.getTypeMapping());\n                         }\n                     }\n                     if (pstate.joinedRel && elem.getTypeCode() == JavaTypes.PC)"},{"sha":"6997ae320668a212a71e3f5e7e157d7426edc529","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/5d6581bf7f75ddf7c77e37a087cf6a63cc757e94/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java","raw_url":"https://github.com/apache/openjpa/raw/5d6581bf7f75ddf7c77e37a087cf6a63cc757e94/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java?ref=5d6581bf7f75ddf7c77e37a087cf6a63cc757e94","patch":"@@ -182,6 +182,7 @@ public void testMapKeyEnumerated() {\n     public void testMapKeyTemporal() {\n         createObjMapKeyTemporal();\n         findObjMapKeyTemporal();\n+        queryObjMapKeyTemporal();\n     }\n \n     public void testEntityA_Embed_MappedToOneCascadeDelete() {\n@@ -2356,6 +2357,17 @@ public void findObjMapKeyTemporal() {\n         assertEquals(3, item.getImages().size());\n     }\n     \n+    public void queryObjMapKeyTemporal() {\n+        EntityManager em = emf.createEntityManager();\n+        String jpql = \"SELECT VALUE(img) FROM Item5 item, IN (item.images) img \" + \n+            \"WHERE img.fName = :fName and item.id = :id\";\n+        Query q = em.createQuery(jpql);\n+        q.setParameter(\"fName\", \"file1\");\n+        q.setParameter(\"id\", 1);\n+        List coll = q.getResultList();\n+        assertEquals(1, coll.size());\n+    }\n+\n     public void queryItem(EntityManagerFactory emf) {\n         EntityManager em = emf.createEntityManager();\n         EntityTransaction tran = em.getTransaction();"}]}

