{"sha":"5f76ea2eaff5fb3dd8c4ad5c6ed1d5554f5065a3","node_id":"MDY6Q29tbWl0MjA2MzY0OjVmNzZlYTJlYWZmNWZiM2RkOGM0YWQ1YzZlZDFkNTU1NGY1MDY1YTM=","commit":{"author":{"name":"A. Abram White","email":"awhite@apache.org","date":"2007-01-29T20:11:43Z"},"committer":{"name":"A. Abram White","email":"awhite@apache.org","date":"2007-01-29T20:11:43Z"},"message":"Fix documentation on openjpa.LockManager property.  Remove some redundant logic\nfrom BrokerImpl.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@501171 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"860a9316ca56479b714a1e94c53d8bbbfa70a673","url":"https://api.github.com/repos/apache/openjpa/git/trees/860a9316ca56479b714a1e94c53d8bbbfa70a673"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/5f76ea2eaff5fb3dd8c4ad5c6ed1d5554f5065a3","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/5f76ea2eaff5fb3dd8c4ad5c6ed1d5554f5065a3","html_url":"https://github.com/apache/openjpa/commit/5f76ea2eaff5fb3dd8c4ad5c6ed1d5554f5065a3","comments_url":"https://api.github.com/repos/apache/openjpa/commits/5f76ea2eaff5fb3dd8c4ad5c6ed1d5554f5065a3/comments","author":null,"committer":null,"parents":[{"sha":"74823f7cd073325590ba79e8bc12de02832577ab","url":"https://api.github.com/repos/apache/openjpa/commits/74823f7cd073325590ba79e8bc12de02832577ab","html_url":"https://github.com/apache/openjpa/commit/74823f7cd073325590ba79e8bc12de02832577ab"}],"stats":{"total":28,"additions":14,"deletions":14},"files":[{"sha":"a89550bf4f8ccbb8de22fd51ea47fc2dbbaf508f","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","status":"modified","additions":9,"deletions":11,"changes":20,"blob_url":"https://github.com/apache/openjpa/blob/5f76ea2eaff5fb3dd8c4ad5c6ed1d5554f5065a3/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/5f76ea2eaff5fb3dd8c4ad5c6ed1d5554f5065a3/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java?ref=5f76ea2eaff5fb3dd8c4ad5c6ed1d5554f5065a3","patch":"@@ -780,17 +780,15 @@ protected Object find(Object oid, FetchConfiguration fetch, BitSet exclude,\n                     // after making instance transactional for locking\n                     if (!sm.isTransactional() && useTransactionalState(fetch))\n                         sm.transactional();\n-                    boolean loaded = sm.isLoading();\n-                    if (!loaded) {\n-                        try {\n-                            loaded = sm.load(fetch, StateManagerImpl.LOAD_FGS, \n-                                exclude, edata, false);\n-                        } catch (ObjectNotFoundException onfe) {\n-                            if ((flags & OID_NODELETED) != 0\n-                                || (flags & OID_NOVALIDATE) != 0)\n-                                throw onfe;\n-                            return call.processReturn(oid, null);\n-                        }\n+                    boolean loaded = false;\n+                    try {\n+                        loaded = sm.load(fetch, StateManagerImpl.LOAD_FGS, \n+                            exclude, edata, false);\n+                    } catch (ObjectNotFoundException onfe) {\n+                        if ((flags & OID_NODELETED) != 0\n+                            || (flags & OID_NOVALIDATE) != 0)\n+                            throw onfe;\n+                        return call.processReturn(oid, null);\n                     }\n \n                     // if no data needed to be loaded and the user wants to"},{"sha":"93b774f9b4c6bdcefc719c6740f34e6222aab7f1","filename":"openjpa-project/src/doc/manual/ref_guide_conf.xml","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/5f76ea2eaff5fb3dd8c4ad5c6ed1d5554f5065a3/openjpa-project/src/doc/manual/ref_guide_conf.xml","raw_url":"https://github.com/apache/openjpa/raw/5f76ea2eaff5fb3dd8c4ad5c6ed1d5554f5065a3/openjpa-project/src/doc/manual/ref_guide_conf.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_conf.xml?ref=5f76ea2eaff5fb3dd8c4ad5c6ed1d5554f5065a3","patch":"@@ -1955,18 +1955,20 @@ for managing bidirectional relations upon a flush. See\n LockManager</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default: </emphasis><literal>pessimistic</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>version</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Possible values: </emphasis><literal>none</literal>,\n-<literal>sjvm</literal>, <literal>pessimistic</literal>\n+<literal>sjvm</literal>, <literal>pessimistic</literal>, \n+<literal>version</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n <xref linkend=\"ref_guide_conf_plugins\"/>) describing a\n <ulink url=\"../javadoc/org/apache/openjpa/kernel/LockManager.html\"><classname>\n org.apache.openjpa.kernel.LockManager</classname></ulink> to use for acquiring\n-locks on persistent instances during transactions.\n+locks on persistent instances during transactions.  See \n+<xref linkend=\"ref_guide_locking_lockmgr\"/> for more information.\n             </para>\n         </section>\n         <section id=\"openjpa.LockTimeout\">"}]}

