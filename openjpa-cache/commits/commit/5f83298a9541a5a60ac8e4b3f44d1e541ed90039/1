{"sha":"5f83298a9541a5a60ac8e4b3f44d1e541ed90039","node_id":"MDY6Q29tbWl0MjA2MzY0OjVmODMyOThhOTU0MWE1YTYwYWM4ZTRiM2Y0NGQxZTU0MWVkOTAwMzk=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2009-07-30T16:05:12Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2009-07-30T16:05:12Z"},"message":"OPENJPA-1211:\nAdding brackets.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@799346 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"df2d7a568e9e67e4c95b1bcf8ceff6ea54352cfc","url":"https://api.github.com/repos/apache/openjpa/git/trees/df2d7a568e9e67e4c95b1bcf8ceff6ea54352cfc"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/5f83298a9541a5a60ac8e4b3f44d1e541ed90039","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/5f83298a9541a5a60ac8e4b3f44d1e541ed90039","html_url":"https://github.com/apache/openjpa/commit/5f83298a9541a5a60ac8e4b3f44d1e541ed90039","comments_url":"https://api.github.com/repos/apache/openjpa/commits/5f83298a9541a5a60ac8e4b3f44d1e541ed90039/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"5432ffecbb765de57791f414aa88c9dd88cd55c6","url":"https://api.github.com/repos/apache/openjpa/commits/5432ffecbb765de57791f414aa88c9dd88cd55c6","html_url":"https://github.com/apache/openjpa/commit/5432ffecbb765de57791f414aa88c9dd88cd55c6"}],"stats":{"total":3,"additions":2,"deletions":1},"files":[{"sha":"ca0d49b6ad688353395d57762cb8db305081dd02","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/FromImpl.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/5f83298a9541a5a60ac8e4b3f44d1e541ed90039/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/FromImpl.java","raw_url":"https://github.com/apache/openjpa/raw/5f83298a9541a5a60ac8e4b3f44d1e541ed90039/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/FromImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/FromImpl.java?ref=5f83298a9541a5a60ac8e4b3f44d1e541ed90039","patch":"@@ -257,8 +257,9 @@ private void addJoin(Join<X,?> join) {\n      * Return a path to the specified field.  \n      */\n     public <Y> Path<Y> get(String attName) {\n-        if (type == null)\n+        if (type == null) {\n             return super.get(attName);\n+        }\n         Member<? super X, ?> member = null;\n         for (Attribute<? super X, ?> a : type.getAttributes()) { \n             if(a instanceof Member<?, ?>){ "}]}

