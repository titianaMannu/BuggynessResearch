{"sha":"5f8ad3e811f595cee6497953ce6c7989d3c5e3c8","node_id":"MDY6Q29tbWl0MjA2MzY0OjVmOGFkM2U4MTFmNTk1Y2VlNjQ5Nzk1M2NlNmM3OTg5ZDNjNWUzYzg=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-02-12T17:52:38Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-02-12T17:52:38Z"},"message":"OPENJPA-1442: \nsetting svn:eol-style native\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@909530 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"f0bf8ce4e4a9baa6b99b5a82105d9e7d6f6c680d","url":"https://api.github.com/repos/apache/openjpa/git/trees/f0bf8ce4e4a9baa6b99b5a82105d9e7d6f6c680d"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/5f8ad3e811f595cee6497953ce6c7989d3c5e3c8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/5f8ad3e811f595cee6497953ce6c7989d3c5e3c8","html_url":"https://github.com/apache/openjpa/commit/5f8ad3e811f595cee6497953ce6c7989d3c5e3c8","comments_url":"https://api.github.com/repos/apache/openjpa/commits/5f8ad3e811f595cee6497953ce6c7989d3c5e3c8/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"e603bdc5c8e4a2d8c0be197490f2e71a33fdc553","url":"https://api.github.com/repos/apache/openjpa/commits/e603bdc5c8e4a2d8c0be197490f2e71a33fdc553","html_url":"https://github.com/apache/openjpa/commit/e603bdc5c8e4a2d8c0be197490f2e71a33fdc553"}],"stats":{"total":1122,"additions":561,"deletions":561},"files":[{"sha":"287ff6394143678970072116c027ce8d16976c3a","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EBigDecimalID.java","status":"modified","additions":56,"deletions":56,"changes":112,"blob_url":"https://github.com/apache/openjpa/blob/5f8ad3e811f595cee6497953ce6c7989d3c5e3c8/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EBigDecimalID.java","raw_url":"https://github.com/apache/openjpa/raw/5f8ad3e811f595cee6497953ce6c7989d3c5e3c8/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EBigDecimalID.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EBigDecimalID.java?ref=5f8ad3e811f595cee6497953ce6c7989d3c5e3c8","patch":"@@ -1,56 +1,56 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one\r\n- * or more contributor license agreements.  See the NOTICE file\r\n- * distributed with this work for additional information\r\n- * regarding copyright ownership.  The ASF licenses this file\r\n- * to you under the Apache License, Version 2.0 (the\r\n- * \"License\"); you may not use this file except in compliance\r\n- * with the License.  You may obtain a copy of the License at\r\n- *\r\n- * http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing,\r\n- * software distributed under the License is distributed on an\r\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- * KIND, either express or implied.  See the License for the\r\n- * specific language governing permissions and limitations\r\n- * under the License.    \r\n- */\r\n-package org.apache.openjpa.persistence.derivedid;\r\n-\r\n-import java.math.BigDecimal;\r\n-\r\n-import javax.persistence.Column;\r\n-import javax.persistence.Entity;\r\n-import javax.persistence.Id;\r\n-@Entity\r\n-public class EBigDecimalID {\r\n-    @Id\r\n-    @Column(precision=20,scale=5)\r\n-    private BigDecimal  id;\r\n-\r\n-    private String name;\r\n-    \r\n-    public EBigDecimalID() {}\r\n-\r\n-    public EBigDecimalID(BigDecimal id) {\r\n-        this.id = id;\r\n-        this.name = \"BigDecimalID \"+id;\r\n-    }\r\n-\r\n-    public BigDecimal getId() {\r\n-        return id;\r\n-    }\r\n-\r\n-    public void setId(BigDecimal id) {\r\n-        this.id = id;\r\n-    }\r\n-\r\n-    public String getName() {\r\n-        return name;\r\n-    }\r\n-\r\n-    public void setName(String name) {\r\n-        this.name = name;\r\n-    }   \r\n-}\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.derivedid;\n+\n+import java.math.BigDecimal;\n+\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+@Entity\n+public class EBigDecimalID {\n+    @Id\n+    @Column(precision=20,scale=5)\n+    private BigDecimal  id;\n+\n+    private String name;\n+    \n+    public EBigDecimalID() {}\n+\n+    public EBigDecimalID(BigDecimal id) {\n+        this.id = id;\n+        this.name = \"BigDecimalID \"+id;\n+    }\n+\n+    public BigDecimal getId() {\n+        return id;\n+    }\n+\n+    public void setId(BigDecimal id) {\n+        this.id = id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }   \n+}"},{"sha":"edf76d48f0dc1cf0bcb3a4c9c3dbb5e438f3dbf4","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EBigIntegerID.java","status":"modified","additions":55,"deletions":55,"changes":110,"blob_url":"https://github.com/apache/openjpa/blob/5f8ad3e811f595cee6497953ce6c7989d3c5e3c8/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EBigIntegerID.java","raw_url":"https://github.com/apache/openjpa/raw/5f8ad3e811f595cee6497953ce6c7989d3c5e3c8/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EBigIntegerID.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EBigIntegerID.java?ref=5f8ad3e811f595cee6497953ce6c7989d3c5e3c8","patch":"@@ -1,55 +1,55 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one\r\n- * or more contributor license agreements.  See the NOTICE file\r\n- * distributed with this work for additional information\r\n- * regarding copyright ownership.  The ASF licenses this file\r\n- * to you under the Apache License, Version 2.0 (the\r\n- * \"License\"); you may not use this file except in compliance\r\n- * with the License.  You may obtain a copy of the License at\r\n- *\r\n- * http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing,\r\n- * software distributed under the License is distributed on an\r\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- * KIND, either express or implied.  See the License for the\r\n- * specific language governing permissions and limitations\r\n- * under the License.    \r\n- */\r\n-package org.apache.openjpa.persistence.derivedid;\r\n-\r\n-import java.math.BigInteger;\r\n-\r\n-import javax.persistence.Entity;\r\n-import javax.persistence.Id;\r\n-@Entity\r\n-public class EBigIntegerID {\r\n-    @Id\r\n-    private BigInteger  id;\r\n-\r\n-    private String name;\r\n-    \r\n-    public EBigIntegerID() {}\r\n-\r\n-\r\n-    public EBigIntegerID(BigInteger id) {\r\n-        this.id = id;\r\n-        this.name = \"BigIntegerID \"+id;\r\n-    }\r\n-\r\n-    public BigInteger getId() {\r\n-        return id;\r\n-    }\r\n-\r\n-    public void setId(BigInteger id) {\r\n-        this.id = id;\r\n-    }\r\n-\r\n-    public String getName() {\r\n-        return name;\r\n-    }\r\n-    public void setName(String name) {\r\n-        this.name = name;\r\n-    }\r\n-    \r\n-}\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.derivedid;\n+\n+import java.math.BigInteger;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+@Entity\n+public class EBigIntegerID {\n+    @Id\n+    private BigInteger  id;\n+\n+    private String name;\n+    \n+    public EBigIntegerID() {}\n+\n+\n+    public EBigIntegerID(BigInteger id) {\n+        this.id = id;\n+        this.name = \"BigIntegerID \"+id;\n+    }\n+\n+    public BigInteger getId() {\n+        return id;\n+    }\n+\n+    public void setId(BigInteger id) {\n+        this.id = id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+    \n+}"},{"sha":"d0f6b2f99a935f0083a36940c8dc0753459ceef9","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDBigDecimalID.java","status":"modified","additions":55,"deletions":55,"changes":110,"blob_url":"https://github.com/apache/openjpa/blob/5f8ad3e811f595cee6497953ce6c7989d3c5e3c8/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDBigDecimalID.java","raw_url":"https://github.com/apache/openjpa/raw/5f8ad3e811f595cee6497953ce6c7989d3c5e3c8/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDBigDecimalID.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDBigDecimalID.java?ref=5f8ad3e811f595cee6497953ce6c7989d3c5e3c8","patch":"@@ -1,55 +1,55 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one\r\n- * or more contributor license agreements.  See the NOTICE file\r\n- * distributed with this work for additional information\r\n- * regarding copyright ownership.  The ASF licenses this file\r\n- * to you under the Apache License, Version 2.0 (the\r\n- * \"License\"); you may not use this file except in compliance\r\n- * with the License.  You may obtain a copy of the License at\r\n- *\r\n- * http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing,\r\n- * software distributed under the License is distributed on an\r\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- * KIND, either express or implied.  See the License for the\r\n- * specific language governing permissions and limitations\r\n- * under the License.    \r\n- */\r\n-package org.apache.openjpa.persistence.derivedid;\r\n-\r\n-import javax.persistence.Entity;\r\n-import javax.persistence.Id;\r\n-import javax.persistence.OneToOne;\r\n-\r\n-@Entity\r\n-public class EDBigDecimalID {\r\n-    @Id\r\n-    @OneToOne\r\n-    private EBigDecimalID rid;    \r\n-\r\n-    private String name;\r\n-    \r\n-    public EDBigDecimalID() {}\r\n-    \r\n-    public EDBigDecimalID(EBigDecimalID rid) {\r\n-        this.rid = rid;\r\n-        this.name = \"Rel BigDecimalID \"+rid.getId();\r\n-    }\r\n-\r\n-    public EBigDecimalID getRid() {\r\n-        return rid;\r\n-    }\r\n-\r\n-    public void setRid(EBigDecimalID rid) {\r\n-        this.rid = rid;\r\n-    }\r\n-\r\n-    public String getName() {\r\n-        return name;\r\n-    }\r\n-\r\n-    public void setName(String name) {\r\n-        this.name = name;\r\n-    }\r\n-}\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.derivedid;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+import javax.persistence.OneToOne;\n+\n+@Entity\n+public class EDBigDecimalID {\n+    @Id\n+    @OneToOne\n+    private EBigDecimalID rid;    \n+\n+    private String name;\n+    \n+    public EDBigDecimalID() {}\n+    \n+    public EDBigDecimalID(EBigDecimalID rid) {\n+        this.rid = rid;\n+        this.name = \"Rel BigDecimalID \"+rid.getId();\n+    }\n+\n+    public EBigDecimalID getRid() {\n+        return rid;\n+    }\n+\n+    public void setRid(EBigDecimalID rid) {\n+        this.rid = rid;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+}"},{"sha":"72b767b6d2b16673a403f71c3e15474af7c03333","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDBigIntegerID.java","status":"modified","additions":55,"deletions":55,"changes":110,"blob_url":"https://github.com/apache/openjpa/blob/5f8ad3e811f595cee6497953ce6c7989d3c5e3c8/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDBigIntegerID.java","raw_url":"https://github.com/apache/openjpa/raw/5f8ad3e811f595cee6497953ce6c7989d3c5e3c8/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDBigIntegerID.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDBigIntegerID.java?ref=5f8ad3e811f595cee6497953ce6c7989d3c5e3c8","patch":"@@ -1,55 +1,55 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one\r\n- * or more contributor license agreements.  See the NOTICE file\r\n- * distributed with this work for additional information\r\n- * regarding copyright ownership.  The ASF licenses this file\r\n- * to you under the Apache License, Version 2.0 (the\r\n- * \"License\"); you may not use this file except in compliance\r\n- * with the License.  You may obtain a copy of the License at\r\n- *\r\n- * http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing,\r\n- * software distributed under the License is distributed on an\r\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- * KIND, either express or implied.  See the License for the\r\n- * specific language governing permissions and limitations\r\n- * under the License.    \r\n- */\r\n-package org.apache.openjpa.persistence.derivedid;\r\n-\r\n-import javax.persistence.Entity;\r\n-import javax.persistence.Id;\r\n-import javax.persistence.OneToOne;\r\n-\r\n-@Entity\r\n-public class EDBigIntegerID {\r\n-    @Id\r\n-    @OneToOne\r\n-    private EBigIntegerID rid;    \r\n-\r\n-    private String name;\r\n-    \r\n-    public EDBigIntegerID() {}\r\n-    \r\n-    public EDBigIntegerID(EBigIntegerID rid) {\r\n-        this.rid = rid;\r\n-        this.name = \"Rel BigIntegerID \"+rid.getId();\r\n-    }\r\n-\r\n-    public EBigIntegerID getRid() {\r\n-        return rid;\r\n-    }\r\n-\r\n-    public void setRid(EBigIntegerID rid) {\r\n-        this.rid = rid;\r\n-    }\r\n-\r\n-    public String getName() {\r\n-        return name;\r\n-    }\r\n-\r\n-    public void setName(String name) {\r\n-        this.name = name;\r\n-    }\r\n-}\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.derivedid;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+import javax.persistence.OneToOne;\n+\n+@Entity\n+public class EDBigIntegerID {\n+    @Id\n+    @OneToOne\n+    private EBigIntegerID rid;    \n+\n+    private String name;\n+    \n+    public EDBigIntegerID() {}\n+    \n+    public EDBigIntegerID(EBigIntegerID rid) {\n+        this.rid = rid;\n+        this.name = \"Rel BigIntegerID \"+rid.getId();\n+    }\n+\n+    public EBigIntegerID getRid() {\n+        return rid;\n+    }\n+\n+    public void setRid(EBigIntegerID rid) {\n+        this.rid = rid;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+}"},{"sha":"528abe24cf291f0ed5ea254604d16fb6f6f2df7c","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDDateID.java","status":"modified","additions":55,"deletions":55,"changes":110,"blob_url":"https://github.com/apache/openjpa/blob/5f8ad3e811f595cee6497953ce6c7989d3c5e3c8/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDDateID.java","raw_url":"https://github.com/apache/openjpa/raw/5f8ad3e811f595cee6497953ce6c7989d3c5e3c8/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDDateID.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDDateID.java?ref=5f8ad3e811f595cee6497953ce6c7989d3c5e3c8","patch":"@@ -1,55 +1,55 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one\r\n- * or more contributor license agreements.  See the NOTICE file\r\n- * distributed with this work for additional information\r\n- * regarding copyright ownership.  The ASF licenses this file\r\n- * to you under the Apache License, Version 2.0 (the\r\n- * \"License\"); you may not use this file except in compliance\r\n- * with the License.  You may obtain a copy of the License at\r\n- *\r\n- * http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing,\r\n- * software distributed under the License is distributed on an\r\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- * KIND, either express or implied.  See the License for the\r\n- * specific language governing permissions and limitations\r\n- * under the License.    \r\n- */\r\n-package org.apache.openjpa.persistence.derivedid;\r\n-\r\n-import javax.persistence.Entity;\r\n-import javax.persistence.Id;\r\n-import javax.persistence.OneToOne;\r\n-\r\n-@Entity\r\n-public class EDDateID {\r\n-    @Id\r\n-    @OneToOne\r\n-    private EDateID rid;    \r\n-\r\n-    private String name;\r\n-    \r\n-    public EDDateID() {}\r\n-    \r\n-    public EDDateID(EDateID rid) {\r\n-        this.rid = rid;\r\n-        this.name = \"Rel DateID \"+rid.getId();\r\n-    }\r\n-\r\n-    public EDateID getRid() {\r\n-        return rid;\r\n-    }\r\n-\r\n-    public void setRid(EDateID rid) {\r\n-        this.rid = rid;\r\n-    }\r\n-\r\n-    public String getName() {\r\n-        return name;\r\n-    }\r\n-\r\n-    public void setName(String name) {\r\n-        this.name = name;\r\n-    }\r\n-}\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.derivedid;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+import javax.persistence.OneToOne;\n+\n+@Entity\n+public class EDDateID {\n+    @Id\n+    @OneToOne\n+    private EDateID rid;    \n+\n+    private String name;\n+    \n+    public EDDateID() {}\n+    \n+    public EDDateID(EDateID rid) {\n+        this.rid = rid;\n+        this.name = \"Rel DateID \"+rid.getId();\n+    }\n+\n+    public EDateID getRid() {\n+        return rid;\n+    }\n+\n+    public void setRid(EDateID rid) {\n+        this.rid = rid;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+}"},{"sha":"c77f3166375d21dcb60f19594dc587a4b7d5fd43","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDSQLDateID.java","status":"modified","additions":55,"deletions":55,"changes":110,"blob_url":"https://github.com/apache/openjpa/blob/5f8ad3e811f595cee6497953ce6c7989d3c5e3c8/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDSQLDateID.java","raw_url":"https://github.com/apache/openjpa/raw/5f8ad3e811f595cee6497953ce6c7989d3c5e3c8/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDSQLDateID.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDSQLDateID.java?ref=5f8ad3e811f595cee6497953ce6c7989d3c5e3c8","patch":"@@ -1,55 +1,55 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one\r\n- * or more contributor license agreements.  See the NOTICE file\r\n- * distributed with this work for additional information\r\n- * regarding copyright ownership.  The ASF licenses this file\r\n- * to you under the Apache License, Version 2.0 (the\r\n- * \"License\"); you may not use this file except in compliance\r\n- * with the License.  You may obtain a copy of the License at\r\n- *\r\n- * http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing,\r\n- * software distributed under the License is distributed on an\r\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- * KIND, either express or implied.  See the License for the\r\n- * specific language governing permissions and limitations\r\n- * under the License.    \r\n- */\r\n-package org.apache.openjpa.persistence.derivedid;\r\n-\r\n-import javax.persistence.Entity;\r\n-import javax.persistence.Id;\r\n-import javax.persistence.OneToOne;\r\n-\r\n-@Entity\r\n-public class EDSQLDateID {\r\n-    @Id\r\n-    @OneToOne\r\n-    private ESQLDateID rid;    \r\n-\r\n-    private String name;\r\n-    \r\n-    public EDSQLDateID() {}\r\n-    \r\n-    public EDSQLDateID(ESQLDateID rid) {\r\n-        this.rid = rid;\r\n-        this.name = \"Rel SQLDateID \"+rid.getId();\r\n-    }\r\n-\r\n-    public ESQLDateID getRid() {\r\n-        return rid;\r\n-    }\r\n-\r\n-    public void setRid(ESQLDateID rid) {\r\n-        this.rid = rid;\r\n-    }\r\n-\r\n-    public String getName() {\r\n-        return name;\r\n-    }\r\n-\r\n-    public void setName(String name) {\r\n-        this.name = name;\r\n-    }\r\n-}\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.derivedid;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+import javax.persistence.OneToOne;\n+\n+@Entity\n+public class EDSQLDateID {\n+    @Id\n+    @OneToOne\n+    private ESQLDateID rid;    \n+\n+    private String name;\n+    \n+    public EDSQLDateID() {}\n+    \n+    public EDSQLDateID(ESQLDateID rid) {\n+        this.rid = rid;\n+        this.name = \"Rel SQLDateID \"+rid.getId();\n+    }\n+\n+    public ESQLDateID getRid() {\n+        return rid;\n+    }\n+\n+    public void setRid(ESQLDateID rid) {\n+        this.rid = rid;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+}"},{"sha":"9a9a5cb85a81e7096b5fe748e63bd0cef2f6af54","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDateID.java","status":"modified","additions":54,"deletions":54,"changes":108,"blob_url":"https://github.com/apache/openjpa/blob/5f8ad3e811f595cee6497953ce6c7989d3c5e3c8/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDateID.java","raw_url":"https://github.com/apache/openjpa/raw/5f8ad3e811f595cee6497953ce6c7989d3c5e3c8/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDateID.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDateID.java?ref=5f8ad3e811f595cee6497953ce6c7989d3c5e3c8","patch":"@@ -1,54 +1,54 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one\r\n- * or more contributor license agreements.  See the NOTICE file\r\n- * distributed with this work for additional information\r\n- * regarding copyright ownership.  The ASF licenses this file\r\n- * to you under the Apache License, Version 2.0 (the\r\n- * \"License\"); you may not use this file except in compliance\r\n- * with the License.  You may obtain a copy of the License at\r\n- *\r\n- * http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing,\r\n- * software distributed under the License is distributed on an\r\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- * KIND, either express or implied.  See the License for the\r\n- * specific language governing permissions and limitations\r\n- * under the License.    \r\n- */\r\n-package org.apache.openjpa.persistence.derivedid;\r\n-\r\n-import java.util.Date;\r\n-\r\n-import javax.persistence.Entity;\r\n-import javax.persistence.Id;\r\n-\r\n-@Entity\r\n-public class EDateID {\r\n-    @Id\r\n-    private Date  id; \r\n-    private String name;\r\n-    \r\n-    public EDateID() {}\r\n-\r\n-    public EDateID(Date id) {\r\n-        this.id = id;\r\n-        this.name = \"DateID \"+id;\r\n-    }\r\n-\r\n-    public Date getId() {\r\n-        return id;\r\n-    }\r\n-\r\n-    public void setId(Date id) {\r\n-        this.id = id;\r\n-    }\r\n-\r\n-    public String getName() {\r\n-        return name;\r\n-    }\r\n-\r\n-    public void setName(String name) {\r\n-        this.name = name;\r\n-    }\r\n-}\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.derivedid;\n+\n+import java.util.Date;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+\n+@Entity\n+public class EDateID {\n+    @Id\n+    private Date  id; \n+    private String name;\n+    \n+    public EDateID() {}\n+\n+    public EDateID(Date id) {\n+        this.id = id;\n+        this.name = \"DateID \"+id;\n+    }\n+\n+    public Date getId() {\n+        return id;\n+    }\n+\n+    public void setId(Date id) {\n+        this.id = id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+}"},{"sha":"45c693701ee60c63cf553977ba9ff5d948093c38","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/ESQLDateID.java","status":"modified","additions":53,"deletions":53,"changes":106,"blob_url":"https://github.com/apache/openjpa/blob/5f8ad3e811f595cee6497953ce6c7989d3c5e3c8/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/ESQLDateID.java","raw_url":"https://github.com/apache/openjpa/raw/5f8ad3e811f595cee6497953ce6c7989d3c5e3c8/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/ESQLDateID.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/ESQLDateID.java?ref=5f8ad3e811f595cee6497953ce6c7989d3c5e3c8","patch":"@@ -1,53 +1,53 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one\r\n- * or more contributor license agreements.  See the NOTICE file\r\n- * distributed with this work for additional information\r\n- * regarding copyright ownership.  The ASF licenses this file\r\n- * to you under the Apache License, Version 2.0 (the\r\n- * \"License\"); you may not use this file except in compliance\r\n- * with the License.  You may obtain a copy of the License at\r\n- *\r\n- * http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing,\r\n- * software distributed under the License is distributed on an\r\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- * KIND, either express or implied.  See the License for the\r\n- * specific language governing permissions and limitations\r\n- * under the License.    \r\n- */\r\n-package org.apache.openjpa.persistence.derivedid;\r\n-\r\n-import java.sql.Date;\r\n-\r\n-import javax.persistence.Entity;\r\n-import javax.persistence.Id;\r\n-@Entity\r\n-public class ESQLDateID {\r\n-    @Id\r\n-    private Date  id;\r\n-    private String name;\r\n-    \r\n-    public ESQLDateID() {}\r\n-\r\n-    public ESQLDateID(Date id) {\r\n-        this.id = id;\r\n-        this.name = \"SQLDateID \"+id;\r\n-    }\r\n-\r\n-    public Date getId() {\r\n-        return id;\r\n-    }\r\n-\r\n-    public void setId(Date id) {\r\n-        this.id = id;\r\n-    }\r\n-\r\n-    public String getName() {\r\n-        return name;\r\n-    }\r\n-\r\n-    public void setName(String name) {\r\n-        this.name = name;\r\n-    }\r\n-}\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.derivedid;\n+\n+import java.sql.Date;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+@Entity\n+public class ESQLDateID {\n+    @Id\n+    private Date  id;\n+    private String name;\n+    \n+    public ESQLDateID() {}\n+\n+    public ESQLDateID(Date id) {\n+        this.id = id;\n+        this.name = \"SQLDateID \"+id;\n+    }\n+\n+    public Date getId() {\n+        return id;\n+    }\n+\n+    public void setId(Date id) {\n+        this.id = id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+}"},{"sha":"d2546d743130ddb7a361505703989fa9a3fee6a5","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/TestDerivedIdentity.java","status":"modified","additions":123,"deletions":123,"changes":246,"blob_url":"https://github.com/apache/openjpa/blob/5f8ad3e811f595cee6497953ce6c7989d3c5e3c8/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/TestDerivedIdentity.java","raw_url":"https://github.com/apache/openjpa/raw/5f8ad3e811f595cee6497953ce6c7989d3c5e3c8/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/TestDerivedIdentity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/TestDerivedIdentity.java?ref=5f8ad3e811f595cee6497953ce6c7989d3c5e3c8","patch":"@@ -1,123 +1,123 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one\r\n- * or more contributor license agreements.  See the NOTICE file\r\n- * distributed with this work for additional information\r\n- * regarding copyright ownership.  The ASF licenses this file\r\n- * to you under the Apache License, Version 2.0 (the\r\n- * \"License\"); you may not use this file except in compliance\r\n- * with the License.  You may obtain a copy of the License at\r\n- *\r\n- * http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing,\r\n- * software distributed under the License is distributed on an\r\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- * KIND, either express or implied.  See the License for the\r\n- * specific language governing permissions and limitations\r\n- * under the License.    \r\n- */\r\n-package org.apache.openjpa.persistence.derivedid;\r\n-\r\n-import java.math.BigDecimal;\r\n-import java.math.BigInteger;\r\n-import java.util.Date;\r\n-import java.util.List;\r\n-\r\n-import javax.persistence.EntityManager;\r\n-import javax.persistence.Query;\r\n-\r\n-import org.apache.openjpa.persistence.test.SQLListenerTestCase;\r\n-\r\n-public class TestDerivedIdentity  extends SQLListenerTestCase {\r\n-\r\n-    public void setUp() {\r\n-        setUp(EBigDecimalID.class, EDBigDecimalID.class,\r\n-            EBigIntegerID.class, EDBigIntegerID.class,\r\n-            EDateID.class, EDDateID.class,\r\n-            ESQLDateID.class, EDSQLDateID.class,\r\n-            CLEAR_TABLES);\r\n-        populate();\r\n-    }\r\n-\r\n-    public void populate() {\r\n-        EntityManager em = emf.createEntityManager();\r\n-        \r\n-        for (int i = 0; i < 2; i++) {\r\n-            long time = (long) (System.currentTimeMillis() / 1000)+i*1317;\r\n-            BigDecimal did = new BigDecimal(time);            \r\n-            EBigDecimalID e1 = new EBigDecimalID(did);\r\n-            EDBigDecimalID e2 = new EDBigDecimalID(e1);\r\n-            em.persist(e1);\r\n-            em.persist(e2);\r\n-\r\n-            int time2 = (int) (System.currentTimeMillis() / 1000)+i*7131;\r\n-            BigInteger iid = new BigInteger(Integer.toString(time2));\r\n-            EBigIntegerID e3 = new EBigIntegerID(iid);\r\n-            EDBigIntegerID e4 = new EDBigIntegerID(e3);\r\n-            em.persist(e3);\r\n-            em.persist(e4);\r\n-\r\n-            Date id = new Date(time);\r\n-            EDateID e5 = new EDateID(id);\r\n-            EDDateID e6 = new EDDateID(e5);\r\n-            em.persist(e5);\r\n-            em.persist(e6);\r\n-            \r\n-            if (i == 0) {\r\n-                java.sql.Date sid = new java.sql.Date(time);\r\n-                ESQLDateID e7 = new ESQLDateID(sid);\r\n-                EDSQLDateID e8 = new EDSQLDateID(e7);\r\n-                em.persist(e7);\r\n-                em.persist(e8);\r\n-            }\r\n-        }\r\n-        \r\n-        em.getTransaction().begin();\r\n-        em.getTransaction().commit();\r\n-        em.close();\r\n-    }\r\n-\r\n-    public void testDerivedIdentity() {\r\n-        EntityManager em = emf.createEntityManager();\r\n-        Query query = null;\r\n-        String str[] = {\r\n-            \"select e from EDDateID e\",\r\n-            \"select e from EDBigDecimalID e\",\r\n-            \"select e from EDBigIntegerID e\",\r\n-            \"select e from EDSQLDateID e\",\r\n-            \"select e from EDDateID e join fetch e.rid\",\r\n-            \"select e from EDBigDecimalID e join fetch e.rid\",\r\n-            \"select e from EDBigIntegerID e join fetch e.rid\",\r\n-            \"select e from EDSQLDateID e join fetch e.rid\",\r\n-        };\r\n-        for (int i = 0; i < str.length; i++) {\r\n-            query = em.createQuery(str[i]);\r\n-            List rs = query.getResultList();\r\n-            assertTrue(rs.size() > 0);\r\n-            for (int j = 0; j < rs.size(); j++) {\r\n-                Object e = rs.get(j);\r\n-                String name = null;\r\n-                Object oid = null;\r\n-                if (e instanceof EDDateID) {\r\n-                    name = ((EDDateID)e).getName();\r\n-                    oid = ((EDDateID)e).getRid().getId();\r\n-                } else if (e instanceof EDBigDecimalID) {\r\n-                    name = ((EDBigDecimalID)e).getName();\r\n-                    oid = ((EDBigDecimalID)e).getRid().getId();\r\n-                } else if (e instanceof EDBigIntegerID) {\r\n-                    name = ((EDBigIntegerID)e).getName();\r\n-                    oid = ((EDBigIntegerID)e).getRid().getId();\r\n-                } else if (e instanceof EDSQLDateID) {\r\n-                    name = ((EDSQLDateID)e).getName();\r\n-                    oid = ((EDSQLDateID)e).getRid().getId();\r\n-                }\r\n-                //System.out.println(name);\r\n-                //System.out.println(oid.toString());\r\n-                assertTrue(name.startsWith(\"Rel\"));\r\n-            }\r\n-        }\r\n-        \r\n-        em.close();\r\n-    }\r\n-}\r\n-\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.derivedid;\n+\n+import java.math.BigDecimal;\n+import java.math.BigInteger;\n+import java.util.Date;\n+import java.util.List;\n+\n+import javax.persistence.EntityManager;\n+import javax.persistence.Query;\n+\n+import org.apache.openjpa.persistence.test.SQLListenerTestCase;\n+\n+public class TestDerivedIdentity  extends SQLListenerTestCase {\n+\n+    public void setUp() {\n+        setUp(EBigDecimalID.class, EDBigDecimalID.class,\n+            EBigIntegerID.class, EDBigIntegerID.class,\n+            EDateID.class, EDDateID.class,\n+            ESQLDateID.class, EDSQLDateID.class,\n+            CLEAR_TABLES);\n+        populate();\n+    }\n+\n+    public void populate() {\n+        EntityManager em = emf.createEntityManager();\n+        \n+        for (int i = 0; i < 2; i++) {\n+            long time = (long) (System.currentTimeMillis() / 1000)+i*1317;\n+            BigDecimal did = new BigDecimal(time);            \n+            EBigDecimalID e1 = new EBigDecimalID(did);\n+            EDBigDecimalID e2 = new EDBigDecimalID(e1);\n+            em.persist(e1);\n+            em.persist(e2);\n+\n+            int time2 = (int) (System.currentTimeMillis() / 1000)+i*7131;\n+            BigInteger iid = new BigInteger(Integer.toString(time2));\n+            EBigIntegerID e3 = new EBigIntegerID(iid);\n+            EDBigIntegerID e4 = new EDBigIntegerID(e3);\n+            em.persist(e3);\n+            em.persist(e4);\n+\n+            Date id = new Date(time);\n+            EDateID e5 = new EDateID(id);\n+            EDDateID e6 = new EDDateID(e5);\n+            em.persist(e5);\n+            em.persist(e6);\n+            \n+            if (i == 0) {\n+                java.sql.Date sid = new java.sql.Date(time);\n+                ESQLDateID e7 = new ESQLDateID(sid);\n+                EDSQLDateID e8 = new EDSQLDateID(e7);\n+                em.persist(e7);\n+                em.persist(e8);\n+            }\n+        }\n+        \n+        em.getTransaction().begin();\n+        em.getTransaction().commit();\n+        em.close();\n+    }\n+\n+    public void testDerivedIdentity() {\n+        EntityManager em = emf.createEntityManager();\n+        Query query = null;\n+        String str[] = {\n+            \"select e from EDDateID e\",\n+            \"select e from EDBigDecimalID e\",\n+            \"select e from EDBigIntegerID e\",\n+            \"select e from EDSQLDateID e\",\n+            \"select e from EDDateID e join fetch e.rid\",\n+            \"select e from EDBigDecimalID e join fetch e.rid\",\n+            \"select e from EDBigIntegerID e join fetch e.rid\",\n+            \"select e from EDSQLDateID e join fetch e.rid\",\n+        };\n+        for (int i = 0; i < str.length; i++) {\n+            query = em.createQuery(str[i]);\n+            List rs = query.getResultList();\n+            assertTrue(rs.size() > 0);\n+            for (int j = 0; j < rs.size(); j++) {\n+                Object e = rs.get(j);\n+                String name = null;\n+                Object oid = null;\n+                if (e instanceof EDDateID) {\n+                    name = ((EDDateID)e).getName();\n+                    oid = ((EDDateID)e).getRid().getId();\n+                } else if (e instanceof EDBigDecimalID) {\n+                    name = ((EDBigDecimalID)e).getName();\n+                    oid = ((EDBigDecimalID)e).getRid().getId();\n+                } else if (e instanceof EDBigIntegerID) {\n+                    name = ((EDBigIntegerID)e).getName();\n+                    oid = ((EDBigIntegerID)e).getRid().getId();\n+                } else if (e instanceof EDSQLDateID) {\n+                    name = ((EDSQLDateID)e).getName();\n+                    oid = ((EDSQLDateID)e).getRid().getId();\n+                }\n+                //System.out.println(name);\n+                //System.out.println(oid.toString());\n+                assertTrue(name.startsWith(\"Rel\"));\n+            }\n+        }\n+        \n+        em.close();\n+    }\n+}\n+"}]}

