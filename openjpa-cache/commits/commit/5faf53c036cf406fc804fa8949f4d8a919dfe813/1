{"sha":"5faf53c036cf406fc804fa8949f4d8a919dfe813","node_id":"MDY6Q29tbWl0MjA2MzY0OjVmYWY1M2MwMzZjZjQwNmZjODA0ZmE4OTQ5ZjRkOGE5MTlkZmU4MTM=","commit":{"author":{"name":"Romain Manni-Bucau","email":"rmannibucau@apache.org","date":"2016-08-23T07:57:38Z"},"committer":{"name":"Romain Manni-Bucau","email":"rmannibucau@apache.org","date":"2016-08-23T07:57:38Z"},"message":"OPENJPA-2300 avoid warnings due to annotation processor\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1757320 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"d867095f10ceb410c9143a9f3cc60e9e120672ec","url":"https://api.github.com/repos/apache/openjpa/git/trees/d867095f10ceb410c9143a9f3cc60e9e120672ec"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/5faf53c036cf406fc804fa8949f4d8a919dfe813","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/5faf53c036cf406fc804fa8949f4d8a919dfe813","html_url":"https://github.com/apache/openjpa/commit/5faf53c036cf406fc804fa8949f4d8a919dfe813","comments_url":"https://api.github.com/repos/apache/openjpa/commits/5faf53c036cf406fc804fa8949f4d8a919dfe813/comments","author":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","site_admin":false},"committer":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","site_admin":false},"parents":[{"sha":"f85e0347d6a4c92d502e1268c1c4a32bcb90458b","url":"https://api.github.com/repos/apache/openjpa/commits/f85e0347d6a4c92d502e1268c1c4a32bcb90458b","html_url":"https://github.com/apache/openjpa/commit/f85e0347d6a4c92d502e1268c1c4a32bcb90458b"}],"stats":{"total":24,"additions":19,"deletions":5},"files":[{"sha":"f048ad683cd82f113b8df57e53a3a0e259eb648f","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/meta/AnnotationProcessor6.java","status":"modified","additions":19,"deletions":5,"changes":24,"blob_url":"https://github.com/apache/openjpa/blob/5faf53c036cf406fc804fa8949f4d8a919dfe813/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/meta/AnnotationProcessor6.java","raw_url":"https://github.com/apache/openjpa/raw/5faf53c036cf406fc804fa8949f4d8a919dfe813/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/meta/AnnotationProcessor6.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/meta/AnnotationProcessor6.java?ref=5faf53c036cf406fc804fa8949f4d8a919dfe813","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.openjpa.persistence.meta;\n \n-import static javax.lang.featureSelection.SourceVersion.RELEASE_6;\n-\n import java.io.IOException;\n import java.io.InputStream;\n import java.io.PrintWriter;\n@@ -38,7 +36,7 @@\n import javax.annotation.processing.RoundEnvironment;\n import javax.annotation.processing.SupportedAnnotationTypes;\n import javax.annotation.processing.SupportedOptions;\n-import javax.annotation.processing.SupportedSourceVersion;\n+import javax.lang.featureSelection.SourceVersion;\n import javax.lang.featureSelection.element.Element;\n import javax.lang.featureSelection.element.TypeElement;\n import javax.lang.featureSelection.type.TypeKind;\n@@ -103,7 +101,6 @@\n                     \"openjpa.header\",\n                     \"openjpa.metamodel\"\n                   })\n-@SupportedSourceVersion(RELEASE_6)\n \n public class AnnotationProcessor6 extends AbstractProcessor {\n     private SourceAnnotationHandler handler;\n@@ -113,6 +110,7 @@\n     private List<String> header = new ArrayList<String>();\n     private boolean active;\n     private static Localizer _loc =  Localizer.forPackage(AnnotationProcessor6.class);\n+    private SourceVersion supportedSourceVersion;\n \n     /**\n      * Category of members as per JPA 2.0 type system.\n@@ -183,7 +181,15 @@ private TypeCategory toMetaModelTypeCategory(TypeMirror mirror,\n             return TypeCategory.MAP;\n         return TypeCategory.ATTRIBUTE;\n     }\n-    \n+\n+    @Override\n+    public SourceVersion getSupportedSourceVersion() {\n+        if (supportedSourceVersion != null) {\n+            return supportedSourceVersion;\n+        }\n+        return SourceVersion.latestSupported();\n+    }\n+\n     /**\n      * Initialization.\n      */\n@@ -193,6 +199,14 @@ public synchronized void init(ProcessingEnvironment processingEnv) {\n         active = \"true\".equalsIgnoreCase(getOptionValue(\"openjpa.metamodel\"));\n         if (!active)\n             return;\n+\n+        final String supported = getOptionValue(\"openjpa.processor.supportedversion\");\n+        if (supported != null) {\n+            supportedSourceVersion = SourceVersion.valueOf(supported);\n+        } else { // default to ensure we don't log a false warning for every compilation, see OPENJPA-2300\n+            supportedSourceVersion = SourceVersion.latestSupported();\n+        }\n+\n         processingEnv.getMessager().printMessage(Diagnostic.Kind.NOTE, _loc.get(\"mmg-tool-banner\").toString());\n         logger = new CompileTimeLogger(processingEnv, getOptionValue(\"openjpa.log\"));\n         setSourceVersion();"}]}

