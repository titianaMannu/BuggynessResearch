{"sha":"5fb9e7172681211588a526257d8c5a1bb5111530","node_id":"MDY6Q29tbWl0MjA2MzY0OjVmYjllNzE3MjY4MTIxMTU4OGE1MjYyNTdkOGM1YTFiYjUxMTE1MzA=","commit":{"author":{"name":"Heath Thomann","email":"hthomann@apache.org","date":"2012-05-31T21:17:41Z"},"committer":{"name":"Heath Thomann","email":"hthomann@apache.org","date":"2012-05-31T21:17:41Z"},"message":"OPENJPA-2072: Applied Helen Xu's patch to trunk, and applied test case changes as Albert had done in JIRA OPENJPA-2095 for issue with using Test* in entity name.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1344914 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"b0f7f675ef3bb5d08a0c545c102b9c281fc418cb","url":"https://api.github.com/repos/apache/openjpa/git/trees/b0f7f675ef3bb5d08a0c545c102b9c281fc418cb"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/5fb9e7172681211588a526257d8c5a1bb5111530","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/5fb9e7172681211588a526257d8c5a1bb5111530","html_url":"https://github.com/apache/openjpa/commit/5fb9e7172681211588a526257d8c5a1bb5111530","comments_url":"https://api.github.com/repos/apache/openjpa/commits/5fb9e7172681211588a526257d8c5a1bb5111530/comments","author":null,"committer":null,"parents":[{"sha":"ebe06fdf352a63c3152874b3efdc4960108cf3b5","url":"https://api.github.com/repos/apache/openjpa/commits/ebe06fdf352a63c3152874b3efdc4960108cf3b5","html_url":"https://github.com/apache/openjpa/commit/ebe06fdf352a63c3152874b3efdc4960108cf3b5"}],"stats":{"total":129,"additions":125,"deletions":4},"files":[{"sha":"7ae1f1b631e45d654a05acf3c75c694bcaf0422e","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","status":"modified","additions":5,"deletions":4,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/5fb9e7172681211588a526257d8c5a1bb5111530/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/5fb9e7172681211588a526257d8c5a1bb5111530/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java?ref=5fb9e7172681211588a526257d8c5a1bb5111530","patch":"@@ -1253,13 +1253,14 @@ public void setTimestamp(PreparedStatement stmnt, int idx,\n             val.setTime(val.getTime() + 1000);\n             nanos = 0;\n         }\n-\n-        val.setNanos(nanos);\n+        \n+        Timestamp valForStmnt = new Timestamp(val.getTime());\n+        valForStmnt.setNanos(nanos);\n \n         if (cal == null)\n-            stmnt.setTimestamp(idx, val);\n+            stmnt.setTimestamp(idx, valForStmnt);\n         else\n-            stmnt.setTimestamp(idx, val, cal);\n+            stmnt.setTimestamp(idx, valForStmnt, cal);\n     }\n \n     /**"},{"sha":"dcf309bd6c5cf07b40b3927dc11571bc68160ec8","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/TestTimestampPKDeletion.java","status":"added","additions":58,"deletions":0,"changes":58,"blob_url":"https://github.com/apache/openjpa/blob/5fb9e7172681211588a526257d8c5a1bb5111530/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/TestTimestampPKDeletion.java","raw_url":"https://github.com/apache/openjpa/raw/5fb9e7172681211588a526257d8c5a1bb5111530/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/TestTimestampPKDeletion.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/TestTimestampPKDeletion.java?ref=5fb9e7172681211588a526257d8c5a1bb5111530","patch":"@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.jdbc;\n+\n+import java.util.List;\n+\n+import javax.persistence.EntityManager;\n+import javax.persistence.EntityTransaction;\n+import javax.persistence.Query;\n+\n+import org.apache.openjpa.persistence.simple.EntityWithTimestampPK;\n+import org.apache.openjpa.persistence.test.SQLListenerTestCase;\n+\n+public class TestTimestampPKDeletion extends SQLListenerTestCase {\n+\n+    public void setUp() {\n+        setUp(EntityWithTimestampPK.class);\n+    }\n+\n+    public void testTimestampPKDeletion() {\n+        EntityWithTimestampPK testEntity = new EntityWithTimestampPK(\"test\");        \n+\n+        EntityManager em = emf.createEntityManager();\n+\n+        em.getTransaction().begin();\n+        em.persist(testEntity);\n+        em.getTransaction().commit();\n+        em.close();\n+        \n+        em = emf.createEntityManager();\n+        final EntityTransaction tx = em.getTransaction();\n+        tx.begin();       \n+        final Query q = em.createQuery(\"SELECT testEntity FROM EntityWithTimestampPK testEntity \");\n+       \n+        final List<EntityWithTimestampPK> testEntities = q.getResultList();\n+        for (EntityWithTimestampPK t : testEntities) {\n+              em.remove(t);\n+        }         \n+        tx.commit();\n+        em.close();\n+    }\n+}"},{"sha":"2c2fc3af58ec3c9938d23d02528bb643083ce90b","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/EntityWithTimestampPK.java","status":"added","additions":62,"deletions":0,"changes":62,"blob_url":"https://github.com/apache/openjpa/blob/5fb9e7172681211588a526257d8c5a1bb5111530/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/EntityWithTimestampPK.java","raw_url":"https://github.com/apache/openjpa/raw/5fb9e7172681211588a526257d8c5a1bb5111530/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/EntityWithTimestampPK.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/EntityWithTimestampPK.java?ref=5fb9e7172681211588a526257d8c5a1bb5111530","patch":"@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.simple;\n+\n+import java.sql.Timestamp;\n+import java.util.Date;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+\n+@Entity \n+public class EntityWithTimestampPK {\n+    \n+    @Id\n+    private Timestamp idTsp; \n+\n+    private String description;\n+\n+    public Timestamp getIdTsp() {\n+        return idTsp;\n+    }\n+\n+    public EntityWithTimestampPK(String desc) {\n+        super();\n+        this.idTsp = new Timestamp((new Date()).getTime());        \n+        this.description = desc;\n+    }\n+    \n+    public EntityWithTimestampPK(){\n+        \n+    }\n+\n+    public void setIdTsp(Timestamp idTsp) {\n+        this.idTsp = idTsp;\n+    }\n+\n+    public String getDesc() {\n+        return description;\n+    }\n+\n+    public void setDesc(String desc) {\n+        this.description = desc;\n+    }\n+     \n+     \n+}"}]}

