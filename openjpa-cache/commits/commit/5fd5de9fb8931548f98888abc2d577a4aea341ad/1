{"sha":"5fd5de9fb8931548f98888abc2d577a4aea341ad","node_id":"MDY6Q29tbWl0MjA2MzY0OjVmZDVkZTlmYjg5MzE1NDhmOTg4ODhhYmMyZDU3N2E0YWVhMzQxYWQ=","commit":{"author":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2021-04-06T20:29:16Z"},"committer":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2021-04-06T20:29:16Z"},"message":"OPENJPA-2862 select SUM return types fixed\n\nAs per spec section 4.8.5 Aggregate Functions in the SELECT\nclause we need to handle a few types in a special way","tree":{"sha":"27f6e2e4f4d491bd400f25d905ecc6a2ef3343cb","url":"https://api.github.com/repos/apache/openjpa/git/trees/27f6e2e4f4d491bd400f25d905ecc6a2ef3343cb"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/5fd5de9fb8931548f98888abc2d577a4aea341ad","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/5fd5de9fb8931548f98888abc2d577a4aea341ad","html_url":"https://github.com/apache/openjpa/commit/5fd5de9fb8931548f98888abc2d577a4aea341ad","comments_url":"https://api.github.com/repos/apache/openjpa/commits/5fd5de9fb8931548f98888abc2d577a4aea341ad/comments","author":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"committer":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"parents":[{"sha":"bb5503b1471b5ce5a2969d12451eced8c0c65b19","url":"https://api.github.com/repos/apache/openjpa/commits/bb5503b1471b5ce5a2969d12451eced8c0c65b19","html_url":"https://github.com/apache/openjpa/commit/bb5503b1471b5ce5a2969d12451eced8c0c65b19"}],"stats":{"total":23,"additions":18,"deletions":5},"files":[{"sha":"9a7e00cb81ccc5d3d7a3942b05f0c1af4180cdea","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/Sum.java","status":"modified","additions":18,"deletions":5,"changes":23,"blob_url":"https://github.com/apache/openjpa/blob/5fd5de9fb8931548f98888abc2d577a4aea341ad/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/Sum.java","raw_url":"https://github.com/apache/openjpa/raw/5fd5de9fb8931548f98888abc2d577a4aea341ad/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/Sum.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/Sum.java?ref=5fd5de9fb8931548f98888abc2d577a4aea341ad","patch":"@@ -35,13 +35,26 @@ public Sum(Val val) {\n         super(val);\n     }\n \n+    /**\n+     * As per spec section 4.8.5 Aggregate Functions in the SELECT Clause we\n+     * need to handle a few types in a special way.\n+     */\n     @Override\n     protected Class getType(Class c) {\n-        Class wrap = Filters.wrap(c);\n-        if (wrap == Integer.class\n-            || wrap == Short.class\n-            || wrap == Byte.class)\n-            return long.class;\n+        if (c == Integer.class ||\n+            c == int.class ||\n+            c == Short.class ||\n+            c == short.class ||\n+            c == Byte.class ||\n+            c == byte.class) {\n+            return Long.class;\n+        }\n+        if (c == Float.class ||\n+            c == float.class ||\n+            c == Double.class ||\n+            c == double.class ) {\n+            return Double.class;\n+        }\n         return c;\n     }\n "}]}

