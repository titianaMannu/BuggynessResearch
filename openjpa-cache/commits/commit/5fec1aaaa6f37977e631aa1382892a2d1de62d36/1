{"sha":"5fec1aaaa6f37977e631aa1382892a2d1de62d36","node_id":"MDY6Q29tbWl0MjA2MzY0OjVmZWMxYWFhYTZmMzc5NzdlNjMxYWExMzgyODkyYTJkMWRlNjJkMzY=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2010-03-12T16:15:31Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2010-03-12T16:15:31Z"},"message":"Print unenhanced classes one per line for better readability.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@922312 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"5a7be3c444ad792bf7ee60046ec8d0be73913df1","url":"https://api.github.com/repos/apache/openjpa/git/trees/5a7be3c444ad792bf7ee60046ec8d0be73913df1"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/5fec1aaaa6f37977e631aa1382892a2d1de62d36","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/5fec1aaaa6f37977e631aa1382892a2d1de62d36","html_url":"https://github.com/apache/openjpa/commit/5fec1aaaa6f37977e631aa1382892a2d1de62d36","comments_url":"https://api.github.com/repos/apache/openjpa/commits/5fec1aaaa6f37977e631aa1382892a2d1de62d36/comments","author":null,"committer":null,"parents":[{"sha":"732ff354b38ef9335d4ccffc40eedc1a909059bd","url":"https://api.github.com/repos/apache/openjpa/commits/732ff354b38ef9335d4ccffc40eedc1a909059bd","html_url":"https://github.com/apache/openjpa/commit/732ff354b38ef9335d4ccffc40eedc1a909059bd"}],"stats":{"total":19,"additions":10,"deletions":9},"files":[{"sha":"89630dcc2ed96880caf74f22f1c436a3015727ab","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/enhance/ManagedClassSubclasser.java","status":"modified","additions":10,"deletions":9,"changes":19,"blob_url":"https://github.com/apache/openjpa/blob/5fec1aaaa6f37977e631aa1382892a2d1de62d36/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/ManagedClassSubclasser.java","raw_url":"https://github.com/apache/openjpa/raw/5fec1aaaa6f37977e631aa1382892a2d1de62d36/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/ManagedClassSubclasser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/ManagedClassSubclasser.java?ref=5fec1aaaa6f37977e631aa1382892a2d1de62d36","patch":"@@ -40,6 +40,7 @@\n import org.apache.openjpa.meta.ClassMetaData;\n import org.apache.openjpa.meta.FieldMetaData;\n import org.apache.openjpa.meta.JavaTypes;\n+import org.apache.openjpa.util.Exceptions;\n import org.apache.openjpa.util.GeneratedClasses;\n import org.apache.openjpa.util.ImplHelper;\n import org.apache.openjpa.util.InternalException;\n@@ -108,23 +109,22 @@\n                             + unenhanced.toString());\n                     }\n                 }\n-                Message msg = _loc.get(\"runtime-optimization-disabled\",\n-                    unenhanced);\n-                if (conf.getRuntimeUnenhancedClassesConstant()\n-                    == RuntimeUnenhancedClassesModes.WARN)\n+                Message msg = _loc.get(\"runtime-optimization-disabled\", Exceptions.toClassNames(unenhanced));\n+                if (conf.getRuntimeUnenhancedClassesConstant() == RuntimeUnenhancedClassesModes.WARN) {\n                     log.warn(msg);\n-                else\n+                } else {\n                     throw new UserException(msg);\n+                }\n             }\n             return null;\n         }\n \n         boolean redefine = ClassRedefiner.canRedefineClasses(log);\n-        if (redefine)\n+        if (redefine) {\n             log.info(_loc.get(\"enhance-and-subclass-and-redef-start\", classes));\n-        else\n+        } else {\n             log.info(_loc.get(\"enhance-and-subclass-no-redef-start\",  classes));\n-\n+        }\n         final Map<Class<?>, byte[]> map = new HashMap<Class<?>, byte[]>();\n         final List<Class<?>> subs = new ArrayList<Class<?>>(classes.size());\n         final List<Class<?>> ints = new ArrayList<Class<?>>(classes.size());\n@@ -171,7 +171,8 @@ public void write(BCClass bc) throws IOException {\n         }\n \n         if (unspecified != null && !unspecified.isEmpty())\n-            throw new UserException(_loc.get(\"unspecified-unenhanced-types\", classes, unspecified));\n+            throw new UserException(_loc.get(\"unspecified-unenhanced-types\", Exceptions.toClassNames(classes), \n+                    unspecified));\n \n         ClassRedefiner.redefineClasses(conf, map);\n         for (Class<?> cls : map.keySet()) {"}]}

