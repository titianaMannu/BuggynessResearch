{"sha":"610023adee027bfa7124b3764df0b8fed5e2a672","node_id":"MDY6Q29tbWl0MjA2MzY0OjYxMDAyM2FkZWUwMjdiZmE3MTI0YjM3NjRkZjBiOGZlZDVlMmE2NzI=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2008-08-08T08:53:35Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2008-08-08T08:53:35Z"},"message":"OPENJPA-678: Adding test case for query/named query\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@683914 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a5211f9b14288f782c679b5c6a5366c05f401331","url":"https://api.github.com/repos/apache/openjpa/git/trees/a5211f9b14288f782c679b5c6a5366c05f401331"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/610023adee027bfa7124b3764df0b8fed5e2a672","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/610023adee027bfa7124b3764df0b8fed5e2a672","html_url":"https://github.com/apache/openjpa/commit/610023adee027bfa7124b3764df0b8fed5e2a672","comments_url":"https://api.github.com/repos/apache/openjpa/commits/610023adee027bfa7124b3764df0b8fed5e2a672/comments","author":null,"committer":null,"parents":[{"sha":"9ebfe800a5cffc4116d0fa3023d8427d6a1a63bb","url":"https://api.github.com/repos/apache/openjpa/commits/9ebfe800a5cffc4116d0fa3023d8427d6a1a63bb","html_url":"https://github.com/apache/openjpa/commit/9ebfe800a5cffc4116d0fa3023d8427d6a1a63bb"}],"stats":{"total":36,"additions":36,"deletions":0},"files":[{"sha":"df3105c5ce30254c9de22b0c896feb40f4163075","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/exception/TestException.java","status":"modified","additions":36,"deletions":0,"changes":36,"blob_url":"https://github.com/apache/openjpa/blob/610023adee027bfa7124b3764df0b8fed5e2a672/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/exception/TestException.java","raw_url":"https://github.com/apache/openjpa/raw/610023adee027bfa7124b3764df0b8fed5e2a672/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/exception/TestException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/exception/TestException.java?ref=610023adee027bfa7124b3764df0b8fed5e2a672","patch":"@@ -26,11 +26,13 @@\n import javax.persistence.EntityManager;\r\n import javax.persistence.EntityNotFoundException;\r\n import javax.persistence.OptimisticLockException;\r\n+import javax.persistence.Query;\r\n import javax.persistence.TransactionRequiredException;\r\n \r\n import org.apache.openjpa.jdbc.sql.DBDictionary;\r\n import org.apache.openjpa.jdbc.sql.SQLErrorCodeReader;\r\n import org.apache.openjpa.persistence.test.SingleEMFTestCase;\r\n+import org.apache.openjpa.util.UserException;\r\n \r\n /**\r\n  * Tests proper JPA exceptions are raised by the implementation. \r\n@@ -157,6 +159,40 @@ public void testErrorCodeConfigurationHasAllKnownDictionaries() {\n \t\t}\r\n \t}\r\n \t\r\n+\t/**\r\n+\t * Invalid query does not throw IllegalArgumentException on construction \r\n+\t * as per JPA spec. The exception is thrown during execution.\r\n+\t * \r\n+\t * A patch\r\n+\t * <A HREF=\"http://issues.apache.org/jira/browse/OPENJPA-678\">OPENJPA-678</A>\r\n+\t * by Xiaoqin Feng has proposed eager compilation of the query to raise the\r\n+\t * error before execution and as per JPA spec. \r\n+\t * However, this patch has not yet been applied as eagerly compiling query\r\n+\t * has other side-effects. \r\n+\t * \r\n+\t */\r\n+\tpublic void testIllegalArgumennExceptionOnInvalidQuery() {\r\n+\t    EntityManager em = emf.createEntityManager();\r\n+\t    Query query = em.createQuery(\"This is not a valid JPQL query\");\r\n+\t    try {\r\n+\t\t   query.getResultList();\r\n+\t    } catch (Throwable t) {\r\n+\t\t   assertException(t, IllegalArgumentException.class);\r\n+\t    }\r\n+\t}\r\n+\t\r\n+\t/**\r\n+\t * Invalid named query fails as per spec on factory based construction. \r\n+\t */\r\n+     public void testIllegalArgumennExceptionOnInvalidNamedQuery() {\r\n+         EntityManager em = emf.createEntityManager();\r\n+         try {\r\n+             Query query = em.createNamedQuery(\"This is invalid Named query\");\r\n+         } catch (Throwable t) {\r\n+             assertException(t, IllegalArgumentException.class);\r\n+         }\r\n+      }\r\n+\t\r\n \t/**\r\n \t * Asserts that the given expected type of the exception is equal to or a\r\n \t * subclass of the given throwable or any of its nested exception.\r"}]}

