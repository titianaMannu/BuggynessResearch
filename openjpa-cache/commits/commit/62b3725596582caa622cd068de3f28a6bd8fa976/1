{"sha":"62b3725596582caa622cd068de3f28a6bd8fa976","node_id":"MDY6Q29tbWl0MjA2MzY0OjYyYjM3MjU1OTY1ODJjYWE2MjJjZDA2OGRlM2YyOGE2YmQ4ZmE5NzY=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2007-08-28T01:05:18Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2007-08-28T01:05:18Z"},"message":"OPENJPA-339 committing on behalf of Albert\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@570288 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c0df2dc60adec09506a9e197ef265ea75bb15d2b","url":"https://api.github.com/repos/apache/openjpa/git/trees/c0df2dc60adec09506a9e197ef265ea75bb15d2b"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/62b3725596582caa622cd068de3f28a6bd8fa976","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/62b3725596582caa622cd068de3f28a6bd8fa976","html_url":"https://github.com/apache/openjpa/commit/62b3725596582caa622cd068de3f28a6bd8fa976","comments_url":"https://api.github.com/repos/apache/openjpa/commits/62b3725596582caa622cd068de3f28a6bd8fa976/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"99029c0bda34b758108f0b95f44a341086c7ca37","url":"https://api.github.com/repos/apache/openjpa/commits/99029c0bda34b758108f0b95f44a341086c7ca37","html_url":"https://github.com/apache/openjpa/commit/99029c0bda34b758108f0b95f44a341086c7ca37"}],"stats":{"total":89,"additions":78,"deletions":11},"files":[{"sha":"c770456acc9a6f349e0dd73e9fc6834ea845fef6","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/AbstractCFMetaDataFactory.java","status":"modified","additions":9,"deletions":2,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/62b3725596582caa622cd068de3f28a6bd8fa976/openjpa-kernel/src/main/java/org/apache/openjpa/meta/AbstractCFMetaDataFactory.java","raw_url":"https://github.com/apache/openjpa/raw/62b3725596582caa622cd068de3f28a6bd8fa976/openjpa-kernel/src/main/java/org/apache/openjpa/meta/AbstractCFMetaDataFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/AbstractCFMetaDataFactory.java?ref=62b3725596582caa622cd068de3f28a6bd8fa976","patch":"@@ -19,6 +19,7 @@\n package org.apache.openjpa.meta;\n \n import java.io.File;\n+import java.io.FileNotFoundException;\n import java.io.IOException;\n import java.io.InputStream;\n import java.net.MalformedURLException;\n@@ -656,9 +657,15 @@ private Set parsePersistentTypeNames(ClassLoader loader)\n                     if (log.isTraceEnabled())\n                         log.trace(_loc.get(\"scan-found-names\", clss, file));\n                     names.addAll(Arrays.asList(clss));\n-                    mapPersistentTypeNames(((File) AccessController\n+                    File f = (File) AccessController\n                         .doPrivileged(J2DoPrivHelper\n-                            .getAbsoluteFileAction(file))).toURL(), clss);\n+                            .getAbsoluteFileAction(file));\n+                    try {\n+                        mapPersistentTypeNames(AccessController\n+                            .doPrivileged(J2DoPrivHelper.toURLAction(f)), clss);\n+                    } catch (PrivilegedActionException pae) {\n+                        throw (FileNotFoundException) pae.getException();\n+                    }\n                 }\n             }\n         }"},{"sha":"97aeb1f947a65f3a505687b5e1e809d621aeff10","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyManagerImpl.java","status":"modified","additions":10,"deletions":5,"changes":15,"blob_url":"https://github.com/apache/openjpa/blob/62b3725596582caa622cd068de3f28a6bd8fa976/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyManagerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/62b3725596582caa622cd068de3f28a6bd8fa976/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyManagerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyManagerImpl.java?ref=62b3725596582caa622cd068de3f28a6bd8fa976","patch":"@@ -517,7 +517,8 @@ protected BCClass generateProxyCollectionBytecode(Class type,\n         boolean runtime) {\n         assertNotFinal(type);\n         Project project = new Project(); \n-        BCClass bc = project.loadClass(getProxyClassName(type, runtime));\n+        BCClass bc = (BCClass) AccessController.doPrivileged(J2DoPrivHelper\n+            .loadProjectClassAction(project, getProxyClassName(type, runtime))); \n         bc.setSuperclass(type);\n         bc.declareInterface(ProxyCollection.class);\n  \n@@ -554,7 +555,8 @@ private static void assertNotFinal(Class type) {\n     protected BCClass generateProxyMapBytecode(Class type, boolean runtime) {\n         assertNotFinal(type);\n         Project project = new Project(); \n-        BCClass bc = project.loadClass(getProxyClassName(type, runtime));\n+        BCClass bc = (BCClass) AccessController.doPrivileged(J2DoPrivHelper\n+            .loadProjectClassAction(project, getProxyClassName(type, runtime))); \n         bc.setSuperclass(type);\n         bc.declareInterface(ProxyMap.class);\n  \n@@ -573,7 +575,8 @@ protected BCClass generateProxyMapBytecode(Class type, boolean runtime) {\n     protected BCClass generateProxyDateBytecode(Class type, boolean runtime) {\n         assertNotFinal(type);\n         Project project = new Project(); \n-        BCClass bc = project.loadClass(getProxyClassName(type, runtime));\n+        BCClass bc = (BCClass) AccessController.doPrivileged(J2DoPrivHelper\n+            .loadProjectClassAction(project, getProxyClassName(type, runtime))); \n         bc.setSuperclass(type);\n         bc.declareInterface(ProxyDate.class);\n  \n@@ -592,7 +595,8 @@ protected BCClass generateProxyCalendarBytecode(Class type,\n         boolean runtime) {\n         assertNotFinal(type);\n         Project project = new Project(); \n-        BCClass bc = project.loadClass(getProxyClassName(type, runtime));\n+        BCClass bc = (BCClass) AccessController.doPrivileged(J2DoPrivHelper\n+            .loadProjectClassAction(project, getProxyClassName(type, runtime))); \n         bc.setSuperclass(type);\n         bc.declareInterface(ProxyCalendar.class);\n  \n@@ -626,7 +630,8 @@ protected BCClass generateProxyBeanBytecode(Class type, boolean runtime) {\n         }\n \n         Project project = new Project(); \n-        BCClass bc = project.loadClass(getProxyClassName(type, runtime));\n+        BCClass bc = (BCClass) AccessController.doPrivileged(J2DoPrivHelper\n+            .loadProjectClassAction(project, getProxyClassName(type, runtime))); \n         bc.setSuperclass(type);\n         bc.declareInterface(ProxyBean.class);\n  "},{"sha":"d63f2365bc5c34c49f90ab3ba1ffbb7e819ecb95","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/FileMetaDataIterator.java","status":"modified","additions":9,"deletions":2,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/62b3725596582caa622cd068de3f28a6bd8fa976/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/FileMetaDataIterator.java","raw_url":"https://github.com/apache/openjpa/raw/62b3725596582caa622cd068de3f28a6bd8fa976/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/FileMetaDataIterator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/FileMetaDataIterator.java?ref=62b3725596582caa622cd068de3f28a6bd8fa976","patch":"@@ -24,6 +24,7 @@\n import java.io.FileNotFoundException;\n import java.io.IOException;\n import java.io.InputStream;\n+import java.net.MalformedURLException;\n import java.security.AccessController;\n import java.security.PrivilegedActionException;\n import java.util.ArrayList;\n@@ -111,8 +112,14 @@ public Object next() throws IOException {\n             throw new NoSuchElementException();\n \n         _file = (File) _itr.next();\n-        return ((File) AccessController.doPrivileged(J2DoPrivHelper\n-            .getAbsoluteFileAction(_file))).toURL();\n+        try {\n+            File f = (File) AccessController.doPrivileged(J2DoPrivHelper\n+                .getAbsoluteFileAction(_file));\n+            return AccessController.doPrivileged(\n+                J2DoPrivHelper.toURLAction(f));\n+        } catch (PrivilegedActionException pae) {\n+            throw (MalformedURLException) pae.getException();\n+        }\n     }\n \n     public InputStream getInputStream() throws IOException {"},{"sha":"32cb35f1e85fbe8cffd86a96abf39347469244af","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/J2DoPrivHelper.java","status":"modified","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/apache/openjpa/blob/62b3725596582caa622cd068de3f28a6bd8fa976/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/J2DoPrivHelper.java","raw_url":"https://github.com/apache/openjpa/raw/62b3725596582caa622cd068de3f28a6bd8fa976/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/J2DoPrivHelper.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/J2DoPrivHelper.java?ref=62b3725596582caa622cd068de3f28a6bd8fa976","patch":"@@ -25,6 +25,7 @@\n import java.io.IOException;\n import java.lang.reflect.AccessibleObject;\n import java.net.InetAddress;\n+import java.net.MalformedURLException;\n import java.net.ServerSocket;\n import java.net.Socket;\n import java.net.URL;\n@@ -69,6 +70,7 @@\n  * <li>File.isDirectory\n  * <li>File.mkdirs\n  * <li>File.renameTo\n+ * <li>File.toURL\n  * <li>FileInputStream new\n  * <li>FileOutputStream new\n  * <li>System.getProperties\n@@ -593,6 +595,24 @@ public Object run() {\n         };\n     }\n \n+    /**\n+     * Return a PrivilegedExceptionAction object for f.toURL().\n+     * \n+     * Requires security policy:\n+     *   'permission java.io.FilePermission \"read\";'\n+     *   \n+     * @return Boolean\n+     * @throws MalformedURLException\n+     */\n+    public static final PrivilegedExceptionAction toURLAction(final File file)\n+        throws MalformedURLException {\n+        return new PrivilegedExceptionAction() {\n+            public Object run() throws MalformedURLException {\n+                return file.toURL();\n+            }\n+        };\n+    }\n+\n     /**\n      * Return a PrivilegedExceptionAction object for new FileInputStream().\n      * \n@@ -966,4 +986,21 @@ public Object run() {\n             }\n         };\n     }\n+    \n+    /**\n+     * Return a PrivilegeAction object for Project.loadClass().\n+     * \n+     * Requires security policy:\n+     *   'permission java.lang.RuntimePermission \"getClassLoader\";'\n+     *   \n+     * @return BCClass\n+     */\n+    public static final PrivilegedAction loadProjectClassAction(\n+        final Project project, final String clazzName) {\n+        return new PrivilegedAction() {\n+            public Object run() {\n+                return project.loadClass(clazzName);\n+            }\n+        };\n+    }\n }"},{"sha":"48f6e534f636ae8c2b9d4b0537bae68fb975d7f1","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/62b3725596582caa622cd068de3f28a6bd8fa976/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java","raw_url":"https://github.com/apache/openjpa/raw/62b3725596582caa622cd068de3f28a6bd8fa976/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java?ref=62b3725596582caa622cd068de3f28a6bd8fa976","patch":"@@ -20,6 +20,7 @@\n \n import java.io.File;\n import java.io.IOException;\n+import java.net.MalformedURLException;\n import java.net.URL;\n import java.security.AccessController;\n import java.security.PrivilegedActionException;\n@@ -458,7 +459,12 @@ public void parse(URL url)\n         @Override\n         public void parse(File file)\n             throws IOException {\n-            _source = file.toURL();\n+            try {\n+                _source = (URL) AccessController.doPrivileged(J2DoPrivHelper\n+                    .toURLAction(file));\n+            } catch (PrivilegedActionException pae) {\n+                throw (MalformedURLException) pae.getException();\n+            }\n             super.parse(file);\n         }\n "},{"sha":"8596d232115469aaca5c6f2e5cdc3322d6c1d14b","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceUnitInfoImpl.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/62b3725596582caa622cd068de3f28a6bd8fa976/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceUnitInfoImpl.java","raw_url":"https://github.com/apache/openjpa/raw/62b3725596582caa622cd068de3f28a6bd8fa976/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceUnitInfoImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceUnitInfoImpl.java?ref=62b3725596582caa622cd068de3f28a6bd8fa976","patch":"@@ -24,6 +24,7 @@\n import java.net.URL;\n import java.net.URLDecoder;\n import java.security.AccessController;\n+import java.security.PrivilegedActionException;\n import java.util.ArrayList;\n import java.util.Collections;\n import java.util.HashMap;\n@@ -219,8 +220,12 @@ public void addJarFileName(String name) {\n             if (cp[i].equals(name)\n                 || cp[i].endsWith(File.separatorChar + name)) {\n                 try {\n-                    addJarFile(new File(cp[i]).toURL());\n+                    addJarFile((URL) AccessController\n+                        .doPrivileged(J2DoPrivHelper\n+                            .toURLAction(new File(cp[i]))));\n                     return;\n+                } catch (PrivilegedActionException pae) {\n+                    break;\n                 } catch (MalformedURLException mue) {\n                     break;\n                 }"}]}

