{"sha":"62c8c548d90295d92e5aacd3adcdce0e785bf553","node_id":"MDY6Q29tbWl0MjA2MzY0OjYyYzhjNTQ4ZDkwMjk1ZDkyZTVhYWNkM2FkY2RjZTBlNzg1YmY1NTM=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2008-01-31T19:39:25Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2008-01-31T19:39:25Z"},"message":"OPENJPA-258 Merge from ../branches/1.0.x. svn merge -c 617039\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@617198 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"9a00d87529cbe053a67fcf7304de5a2604cf0cad","url":"https://api.github.com/repos/apache/openjpa/git/trees/9a00d87529cbe053a67fcf7304de5a2604cf0cad"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/62c8c548d90295d92e5aacd3adcdce0e785bf553","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/62c8c548d90295d92e5aacd3adcdce0e785bf553","html_url":"https://github.com/apache/openjpa/commit/62c8c548d90295d92e5aacd3adcdce0e785bf553","comments_url":"https://api.github.com/repos/apache/openjpa/commits/62c8c548d90295d92e5aacd3adcdce0e785bf553/comments","author":null,"committer":null,"parents":[{"sha":"18e83a09b18fde4721af69123fd4c7799bcca00e","url":"https://api.github.com/repos/apache/openjpa/commits/18e83a09b18fde4721af69123fd4c7799bcca00e","html_url":"https://github.com/apache/openjpa/commit/18e83a09b18fde4721af69123fd4c7799bcca00e"}],"stats":{"total":279,"additions":278,"deletions":1},"files":[{"sha":"80c5e67356c4c1e007d004fdb71976619a720f9e","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/InheritanceComparator.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/62c8c548d90295d92e5aacd3adcdce0e785bf553/openjpa-kernel/src/main/java/org/apache/openjpa/meta/InheritanceComparator.java","raw_url":"https://github.com/apache/openjpa/raw/62c8c548d90295d92e5aacd3adcdce0e785bf553/openjpa-kernel/src/main/java/org/apache/openjpa/meta/InheritanceComparator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/InheritanceComparator.java?ref=62c8c548d90295d92e5aacd3adcdce0e785bf553","patch":"@@ -75,7 +75,13 @@ public int compare(Object o1, Object o2) {\n                 return 1;\n             return c1.getName().compareTo(c2.getName());\n         }\n-        return i1 - i2;\n+        int diff = i1 - i2;\n+        if (diff < 0)\n+            return -1;\n+        else if (diff > 0)\n+            return 1;\n+        else\n+            return 0;\n     }\n \n     /**"},{"sha":"5e702b132bb6003df2989660de9a380862f86eee","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/meta/A.java","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/apache/openjpa/blob/62c8c548d90295d92e5aacd3adcdce0e785bf553/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/meta/A.java","raw_url":"https://github.com/apache/openjpa/raw/62c8c548d90295d92e5aacd3adcdce0e785bf553/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/meta/A.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/meta/A.java?ref=62c8c548d90295d92e5aacd3adcdce0e785bf553","patch":"@@ -0,0 +1,26 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.openjpa.meta;\r\n+\r\n+import javax.persistence.Entity;\r\n+\r\n+@Entity\r\n+public class A extends AbstractThing {\r\n+\r\n+}\r"},{"sha":"79e837dae6bcfaf70f112e174e43e6c82700b480","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/meta/AbstractThing.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/62c8c548d90295d92e5aacd3adcdce0e785bf553/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/meta/AbstractThing.java","raw_url":"https://github.com/apache/openjpa/raw/62c8c548d90295d92e5aacd3adcdce0e785bf553/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/meta/AbstractThing.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/meta/AbstractThing.java?ref=62c8c548d90295d92e5aacd3adcdce0e785bf553","patch":"@@ -0,0 +1,41 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.openjpa.meta;\r\n+\r\n+import javax.persistence.MappedSuperclass;\r\n+import javax.persistence.Id;\r\n+import javax.persistence.GeneratedValue;\r\n+import javax.persistence.Column;\r\n+\r\n+@MappedSuperclass\r\n+public class AbstractThing {\r\n+\r\n+    private String id;\r\n+\r\n+    @Id\r\n+    @GeneratedValue(generator = \"uuid-hex\")\r\n+    @Column(columnDefinition = \"char(32)\")\r\n+    public String getId() {\r\n+        return id;\r\n+    }\r\n+\r\n+    void setId(final String id) {\r\n+        this.id = id;\r\n+    }\r\n+}\r"},{"sha":"16ecf597925380c50047af30d7bf42974efffce6","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/meta/B.java","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/apache/openjpa/blob/62c8c548d90295d92e5aacd3adcdce0e785bf553/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/meta/B.java","raw_url":"https://github.com/apache/openjpa/raw/62c8c548d90295d92e5aacd3adcdce0e785bf553/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/meta/B.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/meta/B.java?ref=62c8c548d90295d92e5aacd3adcdce0e785bf553","patch":"@@ -0,0 +1,49 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.openjpa.meta;\r\n+\r\n+import java.util.Set;\r\n+import javax.persistence.Entity;\r\n+import javax.persistence.OneToMany;\r\n+\r\n+import org.apache.openjpa.meta.C;\r\n+\r\n+@Entity\r\n+public class B extends AbstractThing {\r\n+    private Set<C> cs;\r\n+    private Set<A> as;\r\n+\r\n+    @OneToMany\r\n+    public Set<C> getCs() {\r\n+        return cs;\r\n+    }\r\n+\r\n+    public void setCs(Set<C> cs) {\r\n+        this.cs = cs;\r\n+    }\r\n+\r\n+    @OneToMany\r\n+    public Set<A> getAs() {\r\n+        return as;\r\n+    }\r\n+\r\n+    public void setAs(Set<A> as) {\r\n+        this.as = as;\r\n+    }\r\n+}\r"},{"sha":"c7f901e6fee1df0b7401c97db6d7997bf60bf0e0","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/meta/C.java","status":"added","additions":101,"deletions":0,"changes":101,"blob_url":"https://github.com/apache/openjpa/blob/62c8c548d90295d92e5aacd3adcdce0e785bf553/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/meta/C.java","raw_url":"https://github.com/apache/openjpa/raw/62c8c548d90295d92e5aacd3adcdce0e785bf553/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/meta/C.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/meta/C.java?ref=62c8c548d90295d92e5aacd3adcdce0e785bf553","patch":"@@ -0,0 +1,101 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.openjpa.meta;\r\n+\r\n+import javax.persistence.Entity;\r\n+import javax.persistence.IdClass;\r\n+import javax.persistence.ManyToOne;\r\n+import javax.persistence.Column;\r\n+import javax.persistence.Id;\r\n+\r\n+import org.apache.openjpa.meta.C.Identity;\r\n+\r\n+@Entity\r\n+@IdClass(Identity.class)\r\n+public class C {\r\n+    private A a;\r\n+    private B b;\r\n+    private long num;\r\n+\r\n+    @ManyToOne(optional = false)\r\n+    @Column(nullable = false)\r\n+    public A getA() {\r\n+        return a;\r\n+    }\r\n+\r\n+    public void setA(A a) {\r\n+        this.a = a;\r\n+    }\r\n+\r\n+    @Id\r\n+    @ManyToOne(optional = false)\r\n+    @Column(nullable = false)\r\n+    public B getB() {\r\n+        return b;\r\n+    }\r\n+\r\n+    public void setB(B b) {\r\n+        this.b = b;\r\n+    }\r\n+\r\n+    @Id\r\n+    public long getNum() {\r\n+        return num;\r\n+    }\r\n+\r\n+    public void setNum(long num) {\r\n+        this.num = num;\r\n+    }\r\n+\r\n+    public static class Identity {\r\n+        private String b;\r\n+        private long num;\r\n+\r\n+        @Override\r\n+        public int hashCode() {\r\n+            return b.hashCode() * 17 + (int) num;\r\n+        }\r\n+\r\n+        @Override\r\n+        public boolean equals(Object obj) {\r\n+            return obj != null && (obj instanceof Identity)\r\n+                && b.equals(((Identity) obj).b) && num == ((Identity) obj).num;\r\n+        }\r\n+\r\n+        public String getB() {\r\n+            return b;\r\n+        }\r\n+\r\n+        public void setB(B b) {\r\n+            this.b = b.getId();\r\n+        }\r\n+\r\n+        public void setB(String b) {\r\n+            this.b = b;\r\n+        }\r\n+\r\n+        public long getNum() {\r\n+            return num;\r\n+        }\r\n+\r\n+        public void setNum(long num) {\r\n+            this.num = num;\r\n+        }\r\n+    }\r\n+}\r"},{"sha":"84ad50492155a0ace98f573797a8f6f19accb12a","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/meta/TestMetaDataInheritanceComparator.java","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/apache/openjpa/blob/62c8c548d90295d92e5aacd3adcdce0e785bf553/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/meta/TestMetaDataInheritanceComparator.java","raw_url":"https://github.com/apache/openjpa/raw/62c8c548d90295d92e5aacd3adcdce0e785bf553/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/meta/TestMetaDataInheritanceComparator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/meta/TestMetaDataInheritanceComparator.java?ref=62c8c548d90295d92e5aacd3adcdce0e785bf553","patch":"@@ -0,0 +1,54 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.openjpa.meta;\r\n+\r\n+import javax.persistence.EntityManagerFactory;\r\n+\r\n+import junit.framework.TestCase;\r\n+import org.apache.openjpa.persistence.test.PersistenceTestCase;\r\n+import org.apache.openjpa.persistence.test.SingleEMFTestCase;\r\n+import org.apache.openjpa.persistence.JPAFacadeHelper;\r\n+\r\n+public class TestMetaDataInheritanceComparator extends PersistenceTestCase {\r\n+\r\n+    public void testMetaDataInheritanceComparator() {\r\n+        InheritanceComparator comp = new MetaDataInheritanceComparator();\r\n+        comp.setBase(AbstractThing.class);\r\n+\r\n+        EntityManagerFactory emf = createEMF(A.class, B.class, C.class,\r\n+            AbstractThing.class);\r\n+\r\n+        ClassMetaData a = JPAFacadeHelper.getMetaData(emf, A.class);\r\n+        ClassMetaData b = JPAFacadeHelper.getMetaData(emf, B.class);\r\n+        ClassMetaData c = JPAFacadeHelper.getMetaData(emf, C.class);\r\n+\r\n+        assertEquals(-1, comp.compare(a, b));\r\n+        assertEquals(-1, comp.compare(b, c));\r\n+        assertEquals(-1, comp.compare(a, c));\r\n+    }\r\n+\r\n+    public void testInheritanceComparator() {\r\n+        InheritanceComparator comp = new InheritanceComparator();\r\n+        comp.setBase(AbstractThing.class);\r\n+\r\n+        assertEquals(-1, comp.compare(A.class, B.class));\r\n+        assertEquals(-1, comp.compare(B.class, C.class));\r\n+        assertEquals(-1, comp.compare(A.class, C.class));\r\n+    }\r\n+}\r"}]}

