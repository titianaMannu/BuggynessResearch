{"sha":"62e56cd91089175e66a52552cd9ec2c101ad9670","node_id":"MDY6Q29tbWl0MjA2MzY0OjYyZTU2Y2Q5MTA4OTE3NWU2NmE1MjU1MmNkOWVjMmMxMDFhZDk2NzA=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2007-09-21T20:56:55Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2007-09-21T20:56:55Z"},"message":"OPENJPA-380\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/1.0.x@578271 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"ab5fdaf837a1e55dea9cb9f52d4c10059d7f3101","url":"https://api.github.com/repos/apache/openjpa/git/trees/ab5fdaf837a1e55dea9cb9f52d4c10059d7f3101"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/62e56cd91089175e66a52552cd9ec2c101ad9670","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/62e56cd91089175e66a52552cd9ec2c101ad9670","html_url":"https://github.com/apache/openjpa/commit/62e56cd91089175e66a52552cd9ec2c101ad9670","comments_url":"https://api.github.com/repos/apache/openjpa/commits/62e56cd91089175e66a52552cd9ec2c101ad9670/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"f42bfb718eac77ed53f592636d71fc537dc11d01","url":"https://api.github.com/repos/apache/openjpa/commits/f42bfb718eac77ed53f592636d71fc537dc11d01","html_url":"https://github.com/apache/openjpa/commit/f42bfb718eac77ed53f592636d71fc537dc11d01"}],"stats":{"total":66,"additions":63,"deletions":3},"files":[{"sha":"02b4f3728d6e9d0c3bee636aeb2ec4cbb9d49814","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfiguration.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/62e56cd91089175e66a52552cd9ec2c101ad9670/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfiguration.java","raw_url":"https://github.com/apache/openjpa/raw/62e56cd91089175e66a52552cd9ec2c101ad9670/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfiguration.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfiguration.java?ref=62e56cd91089175e66a52552cd9ec2c101ad9670","patch":"@@ -611,6 +611,14 @@\n      * @since 0.3.0\n      */\n     public MetaDataRepository getMetaDataRepositoryInstance();\n+    \n+    /**\n+     * Returns true if a metaDataRepository has been created for this \n+     * configuration.\n+     * \n+     * @since 1.1.0 1.0.1\n+     */\n+    public boolean metaDataRepositoryAvailable();\n \n     /**\n      * Create a new empty metadata repository of the configured type."},{"sha":"150cd3b019a7ca6fc01b45eec39f6eff3a395ba7","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfigurationImpl.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/62e56cd91089175e66a52552cd9ec2c101ad9670/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfigurationImpl.java","raw_url":"https://github.com/apache/openjpa/raw/62e56cd91089175e66a52552cd9ec2c101ad9670/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfigurationImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfigurationImpl.java?ref=62e56cd91089175e66a52552cd9ec2c101ad9670","patch":"@@ -852,6 +852,10 @@ public MetaDataRepository getMetaDataRepositoryInstance() {\n             metaRepository = newMetaDataRepositoryInstance();\n         return metaRepository;\n     }\n+    \n+    public boolean metaDataRepositoryAvailable(){ \n+        return metaRepository != null; \n+    }\n \n     public MetaDataRepository newMetaDataRepositoryInstance() {\n         return (MetaDataRepository) metaRepositoryPlugin.instantiate("},{"sha":"1f620154d2a25b5cbee5b5fca7dbf87fa5aacb20","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractBrokerFactory.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/62e56cd91089175e66a52552cd9ec2c101ad9670/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractBrokerFactory.java","raw_url":"https://github.com/apache/openjpa/raw/62e56cd91089175e66a52552cd9ec2c101ad9670/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractBrokerFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractBrokerFactory.java?ref=62e56cd91089175e66a52552cd9ec2c101ad9670","patch":"@@ -388,9 +388,11 @@ public void close() {\n                     broker.close();\n             }\n \n-            // remove metadata repository from listener list\n-            PCRegistry.removeRegisterClassListener\n-                (_conf.getMetaDataRepositoryInstance());\n+            if(_conf.metaDataRepositoryAvailable()) {\n+                // remove metadata repository from listener list\n+                PCRegistry.removeRegisterClassListener\n+                    (_conf.getMetaDataRepositoryInstance());\n+            }\n \n             _conf.close();\n             _closed = true;"},{"sha":"76d8f3b9a9dd9986275464581d59a7978cc00322","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/TestEntityManagerFactory.java","status":"added","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/apache/openjpa/blob/62e56cd91089175e66a52552cd9ec2c101ad9670/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/TestEntityManagerFactory.java","raw_url":"https://github.com/apache/openjpa/raw/62e56cd91089175e66a52552cd9ec2c101ad9670/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/TestEntityManagerFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/TestEntityManagerFactory.java?ref=62e56cd91089175e66a52552cd9ec2c101ad9670","patch":"@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.simple;\n+\n+import javax.persistence.EntityManagerFactory;\n+import javax.persistence.Persistence;\n+\n+import junit.framework.TestCase;\n+\n+public class TestEntityManagerFactory extends TestCase {\n+\n+    /*\n+     * This test uses a mis-configured persistence unit to verify that we will\n+     * not connect to the database when an unused emf is closed.  \n+     */\n+    public void testCloseUnusedEMF() {\n+        EntityManagerFactory emf =\n+                Persistence.createEntityManagerFactory(\"invalid\");\n+        emf.close();\n+    }\n+}"},{"sha":"e2704009c1cd3b9b7d95ae1a81c8db4b218f14f3","filename":"openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/62e56cd91089175e66a52552cd9ec2c101ad9670/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/62e56cd91089175e66a52552cd9ec2c101ad9670/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml?ref=62e56cd91089175e66a52552cd9ec2c101ad9670","patch":"@@ -54,4 +54,13 @@\n                 value=\"buildSchema(ForeignKeys=true)\"/>\n         </properties>\n     </persistence-unit>\n+    \n+    <persistence-unit name=\"invalid\">\n+        <properties>\n+            <property name=\"openjpa.ConnectionDriverName\"\n+                value=\"org.apache.commons.dbcp.BasicDataSource\" />\n+            <property name=\"openjpa.ConnectionProperties\"\n+                value=\"DriverClassName=not.a.real.Driver,Url=jdbc:notreal://\"/>\n+        </properties>\n+    </persistence-unit>\n </persistence>"}]}

