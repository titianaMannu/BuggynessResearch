{"sha":"6303e9a753e205f16612bcd92ee7685446d849c9","node_id":"MDY6Q29tbWl0MjA2MzY0OjYzMDNlOWE3NTNlMjA1ZjE2NjEyYmNkOTJlZTc2ODU0NDZkODQ5Yzk=","commit":{"author":{"name":"David Ezzio","email":"dezzio@apache.org","date":"2009-08-25T14:09:23Z"},"committer":{"name":"David Ezzio","email":"dezzio@apache.org","date":"2009-08-25T14:09:23Z"},"message":"OpenJPA-525 : Applied Milosz Tylenda's OPENJPA-525.3.patch to trunk, after testing by Amy Yang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@807642 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"493cc487de02504b6835ccb29bc4f2f56d2a35bd","url":"https://api.github.com/repos/apache/openjpa/git/trees/493cc487de02504b6835ccb29bc4f2f56d2a35bd"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/6303e9a753e205f16612bcd92ee7685446d849c9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/6303e9a753e205f16612bcd92ee7685446d849c9","html_url":"https://github.com/apache/openjpa/commit/6303e9a753e205f16612bcd92ee7685446d849c9","comments_url":"https://api.github.com/repos/apache/openjpa/commits/6303e9a753e205f16612bcd92ee7685446d849c9/comments","author":null,"committer":null,"parents":[{"sha":"9a4406038e22e14cd9a5b6ac96bb4cd2244dcb6f","url":"https://api.github.com/repos/apache/openjpa/commits/9a4406038e22e14cd9a5b6ac96bb4cd2244dcb6f","html_url":"https://github.com/apache/openjpa/commit/9a4406038e22e14cd9a5b6ac96bb4cd2244dcb6f"}],"stats":{"total":13,"additions":8,"deletions":5},"files":[{"sha":"5f80926f469d8c944cbb3735a1955ceebbf75270","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/AbstractResult.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/6303e9a753e205f16612bcd92ee7685446d849c9/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/AbstractResult.java","raw_url":"https://github.com/apache/openjpa/raw/6303e9a753e205f16612bcd92ee7685446d849c9/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/AbstractResult.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/AbstractResult.java?ref=6303e9a753e205f16612bcd92ee7685446d849c9","patch":"@@ -688,12 +688,12 @@ protected Number getNumberInternal(Object obj, Joins joins)\n \n     public Object getObject(Object obj, int metaType, Object arg)\n         throws SQLException {\n-        return getObjectInternal(translate(obj, null), metaType, arg, null);\n+        return getObjectInternal(obj, metaType, arg, null);\n     }\n \n     public Object getObject(Column col, Object arg, Joins joins)\n         throws SQLException {\n-        return getObjectInternal(translate(col, joins), col.getJavaType(),\n+        return getObjectInternal(col, col.getJavaType(),\n             arg, joins);\n     }\n \n@@ -834,7 +834,8 @@ public void endDataRequest() {\n \n     /**\n      * Translate the user-given id or column. This method is called before\n-     * delegating to any <code>get*Internal</code> methods. Return the\n+     * delegating to any <code>get*Internal</code> methods with the exception of\n+     * <code>getObjectInternal</code>. Return the\n      * original value by default.\n      */\n     protected Object translate(Object obj, Joins joins)"},{"sha":"a4f8e01ca7f8421bf7aeeff8b9e74a6cb18081dc","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/ResultSetResult.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/6303e9a753e205f16612bcd92ee7685446d849c9/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/ResultSetResult.java","raw_url":"https://github.com/apache/openjpa/raw/6303e9a753e205f16612bcd92ee7685446d849c9/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/ResultSetResult.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/ResultSetResult.java?ref=6303e9a753e205f16612bcd92ee7685446d849c9","patch":"@@ -357,6 +357,9 @@ protected Object getObjectInternal(Object obj, int metaTypeCode,\n         if (metaTypeCode == -1 && obj instanceof Column)\n             metaTypeCode = ((Column) obj).getJavaType();\n \n+        boolean isClob = (obj instanceof Column) ? ((Column) obj).getType() == Types.CLOB : false;\n+        obj = translate(obj, joins);\n+        \n         Object val = null;\n         switch (metaTypeCode) {\n             case JavaTypes.BOOLEAN:\n@@ -393,8 +396,7 @@ protected Object getObjectInternal(Object obj, int metaTypeCode,\n                 val = new Short(getShortInternal(obj, joins));\n                 break;\n             case JavaTypes.STRING:\n-                return getStringInternal(obj, joins,\n-                    obj instanceof Column && ((Column) obj).getType() == Types.CLOB);\n+                return getStringInternal(obj, joins, isClob);\n             case JavaTypes.OBJECT:\n                 return _dict\n                     .getBlobObject(_rs, ((Number) obj).intValue(), _store);"}]}

