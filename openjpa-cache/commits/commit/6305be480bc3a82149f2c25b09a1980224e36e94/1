{"sha":"6305be480bc3a82149f2c25b09a1980224e36e94","node_id":"MDY6Q29tbWl0MjA2MzY0OjYzMDViZTQ4MGJjM2E4MjE0OWYyYzI1YjA5YTE5ODAyMjRlMzZlOTQ=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-08-27T16:53:50Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-08-27T16:53:50Z"},"message":"OPENJPA-1225: Fail fast on wrong constructor() argument\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@808513 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2c9542056044ffe14304bb371b423686d564775a","url":"https://api.github.com/repos/apache/openjpa/git/trees/2c9542056044ffe14304bb371b423686d564775a"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/6305be480bc3a82149f2c25b09a1980224e36e94","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/6305be480bc3a82149f2c25b09a1980224e36e94","html_url":"https://github.com/apache/openjpa/commit/6305be480bc3a82149f2c25b09a1980224e36e94","comments_url":"https://api.github.com/repos/apache/openjpa/commits/6305be480bc3a82149f2c25b09a1980224e36e94/comments","author":null,"committer":null,"parents":[{"sha":"39da6319dd33c1b22c9ff3ea4f228f5d7c7050da","url":"https://api.github.com/repos/apache/openjpa/commits/39da6319dd33c1b22c9ff3ea4f228f5d7c7050da","html_url":"https://github.com/apache/openjpa/commit/39da6319dd33c1b22c9ff3ea4f228f5d7c7050da"}],"stats":{"total":47,"additions":45,"deletions":2},"files":[{"sha":"e4a85cd953bc4b031cb17a8cc40c836f3002b54c","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/results/TestMultiselect.java","status":"modified","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/apache/openjpa/blob/6305be480bc3a82149f2c25b09a1980224e36e94/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/results/TestMultiselect.java","raw_url":"https://github.com/apache/openjpa/raw/6305be480bc3a82149f2c25b09a1980224e36e94/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/results/TestMultiselect.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/results/TestMultiselect.java?ref=6305be480bc3a82149f2c25b09a1980224e36e94","patch":"@@ -379,6 +379,26 @@ public void testDeeplyNestedShape() {\n         assertEquals(String.class, tuple4.get(0).getClass());\n     }\n     \n+    public void testConstructorFailsFast() {\n+        CriteriaQuery<Tuple> q = cb.createQuery(Tuple.class);\n+        Root<Foo> foo = q.from(Foo.class);\n+        try {\n+            q.multiselect(cb.construct(Foo.class, foo.get(Foo_.flong)));\n+            fail(\"Expected IllegalArgumentException becuase Foo(long) is not a valid constructor\");\n+        } catch (IllegalArgumentException e) {\n+            // good -- but print the error message to check it is informative enough\n+            System.err.println(e);\n+        }\n+        try {\n+            q.multiselect(cb.construct(Foo.class));\n+            fail(\"Expected IllegalArgumentException becuase Foo() is not a valid constructor\");\n+        } catch (IllegalArgumentException e) {\n+            // good -- but print the error message to check it is informative enough\n+            System.err.println(e);\n+        }\n+        \n+    }\n+    \n // =============== assertions by result types ========================\n     \n     void assertResult(CriteriaQuery<?> q, Class<?> resultClass) {"},{"sha":"fdf80e912d5379c0e52ef51f00f281fb579e0ae5","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/CompoundSelections.java","status":"modified","additions":21,"deletions":1,"changes":22,"blob_url":"https://github.com/apache/openjpa/blob/6305be480bc3a82149f2c25b09a1980224e36e94/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/CompoundSelections.java","raw_url":"https://github.com/apache/openjpa/raw/6305be480bc3a82149f2c25b09a1980224e36e94/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/CompoundSelections.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/CompoundSelections.java?ref=6305be480bc3a82149f2c25b09a1980224e36e94","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.openjpa.persistence.criteria;\n \n+import java.lang.reflect.Constructor;\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.List;\n@@ -30,6 +31,7 @@\n \n import org.apache.openjpa.kernel.FillStrategy;\n import org.apache.openjpa.kernel.ResultShape;\n+import org.apache.openjpa.lib.util.Localizer;\n import org.apache.openjpa.persistence.TupleFactory;\n import org.apache.openjpa.persistence.TupleImpl;\n \n@@ -42,6 +44,7 @@\n  *\n  */\n public class CompoundSelections {\n+    private static Localizer _loc = Localizer.forPackage(CompoundSelections.class);\n     /**\n      * Gets the strategy to fill a given compound selection.\n      * \n@@ -118,12 +121,29 @@ public Array(Class<X> cls, Selection<?>... terms) {\n      * @param <X> type of the constructed instance\n      */\n     public static class NewInstance<X> extends CompoundSelectionImpl<X> {\n+        private FillStrategy.NewInstance<X> strategy;\n         public NewInstance(Class<X> cls, Selection<?>... selections) {\n             super(cls, selections);\n+            strategy = new FillStrategy.NewInstance<X>(findConstructor(cls, selections));\n         }\n         \n         public FillStrategy<X> getFillStrategy() {\n-            return new FillStrategy.NewInstance<X>(getJavaType());\n+            return strategy;\n+        }\n+        \n+        private Constructor<X> findConstructor(Class<X> cls, Selection<?>... selections) {\n+            Class<?>[] types = selections == null ? null : new Class[selections.length];\n+            if (selections != null) {\n+                for (int i = 0; i < selections.length; i++) {\n+                    types[i] = selections[i].getJavaType();\n+                }\n+            }\n+            try {\n+                return cls.getConstructor(types);\n+            } catch (NoSuchMethodException e) {\n+                throw new IllegalArgumentException(_loc.get(\"select-no-ctor\", cls, \n+                    types == null ? \"[]\" : Arrays.toString(types)).getMessage());\n+            }\n         }\n     }\n     "},{"sha":"5da0b9a24f796e32ed54fe56b09ed0017d1b697c","filename":"openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/criteria/localizer.properties","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/6305be480bc3a82149f2c25b09a1980224e36e94/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/criteria/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/6305be480bc3a82149f2c25b09a1980224e36e94/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/criteria/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/criteria/localizer.properties?ref=6305be480bc3a82149f2c25b09a1980224e36e94","patch":"@@ -21,4 +21,7 @@ root-undefined: No root is defined for criteria query. \\\n \tUse CriteriaQuery.from(Class) to define a root.\n select-undefined: No terms is selected for criteria query. \\\n \tUse\tCriteriaQuery.select() or multiselect() to select \\\n-\tprojection terms for the query.\n\\ No newline at end of file\n+\tprojection terms for the query.\n+select-no-ctor: You have specified selection term to construct an instance of \\\n+\t\"{0}\" with argument types \"{1}\". But \"{0}\" has no constructor with such \\\n+\targument types. \t\n\\ No newline at end of file"}]}

