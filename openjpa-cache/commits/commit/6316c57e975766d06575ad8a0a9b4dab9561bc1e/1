{"sha":"6316c57e975766d06575ad8a0a9b4dab9561bc1e","node_id":"MDY6Q29tbWl0MjA2MzY0OjYzMTZjNTdlOTc1NzY2ZDA2NTc1YWQ4YTBhOWI0ZGFiOTU2MWJjMWU=","commit":{"author":{"name":"Kevin W. Sutter","email":"kwsutter@apache.org","date":"2007-08-20T16:50:20Z"},"committer":{"name":"Kevin W. Sutter","email":"kwsutter@apache.org","date":"2007-08-20T16:50:20Z"},"message":"OPENJPA-323.  Committing message updates per Teresa's patch.  Thanks, Teresa!\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@567748 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"f56d4123ded111b44921cb0c0ba4aeaf96c03ad2","url":"https://api.github.com/repos/apache/openjpa/git/trees/f56d4123ded111b44921cb0c0ba4aeaf96c03ad2"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/6316c57e975766d06575ad8a0a9b4dab9561bc1e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/6316c57e975766d06575ad8a0a9b4dab9561bc1e","html_url":"https://github.com/apache/openjpa/commit/6316c57e975766d06575ad8a0a9b4dab9561bc1e","comments_url":"https://api.github.com/repos/apache/openjpa/commits/6316c57e975766d06575ad8a0a9b4dab9561bc1e/comments","author":null,"committer":null,"parents":[{"sha":"9bebf551fc6be90240c858a05119cc71776d6c53","url":"https://api.github.com/repos/apache/openjpa/commits/9bebf551fc6be90240c858a05119cc71776d6c53","html_url":"https://github.com/apache/openjpa/commit/9bebf551fc6be90240c858a05119cc71776d6c53"}],"stats":{"total":16,"additions":8,"deletions":8},"files":[{"sha":"6672b8d316b11d5478196a606f90ecbffe3fffb6","filename":"openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/strats/localizer.properties","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/6316c57e975766d06575ad8a0a9b4dab9561bc1e/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/strats/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/6316c57e975766d06575ad8a0a9b4dab9561bc1e/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/strats/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/strats/localizer.properties?ref=6316c57e975766d06575ad8a0a9b4dab9561bc1e","patch":"@@ -59,8 +59,8 @@ not-embed: \"{0}\" specifies an embedded mapping strategy, but it is not \\\n \tembedded.\n not-oid: \"{0}\" species an object id mapping strategy, but it is not \\\n \tan object id field.\n-oid-not-joinable: Field \"{0}\" embedded within object id field \"{1}\" cannot be \\\n-\ta primary key value.  Its mapping does not it to be a join target.\n+# oid-not-joinable: Field \"{0}\" embedded within object id field \"{1}\" cannot be \\\n+#\ta primary key value.  Its mapping does not allow it to be a join target.\n flat-table: Type \"{0}\" uses a flat inheritance mapping, but declares a table \\\n \tname of \"{1}\", which does not match the superclass table \"{2}\".\n not-string: Field \"{0}\" declares a string field mapping strategy, but is not \\\n@@ -95,7 +95,7 @@ class-crit-owner: Field \"{0}\" declares that it uses class criteria for joins, \\\n \timpossible to correctly null the inverse foreign keys when the field is \\\n \tdeleted.  OpenJPA may leave orphan key values in the database if you do \\\n     not provide an owning inverse relation using the \"mapped-by\" attribute.\n-not-map: Field \"{0}\" declares a map mapping strategy, but is not a map type.\n+not-map: Field \"{0}\" declares a Map mapping strategy, but it is not a Map type.\n mapped-by-key: Map field \"{0}\" is attempting to use a map table, but its key \\\n \tis mapped by another field.  Use an inverse key or join table mapping.\n not-mapped-by-key: Map field \"{0}\" is attempting to use an inverse key or join \\"},{"sha":"961d3b30dd94c48f9ded0239ae8e6b45dbaa4dc4","filename":"openjpa-kernel/src/main/resources/org/apache/openjpa/enhance/localizer.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/6316c57e975766d06575ad8a0a9b4dab9561bc1e/openjpa-kernel/src/main/resources/org/apache/openjpa/enhance/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/6316c57e975766d06575ad8a0a9b4dab9561bc1e/openjpa-kernel/src/main/resources/org/apache/openjpa/enhance/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/resources/org/apache/openjpa/enhance/localizer.properties?ref=6316c57e975766d06575ad8a0a9b4dab9561bc1e","patch":"@@ -88,8 +88,8 @@ pcdata-created: Dynamic PCData created: name=\"{0}\", for type=\"{1}\"\n factory-not-oidloader: Attempt to run the application id tool under metadata \\\n \tconfiguration that does not support it.  The application id tool can only \\\n \trun under certain metadata factory settings.\n-str-cons: The id type \"{0}\" specfied by persistent type \"{1}\" does not have a \\\n-\tpublic string or class + string constructor.\n+str-cons: The id type \"{0}\" specfied by persistent type \"{1}\" \\  \n+\tdoes not have a public {0}(String) or {0}(Class, String) constructor.\n appid-start: Generating an application id for type \"{0}\".\n appid-invalid: Type \"{0}\" does not have metadata, does not use application \\\n \tidentity, uses a built-in identity type, or inherits the identity class \\"},{"sha":"fce4adb4f0bce6f5020070859ac3b35de8b8053e","filename":"openjpa-kernel/src/main/resources/org/apache/openjpa/kernel/localizer.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/6316c57e975766d06575ad8a0a9b4dab9561bc1e/openjpa-kernel/src/main/resources/org/apache/openjpa/kernel/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/6316c57e975766d06575ad8a0a9b4dab9561bc1e/openjpa-kernel/src/main/resources/org/apache/openjpa/kernel/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/resources/org/apache/openjpa/kernel/localizer.properties?ref=6316c57e975766d06575ad8a0a9b4dab9561bc1e","patch":"@@ -109,7 +109,7 @@ non-trans-read: To perform reads on persistent data outside of a transaction, \\\n \tthe \"NontransactionalRead\" property must be set on the Transaction.\n non-trans-write: To perform writes on persistent data outside of a \\\n \ttransaction, the \"NontransactionalWrite\" property must be set to true.\n-write-operation: To perform this operation, you must be withing a transaction, \\\n+write-operation: To perform this operation, it must be written within a transaction, \\\n \tor your settings must allow nontransactional writes and must not detach \\\n \tall nontransactional reads.\n not-managed: The given instance \"{0}\" is not managed by this context."},{"sha":"19f11a95ab3dfd50f6519f746e0f2874dd32bb4b","filename":"openjpa-kernel/src/main/resources/org/apache/openjpa/meta/localizer.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/6316c57e975766d06575ad8a0a9b4dab9561bc1e/openjpa-kernel/src/main/resources/org/apache/openjpa/meta/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/6316c57e975766d06575ad8a0a9b4dab9561bc1e/openjpa-kernel/src/main/resources/org/apache/openjpa/meta/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/resources/org/apache/openjpa/meta/localizer.properties?ref=6316c57e975766d06575ad8a0a9b4dab9561bc1e","patch":"@@ -202,7 +202,7 @@ bad-update-strategy-hint: \"{0}\" declares a read only value of \\\n \t\"{1}\".  This is not a recognized strategy, though it closely resembles \\\n \tthe standard strategy \"{2}\".  Available strategies are: {3}\n not-interface: Cannot set type \"{0}\" to be a managed interface as it is not \\\n-    and interface.\n+    an interface.\n interface: The type \"{0}\" is an unmanaged interface and therefore cannot be \\\n     made persistent.\n enum: Type \"{0}\" is an enumeration and therefore cannot be made persistent.\n@@ -238,7 +238,7 @@ bad-access-type: The ClassMetaData access type must be set to either \\\n \tset it to \"{0}\" failed.\n val-not-pc: The map value type of field \"{0}\" with a derived key must be a \\\n \tpersistent class.\n-val-not-one-pk: The map value type of field \"{0}\" a derived key must be a \\\n+val-not-one-pk: The map value type of field \"{0}\" with a derived key must be a \\\n \tpersistent class with exactly one primary key field.\n # this is a comma-separated set of prefixes that we want to\n # exclude from top-level validation, so that extensions that"}]}

