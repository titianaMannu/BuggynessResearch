{"sha":"636bd5f2135cfeb387e7a534f2e134eb58be16b9","node_id":"MDY6Q29tbWl0MjA2MzY0OjYzNmJkNWYyMTM1Y2ZlYjM4N2U3YTUzNGYyZTEzNGViNThiZTE2Yjk=","commit":{"author":{"name":"David Ezzio","email":"dezzio@apache.org","date":"2009-06-23T23:03:42Z"},"committer":{"name":"David Ezzio","email":"dezzio@apache.org","date":"2009-06-23T23:03:42Z"},"message":"OpenJPA-525: merged change 786218 from 1.1.x branch to trunk, fix for Oracle and null CLOBs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@787868 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"54a1876372bd1e3ba2f72c8011aa642f19be9722","url":"https://api.github.com/repos/apache/openjpa/git/trees/54a1876372bd1e3ba2f72c8011aa642f19be9722"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/636bd5f2135cfeb387e7a534f2e134eb58be16b9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/636bd5f2135cfeb387e7a534f2e134eb58be16b9","html_url":"https://github.com/apache/openjpa/commit/636bd5f2135cfeb387e7a534f2e134eb58be16b9","comments_url":"https://api.github.com/repos/apache/openjpa/commits/636bd5f2135cfeb387e7a534f2e134eb58be16b9/comments","author":null,"committer":null,"parents":[{"sha":"ecf43f87f74dd869b7c7c661f57f8b2fe671a5fe","url":"https://api.github.com/repos/apache/openjpa/commits/ecf43f87f74dd869b7c7c661f57f8b2fe671a5fe","html_url":"https://github.com/apache/openjpa/commit/ecf43f87f74dd869b7c7c661f57f8b2fe671a5fe"}],"stats":{"total":37,"additions":36,"deletions":1},"files":[{"sha":"528439ff7e2022782b90280c2b5a9fb307a5e807","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/ResultSetResult.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/636bd5f2135cfeb387e7a534f2e134eb58be16b9/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/ResultSetResult.java","raw_url":"https://github.com/apache/openjpa/raw/636bd5f2135cfeb387e7a534f2e134eb58be16b9/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/ResultSetResult.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/ResultSetResult.java?ref=636bd5f2135cfeb387e7a534f2e134eb58be16b9","patch":"@@ -465,7 +465,7 @@ protected short getShortInternal(Object obj, Joins joins)\n     protected String getStringInternal(Object obj, Joins joins)\n         throws SQLException {\n         if (obj instanceof Column && ((Column) obj).getType() == Types.CLOB)\n-            return _dict.getClobString(_rs, ((Column) obj).getIndex());\n+            return _dict.getClobString(_rs, findObject(obj, joins));\n         return _dict.getString(_rs, ((Number) obj).intValue());\n     }\n \n@@ -489,6 +489,9 @@ protected Object translate(Object obj, Joins joins)\n         throws SQLException {\n         if (obj instanceof Number)\n             return obj;\n+        // getStringInternal will take care the translation\n+        if (obj instanceof Column && ((Column) obj).getType() == Types.CLOB)\n+        \treturn obj;\n         return Numbers.valueOf(findObject(obj, joins));\n     }\n "},{"sha":"1fc20cba1dc3121666349b9ab4775156d312d519","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/annotations/TestSerializedLobs.java","status":"modified","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/apache/openjpa/blob/636bd5f2135cfeb387e7a534f2e134eb58be16b9/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/annotations/TestSerializedLobs.java","raw_url":"https://github.com/apache/openjpa/raw/636bd5f2135cfeb387e7a534f2e134eb58be16b9/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/annotations/TestSerializedLobs.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/annotations/TestSerializedLobs.java?ref=636bd5f2135cfeb387e7a534f2e134eb58be16b9","patch":"@@ -134,4 +134,36 @@ public void testClob()\n             assertEquals('a' + (i % 24), str.charAt(i));\n         em.close();\n     }\n+\n+    public void testNullableClob() throws Exception {\n+        EntityManager em = emf.createEntityManager();\n+        em.getTransaction().begin();\n+\n+        AnnoTest1 pc = new AnnoTest1(1);\n+        em.persist(pc);\n+        em.getTransaction().commit();\n+        em.close();\n+\n+        em = emf.createEntityManager();\n+        pc = em.find(AnnoTest1.class, new Long(1));\n+        String str = pc.getClob();\n+        assertNull(str);\n+        em.close();\n+    }\n+\n+    public void testNullableBlob() throws Exception {\n+        EntityManager em = emf.createEntityManager();\n+        em.getTransaction().begin();\n+\n+        AnnoTest1 pc = new AnnoTest1(1);\n+        em.persist(pc);\n+        em.getTransaction().commit();\n+        em.close();\n+\n+        em = emf.createEntityManager();\n+        pc = em.find(AnnoTest1.class, new Long(1));\n+        byte[] bl = pc.getBlob();\n+        assertNull(bl);\n+        em.close();\n+    }\n }"}]}

