{"sha":"64db31069570bd99547f26c77d8f8174c8d7d0a1","node_id":"MDY6Q29tbWl0MjA2MzY0OjY0ZGIzMTA2OTU3MGJkOTk1NDdmMjZjNzdkOGY4MTc0YzhkN2QwYTE=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2006-07-27T19:57:37Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2006-07-27T19:57:37Z"},"message":"corrected some configuration properties that do not allow alternate values\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@426216 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"b368cf176c533343a889379b5a26e359d604164c","url":"https://api.github.com/repos/apache/openjpa/git/trees/b368cf176c533343a889379b5a26e359d604164c"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/64db31069570bd99547f26c77d8f8174c8d7d0a1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/64db31069570bd99547f26c77d8f8174c8d7d0a1","html_url":"https://github.com/apache/openjpa/commit/64db31069570bd99547f26c77d8f8174c8d7d0a1","comments_url":"https://api.github.com/repos/apache/openjpa/commits/64db31069570bd99547f26c77d8f8174c8d7d0a1/comments","author":null,"committer":null,"parents":[{"sha":"b79f86b6a78d2dde8b82082ffea8bfad9273dca4","url":"https://api.github.com/repos/apache/openjpa/commits/b79f86b6a78d2dde8b82082ffea8bfad9273dca4","html_url":"https://github.com/apache/openjpa/commit/b79f86b6a78d2dde8b82082ffea8bfad9273dca4"}],"stats":{"total":11,"additions":10,"deletions":1},"files":[{"sha":"597132e0d89c3611b1bfd6149aa915b9ec61f5b9","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/FetchModeValue.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/64db31069570bd99547f26c77d8f8174c8d7d0a1/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/FetchModeValue.java","raw_url":"https://github.com/apache/openjpa/raw/64db31069570bd99547f26c77d8f8174c8d7d0a1/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/FetchModeValue.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/FetchModeValue.java?ref=64db31069570bd99547f26c77d8f8174c8d7d0a1","patch":"@@ -45,5 +45,6 @@\n     public FetchModeValue(String prop) {\n         super(prop);\n         setAliases(ALIASES);\n+        setAliasListComprehensive(true);\n     }\n }"},{"sha":"9a2136fc86613ff012a8f9a4374238903bb3b431","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/JDBCConfigurationImpl.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/64db31069570bd99547f26c77d8f8174c8d7d0a1/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/JDBCConfigurationImpl.java","raw_url":"https://github.com/apache/openjpa/raw/64db31069570bd99547f26c77d8f8174c8d7d0a1/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/JDBCConfigurationImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/JDBCConfigurationImpl.java?ref=64db31069570bd99547f26c77d8f8174c8d7d0a1","patch":"@@ -47,7 +47,6 @@\n import org.apache.openjpa.lib.log.Log;\n import org.apache.openjpa.lib.util.Localizer;\n import org.apache.openjpa.meta.MetaDataFactory;\n-import org.apache.openjpa.meta.MetaDataRepository;\n \n /**\n  * Default implementation of the {@link JDBCConfiguration} interface.\n@@ -129,6 +128,7 @@ public JDBCConfigurationImpl(boolean derivations, boolean loadDefaults) {\n         transactionIsolation.setAliases(aliases);\n         transactionIsolation.setDefault(aliases[0]);\n         transactionIsolation.set(-1);\n+        transactionIsolation.setAliasListComprehensive(true);\n \n         resultSetType = addInt(\"jdbc.ResultSetType\");\n         aliases = new String[]{\n@@ -141,6 +141,7 @@ public JDBCConfigurationImpl(boolean derivations, boolean loadDefaults) {\n         resultSetType.setAliases(aliases);\n         resultSetType.setDefault(aliases[0]);\n         resultSetType.set(ResultSet.TYPE_FORWARD_ONLY);\n+        resultSetType.setAliasListComprehensive(true);\n \n         fetchDirection = addInt(\"jdbc.FetchDirection\");\n         aliases = new String[]{\n@@ -151,6 +152,7 @@ public JDBCConfigurationImpl(boolean derivations, boolean loadDefaults) {\n         fetchDirection.setAliases(aliases);\n         fetchDirection.setDefault(aliases[0]);\n         fetchDirection.set(ResultSet.FETCH_FORWARD);\n+        fetchDirection.setAliasListComprehensive(true);\n \n         eagerFetchMode = new FetchModeValue(\"jdbc.EagerFetchMode\");\n         eagerFetchMode.setDefault(FetchModeValue.EAGER_PARALLEL);\n@@ -171,6 +173,7 @@ public JDBCConfigurationImpl(boolean derivations, boolean loadDefaults) {\n         lrsSize.setAliases(aliases);\n         lrsSize.setDefault(aliases[0]);\n         lrsSize.set(LRSSizes.SIZE_QUERY);\n+        lrsSize.setAliasListComprehensive(true);\n \n         synchronizeMappings = addString(\"jdbc.SynchronizeMappings\");\n         aliases = new String[]{ \"false\", null };"},{"sha":"26c06905392f68ce2ab50edd121497a6d6296ba8","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfigurationImpl.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/64db31069570bd99547f26c77d8f8174c8d7d0a1/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfigurationImpl.java","raw_url":"https://github.com/apache/openjpa/raw/64db31069570bd99547f26c77d8f8174c8d7d0a1/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfigurationImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfigurationImpl.java?ref=64db31069570bd99547f26c77d8f8174c8d7d0a1","patch":"@@ -363,6 +363,7 @@ public OpenJPAConfigurationImpl(boolean derivations, boolean loadDefaults) {\n         autoClear.setAliases(aliases);\n         autoClear.setDefault(aliases[0]);\n         autoClear.set(AutoClear.CLEAR_DATASTORE);\n+        autoClear.setAliasListComprehensive(true);\n \n         retainState = addBoolean(\"RetainState\");\n         retainState.setDefault(\"true\");\n@@ -380,6 +381,7 @@ public OpenJPAConfigurationImpl(boolean derivations, boolean loadDefaults) {\n         restoreState.setAliases(aliases);\n         restoreState.setDefault(aliases[0]);\n         restoreState.set(RestoreState.RESTORE_IMMUTABLE);\n+        restoreState.setAliasListComprehensive(true);\n \n         autoDetach = new AutoDetachValue();\n         addValue(autoDetach);\n@@ -422,6 +424,7 @@ public OpenJPAConfigurationImpl(boolean derivations, boolean loadDefaults) {\n         flushBeforeQueries.setAliases(aliases);\n         flushBeforeQueries.setDefault(aliases[0]);\n         flushBeforeQueries.set(QueryFlushModes.FLUSH_TRUE);\n+        flushBeforeQueries.setAliasListComprehensive(true);\n \n         lockTimeout = addInt(\"LockTimeout\");\n         lockTimeout.setDefault(\"-1\");\n@@ -436,6 +439,7 @@ public OpenJPAConfigurationImpl(boolean derivations, boolean loadDefaults) {\n         readLockLevel.setAliases(aliases);\n         readLockLevel.setDefault(aliases[0]);\n         readLockLevel.set(LockLevels.LOCK_READ);\n+        readLockLevel.setAliasListComprehensive(true);\n \n         writeLockLevel = addInt(\"WriteLockLevel\");\n         aliases = new String[]{\n@@ -446,6 +450,7 @@ public OpenJPAConfigurationImpl(boolean derivations, boolean loadDefaults) {\n         writeLockLevel.setAliases(aliases);\n         writeLockLevel.setDefault(aliases[1]);\n         writeLockLevel.set(LockLevels.LOCK_WRITE);\n+        writeLockLevel.setAliasListComprehensive(true);\n \n         seqPlugin = new SeqValue(\"Sequence\");\n         seqPlugin.setInstantiatingGetter(\"getSequenceInstance\");"}]}

