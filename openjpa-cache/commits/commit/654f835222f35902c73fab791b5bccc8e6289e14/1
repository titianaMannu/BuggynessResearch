{"sha":"654f835222f35902c73fab791b5bccc8e6289e14","node_id":"MDY6Q29tbWl0MjA2MzY0OjY1NGY4MzUyMjJmMzU5MDJjNzNmYWI3OTFiNWJjY2M4ZTYyODllMTQ=","commit":{"author":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2012-07-25T18:30:31Z"},"committer":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2012-07-25T18:30:31Z"},"message":"OPENJPA-2196 - Commit contribution by Scott Parkerson.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1365688 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a99dd4c131555132f144b2dfda04eab73566484a","url":"https://api.github.com/repos/apache/openjpa/git/trees/a99dd4c131555132f144b2dfda04eab73566484a"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/654f835222f35902c73fab791b5bccc8e6289e14","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/654f835222f35902c73fab791b5bccc8e6289e14","html_url":"https://github.com/apache/openjpa/commit/654f835222f35902c73fab791b5bccc8e6289e14","comments_url":"https://api.github.com/repos/apache/openjpa/commits/654f835222f35902c73fab791b5bccc8e6289e14/comments","author":null,"committer":null,"parents":[{"sha":"5afd4e851bb1fe56de5b1b546abecd799d036ad7","url":"https://api.github.com/repos/apache/openjpa/commits/5afd4e851bb1fe56de5b1b546abecd799d036ad7","html_url":"https://github.com/apache/openjpa/commit/5afd4e851bb1fe56de5b1b546abecd799d036ad7"}],"stats":{"total":24,"additions":20,"deletions":4},"files":[{"sha":"09fbc0e7285ae84e77532a367f852a193ca6d971","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/NativeJDBCSeq.java","status":"modified","additions":16,"deletions":3,"changes":19,"blob_url":"https://github.com/apache/openjpa/blob/654f835222f35902c73fab791b5bccc8e6289e14/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/NativeJDBCSeq.java","raw_url":"https://github.com/apache/openjpa/raw/654f835222f35902c73fab791b5bccc8e6289e14/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/NativeJDBCSeq.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/NativeJDBCSeq.java?ref=654f835222f35902c73fab791b5bccc8e6289e14","patch":"@@ -82,6 +82,7 @@\n     private DBIdentifier _schema = DBIdentifier.NULL;\n \n     private boolean alterIncrementBy = false;\n+    private boolean alreadyLoggedAlterSeqFailure = false;\n \n     /**\n      * The sequence name. Defaults to <code>OPENJPA_SEQUENCE</code>.\n@@ -218,7 +219,18 @@ protected synchronized void allocateInternal(int additional, JDBCStore store, Cl\n         try {\n             if (!alterIncrementBy) {\n                 DBDictionary dict = _conf.getDBDictionaryInstance();\n-                udpateSql(conn, dict.getAlterSequenceSQL(_seq));\n+                // If this fails, we will warn the user at most one time and set _allocated and _increment to 1 so\n+                // as to not potentially insert records ahead of what the database thinks is the next sequence value.\n+                if (updateSql(conn, dict.getAlterSequenceSQL(_seq)) == -1) {\n+                    if (!alreadyLoggedAlterSeqFailure) {\n+                        Log log = _conf.getLog(OpenJPAConfiguration.LOG_RUNTIME);\n+                        if (log.isWarnEnabled()) {\n+                            log.warn(_loc.get(\"fallback-no-seq-cache\", _seqName));\n+                        }\n+                    }\n+                    alreadyLoggedAlterSeqFailure = true;\n+                    _allocate = 1;\n+                }\n             }\n             _nextValue = getSequence(conn);\n             _maxValue = _nextValue + _allocate * _increment;\n@@ -311,7 +323,7 @@ private long getSequence(Connection conn)\n         }\n     }\n \n-    private int udpateSql(Connection conn, String sql) throws SQLException {\n+    private int updateSql(Connection conn, String sql) throws SQLException {\n         DBDictionary dict = _conf.getDBDictionaryInstance();\n         PreparedStatement stmnt = null;\n         int rc = -1;\n@@ -320,7 +332,8 @@ private int udpateSql(Connection conn, String sql) throws SQLException {\n             dict.setTimeouts(stmnt, _conf, false);\n             rc = stmnt.executeUpdate();\n         } catch (Exception e) {\n-            // tolerate exception when attempting to alter increment\n+            // tolerate exception when attempting to alter increment,\n+            // however, caller should check rc and not cache sequence values if rc != -1.\n         } finally {\n             // clean up our resources\n             if (stmnt != null) {"},{"sha":"353a8396be84cbcf5e41fb1c3ade030dce45ed54","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/654f835222f35902c73fab791b5bccc8e6289e14/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/654f835222f35902c73fab791b5bccc8e6289e14/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java?ref=654f835222f35902c73fab791b5bccc8e6289e14","patch":"@@ -3477,7 +3477,7 @@ public String getAlterSequenceSQL(Sequence seq) {\n         buf.append(seqName);\n         if (create && seq.getInitialValue() != 0)\n             buf.append(\" START WITH \").append(seq.getInitialValue());\n-        if ((seq.getIncrement() > 1) || (seq.getAllocate() > 1))\n+        if ((seq.getIncrement() >= 1) || (seq.getAllocate() >= 1))\n             buf.append(\" INCREMENT BY \").append(seq.getIncrement() * seq.getAllocate());\n         return new String[]{ buf.toString() };\n     }"},{"sha":"add9cf4dd66dfbf3a584622ba740bb16415f1357","filename":"openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/kernel/localizer.properties","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/654f835222f35902c73fab791b5bccc8e6289e14/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/kernel/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/654f835222f35902c73fab791b5bccc8e6289e14/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/kernel/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/kernel/localizer.properties?ref=654f835222f35902c73fab791b5bccc8e6289e14","patch":"@@ -172,4 +172,7 @@ exclude-in-expression: Query \"{0}\" is not cached because it uses IN expression w\n exclude-user-strategy: Query \"{0}\" is not cached because some parameterized \\\n     field value depends on user-defined field strategy.        \n exclude-pagination: Query \"{0}\" is not cached because it uses pagination.\n+fallback-no-seq-cache: Unable to cache sequence values for sequence \"{0}\". \\\n+    This can occur if your application is not configured connecting to the \\\n+    database with the appropriate permission to execute an ALTER SEQUENCE command.\n       \n\\ No newline at end of file"}]}

