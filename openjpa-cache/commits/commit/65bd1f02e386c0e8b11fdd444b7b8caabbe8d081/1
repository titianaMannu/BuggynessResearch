{"sha":"65bd1f02e386c0e8b11fdd444b7b8caabbe8d081","node_id":"MDY6Q29tbWl0MjA2MzY0OjY1YmQxZjAyZTM4NmMwZThiMTFmZGQ0NDRiN2I4Y2FhYmJlOGQwODE=","commit":{"author":{"name":"A. Abram White","email":"awhite@apache.org","date":"2007-02-22T20:11:00Z"},"committer":{"name":"A. Abram White","email":"awhite@apache.org","date":"2007-02-22T20:11:00Z"},"message":"Second attempt at serializing to full properties, including defaults, rather\nthan just user-defined properties.  This ensures that on deserialization we\nget the proper settings despite not running product derivations.  Previous\nattempt caused problems on SunONE.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@510638 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a7b9d66698b713453185979f6e2fd2c1a5004ab5","url":"https://api.github.com/repos/apache/openjpa/git/trees/a7b9d66698b713453185979f6e2fd2c1a5004ab5"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/65bd1f02e386c0e8b11fdd444b7b8caabbe8d081","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/65bd1f02e386c0e8b11fdd444b7b8caabbe8d081","html_url":"https://github.com/apache/openjpa/commit/65bd1f02e386c0e8b11fdd444b7b8caabbe8d081","comments_url":"https://api.github.com/repos/apache/openjpa/commits/65bd1f02e386c0e8b11fdd444b7b8caabbe8d081/comments","author":null,"committer":null,"parents":[{"sha":"7eb91d0ec9eb7690db32f5f8cedb7f336325d2fa","url":"https://api.github.com/repos/apache/openjpa/commits/7eb91d0ec9eb7690db32f5f8cedb7f336325d2fa","html_url":"https://github.com/apache/openjpa/commit/7eb91d0ec9eb7690db32f5f8cedb7f336325d2fa"}],"stats":{"total":10,"additions":5,"deletions":5},"files":[{"sha":"a72d997774505b4ece5f254bc984a03627a145f7","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationImpl.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/65bd1f02e386c0e8b11fdd444b7b8caabbe8d081/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationImpl.java","raw_url":"https://github.com/apache/openjpa/raw/65bd1f02e386c0e8b11fdd444b7b8caabbe8d081/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationImpl.java?ref=65bd1f02e386c0e8b11fdd444b7b8caabbe8d081","patch":"@@ -850,6 +850,7 @@ public static String toXMLName(String propName) {\n     public void readExternal(ObjectInput in)\n         throws IOException, ClassNotFoundException {\n         fromProperties((Map) in.readObject());\n+        _props = (Map) in.readObject();\n         _globals = in.readBoolean();\n     }\n \n@@ -858,10 +859,8 @@ public void readExternal(ObjectInput in)\n      * the properties returned by {@link #toProperties}.\n      */\n     public void writeExternal(ObjectOutput out) throws IOException {\n-        if (_props != null)\n-            out.writeObject(_props);\n-        else\n-            out.writeObject(toProperties(false));\n+        out.writeObject(toProperties(true));\n+        out.writeObject(_props);\n         out.writeBoolean(_globals);\n     }\n \n@@ -875,8 +874,9 @@ public Object clone() {\n                 (new Class[]{ boolean.class });\n             ConfigurationImpl clone = (ConfigurationImpl) cons.newInstance\n                 (new Object[]{ Boolean.FALSE });\n-            clone._globals = _globals;\n             clone.fromProperties(toProperties(true));\n+            clone._props = (_props == null) ? null : new HashMap(_props);\n+            clone._globals = _globals;\n             return clone;\n         } catch (RuntimeException re) {\n             throw re;"}]}

