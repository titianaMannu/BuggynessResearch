{"sha":"661f673890c076b8d6532d5f704434bc508a1fe5","node_id":"MDY6Q29tbWl0MjA2MzY0OjY2MWY2NzM4OTBjMDc2YjhkNjUzMmQ1ZjcwNDQzNGJjNTA4YTFmZTU=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-02-28T19:52:24Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-02-28T19:52:24Z"},"message":"OPENJPA-160. Removed BrokerImpl test to make this work properly for subclasses. Since BrokerImpl is cloneable, all subtypes will also be cloneable, so we don't really need to test for anything.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@512934 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"fc9509dff24955a6b019a8a995b399288f9545e6","url":"https://api.github.com/repos/apache/openjpa/git/trees/fc9509dff24955a6b019a8a995b399288f9545e6"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/661f673890c076b8d6532d5f704434bc508a1fe5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/661f673890c076b8d6532d5f704434bc508a1fe5","html_url":"https://github.com/apache/openjpa/commit/661f673890c076b8d6532d5f704434bc508a1fe5","comments_url":"https://api.github.com/repos/apache/openjpa/commits/661f673890c076b8d6532d5f704434bc508a1fe5/comments","author":null,"committer":null,"parents":[{"sha":"560f89510239d75b1a0db97dffcb9cbc21ab9e32","url":"https://api.github.com/repos/apache/openjpa/commits/560f89510239d75b1a0db97dffcb9cbc21ab9e32","html_url":"https://github.com/apache/openjpa/commit/560f89510239d75b1a0db97dffcb9cbc21ab9e32"}],"stats":{"total":26,"additions":11,"deletions":15},"files":[{"sha":"3316c35557d419f68d1f936100eaf96a05fdf860","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/conf/BrokerValue.java","status":"modified","additions":11,"deletions":15,"changes":26,"blob_url":"https://github.com/apache/openjpa/blob/661f673890c076b8d6532d5f704434bc508a1fe5/openjpa-kernel/src/main/java/org/apache/openjpa/conf/BrokerValue.java","raw_url":"https://github.com/apache/openjpa/raw/661f673890c076b8d6532d5f704434bc508a1fe5/openjpa-kernel/src/main/java/org/apache/openjpa/conf/BrokerValue.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/conf/BrokerValue.java?ref=661f673890c076b8d6532d5f704434bc508a1fe5","patch":"@@ -30,20 +30,16 @@ public BrokerValue(String prop) {\n \n     public Object newInstance(String clsName, Class type, Configuration conf,\n         boolean fatal) {\n-        if (BrokerImpl.class.getName().equals(clsName)) {\n-            // This is not synchronized. If there are concurrent invocations\n-            // while _templateBroker is null, we'll just end up with extra\n-            // template brokers, which will get safely garbage collected.\n-            if (_templateBroker == null)\n-                _templateBroker = (BrokerImpl) super.newInstance(\n-                    clsName, type, conf, fatal);\n-            try {\n-                return _templateBroker.clone();\n-            } catch (CloneNotSupportedException e) {\n-                throw new InternalException(e);\n-            }\n-        } else {\n-            return super.newInstance(clsName, type, conf, fatal);\n+        // This is not synchronized. If there are concurrent invocations\n+        // while _templateBroker is null, we'll just end up with extra\n+        // template brokers, which will get safely garbage collected.\n+        if (_templateBroker == null)\n+            _templateBroker = (BrokerImpl) super.newInstance(clsName, type,\n+                conf, fatal);\n+        try {\n+            return _templateBroker.clone();\n+        } catch (CloneNotSupportedException e) {\n+            throw new InternalException(e);\n         }\n     }\n-}\n+}\n\\ No newline at end of file"}]}

