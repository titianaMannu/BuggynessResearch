{"sha":"66434c6ebfe308ad34ee066a93efadaa3948c1ab","node_id":"MDY6Q29tbWl0MjA2MzY0OjY2NDM0YzZlYmZlMzA4YWQzNGVlMDY2YTkzZWZhZGFhMzk0OGMxYWI=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2008-12-10T13:03:08Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2008-12-10T13:03:08Z"},"message":"OPENJPA-820: Test entity reference can be used as query parameter for slices.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@725078 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"35259f1c63f79dba588ff05cd2fc92f63d178885","url":"https://api.github.com/repos/apache/openjpa/git/trees/35259f1c63f79dba588ff05cd2fc92f63d178885"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/66434c6ebfe308ad34ee066a93efadaa3948c1ab","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/66434c6ebfe308ad34ee066a93efadaa3948c1ab","html_url":"https://github.com/apache/openjpa/commit/66434c6ebfe308ad34ee066a93efadaa3948c1ab","comments_url":"https://api.github.com/repos/apache/openjpa/commits/66434c6ebfe308ad34ee066a93efadaa3948c1ab/comments","author":null,"committer":null,"parents":[{"sha":"57d329d3c55c3805465df3299e37deaf144dfc02","url":"https://api.github.com/repos/apache/openjpa/commits/57d329d3c55c3805465df3299e37deaf144dfc02","html_url":"https://github.com/apache/openjpa/commit/57d329d3c55c3805465df3299e37deaf144dfc02"}],"stats":{"total":52,"additions":51,"deletions":1},"files":[{"sha":"73f9bde9d0cafcc0faf68e6452347d3d0f43be82","filename":"openjpa-slice/src/test/java/org/apache/openjpa/slice/TestQuery.java","status":"modified","additions":43,"deletions":1,"changes":44,"blob_url":"https://github.com/apache/openjpa/blob/66434c6ebfe308ad34ee066a93efadaa3948c1ab/openjpa-slice/src/test/java/org/apache/openjpa/slice/TestQuery.java","raw_url":"https://github.com/apache/openjpa/raw/66434c6ebfe308ad34ee066a93efadaa3948c1ab/openjpa-slice/src/test/java/org/apache/openjpa/slice/TestQuery.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-slice/src/test/java/org/apache/openjpa/slice/TestQuery.java?ref=66434c6ebfe308ad34ee066a93efadaa3948c1ab","patch":"@@ -40,7 +40,8 @@ protected String getPersistenceUnitName() {\n     }\r\n \r\n     public void setUp() throws Exception {\r\n-        super.setUp(PObject.class, Person.class, Address.class, CLEAR_TABLES);\r\n+        super.setUp(PObject.class, Person.class, Address.class, Country.class, \r\n+        \t\tCLEAR_TABLES);\r\n         int count = count(PObject.class);\r\n         if (count == 0) {\r\n             create(POBJECT_COUNT);\r\n@@ -58,6 +59,21 @@ void create(int N) {\n             String expected = (pc.getValue()%2 == 0) ? \"Even\" : \"Odd\";\r\n             assertEquals(expected, slice);\r\n         }\r\n+        Person p1 = new Person();\r\n+        Person p2 = new Person();\r\n+        Address a1 = new Address();\r\n+        Address a2 = new Address();\r\n+        p1.setName(\"Even\");\r\n+        p2.setName(\"Odd\");\r\n+        a1.setCity(\"San Francisco\");\r\n+        a2.setCity(\"Rome\");\r\n+        p1.setAddress(a1);\r\n+        p2.setAddress(a2);\r\n+        em.persist(p1);\r\n+        em.persist(p2);\r\n+        assertEquals(\"Even\", SlicePersistence.getSlice(p1));\r\n+        assertEquals(\"Odd\", SlicePersistence.getSlice(p2));\r\n+        \r\n         em.getTransaction().commit();\r\n     }\r\n     \r\n@@ -147,4 +163,30 @@ public void testInMemoryOrderBy() {\n         List result = query.getResultList();\r\n         em.getTransaction().rollback();\r\n     }\r\n+    \r\n+    public void testQueryParameter() {\r\n+        EntityManager em = emf.createEntityManager();\r\n+        em.getTransaction().begin();\r\n+        Query query = em.createQuery(\"SELECT p FROM PObject p WHERE p.value > :v\")\r\n+        \t.setParameter(\"v\", 200);\r\n+        List result = query.getResultList();\r\n+        em.getTransaction().rollback();\r\n+    }\r\n+    \r\n+    public void testQueryParameterEntity() {\r\n+        EntityManager em = emf.createEntityManager();\r\n+        em.getTransaction().begin();\r\n+        Address a = (Address)em.createQuery(\"select a from Address a where a.city = :city\")\r\n+        \t.setParameter(\"city\", \"Rome\").getSingleResult();\r\n+        assertNotNull(a);\r\n+        assertEquals(\"Odd\", SlicePersistence.getSlice(a));\r\n+        Query query = em.createQuery(\"SELECT p FROM Person p WHERE p.address = :a\")\r\n+        \t.setParameter(\"a\", a);\r\n+        List<Person> result = query.getResultList();\r\n+        assertEquals(1, result.size());\r\n+        Person p = result.get(0);\r\n+        assertEquals(\"Odd\", SlicePersistence.getSlice(p));\r\n+        assertEquals(\"Rome\", p.getAddress().getCity());\r\n+        em.getTransaction().rollback();\r\n+    }\r\n }\r"},{"sha":"9d541ca05256c71f34ac8e548ff9bc01609896f1","filename":"openjpa-slice/src/test/java/org/apache/openjpa/slice/policy/EvenOddDistributionPolicy.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/66434c6ebfe308ad34ee066a93efadaa3948c1ab/openjpa-slice/src/test/java/org/apache/openjpa/slice/policy/EvenOddDistributionPolicy.java","raw_url":"https://github.com/apache/openjpa/raw/66434c6ebfe308ad34ee066a93efadaa3948c1ab/openjpa-slice/src/test/java/org/apache/openjpa/slice/policy/EvenOddDistributionPolicy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-slice/src/test/java/org/apache/openjpa/slice/policy/EvenOddDistributionPolicy.java?ref=66434c6ebfe308ad34ee066a93efadaa3948c1ab","patch":"@@ -30,6 +30,11 @@ public String distribute(Object pc, List<String> slices, Object context) {\n             int v = ((PObject)pc).getValue();\r\n             return (v%2 == 0) ? \"Even\" : \"Odd\";\r\n         }\r\n+        if (pc instanceof Person) {\r\n+        \tString name = ((Person)pc).getName();\r\n+        \tchar firstChar = Character.toLowerCase(name.charAt(0));\r\n+        \treturn (firstChar >= 'a' && firstChar <='m') ? \"Even\" : \"Odd\";\r\n+        }\r\n         return null;\r\n     }\r\n \r"},{"sha":"46972366072cbc7b799ead332b819560a3755a35","filename":"openjpa-slice/src/test/resources/META-INF/persistence.xml","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/66434c6ebfe308ad34ee066a93efadaa3948c1ab/openjpa-slice/src/test/resources/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/66434c6ebfe308ad34ee066a93efadaa3948c1ab/openjpa-slice/src/test/resources/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-slice/src/test/resources/META-INF/persistence.xml?ref=66434c6ebfe308ad34ee066a93efadaa3948c1ab","patch":"@@ -108,6 +108,9 @@\n    \r\n       <persistence-unit name=\"ordering\">\r\n         <class>org.apache.openjpa.slice.PObject</class>\r\n+        <class>org.apache.openjpa.slice.Person</class>\r\n+        <class>org.apache.openjpa.slice.Address</class>\r\n+        <class>org.apache.openjpa.slice.Country</class>\r\n         <properties>\r\n             <property name=\"openjpa.BrokerFactory\" value=\"slice\"/>\r\n             <property name=\"openjpa.ConnectionDriverName\" value=\"org.apache.derby.jdbc.EmbeddedDriver\"/>\r"}]}

