{"sha":"67082453b32d1bc11309f3c45ae1ce1bb2f8e281","node_id":"MDY6Q29tbWl0MjA2MzY0OjY3MDgyNDUzYjMyZDFiYzExMzA5ZjNjNDVhZTFjZTFiYjJmOGUyODE=","commit":{"author":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2013-10-18T14:25:55Z"},"committer":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2013-10-18T14:25:55Z"},"message":"OPENJPA-2409 enable persistenceXmlFile parameter to handle classpath resources as well.\n\ncontributed by rmannibucau, txs!\napplied with small changes and doc improvements\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1533466 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"29ee360e5efca2c7bbd61019ff558450524eecbd","url":"https://api.github.com/repos/apache/openjpa/git/trees/29ee360e5efca2c7bbd61019ff558450524eecbd"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/67082453b32d1bc11309f3c45ae1ce1bb2f8e281","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/67082453b32d1bc11309f3c45ae1ce1bb2f8e281","html_url":"https://github.com/apache/openjpa/commit/67082453b32d1bc11309f3c45ae1ce1bb2f8e281","comments_url":"https://api.github.com/repos/apache/openjpa/commits/67082453b32d1bc11309f3c45ae1ce1bb2f8e281/comments","author":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"committer":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"parents":[{"sha":"83dab92168a533f757bcce390661a09a595b94a2","url":"https://api.github.com/repos/apache/openjpa/commits/83dab92168a533f757bcce390661a09a595b94a2","html_url":"https://github.com/apache/openjpa/commit/83dab92168a533f757bcce390661a09a595b94a2"}],"stats":{"total":106,"additions":97,"deletions":9},"files":[{"sha":"2a600d6cb99edd9b9dab98f49e2b069d59aefb3f","filename":"openjpa-tools/openjpa-maven-plugin/src/main/java/org/apache/openjpa/tools/maven/AbstractOpenJpaEnhancerMojo.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/67082453b32d1bc11309f3c45ae1ce1bb2f8e281/openjpa-tools/openjpa-maven-plugin/src/main/java/org/apache/openjpa/tools/maven/AbstractOpenJpaEnhancerMojo.java","raw_url":"https://github.com/apache/openjpa/raw/67082453b32d1bc11309f3c45ae1ce1bb2f8e281/openjpa-tools/openjpa-maven-plugin/src/main/java/org/apache/openjpa/tools/maven/AbstractOpenJpaEnhancerMojo.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-tools/openjpa-maven-plugin/src/main/java/org/apache/openjpa/tools/maven/AbstractOpenJpaEnhancerMojo.java?ref=67082453b32d1bc11309f3c45ae1ce1bb2f8e281","patch":"@@ -100,7 +100,7 @@ public void execute() throws MojoExecutionException, MojoFailureException {\n      *\n      * @return populated Options\n      */\n-    protected Options getOptions() {\n+    protected Options getOptions() throws MojoExecutionException {\n         // options\n         Options opts = createOptions();\n "},{"sha":"86d73e2ec4e9c4b325baed00803643b90837570e","filename":"openjpa-tools/openjpa-maven-plugin/src/main/java/org/apache/openjpa/tools/maven/AbstractOpenJpaMojo.java","status":"modified","additions":92,"deletions":6,"changes":98,"blob_url":"https://github.com/apache/openjpa/blob/67082453b32d1bc11309f3c45ae1ce1bb2f8e281/openjpa-tools/openjpa-maven-plugin/src/main/java/org/apache/openjpa/tools/maven/AbstractOpenJpaMojo.java","raw_url":"https://github.com/apache/openjpa/raw/67082453b32d1bc11309f3c45ae1ce1bb2f8e281/openjpa-tools/openjpa-maven-plugin/src/main/java/org/apache/openjpa/tools/maven/AbstractOpenJpaMojo.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-tools/openjpa-maven-plugin/src/main/java/org/apache/openjpa/tools/maven/AbstractOpenJpaMojo.java?ref=67082453b32d1bc11309f3c45ae1ce1bb2f8e281","patch":"@@ -28,6 +28,7 @@\n import java.util.List;\n import java.util.Properties;\n \n+import org.apache.maven.artifact.Artifact;\n import org.apache.maven.plugin.AbstractMojo;\n import org.apache.maven.plugin.MojoExecutionException;\n import org.apache.maven.project.MavenProject;\n@@ -41,6 +42,16 @@\n  */\n public abstract class AbstractOpenJpaMojo extends AbstractMojo \n {\n+    /**\n+     * The working directory for putting persistence.xml and\n+     * other stuff into if we need to.\n+     *\n+     *\n+     * @parameter expression=\"${openjpa.workdir}\"\n+     *            default-value=\"${project.build.directory}/openjpa-work\"\n+     * @required\n+     */\n+    protected File workDir;\n \n     /**\n      * Location where <code>persistence-enabled</code> classes are located.\n@@ -79,8 +90,9 @@\n     /**\n      * Used if a non-default file location for the persistence.xml should be used\n      * If not specified, the default one in META-INF/persistence.xml will be used.\n-     * Please note that this is not a resource location but a file path!\n-     *  \n+     * Since openjpa-2.3.0 this can also be a resource location. In prior releases\n+     * it was only possible to specify a file location.\n+     *\n      * @parameter\n      */\n     private String persistenceXmlFile;\n@@ -206,7 +218,7 @@ protected File getEntityClasses()\n      * Get the options for the various OpenJPA tools.\n      * @return populated Options\n      */\n-    protected abstract Options getOptions();\n+    protected abstract Options getOptions() throws MojoExecutionException;\n     \n     /**\n      * <p>Determine if the mojo execution should get skipped.</p>\n@@ -240,7 +252,7 @@ protected boolean skipMojo()\n      * This function will usually get called by {@link #getOptions()}\n      * @return the Options filled with the initial values\n      */\n-    protected Options createOptions()\n+    protected Options createOptions() throws MojoExecutionException\n     {\n         Options opts = new Options();\n         if ( toolProperties != null )\n@@ -250,8 +262,18 @@ protected Options createOptions()\n         \n         if ( persistenceXmlFile != null )\n         {\n+            fixPersistenceXmlIfNeeded(Thread.currentThread().getContextClassLoader());\n             opts.put( OPTION_PROPERTIES_FILE, persistenceXmlFile );\n-            getLog().debug( \"using special persistence XML file: \" + persistenceXmlFile );\n+            getLog().debug(\"using special persistence XML file: \" + persistenceXmlFile);\n+        }\n+        else if (!new File(classes, \"META-INF/persistence.xml\").exists())\n+        { // use default but try from classpath\n+            persistenceXmlFile = \"META-INF/persistence.xml\";\n+            if (!fixPersistenceXmlIfNeeded(Thread.currentThread().getContextClassLoader())) {\n+                persistenceXmlFile = null;\n+            } else {\n+                opts.put( OPTION_PROPERTIES_FILE, persistenceXmlFile );\n+            }\n         }\n \n         if ( connectionDriverName != null )\n@@ -266,7 +288,71 @@ protected Options createOptions()\n \n         return opts;\n     }\n-    \n+\n+    /**\n+     *\n+     *\n+     * @param loader\n+     * @return\n+     * @throws MojoExecutionException\n+     */\n+    private boolean fixPersistenceXmlIfNeeded(final ClassLoader loader) throws MojoExecutionException\n+    {\n+        return !new File(persistenceXmlFile).exists() &&\n+                (findPersistenceXmlFromLoader(loader)\n+                    || findPersistenceXmlInArtifacts(project.getCompileArtifacts())\n+                    || findPersistenceXmlInArtifacts(project.getRuntimeArtifacts()));\n+    }\n+\n+    private boolean findPersistenceXmlFromLoader(final ClassLoader loader) throws MojoExecutionException {\n+        final URL url = loader.getResource(persistenceXmlFile);\n+        if (url != null) // copy file to be sure to set persistenceXmlFile to a file\n+        {\n+            final File tmpPersistenceXml = new File(workDir,\n+                    \"persistence\" + System.currentTimeMillis() + \".xml\");\n+            if (!tmpPersistenceXml.getParentFile().exists() && !tmpPersistenceXml.getParentFile().mkdirs())\n+            {\n+                throw new MojoExecutionException(\"Can't create \"\n+                        + tmpPersistenceXml.getParentFile().getAbsolutePath());\n+            }\n+\n+            try\n+            {\n+                FileUtils.copyURLToFile(url, tmpPersistenceXml);\n+            }\n+            catch (final IOException e)\n+            {\n+                throw new MojoExecutionException(e.getMessage(), e);\n+            }\n+\n+            persistenceXmlFile = tmpPersistenceXml.getAbsolutePath();\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    private boolean findPersistenceXmlInArtifacts(final List<Artifact> artifacts) throws MojoExecutionException {\n+        for (final Artifact artifact : artifacts) {\n+            final File file = artifact.getFile();\n+            if (file != null && file.exists())\n+            {\n+                try // find the persistence.xml using a fake classloader to not need to play with URLs\n+                {\n+                    if (findPersistenceXmlFromLoader(new URLClassLoader(new URL[] { file.toURI().toURL() },\n+                                                                ClassLoader.getSystemClassLoader())))\n+                    {\n+                        return true;\n+                    }\n+                }\n+                catch (final MalformedURLException e)\n+                {\n+                    // no-op\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+\n     /**\n      * This will prepare the current ClassLoader and add all jars and local\n      * classpaths (e.g. target/classes) needed by the OpenJPA task."},{"sha":"66fa58d39663a2fd34852df16ddc57b70b654c96","filename":"openjpa-tools/openjpa-maven-plugin/src/main/java/org/apache/openjpa/tools/maven/OpenJpaSchemaMojo.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/67082453b32d1bc11309f3c45ae1ce1bb2f8e281/openjpa-tools/openjpa-maven-plugin/src/main/java/org/apache/openjpa/tools/maven/OpenJpaSchemaMojo.java","raw_url":"https://github.com/apache/openjpa/raw/67082453b32d1bc11309f3c45ae1ce1bb2f8e281/openjpa-tools/openjpa-maven-plugin/src/main/java/org/apache/openjpa/tools/maven/OpenJpaSchemaMojo.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-tools/openjpa-maven-plugin/src/main/java/org/apache/openjpa/tools/maven/OpenJpaSchemaMojo.java?ref=67082453b32d1bc11309f3c45ae1ce1bb2f8e281","patch":"@@ -21,6 +21,7 @@\n \n import java.io.File;\n \n+import org.apache.maven.plugin.MojoExecutionException;\n import org.apache.openjpa.lib.util.Options;\n \n /**\n@@ -72,7 +73,7 @@\n     /**\n      * @return Options filled with all necessary plugin parameters\n      */\n-    protected Options getOptions() {\n+    protected Options getOptions() throws MojoExecutionException {\n         // options\n         Options opts = createOptions();\n "},{"sha":"a3607b222eb14242a8be9ebeb8cf5a946101c857","filename":"openjpa-tools/openjpa-maven-plugin/src/main/java/org/apache/openjpa/tools/maven/OpenJpaSqlMojo.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/67082453b32d1bc11309f3c45ae1ce1bb2f8e281/openjpa-tools/openjpa-maven-plugin/src/main/java/org/apache/openjpa/tools/maven/OpenJpaSqlMojo.java","raw_url":"https://github.com/apache/openjpa/raw/67082453b32d1bc11309f3c45ae1ce1bb2f8e281/openjpa-tools/openjpa-maven-plugin/src/main/java/org/apache/openjpa/tools/maven/OpenJpaSqlMojo.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-tools/openjpa-maven-plugin/src/main/java/org/apache/openjpa/tools/maven/OpenJpaSqlMojo.java?ref=67082453b32d1bc11309f3c45ae1ce1bb2f8e281","patch":"@@ -21,6 +21,7 @@\n \n import java.io.File;\n \n+import org.apache.maven.plugin.MojoExecutionException;\n import org.apache.openjpa.lib.util.Options;\n \n /**\n@@ -86,7 +87,7 @@\n     /**\n      * @return Options filled with all necessary plugin parameters\n      */\n-    protected Options getOptions() {\n+    protected Options getOptions() throws MojoExecutionException {\n         // options\n         Options opts = createOptions();\n "}]}

