{"sha":"68fea1a51cb8a553127ce33f38ace2e3aaa70729","node_id":"MDY6Q29tbWl0MjA2MzY0OjY4ZmVhMWE1MWNiOGE1NTMxMjdjZTMzZjM4YWNlMmUzYWFhNzA3Mjk=","commit":{"author":{"name":"Heath Thomann","email":"hthomann@apache.org","date":"2016-08-16T18:08:54Z"},"committer":{"name":"Heath Thomann","email":"hthomann@apache.org","date":"2016-08-16T18:08:54Z"},"message":"OPENJPA-2650: When SchemaFactory and useSchemaName=false is set, a schema name is incorrectly used.  Merged 2.2.x commit to trunk.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1756539 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"b78f3ab80c33a36579e03b8ff4f6a438f069b6f2","url":"https://api.github.com/repos/apache/openjpa/git/trees/b78f3ab80c33a36579e03b8ff4f6a438f069b6f2"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/68fea1a51cb8a553127ce33f38ace2e3aaa70729","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/68fea1a51cb8a553127ce33f38ace2e3aaa70729","html_url":"https://github.com/apache/openjpa/commit/68fea1a51cb8a553127ce33f38ace2e3aaa70729","comments_url":"https://api.github.com/repos/apache/openjpa/commits/68fea1a51cb8a553127ce33f38ace2e3aaa70729/comments","author":null,"committer":null,"parents":[{"sha":"4afdb070427b8b3f2ac3f18c9629d9509727de20","url":"https://api.github.com/repos/apache/openjpa/commits/4afdb070427b8b3f2ac3f18c9629d9509727de20","html_url":"https://github.com/apache/openjpa/commit/4afdb070427b8b3f2ac3f18c9629d9509727de20"}],"stats":{"total":67,"additions":66,"deletions":1},"files":[{"sha":"c9d9daa20bcc2947dab28ff1419745e0b3bd366b","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/TableJDBCSeq.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/68fea1a51cb8a553127ce33f38ace2e3aaa70729/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/TableJDBCSeq.java","raw_url":"https://github.com/apache/openjpa/raw/68fea1a51cb8a553127ce33f38ace2e3aaa70729/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/TableJDBCSeq.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/TableJDBCSeq.java?ref=68fea1a51cb8a553127ce33f38ace2e3aaa70729","patch":"@@ -642,7 +642,12 @@ public String resolveTableName(ClassMapping mapping, Table table) {\n     public DBIdentifier resolveTableIdentifier(ClassMapping mapping, Table table) {\n         DBIdentifier sName = mapping.getTable().getSchemaIdentifier();\n         DBIdentifier tableName = DBIdentifier.NULL;\n-        if (DBIdentifier.isNull(sName)) {\n+        \n+        //OPENJPA-2650: Don't use a schema name if the user has requested,\n+        //via useSchemaName, to not use one.\n+        if (!_conf.getDBDictionaryInstance().useSchemaName){\n+            tableName = table.getIdentifier();\n+        } else if (DBIdentifier.isNull(sName)) {\n             tableName = table.getFullIdentifier();\n         } else if (!DBIdentifier.isNull(table.getSchemaIdentifier())) {\n             tableName = table.getFullIdentifier();"},{"sha":"f60869842792806d5ca48bea50a41a819f73306a","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/generationtype/TestTableGeneratorUseSchemaNameProp.java","status":"added","additions":60,"deletions":0,"changes":60,"blob_url":"https://github.com/apache/openjpa/blob/68fea1a51cb8a553127ce33f38ace2e3aaa70729/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/generationtype/TestTableGeneratorUseSchemaNameProp.java","raw_url":"https://github.com/apache/openjpa/raw/68fea1a51cb8a553127ce33f38ace2e3aaa70729/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/generationtype/TestTableGeneratorUseSchemaNameProp.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/generationtype/TestTableGeneratorUseSchemaNameProp.java?ref=68fea1a51cb8a553127ce33f38ace2e3aaa70729","patch":"@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.generationtype;\n+\n+import javax.persistence.EntityManager;\n+\n+import org.apache.openjpa.persistence.test.SQLListenerTestCase;\n+\n+/*\n+ * Test for JIRA OPENJPA-2650.\n+ */\n+public class TestTableGeneratorUseSchemaNameProp extends SQLListenerTestCase {\n+\n+    public void setup() {\n+        setUp(Dog.class, \"openjpa.jdbc.SchemaFactory\",\n+            \"native(ForeignKeys=true)\", \"openjpa.jdbc.DBDictionary\",\n+            \"useSchemaName=false\", DROP_TABLES);\n+    }\n+\n+    /*\n+     * This test verifies that when useSchemaName=false, and SchemaFactory is\n+     * set, the schema name is not added to the table sequence queries.\n+     */\n+    public void testNoSchemaAndSchemaFactory() {\n+\n+        EntityManager em = emf.createEntityManager();\n+\n+        Dog dog = new Dog();\n+        dog.setName(\"Fido\");\n+\n+        em.getTransaction().begin();\n+\n+        em.persist(dog);\n+\n+        em.getTransaction().commit();\n+\n+        // Make sure a schema name isn't used when updating the ID_Gen table\n+        // or getting the value from ID_Gen table.\n+        assertContainsSQL(\"UPDATE ID_Gen\");\n+        assertContainsSQL(\"SELECT GEN_VAL FROM ID_Gen\");\n+\n+        closeEM(em);\n+    }\n+}"}]}

