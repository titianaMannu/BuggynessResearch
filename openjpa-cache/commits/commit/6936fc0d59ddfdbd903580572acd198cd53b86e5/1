{"sha":"6936fc0d59ddfdbd903580572acd198cd53b86e5","node_id":"MDY6Q29tbWl0MjA2MzY0OjY5MzZmYzBkNTlkZGZkYmQ5MDM1ODA1NzJhY2QxOThjZDUzYjg2ZTU=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2006-07-17T17:35:39Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2006-07-17T17:35:39Z"},"message":"Configurations changes on behalf of Abe\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@422769 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"6708e347f65a537055fa046215dab70c76cb4679","url":"https://api.github.com/repos/apache/openjpa/git/trees/6708e347f65a537055fa046215dab70c76cb4679"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/6936fc0d59ddfdbd903580572acd198cd53b86e5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/6936fc0d59ddfdbd903580572acd198cd53b86e5","html_url":"https://github.com/apache/openjpa/commit/6936fc0d59ddfdbd903580572acd198cd53b86e5","comments_url":"https://api.github.com/repos/apache/openjpa/commits/6936fc0d59ddfdbd903580572acd198cd53b86e5/comments","author":null,"committer":null,"parents":[{"sha":"9fd87ae45c1be381de35d7a1f14233d9de4e7905","url":"https://api.github.com/repos/apache/openjpa/commits/9fd87ae45c1be381de35d7a1f14233d9de4e7905","html_url":"https://github.com/apache/openjpa/commit/9fd87ae45c1be381de35d7a1f14233d9de4e7905"}],"stats":{"total":63,"additions":30,"deletions":33},"files":[{"sha":"1e95f8709fc21f248347fcb7e8e6656cabfd3a96","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configurations.java","status":"modified","additions":30,"deletions":33,"changes":63,"blob_url":"https://github.com/apache/openjpa/blob/6936fc0d59ddfdbd903580572acd198cd53b86e5/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configurations.java","raw_url":"https://github.com/apache/openjpa/raw/6936fc0d59ddfdbd903580572acd198cd53b86e5/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configurations.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configurations.java?ref=6936fc0d59ddfdbd903580572acd198cd53b86e5","patch":"@@ -257,12 +257,13 @@ public static void configureInstance(Object obj, Configuration conf,\n         if (obj == null)\n             return;\n \n-        Options opts = null;\n+        Options opts;\n         if (properties instanceof Options)\n             opts = (Options) properties;\n-        else if (properties != null) {\n+        else { \n             opts = new Options();\n-            opts.putAll(properties);\n+            if (properties != null)\n+                opts.putAll(properties);\n         }\n \n         Configurable configurable = null;\n@@ -273,37 +274,33 @@ else if (properties != null) {\n             configurable.setConfiguration(conf);\n             configurable.startConfiguration();\n         }\n-        if (opts != null) {\n-            Options invalidEntries = opts.setInto(obj);\n-            if (obj instanceof GenericConfigurable)\n-                ((GenericConfigurable) obj).setInto(invalidEntries);\n-\n-            if (!invalidEntries.isEmpty() && configurationName != null) {\n-                String msg = null;\n-                String first = (String) invalidEntries.keySet().iterator()\n-                    .next();\n-                if (invalidEntries.keySet().size() == 1 &&\n-                    first.indexOf('.') == -1) {\n-                    // if there's just one misspelling and this is not a\n-                    // path traversal, check for near misses.\n-                    Collection options = Options.findOptionsFor(obj.getClass());\n-                    String close = StringDistance.getClosestLevenshteinDistance\n-                        (first, options, 0.75f);\n-                    if (close != null)\n-                        msg = _loc.get(\"invalid-config-param-hint\",\n-                            new Object[]{\n-                                configurationName, obj.getClass(), first, close,\n-                                options, });\n-                }\n-\n-                if (msg == null) {\n-                    msg = _loc.get(\"invalid-config-params\", new String[]{\n-                        configurationName, obj.getClass().getName(),\n-                        invalidEntries.keySet().toString(),\n-                        Options.findOptionsFor(obj.getClass()).toString(), });\n-                }\n-                throw new ParseException(msg);\n+        Options invalidEntries = opts.setInto(obj);\n+        if (obj instanceof GenericConfigurable)\n+            ((GenericConfigurable) obj).setInto(invalidEntries);\n+\n+\t\tif (!invalidEntries.isEmpty() && configurationName != null) {\n+\t\t\tString msg = null;\n+\t\t\tString first = (String) invalidEntries.keySet().iterator().next();\n+\t\t\tif (invalidEntries.keySet().size() == 1 &&\n+\t\t\t\tfirst.indexOf('.') == -1) {\n+\t\t\t\t// if there's just one misspelling and this is not a\n+\t\t\t\t// path traversal, check for near misses.\n+\t\t\t\tCollection options = Options.findOptionsFor(obj.getClass());\n+\t\t\t\tString close = StringDistance.getClosestLevenshteinDistance\n+\t\t\t\t\t(first, options, 0.75f);\n+\t\t\t\tif (close != null)\n+\t\t\t\t\tmsg = _loc.get(\"invalid-config-param-hint\", new Object[]{\n+\t\t\t\t\t\tconfigurationName, obj.getClass(), first, close,\n+\t\t\t\t\t\toptions, });\n+\t\t\t}\n+\n+            if (msg == null) {\n+                msg = _loc.get(\"invalid-config-params\", new String[]{\n+                    configurationName, obj.getClass().getName(),\n+                    invalidEntries.keySet().toString(),\n+                    Options.findOptionsFor(obj.getClass()).toString(), });\n             }\n+            throw new ParseException(msg);\n         }\n         if (configurable != null)\n             configurable.endConfiguration();"}]}

