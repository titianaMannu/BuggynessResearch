{"sha":"696388049b3a89248e265af7274bdb298ab91e0a","node_id":"MDY6Q29tbWl0MjA2MzY0OjY5NjM4ODA0OWIzYTg5MjQ4ZTI2NWFmNzI3NGJkYjI5OGFiOTFlMGE=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2009-01-15T20:21:45Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2009-01-15T20:21:45Z"},"message":"OPENJPA-860 improve trace. Entity class names are printed when found in orm.xml\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@734797 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"8bf08a16e6346c0652569f895b2f9cd799b72983","url":"https://api.github.com/repos/apache/openjpa/git/trees/8bf08a16e6346c0652569f895b2f9cd799b72983"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/696388049b3a89248e265af7274bdb298ab91e0a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/696388049b3a89248e265af7274bdb298ab91e0a","html_url":"https://github.com/apache/openjpa/commit/696388049b3a89248e265af7274bdb298ab91e0a","comments_url":"https://api.github.com/repos/apache/openjpa/commits/696388049b3a89248e265af7274bdb298ab91e0a/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"88f288b47a6238e3c77670fe56436ee8df94269b","url":"https://api.github.com/repos/apache/openjpa/commits/88f288b47a6238e3c77670fe56436ee8df94269b","html_url":"https://github.com/apache/openjpa/commit/88f288b47a6238e3c77670fe56436ee8df94269b"}],"stats":{"total":15,"additions":9,"deletions":6},"files":[{"sha":"3050e227a4036015b46ba2bca42033240c694040","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/AbstractCFMetaDataFactory.java","status":"modified","additions":9,"deletions":6,"changes":15,"blob_url":"https://github.com/apache/openjpa/blob/696388049b3a89248e265af7274bdb298ab91e0a/openjpa-kernel/src/main/java/org/apache/openjpa/meta/AbstractCFMetaDataFactory.java","raw_url":"https://github.com/apache/openjpa/raw/696388049b3a89248e265af7274bdb298ab91e0a/openjpa-kernel/src/main/java/org/apache/openjpa/meta/AbstractCFMetaDataFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/AbstractCFMetaDataFactory.java?ref=696388049b3a89248e265af7274bdb298ab91e0a","patch":"@@ -627,7 +627,7 @@ private Set parsePersistentTypeNames(ClassLoader loader)\n         throws IOException {\n         ClassArgParser cparser = newClassArgParser();\n         String[] clss;\n-        Set names = new HashSet();\n+        Set<String> names = new HashSet<String>();\n         if (files != null) {\n             File file;\n             for (Iterator itr = files.iterator(); itr.hasNext();) {\n@@ -655,9 +655,10 @@ private Set parsePersistentTypeNames(ClassLoader loader)\n                         log.trace(_loc.get(\"scanning-file\", file));\n                     clss = cparser.parseTypeNames(new FileMetaDataIterator\n                         (file));\n+                    List<String> newNames = Arrays.asList(clss);\n                     if (log.isTraceEnabled())\n-                        log.trace(_loc.get(\"scan-found-names\", clss, file));\n-                    names.addAll(Arrays.asList(clss));\n+                        log.trace(_loc.get(\"scan-found-names\", newNames, file));\n+                    names.addAll(newNames);\n                     File f = AccessController\n                         .doPrivileged(J2DoPrivHelper\n                             .getAbsoluteFileAction(file));\n@@ -714,9 +715,10 @@ private Set parsePersistentTypeNames(ClassLoader loader)\n                     if (log.isTraceEnabled())\n                         log.trace(_loc.get(\"scanning-url\", url));\n                     clss = cparser.parseTypeNames(new URLMetaDataIterator(url));\n+                    List<String> newNames = Arrays.asList(clss);\n                     if (log.isTraceEnabled())\n-                        log.trace(_loc.get(\"scan-found-names\", clss, url));\n-                    names.addAll(Arrays.asList(clss));\n+                        log.trace(_loc.get(\"scan-found-names\", newNames, url));\n+                    names.addAll(newNames);\n                     mapPersistentTypeNames(url, clss);\n                 }\n             }\n@@ -752,9 +754,10 @@ private Set parsePersistentTypeNames(ClassLoader loader)\n                         url = (URL) mitr.next();\n                         clss = cparser.parseTypeNames(new URLMetaDataIterator\n                             (url));\n+                        List<String> newNames = Arrays.asList(clss);\n                         if (log.isTraceEnabled())\n                             log.trace(_loc.get(\"scan-found-names\", clss, rsrc));\n-                        names.addAll(Arrays.asList(clss));\n+                        names.addAll(newNames);\n                         mapPersistentTypeNames(url, clss);\n                     }\n                     mitr.close();"}]}

