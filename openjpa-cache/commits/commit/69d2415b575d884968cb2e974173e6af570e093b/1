{"sha":"69d2415b575d884968cb2e974173e6af570e093b","node_id":"MDY6Q29tbWl0MjA2MzY0OjY5ZDI0MTViNTc1ZDg4NDk2OGNiMmU5NzQxNzNlNmFmNTcwZTA5M2I=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-11-16T17:32:21Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-11-16T17:32:21Z"},"message":"OPENJPA-1387: Remove non-nullable constraint from Unique column.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@880865 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"d1693dbcc155e7eab57e8e1b97452b74428b1668","url":"https://api.github.com/repos/apache/openjpa/git/trees/d1693dbcc155e7eab57e8e1b97452b74428b1668"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/69d2415b575d884968cb2e974173e6af570e093b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/69d2415b575d884968cb2e974173e6af570e093b","html_url":"https://github.com/apache/openjpa/commit/69d2415b575d884968cb2e974173e6af570e093b","comments_url":"https://api.github.com/repos/apache/openjpa/commits/69d2415b575d884968cb2e974173e6af570e093b/comments","author":null,"committer":null,"parents":[{"sha":"05c785704cc706a1ca3745a5b2a3625eafb96c21","url":"https://api.github.com/repos/apache/openjpa/commits/05c785704cc706a1ca3745a5b2a3625eafb96c21","html_url":"https://github.com/apache/openjpa/commit/05c785704cc706a1ca3745a5b2a3625eafb96c21"}],"stats":{"total":8,"additions":6,"deletions":2},"files":[{"sha":"82891aeb7a192158f0f381eb653fb6a6c0ccf509","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/TableJDBCSeq.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/69d2415b575d884968cb2e974173e6af570e093b/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/TableJDBCSeq.java","raw_url":"https://github.com/apache/openjpa/raw/69d2415b575d884968cb2e974173e6af570e093b/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/TableJDBCSeq.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/TableJDBCSeq.java?ref=69d2415b575d884968cb2e974173e6af570e093b","patch":"@@ -260,7 +260,7 @@ public void addSchema(ClassMapping mapping, SchemaGroup group) {\n             // importTable() does not import unique constraints\n             Unique[] uniques = _pkColumn.getTable().getUniques();\n             for (Unique u : uniques) {\n-            \tcopy.importUnique(u);\n+            \tcopy.importUnique(u, _conf.getDBDictionaryInstance());\n             }\n             // we need to reset the table name in the column with the\n             // fully qualified name for matching the table name from the"},{"sha":"dd9e0ebc4a9c23376cf77557eeaba069751c109b","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/Table.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/69d2415b575d884968cb2e974173e6af570e093b/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/Table.java","raw_url":"https://github.com/apache/openjpa/raw/69d2415b575d884968cb2e974173e6af570e093b/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/Table.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/Table.java?ref=69d2415b575d884968cb2e974173e6af570e093b","patch":"@@ -737,7 +737,7 @@ public boolean removeUnique(Unique unq) {\n     /**\n      * Import a constraint; column names must match columns of this table.\n      */\n-    public Unique importUnique(Unique unq) {\n+    public Unique importUnique(Unique unq, DBDictionary dict) {\n         if (unq == null)\n             return null;\n \n@@ -747,6 +747,10 @@ public Unique importUnique(Unique unq) {\n         Column[] cols = unq.getColumns();\n         for (int i = 0; i < cols.length; i++)\n             copy.addColumn(getColumn(cols[i].getName()));\n+        if (dict != null && !dict.supportsNullUniqueConlumn) {\n+            for (Column col : copy.getColumns())\n+                col.setNotNull(true);\n+        }\n         return copy;\n     }\n "}]}

