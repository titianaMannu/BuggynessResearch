{"sha":"69e3633c490b602f0054e880c3affbc2e2c23702","node_id":"MDY6Q29tbWl0MjA2MzY0OjY5ZTM2MzNjNDkwYjYwMmYwMDU0ZTg4MGMzYWZmYmMyZTJjMjM3MDI=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2008-04-22T22:45:49Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2008-04-22T22:45:49Z"},"message":"OPENJPA-576. Committing on behalf of Sandeep Shrivastava.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/1.1.x@650684 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"37cdbe2a1e1f24d5e177f2142257089fb04f2a08","url":"https://api.github.com/repos/apache/openjpa/git/trees/37cdbe2a1e1f24d5e177f2142257089fb04f2a08"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/69e3633c490b602f0054e880c3affbc2e2c23702","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/69e3633c490b602f0054e880c3affbc2e2c23702","html_url":"https://github.com/apache/openjpa/commit/69e3633c490b602f0054e880c3affbc2e2c23702","comments_url":"https://api.github.com/repos/apache/openjpa/commits/69e3633c490b602f0054e880c3affbc2e2c23702/comments","author":null,"committer":null,"parents":[{"sha":"a6ffd14d02e54ac95af7038586aa0f403958fdc2","url":"https://api.github.com/repos/apache/openjpa/commits/a6ffd14d02e54ac95af7038586aa0f403958fdc2","html_url":"https://github.com/apache/openjpa/commit/a6ffd14d02e54ac95af7038586aa0f403958fdc2"}],"stats":{"total":21,"additions":13,"deletions":8},"files":[{"sha":"57232a4bc772ea16b0d5bdd503b91afe1177d629","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/EmbedFieldStrategy.java","status":"modified","additions":13,"deletions":8,"changes":21,"blob_url":"https://github.com/apache/openjpa/blob/69e3633c490b602f0054e880c3affbc2e2c23702/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/EmbedFieldStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/69e3633c490b602f0054e880c3affbc2e2c23702/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/EmbedFieldStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/EmbedFieldStrategy.java?ref=69e3633c490b602f0054e880c3affbc2e2c23702","patch":"@@ -410,14 +410,13 @@ public void load(OpenJPAStateManager sm, JDBCStore store,\n         //### we selected the embedded object fields and load the object\n         //### immediately; this will be inefficient when the embedded object\n         //### was not selected after all\n-\n         StoreContext ctx = store.getContext();\n         OpenJPAStateManager em = ctx.embed(null, null, sm, field);\n         sm.storeObject(field.getIndex(), em.getManagedInstance());\n \n         FieldMapping[] fields = field.getEmbeddedMapping().getFieldMappings();\n         Object eres, processed;\n-        boolean loaded = false;\n+        boolean needsLoad = false;\n         for (int i = 0; i < fields.length; i++) {\n             eres = res.getEager(fields[i]);\n             res.startDataRequest(fields[i]);\n@@ -429,18 +428,24 @@ else if (eres != null) {\n                         fields[i].loadEagerParallel(em, store, fetch, eres);\n                     if (processed != eres)\n                         res.putEager(fields[i], processed);\n-                } else\n+                } else {\n                     fields[i].load(em, store, fetch, res);\n-                loaded |= em.getLoaded().get(i);\n+                }\n+                needsLoad = needsLoad || (!em.getLoaded().get(i) && \n+                    fetch.requiresFetch(fields[i])\n+                        == FetchConfiguration.FETCH_LOAD);\n             } finally {\n                 res.endDataRequest();\n             }\n         }\n \n-        // after loading everything from result, load the rest of the\n-        // configured fields\n-        if (loaded)\n-            em.load(fetch);\n+        // After loading everything from result, load the rest of the\n+        // configured fields if anything is missing.\n+        if (needsLoad && \n+            fetch.requiresFetch(field.getFieldMetaData()) == \n+                JDBCFetchConfiguration.FETCH_LOAD) {\n+          em.load(fetch);\n+        }\n     }\n \n     /**"}]}

