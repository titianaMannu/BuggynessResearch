{"sha":"69fd9dbad901302a1e4ae5d9515068a1fce1bb37","node_id":"MDY6Q29tbWl0MjA2MzY0OjY5ZmQ5ZGJhZDkwMTMwMmExZTRhZTVkOTUxNTA2OGExZmNlMWJiMzc=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2011-04-27T16:00:37Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2011-04-27T16:00:37Z"},"message":"OPENJPA-1985: Check for abstime as a timestamp type for Postgres\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1097160 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"d88994324e885d20f73128a8810a0830d0d93208","url":"https://api.github.com/repos/apache/openjpa/git/trees/d88994324e885d20f73128a8810a0830d0d93208"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/69fd9dbad901302a1e4ae5d9515068a1fce1bb37","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/69fd9dbad901302a1e4ae5d9515068a1fce1bb37","html_url":"https://github.com/apache/openjpa/commit/69fd9dbad901302a1e4ae5d9515068a1fce1bb37","comments_url":"https://api.github.com/repos/apache/openjpa/commits/69fd9dbad901302a1e4ae5d9515068a1fce1bb37/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"bb50bc3caf498016c0b107c28f9831cb40c4c86d","url":"https://api.github.com/repos/apache/openjpa/commits/bb50bc3caf498016c0b107c28f9831cb40c4c86d","html_url":"https://github.com/apache/openjpa/commit/bb50bc3caf498016c0b107c28f9831cb40c4c86d"}],"stats":{"total":11,"additions":10,"deletions":1},"files":[{"sha":"5ba610f29225d9729744737a12c1fe4f0a82358b","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/PostgresDictionary.java","status":"modified","additions":10,"deletions":1,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/69fd9dbad901302a1e4ae5d9515068a1fce1bb37/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/PostgresDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/69fd9dbad901302a1e4ae5d9515068a1fce1bb37/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/PostgresDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/PostgresDictionary.java?ref=69fd9dbad901302a1e4ae5d9515068a1fce1bb37","patch":"@@ -37,7 +37,9 @@\n import java.text.SimpleDateFormat;\n import java.util.Arrays;\n import java.util.Date;\n+import java.util.HashSet;\n import java.util.Map;\n+import java.util.Set;\n \n import org.apache.openjpa.jdbc.identifier.DBIdentifier;\n import org.apache.openjpa.jdbc.identifier.Normalizer;\n@@ -74,6 +76,8 @@\n \n     private Method dbcpGetDelegate;\n     private Method connectionUnwrap;\n+    \n+    protected Set<String> _timestampTypes = new HashSet<String>(); \n \n     static {\n         try {\n@@ -219,6 +223,10 @@ public PostgresDictionary() {\n             \"THEN\", \"TO\", \"TRAILING\", \"TRUE\", \"UNION\", \"UNIQUE\", \"USER\", \n             \"USING\", \"VERBOSE\", \"WHEN\", \"WHERE\",\n         }));\n+        \n+        _timestampTypes.add(\"ABSTIME\");\n+        _timestampTypes.add(\"TIMESTAMP\");\n+        _timestampTypes.add(timestampTypeName.toUpperCase()); // handle user configured timestamp types.\n     }\n \n     @Override\n@@ -783,7 +791,7 @@ public Object getObject(ResultSet rs, int column, Map map)\n             try {\n                 Method m = obj.getClass().getMethod(\"getType\", (Class[]) null);\n                 Object type = m.invoke(obj, (Object[]) null);\n-                if (((String) type).equalsIgnoreCase(timestampTypeName)) {\n+                if(_timestampTypes.contains(((String) type).toUpperCase())) { \n                     return rs.getTimestamp(column);\n                 }\n             } catch (Throwable t) {\n@@ -1024,3 +1032,4 @@ public void setFetchSize(int i)\n         }\n     }\n }\n+"}]}

