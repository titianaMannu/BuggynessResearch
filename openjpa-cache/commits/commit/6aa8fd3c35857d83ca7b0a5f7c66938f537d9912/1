{"sha":"6aa8fd3c35857d83ca7b0a5f7c66938f537d9912","node_id":"MDY6Q29tbWl0MjA2MzY0OjZhYThmZDNjMzU4NTdkODNjYTdiMGE1ZjdjNjY5MzhmNTM3ZDk5MTI=","commit":{"author":{"name":"A. Abram White","email":"awhite@apache.org","date":"2008-04-01T21:29:26Z"},"committer":{"name":"A. Abram White","email":"awhite@apache.org","date":"2008-04-01T21:29:26Z"},"message":"Always consider the inclusion of subclasses as part of the query compilation\nkey, even when the candidate class is encoded in the query string instead of\nset programmatically. \n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@643586 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"fdaa145ffd6ea3ac5d9f7a88972f3a7857358f8d","url":"https://api.github.com/repos/apache/openjpa/git/trees/fdaa145ffd6ea3ac5d9f7a88972f3a7857358f8d"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/6aa8fd3c35857d83ca7b0a5f7c66938f537d9912","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/6aa8fd3c35857d83ca7b0a5f7c66938f537d9912","html_url":"https://github.com/apache/openjpa/commit/6aa8fd3c35857d83ca7b0a5f7c66938f537d9912","comments_url":"https://api.github.com/repos/apache/openjpa/commits/6aa8fd3c35857d83ca7b0a5f7c66938f537d9912/comments","author":null,"committer":null,"parents":[{"sha":"6b5e0c6967d20d19e77954cdbc8ccb4367c86f00","url":"https://api.github.com/repos/apache/openjpa/commits/6b5e0c6967d20d19e77954cdbc8ccb4367c86f00","html_url":"https://github.com/apache/openjpa/commit/6b5e0c6967d20d19e77954cdbc8ccb4367c86f00"}],"stats":{"total":12,"additions":6,"deletions":6},"files":[{"sha":"180084767a101fef0fb8e0b1ecb998809f25b63a","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryImpl.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/6aa8fd3c35857d83ca7b0a5f7c66938f537d9912/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryImpl.java","raw_url":"https://github.com/apache/openjpa/raw/6aa8fd3c35857d83ca7b0a5f7c66938f537d9912/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryImpl.java?ref=6aa8fd3c35857d83ca7b0a5f7c66938f537d9912","patch":"@@ -1719,6 +1719,8 @@ public int hashCode() {\n             rs = 37 * rs + ((query == null) ? 0 : query.hashCode());\r\n             rs = 37 * rs + ((language == null) ? 0 : language.hashCode());\r\n             rs = 37 * rs + ((storeKey == null) ? 0 : storeKey.hashCode());\r\n+            if (subclasses)\r\n+              rs++;\r\n             return rs;\r\n         }\r\n \r\n@@ -1733,18 +1735,16 @@ public boolean equals(Object other) {\n                 || !StringUtils.equals(key.query, query)\r\n                 || !StringUtils.equals(key.language, language))\r\n                 return false;\r\n-\r\n+            if (key.subclasses != subclasses)\r\n+                return false;\r\n             if (!ObjectUtils.equals(key.storeKey, storeKey))\r\n                 return false;\r\n \r\n             // allow either candidate type to be null because it might be\r\n             // encoded in the query string, but if both are set then they\r\n             // must be equal\r\n-            if (candidateType != null && key.candidateType != null)\r\n-                return candidateType == key.candidateType\r\n-                    && subclasses == key.subclasses;\r\n-\r\n-            return true;\r\n+            return key.candidateType == null || candidateType == null\r\n+                || key.candidateType == candidateType;\r\n         }\r\n     }\r\n \r"}]}

