{"sha":"6ac482c68fb8f57ce68202f73f623142b1c86cc5","node_id":"MDY6Q29tbWl0MjA2MzY0OjZhYzQ4MmM2OGZiOGY1N2NlNjgyMDJmNzNmNjIzMTQyYjFjODZjYzU=","commit":{"author":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-09-12T20:06:29Z"},"committer":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-09-12T20:06:29Z"},"message":"Fix erroneous change I made yesterday.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@442691 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"67e37d867771bdddfed175ea1cfaffd64a5987eb","url":"https://api.github.com/repos/apache/openjpa/git/trees/67e37d867771bdddfed175ea1cfaffd64a5987eb"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/6ac482c68fb8f57ce68202f73f623142b1c86cc5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/6ac482c68fb8f57ce68202f73f623142b1c86cc5","html_url":"https://github.com/apache/openjpa/commit/6ac482c68fb8f57ce68202f73f623142b1c86cc5","comments_url":"https://api.github.com/repos/apache/openjpa/commits/6ac482c68fb8f57ce68202f73f623142b1c86cc5/comments","author":null,"committer":null,"parents":[{"sha":"d1e7a817d2bf5c08d61a4f275cf85c1318d70397","url":"https://api.github.com/repos/apache/openjpa/commits/d1e7a817d2bf5c08d61a4f275cf85c1318d70397","html_url":"https://github.com/apache/openjpa/commit/d1e7a817d2bf5c08d61a4f275cf85c1318d70397"}],"stats":{"total":11,"additions":5,"deletions":6},"files":[{"sha":"0033b1e8af8d140f84c63b1f7416d737dbe05f6e","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/MappingFactoryValue.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/6ac482c68fb8f57ce68202f73f623142b1c86cc5/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/MappingFactoryValue.java","raw_url":"https://github.com/apache/openjpa/raw/6ac482c68fb8f57ce68202f73f623142b1c86cc5/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/MappingFactoryValue.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/MappingFactoryValue.java?ref=6ac482c68fb8f57ce68202f73f623142b1c86cc5","patch":"@@ -15,6 +15,7 @@\n  */\n package org.apache.openjpa.jdbc.conf;\n \n+import org.apache.commons.lang.StringUtils;\n import org.apache.openjpa.jdbc.meta.MetaDataPlusMappingFactory;\n import org.apache.openjpa.lib.conf.Configuration;\n import org.apache.openjpa.lib.conf.Configurations;\n@@ -89,7 +90,7 @@ public MetaDataFactory instantiateMetaDataFactory(Configuration conf,\n         // if no mapping factory set, check for default for this factory\n         if (clsName == null || clsName.length() == 0) {\n             String def;\n-            if (mapping != null) {\n+            if (!StringUtils.isEmpty(mapping)) {\n                 def = unalias(metaPlugin.alias(metaClsName),\n                     _mappedMetaFactoryDefaults, true);\n                 if (def != null)"},{"sha":"8e9bbf19bd794dcef412c1ad07de77b7ae738a3c","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationFieldStrategy.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/6ac482c68fb8f57ce68202f73f623142b1c86cc5/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationFieldStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/6ac482c68fb8f57ce68202f73f623142b1c86cc5/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationFieldStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationFieldStrategy.java?ref=6ac482c68fb8f57ce68202f73f623142b1c86cc5","patch":"@@ -243,8 +243,7 @@ private void nullInverse(OpenJPAStateManager sm, RowManager rm)\n         throws SQLException {\n         ForeignKey fk = field.getForeignKey();\n         ColumnIO io = field.getColumnIO();\n-        if (fk.getDeleteAction() != ForeignKey.ACTION_NONE \n-            || !io.isAnyUpdatable(fk, true))\n+        if (!io.isAnyUpdatable(fk, true))\n             return;\n \n         // null inverse if not already enforced by fk"},{"sha":"1a1a4e661ef0fc78cb66a17ee5add44f4018cce1","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationToManyInverseKeyFieldStrategy.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/6ac482c68fb8f57ce68202f73f623142b1c86cc5/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationToManyInverseKeyFieldStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/6ac482c68fb8f57ce68202f73f623142b1c86cc5/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationToManyInverseKeyFieldStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationToManyInverseKeyFieldStrategy.java?ref=6ac482c68fb8f57ce68202f73f623142b1c86cc5","patch":"@@ -223,8 +223,7 @@ public void delete(OpenJPAStateManager sm, JDBCStore store, RowManager rm)\n         ValueMapping elem = field.getElementMapping();\n         ColumnIO io = elem.getColumnIO();\n         ForeignKey fk = elem.getForeignKey();\n-        if (fk.getDeleteAction() != ForeignKey.ACTION_NONE\n-            || !io.isAnyUpdatable(fk, true)) \n+        if (!io.isAnyUpdatable(fk, true)) \n             return;\n \n         // if the fk doesn't enforce it, null any existing inverse columns "},{"sha":"d578b7cbe4823dfda47c833e8fee5f68456d0b79","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/ENonTransState.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/6ac482c68fb8f57ce68202f73f623142b1c86cc5/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/ENonTransState.java","raw_url":"https://github.com/apache/openjpa/raw/6ac482c68fb8f57ce68202f73f623142b1c86cc5/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/ENonTransState.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/ENonTransState.java?ref=6ac482c68fb8f57ce68202f73f623142b1c86cc5","patch":"@@ -17,7 +17,7 @@\n \n /**\n  * Lifecycle state.\n- *  Represents an embedded instance that is not transactional, but that\n+ * Represents an embedded instance that is not transactional, but that\n  * allows access to persistent data. This state is reachable only if the\n  * retainValues flag of the broker is set.\n  *"}]}

