{"sha":"6b93af88a660000ee6ff0a6f911b356b05a69028","node_id":"MDY6Q29tbWl0MjA2MzY0OjZiOTNhZjg4YTY2MDAwMGVlNmZmMGE2ZjkxMWIzNTZiMDVhNjkwMjg=","commit":{"author":{"name":"Milosz Tylenda","email":"mtylenda@apache.org","date":"2011-04-16T11:06:11Z"},"committer":{"name":"Milosz Tylenda","email":"mtylenda@apache.org","date":"2011-04-16T11:06:11Z"},"message":"OPENJPA-1932: Documentation update: Upgrade JSE 5 Javadoc links to JSE 6 in Slice documentation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1093964 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"6578ca2cfed7eb95be56bac0bb31e66e4e2fdefc","url":"https://api.github.com/repos/apache/openjpa/git/trees/6578ca2cfed7eb95be56bac0bb31e66e4e2fdefc"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/6b93af88a660000ee6ff0a6f911b356b05a69028","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/6b93af88a660000ee6ff0a6f911b356b05a69028","html_url":"https://github.com/apache/openjpa/commit/6b93af88a660000ee6ff0a6f911b356b05a69028","comments_url":"https://api.github.com/repos/apache/openjpa/commits/6b93af88a660000ee6ff0a6f911b356b05a69028/comments","author":null,"committer":null,"parents":[{"sha":"d5e20c4a115bf69a48adb29e7791f56f82993579","url":"https://api.github.com/repos/apache/openjpa/commits/d5e20c4a115bf69a48adb29e7791f56f82993579","html_url":"https://github.com/apache/openjpa/commit/d5e20c4a115bf69a48adb29e7791f56f82993579"}],"stats":{"total":12,"additions":6,"deletions":6},"files":[{"sha":"b43d6e27687e0ba3f47dd1c35e8a835f861b5225","filename":"openjpa-project/src/doc/manual/ref_guide_slice.xml","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/6b93af88a660000ee6ff0a6f911b356b05a69028/openjpa-project/src/doc/manual/ref_guide_slice.xml","raw_url":"https://github.com/apache/openjpa/raw/6b93af88a660000ee6ff0a6f911b356b05a69028/openjpa-project/src/doc/manual/ref_guide_slice.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_slice.xml?ref=6b93af88a660000ee6ff0a6f911b356b05a69028","patch":"@@ -555,15 +555,15 @@ the JDBC connection URL of a slice.\n         for database operations such as query or flush on individual slices. \n         The value of the property is a \n         fully-qualified class name that implements \n-        <ulink url=\"http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/ExecutorService.html\">\n+        <ulink url=\"http://java.sun.com/javase/6/docs/api/java/util/concurrent/ExecutorService.html\">\n         <classname>java.util.concurrent.ExecutorService</classname>\n         </ulink> interface.  \n         Two pre-defined pools can be chosen via their aliases namely \n         <classname>fixed</classname> or <classname>cached</classname>.\n         </para>\n         <para>\n         The pre-defined alias <classname>cached</classname> activates a \n-        <ulink url=\"http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/Executors.html#newCachedThreadPool()\">cached thread pool</ulink>. \n+        <ulink url=\"http://java.sun.com/javase/6/docs/api/java/util/concurrent/Executors.html#newCachedThreadPool()\">cached thread pool</ulink>. \n         A cached thread pool creates new threads as needed, but will reuse \n         previously constructed threads when they are available. This pool \n         is suitable in scenarios that execute many short-lived asynchronous tasks.\n@@ -573,23 +573,23 @@ the JDBC connection URL of a slice.\n         </para>\n         <para>\n         The <classname>fixed</classname> alias activates a \n-        <ulink url=\"http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/Executors.html#newFixedThreadPool(int)\">fixed thread pool</ulink>.\n+        <ulink url=\"http://java.sun.com/javase/6/docs/api/java/util/concurrent/Executors.html#newFixedThreadPool(int)\">fixed thread pool</ulink>.\n         The fixed thread pool can be further parameterized with \n         <classname>CorePoolSize</classname>, <classname>MaximumPoolSize</classname>, \n         <classname>KeepAliveTime</classname> and <classname>RejectedExecutionHandler</classname>. \n         The meaning of these parameters are described in \n-        <ulink url=\"http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/ThreadPoolExecutor.html\">JavaDoc</ulink>.\n+        <ulink url=\"http://java.sun.com/javase/6/docs/api/java/util/concurrent/ThreadPoolExecutor.html\">JavaDoc</ulink>.\n         The users can exercise finer control on thread pool behavior via these\n         parameters.\n         By default, the core pool size is <classname>10</classname>, maximum pool size is\n         also <classname>10</classname>, keep alive time is <classname>60</classname> seconds and \n         rejected execution is \n-        <ulink url=\"http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/ThreadPoolExecutor.AbortPolicy.html\">aborted</ulink>.\n+        <ulink url=\"http://java.sun.com/javase/6/docs/api/java/util/concurrent/ThreadPoolExecutor.AbortPolicy.html\">aborted</ulink>.\n         </para>\n         <para>\n         Both of the pre-defined aliases can be parameterized with a fully-qualified\n         class name that implements \n-        <ulink url=\"http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/ThreadFactory.html\">\n+        <ulink url=\"http://java.sun.com/javase/6/docs/api/java/util/concurrent/ThreadFactory.html\">\n         <classname>java.util.concurrent.ThreadFactory</classname>\n         </ulink> interface.\n         </para>"}]}

