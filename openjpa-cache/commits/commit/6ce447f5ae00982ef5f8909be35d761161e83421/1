{"sha":"6ce447f5ae00982ef5f8909be35d761161e83421","node_id":"MDY6Q29tbWl0MjA2MzY0OjZjZTQ0N2Y1YWUwMDk4MmVmNWY4OTA5YmUzNWQ3NjExNjFlODM0MjE=","commit":{"author":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-01-27T16:33:54Z"},"committer":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-01-27T16:33:54Z"},"message":"OPENJPA-838: check in test case\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/1.2.x@738137 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"605912feaba749ba14eb03bd85fcbc43d0853218","url":"https://api.github.com/repos/apache/openjpa/git/trees/605912feaba749ba14eb03bd85fcbc43d0853218"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/6ce447f5ae00982ef5f8909be35d761161e83421","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/6ce447f5ae00982ef5f8909be35d761161e83421","html_url":"https://github.com/apache/openjpa/commit/6ce447f5ae00982ef5f8909be35d761161e83421","comments_url":"https://api.github.com/repos/apache/openjpa/commits/6ce447f5ae00982ef5f8909be35d761161e83421/comments","author":null,"committer":null,"parents":[{"sha":"80dc4a39e785457605080be80fde560c12eead15","url":"https://api.github.com/repos/apache/openjpa/commits/80dc4a39e785457605080be80fde560c12eead15","html_url":"https://github.com/apache/openjpa/commit/80dc4a39e785457605080be80fde560c12eead15"}],"stats":{"total":228,"additions":225,"deletions":3},"files":[{"sha":"ba0cce7f3b0b7b513446fc4956f5847759c0832b","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/Invoice.java","status":"added","additions":80,"deletions":0,"changes":80,"blob_url":"https://github.com/apache/openjpa/blob/6ce447f5ae00982ef5f8909be35d761161e83421/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/Invoice.java","raw_url":"https://github.com/apache/openjpa/raw/6ce447f5ae00982ef5f8909be35d761161e83421/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/Invoice.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/Invoice.java?ref=6ce447f5ae00982ef5f8909be35d761161e83421","patch":"@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.jdbc.query.cache;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.persistence.*;\n+/**\n+ * @version $Revision$ $Date$\n+ */\n+@Entity\n+@IdClass(InvoiceKey.class)\n+public class Invoice {\n+\n+    @Id\n+    private int id;\n+    @Id\n+    private String brandName;\n+    \n+    private double price;\n+\n+    @OneToMany(cascade={CascadeType.ALL})\n+    private List<LineItem> lineItems = new ArrayList<LineItem>();\n+\n+    public Invoice() {\n+    }\n+\n+    public Invoice(int id, String brandName, double price) {\n+        this.id = id;\n+        this.brandName = brandName;\n+        this.price = price;\n+    }\n+\n+    public int getId() {\n+        return id;\n+    }\n+\n+    public void setId(int id) {\n+        this.id = id;\n+    }\n+\n+    public String getBrandName() {\n+        return brandName;\n+    }\n+\n+    public void setBrandName(String brandName) {\n+        this.brandName = brandName;\n+    }\n+\n+    public double getPrice() {\n+        return price;\n+    }\n+\n+    public void setPrice(double price) {\n+        this.price = price;\n+    }\n+\n+    public List<LineItem> getLineItems() {\n+        return lineItems;\n+    }\n+\n+    public void setLineItems(List<LineItem> lineItems) {\n+        this.lineItems = lineItems;\n+    }\n+}"},{"sha":"0d49deb27a0bb235b9b4444b8037b24fa171a822","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/InvoiceKey.java","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/apache/openjpa/blob/6ce447f5ae00982ef5f8909be35d761161e83421/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/InvoiceKey.java","raw_url":"https://github.com/apache/openjpa/raw/6ce447f5ae00982ef5f8909be35d761161e83421/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/InvoiceKey.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/InvoiceKey.java?ref=6ce447f5ae00982ef5f8909be35d761161e83421","patch":"@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.jdbc.query.cache;\n+\n+/**\n+ * @version $Revision$ $Date$\n+ */\n+public class InvoiceKey {\n+\n+    private int id;\n+    private String brandName;\n+\n+    public InvoiceKey() {\n+    }\n+\n+    public InvoiceKey(int id, String brandName) {\n+        this.id = id;\n+        this.brandName = brandName;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n+\n+        InvoiceKey invoiceKey = (InvoiceKey) o;\n+\n+        if (id != invoiceKey.id) return false;\n+        if (!brandName.equals(invoiceKey.brandName)) return false;\n+\n+        return true;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        int result = id;\n+        result = 31 * result + brandName.hashCode();\n+        return result;\n+    }\n+}"},{"sha":"e3c6fff092c6330432be1713af7bd33e2531170f","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/LineItem.java","status":"added","additions":65,"deletions":0,"changes":65,"blob_url":"https://github.com/apache/openjpa/blob/6ce447f5ae00982ef5f8909be35d761161e83421/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/LineItem.java","raw_url":"https://github.com/apache/openjpa/raw/6ce447f5ae00982ef5f8909be35d761161e83421/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/LineItem.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/LineItem.java?ref=6ce447f5ae00982ef5f8909be35d761161e83421","patch":"@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.jdbc.query.cache;\n+import javax.persistence.*;\n+\n+/**\n+ * @version $Revision$ $Date$\n+ */\n+@Entity\n+public class LineItem {\n+\n+    @Id\n+    private String id;\n+    private int quantity;\n+    \n+    @ManyToOne\n+    private Invoice invoice;\n+\n+    public LineItem() {\n+    }\n+\n+    public LineItem(String id, int quantity) {\n+        this.id = id;\n+        this.quantity = quantity;\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public void setId(String id) {\n+        this.id = id;\n+    }\n+\n+    public int getQuantity() {\n+        return quantity;\n+    }\n+\n+    public void setQuantity(int quantity) {\n+        this.quantity = quantity;\n+    }\n+\n+    public Invoice getInvoice() {\n+        return invoice;\n+    }\n+\n+    public void setInvoice(Invoice invoice) {\n+        this.invoice = invoice;\n+    }\n+}\n+"},{"sha":"3808a49e149bbe48a1121d563f3124b048299c13","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/TestNonPrimaryKeyQueryParameters.java","status":"modified","additions":26,"deletions":3,"changes":29,"blob_url":"https://github.com/apache/openjpa/blob/6ce447f5ae00982ef5f8909be35d761161e83421/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/TestNonPrimaryKeyQueryParameters.java","raw_url":"https://github.com/apache/openjpa/raw/6ce447f5ae00982ef5f8909be35d761161e83421/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/TestNonPrimaryKeyQueryParameters.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/TestNonPrimaryKeyQueryParameters.java?ref=6ce447f5ae00982ef5f8909be35d761161e83421","patch":"@@ -18,10 +18,10 @@\n  */\r\n package org.apache.openjpa.persistence.jdbc.query.cache;\r\n \r\n-import java.util.ArrayList;\r\n-import java.util.Collection;\r\n+import java.util.List;\r\n \r\n import javax.persistence.EntityManager;\r\n+import javax.persistence.EntityTransaction;\r\n import javax.persistence.Query;\r\n \r\n import org.apache.openjpa.persistence.test.SQLListenerTestCase;\r\n@@ -45,18 +45,21 @@\n  * \r\n  * @author Pinaki Poddar\r\n  * @author Vikram Bhatia\r\n- * \r\n+ * @author David Blevins\r\n  */\r\n public class TestNonPrimaryKeyQueryParameters extends SQLListenerTestCase {\r\n \tprivate static final int FULLTIME_EMPLOYEE_COUNT = 3;\r\n \tprivate static final int PARTTIME_EMPLOYEE_COUNT = 2;\r\n+    private static final int LINEITEM_PER_INVOICE = 1;\r\n \tprivate static final String DEPT_NAME = \"ENGINEERING\";\r\n \r\n \tpublic void setUp() {\r\n \t\tsuper.setUp(CLEAR_TABLES, Department.class, Employee.class,\r\n \t\t\t\tFullTimeEmployee.class, PartTimeEmployee.class,\r\n+\t\t\t\tInvoice.class, LineItem.class,\r\n \t\t\t\t\"openjpa.jdbc.QuerySQLCache\", \"true\");\r\n \t\tcreateDepartment(DEPT_NAME);\r\n+\t\tcreateInvoice();\r\n \t\tsql.clear();\r\n \t}\r\n \r\n@@ -103,6 +106,10 @@ public void testFind() {\n \t\t\t\t.size());\r\n \r\n \t\tassertSQL(\".* AND t0.TYPE = .*\");\r\n+\t\t\r\n+        Invoice invoice = em.find(Invoice.class, new InvoiceKey(1, \"Red\"));\r\n+        List<LineItem> list = invoice.getLineItems();\r\n+        assertEquals(LINEITEM_PER_INVOICE, list.size());\r\n \t\tem.close();\r\n \t}\r\n \r\n@@ -154,4 +161,20 @@ private void createDepartment(String deptName) {\n \t\tem.close();\r\n \r\n \t}\r\n+\t\r\n+    private void createInvoice() {\r\n+        EntityManager em = emf.createEntityManager();\r\n+        EntityTransaction tran = em.getTransaction();\r\n+        tran.begin();\r\n+        Invoice invoice = new Invoice(1, \"Red\", 1.30);\r\n+        for (int i = 1;  i <= LINEITEM_PER_INVOICE; i++) {\r\n+            LineItem item = new LineItem(String.valueOf(i), 10);\r\n+            item.setInvoice(invoice);\r\n+            invoice.getLineItems().add(item);\r\n+            em.persist(invoice);\r\n+        }\r\n+        em.flush();\r\n+        tran.commit();\r\n+        em.close();        \r\n+    }\t\r\n }\r"}]}

