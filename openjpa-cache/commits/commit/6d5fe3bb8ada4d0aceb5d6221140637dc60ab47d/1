{"sha":"6d5fe3bb8ada4d0aceb5d6221140637dc60ab47d","node_id":"MDY6Q29tbWl0MjA2MzY0OjZkNWZlM2JiOGFkYTRkMGFjZWI1ZDYyMjExNDA2MzdkYzYwYWI0N2Q=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2007-09-10T16:01:40Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2007-09-10T16:01:40Z"},"message":"OPENJPA-357, OPENJPA-358: Adding @since tag/comments to new additions to FetchGroup inclusion\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@574289 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"93406a744b0f8ee4e1b6c0b692358c69c49bec9a","url":"https://api.github.com/repos/apache/openjpa/git/trees/93406a744b0f8ee4e1b6c0b692358c69c49bec9a"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/6d5fe3bb8ada4d0aceb5d6221140637dc60ab47d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/6d5fe3bb8ada4d0aceb5d6221140637dc60ab47d","html_url":"https://github.com/apache/openjpa/commit/6d5fe3bb8ada4d0aceb5d6221140637dc60ab47d","comments_url":"https://api.github.com/repos/apache/openjpa/commits/6d5fe3bb8ada4d0aceb5d6221140637dc60ab47d/comments","author":null,"committer":null,"parents":[{"sha":"cd66165d7631cb9e0ad04875acb5869d7a4f8a9e","url":"https://api.github.com/repos/apache/openjpa/commits/cd66165d7631cb9e0ad04875acb5869d7a4f8a9e","html_url":"https://github.com/apache/openjpa/commit/cd66165d7631cb9e0ad04875acb5869d7a4f8a9e"}],"stats":{"total":33,"additions":21,"deletions":12},"files":[{"sha":"cd7c86da6125ecb036bf603f589ee6ad53e05d92","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/FetchGroup.java","status":"modified","additions":17,"deletions":8,"changes":25,"blob_url":"https://github.com/apache/openjpa/blob/6d5fe3bb8ada4d0aceb5d6221140637dc60ab47d/openjpa-kernel/src/main/java/org/apache/openjpa/meta/FetchGroup.java","raw_url":"https://github.com/apache/openjpa/raw/6d5fe3bb8ada4d0aceb5d6221140637dc60ab47d/openjpa-kernel/src/main/java/org/apache/openjpa/meta/FetchGroup.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/FetchGroup.java?ref=6d5fe3bb8ada4d0aceb5d6221140637dc60ab47d","patch":"@@ -20,6 +20,7 @@\n \r\n import java.io.Serializable;\r\n import java.util.ArrayList;\r\n+import java.util.Collections;\r\n import java.util.HashMap;\r\n import java.util.HashSet;\r\n import java.util.Iterator;\r\n@@ -108,6 +109,9 @@ void copy(FetchGroup fg) {\n         if (fg._includes != null)\r\n             for (Iterator itr = fg._includes.iterator(); itr.hasNext();)\r\n                 addDeclaredInclude((String) itr.next());\r\n+        if (fg._containedBy != null) \r\n+        \tthis._containedBy = new HashSet(fg._containedBy);\r\n+        \r\n         if (fg._depths != null) {\r\n             Map.Entry entry;\r\n             for (Iterator itr = fg._depths.entrySet().iterator(); \r\n@@ -155,7 +159,7 @@ public boolean includes(String fgName, boolean recurse) {\n         if (_includes != null) {\r\n             if (_includes.contains(fgName))\r\n                 return true;\r\n-            if (recurse) {\r\n+            if (recurse && _meta!=null) {\r\n                 FetchGroup fg;\r\n                 for (Iterator i = _includes.iterator(); i.hasNext();) {\r\n                     fg = _meta.getFetchGroup((String) i.next());\r\n@@ -177,14 +181,18 @@ public boolean includes(String fgName, boolean recurse) {\n     }\r\n     \r\n     /**\r\n-     * Sets this receiver as one of the included fetch groups of the given\r\n+     * Adds this receiver as one of the included fetch groups of the given\r\n      * parent. \r\n-     * The parent fecth grop must include this receiver before this call.\r\n+     * The parent fecth group will include this receiver as a side-effect of\r\n+     * this call.\r\n      * \r\n      * @see #includes(String, boolean)\r\n      * @see #addDeclaredInclude(String) \r\n+     * \r\n+     * @return true if given parent is a new addition. false othrwise.\r\n+     * @since 1.1.1   \r\n      */\r\n-    public boolean setContainedBy(FetchGroup parent) {\r\n+    public boolean addContainedBy(FetchGroup parent) {\r\n     \tparent.addDeclaredInclude(this.getName());\r\n     \tif (_containedBy==null)\r\n     \t\t_containedBy = new HashSet();\r\n@@ -195,11 +203,12 @@ public boolean setContainedBy(FetchGroup parent) {\n      * Gets the name of the fetch groups in which this receiver has been\r\n      * included.\r\n      * \r\n-     * @see #setContainedBy(FetchGroup)\r\n+     * @see #addContainedBy(FetchGroup)\r\n+     * @since 1.1.1   \r\n      */\r\n-    public String[] getContainedBy() {\r\n-    \treturn (_containedBy == null) ? new String[0] \r\n-            : (String[]) _containedBy.toArray(new String[_containedBy.size()]);\r\n+    public Set getContainedBy() {\r\n+    \treturn (_containedBy == null) ? Collections.EMPTY_SET :\r\n+            Collections.unmodifiableSet(_containedBy);\r\n     }\r\n \r\n     /**\r"},{"sha":"16d8e95971eddd953c6375b62078c4e00d8bf3cc","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/6d5fe3bb8ada4d0aceb5d6221140637dc60ab47d/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java","raw_url":"https://github.com/apache/openjpa/raw/6d5fe3bb8ada4d0aceb5d6221140637dc60ab47d/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java?ref=6d5fe3bb8ada4d0aceb5d6221140637dc60ab47d","patch":"@@ -902,7 +902,7 @@ private void parseFetchGroups(ClassMetaData meta, FetchGroup... groups) {\n         \tfg = meta.getFetchGroup(group.name());\n         \tString[] includedFetchGropNames = fg.getDeclaredIncludes();\n         \tfor (String includedFectchGroupName:includedFetchGropNames)\n-        \t    meta.getFetchGroup(includedFectchGroupName).setContainedBy(fg);\n+        \t    meta.getFetchGroup(includedFectchGroupName).addContainedBy(fg);\n         }\n         \n         for (FetchGroup group : groups) {\n@@ -925,9 +925,9 @@ private void parseFetchAttribute(ClassMetaData meta,\n                 meta, attr.name()));\n \n         field.setInFetchGroup(fg.getName(), true);\n-        String[] parentFetchGroups = fg.getContainedBy();\n-        for (String parentFetchGroup:parentFetchGroups)\n-        \tfield.setInFetchGroup(parentFetchGroup, true);\n+        Set parentFetchGroups = fg.getContainedBy();\n+        for (Object parentFetchGroup:parentFetchGroups)\n+        \tfield.setInFetchGroup(parentFetchGroup.toString(), true);\n         if (attr.recursionDepth() != Integer.MIN_VALUE)\n             fg.setRecursionDepth(field, attr.recursionDepth());\n     }"}]}

