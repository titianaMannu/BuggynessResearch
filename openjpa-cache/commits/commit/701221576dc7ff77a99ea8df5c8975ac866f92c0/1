{"sha":"701221576dc7ff77a99ea8df5c8975ac866f92c0","node_id":"MDY6Q29tbWl0MjA2MzY0OjcwMTIyMTU3NmRjN2ZmNzdhOTllYThkZjVjODk3NWFjODY2ZjkyYzA=","commit":{"author":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-09-04T03:20:19Z"},"committer":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-09-04T03:20:19Z"},"message":"OPENJPA-1286: Relationships in mapped superclass must be unidirectional\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@811211 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"3ee4b2de13901492aa455425b3da1ca59715914f","url":"https://api.github.com/repos/apache/openjpa/git/trees/3ee4b2de13901492aa455425b3da1ca59715914f"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/701221576dc7ff77a99ea8df5c8975ac866f92c0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/701221576dc7ff77a99ea8df5c8975ac866f92c0","html_url":"https://github.com/apache/openjpa/commit/701221576dc7ff77a99ea8df5c8975ac866f92c0","comments_url":"https://api.github.com/repos/apache/openjpa/commits/701221576dc7ff77a99ea8df5c8975ac866f92c0/comments","author":null,"committer":null,"parents":[{"sha":"c35277c156533287a6e20a0401cfc856f27cf36f","url":"https://api.github.com/repos/apache/openjpa/commits/c35277c156533287a6e20a0401cfc856f27cf36f","html_url":"https://github.com/apache/openjpa/commit/c35277c156533287a6e20a0401cfc856f27cf36f"}],"stats":{"total":14,"additions":14,"deletions":0},"files":[{"sha":"ec5e0ec76f7e6490c65ca471ca3fbd6a3a33eb4d","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/FieldMetaData.java","status":"modified","additions":14,"deletions":0,"changes":14,"blob_url":"https://github.com/apache/openjpa/blob/701221576dc7ff77a99ea8df5c8975ac866f92c0/openjpa-kernel/src/main/java/org/apache/openjpa/meta/FieldMetaData.java","raw_url":"https://github.com/apache/openjpa/raw/701221576dc7ff77a99ea8df5c8975ac866f92c0/openjpa-kernel/src/main/java/org/apache/openjpa/meta/FieldMetaData.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/FieldMetaData.java?ref=701221576dc7ff77a99ea8df5c8975ac866f92c0","patch":"@@ -48,6 +48,7 @@\n import org.apache.commons.collections.comparators.ComparatorChain;\n import org.apache.commons.lang.StringUtils;\n import org.apache.openjpa.conf.OpenJPAConfiguration;\n+import org.apache.openjpa.conf.Specification;\n import org.apache.openjpa.kernel.OpenJPAStateManager;\n import org.apache.openjpa.kernel.StoreContext;\n import org.apache.openjpa.lib.conf.Configurations;\n@@ -858,6 +859,19 @@ public FieldMetaData getMappedByMetaData() {\n             if (field.getMappedBy() != null)\n                 throw new MetaDataException(_loc.get(\"circ-mapped-by\", this,\n                     _mappedBy));\n+            Specification spec = getRepository().getConfiguration().getSpecificationInstance();\n+            if (spec != null) {\n+                int specVersion = spec.getVersion();\n+                if (specVersion >= 2) {\n+                    if (field.getDeclaringMetaData().isAbstract())\n+                        throw new MetaDataException(_loc.get(\"no-mapped-by-in-mapped-super\", field,\n+                                field.getDeclaringMetaData()));\n+\n+                    if (this.getDeclaringMetaData().isAbstract())\n+                        throw new MetaDataException(_loc.get(\"no-mapped-by-in-mapped-super\", this,\n+                                this.getDeclaringMetaData()));\n+                }            \n+            }\n             _mappedByMeta = field;\n         }\n         return _mappedByMeta;"}]}

