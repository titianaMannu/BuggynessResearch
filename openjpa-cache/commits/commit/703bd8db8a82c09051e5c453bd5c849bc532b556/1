{"sha":"703bd8db8a82c09051e5c453bd5c849bc532b556","node_id":"MDY6Q29tbWl0MjA2MzY0OjcwM2JkOGRiOGE4MmMwOTA1MWU1YzQ1M2JkNWM4NDliYzUzMmI1NTY=","commit":{"author":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-06-15T14:10:46Z"},"committer":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-06-15T14:10:46Z"},"message":"OPENJPA-1692: Revert some of previous commit.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@954898 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"817b14a434da0b57e89b324409753ce79155522a","url":"https://api.github.com/repos/apache/openjpa/git/trees/817b14a434da0b57e89b324409753ce79155522a"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/703bd8db8a82c09051e5c453bd5c849bc532b556","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/703bd8db8a82c09051e5c453bd5c849bc532b556","html_url":"https://github.com/apache/openjpa/commit/703bd8db8a82c09051e5c453bd5c849bc532b556","comments_url":"https://api.github.com/repos/apache/openjpa/commits/703bd8db8a82c09051e5c453bd5c849bc532b556/comments","author":null,"committer":null,"parents":[{"sha":"14cfcaa3ccf7b4229f1745b53e0b976e3aab250e","url":"https://api.github.com/repos/apache/openjpa/commits/14cfcaa3ccf7b4229f1745b53e0b976e3aab250e","html_url":"https://github.com/apache/openjpa/commit/14cfcaa3ccf7b4229f1745b53e0b976e3aab250e"}],"stats":{"total":41,"additions":12,"deletions":29},"files":[{"sha":"5940c1cd45aa61e47822e2302112bf6cb8a9538d","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCacheManagerImpl.java","status":"modified","additions":8,"deletions":11,"changes":19,"blob_url":"https://github.com/apache/openjpa/blob/703bd8db8a82c09051e5c453bd5c849bc532b556/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCacheManagerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/703bd8db8a82c09051e5c453bd5c849bc532b556/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCacheManagerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCacheManagerImpl.java?ref=703bd8db8a82c09051e5c453bd5c849bc532b556","patch":"@@ -57,17 +57,14 @@\n     \n     public void initialize(OpenJPAConfiguration conf, ObjectValue dataCache, ObjectValue queryCache) {\n         _conf = conf;\n-        try {\n-            _queryCache = (QueryCache) queryCache.instantiate(QueryCache.class, conf);\n-            if (_queryCache != null)\n-                _queryCache.initialize(this);\n-            _cache = (DataCache) dataCache.instantiate(DataCache.class, conf);\n-\n-            if (_cache == null)\n-                return;\n-        } catch (Exception cnfe) {\n-            System.err.println(\"Caught a cnfe upon creation of the \" + DataCacheManagerImpl.class.getName());\n-        }\n+        _queryCache = (QueryCache) queryCache.instantiate(QueryCache.class, conf);\n+        if (_queryCache != null)\n+            _queryCache.initialize(this);\n+        _cache = (DataCache) dataCache.instantiate(DataCache.class, conf);\n+\n+        if (_cache == null)\n+            return;\n+         \n         // create helpers before initializing caches\n         if (conf.getDynamicDataStructs())\n             _pcGenerator = new DataCachePCDataGenerator(conf);"},{"sha":"6a134cfd00e4df15c3ef13af51c99b46918ac764","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestPessimisticLocking.java","status":"modified","additions":4,"deletions":15,"changes":19,"blob_url":"https://github.com/apache/openjpa/blob/703bd8db8a82c09051e5c453bd5c849bc532b556/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestPessimisticLocking.java","raw_url":"https://github.com/apache/openjpa/raw/703bd8db8a82c09051e5c453bd5c849bc532b556/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestPessimisticLocking.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/TestPessimisticLocking.java?ref=703bd8db8a82c09051e5c453bd5c849bc532b556","patch":"@@ -39,9 +39,6 @@\n \n import org.apache.openjpa.jdbc.conf.JDBCConfiguration;\n import java.util.concurrent.locks.ReentrantLock;\n-\n-import javax.persistence.LockModeType;\n-\n import org.apache.openjpa.persistence.OpenJPAEntityManager;\n import org.apache.openjpa.persistence.OpenJPAEntityManagerFactory;\n import org.apache.openjpa.persistence.jdbc.FetchMode;\n@@ -89,10 +86,8 @@ protected OpenJPAEntityManager getLockingPM() {\n     public void setUp() throws Exception {\n         super.setUp(RuntimeTest1.class, RuntimeTest2.class, RuntimeTest3.class);\n \n-        Map<String,String> propsMap = new HashMap<String,String>();\n-//        propsMap.put(\"openjpa.LockManager\", \"pessimistic\");//<property name=\"openjpa.jdbc.TransactionIsolation\" value=\"read-committed\" />\n-        propsMap.put(\"openjpa.jdbc.TransactionIsolation\", \"read-committed\");\n-//        propsMap.put(\"openjpa.Log\", \"DefaultLevel=trace\");\n+        Map propsMap = new HashMap();\n+        propsMap.put(\"openjpa.LockManager\", \"pessimistic\");\n         _factory = getEmf(propsMap);\n \n         OpenJPAEntityManager pm = getLockingPM();\n@@ -114,15 +109,10 @@ public void tearDown() {\n         }\n     }\n \n-    public void test() throws Exception {\n-        OpenJPAEntityManager em = getLockingPM();\n-//        em.createQuery(\"select c from RuntimeTest1 c where 1=1\").getResultList();\n-        em.createNamedQuery(\"asdf\").getResultList();\n-    }\n     /**\n      * Test that pessimistic locking is working in the data store.\n      */\n-    public void atestPessimisticLocking() throws Throwable {\n+    public void testPessimisticLocking() throws Throwable {\n         pessimisticLockingTest(false);\n     }\n \n@@ -131,7 +121,7 @@ public void atestPessimisticLocking() throws Throwable {\n      * test will validate that the test case itself is working correctly, not\n      * that the datastore's pessimistic locking is working.\n      */\n-    public void atestPessimisticLockingInternal() throws Throwable {\n+    public void testPessimisticLockingInternal() throws Throwable {\n         pessimisticLockingTest(true);\n     }\n \n@@ -284,4 +274,3 @@ public synchronized void run() {\n \t}\n \n }\n-"},{"sha":"c1a50d5f0a2a0efd666e993f478a5dd9d897c96d","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/common/apps/RuntimeTest1.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/703bd8db8a82c09051e5c453bd5c849bc532b556/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/common/apps/RuntimeTest1.java","raw_url":"https://github.com/apache/openjpa/raw/703bd8db8a82c09051e5c453bd5c849bc532b556/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/common/apps/RuntimeTest1.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/common/apps/RuntimeTest1.java?ref=703bd8db8a82c09051e5c453bd5c849bc532b556","patch":"@@ -30,8 +30,6 @@\n import javax.persistence.Id;\n import javax.persistence.Inheritance;\n import javax.persistence.InheritanceType;\n-import javax.persistence.LockModeType;\n-import javax.persistence.NamedQuery;\n import javax.persistence.OneToMany;\n import javax.persistence.OneToOne;\n import javax.persistence.Table;\n@@ -46,7 +44,6 @@\n  * @author Abe White\n  */\n @Entity\n-@NamedQuery(name=\"asdf\",query=\"select c from RuntimeTest1 c where 1=1\")\n @Table(name = \"rtest1\")\n @Inheritance(strategy = InheritanceType.SINGLE_TABLE)\n public class RuntimeTest1 implements Serializable {"}]}

