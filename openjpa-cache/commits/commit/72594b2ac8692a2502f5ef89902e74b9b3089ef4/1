{"sha":"72594b2ac8692a2502f5ef89902e74b9b3089ef4","node_id":"MDY6Q29tbWl0MjA2MzY0OjcyNTk0YjJhYzg2OTJhMjUwMmY1ZWY4OTkwMmU3NGI5YjMwODllZjQ=","commit":{"author":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-10-11T16:43:17Z"},"committer":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-10-11T16:43:17Z"},"message":"Remove some bad vert inheritance logic.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@462846 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"e17a91f2bc39a8c45eab01c1887111f28b2888bf","url":"https://api.github.com/repos/apache/openjpa/git/trees/e17a91f2bc39a8c45eab01c1887111f28b2888bf"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/72594b2ac8692a2502f5ef89902e74b9b3089ef4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/72594b2ac8692a2502f5ef89902e74b9b3089ef4","html_url":"https://github.com/apache/openjpa/commit/72594b2ac8692a2502f5ef89902e74b9b3089ef4","comments_url":"https://api.github.com/repos/apache/openjpa/commits/72594b2ac8692a2502f5ef89902e74b9b3089ef4/comments","author":null,"committer":null,"parents":[{"sha":"6937856e2b5e1261d7773abd7c45230ca6ddb844","url":"https://api.github.com/repos/apache/openjpa/commits/6937856e2b5e1261d7773abd7c45230ca6ddb844","html_url":"https://github.com/apache/openjpa/commit/6937856e2b5e1261d7773abd7c45230ca6ddb844"}],"stats":{"total":12,"additions":2,"deletions":10},"files":[{"sha":"55aa62cbfecdc690d364bca17a8f0c98cebed98a","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java","status":"modified","additions":2,"deletions":10,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/72594b2ac8692a2502f5ef89902e74b9b3089ef4/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java","raw_url":"https://github.com/apache/openjpa/raw/72594b2ac8692a2502f5ef89902e74b9b3089ef4/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java?ref=72594b2ac8692a2502f5ef89902e74b9b3089ef4","patch":"@@ -2565,19 +2565,9 @@ private Joins join(String name, ForeignKey fk, ClassMapping target,\n             // the joins will all be done in the from select\n             boolean createJoin = _sel._from == null;\n             Table table1 = null;\n-            Table table2 = null;\n             int alias1 = -1;\n             if (createJoin) {\n                 table1 = (inverse) ? fk.getPrimaryKeyTable() : fk.getTable();\n-                table2 = (inverse) ? fk.getTable() : fk.getPrimaryKeyTable();\n-                if (target != null) {\n-                    while (target.getTable() != table2) {\n-                        target.joinSuperclass(this, false);\n-                        target = target.getJoinablePCSuperclassMapping();\n-                        if (target == null)\n-                            throw new InternalException();\n-                    }\n-                }\n                 alias1 = _sel.getTableIndex(table1, this, true);\n             }\n \n@@ -2591,6 +2581,8 @@ private Joins join(String name, ForeignKey fk, ClassMapping target,\n             _outer = outer;\n \n             if (createJoin) {\n+                Table table2 = (inverse) ? fk.getTable() \n+                    : fk.getPrimaryKeyTable();\n                 int alias2 = _sel.getTableIndex(table2, this, true);\n                 Join j = new Join(table1, alias1, table2, alias2, fk, inverse);\n                 j.setType((outer) ? Join.TYPE_OUTER : Join.TYPE_INNER);"}]}

