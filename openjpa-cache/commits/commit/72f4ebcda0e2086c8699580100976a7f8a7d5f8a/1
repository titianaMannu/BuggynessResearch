{"sha":"72f4ebcda0e2086c8699580100976a7f8a7d5f8a","node_id":"MDY6Q29tbWl0MjA2MzY0OjcyZjRlYmNkYTBlMjA4NmM4Njk5NTgwMTAwOTc2YTdmOGE3ZDVmOGE=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2009-03-23T12:42:37Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2009-03-23T12:42:37Z"},"message":"OPENJPA-896. Setting eol-style:native and removing windows eol characters from XML files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/1.2.x@757387 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"fee2c977e7c9a04f4e04048e95f65b84a2361c4e","url":"https://api.github.com/repos/apache/openjpa/git/trees/fee2c977e7c9a04f4e04048e95f65b84a2361c4e"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/72f4ebcda0e2086c8699580100976a7f8a7d5f8a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/72f4ebcda0e2086c8699580100976a7f8a7d5f8a","html_url":"https://github.com/apache/openjpa/commit/72f4ebcda0e2086c8699580100976a7f8a7d5f8a","comments_url":"https://api.github.com/repos/apache/openjpa/commits/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"115af5954d8ba917d83b7dceb181b01257c359ab","url":"https://api.github.com/repos/apache/openjpa/commits/115af5954d8ba917d83b7dceb181b01257c359ab","html_url":"https://github.com/apache/openjpa/commit/115af5954d8ba917d83b7dceb181b01257c359ab"}],"stats":{"total":11328,"additions":5664,"deletions":5664},"files":[{"sha":"cb3f2c8830b213e11f6d9d7c666780af5381be79","filename":"openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/sql-error-state-codes.xml","status":"modified","additions":145,"deletions":145,"changes":290,"blob_url":"https://github.com/apache/openjpa/blob/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/sql-error-state-codes.xml","raw_url":"https://github.com/apache/openjpa/raw/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/sql-error-state-codes.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/sql-error-state-codes.xml?ref=72f4ebcda0e2086c8699580100976a7f8a7d5f8a","patch":"@@ -1,146 +1,146 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n-<!--\r\n- Licensed to the Apache Software Foundation (ASF) under one\r\n- or more contributor license agreements.  See the NOTICE file\r\n- distributed with this work for additional information\r\n- regarding copyright ownership.  The ASF licenses this file\r\n- to you under the Apache License, Version 2.0 (the\r\n- \"License\"); you may not use this file except in compliance\r\n- with the License.  You may obtain a copy of the License at\r\n- \r\n- http://www.apache.org/licenses/LICENSE-2.0\r\n- \r\n- Unless required by applicable law or agreed to in writing,\r\n- software distributed under the License is distributed on an\r\n- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- KIND, either express or implied.  See the License for the\r\n- specific language governing permissions and limitations\r\n- under the License.   \r\n--->\r\n-<!-- ======================================================================= -->\r\n-<!-- Lists SQL Error State codes for specific type of faults per database    -->\r\n-<!-- dictionary.                                                             -->\r\n-<!-- SQL Exceptions raised by JDBC should carry standard error state code    -->\r\n-<!-- but they hardly do. Hence, the error state codes for specific type of   -->\r\n-<!-- database error can be listed here. These codes help to narrow down the  -->\r\n-<!-- cause of failure at JDBC layer and bubbles up as more intelligible      -->\r\n-<!-- exception to the application.                                           -->\r\n-<!-- ======================================================================= -->\r\n-<sql-state-codes>\r\n-\r\n-\t<dictionary class=\"org.apache.openjpa.jdbc.sql.DB2Dictionary\">\r\n-\t\t<lock>-911,-913</lock>\r\n-\t\t<referential-integrity>-407,-530,-531,-532,-543,-544,-545,-603,-667,-803</referential-integrity>\r\n-\t\t<object-exists></object-exists>\r\n-\t\t<object-not-found></object-not-found>\r\n-\t\t<optimistic></optimistic>\r\n-\t</dictionary>\r\n-\t\r\n-\t<dictionary class=\"org.apache.openjpa.jdbc.sql.DerbyDictionary\">\r\n-\t\t<lock>40001</lock>\r\n-\t\t<referential-integrity>22001,22005,23502,23503,23513,X0Y32</referential-integrity>\r\n-\t\t<object-exists>23505</object-exists>\r\n-\t\t<object-not-found></object-not-found>\r\n-\t\t<optimistic>40XL1,40001</optimistic>\r\n-\t</dictionary>\r\n-\t\r\n-\t<dictionary class=\"org.apache.openjpa.jdbc.sql.SQLServerDictionary\">\r\n-\t\t<lock>1205</lock>\r\n-\t\t<referential-integrity>544,2601,2627,8114,8115</referential-integrity>\r\n-\t\t<optimistic>1205</optimistic>\r\n-\t</dictionary>\r\n-\t\r\n-\t<dictionary class=\"org.apache.openjpa.jdbc.sql.SybaseDictionary\">\r\n-\t\t<lock>1205</lock>\r\n-\t\t<referential-integrity>423,511,515,530,547,2601,2615,2714</referential-integrity>\r\n-\t\t<object-exists></object-exists>\r\n-\t\t<object-not-found></object-not-found>\r\n-\t\t<optimistic>1205</optimistic>\r\n-\t</dictionary>\r\n-\t\r\n-\t<dictionary class=\"org.apache.openjpa.jdbc.sql.AccessDictionary\">\r\n-\t\t<lock>40001</lock>\r\n-\t\t<referential-integrity>22001,22005,23502,23503,23513,X0Y32</referential-integrity>\r\n-\t\t<object-exists>23505,456c</object-exists>\r\n-\t\t<object-not-found></object-not-found>\r\n-\t\t<optimistic>40XL1,40001</optimistic>\r\n-\t</dictionary>\r\n-\t\r\n-\t<dictionary class=\"org.apache.openjpa.jdbc.sql.CacheDictionary\">\r\n-\t\t<lock>40001</lock>\r\n-\t\t<referential-integrity>22001,22005,23502,23503,23513,X0Y32</referential-integrity>\r\n-\t\t<object-exists>23505,456c</object-exists>\r\n-\t\t<object-not-found></object-not-found>\r\n-\t\t<optimistic>40XL1,40001</optimistic>\r\n-\t</dictionary>\r\n-\t\r\n-\t<dictionary class=\"org.apache.openjpa.jdbc.sql.EmpressDictionary\">\r\n-\t\t<lock>40001</lock>\r\n-\t\t<referential-integrity>22001,22005,23502,23503,23513,X0Y32</referential-integrity>\r\n-\t\t<object-exists>23505,456c</object-exists>\r\n-\t\t<object-not-found></object-not-found>\r\n-\t\t<optimistic>40XL1,40001</optimistic>\r\n-\t</dictionary>\r\n-\t\r\n-\t<dictionary class=\"org.apache.openjpa.jdbc.sql.FoxProDictionary\">\r\n-\t\t<lock>40001</lock>\r\n-\t\t<referential-integrity>22001,22005,23502,23503,23513,X0Y32</referential-integrity>\r\n-\t\t<object-exists>23505,456c</object-exists>\r\n-\t\t<object-not-found></object-not-found>\r\n-\t\t<optimistic>40XL1,40001</optimistic>\r\n-\t</dictionary>\r\n-\t\r\n-\t<dictionary class=\"org.apache.openjpa.jdbc.sql.H2Dictionary\">\r\n-\t\t<referential-integrity>22003,22012,22025,23000,23001</referential-integrity>\r\n-\t</dictionary>\r\n-\t\r\n-\t<dictionary class=\"org.apache.openjpa.jdbc.sql.HSQLDictionary\">\r\n-\t\t<referential-integrity>-9</referential-integrity>\r\n-\t</dictionary>\r\n-\t\r\n-\t<dictionary class=\"org.apache.openjpa.jdbc.sql.InformixDictionary\">\r\n-\t\t<referential-integrity>-239,-268,-692,-11030</referential-integrity>\r\n-\t</dictionary>\r\n-\t\r\n-\t<dictionary class=\"org.apache.openjpa.jdbc.sql.InterbaseDictionary\">\r\n-\t</dictionary>\r\n-\t\r\n-\t<dictionary class=\"org.apache.openjpa.jdbc.sql.FirebirdDictionary\">\r\n-\t</dictionary>\r\n-\t\r\n-\t<dictionary class=\"org.apache.openjpa.jdbc.sql.JDataStoreDictionary\">\r\n-\t</dictionary>\r\n-\t\r\n-\t<dictionary class=\"org.apache.openjpa.jdbc.sql.MySQLDictionary\">\r\n-\t\t<lock>1213</lock>\r\n-\t\t<referential-integrity>630,839,840,893,1062,1169,1215,1216,1217,1451,1452,1557</referential-integrity>\r\n-\t\t<object-exists>23000</object-exists>\r\n-\t\t<object-not-found></object-not-found>\r\n-\t\t<optimistic>41000,1205,1213</optimistic>\r\n-\t</dictionary>\r\n-\t\r\n-\t<dictionary class=\"org.apache.openjpa.jdbc.sql.OracleDictionary\">\r\n-\t\t<lock></lock>\r\n-\t\t<referential-integrity>1,1400,1722,2291,2292</referential-integrity>\r\n-\t\t<object-exists></object-exists>\r\n-\t\t<object-not-found></object-not-found>\r\n-\t\t<optimistic></optimistic>\r\n-\t</dictionary>\r\n-\t\r\n-\t<dictionary class=\"org.apache.openjpa.jdbc.sql.PointbaseDictionary\">\r\n-\t\t<lock></lock>\r\n-\t\t<referential-integrity>22001,22005,23502,23503,23513,X0Y32</referential-integrity>\r\n-\t\t<object-exists></object-exists>\r\n-\t\t<object-not-found></object-not-found>\r\n-\t\t<optimistic></optimistic>\r\n-\t</dictionary>\r\n-\t\r\n-\t<dictionary class=\"org.apache.openjpa.jdbc.sql.PostgresDictionary\">\r\n-\t\t<lock>55P03,40P01</lock>\r\n-\t\t<referential-integrity>23000,23502,23503,23505,23514</referential-integrity>\r\n-\t\t<object-exists></object-exists>\r\n-\t\t<object-not-found></object-not-found>\r\n-\t\t<optimistic>55P03</optimistic>\r\n-\t</dictionary>\r\n-\t\r\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+ \n+ http://www.apache.org/licenses/LICENSE-2.0\n+ \n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.   \n+-->\n+<!-- ======================================================================= -->\n+<!-- Lists SQL Error State codes for specific type of faults per database    -->\n+<!-- dictionary.                                                             -->\n+<!-- SQL Exceptions raised by JDBC should carry standard error state code    -->\n+<!-- but they hardly do. Hence, the error state codes for specific type of   -->\n+<!-- database error can be listed here. These codes help to narrow down the  -->\n+<!-- cause of failure at JDBC layer and bubbles up as more intelligible      -->\n+<!-- exception to the application.                                           -->\n+<!-- ======================================================================= -->\n+<sql-state-codes>\n+\n+\t<dictionary class=\"org.apache.openjpa.jdbc.sql.DB2Dictionary\">\n+\t\t<lock>-911,-913</lock>\n+\t\t<referential-integrity>-407,-530,-531,-532,-543,-544,-545,-603,-667,-803</referential-integrity>\n+\t\t<object-exists></object-exists>\n+\t\t<object-not-found></object-not-found>\n+\t\t<optimistic></optimistic>\n+\t</dictionary>\n+\t\n+\t<dictionary class=\"org.apache.openjpa.jdbc.sql.DerbyDictionary\">\n+\t\t<lock>40001</lock>\n+\t\t<referential-integrity>22001,22005,23502,23503,23513,X0Y32</referential-integrity>\n+\t\t<object-exists>23505</object-exists>\n+\t\t<object-not-found></object-not-found>\n+\t\t<optimistic>40XL1,40001</optimistic>\n+\t</dictionary>\n+\t\n+\t<dictionary class=\"org.apache.openjpa.jdbc.sql.SQLServerDictionary\">\n+\t\t<lock>1205</lock>\n+\t\t<referential-integrity>544,2601,2627,8114,8115</referential-integrity>\n+\t\t<optimistic>1205</optimistic>\n+\t</dictionary>\n+\t\n+\t<dictionary class=\"org.apache.openjpa.jdbc.sql.SybaseDictionary\">\n+\t\t<lock>1205</lock>\n+\t\t<referential-integrity>423,511,515,530,547,2601,2615,2714</referential-integrity>\n+\t\t<object-exists></object-exists>\n+\t\t<object-not-found></object-not-found>\n+\t\t<optimistic>1205</optimistic>\n+\t</dictionary>\n+\t\n+\t<dictionary class=\"org.apache.openjpa.jdbc.sql.AccessDictionary\">\n+\t\t<lock>40001</lock>\n+\t\t<referential-integrity>22001,22005,23502,23503,23513,X0Y32</referential-integrity>\n+\t\t<object-exists>23505,456c</object-exists>\n+\t\t<object-not-found></object-not-found>\n+\t\t<optimistic>40XL1,40001</optimistic>\n+\t</dictionary>\n+\t\n+\t<dictionary class=\"org.apache.openjpa.jdbc.sql.CacheDictionary\">\n+\t\t<lock>40001</lock>\n+\t\t<referential-integrity>22001,22005,23502,23503,23513,X0Y32</referential-integrity>\n+\t\t<object-exists>23505,456c</object-exists>\n+\t\t<object-not-found></object-not-found>\n+\t\t<optimistic>40XL1,40001</optimistic>\n+\t</dictionary>\n+\t\n+\t<dictionary class=\"org.apache.openjpa.jdbc.sql.EmpressDictionary\">\n+\t\t<lock>40001</lock>\n+\t\t<referential-integrity>22001,22005,23502,23503,23513,X0Y32</referential-integrity>\n+\t\t<object-exists>23505,456c</object-exists>\n+\t\t<object-not-found></object-not-found>\n+\t\t<optimistic>40XL1,40001</optimistic>\n+\t</dictionary>\n+\t\n+\t<dictionary class=\"org.apache.openjpa.jdbc.sql.FoxProDictionary\">\n+\t\t<lock>40001</lock>\n+\t\t<referential-integrity>22001,22005,23502,23503,23513,X0Y32</referential-integrity>\n+\t\t<object-exists>23505,456c</object-exists>\n+\t\t<object-not-found></object-not-found>\n+\t\t<optimistic>40XL1,40001</optimistic>\n+\t</dictionary>\n+\t\n+\t<dictionary class=\"org.apache.openjpa.jdbc.sql.H2Dictionary\">\n+\t\t<referential-integrity>22003,22012,22025,23000,23001</referential-integrity>\n+\t</dictionary>\n+\t\n+\t<dictionary class=\"org.apache.openjpa.jdbc.sql.HSQLDictionary\">\n+\t\t<referential-integrity>-9</referential-integrity>\n+\t</dictionary>\n+\t\n+\t<dictionary class=\"org.apache.openjpa.jdbc.sql.InformixDictionary\">\n+\t\t<referential-integrity>-239,-268,-692,-11030</referential-integrity>\n+\t</dictionary>\n+\t\n+\t<dictionary class=\"org.apache.openjpa.jdbc.sql.InterbaseDictionary\">\n+\t</dictionary>\n+\t\n+\t<dictionary class=\"org.apache.openjpa.jdbc.sql.FirebirdDictionary\">\n+\t</dictionary>\n+\t\n+\t<dictionary class=\"org.apache.openjpa.jdbc.sql.JDataStoreDictionary\">\n+\t</dictionary>\n+\t\n+\t<dictionary class=\"org.apache.openjpa.jdbc.sql.MySQLDictionary\">\n+\t\t<lock>1213</lock>\n+\t\t<referential-integrity>630,839,840,893,1062,1169,1215,1216,1217,1451,1452,1557</referential-integrity>\n+\t\t<object-exists>23000</object-exists>\n+\t\t<object-not-found></object-not-found>\n+\t\t<optimistic>41000,1205,1213</optimistic>\n+\t</dictionary>\n+\t\n+\t<dictionary class=\"org.apache.openjpa.jdbc.sql.OracleDictionary\">\n+\t\t<lock></lock>\n+\t\t<referential-integrity>1,1400,1722,2291,2292</referential-integrity>\n+\t\t<object-exists></object-exists>\n+\t\t<object-not-found></object-not-found>\n+\t\t<optimistic></optimistic>\n+\t</dictionary>\n+\t\n+\t<dictionary class=\"org.apache.openjpa.jdbc.sql.PointbaseDictionary\">\n+\t\t<lock></lock>\n+\t\t<referential-integrity>22001,22005,23502,23503,23513,X0Y32</referential-integrity>\n+\t\t<object-exists></object-exists>\n+\t\t<object-not-found></object-not-found>\n+\t\t<optimistic></optimistic>\n+\t</dictionary>\n+\t\n+\t<dictionary class=\"org.apache.openjpa.jdbc.sql.PostgresDictionary\">\n+\t\t<lock>55P03,40P01</lock>\n+\t\t<referential-integrity>23000,23502,23503,23505,23514</referential-integrity>\n+\t\t<object-exists></object-exists>\n+\t\t<object-not-found></object-not-found>\n+\t\t<optimistic>55P03</optimistic>\n+\t</dictionary>\n+\t\n </sql-state-codes>\n\\ No newline at end of file"},{"sha":"2602dad74e7ed9fae013c6eaf2caaa5ef4412b89","filename":"openjpa-persistence-jdbc/src/test/resources/META-INF/listener-orm.xml","status":"modified","additions":36,"deletions":36,"changes":72,"blob_url":"https://github.com/apache/openjpa/blob/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/META-INF/listener-orm.xml","raw_url":"https://github.com/apache/openjpa/raw/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/META-INF/listener-orm.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/META-INF/listener-orm.xml?ref=72f4ebcda0e2086c8699580100976a7f8a7d5f8a","patch":"@@ -1,37 +1,37 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n-<!--\r\n- Licensed to the Apache Software Foundation (ASF) under one\r\n- or more contributor license agreements.  See the NOTICE file\r\n- distributed with this work for additional information\r\n- regarding copyright ownership.  The ASF licenses this file\r\n- to you under the Apache License, Version 2.0 (the\r\n- \"License\"); you may not use this file except in compliance\r\n- with the License.  You may obtain a copy of the License at\r\n-\r\n- http://www.apache.org/licenses/LICENSE-2.0\r\n-\r\n- Unless required by applicable law or agreed to in writing,\r\n- software distributed under the License is distributed on an\r\n- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- KIND, either express or implied.  See the License for the\r\n- specific language governing permissions and limitations\r\n- under the License.\r\n--->\r\n-<entity-mappings xmlns=\"http://java.sun.com/xml/ns/persistence/orm\"\r\n-    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n-    xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence/orm orm_1_0.xsd\"\r\n-    version=\"1.0\">\r\n-    <persistence-unit-metadata>\r\n-        <persistence-unit-defaults>\r\n-            <entity-listeners>\r\n-                <entity-listener class=\r\n-                \t\"org.apache.openjpa.persistence.callbacks.ListenerImpl\">\r\n-                </entity-listener>\r\n-            </entity-listeners>\r\n-        </persistence-unit-defaults>\r\n-    </persistence-unit-metadata>\r\n-    <package>org.apache.openjpa.persistence.callbacks</package>\r\n-    <entity class=\"EntityListenerEntity\">\r\n-        <exclude-default-listeners/>\r\n-    </entity>\r\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+\n+ http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.\n+-->\n+<entity-mappings xmlns=\"http://java.sun.com/xml/ns/persistence/orm\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence/orm orm_1_0.xsd\"\n+    version=\"1.0\">\n+    <persistence-unit-metadata>\n+        <persistence-unit-defaults>\n+            <entity-listeners>\n+                <entity-listener class=\n+                \t\"org.apache.openjpa.persistence.callbacks.ListenerImpl\">\n+                </entity-listener>\n+            </entity-listeners>\n+        </persistence-unit-defaults>\n+    </persistence-unit-metadata>\n+    <package>org.apache.openjpa.persistence.callbacks</package>\n+    <entity class=\"EntityListenerEntity\">\n+        <exclude-default-listeners/>\n+    </entity>\n </entity-mappings>\n\\ No newline at end of file"},{"sha":"b1f9d9a2a40e878395d3bab04bebe91567a51b39","filename":"openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/apache/openjpa/blob/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml?ref=72f4ebcda0e2086c8699580100976a7f8a7d5f8a","patch":"@@ -88,12 +88,12 @@\n             <property name=\"openjpa.jdbc.SynchronizeMappings\"\n                   value=\"buildSchema(ForeignKeys=true)\"/>\n         </properties>\n-    </persistence-unit>\r\n-    \r\n-    <persistence-unit name=\"test-unique-constraint\">\r\n-        <mapping-file>org/apache/openjpa/persistence/jdbc/unique/orm.xml</mapping-file>\r\n-        <class>org.apache.openjpa.persistence.jdbc.unique.UniqueA</class>\r\n-        <class>org.apache.openjpa.persistence.jdbc.unique.UniqueB</class>\r\n-    </persistence-unit>\r\n+    </persistence-unit>\n+    \n+    <persistence-unit name=\"test-unique-constraint\">\n+        <mapping-file>org/apache/openjpa/persistence/jdbc/unique/orm.xml</mapping-file>\n+        <class>org.apache.openjpa.persistence.jdbc.unique.UniqueA</class>\n+        <class>org.apache.openjpa.persistence.jdbc.unique.UniqueB</class>\n+    </persistence-unit>\n     \n </persistence>"},{"sha":"037365e080433dc77e5d9882c59ce3ae06113c6c","filename":"openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/lib/conf/product-derivations-load.xml","status":"modified","additions":26,"deletions":26,"changes":52,"blob_url":"https://github.com/apache/openjpa/blob/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/lib/conf/product-derivations-load.xml","raw_url":"https://github.com/apache/openjpa/raw/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/lib/conf/product-derivations-load.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/lib/conf/product-derivations-load.xml?ref=72f4ebcda0e2086c8699580100976a7f8a7d5f8a","patch":"@@ -1,27 +1,27 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n-<!--\r\n- Licensed to the Apache Software Foundation (ASF) under one\r\n- or more contributor license agreements.  See the NOTICE file\r\n- distributed with this work for additional information\r\n- regarding copyright ownership.  The ASF licenses this file\r\n- to you under the Apache License, Version 2.0 (the\r\n- \"License\"); you may not use this file except in compliance\r\n- with the License.  You may obtain a copy of the License at\r\n-\r\n- http://www.apache.org/licenses/LICENSE-2.0\r\n-\r\n- Unless required by applicable law or agreed to in writing,\r\n- software distributed under the License is distributed on an\r\n- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- KIND, either express or implied.  See the License for the\r\n- specific language governing permissions and limitations\r\n- under the License.\r\n--->\r\n-<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\"\r\n-             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n-             xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\r\n-    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd\"\r\n-             version=\"1.0\">\r\n-\r\n-    <persistence-unit name=\"foo\"/>\r\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+\n+ http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.\n+-->\n+<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\"\n+             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+             xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\n+    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd\"\n+             version=\"1.0\">\n+\n+    <persistence-unit name=\"foo\"/>\n </persistence>\n\\ No newline at end of file"},{"sha":"a79fc1f45a0bc6ce8d74032a1100aaead8969dcb","filename":"openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/annotations/common/apps/annotApp/annotype/META-INF/orm.xml","status":"modified","additions":160,"deletions":160,"changes":320,"blob_url":"https://github.com/apache/openjpa/blob/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/annotations/common/apps/annotApp/annotype/META-INF/orm.xml","raw_url":"https://github.com/apache/openjpa/raw/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/annotations/common/apps/annotApp/annotype/META-INF/orm.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/annotations/common/apps/annotApp/annotype/META-INF/orm.xml?ref=72f4ebcda0e2086c8699580100976a7f8a7d5f8a","patch":"@@ -1,160 +1,160 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n-<!--\r\n- Licensed to the Apache Software Foundation (ASF) under one\r\n- or more contributor license agreements.  See the NOTICE file\r\n- distributed with this work for additional information\r\n- regarding copyright ownership.  The ASF licenses this file\r\n- to you under the Apache License, Version 2.0 (the\r\n- \"License\"); you may not use this file except in compliance\r\n- with the License.  You may obtain a copy of the License at\r\n- \r\n- http://www.apache.org/licenses/LICENSE-2.0\r\n- \r\n- Unless required by applicable law or agreed to in writing,\r\n- software distributed under the License is distributed on an\r\n- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- KIND, either express or implied.  See the License for the\r\n- specific language governing permissions and limitations\r\n- under the License.   \r\n--->\r\n-<entity-mappings xmlns=\"http://java.sun.com/xml/ns/persistence/orm\" \r\n-xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r\n-xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence/orm\r\n-                    http://java.sun.com/xml/ns/persistence/orm_1_0.xsd\" \r\n-version=\"1.0\">\r\n-\r\n-<persistence-unit-metadata>\r\n-   <persistence-unit-defaults>\r\n-       <entity-listeners>\r\n-            <entity-listener class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.DefaultCallbackListener\">\r\n-                 <pre-persist method-name=\"prePersist\" />\r\n-                 <post-persist method-name=\"postPersist\" />\r\n-                 <pre-remove method-name=\"preRemove\" />\r\n-                 <post-remove method-name=\"postRemove\" />\r\n-                 <pre-update method-name=\"preUpdate\" />\r\n-                 <post-update method-name=\"postUpdate\" />\r\n-                 <post-load method-name=\"postLoad\" />\r\n-            </entity-listener>\r\n-        </entity-listeners> \r\n-   </persistence-unit-defaults>\r\n-</persistence-unit-metadata>\r\n-\r\n-<!-- <entity class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Schedule\" metadata-complete=\"true\">\r\n-\t\t<description>\r\n-\t\t\tSchedule class represents the superclass of this app...\r\n-\t\t</description>\r\n-\t\t<inheritance strategy=\"TABLE_PER_CLASS\" />\r\n-\r\n-\t     <entity-listeners>\r\n-\t\t\t<entity-listener class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.DateValidator\">\r\n-\t\t\t\t<pre-persist method-name=\"prePersist\" />\r\n-\t\t\t\t<post-persist method-name=\"postPersist\" />\r\n-\t\t\t</entity-listener>\r\n-\r\n-\t\t\t<entity-listener class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.StringValidator\">\r\n-\t\t\t\t<pre-persist method-name=\"prePersist\" />\r\n-\t\t\t\t<post-persist method-name=\"postPersist\" />\r\n-\t\t\t</entity-listener>\r\n-\t\t</entity-listeners> \r\n-\r\n-\t\t<attributes>\r\n-\t\t\t<id name=\"id\">\r\n-\t\t\t\t<generated-value strategy=\"AUTO\" />\r\n-\t\t\t</id>\r\n-\t\t\t<basic name=\"dob\">\r\n-\t\t\t\t<temporal>DATE</temporal>\r\n-\t\t\t</basic>\r\n-\t\t\t<basic name=\"startDate\">\r\n-\t\t\t\t<temporal>TIME</temporal>\r\n-\t\t\t</basic>\r\n-\t\t\t<basic name=\"endDate\">\r\n-\t\t\t\t<temporal>TIMESTAMP</temporal>\r\n-\t\t\t</basic>\r\n-\t\t\t<basic name=\"name\">\r\n-\t\t\t</basic>\r\n-\t\t</attributes>\r\n-\t</entity>\r\n-\r\n-\t<entity class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.FlightSchedule\" metadata-complete=\"true\">\r\n-\t\t<description>\r\n-\t\t\tFlightSchedule, subclass of schedule specifies the real life flight schedule \r\n-\t\t</description>\r\n-\r\n-\t\t<table name=\"Flight_Sched\">\r\n-\t\t\t<unique-constraint>\r\n-\t\t\t\t<column-name>planeName</column-name>\r\n-\t\t\t</unique-constraint>\r\n-\t\t</table>\r\n-\r\n-\t\t<attributes>\r\n-\t\t\t<id name=\"FlightNum\">\r\n-\t\t\t\t<generated-value strategy=\"AUTO\" />\r\n-\t\t\t</id>\r\n-\t\t\t<basic name=\"planeName\">\r\n-\t\t\t\t<column name=\"flight_name\"/>\r\n-\t\t\t</basic>\r\n-\t\t</attributes>\r\n-\t</entity>\r\n-\r\n-\t <entity class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Employee\" metadata-complete=\"true\">\r\n-\t\t<inheritance strategy=\"JOINED\" />\r\n-\r\n-\t\t<entity-listeners>\r\n-\t\t\t<entity-listener class=\"annotations.common.apps.NameValidator\">\r\n-\t\t\t\t<pre-persist method-name=\"validateName\" />\r\n-\t\t\t\t<pre-remove method-name=\"validateNothing1\" />\r\n-\t\t\t\t<post-remove method-name=\"validateNothing\" />\r\n-\t\t\t\t<post-update method-name=\"testpost\" />\r\n-\t\t\t</entity-listener>\r\n-\r\n-\t\t\t<entity-listener class=\"annotations.common.apps.LongNameValidator\">\r\n-\t\t\t\t<pre-persist method-name=\"validateName\" />\r\n-\t\t\t\t<post-update method-name=\"testpost\" />\r\n-\t\t\t</entity-listener>\r\n-\t\t</entity-listeners> \r\n-\r\n-\t\t<attributes>\r\n-\t\t\t<id name=\"id\">\r\n-\t\t\t</id>\r\n-\t\t\t<basic name=\"name\">\r\n-\t\t\t</basic>\r\n-\t\t\t<transient name=\"syncTime\" />\r\n-\t\t</attributes>\r\n-\t</entity>\r\n-\r\n-\t<entity class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.ContractEmployee\" metadata-complete=\"true\">\r\n-\t</entity>  \r\n-\r\n-\t<entity class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.TxRollbackEntity\" metadata-complete=\"true\">\r\n-\t</entity> -->\r\n-\r\n-\r\n-\t<entity class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntity\">\r\n-    <exclude-default-listeners />\r\n-    <entity-listeners>\r\n-\t\t\t<entity-listener class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.EntityDDListener\">\r\n-\t\t\t\t<post-remove method-name=\"verifyPostRemove\" />\r\n-\t\t\t\t<post-update method-name=\"verifyPostUpdate\" />\r\n-\t\t\t</entity-listener>\r\n-\r\n-\t\t\t<entity-listener class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.EntityDDListener2\">\r\n-\t\t\t\t<pre-update method-name=\"verifyPreUpdate\" />\r\n-\t\t\t\t<post-load method-name=\"verifyPostLoad\" /> \r\n-\t\t\t</entity-listener>\r\n-\t\t</entity-listeners>\r\n-\r\n-        <pre-persist method-name=\"verifyPrePersist\" />\r\n-        <post-persist method-name=\"verifyPostPersist\" />\r\n-        <pre-remove method-name=\"verifyPreRemove\" />\r\n-\r\n-\t\t<attributes>\r\n-\t\t\t<id name=\"id\">\r\n-\t\t\t\t<generated-value strategy=\"AUTO\" />\r\n-\t\t\t</id>\r\n-\t\t\t<basic name=\"name\">\r\n-\t\t\t</basic>\r\n-\t\t\t<basic name=\"surname\">\r\n-\t\t\t</basic>\r\n-\t\t</attributes>\r\n-\t</entity> \r\n-</entity-mappings>\r\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+ \n+ http://www.apache.org/licenses/LICENSE-2.0\n+ \n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.   \n+-->\n+<entity-mappings xmlns=\"http://java.sun.com/xml/ns/persistence/orm\" \n+xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n+xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence/orm\n+                    http://java.sun.com/xml/ns/persistence/orm_1_0.xsd\" \n+version=\"1.0\">\n+\n+<persistence-unit-metadata>\n+   <persistence-unit-defaults>\n+       <entity-listeners>\n+            <entity-listener class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.DefaultCallbackListener\">\n+                 <pre-persist method-name=\"prePersist\" />\n+                 <post-persist method-name=\"postPersist\" />\n+                 <pre-remove method-name=\"preRemove\" />\n+                 <post-remove method-name=\"postRemove\" />\n+                 <pre-update method-name=\"preUpdate\" />\n+                 <post-update method-name=\"postUpdate\" />\n+                 <post-load method-name=\"postLoad\" />\n+            </entity-listener>\n+        </entity-listeners> \n+   </persistence-unit-defaults>\n+</persistence-unit-metadata>\n+\n+<!-- <entity class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Schedule\" metadata-complete=\"true\">\n+\t\t<description>\n+\t\t\tSchedule class represents the superclass of this app...\n+\t\t</description>\n+\t\t<inheritance strategy=\"TABLE_PER_CLASS\" />\n+\n+\t     <entity-listeners>\n+\t\t\t<entity-listener class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.DateValidator\">\n+\t\t\t\t<pre-persist method-name=\"prePersist\" />\n+\t\t\t\t<post-persist method-name=\"postPersist\" />\n+\t\t\t</entity-listener>\n+\n+\t\t\t<entity-listener class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.StringValidator\">\n+\t\t\t\t<pre-persist method-name=\"prePersist\" />\n+\t\t\t\t<post-persist method-name=\"postPersist\" />\n+\t\t\t</entity-listener>\n+\t\t</entity-listeners> \n+\n+\t\t<attributes>\n+\t\t\t<id name=\"id\">\n+\t\t\t\t<generated-value strategy=\"AUTO\" />\n+\t\t\t</id>\n+\t\t\t<basic name=\"dob\">\n+\t\t\t\t<temporal>DATE</temporal>\n+\t\t\t</basic>\n+\t\t\t<basic name=\"startDate\">\n+\t\t\t\t<temporal>TIME</temporal>\n+\t\t\t</basic>\n+\t\t\t<basic name=\"endDate\">\n+\t\t\t\t<temporal>TIMESTAMP</temporal>\n+\t\t\t</basic>\n+\t\t\t<basic name=\"name\">\n+\t\t\t</basic>\n+\t\t</attributes>\n+\t</entity>\n+\n+\t<entity class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.FlightSchedule\" metadata-complete=\"true\">\n+\t\t<description>\n+\t\t\tFlightSchedule, subclass of schedule specifies the real life flight schedule \n+\t\t</description>\n+\n+\t\t<table name=\"Flight_Sched\">\n+\t\t\t<unique-constraint>\n+\t\t\t\t<column-name>planeName</column-name>\n+\t\t\t</unique-constraint>\n+\t\t</table>\n+\n+\t\t<attributes>\n+\t\t\t<id name=\"FlightNum\">\n+\t\t\t\t<generated-value strategy=\"AUTO\" />\n+\t\t\t</id>\n+\t\t\t<basic name=\"planeName\">\n+\t\t\t\t<column name=\"flight_name\"/>\n+\t\t\t</basic>\n+\t\t</attributes>\n+\t</entity>\n+\n+\t <entity class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Employee\" metadata-complete=\"true\">\n+\t\t<inheritance strategy=\"JOINED\" />\n+\n+\t\t<entity-listeners>\n+\t\t\t<entity-listener class=\"annotations.common.apps.NameValidator\">\n+\t\t\t\t<pre-persist method-name=\"validateName\" />\n+\t\t\t\t<pre-remove method-name=\"validateNothing1\" />\n+\t\t\t\t<post-remove method-name=\"validateNothing\" />\n+\t\t\t\t<post-update method-name=\"testpost\" />\n+\t\t\t</entity-listener>\n+\n+\t\t\t<entity-listener class=\"annotations.common.apps.LongNameValidator\">\n+\t\t\t\t<pre-persist method-name=\"validateName\" />\n+\t\t\t\t<post-update method-name=\"testpost\" />\n+\t\t\t</entity-listener>\n+\t\t</entity-listeners> \n+\n+\t\t<attributes>\n+\t\t\t<id name=\"id\">\n+\t\t\t</id>\n+\t\t\t<basic name=\"name\">\n+\t\t\t</basic>\n+\t\t\t<transient name=\"syncTime\" />\n+\t\t</attributes>\n+\t</entity>\n+\n+\t<entity class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.ContractEmployee\" metadata-complete=\"true\">\n+\t</entity>  \n+\n+\t<entity class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.TxRollbackEntity\" metadata-complete=\"true\">\n+\t</entity> -->\n+\n+\n+\t<entity class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntity\">\n+    <exclude-default-listeners />\n+    <entity-listeners>\n+\t\t\t<entity-listener class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.EntityDDListener\">\n+\t\t\t\t<post-remove method-name=\"verifyPostRemove\" />\n+\t\t\t\t<post-update method-name=\"verifyPostUpdate\" />\n+\t\t\t</entity-listener>\n+\n+\t\t\t<entity-listener class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.EntityDDListener2\">\n+\t\t\t\t<pre-update method-name=\"verifyPreUpdate\" />\n+\t\t\t\t<post-load method-name=\"verifyPostLoad\" /> \n+\t\t\t</entity-listener>\n+\t\t</entity-listeners>\n+\n+        <pre-persist method-name=\"verifyPrePersist\" />\n+        <post-persist method-name=\"verifyPostPersist\" />\n+        <pre-remove method-name=\"verifyPreRemove\" />\n+\n+\t\t<attributes>\n+\t\t\t<id name=\"id\">\n+\t\t\t\t<generated-value strategy=\"AUTO\" />\n+\t\t\t</id>\n+\t\t\t<basic name=\"name\">\n+\t\t\t</basic>\n+\t\t\t<basic name=\"surname\">\n+\t\t\t</basic>\n+\t\t</attributes>\n+\t</entity> \n+</entity-mappings>"},{"sha":"19dffcf74387241d0d5e1feaab9824ea2d698c17","filename":"openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/annotations/common/apps/annotApp/annotype/META-INF/persistence.xml","status":"modified","additions":48,"deletions":48,"changes":96,"blob_url":"https://github.com/apache/openjpa/blob/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/annotations/common/apps/annotApp/annotype/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/annotations/common/apps/annotApp/annotype/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/annotations/common/apps/annotApp/annotype/META-INF/persistence.xml?ref=72f4ebcda0e2086c8699580100976a7f8a7d5f8a","patch":"@@ -1,48 +1,48 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n-<!--\r\n- Licensed to the Apache Software Foundation (ASF) under one\r\n- or more contributor license agreements.  See the NOTICE file\r\n- distributed with this work for additional information\r\n- regarding copyright ownership.  The ASF licenses this file\r\n- to you under the Apache License, Version 2.0 (the\r\n- \"License\"); you may not use this file except in compliance\r\n- with the License.  You may obtain a copy of the License at\r\n- \r\n- http://www.apache.org/licenses/LICENSE-2.0\r\n- \r\n- Unless required by applicable law or agreed to in writing,\r\n- software distributed under the License is distributed on an\r\n- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- KIND, either express or implied.  See the License for the\r\n- specific language governing permissions and limitations\r\n- under the License.   \r\n--->\r\n-<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\" version=\"1.0\">\r\n-\t<persistence-unit name=\"TestConv\" transaction-type=\"RESOURCE_LOCAL\">\r\n-\t\t<provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbedOwner</class>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1</class>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest2</class>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest3</class>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.ContractEmployee</class>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Employee</class>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Entity1</class>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Entity2</class>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Flat1</class>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Flat2</class>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Generator</class>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.TablePerClass1</class>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.TablePerClass2</class>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.OrderByEntity</class>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddableSuperSub</class>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.PropertyAccess1</class>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddedIdEntity</class>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbedValue</class>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbedValue2</class>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Schedule</class>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.FlightSchedule</class>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddedIdClass</class>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddableSuper</class>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.TxRollbackEntity</class>\r\n-\t</persistence-unit>\r\n-</persistence>\r\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+ \n+ http://www.apache.org/licenses/LICENSE-2.0\n+ \n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.   \n+-->\n+<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\" version=\"1.0\">\n+\t<persistence-unit name=\"TestConv\" transaction-type=\"RESOURCE_LOCAL\">\n+\t\t<provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbedOwner</class>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest1</class>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest2</class>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.AnnoTest3</class>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.ContractEmployee</class>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Employee</class>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Entity1</class>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Entity2</class>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Flat1</class>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Flat2</class>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Generator</class>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.TablePerClass1</class>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.TablePerClass2</class>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.OrderByEntity</class>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddableSuperSub</class>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.PropertyAccess1</class>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddedIdEntity</class>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbedValue</class>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbedValue2</class>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Schedule</class>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.FlightSchedule</class>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddedIdClass</class>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.EmbeddableSuper</class>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.TxRollbackEntity</class>\n+\t</persistence-unit>\n+</persistence>"},{"sha":"14a43af3aab47afa31d6001f2476389e97551886","filename":"openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/annotations/common/apps/annotApp/ddtype/META-INF/orm.xml","status":"modified","additions":160,"deletions":160,"changes":320,"blob_url":"https://github.com/apache/openjpa/blob/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/annotations/common/apps/annotApp/ddtype/META-INF/orm.xml","raw_url":"https://github.com/apache/openjpa/raw/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/annotations/common/apps/annotApp/ddtype/META-INF/orm.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/annotations/common/apps/annotApp/ddtype/META-INF/orm.xml?ref=72f4ebcda0e2086c8699580100976a7f8a7d5f8a","patch":"@@ -1,160 +1,160 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n-<!--\r\n- Licensed to the Apache Software Foundation (ASF) under one\r\n- or more contributor license agreements.  See the NOTICE file\r\n- distributed with this work for additional information\r\n- regarding copyright ownership.  The ASF licenses this file\r\n- to you under the Apache License, Version 2.0 (the\r\n- \"License\"); you may not use this file except in compliance\r\n- with the License.  You may obtain a copy of the License at\r\n- \r\n- http://www.apache.org/licenses/LICENSE-2.0\r\n- \r\n- Unless required by applicable law or agreed to in writing,\r\n- software distributed under the License is distributed on an\r\n- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- KIND, either express or implied.  See the License for the\r\n- specific language governing permissions and limitations\r\n- under the License.   \r\n--->\r\n-<entity-mappings xmlns=\"http://java.sun.com/xml/ns/persistence/orm\" \r\n-xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r\n-xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence/orm\r\n-                    http://java.sun.com/xml/ns/persistence/orm_1_0.xsd\" \r\n-version=\"1.0\">\r\n-\r\n-<persistence-unit-metadata>\r\n-   <persistence-unit-defaults>\r\n-       <entity-listeners>\r\n-            <entity-listener class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.DefaultCallbackListener\">\r\n-                 <pre-persist method-name=\"prePersist\" />\r\n-                 <post-persist method-name=\"postPersist\" />\r\n-                 <pre-remove method-name=\"preRemove\" />\r\n-                 <post-remove method-name=\"postRemove\" />\r\n-                 <pre-update method-name=\"preUpdate\" />\r\n-                 <post-update method-name=\"postUpdate\" />\r\n-                 <post-load method-name=\"postLoad\" />\r\n-            </entity-listener>\r\n-        </entity-listeners> \r\n-   </persistence-unit-defaults>\r\n-</persistence-unit-metadata>\r\n-\r\n-<!-- <entity class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Schedule\" metadata-complete=\"true\">\r\n-\t\t<description>\r\n-\t\t\tSchedule class represents the superclass of this app...\r\n-\t\t</description>\r\n-\t\t<inheritance strategy=\"TABLE_PER_CLASS\" />\r\n-\r\n-\t     <entity-listeners>\r\n-\t\t\t<entity-listener class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.DateValidator\">\r\n-\t\t\t\t<pre-persist method-name=\"prePersist\" />\r\n-\t\t\t\t<post-persist method-name=\"postPersist\" />\r\n-\t\t\t</entity-listener>\r\n-\r\n-\t\t\t<entity-listener class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.StringValidator\">\r\n-\t\t\t\t<pre-persist method-name=\"prePersist\" />\r\n-\t\t\t\t<post-persist method-name=\"postPersist\" />\r\n-\t\t\t</entity-listener>\r\n-\t\t</entity-listeners> \r\n-\r\n-\t\t<attributes>\r\n-\t\t\t<id name=\"id\">\r\n-\t\t\t\t<generated-value strategy=\"AUTO\" />\r\n-\t\t\t</id>\r\n-\t\t\t<basic name=\"dob\">\r\n-\t\t\t\t<temporal>DATE</temporal>\r\n-\t\t\t</basic>\r\n-\t\t\t<basic name=\"startDate\">\r\n-\t\t\t\t<temporal>TIME</temporal>\r\n-\t\t\t</basic>\r\n-\t\t\t<basic name=\"endDate\">\r\n-\t\t\t\t<temporal>TIMESTAMP</temporal>\r\n-\t\t\t</basic>\r\n-\t\t\t<basic name=\"name\">\r\n-\t\t\t</basic>\r\n-\t\t</attributes>\r\n-\t</entity>\r\n-\r\n-\t<entity class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.FlightSchedule\" metadata-complete=\"true\">\r\n-\t\t<description>\r\n-\t\t\tFlightSchedule, subclass of schedule specifies the real life flight schedule \r\n-\t\t</description>\r\n-\r\n-\t\t<table name=\"Flight_Sched\">\r\n-\t\t\t<unique-constraint>\r\n-\t\t\t\t<column-name>planeName</column-name>\r\n-\t\t\t</unique-constraint>\r\n-\t\t</table>\r\n-\r\n-\t\t<attributes>\r\n-\t\t\t<id name=\"FlightNum\">\r\n-\t\t\t\t<generated-value strategy=\"AUTO\" />\r\n-\t\t\t</id>\r\n-\t\t\t<basic name=\"planeName\">\r\n-\t\t\t\t<column name=\"flight_name\"/>\r\n-\t\t\t</basic>\r\n-\t\t</attributes>\r\n-\t</entity>\r\n-\r\n-\t <entity class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Employee\" metadata-complete=\"true\">\r\n-\t\t<inheritance strategy=\"JOINED\" />\r\n-\r\n-\t\t<entity-listeners>\r\n-\t\t\t<entity-listener class=\"annotations.common.apps.NameValidator\">\r\n-\t\t\t\t<pre-persist method-name=\"validateName\" />\r\n-\t\t\t\t<pre-remove method-name=\"validateNothing1\" />\r\n-\t\t\t\t<post-remove method-name=\"validateNothing\" />\r\n-\t\t\t\t<post-update method-name=\"testpost\" />\r\n-\t\t\t</entity-listener>\r\n-\r\n-\t\t\t<entity-listener class=\"annotations.common.apps.LongNameValidator\">\r\n-\t\t\t\t<pre-persist method-name=\"validateName\" />\r\n-\t\t\t\t<post-update method-name=\"testpost\" />\r\n-\t\t\t</entity-listener>\r\n-\t\t</entity-listeners> \r\n-\r\n-\t\t<attributes>\r\n-\t\t\t<id name=\"id\">\r\n-\t\t\t</id>\r\n-\t\t\t<basic name=\"name\">\r\n-\t\t\t</basic>\r\n-\t\t\t<transient name=\"syncTime\" />\r\n-\t\t</attributes>\r\n-\t</entity>\r\n-\r\n-\t<entity class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.ContractEmployee\" metadata-complete=\"true\">\r\n-\t</entity>  \r\n-\r\n-\t<entity class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.TxRollbackEntity\" metadata-complete=\"true\">\r\n-\t</entity> -->\r\n-\r\n-\r\n-  <!-- <entity class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntity\">\r\n-    <exclude-default-listeners />\r\n-    <entity-listeners>\r\n-\t\t\t<entity-listener class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.EntityDDListener\">\r\n-\t\t\t\t<post-remove method-name=\"verifyPostRemove\" />\r\n-\t\t\t\t<post-update method-name=\"verifyPostUpdate\" />\r\n-\t\t\t</entity-listener>\r\n-\r\n-\t\t\t<entity-listener class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.EntityDDListener2\">\r\n-\t\t\t\t<pre-update method-name=\"verifyPreUpdate\" />\r\n-\t\t\t\t<post-load method-name=\"verifyPostLoad\" /> \r\n-\t\t\t</entity-listener>\r\n-\t\t</entity-listeners>\r\n-\r\n-        <pre-persist method-name=\"verifyPrePersist\" />\r\n-        <post-persist method-name=\"verifyPostPersist\" />\r\n-        <pre-remove method-name=\"verifyPreRemove\" />\r\n-\r\n-\t\t<attributes>\r\n-\t\t\t<id name=\"id\">\r\n-\t\t\t\t<generated-value strategy=\"AUTO\" />\r\n-\t\t\t</id>\r\n-\t\t\t<basic name=\"name\">\r\n-\t\t\t</basic>\r\n-\t\t\t<basic name=\"surname\">\r\n-\t\t\t</basic>\r\n-\t\t</attributes>\r\n-\t</entity> -->\r\n-</entity-mappings>\r\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+ \n+ http://www.apache.org/licenses/LICENSE-2.0\n+ \n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.   \n+-->\n+<entity-mappings xmlns=\"http://java.sun.com/xml/ns/persistence/orm\" \n+xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n+xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence/orm\n+                    http://java.sun.com/xml/ns/persistence/orm_1_0.xsd\" \n+version=\"1.0\">\n+\n+<persistence-unit-metadata>\n+   <persistence-unit-defaults>\n+       <entity-listeners>\n+            <entity-listener class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.DefaultCallbackListener\">\n+                 <pre-persist method-name=\"prePersist\" />\n+                 <post-persist method-name=\"postPersist\" />\n+                 <pre-remove method-name=\"preRemove\" />\n+                 <post-remove method-name=\"postRemove\" />\n+                 <pre-update method-name=\"preUpdate\" />\n+                 <post-update method-name=\"postUpdate\" />\n+                 <post-load method-name=\"postLoad\" />\n+            </entity-listener>\n+        </entity-listeners> \n+   </persistence-unit-defaults>\n+</persistence-unit-metadata>\n+\n+<!-- <entity class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Schedule\" metadata-complete=\"true\">\n+\t\t<description>\n+\t\t\tSchedule class represents the superclass of this app...\n+\t\t</description>\n+\t\t<inheritance strategy=\"TABLE_PER_CLASS\" />\n+\n+\t     <entity-listeners>\n+\t\t\t<entity-listener class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.DateValidator\">\n+\t\t\t\t<pre-persist method-name=\"prePersist\" />\n+\t\t\t\t<post-persist method-name=\"postPersist\" />\n+\t\t\t</entity-listener>\n+\n+\t\t\t<entity-listener class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.StringValidator\">\n+\t\t\t\t<pre-persist method-name=\"prePersist\" />\n+\t\t\t\t<post-persist method-name=\"postPersist\" />\n+\t\t\t</entity-listener>\n+\t\t</entity-listeners> \n+\n+\t\t<attributes>\n+\t\t\t<id name=\"id\">\n+\t\t\t\t<generated-value strategy=\"AUTO\" />\n+\t\t\t</id>\n+\t\t\t<basic name=\"dob\">\n+\t\t\t\t<temporal>DATE</temporal>\n+\t\t\t</basic>\n+\t\t\t<basic name=\"startDate\">\n+\t\t\t\t<temporal>TIME</temporal>\n+\t\t\t</basic>\n+\t\t\t<basic name=\"endDate\">\n+\t\t\t\t<temporal>TIMESTAMP</temporal>\n+\t\t\t</basic>\n+\t\t\t<basic name=\"name\">\n+\t\t\t</basic>\n+\t\t</attributes>\n+\t</entity>\n+\n+\t<entity class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.FlightSchedule\" metadata-complete=\"true\">\n+\t\t<description>\n+\t\t\tFlightSchedule, subclass of schedule specifies the real life flight schedule \n+\t\t</description>\n+\n+\t\t<table name=\"Flight_Sched\">\n+\t\t\t<unique-constraint>\n+\t\t\t\t<column-name>planeName</column-name>\n+\t\t\t</unique-constraint>\n+\t\t</table>\n+\n+\t\t<attributes>\n+\t\t\t<id name=\"FlightNum\">\n+\t\t\t\t<generated-value strategy=\"AUTO\" />\n+\t\t\t</id>\n+\t\t\t<basic name=\"planeName\">\n+\t\t\t\t<column name=\"flight_name\"/>\n+\t\t\t</basic>\n+\t\t</attributes>\n+\t</entity>\n+\n+\t <entity class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.Employee\" metadata-complete=\"true\">\n+\t\t<inheritance strategy=\"JOINED\" />\n+\n+\t\t<entity-listeners>\n+\t\t\t<entity-listener class=\"annotations.common.apps.NameValidator\">\n+\t\t\t\t<pre-persist method-name=\"validateName\" />\n+\t\t\t\t<pre-remove method-name=\"validateNothing1\" />\n+\t\t\t\t<post-remove method-name=\"validateNothing\" />\n+\t\t\t\t<post-update method-name=\"testpost\" />\n+\t\t\t</entity-listener>\n+\n+\t\t\t<entity-listener class=\"annotations.common.apps.LongNameValidator\">\n+\t\t\t\t<pre-persist method-name=\"validateName\" />\n+\t\t\t\t<post-update method-name=\"testpost\" />\n+\t\t\t</entity-listener>\n+\t\t</entity-listeners> \n+\n+\t\t<attributes>\n+\t\t\t<id name=\"id\">\n+\t\t\t</id>\n+\t\t\t<basic name=\"name\">\n+\t\t\t</basic>\n+\t\t\t<transient name=\"syncTime\" />\n+\t\t</attributes>\n+\t</entity>\n+\n+\t<entity class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.ContractEmployee\" metadata-complete=\"true\">\n+\t</entity>  \n+\n+\t<entity class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.TxRollbackEntity\" metadata-complete=\"true\">\n+\t</entity> -->\n+\n+\n+  <!-- <entity class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntity\">\n+    <exclude-default-listeners />\n+    <entity-listeners>\n+\t\t\t<entity-listener class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.EntityDDListener\">\n+\t\t\t\t<post-remove method-name=\"verifyPostRemove\" />\n+\t\t\t\t<post-update method-name=\"verifyPostUpdate\" />\n+\t\t\t</entity-listener>\n+\n+\t\t\t<entity-listener class=\"org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.EntityDDListener2\">\n+\t\t\t\t<pre-update method-name=\"verifyPreUpdate\" />\n+\t\t\t\t<post-load method-name=\"verifyPostLoad\" /> \n+\t\t\t</entity-listener>\n+\t\t</entity-listeners>\n+\n+        <pre-persist method-name=\"verifyPrePersist\" />\n+        <post-persist method-name=\"verifyPostPersist\" />\n+        <pre-remove method-name=\"verifyPreRemove\" />\n+\n+\t\t<attributes>\n+\t\t\t<id name=\"id\">\n+\t\t\t\t<generated-value strategy=\"AUTO\" />\n+\t\t\t</id>\n+\t\t\t<basic name=\"name\">\n+\t\t\t</basic>\n+\t\t\t<basic name=\"surname\">\n+\t\t\t</basic>\n+\t\t</attributes>\n+\t</entity> -->\n+</entity-mappings>"},{"sha":"4806fcada76db3018e1b9fd782b7185dc51c90a6","filename":"openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/annotations/common/apps/annotApp/ddtype/META-INF/persistence.xml","status":"modified","additions":33,"deletions":33,"changes":66,"blob_url":"https://github.com/apache/openjpa/blob/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/annotations/common/apps/annotApp/ddtype/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/annotations/common/apps/annotApp/ddtype/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/annotations/common/apps/annotApp/ddtype/META-INF/persistence.xml?ref=72f4ebcda0e2086c8699580100976a7f8a7d5f8a","patch":"@@ -1,33 +1,33 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n-<!--\r\n- Licensed to the Apache Software Foundation (ASF) under one\r\n- or more contributor license agreements.  See the NOTICE file\r\n- distributed with this work for additional information\r\n- regarding copyright ownership.  The ASF licenses this file\r\n- to you under the Apache License, Version 2.0 (the\r\n- \"License\"); you may not use this file except in compliance\r\n- with the License.  You may obtain a copy of the License at\r\n- \r\n- http://www.apache.org/licenses/LICENSE-2.0\r\n- \r\n- Unless required by applicable law or agreed to in writing,\r\n- software distributed under the License is distributed on an\r\n- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- KIND, either express or implied.  See the License for the\r\n- specific language governing permissions and limitations\r\n- under the License.   \r\n--->\r\n-<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\" version=\"1.0\">\r\n-\t<persistence-unit name=\"TestConv\" transaction-type=\"RESOURCE_LOCAL\">\r\n-\t\t<provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Employee</class>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.ContractEmployee</class>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.TxRollbackEntity</class>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntity</class>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntity2</class>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntitySub</class>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Entity1</class>\r\n-\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Entity2</class>\r\n-\t</persistence-unit>\r\n-\r\n-</persistence>\r\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+ \n+ http://www.apache.org/licenses/LICENSE-2.0\n+ \n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.   \n+-->\n+<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\" version=\"1.0\">\n+\t<persistence-unit name=\"TestConv\" transaction-type=\"RESOURCE_LOCAL\">\n+\t\t<provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Employee</class>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.ContractEmployee</class>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.TxRollbackEntity</class>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntity</class>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntity2</class>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.LifeCycleDDEntitySub</class>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Entity1</class>\n+\t\t<class>org.apache.openjpa.persistence.annotations.common.apps.annotApp.ddtype.Entity2</class>\n+\t</persistence-unit>\n+\n+</persistence>"},{"sha":"43b7badf9b02aae9476a1699074454c50e4aecf2","filename":"openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/cache/common/apps/META-INF/persistence.xml","status":"modified","additions":29,"deletions":29,"changes":58,"blob_url":"https://github.com/apache/openjpa/blob/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/cache/common/apps/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/cache/common/apps/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/cache/common/apps/META-INF/persistence.xml?ref=72f4ebcda0e2086c8699580100976a7f8a7d5f8a","patch":"@@ -1,29 +1,29 @@\n-<!--\r\n- Licensed to the Apache Software Foundation (ASF) under one\r\n- or more contributor license agreements.  See the NOTICE file\r\n- distributed with this work for additional information\r\n- regarding copyright ownership.  The ASF licenses this file\r\n- to you under the Apache License, Version 2.0 (the\r\n- \"License\"); you may not use this file except in compliance\r\n- with the License.  You may obtain a copy of the License at\r\n- \r\n- http://www.apache.org/licenses/LICENSE-2.0\r\n- \r\n- Unless required by applicable law or agreed to in writing,\r\n- software distributed under the License is distributed on an\r\n- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- KIND, either express or implied.  See the License for the\r\n- specific language governing permissions and limitations\r\n- under the License.   \r\n--->\r\n-<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\"\r\n-  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n-  xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\r\n-    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd\"\r\n-  version=\"1.0\">\r\n-\r\n-\t<persistence-unit name=\"TestConv\" transaction-type=\"RESOURCE_LOCAL\">\r\n-\t    <class>org.apache.openjpa.persistence.cache.common.apps.Entity1</class>\r\n-\t    <class>org.apache.openjpa.persistence.cache.common.apps.Entity2</class>\r\n-\t</persistence-unit>\r\n-</persistence>\r\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+ \n+ http://www.apache.org/licenses/LICENSE-2.0\n+ \n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.   \n+-->\n+<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\"\n+  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\n+    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd\"\n+  version=\"1.0\">\n+\n+\t<persistence-unit name=\"TestConv\" transaction-type=\"RESOURCE_LOCAL\">\n+\t    <class>org.apache.openjpa.persistence.cache.common.apps.Entity1</class>\n+\t    <class>org.apache.openjpa.persistence.cache.common.apps.Entity2</class>\n+\t</persistence-unit>\n+</persistence>"},{"sha":"0dd7cff0024652d5cb9fa15c8d068b054aa4a169","filename":"openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/common/apps/META-INF/persistence.xml","status":"modified","additions":45,"deletions":45,"changes":90,"blob_url":"https://github.com/apache/openjpa/blob/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/common/apps/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/common/apps/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/common/apps/META-INF/persistence.xml?ref=72f4ebcda0e2086c8699580100976a7f8a7d5f8a","patch":"@@ -1,45 +1,45 @@\n-<!--\r\n- Licensed to the Apache Software Foundation (ASF) under one\r\n- or more contributor license agreements.  See the NOTICE file\r\n- distributed with this work for additional information\r\n- regarding copyright ownership.  The ASF licenses this file\r\n- to you under the Apache License, Version 2.0 (the\r\n- \"License\"); you may not use this file except in compliance\r\n- with the License.  You may obtain a copy of the License at\r\n- \r\n- http://www.apache.org/licenses/LICENSE-2.0\r\n- \r\n- Unless required by applicable law or agreed to in writing,\r\n- software distributed under the License is distributed on an\r\n- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- KIND, either express or implied.  See the License for the\r\n- specific language governing permissions and limitations\r\n- under the License.   \r\n--->\r\n-<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\r\n-    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd\" version=\"1.0\">\r\n-\t<persistence-unit name=\"TestConv\" transaction-type=\"RESOURCE_LOCAL\">\r\n-\t\t<provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>\r\n-\t\t<class>org.apache.openjpa.persistence.common.apps.Entity1</class>\r\n-\t\t<class>org.apache.openjpa.persistence.common.apps.Entity2</class>\r\n-\t\t<class>org.apache.openjpa.persistence.common.apps.RuntimeTest1</class>\r\n-\t\t<class>org.apache.openjpa.persistence.common.apps.RuntimeTest2</class>\r\n-\t\t<class>org.apache.openjpa.persistence.common.apps.Course</class>\r\n-\t\t<class>org.apache.openjpa.persistence.common.apps.Department</class>\r\n-\t\t<class>org.apache.openjpa.persistence.common.apps.Student</class>\r\n-\t\t<class>org.apache.openjpa.persistence.common.apps.ArtCourse</class>\r\n-\t\t<class>org.apache.openjpa.persistence.common.apps.ScienceCourse</class>\r\n-\t\t<class>org.apache.openjpa.persistence.common.apps.EmbeddedOwnerPC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.common.apps.EmbeddedPC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.common.apps.ComplexEmbeddedPC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.common.apps.CompUser</class>\r\n-\t\t<class>org.apache.openjpa.persistence.common.apps.MaleUser</class>\r\n-\t\t<class>org.apache.openjpa.persistence.common.apps.Address</class>\r\n-\t\t<class>org.apache.openjpa.persistence.common.apps.FemaleUser</class>\r\n-\t\t<properties>\r\n-\t\t\t<property name=\"openjpa.ConnectionFactoryProperties\" value=\"MaxActive=110, MaxIdle=10, ValidationTimeout=50000, \r\n-                                                                     MaxCachedStatements=10, ValidationSQL='', MaxWait=10000, TestOnBorrow=true\" />\r\n-\t\t\t<property name=\"openjpa.jdbc.SynchronizeMappings\" value=\"buildSchema(ForeignKeys=true)\" />\r\n-\t\t</properties>\r\n-\t</persistence-unit>\r\n-</persistence>\r\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+ \n+ http://www.apache.org/licenses/LICENSE-2.0\n+ \n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.   \n+-->\n+<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\n+    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd\" version=\"1.0\">\n+\t<persistence-unit name=\"TestConv\" transaction-type=\"RESOURCE_LOCAL\">\n+\t\t<provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>\n+\t\t<class>org.apache.openjpa.persistence.common.apps.Entity1</class>\n+\t\t<class>org.apache.openjpa.persistence.common.apps.Entity2</class>\n+\t\t<class>org.apache.openjpa.persistence.common.apps.RuntimeTest1</class>\n+\t\t<class>org.apache.openjpa.persistence.common.apps.RuntimeTest2</class>\n+\t\t<class>org.apache.openjpa.persistence.common.apps.Course</class>\n+\t\t<class>org.apache.openjpa.persistence.common.apps.Department</class>\n+\t\t<class>org.apache.openjpa.persistence.common.apps.Student</class>\n+\t\t<class>org.apache.openjpa.persistence.common.apps.ArtCourse</class>\n+\t\t<class>org.apache.openjpa.persistence.common.apps.ScienceCourse</class>\n+\t\t<class>org.apache.openjpa.persistence.common.apps.EmbeddedOwnerPC</class>\n+\t\t<class>org.apache.openjpa.persistence.common.apps.EmbeddedPC</class>\n+\t\t<class>org.apache.openjpa.persistence.common.apps.ComplexEmbeddedPC</class>\n+\t\t<class>org.apache.openjpa.persistence.common.apps.CompUser</class>\n+\t\t<class>org.apache.openjpa.persistence.common.apps.MaleUser</class>\n+\t\t<class>org.apache.openjpa.persistence.common.apps.Address</class>\n+\t\t<class>org.apache.openjpa.persistence.common.apps.FemaleUser</class>\n+\t\t<properties>\n+\t\t\t<property name=\"openjpa.ConnectionFactoryProperties\" value=\"MaxActive=110, MaxIdle=10, ValidationTimeout=50000, \n+                                                                     MaxCachedStatements=10, ValidationSQL='', MaxWait=10000, TestOnBorrow=true\" />\n+\t\t\t<property name=\"openjpa.jdbc.SynchronizeMappings\" value=\"buildSchema(ForeignKeys=true)\" />\n+\t\t</properties>\n+\t</persistence-unit>\n+</persistence>"},{"sha":"236adfc7bee82ba02c9b20928bfbe1556248b971","filename":"openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/conf/common/apps/META-INF/persistence.xml","status":"modified","additions":25,"deletions":25,"changes":50,"blob_url":"https://github.com/apache/openjpa/blob/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/conf/common/apps/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/conf/common/apps/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/conf/common/apps/META-INF/persistence.xml?ref=72f4ebcda0e2086c8699580100976a7f8a7d5f8a","patch":"@@ -1,25 +1,25 @@\n-<!--\r\n- Licensed to the Apache Software Foundation (ASF) under one\r\n- or more contributor license agreements.  See the NOTICE file\r\n- distributed with this work for additional information\r\n- regarding copyright ownership.  The ASF licenses this file\r\n- to you under the Apache License, Version 2.0 (the\r\n- \"License\"); you may not use this file except in compliance\r\n- with the License.  You may obtain a copy of the License at\r\n- \r\n- http://www.apache.org/licenses/LICENSE-2.0\r\n- \r\n- Unless required by applicable law or agreed to in writing,\r\n- software distributed under the License is distributed on an\r\n- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- KIND, either express or implied.  See the License for the\r\n- specific language governing permissions and limitations\r\n- under the License.   \r\n--->\r\n-<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\r\n-    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd\" version=\"1.0\">\r\n-\r\n-\t<persistence-unit name=\"TestConv\" transaction-type=\"RESOURCE_LOCAL\">\r\n-\t\t<provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>\r\n-\t</persistence-unit>\r\n-</persistence>\r\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+ \n+ http://www.apache.org/licenses/LICENSE-2.0\n+ \n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.   \n+-->\n+<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\n+    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd\" version=\"1.0\">\n+\n+\t<persistence-unit name=\"TestConv\" transaction-type=\"RESOURCE_LOCAL\">\n+\t\t<provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>\n+\t</persistence-unit>\n+</persistence>"},{"sha":"13aabf04a1a87d7caac73c57182e3a8f2dc7dc67","filename":"openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/datacache/common/apps/META-INF/persistence.xml","status":"modified","additions":53,"deletions":53,"changes":106,"blob_url":"https://github.com/apache/openjpa/blob/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/datacache/common/apps/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/datacache/common/apps/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/datacache/common/apps/META-INF/persistence.xml?ref=72f4ebcda0e2086c8699580100976a7f8a7d5f8a","patch":"@@ -1,53 +1,53 @@\n-<!--\r\n- Licensed to the Apache Software Foundation (ASF) under one\r\n- or more contributor license agreements.  See the NOTICE file\r\n- distributed with this work for additional information\r\n- regarding copyright ownership.  The ASF licenses this file\r\n- to you under the Apache License, Version 2.0 (the\r\n- \"License\"); you may not use this file except in compliance\r\n- with the License.  You may obtain a copy of the License at\r\n- \r\n- http://www.apache.org/licenses/LICENSE-2.0\r\n- \r\n- Unless required by applicable law or agreed to in writing,\r\n- software distributed under the License is distributed on an\r\n- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- KIND, either express or implied.  See the License for the\r\n- specific language governing permissions and limitations\r\n- under the License.   \r\n--->\r\n-<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\r\n-    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd\" version=\"1.0\">\r\n-\r\n-\t<persistence-unit name=\"TestConv\" transaction-type=\"RESOURCE_LOCAL\">\r\n-\t\t<provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>\r\n-\t\t\r\n-\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.AppIdCacheObject</class>\r\n-\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.AttachA</class>\r\n-\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.AttachB</class>\r\n-\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.AttachC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.AttachD</class>\r\n-\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.AttachE</class>\r\n-\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.AttachF</class>\r\n-<!--\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.CacheObjectInterface</class>-->\r\n-\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.CacheObjectWithExternalizedFields</class>\r\n-\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.CacheObjectA</class>\r\n-\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.CacheObjectB</class>\r\n-\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.CacheObjectC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.CacheObjectD</class>\r\n-\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.CacheObjectE</class>\r\n-\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.CacheObjectF</class>\r\n-\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.CacheObjectG</class>\r\n-\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.CacheObjectH</class>\r\n-\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.CacheObjectJ</class>\r\n-\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.FlushDataCacheObject</class>\r\n-\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.CacheObjectAChild1</class>\r\n-\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.CacheObjectAChild2</class>\r\n-\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.CacheObjectBChild1</class>\r\n-\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1</class>\r\n-\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest2</class>\r\n-\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.ScheduledEviction</class>\r\n-\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.SelfReferencingCacheTestObject</class>\r\n-\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.TransactionalClassPC</class>\r\n-\t</persistence-unit>\r\n-</persistence>\r\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+ \n+ http://www.apache.org/licenses/LICENSE-2.0\n+ \n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.   \n+-->\n+<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\n+    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd\" version=\"1.0\">\n+\n+\t<persistence-unit name=\"TestConv\" transaction-type=\"RESOURCE_LOCAL\">\n+\t\t<provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>\n+\t\t\n+\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.AppIdCacheObject</class>\n+\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.AttachA</class>\n+\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.AttachB</class>\n+\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.AttachC</class>\n+\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.AttachD</class>\n+\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.AttachE</class>\n+\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.AttachF</class>\n+<!--\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.CacheObjectInterface</class>-->\n+\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.CacheObjectWithExternalizedFields</class>\n+\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.CacheObjectA</class>\n+\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.CacheObjectB</class>\n+\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.CacheObjectC</class>\n+\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.CacheObjectD</class>\n+\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.CacheObjectE</class>\n+\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.CacheObjectF</class>\n+\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.CacheObjectG</class>\n+\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.CacheObjectH</class>\n+\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.CacheObjectJ</class>\n+\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.FlushDataCacheObject</class>\n+\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.CacheObjectAChild1</class>\n+\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.CacheObjectAChild2</class>\n+\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.CacheObjectBChild1</class>\n+\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest1</class>\n+\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.RuntimeTest2</class>\n+\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.ScheduledEviction</class>\n+\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.SelfReferencingCacheTestObject</class>\n+\t\t<class>org.apache.openjpa.persistence.datacache.common.apps.TransactionalClassPC</class>\n+\t</persistence-unit>\n+</persistence>"},{"sha":"0b3dca33792ae990bc64add0afbbb10e435e603b","filename":"openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/enhance/common/apps/META-INF/persistence.xml","status":"modified","additions":41,"deletions":41,"changes":82,"blob_url":"https://github.com/apache/openjpa/blob/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/enhance/common/apps/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/enhance/common/apps/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/enhance/common/apps/META-INF/persistence.xml?ref=72f4ebcda0e2086c8699580100976a7f8a7d5f8a","patch":"@@ -1,41 +1,41 @@\n-<!--\r\n- Licensed to the Apache Software Foundation (ASF) under one\r\n- or more contributor license agreements.  See the NOTICE file\r\n- distributed with this work for additional information\r\n- regarding copyright ownership.  The ASF licenses this file\r\n- to you under the Apache License, Version 2.0 (the\r\n- \"License\"); you may not use this file except in compliance\r\n- with the License.  You may obtain a copy of the License at\r\n- \r\n- http://www.apache.org/licenses/LICENSE-2.0\r\n- \r\n- Unless required by applicable law or agreed to in writing,\r\n- software distributed under the License is distributed on an\r\n- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- KIND, either express or implied.  See the License for the\r\n- specific language governing permissions and limitations\r\n- under the License.   \r\n--->\r\n-<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\r\n-    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd\" version=\"1.0\">\r\n-\r\n-\t<persistence-unit name=\"TestConv\" transaction-type=\"RESOURCE_LOCAL\">\r\n-\t\t<provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>\r\n-\t\t<class>org.apache.openjpa.persistence.enhance.common.apps.PCClone</class>\r\n-\t\t<class>org.apache.openjpa.persistence.enhance.common.apps.NonPCClone</class>\r\n-\t\t<class>org.apache.openjpa.persistence.enhance.common.apps.SubclassClone</class>\r\n-\t\t<class>org.apache.openjpa.persistence.enhance.common.apps.NoClone</class>\r\n-\t\t<class>org.apache.openjpa.persistence.enhance.common.apps.NoNoArgs</class>\r\n-\t\t<class>org.apache.openjpa.persistence.enhance.common.apps.No2NoArgs</class>\r\n-\t\t<class>org.apache.openjpa.persistence.enhance.common.apps.No3NoArgs</class>\r\n-\t\t<class>org.apache.openjpa.persistence.enhance.common.apps.BackingFieldNameMismatchInstance</class>\r\n-\t\t<class>org.apache.openjpa.persistence.enhance.common.apps.BaseEntity</class>\r\n-\t\t<class>org.apache.openjpa.persistence.enhance.common.apps.BasicSubclassInstance</class>\r\n-\t\t<class>org.apache.openjpa.persistence.enhance.common.apps.DetachablePC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.enhance.common.apps.DetachableVersionedPC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.enhance.common.apps.ManagedInverseTestInstance</class>\r\n-\t\t<class>org.apache.openjpa.persistence.enhance.common.apps.ManagedInverseTestInstance2</class>\r\n-\t\t<class>org.apache.openjpa.persistence.enhance.common.apps.DerivedEntity</class>\r\n-\r\n-\t</persistence-unit>\r\n-</persistence>\r\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+ \n+ http://www.apache.org/licenses/LICENSE-2.0\n+ \n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.   \n+-->\n+<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\n+    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd\" version=\"1.0\">\n+\n+\t<persistence-unit name=\"TestConv\" transaction-type=\"RESOURCE_LOCAL\">\n+\t\t<provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>\n+\t\t<class>org.apache.openjpa.persistence.enhance.common.apps.PCClone</class>\n+\t\t<class>org.apache.openjpa.persistence.enhance.common.apps.NonPCClone</class>\n+\t\t<class>org.apache.openjpa.persistence.enhance.common.apps.SubclassClone</class>\n+\t\t<class>org.apache.openjpa.persistence.enhance.common.apps.NoClone</class>\n+\t\t<class>org.apache.openjpa.persistence.enhance.common.apps.NoNoArgs</class>\n+\t\t<class>org.apache.openjpa.persistence.enhance.common.apps.No2NoArgs</class>\n+\t\t<class>org.apache.openjpa.persistence.enhance.common.apps.No3NoArgs</class>\n+\t\t<class>org.apache.openjpa.persistence.enhance.common.apps.BackingFieldNameMismatchInstance</class>\n+\t\t<class>org.apache.openjpa.persistence.enhance.common.apps.BaseEntity</class>\n+\t\t<class>org.apache.openjpa.persistence.enhance.common.apps.BasicSubclassInstance</class>\n+\t\t<class>org.apache.openjpa.persistence.enhance.common.apps.DetachablePC</class>\n+\t\t<class>org.apache.openjpa.persistence.enhance.common.apps.DetachableVersionedPC</class>\n+\t\t<class>org.apache.openjpa.persistence.enhance.common.apps.ManagedInverseTestInstance</class>\n+\t\t<class>org.apache.openjpa.persistence.enhance.common.apps.ManagedInverseTestInstance2</class>\n+\t\t<class>org.apache.openjpa.persistence.enhance.common.apps.DerivedEntity</class>\n+\n+\t</persistence-unit>\n+</persistence>"},{"sha":"6c03f8d75dc7f0b34221716b0d2e1b9fe024cf20","filename":"openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/entityoperation/common/apps/META-INF/persistence.xml","status":"modified","additions":26,"deletions":26,"changes":52,"blob_url":"https://github.com/apache/openjpa/blob/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/entityoperation/common/apps/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/entityoperation/common/apps/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/entityoperation/common/apps/META-INF/persistence.xml?ref=72f4ebcda0e2086c8699580100976a7f8a7d5f8a","patch":"@@ -1,26 +1,26 @@\n-<!--\r\n- Licensed to the Apache Software Foundation (ASF) under one\r\n- or more contributor license agreements.  See the NOTICE file\r\n- distributed with this work for additional information\r\n- regarding copyright ownership.  The ASF licenses this file\r\n- to you under the Apache License, Version 2.0 (the\r\n- \"License\"); you may not use this file except in compliance\r\n- with the License.  You may obtain a copy of the License at\r\n- \r\n- http://www.apache.org/licenses/LICENSE-2.0\r\n- \r\n- Unless required by applicable law or agreed to in writing,\r\n- software distributed under the License is distributed on an\r\n- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- KIND, either express or implied.  See the License for the\r\n- specific language governing permissions and limitations\r\n- under the License.   \r\n--->\r\n-<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\r\n-    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd\" version=\"1.0\">\r\n-\r\n-\t<persistence-unit name=\"TestConv\" transaction-type=\"RESOURCE_LOCAL\">\r\n-\t\t<provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>\r\n-\t\t<class>org.apache.openjpa.persistence.entityoperation.common.apps.CascadesEntity</class>\r\n-\t</persistence-unit>\r\n-</persistence>\r\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+ \n+ http://www.apache.org/licenses/LICENSE-2.0\n+ \n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.   \n+-->\n+<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\n+    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd\" version=\"1.0\">\n+\n+\t<persistence-unit name=\"TestConv\" transaction-type=\"RESOURCE_LOCAL\">\n+\t\t<provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>\n+\t\t<class>org.apache.openjpa.persistence.entityoperation.common.apps.CascadesEntity</class>\n+\t</persistence-unit>\n+</persistence>"},{"sha":"36cb45dafee9b43c2ce65d32f5269e9ef6f9c288","filename":"openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/event/common/apps/META-INF/persistence.xml","status":"modified","additions":29,"deletions":29,"changes":58,"blob_url":"https://github.com/apache/openjpa/blob/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/event/common/apps/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/event/common/apps/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/event/common/apps/META-INF/persistence.xml?ref=72f4ebcda0e2086c8699580100976a7f8a7d5f8a","patch":"@@ -1,29 +1,29 @@\n-<!--\r\n- Licensed to the Apache Software Foundation (ASF) under one\r\n- or more contributor license agreements.  See the NOTICE file\r\n- distributed with this work for additional information\r\n- regarding copyright ownership.  The ASF licenses this file\r\n- to you under the Apache License, Version 2.0 (the\r\n- \"License\"); you may not use this file except in compliance\r\n- with the License.  You may obtain a copy of the License at\r\n- \r\n- http://www.apache.org/licenses/LICENSE-2.0\r\n- \r\n- Unless required by applicable law or agreed to in writing,\r\n- software distributed under the License is distributed on an\r\n- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- KIND, either express or implied.  See the License for the\r\n- specific language governing permissions and limitations\r\n- under the License.   \r\n--->\r\n-<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\r\n-    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd\" version=\"1.0\">\r\n-\r\n-\t<persistence-unit name=\"TestConv\" transaction-type=\"RESOURCE_LOCAL\">\r\n-\t\t<provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>\r\n-\t\t<class>org.apache.openjpa.persistence.event.common.apps.RuntimeTest1</class>\r\n-\t\t<class>org.apache.openjpa.persistence.event.common.apps.RuntimeTest2</class>\r\n-\t\t<class>org.apache.openjpa.persistence.event.common.apps.RuntimeTest4</class>\r\n-\t\t<class>org.apache.openjpa.persistence.event.common.apps.TransactionalClassPC</class>\r\n-\t</persistence-unit>\r\n-</persistence>\r\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+ \n+ http://www.apache.org/licenses/LICENSE-2.0\n+ \n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.   \n+-->\n+<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\n+    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd\" version=\"1.0\">\n+\n+\t<persistence-unit name=\"TestConv\" transaction-type=\"RESOURCE_LOCAL\">\n+\t\t<provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>\n+\t\t<class>org.apache.openjpa.persistence.event.common.apps.RuntimeTest1</class>\n+\t\t<class>org.apache.openjpa.persistence.event.common.apps.RuntimeTest2</class>\n+\t\t<class>org.apache.openjpa.persistence.event.common.apps.RuntimeTest4</class>\n+\t\t<class>org.apache.openjpa.persistence.event.common.apps.TransactionalClassPC</class>\n+\t</persistence-unit>\n+</persistence>"},{"sha":"1e8e940df57218907b8bb1bf3f41b394b534ab0d","filename":"openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/jdbc/common/apps/META-INF/persistence.xml","status":"modified","additions":43,"deletions":43,"changes":86,"blob_url":"https://github.com/apache/openjpa/blob/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/jdbc/common/apps/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/jdbc/common/apps/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/jdbc/common/apps/META-INF/persistence.xml?ref=72f4ebcda0e2086c8699580100976a7f8a7d5f8a","patch":"@@ -1,43 +1,43 @@\n-<!--\r\n- Licensed to the Apache Software Foundation (ASF) under one\r\n- or more contributor license agreements.  See the NOTICE file\r\n- distributed with this work for additional information\r\n- regarding copyright ownership.  The ASF licenses this file\r\n- to you under the Apache License, Version 2.0 (the\r\n- \"License\"); you may not use this file except in compliance\r\n- with the License.  You may obtain a copy of the License at\r\n- \r\n- http://www.apache.org/licenses/LICENSE-2.0\r\n- \r\n- Unless required by applicable law or agreed to in writing,\r\n- software distributed under the License is distributed on an\r\n- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- KIND, either express or implied.  See the License for the\r\n- specific language governing permissions and limitations\r\n- under the License.   \r\n--->\r\n-<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\"\r\n-  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n-  xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\r\n-    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd\"\r\n-  version=\"1.0\">\r\n-\r\n-\t<persistence-unit name=\"TestConv\" transaction-type=\"RESOURCE_LOCAL\">\r\n-\t\t<provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>\r\n-\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC1</class>\r\n-\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC2</class>\r\n-\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC3</class>\r\n-\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC4</class>\r\n-\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC5</class>\r\n-\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.CustomMappingPC</class>\r\n-        <class>org.apache.openjpa.persistence.jdbc.common.apps.DFGTest</class>\r\n-\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.EagerPC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.EagerPCSub</class>\r\n-\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.HelperPC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.HelperPC2</class>\r\n-\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.HelperPC3</class>\r\n-\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.HelperPC4</class>\r\n-\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.InvertA</class>\r\n-        <class>org.apache.openjpa.persistence.jdbc.common.apps.InvertB</class>\r\n-\t</persistence-unit>\r\n-</persistence>\r\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+ \n+ http://www.apache.org/licenses/LICENSE-2.0\n+ \n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.   \n+-->\n+<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\"\n+  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\n+    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd\"\n+  version=\"1.0\">\n+\n+\t<persistence-unit name=\"TestConv\" transaction-type=\"RESOURCE_LOCAL\">\n+\t\t<provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>\n+\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC1</class>\n+\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC2</class>\n+\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.AutoIncrementPC3</class>\n+\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC4</class>\n+\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.ConstantJoinPC5</class>\n+\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.CustomMappingPC</class>\n+        <class>org.apache.openjpa.persistence.jdbc.common.apps.DFGTest</class>\n+\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.EagerPC</class>\n+\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.EagerPCSub</class>\n+\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.HelperPC</class>\n+\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.HelperPC2</class>\n+\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.HelperPC3</class>\n+\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.HelperPC4</class>\n+\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.InvertA</class>\n+        <class>org.apache.openjpa.persistence.jdbc.common.apps.InvertB</class>\n+\t</persistence-unit>\n+</persistence>"},{"sha":"9d482d044b8f313813e78f43d7cca7981b7a5637","filename":"openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/jdbc/common/apps/mappingApp/META-INF/persistence.xml","status":"modified","additions":34,"deletions":34,"changes":68,"blob_url":"https://github.com/apache/openjpa/blob/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/jdbc/common/apps/mappingApp/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/jdbc/common/apps/mappingApp/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/jdbc/common/apps/mappingApp/META-INF/persistence.xml?ref=72f4ebcda0e2086c8699580100976a7f8a7d5f8a","patch":"@@ -1,34 +1,34 @@\n-<!--\r\n- Licensed to the Apache Software Foundation (ASF) under one\r\n- or more contributor license agreements.  See the NOTICE file\r\n- distributed with this work for additional information\r\n- regarding copyright ownership.  The ASF licenses this file\r\n- to you under the Apache License, Version 2.0 (the\r\n- \"License\"); you may not use this file except in compliance\r\n- with the License.  You may obtain a copy of the License at\r\n- \r\n- http://www.apache.org/licenses/LICENSE-2.0\r\n- \r\n- Unless required by applicable law or agreed to in writing,\r\n- software distributed under the License is distributed on an\r\n- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- KIND, either express or implied.  See the License for the\r\n- specific language governing permissions and limitations\r\n- under the License.   \r\n--->\r\n-<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\r\n-    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd\" version=\"1.0\">\r\n-\r\n-\t<persistence-unit name=\"TestConv\" transaction-type=\"RESOURCE_LOCAL\">\r\n-\t\t<provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>\r\n-\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.EntityWithCompositeId</class>\r\n-\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.OwnerOfEntityWithCompositeId</class>\r\n-\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.RecursiveEntityWithCompositeId</class>\r\n-\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapAddress</class>\r\n-\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapItem</class>\r\n-\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapOrder</class>\r\n-\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapPerson</class>\r\n-\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.Entity1</class>\r\n-\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.Entity2</class>\r\n-\t</persistence-unit>\r\n-</persistence>\r\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+ \n+ http://www.apache.org/licenses/LICENSE-2.0\n+ \n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.   \n+-->\n+<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\n+    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd\" version=\"1.0\">\n+\n+\t<persistence-unit name=\"TestConv\" transaction-type=\"RESOURCE_LOCAL\">\n+\t\t<provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>\n+\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.EntityWithCompositeId</class>\n+\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.OwnerOfEntityWithCompositeId</class>\n+\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.RecursiveEntityWithCompositeId</class>\n+\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapAddress</class>\n+\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapItem</class>\n+\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapOrder</class>\n+\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.SQLMapPerson</class>\n+\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.Entity1</class>\n+\t\t<class>org.apache.openjpa.persistence.jdbc.common.apps.mappingApp.Entity2</class>\n+\t</persistence-unit>\n+</persistence>"},{"sha":"297393cefe8bcc1ae6f8f46c416259ebe29b2f0f","filename":"openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/jdbc/unique/orm.xml","status":"modified","additions":119,"deletions":119,"changes":238,"blob_url":"https://github.com/apache/openjpa/blob/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/jdbc/unique/orm.xml","raw_url":"https://github.com/apache/openjpa/raw/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/jdbc/unique/orm.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/jdbc/unique/orm.xml?ref=72f4ebcda0e2086c8699580100976a7f8a7d5f8a","patch":"@@ -1,119 +1,119 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n-<!--\r\n-\tLicensed to the Apache Software Foundation (ASF) under one\r\n-\tor more contributor license agreements.  See the NOTICE file\r\n-\tdistributed with this work for additional information\r\n-\tregarding copyright ownership.  The ASF licenses this file\r\n-\tto you under the Apache License, Version 2.0 (the\r\n-\t\"License\"); you may not use this file except in compliance\r\n-\twith the License.  You may obtain a copy of the License at\r\n-\t\r\n-\thttp://www.apache.org/licenses/LICENSE-2.0\r\n-\t\r\n-\tUnless required by applicable law or agreed to in writing,\r\n-\tsoftware distributed under the License is distributed on an\r\n-\t\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n-\tKIND, either express or implied.  See the License for the\r\n-\tspecific language governing permissions and limitations\r\n-\tunder the License.\r\n--->\r\n-<entity-mappings xmlns=\"http://java.sun.com/xml/ns/persistence/orm\"\r\n-\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n-\txsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence/orm orm_1_0.xsd\"\r\n-\tversion=\"1.0\">\r\n-\t\r\n-\t<persistence-unit-metadata>\r\n-\t\t<xml-mapping-metadata-complete/>\r\n-\t</persistence-unit-metadata>\r\n-\t\r\n-\t\r\n-\t<package>org.apache.openjpa.persistence.jdbc.unique</package>\r\n-\t<entity name=\"UniqueA\" class=\"UniqueA\">\r\n-\t\t<table name=\"UNIQUE_A_XML\">\r\n-\t\t\t<unique-constraint>\r\n-\t\t\t\t<column-name>a1x</column-name>\r\n-\t\t\t\t<column-name>a2x</column-name>\r\n-\t\t\t</unique-constraint>\r\n-\t\t\t<unique-constraint>\r\n-\t\t\t\t<column-name>a3x</column-name>\r\n-\t\t\t\t<column-name>a4x</column-name>\r\n-\t\t\t</unique-constraint>\r\n-\t\t</table>\r\n-\t\t<secondary-table name=\"UNIQUE_SECONDARY_XML\">\r\n-\t\t\t<unique-constraint>\r\n-\t\t\t\t<column-name>sa1x</column-name>\r\n-\t\t\t</unique-constraint>\r\n-\t\t</secondary-table>\r\n-\t\t<attributes>\r\n-\t\t\t<id name=\"aid\">\r\n-\t\t\t</id>\r\n-\t\t\t<basic name=\"a1\">\r\n-\t\t\t\t<column name=\"a1x\"/>\r\n-\t\t\t</basic>\r\n-\t\t\t<basic name=\"a2\">\r\n-\t\t\t\t<column name=\"a2x\"/>\r\n-\t\t\t</basic>\r\n-\t\t\t<basic name=\"a3\">\r\n-\t\t\t\t<column name=\"a3x\"/>\r\n-\t\t\t</basic>\r\n-\t\t\t<basic name=\"a4\">\r\n-\t\t\t\t<column name=\"a4x\"/>\r\n-\t\t\t</basic>\r\n-\t\t\t<basic name=\"a5\">\r\n-\t\t\t\t<column name=\"a5x\"/>\r\n-\t\t\t</basic>\r\n-\t\t\t<basic name=\"a6\">\r\n-\t\t\t\t<column name=\"a6x\"/>\r\n-\t\t\t</basic>\r\n-\t\t\t\r\n-\t\t\t<basic name=\"sa1\">\r\n-\t\t\t\t<column name=\"sa1x\" table=\"UNIQUE_SECONDARY_XML\" />\r\n-\t\t\t</basic>\r\n-\t\t\t<basic name=\"sa2\">\r\n-\t\t\t\t<column name=\"sa2x\" table=\"UNIQUE_SECONDARY_XML\" />\r\n-\t\t\t</basic>\r\n-\r\n-\t\t\t<many-to-many name=\"bs\">\r\n-\t\t\t\t<join-table name=\"UNIQUE_JOINTABLE_XML\">\r\n-\t\t\t\t\t<join-column name=\"FK_A_XML\" referenced-column-name=\"aid\" nullable=\"false\"/>\r\n-\t\t\t\t\t<inverse-join-column name=\"FK_B_XML\" referenced-column-name=\"bid\" nullable=\"false\"/>\r\n-\t\t\t\t\t<unique-constraint>\r\n-\t\t\t\t\t\t<column-name>FK_A_XML</column-name>\r\n-\t\t\t\t\t\t<column-name>FK_B_XML</column-name>\r\n-\t\t\t\t\t</unique-constraint>\r\n-\t\t\t\t</join-table>\r\n-\t\t\t</many-to-many>\r\n-\t\t</attributes>\r\n-\t</entity>\r\n-\r\n-\t<entity name=\"UniqueB\" class=\"UniqueB\">\r\n-\t\t<table name=\"UNIQUE_B_XML\">\r\n-\t\t\t<unique-constraint>\r\n-\t\t\t\t<column-name>b1x</column-name>\r\n-\t\t\t\t<column-name>b2x</column-name>\r\n-\t\t\t</unique-constraint>\r\n-\t\t</table>\r\n-\t\t<attributes>\r\n-\t\t\t<id name=\"bid\">\r\n-\t\t\t\t<generated-value strategy=\"TABLE\"\r\n-\t\t\t\t\tgenerator=\"testGeneratorXML\" />\r\n-\t\t\t\t<table-generator name=\"testGeneratorXML\"\r\n-\t\t\t\t\ttable=\"UNIQUE_GENERATOR_XML\" pk-column-name=\"GEN1_XML\"\r\n-\t\t\t\t\tvalue-column-name=\"GEN2_XML\">\r\n-\t\t\t\t\t<unique-constraint>\r\n-\t\t\t\t\t\t<column-name>GEN1_XML</column-name>\r\n-\t\t\t\t\t\t<column-name>GEN2_XML</column-name>\r\n-\t\t\t\t\t</unique-constraint>\r\n-\t\t\t\t</table-generator>\r\n-\t\t\t</id>\r\n-\t\t\t<basic name=\"b1\">\r\n-\t\t\t\t<column name=\"b1x\"/>\r\n-\t\t\t</basic>\r\n-\t\t\t<basic name=\"b2\">\r\n-\t\t\t\t<column name=\"b2x\"/>\r\n-\t\t\t</basic>\r\n-\t\t</attributes>\r\n-\t</entity>\r\n-</entity-mappings>\r\n-\r\n-\r\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\tLicensed to the Apache Software Foundation (ASF) under one\n+\tor more contributor license agreements.  See the NOTICE file\n+\tdistributed with this work for additional information\n+\tregarding copyright ownership.  The ASF licenses this file\n+\tto you under the Apache License, Version 2.0 (the\n+\t\"License\"); you may not use this file except in compliance\n+\twith the License.  You may obtain a copy of the License at\n+\t\n+\thttp://www.apache.org/licenses/LICENSE-2.0\n+\t\n+\tUnless required by applicable law or agreed to in writing,\n+\tsoftware distributed under the License is distributed on an\n+\t\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+\tKIND, either express or implied.  See the License for the\n+\tspecific language governing permissions and limitations\n+\tunder the License.\n+-->\n+<entity-mappings xmlns=\"http://java.sun.com/xml/ns/persistence/orm\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence/orm orm_1_0.xsd\"\n+\tversion=\"1.0\">\n+\t\n+\t<persistence-unit-metadata>\n+\t\t<xml-mapping-metadata-complete/>\n+\t</persistence-unit-metadata>\n+\t\n+\t\n+\t<package>org.apache.openjpa.persistence.jdbc.unique</package>\n+\t<entity name=\"UniqueA\" class=\"UniqueA\">\n+\t\t<table name=\"UNIQUE_A_XML\">\n+\t\t\t<unique-constraint>\n+\t\t\t\t<column-name>a1x</column-name>\n+\t\t\t\t<column-name>a2x</column-name>\n+\t\t\t</unique-constraint>\n+\t\t\t<unique-constraint>\n+\t\t\t\t<column-name>a3x</column-name>\n+\t\t\t\t<column-name>a4x</column-name>\n+\t\t\t</unique-constraint>\n+\t\t</table>\n+\t\t<secondary-table name=\"UNIQUE_SECONDARY_XML\">\n+\t\t\t<unique-constraint>\n+\t\t\t\t<column-name>sa1x</column-name>\n+\t\t\t</unique-constraint>\n+\t\t</secondary-table>\n+\t\t<attributes>\n+\t\t\t<id name=\"aid\">\n+\t\t\t</id>\n+\t\t\t<basic name=\"a1\">\n+\t\t\t\t<column name=\"a1x\"/>\n+\t\t\t</basic>\n+\t\t\t<basic name=\"a2\">\n+\t\t\t\t<column name=\"a2x\"/>\n+\t\t\t</basic>\n+\t\t\t<basic name=\"a3\">\n+\t\t\t\t<column name=\"a3x\"/>\n+\t\t\t</basic>\n+\t\t\t<basic name=\"a4\">\n+\t\t\t\t<column name=\"a4x\"/>\n+\t\t\t</basic>\n+\t\t\t<basic name=\"a5\">\n+\t\t\t\t<column name=\"a5x\"/>\n+\t\t\t</basic>\n+\t\t\t<basic name=\"a6\">\n+\t\t\t\t<column name=\"a6x\"/>\n+\t\t\t</basic>\n+\t\t\t\n+\t\t\t<basic name=\"sa1\">\n+\t\t\t\t<column name=\"sa1x\" table=\"UNIQUE_SECONDARY_XML\" />\n+\t\t\t</basic>\n+\t\t\t<basic name=\"sa2\">\n+\t\t\t\t<column name=\"sa2x\" table=\"UNIQUE_SECONDARY_XML\" />\n+\t\t\t</basic>\n+\n+\t\t\t<many-to-many name=\"bs\">\n+\t\t\t\t<join-table name=\"UNIQUE_JOINTABLE_XML\">\n+\t\t\t\t\t<join-column name=\"FK_A_XML\" referenced-column-name=\"aid\" nullable=\"false\"/>\n+\t\t\t\t\t<inverse-join-column name=\"FK_B_XML\" referenced-column-name=\"bid\" nullable=\"false\"/>\n+\t\t\t\t\t<unique-constraint>\n+\t\t\t\t\t\t<column-name>FK_A_XML</column-name>\n+\t\t\t\t\t\t<column-name>FK_B_XML</column-name>\n+\t\t\t\t\t</unique-constraint>\n+\t\t\t\t</join-table>\n+\t\t\t</many-to-many>\n+\t\t</attributes>\n+\t</entity>\n+\n+\t<entity name=\"UniqueB\" class=\"UniqueB\">\n+\t\t<table name=\"UNIQUE_B_XML\">\n+\t\t\t<unique-constraint>\n+\t\t\t\t<column-name>b1x</column-name>\n+\t\t\t\t<column-name>b2x</column-name>\n+\t\t\t</unique-constraint>\n+\t\t</table>\n+\t\t<attributes>\n+\t\t\t<id name=\"bid\">\n+\t\t\t\t<generated-value strategy=\"TABLE\"\n+\t\t\t\t\tgenerator=\"testGeneratorXML\" />\n+\t\t\t\t<table-generator name=\"testGeneratorXML\"\n+\t\t\t\t\ttable=\"UNIQUE_GENERATOR_XML\" pk-column-name=\"GEN1_XML\"\n+\t\t\t\t\tvalue-column-name=\"GEN2_XML\">\n+\t\t\t\t\t<unique-constraint>\n+\t\t\t\t\t\t<column-name>GEN1_XML</column-name>\n+\t\t\t\t\t\t<column-name>GEN2_XML</column-name>\n+\t\t\t\t\t</unique-constraint>\n+\t\t\t\t</table-generator>\n+\t\t\t</id>\n+\t\t\t<basic name=\"b1\">\n+\t\t\t\t<column name=\"b1x\"/>\n+\t\t\t</basic>\n+\t\t\t<basic name=\"b2\">\n+\t\t\t\t<column name=\"b2x\"/>\n+\t\t\t</basic>\n+\t\t</attributes>\n+\t</entity>\n+</entity-mappings>\n+\n+"},{"sha":"644dc52a0a8a2f1a1b833249ec4876a0cacd98c8","filename":"openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/kernel/common/apps/META-INF/persistence.xml","status":"modified","additions":124,"deletions":124,"changes":248,"blob_url":"https://github.com/apache/openjpa/blob/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/kernel/common/apps/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/kernel/common/apps/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/kernel/common/apps/META-INF/persistence.xml?ref=72f4ebcda0e2086c8699580100976a7f8a7d5f8a","patch":"@@ -1,124 +1,124 @@\n-<!--\r\n- Licensed to the Apache Software Foundation (ASF) under one\r\n- or more contributor license agreements.  See the NOTICE file\r\n- distributed with this work for additional information\r\n- regarding copyright ownership.  The ASF licenses this file\r\n- to you under the Apache License, Version 2.0 (the\r\n- \"License\"); you may not use this file except in compliance\r\n- with the License.  You may obtain a copy of the License at\r\n- \r\n- http://www.apache.org/licenses/LICENSE-2.0\r\n- \r\n- Unless required by applicable law or agreed to in writing,\r\n- software distributed under the License is distributed on an\r\n- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- KIND, either express or implied.  See the License for the\r\n- specific language governing permissions and limitations\r\n- under the License.   \r\n--->\r\n-<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\r\n-    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd\" version=\"1.0\">\r\n-\r\n-\t<persistence-unit name=\"TestConv\" transaction-type=\"RESOURCE_LOCAL\">\r\n-\t\t<provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>\r\n-\t\t<!-- <class>org.apache.openjpa.persistence.kernel.common.apps.AbstractMappedAppIdSuper</class> -->\r\n-\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AImplB</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AppIdClassString</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AppIdSubB</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AbstractMappedAppIdSuper</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AppIdSubC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AppIdSubD</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AppIdSubE</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AppIdSubF</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.ArraysTest</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AttachA</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AttachB</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AttachC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AttachD</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AttachE</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AttachF</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AttachVersionA</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AttachVersionB</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AttachVersionC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.BlobTest</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.ByteArray</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.CalendarFields</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.ColumnIOPC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.ComplexEmbeddedPC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.ConcreteMappedAppIdSub</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.DateVersion</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.DependentFieldsPC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.DetachSMPC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.EmbeddedOwnerPC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.EmbeddedPC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.Entity1</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.Entity2</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.ExternalValues</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.FetchGroupTestObject</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.FetchGroupTestObjectChild</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.Inner</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.InstanceCallbacksTest</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.ModInstanceCallbackTests</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.InterfaceHolder</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.InterfaceTestImpl1</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.InterfaceTestImpl2</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.InterfaceTestImpl3</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.InterfaceTestImpl4</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.InverseA</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.InverseB</class>\r\n-        \t<class>org.apache.openjpa.persistence.kernel.common.apps.Lobs</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.LockGroupPC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.LockGroupPC2</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.LockGroupPCKnownSubclass</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceOwner</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceOwnerAppId</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.MapElementPC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.MapElementPCChild</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.MixedInterfaceImpl</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.NonMappedInterfaceImpl</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.ObjectCollectionHolder</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.OuterJoinValuePC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.PCAddress</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.PCClassPC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.PCCompany</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.PCCountry</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.PCDepartment</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.PCDirectory</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.PCEmployee</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.PCFile</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.PCPerson</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.PersistenceAware</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.PersistentMapHolder</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.ProxiesPC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.RecursivelyEmbeddedPC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest1</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest2</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest3</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest4</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest5</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.SCOTest</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.SecondaryTab</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.SequenceAssigned</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.SequenceAssigned2</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.SequenceAssigned3</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.SingleIdByte</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.SingleIdChar</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.SingleIdInt</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.SingleIdLong</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.SingleIdShort</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.SingleIdString</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.SingleIdWrapper</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.ValueStrategyPC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.TestEJBLobs$Inner</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.TestEJBLobs$Inner2</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.TestStaticInnerClasses$Inner</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.TestEJBNoPersistentFields$Nholder</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.TestEJBNoPersistentFields$NoPersistentFieldsPC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.ModRuntimeTest1</class>\r\n-\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.ModRuntimeTest2</class>\r\n-\t</persistence-unit>\r\n-</persistence>\r\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+ \n+ http://www.apache.org/licenses/LICENSE-2.0\n+ \n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.   \n+-->\n+<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\n+    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd\" version=\"1.0\">\n+\n+\t<persistence-unit name=\"TestConv\" transaction-type=\"RESOURCE_LOCAL\">\n+\t\t<provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>\n+\t\t<!-- <class>org.apache.openjpa.persistence.kernel.common.apps.AbstractMappedAppIdSuper</class> -->\n+\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AImplB</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AllFieldsTypeTest</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AllFieldTypesTest</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AppIdClassString</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AppIdHolder</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AppIdSubB</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AbstractMappedAppIdSuper</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AppIdSubC</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AppIdSubD</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AppIdSubE</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AppIdSubF</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.ArraysTest</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AttachA</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AttachB</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AttachC</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AttachD</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AttachE</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AttachF</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AttachVersionA</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AttachVersionB</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.AttachVersionC</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.BlobTest</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.ByteArray</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.CalendarFields</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.ColumnIOPC</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.ComplexEmbeddedPC</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.ConcreteMappedAppIdSub</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.DateVersion</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.DependentFieldsPC</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.DetachSMPC</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.EmbeddedOwnerPC</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.EmbeddedPC</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.Entity1</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.Entity2</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.ExternalValues</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.FetchGroupTestObject</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.FetchGroupTestObjectChild</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.Inner</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.InstanceCallbacksTest</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.ModInstanceCallbackTests</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.InterfaceHolder</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.InterfaceTestImpl1</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.InterfaceTestImpl2</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.InterfaceTestImpl3</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.InterfaceTestImpl4</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.InverseA</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.InverseB</class>\n+        \t<class>org.apache.openjpa.persistence.kernel.common.apps.Lobs</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.LockGroupPC</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.LockGroupPC2</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.LockGroupPCKnownSubclass</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceOwner</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.ManagedInterfaceOwnerAppId</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.MapElementPC</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.MapElementPCChild</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.MixedInterfaceImpl</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.NonMappedInterfaceImpl</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.ObjectCollectionHolder</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.OuterJoinValuePC</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.PCAddress</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.PCClassPC</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.PCCompany</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.PCCountry</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.PCDepartment</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.PCDirectory</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.PCEmployee</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.PCFile</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.PCPerson</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.PersistenceAware</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.PersistentMapHolder</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.ProxiesPC</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.RecursivelyEmbeddedPC</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest1</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest2</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest3</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest4</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.RuntimeTest5</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.SCOTest</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.SecondaryTab</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.SequenceAssigned</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.SequenceAssigned2</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.SequenceAssigned3</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.SingleIdByte</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.SingleIdChar</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.SingleIdInt</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.SingleIdLong</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.SingleIdShort</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.SingleIdString</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.SingleIdWrapper</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.ValueStrategyPC</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.TestEJBLobs$Inner</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.TestEJBLobs$Inner2</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.TestStaticInnerClasses$Inner</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.TestEJBNoPersistentFields$Nholder</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.TestEJBNoPersistentFields$NoPersistentFieldsPC</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.ModRuntimeTest1</class>\n+\t\t<class>org.apache.openjpa.persistence.kernel.common.apps.ModRuntimeTest2</class>\n+\t</persistence-unit>\n+</persistence>"},{"sha":"4ad1096e65f59fbe995d30179761e032465137c2","filename":"openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/meta/common/apps/META-INF/persistence.xml","status":"modified","additions":47,"deletions":47,"changes":94,"blob_url":"https://github.com/apache/openjpa/blob/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/meta/common/apps/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/meta/common/apps/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/meta/common/apps/META-INF/persistence.xml?ref=72f4ebcda0e2086c8699580100976a7f8a7d5f8a","patch":"@@ -1,47 +1,47 @@\n-<!--\r\n- Licensed to the Apache Software Foundation (ASF) under one\r\n- or more contributor license agreements.  See the NOTICE file\r\n- distributed with this work for additional information\r\n- regarding copyright ownership.  The ASF licenses this file\r\n- to you under the Apache License, Version 2.0 (the\r\n- \"License\"); you may not use this file except in compliance\r\n- with the License.  You may obtain a copy of the License at\r\n- \r\n- http://www.apache.org/licenses/LICENSE-2.0\r\n- \r\n- Unless required by applicable law or agreed to in writing,\r\n- software distributed under the License is distributed on an\r\n- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- KIND, either express or implied.  See the License for the\r\n- specific language governing permissions and limitations\r\n- under the License.   \r\n--->\r\n-<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\r\n-    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd\" version=\"1.0\">\r\n-\r\n-\t<persistence-unit name=\"TestConv\" transaction-type=\"RESOURCE_LOCAL\">\r\n-\t\t<provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>\r\n-\t\t<class>org.apache.openjpa.persistence.meta.common.apps.ExternalValues</class>\r\n-\t\t<class>org.apache.openjpa.persistence.meta.common.apps.FieldOrderPC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.meta.common.apps.FieldOrderPCSubclass</class>\r\n-\t\t<class>org.apache.openjpa.persistence.meta.common.apps.MetaTest1</class>\r\n-\t\t<class>org.apache.openjpa.persistence.meta.common.apps.MetaTest1$Inner</class>\r\n-\t\t<class>org.apache.openjpa.persistence.meta.common.apps.MetaTest2</class>\r\n-\t\t<class>org.apache.openjpa.persistence.meta.common.apps.MetaTest3</class>\r\n-\t\t<class>org.apache.openjpa.persistence.meta.common.apps.MetaTest4</class>\r\n-\t\t<class>org.apache.openjpa.persistence.meta.common.apps.MetaTest5</class>\r\n-\t\t<class>org.apache.openjpa.persistence.meta.common.apps.MetaTest6</class>\r\n-\t\t<class>org.apache.openjpa.persistence.meta.common.apps.NonPersistentFieldsPC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.meta.common.apps.OrderByPC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.meta.common.apps.OrderByPCRel</class>\r\n-\t\t<class>org.apache.openjpa.persistence.meta.common.apps.OrderByPCRelSub</class>\r\n-\t\t<class>org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1</class>\r\n-\t\t<class>org.apache.openjpa.persistence.meta.common.apps.RuntimeTest2</class>\r\n-\t\t<class>org.apache.openjpa.persistence.meta.common.apps.RuntimeTest3</class>\r\n-\t\t<class>org.apache.openjpa.persistence.meta.common.apps.SequenceAssigned</class>\r\n-\t\t<class>org.apache.openjpa.persistence.meta.common.apps.SequenceAssigned2</class>\r\n-\t\t<class>org.apache.openjpa.persistence.meta.common.apps.SequenceAssigned3</class>\r\n-\t\t<class>org.apache.openjpa.persistence.meta.common.apps.ValueStrategyPC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.meta.common.apps.TransactionalClassPC</class>\r\n-\t</persistence-unit>\r\n-</persistence>\r\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+ \n+ http://www.apache.org/licenses/LICENSE-2.0\n+ \n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.   \n+-->\n+<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\n+    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd\" version=\"1.0\">\n+\n+\t<persistence-unit name=\"TestConv\" transaction-type=\"RESOURCE_LOCAL\">\n+\t\t<provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>\n+\t\t<class>org.apache.openjpa.persistence.meta.common.apps.ExternalValues</class>\n+\t\t<class>org.apache.openjpa.persistence.meta.common.apps.FieldOrderPC</class>\n+\t\t<class>org.apache.openjpa.persistence.meta.common.apps.FieldOrderPCSubclass</class>\n+\t\t<class>org.apache.openjpa.persistence.meta.common.apps.MetaTest1</class>\n+\t\t<class>org.apache.openjpa.persistence.meta.common.apps.MetaTest1$Inner</class>\n+\t\t<class>org.apache.openjpa.persistence.meta.common.apps.MetaTest2</class>\n+\t\t<class>org.apache.openjpa.persistence.meta.common.apps.MetaTest3</class>\n+\t\t<class>org.apache.openjpa.persistence.meta.common.apps.MetaTest4</class>\n+\t\t<class>org.apache.openjpa.persistence.meta.common.apps.MetaTest5</class>\n+\t\t<class>org.apache.openjpa.persistence.meta.common.apps.MetaTest6</class>\n+\t\t<class>org.apache.openjpa.persistence.meta.common.apps.NonPersistentFieldsPC</class>\n+\t\t<class>org.apache.openjpa.persistence.meta.common.apps.OrderByPC</class>\n+\t\t<class>org.apache.openjpa.persistence.meta.common.apps.OrderByPCRel</class>\n+\t\t<class>org.apache.openjpa.persistence.meta.common.apps.OrderByPCRelSub</class>\n+\t\t<class>org.apache.openjpa.persistence.meta.common.apps.RuntimeTest1</class>\n+\t\t<class>org.apache.openjpa.persistence.meta.common.apps.RuntimeTest2</class>\n+\t\t<class>org.apache.openjpa.persistence.meta.common.apps.RuntimeTest3</class>\n+\t\t<class>org.apache.openjpa.persistence.meta.common.apps.SequenceAssigned</class>\n+\t\t<class>org.apache.openjpa.persistence.meta.common.apps.SequenceAssigned2</class>\n+\t\t<class>org.apache.openjpa.persistence.meta.common.apps.SequenceAssigned3</class>\n+\t\t<class>org.apache.openjpa.persistence.meta.common.apps.ValueStrategyPC</class>\n+\t\t<class>org.apache.openjpa.persistence.meta.common.apps.TransactionalClassPC</class>\n+\t</persistence-unit>\n+</persistence>"},{"sha":"7d71ad1c2d71b2d8d12b10b3211b493e096bea47","filename":"openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/query/common/apps/META-INF/persistence.xml","status":"modified","additions":49,"deletions":49,"changes":98,"blob_url":"https://github.com/apache/openjpa/blob/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/query/common/apps/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/query/common/apps/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/query/common/apps/META-INF/persistence.xml?ref=72f4ebcda0e2086c8699580100976a7f8a7d5f8a","patch":"@@ -1,49 +1,49 @@\n-<!--\r\n- Licensed to the Apache Software Foundation (ASF) under one\r\n- or more contributor license agreements.  See the NOTICE file\r\n- distributed with this work for additional information\r\n- regarding copyright ownership.  The ASF licenses this file\r\n- to you under the Apache License, Version 2.0 (the\r\n- \"License\"); you may not use this file except in compliance\r\n- with the License.  You may obtain a copy of the License at\r\n- \r\n- http://www.apache.org/licenses/LICENSE-2.0\r\n- \r\n- Unless required by applicable law or agreed to in writing,\r\n- software distributed under the License is distributed on an\r\n- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- KIND, either express or implied.  See the License for the\r\n- specific language governing permissions and limitations\r\n- under the License.   \r\n--->\r\n-<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\r\n-    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd\" version=\"1.0\">\r\n-\t<persistence-unit name=\"TestConv\" transaction-type=\"RESOURCE_LOCAL\">\r\n-\t\t<provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>\r\n-        <class>org.apache.openjpa.persistence.query.common.apps.Entity1</class>\r\n-        <class>org.apache.openjpa.persistence.query.common.apps.Entity2</class>\r\n-\t\t<class>org.apache.openjpa.persistence.query.common.apps.RuntimeTest1</class>\r\n-\t\t<class>org.apache.openjpa.persistence.query.common.apps.RuntimeTest2</class>\r\n-\t\t<class>org.apache.openjpa.persistence.query.common.apps.RuntimeTest3</class>\r\n-\t\t<class>org.apache.openjpa.persistence.query.common.apps.RuntimeTest4</class>\r\n-\t\t<class>org.apache.openjpa.persistence.query.common.apps.RuntimeTest5</class>\r\n-\t\t<class>org.apache.openjpa.persistence.query.common.apps.SimpleAppIdPC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.query.common.apps.CompoundAppIdPC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.query.common.apps.QueryTest1</class>\r\n-\t\t<class>org.apache.openjpa.persistence.query.common.apps.QueryTest2</class>\r\n-\t\t<class>org.apache.openjpa.persistence.query.common.apps.QueryTest3</class>\r\n-\t\t<class>org.apache.openjpa.persistence.query.common.apps.QueryTest4</class>\r\n-\t\t<class>org.apache.openjpa.persistence.query.common.apps.CompoundAppIdPC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.query.common.apps.ComplexA</class>\r\n-\t\t<class>org.apache.openjpa.persistence.query.common.apps.ComplexB</class>\r\n-\t\t<class>org.apache.openjpa.persistence.query.common.apps.ComplexC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.query.common.apps.ComplexD</class>\r\n-\t\t<class>org.apache.openjpa.persistence.query.common.apps.ComplexE</class>\r\n-\t\t<class>org.apache.openjpa.persistence.query.common.apps.ComplexF</class>\r\n-\t\t<class>org.apache.openjpa.persistence.query.common.apps.ComplexG</class>\r\n-\t\t<class>org.apache.openjpa.persistence.query.common.apps.CircularFKPC</class>\r\n-\t\t<class>org.apache.openjpa.persistence.query.common.apps.CircularFKPC2</class>\r\n-\t\t<class>org.apache.openjpa.persistence.query.common.apps.ModRuntimeTest1</class>\r\n-\t\t<class>org.apache.openjpa.persistence.query.common.apps.ModRuntimeTest2</class>\r\n-\t</persistence-unit>\r\n-</persistence>\r\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+ \n+ http://www.apache.org/licenses/LICENSE-2.0\n+ \n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.   \n+-->\n+<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\n+    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd\" version=\"1.0\">\n+\t<persistence-unit name=\"TestConv\" transaction-type=\"RESOURCE_LOCAL\">\n+\t\t<provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>\n+        <class>org.apache.openjpa.persistence.query.common.apps.Entity1</class>\n+        <class>org.apache.openjpa.persistence.query.common.apps.Entity2</class>\n+\t\t<class>org.apache.openjpa.persistence.query.common.apps.RuntimeTest1</class>\n+\t\t<class>org.apache.openjpa.persistence.query.common.apps.RuntimeTest2</class>\n+\t\t<class>org.apache.openjpa.persistence.query.common.apps.RuntimeTest3</class>\n+\t\t<class>org.apache.openjpa.persistence.query.common.apps.RuntimeTest4</class>\n+\t\t<class>org.apache.openjpa.persistence.query.common.apps.RuntimeTest5</class>\n+\t\t<class>org.apache.openjpa.persistence.query.common.apps.SimpleAppIdPC</class>\n+\t\t<class>org.apache.openjpa.persistence.query.common.apps.CompoundAppIdPC</class>\n+\t\t<class>org.apache.openjpa.persistence.query.common.apps.QueryTest1</class>\n+\t\t<class>org.apache.openjpa.persistence.query.common.apps.QueryTest2</class>\n+\t\t<class>org.apache.openjpa.persistence.query.common.apps.QueryTest3</class>\n+\t\t<class>org.apache.openjpa.persistence.query.common.apps.QueryTest4</class>\n+\t\t<class>org.apache.openjpa.persistence.query.common.apps.CompoundAppIdPC</class>\n+\t\t<class>org.apache.openjpa.persistence.query.common.apps.ComplexA</class>\n+\t\t<class>org.apache.openjpa.persistence.query.common.apps.ComplexB</class>\n+\t\t<class>org.apache.openjpa.persistence.query.common.apps.ComplexC</class>\n+\t\t<class>org.apache.openjpa.persistence.query.common.apps.ComplexD</class>\n+\t\t<class>org.apache.openjpa.persistence.query.common.apps.ComplexE</class>\n+\t\t<class>org.apache.openjpa.persistence.query.common.apps.ComplexF</class>\n+\t\t<class>org.apache.openjpa.persistence.query.common.apps.ComplexG</class>\n+\t\t<class>org.apache.openjpa.persistence.query.common.apps.CircularFKPC</class>\n+\t\t<class>org.apache.openjpa.persistence.query.common.apps.CircularFKPC2</class>\n+\t\t<class>org.apache.openjpa.persistence.query.common.apps.ModRuntimeTest1</class>\n+\t\t<class>org.apache.openjpa.persistence.query.common.apps.ModRuntimeTest2</class>\n+\t</persistence-unit>\n+</persistence>"},{"sha":"c687dc01998e7aa52e8f72ca1eb6f0135f8b66dc","filename":"openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/xml/persistence-without-xsd.xml","status":"modified","additions":27,"deletions":27,"changes":54,"blob_url":"https://github.com/apache/openjpa/blob/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/xml/persistence-without-xsd.xml","raw_url":"https://github.com/apache/openjpa/raw/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/xml/persistence-without-xsd.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/xml/persistence-without-xsd.xml?ref=72f4ebcda0e2086c8699580100976a7f8a7d5f8a","patch":"@@ -1,28 +1,28 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n-<!--\r\n- Licensed to the Apache Software Foundation (ASF) under one\r\n- or more contributor license agreements.  See the NOTICE file\r\n- distributed with this work for additional information\r\n- regarding copyright ownership.  The ASF licenses this file\r\n- to you under the Apache License, Version 2.0 (the\r\n- \"License\"); you may not use this file except in compliance\r\n- with the License.  You may obtain a copy of the License at\r\n-\r\n- http://www.apache.org/licenses/LICENSE-2.0\r\n-\r\n- Unless required by applicable law or agreed to in writing,\r\n- software distributed under the License is distributed on an\r\n- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- KIND, either express or implied.  See the License for the\r\n- specific language governing permissions and limitations\r\n- under the License.\r\n--->\r\n-<persistence>\r\n-    <persistence-unit name=\"incorrect-ordering-and-no-xsd\">\r\n-        <properties>\r\n-            <property name=\"openjpa.Id\" value=\"incorrect-ordering-pu\"/>\r\n-        </properties>\r\n-        <class>org.apache.openjpa.persistence.xml.SimpleXmlEntity</class>\r\n-        <provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>\r\n-    </persistence-unit>\r\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+\n+ http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.\n+-->\n+<persistence>\n+    <persistence-unit name=\"incorrect-ordering-and-no-xsd\">\n+        <properties>\n+            <property name=\"openjpa.Id\" value=\"incorrect-ordering-pu\"/>\n+        </properties>\n+        <class>org.apache.openjpa.persistence.xml.SimpleXmlEntity</class>\n+        <provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>\n+    </persistence-unit>\n </persistence>\n\\ No newline at end of file"},{"sha":"2748816777514887ce60bc01d57499637b920914","filename":"openjpa-project/assembly.xml","status":"modified","additions":102,"deletions":102,"changes":204,"blob_url":"https://github.com/apache/openjpa/blob/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-project/assembly.xml","raw_url":"https://github.com/apache/openjpa/raw/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-project/assembly.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/assembly.xml?ref=72f4ebcda0e2086c8699580100976a7f8a7d5f8a","patch":"@@ -1,102 +1,102 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n-<!--\r\n- Licensed to the Apache Software Foundation (ASF) under one\r\n- or more contributor license agreements.  See the NOTICE file\r\n- distributed with this work for additional information\r\n- regarding copyright ownership.  The ASF licenses this file\r\n- to you under the Apache License, Version 2.0 (the\r\n- \"License\"); you may not use this file except in compliance\r\n- with the License.  You may obtain a copy of the License at\r\n- \r\n- http://www.apache.org/licenses/LICENSE-2.0\r\n- \r\n- Unless required by applicable law or agreed to in writing,\r\n- software distributed under the License is distributed on an\r\n- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- KIND, either express or implied.  See the License for the\r\n- specific language governing permissions and limitations\r\n- under the License.   \r\n--->\r\n-<assembly>\r\n-    <id>binary</id>\r\n-    <formats>\r\n-        <format>zip</format>\r\n-    </formats>\r\n-    <includeBaseDirectory>true</includeBaseDirectory>\r\n-    <fileSets>\r\n-        <fileSet>\r\n-            <directory>target/aggregate</directory>\r\n-            <outputDirectory>/</outputDirectory>\r\n-        </fileSet>\r\n-        <fileSet>\r\n-            <includes>\r\n-                <include>README</include>\r\n-                <include>DISCLAIMER</include>\r\n-                <include>LICENSE</include>\r\n-                <include>STATUS</include>\r\n-                <include>NOTICE</include>\r\n-                <include>README.txt</include>\r\n-                <include>DISCLAIMER.txt</include>\r\n-                <include>LICENSE.txt</include>\r\n-                <include>STATUS.txt</include>\r\n-                <include>NOTICE.txt</include>\r\n-                <include>RELEASE-NOTES</include>\r\n-                <include>RELEASE-NOTES.html</include>\r\n-                <include>RELEASE-NOTES.txt</include>\r\n-                <include>CHANGES</include>\r\n-                <include>CHANGES.txt</include>\r\n-            </includes>\r\n-        </fileSet>\r\n-        <!--\r\n-        <fileSet>\r\n-            <directory>licenses</directory>\r\n-            <outputDirectory>/lib</outputDirectory>\r\n-            <includes>\r\n-                <include>*</include>\r\n-            </includes>\r\n-        </fileSet>\r\n-        <fileSet>\r\n-            <directory>target/examples</directory>\r\n-            <outputDirectory>/examples</outputDirectory>\r\n-        </fileSet>\r\n-        -->\r\n-        <fileSet>\r\n-            <directory>target/manual</directory>\r\n-            <outputDirectory>docs/manual</outputDirectory>\r\n-        </fileSet>\r\n-        <fileSet>\r\n-            <directory>../target/site/apidocs</directory>\r\n-            <outputDirectory>docs/javadoc</outputDirectory>\r\n-        </fileSet>\r\n-        <fileSet>\r\n-            <directory>../openjpa-examples/src/main/java</directory>\r\n-            <outputDirectory>examples</outputDirectory>\r\n-        </fileSet>\r\n-    </fileSets>\r\n-    <dependencySets>\r\n-        <dependencySet>\r\n-            <outputDirectory>/</outputDirectory>\r\n-            <unpack>false</unpack>\r\n-            <scope>runtime</scope>\r\n-            <includes>\r\n-                <include>org.apache.openjpa:openjpa</include>\r\n-            </includes>\r\n-        </dependencySet>\r\n-        <dependencySet>\r\n-            <outputDirectory>/lib</outputDirectory>\r\n-            <unpack>false</unpack>\r\n-            <scope>runtime</scope>\r\n-            <includes>\r\n-                <include>net.sourceforge.serp:serp</include>\r\n-                <include>org.apache.derby:derby</include>\r\n-\r\n-                <include>commons-lang:commons-lang</include>\r\n-                <include>commons-collections:commons-collections</include>\r\n-                <include>commons-pool:commons-pool</include>\r\n-\r\n-                <include>org.apache.geronimo.specs:geronimo-jta_1.1_spec</include>\r\n-                <include>org.apache.geronimo.specs:geronimo-jpa_3.0_spec</include>\r\n-            </includes>\r\n-        </dependencySet>\r\n-    </dependencySets>\r\n-</assembly>\r\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+ \n+ http://www.apache.org/licenses/LICENSE-2.0\n+ \n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.   \n+-->\n+<assembly>\n+    <id>binary</id>\n+    <formats>\n+        <format>zip</format>\n+    </formats>\n+    <includeBaseDirectory>true</includeBaseDirectory>\n+    <fileSets>\n+        <fileSet>\n+            <directory>target/aggregate</directory>\n+            <outputDirectory>/</outputDirectory>\n+        </fileSet>\n+        <fileSet>\n+            <includes>\n+                <include>README</include>\n+                <include>DISCLAIMER</include>\n+                <include>LICENSE</include>\n+                <include>STATUS</include>\n+                <include>NOTICE</include>\n+                <include>README.txt</include>\n+                <include>DISCLAIMER.txt</include>\n+                <include>LICENSE.txt</include>\n+                <include>STATUS.txt</include>\n+                <include>NOTICE.txt</include>\n+                <include>RELEASE-NOTES</include>\n+                <include>RELEASE-NOTES.html</include>\n+                <include>RELEASE-NOTES.txt</include>\n+                <include>CHANGES</include>\n+                <include>CHANGES.txt</include>\n+            </includes>\n+        </fileSet>\n+        <!--\n+        <fileSet>\n+            <directory>licenses</directory>\n+            <outputDirectory>/lib</outputDirectory>\n+            <includes>\n+                <include>*</include>\n+            </includes>\n+        </fileSet>\n+        <fileSet>\n+            <directory>target/examples</directory>\n+            <outputDirectory>/examples</outputDirectory>\n+        </fileSet>\n+        -->\n+        <fileSet>\n+            <directory>target/manual</directory>\n+            <outputDirectory>docs/manual</outputDirectory>\n+        </fileSet>\n+        <fileSet>\n+            <directory>../target/site/apidocs</directory>\n+            <outputDirectory>docs/javadoc</outputDirectory>\n+        </fileSet>\n+        <fileSet>\n+            <directory>../openjpa-examples/src/main/java</directory>\n+            <outputDirectory>examples</outputDirectory>\n+        </fileSet>\n+    </fileSets>\n+    <dependencySets>\n+        <dependencySet>\n+            <outputDirectory>/</outputDirectory>\n+            <unpack>false</unpack>\n+            <scope>runtime</scope>\n+            <includes>\n+                <include>org.apache.openjpa:openjpa</include>\n+            </includes>\n+        </dependencySet>\n+        <dependencySet>\n+            <outputDirectory>/lib</outputDirectory>\n+            <unpack>false</unpack>\n+            <scope>runtime</scope>\n+            <includes>\n+                <include>net.sourceforge.serp:serp</include>\n+                <include>org.apache.derby:derby</include>\n+\n+                <include>commons-lang:commons-lang</include>\n+                <include>commons-collections:commons-collections</include>\n+                <include>commons-pool:commons-pool</include>\n+\n+                <include>org.apache.geronimo.specs:geronimo-jta_1.1_spec</include>\n+                <include>org.apache.geronimo.specs:geronimo-jpa_3.0_spec</include>\n+            </includes>\n+        </dependencySet>\n+    </dependencySets>\n+</assembly>"},{"sha":"65ecc96137417e3eadb78a0b31c49cb0b794084a","filename":"openjpa-project/src/doc/manual/jpa_overview_pc.xml","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-project/src/doc/manual/jpa_overview_pc.xml","raw_url":"https://github.com/apache/openjpa/raw/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-project/src/doc/manual/jpa_overview_pc.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_pc.xml?ref=72f4ebcda0e2086c8699580100976a7f8a7d5f8a","patch":"@@ -65,11 +65,11 @@ an entity by its persistent identity (covered later in this chapter), or use a\n An instance of an embeddable class, on the other hand, is only stored as part of\n a separate entity. Embeddable instances have no persistent identity, and are\n never returned directly from the <classname>EntityManager</classname> or from a\n-<classname>Query</classname> unless the query uses a projection on owning class \r\n-to the embedded instance. For example, if <classname>Address</classname> is \r\n-embedded in <classname>Company</classname>, then \r\n-a query <classname>\"SELECT a FROM Address a\"</classname> will never return the \r\n-embedded <classname>Address</classname> of <classname>Company</classname>; \r\n+<classname>Query</classname> unless the query uses a projection on owning class \n+to the embedded instance. For example, if <classname>Address</classname> is \n+embedded in <classname>Company</classname>, then \n+a query <classname>\"SELECT a FROM Address a\"</classname> will never return the \n+embedded <classname>Address</classname> of <classname>Company</classname>; \n but a projection query such as\n <classname>\"SELECT c.address FROM Company c\"</classname> will.\n     </para>"},{"sha":"49324544c4dd4de1c35dbe7a8df6bf85301cc98a","filename":"openjpa-project/src/doc/manual/manual.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-project/src/doc/manual/manual.xml","raw_url":"https://github.com/apache/openjpa/raw/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-project/src/doc/manual/manual.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/manual.xml?ref=72f4ebcda0e2086c8699580100976a7f8a7d5f8a","patch":"@@ -46,7 +46,7 @@\n     <!ENTITY ref_guide_deploy.xml SYSTEM \"ref_guide_deploy.xml\">\n     <!ENTITY ref_guide_runtime.xml SYSTEM \"ref_guide_runtime.xml\">\n     <!ENTITY ref_guide_caching.xml SYSTEM \"ref_guide_caching.xml\">\n-    <!ENTITY ref_guide_remote.xml SYSTEM \"ref_guide_remote.xml\">\r\n+    <!ENTITY ref_guide_remote.xml SYSTEM \"ref_guide_remote.xml\">\n     <!ENTITY ref_guide_slice.xml SYSTEM \"ref_guide_slice.xml\">\n     <!ENTITY ref_guide_integration.xml SYSTEM \"ref_guide_integration.xml\">\n     <!ENTITY ref_guide_optimization.xml SYSTEM \"ref_guide_optimization.xml\">\n@@ -101,7 +101,7 @@\n         &ref_guide_deploy.xml;\n         &ref_guide_runtime.xml;\n         &ref_guide_caching.xml;\n-        &ref_guide_remote.xml;\r\n+        &ref_guide_remote.xml;\n         &ref_guide_slice.xml;\n         &ref_guide_integration.xml;\n         &ref_guide_optimization.xml;"},{"sha":"5c0ca295b0bfc4a9e7e8b34390fa977e5d3a0f10","filename":"openjpa-project/src/doc/manual/ref_guide_mapping.xml","status":"modified","additions":3501,"deletions":3501,"changes":7002,"blob_url":"https://github.com/apache/openjpa/blob/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-project/src/doc/manual/ref_guide_mapping.xml","raw_url":"https://github.com/apache/openjpa/raw/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-project/src/doc/manual/ref_guide_mapping.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_mapping.xml?ref=72f4ebcda0e2086c8699580100976a7f8a7d5f8a"},{"sha":"e222cb2521128567bddf0c75e9061adf5b87eb07","filename":"openjpa-project/src/doc/manual/ref_guide_slice.xml","status":"modified","additions":542,"deletions":542,"changes":1084,"blob_url":"https://github.com/apache/openjpa/blob/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-project/src/doc/manual/ref_guide_slice.xml","raw_url":"https://github.com/apache/openjpa/raw/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-project/src/doc/manual/ref_guide_slice.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_slice.xml?ref=72f4ebcda0e2086c8699580100976a7f8a7d5f8a","patch":"@@ -1,543 +1,543 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n-<!--\r\n- Licensed to the Apache Software Foundation (ASF) under one\r\n- or more contributor license agreements.  See the NOTICE file\r\n- distributed with this work for additional information\r\n- regarding copyright ownership.  The ASF licenses this file\r\n- to you under the Apache License, Version 2.0 (the\r\n- \"License\"); you may not use this file except in compliance\r\n- with the License.  You may obtain a copy of the License at\r\n- \r\n- http://www.apache.org/licenses/LICENSE-2.0\r\n- \r\n- Unless required by applicable law or agreed to in writing,\r\n- software distributed under the License is distributed on an\r\n- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- KIND, either express or implied.  See the License for the\r\n- specific language governing permissions and limitations\r\n- under the License.   \r\n--->\r\n-<chapter id=\"ref_guide_slice\">\r\n-  <title>\r\n-    Distributed Persistence\r\n-  </title>\r\n-  <para>\r\n-  The standard JPA runtime environment works with a <emphasis>single</emphasis>\r\n-  database instance. OpenJPA can be extended via plug-in to work with \r\n-  multiple databases within the same transaction without any change to the \r\n-  existing application. This capability of OpenJPA for distributed \r\n-  database environment is called <emphasis>Slice</emphasis> and is explained in \r\n-  the following sections.\r\n-  </para>\r\n-  \r\n-  <section id=\"slice_overview\">\r\n-    <title>Overview</title>\r\n-    <para>\r\n-    Enterprise applications are increasingly deployed for distributed database\r\n-    environments. The reasons for distributed, often horizontally-partitioned \r\n-    database environment can be to counter massive data growth, to \r\n-    support multiple external clients on a hosted platform or many other \r\n-    practical scenarios that can benefit from data partitioning.\r\n-    </para>\r\n-    \r\n-    <para>\r\n-    Any JPA-based user application has to address serious technical and conceptual\r\n-    challenges to directly interact with a set of physical databases\r\n-    within a single transaction. \r\n-    Slice encapsulates the complexity of distributed database environment \r\n-    via the abstraction of <emphasis>virtual</emphasis> database which internally \r\n-    manages multiple physical databases. We refer each physical database instance \r\n-    as <emphasis>slice</emphasis>. \r\n-    <emphasis>Virtualization</emphasis> of distributed databases \r\n-    makes OpenJPA object management kernel and \r\n-    the user application to work in the same way as in the case of a single physical \r\n-    database.\r\n-    </para>\r\n-  </section>\r\n-  \r\n-    <section id=\"Features and Limitations\">\r\n-       <title>Salient Features</title>\r\n-         <section><title>Transparency</title>\r\n-            <para>\r\n-              The existing application or the persistent domain featureSelection requires \r\n-              <emphasis>no change</emphasis> to upgrade from a single database \r\n-              to a distributed database environment. \r\n-            </para>\r\n-         </section>\r\n-         \r\n-         <section><title>Custom Distribution Policy</title>\r\n-            <para>\r\n-             User application decides how the newly persistent instances be \r\n-             distributed across the database slices. The data\r\n-             distribution policy across the slices may be based on the attribute \r\n-             of the data itself. For example, all Customer whose first name begins with\r\n-             character 'A' to 'M' will be stored in one slice while names\r\n-             beginning with 'N' to 'Z' will be stored in another slice. \r\n-             </para>\r\n-             <para>\r\n-             This custom data distribution policy is specified by implementing  \r\n-             <classname>org.apache.openjpa.slice.DistributionPolicy</classname>\r\n-             interface by the user application.\r\n-             </para>\r\n-          \r\n-             <para> \r\n-             Slice tracks the original database for existing instances. When\r\n-             an application issues a query, the resultant instances can be loaded \r\n-             from different slices. This tracking is important as subsequent\r\n-             update to any of these instances is committed to the appropriate \r\n-             original database slice. \r\n-            </para>\r\n-            \r\n-            <note>\r\n-            <para>\r\n-            You can find the original slice of an instance <code>pc</code> by \r\n-            the static utility method  \r\n-            <methodname>SlicePersistence.getSlice(pc)</methodname>.\r\n-            This method returns the slice identifier string associated with the\r\n-            given <emphasis>managed</emphasis> instance. If the instance is not\r\n-            being managed then the method return null because any unmanaged or\r\n-            detached instance is not associated with any slice. \r\n-            </para>\r\n-            </note>\r\n-            \r\n-            <para>\r\n-            <warning>Currently, there is no provision for migrating an \r\n-            existing instance from one slice to another.\r\n-            </warning>\r\n-            </para>\r\n-         </section>\r\n-         \r\n-         <section><title>Heterogeneous Database</title>\r\n-            <para> \r\n-              Each slice can be configured independently with its own JDBC \r\n-              driver and other connection parameters. Hence the target database \r\n-              environment can constitute of heterogeneous databases. \r\n-            </para>\r\n-        </section>\r\n-        \r\n-        <section><title>Parallel Execution</title>\r\n-            <para> \r\n-              All database operations such as query, commit or flush operates\r\n-              in parallel across the database slices. The execution threading\r\n-              policy is configurable. \r\n-            </para>\r\n-         </section>\r\n-         \r\n-         <section><title>Distributed Query</title>\r\n-            <para>\r\n-            The queries are executed across all slices and the results are\r\n-            merged into a single list. The query result that includes \r\n-            <code>ORDER BY</code> clause are sorted correctly by merging \r\n-            results from each individual slice. \r\n-            </para>\r\n-            The queries that specify an aggregate projection such as \r\n-            <code>COUNT()</code>, <code>MAX()</code>, <code>MIN()</code> \r\n-            and <code>SUM()</code>\r\n-            are correctly evaluated <emphasis>only if</emphasis> they \r\n-            return a single result.\r\n-            <para>\r\n-            </para>\r\n-            <para>\r\n-            <warning>\r\n-            The aggregate operation <code>AVG()</code> is not supported.\r\n-            </warning>\r\n-            </para>\r\n-            \r\n-         </section>\r\n-         \r\n-         <section><title>Targeted Query</title>\r\n-            <para>\r\n-            You can target the query only to a subset of slices rather than\r\n-            all slices by setting a <emphasis>hint</emphasis>. The hint key\r\n-            <code>openjpa.hint.slice.Target</code> is set on any query and \r\n-            hint value is\r\n-            comma-separated list of slice identifiers. The following \r\n-            example shows how to target a query only to slice <code>\"One\"</code>\r\n-                          \r\n-            <programlisting>\r\n-              <![CDATA[EntityManager em = ...;\r\n-              em.getTransaction().begin();\r\n-              String hint = \"openjpa.hint.slice.Target\";\r\n-              Query query = em.createQuery(\"SELECT p FROM PObject\").setHint(hint, \"One\");\r\n-              List result = query.getResultList();\r\n-              // verify that each instance is originaing from the given slice\r\n-              for (Object pc : result) {\r\n-                 String sliceOrigin = SlicePersistence.getSlice(pc);\r\n-                 assertTrue (\"One\", sliceOrigin);\r\n-              }\r\n-              ]]>\r\n-            </programlisting> \r\n-            </para>\r\n-         </section>\r\n-         \r\n-         \r\n-         <section><title>Distributed Transaction</title>\r\n-            <para> \r\n-            The database slices participate in a global transaction provided\r\n-            each slice is configured with a XA-compliant JDBC driver, even\r\n-            when the persistence unit is configured for <code>RESOURCE_LOCAL</code>\r\n-            transaction.\r\n-            </para>\r\n-            <para>\r\n-            <warning>\r\n-            If any of the configured slices is not XA-compliant <emphasis>and</emphasis> \r\n-            the persistence unit is configured for <code>RESOURCE_LOCAL</code>\r\n-            transaction then each slice is committed without any two-phase\r\n-            commit protocol. If commit on any slice fails, then atomic nature of\r\n-            the transaction is not ensured.\r\n-            </warning>\r\n-            </para>\r\n-          </section>\r\n-   \r\n-    \r\n-    \r\n-        \r\n-         <section id=\"collocation_constraint\"><title>Collocation Constraint</title>\r\n-            <para> \r\n-            No relationship can exist across database slices. In O-R mapping parlance,\r\n-            this condition translates to the limitation that the closure of an object graph must be \r\n-            <emphasis>collocated</emphasis> in the same database.\r\n-            For example, consider a domain featureSelection where Person relates to Adress.\r\n-            Person X refers to Address A while Person Y refers to Address B. \r\n-            Collocation Constraint means that <emphasis>both</emphasis> X and A \r\n-            must be stored in the same\r\n-            database slice. Similarly Y and B must be stored in a single slice.\r\n-            </para>\r\n-            <para>\r\n-            Slice, however, helps to maintain collocation constraint automatically.\r\n-            The instances in the closure set of any newly persistent instance \r\n-            reachable via cascaded relationship is stored in the same slice.\r\n-            The user-defined distribution policy requires to supply the slice \r\n-            for the root instance only.\r\n-            </para>\r\n-         </section>\r\n-    </section>\r\n-  \r\n-  <section id=\"slice_configuration\">\r\n-    <title>Usage</title>\r\n-    <para>\r\n-     Slice is activated via the following property settings:\r\n-    </para>\r\n-    <section>\r\n-      <title>How to activate Slice Runtime?</title>\r\n-      <para>\r\n-       The basic configuration property is \r\n-       <programlisting> \r\n-        <![CDATA[ <property name=\"openjpa.BrokerFactory\" value=\"slice\"/>]]>\r\n-       </programlisting> \r\n-       This critical configuration activates a specialized factory class aliased\r\n-       as <code>slice</code> to create object management kernel that\r\n-       can work against multiple databases.  \r\n-      </para>\r\n-    </section> \r\n-    \r\n-    <section>\r\n-      <title>How to configure each database slice?</title>\r\n-      <para>\r\n-      Each database slice is identified by a logical name unique within a\r\n-      persistent unit. The list of the slices is specified by \r\n-      <code>openjpa.slice.Names</code> property.\r\n-      For example, specify three slices named <code>\"One\"</code>, \r\n-      <code>\"Two\"</code> and <code>\"Three\"</code> as follows:\r\n-      <programlisting>\r\n-      <![CDATA[ <property name=\"openjpa.slice.Names\" value=\"One, Two, Three\"/>]]>\r\n-      </programlisting>\r\n-      </para>\r\n-      <para>\r\n-      This property is not mandatory. If this property is not specified then\r\n-      the configuration is scanned for logical slice names. Any property\r\n-      <code>\"abc\"</code> of the form <code>openjpa.slice.XYZ.abc</code> will \r\n-      register a slice with logical\r\n-      name <code>\"XYZ\"</code>.\r\n-      </para>\r\n-      <para>\r\n-      The order of the names is significant when no <code>openjpa.slice.Master</code> \r\n-      property is not specified. Then the persistence unit is scanned to find\r\n-      all configured slice names and they are ordered alphabetically.  \r\n-      </para>\r\n-      \r\n-      <para>\r\n-       Each database slice properties can be configured independently. \r\n-       For example, the\r\n-       following configuration will register two slices with logical name \r\n-       <code>One</code> and <code>Two</code>.\r\n-       <programlisting> \r\n-        <![CDATA[<property name=\"openjpa.slice.One.ConnectionURL\" value=\"jdbc:mysql:localhost//slice1\"/>\r\n-        <property name=\"openjpa.slice.Two.ConnectionURL\" value=\"jdbc:mysql:localhost//slice2\"/>]]>\r\n-       </programlisting> \r\n-      </para>\r\n-      \r\n-      <para>\r\n-       Any OpenJPA specific property can be configured per slice basis. \r\n-       For example, the following configuration will use two different JDBC \r\n-       drivers for slice <code>One</code> and <code>Two</code>.\r\n-       <programlisting> \r\n-        <![CDATA[<property name=\"openjpa.slice.One.ConnectionDriverName\" value=\"com.mysql.jdbc.Driver\"/>\r\n-        <property name=\"openjpa.slice.Two.ConnectionDriverName\" value=\"com.mysql.jdbc.jdbc2.optional.MysqlXADataSource\"/>]]>\r\n-       </programlisting> \r\n-      </para>\r\n-      \r\n-      <para>\r\n-        Any property if unspecified for a particular slice will be defaulted by\r\n-        corresponding OpenJPA property. For example, consider following three slices\r\n-        <programlisting> \r\n-         <![CDATA[<property name=\"openjpa.slice.One.ConnectionURL\"          value=\"jdbc:mysql:localhost//slice1\"/>\r\n-         <property name=\"openjpa.slice.Two.ConnectionURL\"          value=\"jdbc:mysql:localhost//slice2\"/>\r\n-         <property name=\"openjpa.slice.Three.ConnectionURL\"        value=\"jdbc:oracle:localhost//slice3\"/>\r\n-\r\n-         <property name=\"openjpa.ConnectionDriverName\"     value=\"com.mysql.jdbc.Driver\"/>\r\n-         <property name=\"openjpa.slice.Three.ConnectionDriverName\" value=\"oracle.jdbc.Driver\"/>]]>\r\n-        </programlisting> \r\n-        In this example, <code>Three</code> will use slice-specific\r\n-        <code>oracle.jdbc.Driver</code> driver while slice\r\n-        <code>One</code> and <code>Two</code> will use\r\n-        the driver <code>com.mysql.jdbc.Driver</code> as \r\n-        specified by <code>openjpa.ConnectionDriverName</code> \r\n-        property value.\r\n-      </para>\r\n-    </section>\r\n-     \r\n-    <section id=\"distribution_policy\">\r\n-       <title>Implement DistributionPolicy interface</title>\r\n-       <para>\r\n-        Slice needs to determine which slice will persist a new instance. \r\n-        The application can only decide this policy (for example, \r\n-        all PurchaseOrders before April 30 goes to slice <code>One</code>,\r\n-        all the rest goes to slice <code>Two</code>). This is why\r\n-        the application has to implement \r\n-        <code>org.apache.openjpa.slice.DistributionPolicy</code> and\r\n-        specify the implementation class in configuration\r\n-        <programlisting> \r\n-         <![CDATA[ <property name=\"openjpa.slice.DistributionPolicy\" value=\"com.acme.foo.MyOptimialDistributionPolicy\"/>]]>\r\n-        </programlisting>\r\n-       </para>\r\n-       \r\n-       <para>\r\n-        The interface <code>org.apache.openjpa.slice.DistributionPolicy</code>\r\n-        is simple with a single method. The complete listing of the\r\n-        documented interface follows:\r\n-       <programlisting> \r\n-       <![CDATA[ \r\n-public interface DistributionPolicy {\r\n-    /**\r\n-     * Gets the name of the slice where a given instance will be stored.\r\n-     *  \r\n-     * @param pc The newly persistent or to-be-merged object. \r\n-     * @param slices name of the configured slices.\r\n-     * @param context persistence context managing the given instance.\r\n-     * \r\n-     * @return identifier of the slice. This name must match one of the\r\n-     * configured slice names. \r\n-     * @see DistributedConfiguration#getSliceNames()\r\n-     */\r\n-    String distribute(Object pc, List<String> slices, Object context);\r\n-}\r\n-]]>\r\n-       </programlisting>\r\n-        </para>\r\n-        \r\n-        <para>\r\n-        While implementing a distribution policy the most important thing to\r\n-        remember is <link linkend=\"collocation_constraint\">collocation constraint</link>.\r\n-        Because Slice can not establish or query any cross-database relationship, all the\r\n-        related instances must be stored in the same database slice. \r\n- \r\n-        Slice can determine the closure of a root object by traversal of \r\n-        cascaded relationships. Hence user-defined policy has to only decide the\r\n-        database for the root instance that is the explicit argument to \r\n-        <methodname>EntityManager.persist()</methodname> call.\r\n-        Slice will ensure that all other related instances that gets persisted by cascade\r\n-        is assigned to the same database slice as that of the root instance.\r\n-        However, the user-defined distribution policy must return the\r\n-        same slice identifier for the instances that are logically related but\r\n-        not cascaded for persist. \r\n-        </para>\r\n-    </section>\r\n-    \r\n-    <section>\r\n-    </section>\r\n-  </section>\r\n-  \r\n-  <title>Configuration Properties</title>\r\n-    <para>\r\n-    The properties to configure Slice can be classified in two broad groups.\r\n-The <emphasis>global</emphasis> properties apply to all the slices, for example,\r\n-the thread pool used to execute the queries in parallel or the transaction \r\n-manager used to coordinate transaction across multiple slices. \r\n-The <emphasis>per-slice</emphasis> properties apply to individual slice, for example,\r\n-the JDBC connection URL of a slice.\r\n-   </para>\r\n-   \r\n-   <section>\r\n-     <title>Global Properties</title>\r\n-     \r\n-     <section>\r\n-        <title>openjpa.slice.DistributionPolicy</title>\r\n-        <para>\r\n-         This <emphasis>mandatory</emphasis> plug-in property determines how newly\r\n-         persistent instances are distributed across individual slices. \r\n-         The value of this property is a fully-qualified class name that implements\r\n-         <ulink url=\"../javadoc/org/apache/openjpa/slice/DistributionPolicy.html\">\r\n-         <classname>org.apache.openjpa.slice.DistributionPolicy</classname>\r\n-         </ulink> interface.\r\n-        </para>\r\n-     </section>\r\n-     \r\n-     <section><title>openjpa.slice.Lenient</title>\r\n-      <para>\r\n-        This boolean plug-in property controls the behavior when one or more slice \r\n-        can not be connected or unavailable for some other reasons.\r\n-        If <code>true</code>, the unreachable slices are ignored. If \r\n-        <code>false</code> then any unreachable slice will raise an exception\r\n-        during startup.\r\n-        </para>\r\n-        <para>\r\n-        By default this value is set to <code>false</code> i.e. all configured\r\n-        slices must be available.\r\n-        </para> \r\n-     </section>\r\n-\r\n-     <section>\r\n-      <title>openjpa.slice.Master</title>\r\n-      <para>\r\n-       This plug-in property can be used to identify the name of the master slice. \r\n-       Master slice is used when a primary key is to be generated from a database sequence. \r\n-       </para>\r\n-       <para>\r\n-        By default the master slice is the first slice in the list of configured slice names. \r\n-       </para>\r\n-       <para>\r\n-              <warning>\r\n-              Currently, there is no provision to use sequence from \r\n-              multiple database slices.\r\n-              </warning>\r\n-       </para>\r\n-     </section>\r\n-    \r\n-     <section>\r\n-        <title>openjpa.slice.Names</title>\r\n-        <para>\r\n-         This plug-in property can be used to register the logical slice names.\r\n-         The value of this property is comma-separated list of slice names. \r\n-         The ordering of the names in this list is \r\n-         <emphasis>significant</emphasis> because \r\n-         <link linkend=\"distribution_policy\">DistributionPolicy</link> receives \r\n-         the input argument of the slice names in the same order.\r\n-        </para>\r\n-        <para>\r\n-        If logical slice names are not registered explicitly via this property,\r\n-        then all logical slice names available in the persistence unit are \r\n-        registered. The ordering of the slice names in this case is alphabetical.  \r\n-        </para>\r\n-        <para>\r\n-        If logical slice names are registered explicitly via this property, then\r\n-        any logical slice that is available in the persistence unit but excluded\r\n-        from this list is ignored. \r\n-        </para>\r\n-     </section>\r\n-    \r\n-     <section>\r\n-        <title>openjpa.slice.ThreadingPolicy</title>\r\n-        <para>\r\n-        This plug-in property determines the nature of thread pool being used \r\n-        for database operations such as query or flush on individual slices. \r\n-        The value of the property is a \r\n-        fully-qualified class name that implements \r\n-        <ulink url=\"http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/ExecutorService.html\">\r\n-        <classname>java.util.concurrent.ExecutorService</classname>\r\n-        </ulink> interface.  \r\n-        Two pre-defined pools can be chosen via their aliases namely \r\n-        <code>fixed</code> or <code>cached</code>.\r\n-        </para>\r\n-        <para>\r\n-        The pre-defined alias <code>cached</code> activates a \r\n-        <ulink url=\"http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/Executors.html#newCachedThreadPool()\">cached thread pool</ulink>. \r\n-        A cached thread pool creates new threads as needed, but will reuse \r\n-        previously constructed threads when they are available. This pool \r\n-        is suitable in scenarios that execute many short-lived asynchronous tasks.\r\n-        The way Slice uses the thread pool to execute database operations is \r\n-        akin to such scenario and hence <code>cached</code> is the default \r\n-        value for this plug-in property.  \r\n-        </para>\r\n-        <para>\r\n-        The <code>fixed</code> alias activates a \r\n-        <ulink url=\"http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/Executors.html#newFixedThreadPool(int)\">fixed thread pool</ulink>.\r\n-        The fixed thread pool can be further parameterized with \r\n-        <code>CorePoolSize</code>, <code>MaximumPoolSize</code>, \r\n-        <code>KeepAliveTime</code> and <code>RejectedExecutionHandler</code>. \r\n-        The meaning of these parameters are described in \r\n-        <ulink url=\"http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/ThreadPoolExecutor.html\">JavaDoc</ulink>.\r\n-        The users can exercise finer control on thread pool behavior via these\r\n-        parameters.\r\n-        By default, the core pool size is <code>10</code>, maximum pool size is\r\n-        also <code>10</code>, keep alive time is <code>60</code> seconds and \r\n-        rejected execution is \r\n-        <ulink url=\"http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/ThreadPoolExecutor.AbortPolicy.html\">aborted</ulink>.\r\n-        </para>\r\n-        <para>\r\n-        Both of the pre-defined aliases can be parameterized with a fully-qualified\r\n-        class name that implements \r\n-        <ulink url=\"http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/ThreadFactory.html\">\r\n-        <classname>java.util.concurrent.ThreadFactory</classname>\r\n-        </ulink> interface.\r\n-        </para>\r\n-     </section>\r\n-      \r\n-     <section>\r\n-      <title>openjpa.slice.TransactionPolicy</title>\r\n-      <para>\r\n-      This plug-in property determines the policy for transaction commit \r\n-      across multiple slices. The value of this property is a fully-qualified \r\n-      class name that implements \r\n-      <ulink url=\"http://java.sun.com/j2ee/sdk_1.3/techdocs/api/javax/transaction/TransactionManager.html\">\r\n-      <classname>javax.transaction.TransactionManager</classname> \r\n-      </ulink> interface. \r\n-      </para>\r\n-      <para>\r\n-      Three pre-defined policies can be chosen\r\n-      by their aliases namely <code>default</code>,\r\n-      <code>xa</code> and <code>jndi</code>. \r\n-      </para>\r\n-      <para>\r\n-      The <code>default</code> policy employs \r\n-      a Transaction Manager that commits or rolls back transaction on individual\r\n-      slices <emphasis>without</emphasis> a two-phase commit protocol. \r\n-      It does <emphasis>not</emphasis>\r\n-      guarantee atomic nature of transaction across all the slices because if\r\n-      one or more slice fails to commit, there is no way to rollback the transaction\r\n-      on other slices that committed successfully.\r\n-      </para>\r\n-      <para>\r\n-      The <code>xa</code> policy employs a Transaction Manager that that commits \r\n-      or rolls back transaction on individual\r\n-      slices using a two-phase commit protocol. The prerequisite to use this scheme\r\n-      is, of course, that all the slices must be configured to use\r\n-      XA-compliant JDBC driver. \r\n-      </para>\r\n-      <para>\r\n-      The <code>jndi</code> policy employs a Transaction Manager by looking up the\r\n-      JNDI context. The prerequisite to use this transaction\r\n-      manager is, of course, that all the slices must be configured to use\r\n-      XA-compliant JDBC driver. \r\n-      <warning>This JNDI based policy is not available currently.</warning>\r\n-      </para>\r\n-    </section>\r\n-   </section>\r\n-   \r\n-   <section>\r\n-     <title>Per-Slice Properties</title>\r\n-     <para>\r\n-     Any OpenJPA property can be configured for each individual slice. The property name\r\n-     is of the form <code>openjpa.slice.[Logical slice name].[OpenJPA Property Name]</code>.\r\n-     For example, <code>openjpa.slice.One.ConnectionURL</code> where <code>One</code>\r\n-     is the logical slice name and <code>ConnectionURL</code> is an OpenJPA property\r\n-     name. \r\n-     </para>\r\n-     <para>\r\n-     If a property is not configured for a specific slice, then the value for\r\n-     the property equals to the corresponding <code>openjpa.*</code> property.\r\n-     </para>\r\n-   </section>\r\n-  \r\n-</chapter>\r\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+ \n+ http://www.apache.org/licenses/LICENSE-2.0\n+ \n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.   \n+-->\n+<chapter id=\"ref_guide_slice\">\n+  <title>\n+    Distributed Persistence\n+  </title>\n+  <para>\n+  The standard JPA runtime environment works with a <emphasis>single</emphasis>\n+  database instance. OpenJPA can be extended via plug-in to work with \n+  multiple databases within the same transaction without any change to the \n+  existing application. This capability of OpenJPA for distributed \n+  database environment is called <emphasis>Slice</emphasis> and is explained in \n+  the following sections.\n+  </para>\n+  \n+  <section id=\"slice_overview\">\n+    <title>Overview</title>\n+    <para>\n+    Enterprise applications are increasingly deployed for distributed database\n+    environments. The reasons for distributed, often horizontally-partitioned \n+    database environment can be to counter massive data growth, to \n+    support multiple external clients on a hosted platform or many other \n+    practical scenarios that can benefit from data partitioning.\n+    </para>\n+    \n+    <para>\n+    Any JPA-based user application has to address serious technical and conceptual\n+    challenges to directly interact with a set of physical databases\n+    within a single transaction. \n+    Slice encapsulates the complexity of distributed database environment \n+    via the abstraction of <emphasis>virtual</emphasis> database which internally \n+    manages multiple physical databases. We refer each physical database instance \n+    as <emphasis>slice</emphasis>. \n+    <emphasis>Virtualization</emphasis> of distributed databases \n+    makes OpenJPA object management kernel and \n+    the user application to work in the same way as in the case of a single physical \n+    database.\n+    </para>\n+  </section>\n+  \n+    <section id=\"Features and Limitations\">\n+       <title>Salient Features</title>\n+         <section><title>Transparency</title>\n+            <para>\n+              The existing application or the persistent domain featureSelection requires \n+              <emphasis>no change</emphasis> to upgrade from a single database \n+              to a distributed database environment. \n+            </para>\n+         </section>\n+         \n+         <section><title>Custom Distribution Policy</title>\n+            <para>\n+             User application decides how the newly persistent instances be \n+             distributed across the database slices. The data\n+             distribution policy across the slices may be based on the attribute \n+             of the data itself. For example, all Customer whose first name begins with\n+             character 'A' to 'M' will be stored in one slice while names\n+             beginning with 'N' to 'Z' will be stored in another slice. \n+             </para>\n+             <para>\n+             This custom data distribution policy is specified by implementing  \n+             <classname>org.apache.openjpa.slice.DistributionPolicy</classname>\n+             interface by the user application.\n+             </para>\n+          \n+             <para> \n+             Slice tracks the original database for existing instances. When\n+             an application issues a query, the resultant instances can be loaded \n+             from different slices. This tracking is important as subsequent\n+             update to any of these instances is committed to the appropriate \n+             original database slice. \n+            </para>\n+            \n+            <note>\n+            <para>\n+            You can find the original slice of an instance <code>pc</code> by \n+            the static utility method  \n+            <methodname>SlicePersistence.getSlice(pc)</methodname>.\n+            This method returns the slice identifier string associated with the\n+            given <emphasis>managed</emphasis> instance. If the instance is not\n+            being managed then the method return null because any unmanaged or\n+            detached instance is not associated with any slice. \n+            </para>\n+            </note>\n+            \n+            <para>\n+            <warning>Currently, there is no provision for migrating an \n+            existing instance from one slice to another.\n+            </warning>\n+            </para>\n+         </section>\n+         \n+         <section><title>Heterogeneous Database</title>\n+            <para> \n+              Each slice can be configured independently with its own JDBC \n+              driver and other connection parameters. Hence the target database \n+              environment can constitute of heterogeneous databases. \n+            </para>\n+        </section>\n+        \n+        <section><title>Parallel Execution</title>\n+            <para> \n+              All database operations such as query, commit or flush operates\n+              in parallel across the database slices. The execution threading\n+              policy is configurable. \n+            </para>\n+         </section>\n+         \n+         <section><title>Distributed Query</title>\n+            <para>\n+            The queries are executed across all slices and the results are\n+            merged into a single list. The query result that includes \n+            <code>ORDER BY</code> clause are sorted correctly by merging \n+            results from each individual slice. \n+            </para>\n+            The queries that specify an aggregate projection such as \n+            <code>COUNT()</code>, <code>MAX()</code>, <code>MIN()</code> \n+            and <code>SUM()</code>\n+            are correctly evaluated <emphasis>only if</emphasis> they \n+            return a single result.\n+            <para>\n+            </para>\n+            <para>\n+            <warning>\n+            The aggregate operation <code>AVG()</code> is not supported.\n+            </warning>\n+            </para>\n+            \n+         </section>\n+         \n+         <section><title>Targeted Query</title>\n+            <para>\n+            You can target the query only to a subset of slices rather than\n+            all slices by setting a <emphasis>hint</emphasis>. The hint key\n+            <code>openjpa.hint.slice.Target</code> is set on any query and \n+            hint value is\n+            comma-separated list of slice identifiers. The following \n+            example shows how to target a query only to slice <code>\"One\"</code>\n+                          \n+            <programlisting>\n+              <![CDATA[EntityManager em = ...;\n+              em.getTransaction().begin();\n+              String hint = \"openjpa.hint.slice.Target\";\n+              Query query = em.createQuery(\"SELECT p FROM PObject\").setHint(hint, \"One\");\n+              List result = query.getResultList();\n+              // verify that each instance is originaing from the given slice\n+              for (Object pc : result) {\n+                 String sliceOrigin = SlicePersistence.getSlice(pc);\n+                 assertTrue (\"One\", sliceOrigin);\n+              }\n+              ]]>\n+            </programlisting> \n+            </para>\n+         </section>\n+         \n+         \n+         <section><title>Distributed Transaction</title>\n+            <para> \n+            The database slices participate in a global transaction provided\n+            each slice is configured with a XA-compliant JDBC driver, even\n+            when the persistence unit is configured for <code>RESOURCE_LOCAL</code>\n+            transaction.\n+            </para>\n+            <para>\n+            <warning>\n+            If any of the configured slices is not XA-compliant <emphasis>and</emphasis> \n+            the persistence unit is configured for <code>RESOURCE_LOCAL</code>\n+            transaction then each slice is committed without any two-phase\n+            commit protocol. If commit on any slice fails, then atomic nature of\n+            the transaction is not ensured.\n+            </warning>\n+            </para>\n+          </section>\n+   \n+    \n+    \n+        \n+         <section id=\"collocation_constraint\"><title>Collocation Constraint</title>\n+            <para> \n+            No relationship can exist across database slices. In O-R mapping parlance,\n+            this condition translates to the limitation that the closure of an object graph must be \n+            <emphasis>collocated</emphasis> in the same database.\n+            For example, consider a domain featureSelection where Person relates to Adress.\n+            Person X refers to Address A while Person Y refers to Address B. \n+            Collocation Constraint means that <emphasis>both</emphasis> X and A \n+            must be stored in the same\n+            database slice. Similarly Y and B must be stored in a single slice.\n+            </para>\n+            <para>\n+            Slice, however, helps to maintain collocation constraint automatically.\n+            The instances in the closure set of any newly persistent instance \n+            reachable via cascaded relationship is stored in the same slice.\n+            The user-defined distribution policy requires to supply the slice \n+            for the root instance only.\n+            </para>\n+         </section>\n+    </section>\n+  \n+  <section id=\"slice_configuration\">\n+    <title>Usage</title>\n+    <para>\n+     Slice is activated via the following property settings:\n+    </para>\n+    <section>\n+      <title>How to activate Slice Runtime?</title>\n+      <para>\n+       The basic configuration property is \n+       <programlisting> \n+        <![CDATA[ <property name=\"openjpa.BrokerFactory\" value=\"slice\"/>]]>\n+       </programlisting> \n+       This critical configuration activates a specialized factory class aliased\n+       as <code>slice</code> to create object management kernel that\n+       can work against multiple databases.  \n+      </para>\n+    </section> \n+    \n+    <section>\n+      <title>How to configure each database slice?</title>\n+      <para>\n+      Each database slice is identified by a logical name unique within a\n+      persistent unit. The list of the slices is specified by \n+      <code>openjpa.slice.Names</code> property.\n+      For example, specify three slices named <code>\"One\"</code>, \n+      <code>\"Two\"</code> and <code>\"Three\"</code> as follows:\n+      <programlisting>\n+      <![CDATA[ <property name=\"openjpa.slice.Names\" value=\"One, Two, Three\"/>]]>\n+      </programlisting>\n+      </para>\n+      <para>\n+      This property is not mandatory. If this property is not specified then\n+      the configuration is scanned for logical slice names. Any property\n+      <code>\"abc\"</code> of the form <code>openjpa.slice.XYZ.abc</code> will \n+      register a slice with logical\n+      name <code>\"XYZ\"</code>.\n+      </para>\n+      <para>\n+      The order of the names is significant when no <code>openjpa.slice.Master</code> \n+      property is not specified. Then the persistence unit is scanned to find\n+      all configured slice names and they are ordered alphabetically.  \n+      </para>\n+      \n+      <para>\n+       Each database slice properties can be configured independently. \n+       For example, the\n+       following configuration will register two slices with logical name \n+       <code>One</code> and <code>Two</code>.\n+       <programlisting> \n+        <![CDATA[<property name=\"openjpa.slice.One.ConnectionURL\" value=\"jdbc:mysql:localhost//slice1\"/>\n+        <property name=\"openjpa.slice.Two.ConnectionURL\" value=\"jdbc:mysql:localhost//slice2\"/>]]>\n+       </programlisting> \n+      </para>\n+      \n+      <para>\n+       Any OpenJPA specific property can be configured per slice basis. \n+       For example, the following configuration will use two different JDBC \n+       drivers for slice <code>One</code> and <code>Two</code>.\n+       <programlisting> \n+        <![CDATA[<property name=\"openjpa.slice.One.ConnectionDriverName\" value=\"com.mysql.jdbc.Driver\"/>\n+        <property name=\"openjpa.slice.Two.ConnectionDriverName\" value=\"com.mysql.jdbc.jdbc2.optional.MysqlXADataSource\"/>]]>\n+       </programlisting> \n+      </para>\n+      \n+      <para>\n+        Any property if unspecified for a particular slice will be defaulted by\n+        corresponding OpenJPA property. For example, consider following three slices\n+        <programlisting> \n+         <![CDATA[<property name=\"openjpa.slice.One.ConnectionURL\"          value=\"jdbc:mysql:localhost//slice1\"/>\n+         <property name=\"openjpa.slice.Two.ConnectionURL\"          value=\"jdbc:mysql:localhost//slice2\"/>\n+         <property name=\"openjpa.slice.Three.ConnectionURL\"        value=\"jdbc:oracle:localhost//slice3\"/>\n+\n+         <property name=\"openjpa.ConnectionDriverName\"     value=\"com.mysql.jdbc.Driver\"/>\n+         <property name=\"openjpa.slice.Three.ConnectionDriverName\" value=\"oracle.jdbc.Driver\"/>]]>\n+        </programlisting> \n+        In this example, <code>Three</code> will use slice-specific\n+        <code>oracle.jdbc.Driver</code> driver while slice\n+        <code>One</code> and <code>Two</code> will use\n+        the driver <code>com.mysql.jdbc.Driver</code> as \n+        specified by <code>openjpa.ConnectionDriverName</code> \n+        property value.\n+      </para>\n+    </section>\n+     \n+    <section id=\"distribution_policy\">\n+       <title>Implement DistributionPolicy interface</title>\n+       <para>\n+        Slice needs to determine which slice will persist a new instance. \n+        The application can only decide this policy (for example, \n+        all PurchaseOrders before April 30 goes to slice <code>One</code>,\n+        all the rest goes to slice <code>Two</code>). This is why\n+        the application has to implement \n+        <code>org.apache.openjpa.slice.DistributionPolicy</code> and\n+        specify the implementation class in configuration\n+        <programlisting> \n+         <![CDATA[ <property name=\"openjpa.slice.DistributionPolicy\" value=\"com.acme.foo.MyOptimialDistributionPolicy\"/>]]>\n+        </programlisting>\n+       </para>\n+       \n+       <para>\n+        The interface <code>org.apache.openjpa.slice.DistributionPolicy</code>\n+        is simple with a single method. The complete listing of the\n+        documented interface follows:\n+       <programlisting> \n+       <![CDATA[ \n+public interface DistributionPolicy {\n+    /**\n+     * Gets the name of the slice where a given instance will be stored.\n+     *  \n+     * @param pc The newly persistent or to-be-merged object. \n+     * @param slices name of the configured slices.\n+     * @param context persistence context managing the given instance.\n+     * \n+     * @return identifier of the slice. This name must match one of the\n+     * configured slice names. \n+     * @see DistributedConfiguration#getSliceNames()\n+     */\n+    String distribute(Object pc, List<String> slices, Object context);\n+}\n+]]>\n+       </programlisting>\n+        </para>\n+        \n+        <para>\n+        While implementing a distribution policy the most important thing to\n+        remember is <link linkend=\"collocation_constraint\">collocation constraint</link>.\n+        Because Slice can not establish or query any cross-database relationship, all the\n+        related instances must be stored in the same database slice. \n+ \n+        Slice can determine the closure of a root object by traversal of \n+        cascaded relationships. Hence user-defined policy has to only decide the\n+        database for the root instance that is the explicit argument to \n+        <methodname>EntityManager.persist()</methodname> call.\n+        Slice will ensure that all other related instances that gets persisted by cascade\n+        is assigned to the same database slice as that of the root instance.\n+        However, the user-defined distribution policy must return the\n+        same slice identifier for the instances that are logically related but\n+        not cascaded for persist. \n+        </para>\n+    </section>\n+    \n+    <section>\n+    </section>\n+  </section>\n+  \n+  <title>Configuration Properties</title>\n+    <para>\n+    The properties to configure Slice can be classified in two broad groups.\n+The <emphasis>global</emphasis> properties apply to all the slices, for example,\n+the thread pool used to execute the queries in parallel or the transaction \n+manager used to coordinate transaction across multiple slices. \n+The <emphasis>per-slice</emphasis> properties apply to individual slice, for example,\n+the JDBC connection URL of a slice.\n+   </para>\n+   \n+   <section>\n+     <title>Global Properties</title>\n+     \n+     <section>\n+        <title>openjpa.slice.DistributionPolicy</title>\n+        <para>\n+         This <emphasis>mandatory</emphasis> plug-in property determines how newly\n+         persistent instances are distributed across individual slices. \n+         The value of this property is a fully-qualified class name that implements\n+         <ulink url=\"../javadoc/org/apache/openjpa/slice/DistributionPolicy.html\">\n+         <classname>org.apache.openjpa.slice.DistributionPolicy</classname>\n+         </ulink> interface.\n+        </para>\n+     </section>\n+     \n+     <section><title>openjpa.slice.Lenient</title>\n+      <para>\n+        This boolean plug-in property controls the behavior when one or more slice \n+        can not be connected or unavailable for some other reasons.\n+        If <code>true</code>, the unreachable slices are ignored. If \n+        <code>false</code> then any unreachable slice will raise an exception\n+        during startup.\n+        </para>\n+        <para>\n+        By default this value is set to <code>false</code> i.e. all configured\n+        slices must be available.\n+        </para> \n+     </section>\n+\n+     <section>\n+      <title>openjpa.slice.Master</title>\n+      <para>\n+       This plug-in property can be used to identify the name of the master slice. \n+       Master slice is used when a primary key is to be generated from a database sequence. \n+       </para>\n+       <para>\n+        By default the master slice is the first slice in the list of configured slice names. \n+       </para>\n+       <para>\n+              <warning>\n+              Currently, there is no provision to use sequence from \n+              multiple database slices.\n+              </warning>\n+       </para>\n+     </section>\n+    \n+     <section>\n+        <title>openjpa.slice.Names</title>\n+        <para>\n+         This plug-in property can be used to register the logical slice names.\n+         The value of this property is comma-separated list of slice names. \n+         The ordering of the names in this list is \n+         <emphasis>significant</emphasis> because \n+         <link linkend=\"distribution_policy\">DistributionPolicy</link> receives \n+         the input argument of the slice names in the same order.\n+        </para>\n+        <para>\n+        If logical slice names are not registered explicitly via this property,\n+        then all logical slice names available in the persistence unit are \n+        registered. The ordering of the slice names in this case is alphabetical.  \n+        </para>\n+        <para>\n+        If logical slice names are registered explicitly via this property, then\n+        any logical slice that is available in the persistence unit but excluded\n+        from this list is ignored. \n+        </para>\n+     </section>\n+    \n+     <section>\n+        <title>openjpa.slice.ThreadingPolicy</title>\n+        <para>\n+        This plug-in property determines the nature of thread pool being used \n+        for database operations such as query or flush on individual slices. \n+        The value of the property is a \n+        fully-qualified class name that implements \n+        <ulink url=\"http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/ExecutorService.html\">\n+        <classname>java.util.concurrent.ExecutorService</classname>\n+        </ulink> interface.  \n+        Two pre-defined pools can be chosen via their aliases namely \n+        <code>fixed</code> or <code>cached</code>.\n+        </para>\n+        <para>\n+        The pre-defined alias <code>cached</code> activates a \n+        <ulink url=\"http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/Executors.html#newCachedThreadPool()\">cached thread pool</ulink>. \n+        A cached thread pool creates new threads as needed, but will reuse \n+        previously constructed threads when they are available. This pool \n+        is suitable in scenarios that execute many short-lived asynchronous tasks.\n+        The way Slice uses the thread pool to execute database operations is \n+        akin to such scenario and hence <code>cached</code> is the default \n+        value for this plug-in property.  \n+        </para>\n+        <para>\n+        The <code>fixed</code> alias activates a \n+        <ulink url=\"http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/Executors.html#newFixedThreadPool(int)\">fixed thread pool</ulink>.\n+        The fixed thread pool can be further parameterized with \n+        <code>CorePoolSize</code>, <code>MaximumPoolSize</code>, \n+        <code>KeepAliveTime</code> and <code>RejectedExecutionHandler</code>. \n+        The meaning of these parameters are described in \n+        <ulink url=\"http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/ThreadPoolExecutor.html\">JavaDoc</ulink>.\n+        The users can exercise finer control on thread pool behavior via these\n+        parameters.\n+        By default, the core pool size is <code>10</code>, maximum pool size is\n+        also <code>10</code>, keep alive time is <code>60</code> seconds and \n+        rejected execution is \n+        <ulink url=\"http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/ThreadPoolExecutor.AbortPolicy.html\">aborted</ulink>.\n+        </para>\n+        <para>\n+        Both of the pre-defined aliases can be parameterized with a fully-qualified\n+        class name that implements \n+        <ulink url=\"http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/ThreadFactory.html\">\n+        <classname>java.util.concurrent.ThreadFactory</classname>\n+        </ulink> interface.\n+        </para>\n+     </section>\n+      \n+     <section>\n+      <title>openjpa.slice.TransactionPolicy</title>\n+      <para>\n+      This plug-in property determines the policy for transaction commit \n+      across multiple slices. The value of this property is a fully-qualified \n+      class name that implements \n+      <ulink url=\"http://java.sun.com/j2ee/sdk_1.3/techdocs/api/javax/transaction/TransactionManager.html\">\n+      <classname>javax.transaction.TransactionManager</classname> \n+      </ulink> interface. \n+      </para>\n+      <para>\n+      Three pre-defined policies can be chosen\n+      by their aliases namely <code>default</code>,\n+      <code>xa</code> and <code>jndi</code>. \n+      </para>\n+      <para>\n+      The <code>default</code> policy employs \n+      a Transaction Manager that commits or rolls back transaction on individual\n+      slices <emphasis>without</emphasis> a two-phase commit protocol. \n+      It does <emphasis>not</emphasis>\n+      guarantee atomic nature of transaction across all the slices because if\n+      one or more slice fails to commit, there is no way to rollback the transaction\n+      on other slices that committed successfully.\n+      </para>\n+      <para>\n+      The <code>xa</code> policy employs a Transaction Manager that that commits \n+      or rolls back transaction on individual\n+      slices using a two-phase commit protocol. The prerequisite to use this scheme\n+      is, of course, that all the slices must be configured to use\n+      XA-compliant JDBC driver. \n+      </para>\n+      <para>\n+      The <code>jndi</code> policy employs a Transaction Manager by looking up the\n+      JNDI context. The prerequisite to use this transaction\n+      manager is, of course, that all the slices must be configured to use\n+      XA-compliant JDBC driver. \n+      <warning>This JNDI based policy is not available currently.</warning>\n+      </para>\n+    </section>\n+   </section>\n+   \n+   <section>\n+     <title>Per-Slice Properties</title>\n+     <para>\n+     Any OpenJPA property can be configured for each individual slice. The property name\n+     is of the form <code>openjpa.slice.[Logical slice name].[OpenJPA Property Name]</code>.\n+     For example, <code>openjpa.slice.One.ConnectionURL</code> where <code>One</code>\n+     is the logical slice name and <code>ConnectionURL</code> is an OpenJPA property\n+     name. \n+     </para>\n+     <para>\n+     If a property is not configured for a specific slice, then the value for\n+     the property equals to the corresponding <code>openjpa.*</code> property.\n+     </para>\n+   </section>\n+  \n+</chapter>\n   \n\\ No newline at end of file"},{"sha":"a493c3e50489ca94fd29da3032e4ffbc66a760b0","filename":"openjpa-slice/src/main/ant/enhancer.xml","status":"modified","additions":81,"deletions":81,"changes":162,"blob_url":"https://github.com/apache/openjpa/blob/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-slice/src/main/ant/enhancer.xml","raw_url":"https://github.com/apache/openjpa/raw/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-slice/src/main/ant/enhancer.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-slice/src/main/ant/enhancer.xml?ref=72f4ebcda0e2086c8699580100976a7f8a7d5f8a","patch":"@@ -1,82 +1,82 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n-<!--\r\n-    Licensed to the Apache Software Foundation (ASF) under one\r\n-    or more contributor license agreements.  See the NOTICE file\r\n-    distributed with this work for additional information\r\n-    regarding copyright ownership.  The ASF licenses this file\r\n-    to you under the Apache License, Version 2.0 (the\r\n-    \"License\"); you may not use this file except in compliance\r\n-    with the License.  You may obtain a copy of the License at\r\n-    \r\n-    http://www.apache.org/licenses/LICENSE-2.0\r\n-    \r\n-    Unless required by applicable law or agreed to in writing,\r\n-    software distributed under the License is distributed on an\r\n-    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n-    KIND, either express or implied.  See the License for the\r\n-    specific language governing permissions and limitations\r\n-    under the License.   \r\n--->\r\n-<project name=\"enhance\" basedir=\".\">\r\n-    <!--\r\n-        This build file executes the PCEnhancer on the test entities. It's in a\r\n-        separate file instead of nested in pom.xml to make some conditional \r\n-        processing easier.\r\n-        \r\n-        Test classes will not be compiled if maven is invoked with \r\n-        -Dmaven.tests.skip=true. \r\n-    -->\r\n-\r\n-    <condition property=\"maven.test.skip.istrue\">\r\n-        <istrue value=\"${maven.test.skip}\" />\r\n-    </condition>\r\n-\r\n-    <condition property=\"test.isfalse\">\r\n-        <equals arg1=\"${test}\" arg2=\"false\" />\r\n-    </condition>\r\n-\r\n-    <!-- ================================= \r\n-          target: enhance              \r\n-         ================================= -->\r\n-    <target name=\"enhance\"\r\n-            description=\"--> run the enhancer unless test=false\"\r\n-            unless=\"test.isfalse\">\r\n-        <antcall target=\"enhance.all.entities\"\r\n-                 inheritall=\"true\"\r\n-                 inheritrefs=\"true\" />\r\n-    </target>\r\n-\r\n-    <!-- ================================= \r\n-          target: enhance.all.entities              \r\n-         ================================= -->\r\n-    <target name=\"enhance.all.entities\"\r\n-            description=\"--> enhance the test entities\"\r\n-            unless=\"maven.test.skip.istrue\">\r\n-        <echo> running enhancer</echo>\r\n-        <!-- \r\n-            Inherited references won't be present until the task is called. \r\n-            Therefore the path definition needs to stay inside the task.\r\n-          -->\r\n-        <path id=\"cp\">\r\n-            <path refid=\"maven.test.classpath\" />\r\n-        </path>\r\n-\r\n-        <taskdef name=\"openjpac\"\r\n-                 classname=\"org.apache.openjpa.ant.PCEnhancerTask\">\r\n-            <classpath refid=\"cp\" />\r\n-        </taskdef>\r\n-\r\n-        <fileset id=\"enhance.path.ref\"\r\n-                 dir=\"${project.build.testOutputDirectory}\">\r\n-            <include name=\"**/Address.class\" />\r\n-            <include name=\"**/Person.class\" />\r\n-            <include name=\"**/PObject.class\" />\r\n-            <exclude name=\"**/Test*.class\" />\r\n-        </fileset>\r\n-        <openjpac>\r\n-            <classpath refid=\"cp\" />\r\n-            <fileset refid=\"enhance.path.ref\" />\r\n-            <config log=\"DefaultLevel=${openjpa.loglevel}\" />\r\n-        </openjpac>\r\n-    </target>\r\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+    \n+    http://www.apache.org/licenses/LICENSE-2.0\n+    \n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.   \n+-->\n+<project name=\"enhance\" basedir=\".\">\n+    <!--\n+        This build file executes the PCEnhancer on the test entities. It's in a\n+        separate file instead of nested in pom.xml to make some conditional \n+        processing easier.\n+        \n+        Test classes will not be compiled if maven is invoked with \n+        -Dmaven.tests.skip=true. \n+    -->\n+\n+    <condition property=\"maven.test.skip.istrue\">\n+        <istrue value=\"${maven.test.skip}\" />\n+    </condition>\n+\n+    <condition property=\"test.isfalse\">\n+        <equals arg1=\"${test}\" arg2=\"false\" />\n+    </condition>\n+\n+    <!-- ================================= \n+          target: enhance              \n+         ================================= -->\n+    <target name=\"enhance\"\n+            description=\"--> run the enhancer unless test=false\"\n+            unless=\"test.isfalse\">\n+        <antcall target=\"enhance.all.entities\"\n+                 inheritall=\"true\"\n+                 inheritrefs=\"true\" />\n+    </target>\n+\n+    <!-- ================================= \n+          target: enhance.all.entities              \n+         ================================= -->\n+    <target name=\"enhance.all.entities\"\n+            description=\"--> enhance the test entities\"\n+            unless=\"maven.test.skip.istrue\">\n+        <echo> running enhancer</echo>\n+        <!-- \n+            Inherited references won't be present until the task is called. \n+            Therefore the path definition needs to stay inside the task.\n+          -->\n+        <path id=\"cp\">\n+            <path refid=\"maven.test.classpath\" />\n+        </path>\n+\n+        <taskdef name=\"openjpac\"\n+                 classname=\"org.apache.openjpa.ant.PCEnhancerTask\">\n+            <classpath refid=\"cp\" />\n+        </taskdef>\n+\n+        <fileset id=\"enhance.path.ref\"\n+                 dir=\"${project.build.testOutputDirectory}\">\n+            <include name=\"**/Address.class\" />\n+            <include name=\"**/Person.class\" />\n+            <include name=\"**/PObject.class\" />\n+            <exclude name=\"**/Test*.class\" />\n+        </fileset>\n+        <openjpac>\n+            <classpath refid=\"cp\" />\n+            <fileset refid=\"enhance.path.ref\" />\n+            <config log=\"DefaultLevel=${openjpa.loglevel}\" />\n+        </openjpac>\n+    </target>\n </project>\n\\ No newline at end of file"},{"sha":"93389283a9ee3160bf14e8e4d60e9da80d10af10","filename":"openjpa-slice/src/test/resources/META-INF/persistence.xml","status":"modified","additions":125,"deletions":125,"changes":250,"blob_url":"https://github.com/apache/openjpa/blob/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-slice/src/test/resources/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/72f4ebcda0e2086c8699580100976a7f8a7d5f8a/openjpa-slice/src/test/resources/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-slice/src/test/resources/META-INF/persistence.xml?ref=72f4ebcda0e2086c8699580100976a7f8a7d5f8a","patch":"@@ -1,125 +1,125 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n-<!--\r\n- Licensed to the Apache Software Foundation (ASF) under one\r\n- or more contributor license agreements.  See the NOTICE file\r\n- distributed with this work for additional information\r\n- regarding copyright ownership.  The ASF licenses this file\r\n- to you under the Apache License, Version 2.0 (the\r\n- \"License\"); you may not use this file except in compliance\r\n- with the License.  You may obtain a copy of the License at\r\n-\r\n- http://www.apache.org/licenses/LICENSE-2.0\r\n-\r\n- Unless required by applicable law or agreed to in writing,\r\n- software distributed under the License is distributed on an\r\n- \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- KIND, either express or implied.  See the License for the\r\n- specific language governing permissions and limitations\r\n- under the License.\r\n--->\r\n-<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" version=\"1.0\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd\">\r\n-    <persistence-unit name=\"enhance\">\r\n-        <class>org.apache.openjpa.slice.PObject</class>\r\n-        <class>org.apache.openjpa.slice.Person</class>\r\n-        <class>org.apache.openjpa.slice.Address</class>\r\n-        <properties>\r\n-         <property name=\"openjpa.Log\" value=\"DefaultLevel=WARN, Enhance=TRACE\"/>\r\n-        </properties>\r\n-    </persistence-unit>\r\n-    \r\n-    \r\n-   <!-- ==================================================================== -->\r\n-   <!-- Configuration for testing basic per-slice configuration              -->\r\n-   <!-- ==================================================================== -->\r\n-   <persistence-unit name=\"per-slice\">\r\n-      <properties>\r\n-         <property name=\"openjpa.BrokerFactory\"        value=\"slice\"/>\r\n-         <property name=\"openjpa.slice.Names\"          value=\"One,Two, Three\"/>\r\n-         <property name=\"openjpa.slice.Master\"         value=\"One\"/>\r\n-         <property name=\"openjpa.slice.Lenient\"        value=\"true\"/>\r\n-         \r\n-         <property name=\"openjpa.slice.DistributionPolicy\"  value=\"org.apache.openjpa.slice.policy.UserDistributionPolicy\"/>\r\n-         <property name=\"openjpa.slice.ThreadingPolicy\"     value=\"fixed\"/>\r\n-\r\n-         <property name=\"openjpa.Log\"                       value=\"DefaultLevel=INFO, Enhance=TRACE, SQL=TRACE\"/>\r\n-         <property name=\"openjpa.ConnectionDriverName\"      value=\"org.apache.derby.jdbc.EmbeddedDriver\"/>\r\n-         <property name=\"openjpa.ConnectionUserName\"        value=\"\"/>\r\n-         <property name=\"openjpa.ConnectionPassword\"        value=\"\"/>\r\n-         <property name=\"openjpa.slice.One.ConnectionURL\"   value=\"jdbc:derby:target/database/openjpa-slice1;create=true\"/>\r\n-         <property name=\"openjpa.slice.Two.ConnectionURL\"   value=\"jdbc:derby:target/database/openjpa-slice2;create=true\"/>\r\n-         <property name=\"openjpa.slice.Three.ConnectionURL\" value=\"jdbc:some-bad-url\"/>\r\n-         \r\n-      </properties>\r\n-   </persistence-unit>\r\n-\r\n-   <persistence-unit name=\"XA\">\r\n-      <class>org.apache.openjpa.slice.PObject</class>\r\n-      <properties>\r\n-         <property name=\"openjpa.BrokerFactory\" value=\"slice\"/>\r\n-         <property name=\"openjpa.ConnectionDriverName\" value=\"org.apache.derby.jdbc.EmbeddedDriver\"/>\r\n-\r\n-         <property name=\"openjpa.slice.Names\" value=\"One,Two\"/>\r\n-         <property name=\"openjpa.slice.DistributionPolicy\" value=\"org.apache.openjpa.slice.policy.UserDistributionPolicy\"/>\r\n-         \r\n-         <property name=\"openjpa.ConnectionUserName\"        value=\"\"/>\r\n-         <property name=\"openjpa.ConnectionPassword\"        value=\"\"/>\r\n-         <property name=\"openjpa.slice.One.ConnectionDriverName\" value=\"org.apache.derby.jdbc.EmbeddedDriver\"/>\r\n-         <property name=\"openjpa.slice.One.ConnectionURL\" value=\"jdbc:derby:target/database/openjpa-slice1;create=true\"/>\r\n-         <property name=\"openjpa.slice.Two.ConnectionDriverName\" value=\"org.apache.derby.jdbc.EmbeddedDriver\"/>\r\n-         <property name=\"openjpa.slice.Two.ConnectionURL\" value=\"jdbc:derby:target/database/openjpa-slice2;create=true\"/>\r\n-         \r\n-         <property name=\"openjpa.Multithreaded\" value=\"false\"/>\r\n-         <property name=\"openjpa.Log\" value=\"DefaultLevel=INFO, Enhance=TRACE, SQL=TRACE\"/>\r\n-         <property name=\"openjpa.jdbc.SynchronizeMappings\" value=\"refresh\"/>\r\n-         <property name=\"openjpa.jdbc.MappingDefaults\" value=\"DefaultMissingInfo=true\"/>\r\n-         <property name=\"openjpa.RuntimeUnenhancedClasses\" value=\"supported\"/>\r\n-      </properties>\r\n-   </persistence-unit>\r\n-   \r\n-   <!-- ==================================================================== -->\r\n-   <!-- Configuration for testing basic CRUD operations                      -->\r\n-   <!-- ==================================================================== -->\r\n-   <persistence-unit name=\"slice\">\r\n-        <class>org.apache.openjpa.slice.PObject</class>\r\n-        <class>org.apache.openjpa.slice.Person</class>\r\n-        <class>org.apache.openjpa.slice.Address</class>\r\n-\t\t<properties>\r\n-            <property name=\"openjpa.BrokerFactory\" value=\"slice\"/>\r\n-            <property name=\"openjpa.ConnectionDriverName\" value=\"org.apache.derby.jdbc.EmbeddedDriver\"/>\r\n-            <property name=\"openjpa.slice.Names\" value=\"One,Two\"/>\r\n-            <property name=\"openjpa.slice.Master\" value=\"Two\"/>\r\n-            <property name=\"openjpa.slice.One.ConnectionURL\" value=\"jdbc:derby:target/database/openjpa-slice1;create=true\"/>\r\n-            <property name=\"openjpa.slice.Two.ConnectionURL\" value=\"jdbc:derby:target/database/openjpa-slice2;create=true\"/>\r\n-            <property name=\"openjpa.ConnectionUserName\" value=\"\"/>\r\n-            <property name=\"openjpa.ConnectionPassword\" value=\"\"/>\r\n-            <property name=\"openjpa.slice.DistributionPolicy\" value=\"org.apache.openjpa.slice.policy.UserDistributionPolicy\"/>\r\n-            <property name=\"openjpa.slice.Lenient\" value=\"false\"/>\r\n-            \r\n-            <property name=\"openjpa.Connection2URL\" value=\"jdbc:derby:target/database/openjpa-slice1;create=true\"/>\r\n-\t        <property name=\"openjpa.jdbc.SynchronizeMappings\" value=\"buildSchema\"/>\r\n-            <property name=\"openjpa.QueryCompilationCache\" value=\"false\"/>\r\n-   \t        <property name=\"openjpa.Log\" value=\"DefaultLevel=WARN, Enhance=TRACE, SQL=TRACE\"/>\r\n-            <property name=\"openjpa.jdbc.MappingDefaults\" value=\"DefaultMissingInfo=true\"/>\r\n-            <property name=\"openjpa.RuntimeUnenhancedClasses\" value=\"supported\"/>\r\n-      \t</properties>\r\n-   </persistence-unit>\r\n-   \r\n-      <persistence-unit name=\"ordering\">\r\n-        <class>org.apache.openjpa.slice.PObject</class>\r\n-        <properties>\r\n-            <property name=\"openjpa.BrokerFactory\" value=\"slice\"/>\r\n-            <property name=\"openjpa.ConnectionDriverName\" value=\"org.apache.derby.jdbc.EmbeddedDriver\"/>\r\n-            <property name=\"openjpa.slice.Even.ConnectionURL\" value=\"jdbc:derby:target/database/openjpa-slice1;create=true\"/>\r\n-            <property name=\"openjpa.slice.Odd.ConnectionURL\" value=\"jdbc:derby:target/database/openjpa-slice2;create=true\"/>\r\n-            <property name=\"openjpa.ConnectionUserName\" value=\"\"/>\r\n-            <property name=\"openjpa.ConnectionPassword\" value=\"\"/>\r\n-            <property name=\"openjpa.slice.DistributionPolicy\" value=\"org.apache.openjpa.slice.policy.EvenOddDistributionPolicy\"/>\r\n-            <property name=\"openjpa.slice.Lenient\" value=\"false\"/>\r\n-            \r\n-            <property name=\"openjpa.Connection2URL\" value=\"jdbc:derby:target/database/openjpa-slice1;create=true\"/>\r\n-            <property name=\"openjpa.jdbc.SynchronizeMappings\" value=\"buildSchema\"/>\r\n-            <property name=\"openjpa.Log\" value=\"DefaultLevel=WARN, Enhance=TRACE, SQL=TRACE\"/>\r\n-            <property name=\"openjpa.jdbc.MappingDefaults\" value=\"DefaultMissingInfo=true\"/>\r\n-        </properties>\r\n-   </persistence-unit>\r\n-</persistence>\r\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+\n+ http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.\n+-->\n+<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" version=\"1.0\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd\">\n+    <persistence-unit name=\"enhance\">\n+        <class>org.apache.openjpa.slice.PObject</class>\n+        <class>org.apache.openjpa.slice.Person</class>\n+        <class>org.apache.openjpa.slice.Address</class>\n+        <properties>\n+         <property name=\"openjpa.Log\" value=\"DefaultLevel=WARN, Enhance=TRACE\"/>\n+        </properties>\n+    </persistence-unit>\n+    \n+    \n+   <!-- ==================================================================== -->\n+   <!-- Configuration for testing basic per-slice configuration              -->\n+   <!-- ==================================================================== -->\n+   <persistence-unit name=\"per-slice\">\n+      <properties>\n+         <property name=\"openjpa.BrokerFactory\"        value=\"slice\"/>\n+         <property name=\"openjpa.slice.Names\"          value=\"One,Two, Three\"/>\n+         <property name=\"openjpa.slice.Master\"         value=\"One\"/>\n+         <property name=\"openjpa.slice.Lenient\"        value=\"true\"/>\n+         \n+         <property name=\"openjpa.slice.DistributionPolicy\"  value=\"org.apache.openjpa.slice.policy.UserDistributionPolicy\"/>\n+         <property name=\"openjpa.slice.ThreadingPolicy\"     value=\"fixed\"/>\n+\n+         <property name=\"openjpa.Log\"                       value=\"DefaultLevel=INFO, Enhance=TRACE, SQL=TRACE\"/>\n+         <property name=\"openjpa.ConnectionDriverName\"      value=\"org.apache.derby.jdbc.EmbeddedDriver\"/>\n+         <property name=\"openjpa.ConnectionUserName\"        value=\"\"/>\n+         <property name=\"openjpa.ConnectionPassword\"        value=\"\"/>\n+         <property name=\"openjpa.slice.One.ConnectionURL\"   value=\"jdbc:derby:target/database/openjpa-slice1;create=true\"/>\n+         <property name=\"openjpa.slice.Two.ConnectionURL\"   value=\"jdbc:derby:target/database/openjpa-slice2;create=true\"/>\n+         <property name=\"openjpa.slice.Three.ConnectionURL\" value=\"jdbc:some-bad-url\"/>\n+         \n+      </properties>\n+   </persistence-unit>\n+\n+   <persistence-unit name=\"XA\">\n+      <class>org.apache.openjpa.slice.PObject</class>\n+      <properties>\n+         <property name=\"openjpa.BrokerFactory\" value=\"slice\"/>\n+         <property name=\"openjpa.ConnectionDriverName\" value=\"org.apache.derby.jdbc.EmbeddedDriver\"/>\n+\n+         <property name=\"openjpa.slice.Names\" value=\"One,Two\"/>\n+         <property name=\"openjpa.slice.DistributionPolicy\" value=\"org.apache.openjpa.slice.policy.UserDistributionPolicy\"/>\n+         \n+         <property name=\"openjpa.ConnectionUserName\"        value=\"\"/>\n+         <property name=\"openjpa.ConnectionPassword\"        value=\"\"/>\n+         <property name=\"openjpa.slice.One.ConnectionDriverName\" value=\"org.apache.derby.jdbc.EmbeddedDriver\"/>\n+         <property name=\"openjpa.slice.One.ConnectionURL\" value=\"jdbc:derby:target/database/openjpa-slice1;create=true\"/>\n+         <property name=\"openjpa.slice.Two.ConnectionDriverName\" value=\"org.apache.derby.jdbc.EmbeddedDriver\"/>\n+         <property name=\"openjpa.slice.Two.ConnectionURL\" value=\"jdbc:derby:target/database/openjpa-slice2;create=true\"/>\n+         \n+         <property name=\"openjpa.Multithreaded\" value=\"false\"/>\n+         <property name=\"openjpa.Log\" value=\"DefaultLevel=INFO, Enhance=TRACE, SQL=TRACE\"/>\n+         <property name=\"openjpa.jdbc.SynchronizeMappings\" value=\"refresh\"/>\n+         <property name=\"openjpa.jdbc.MappingDefaults\" value=\"DefaultMissingInfo=true\"/>\n+         <property name=\"openjpa.RuntimeUnenhancedClasses\" value=\"supported\"/>\n+      </properties>\n+   </persistence-unit>\n+   \n+   <!-- ==================================================================== -->\n+   <!-- Configuration for testing basic CRUD operations                      -->\n+   <!-- ==================================================================== -->\n+   <persistence-unit name=\"slice\">\n+        <class>org.apache.openjpa.slice.PObject</class>\n+        <class>org.apache.openjpa.slice.Person</class>\n+        <class>org.apache.openjpa.slice.Address</class>\n+\t\t<properties>\n+            <property name=\"openjpa.BrokerFactory\" value=\"slice\"/>\n+            <property name=\"openjpa.ConnectionDriverName\" value=\"org.apache.derby.jdbc.EmbeddedDriver\"/>\n+            <property name=\"openjpa.slice.Names\" value=\"One,Two\"/>\n+            <property name=\"openjpa.slice.Master\" value=\"Two\"/>\n+            <property name=\"openjpa.slice.One.ConnectionURL\" value=\"jdbc:derby:target/database/openjpa-slice1;create=true\"/>\n+            <property name=\"openjpa.slice.Two.ConnectionURL\" value=\"jdbc:derby:target/database/openjpa-slice2;create=true\"/>\n+            <property name=\"openjpa.ConnectionUserName\" value=\"\"/>\n+            <property name=\"openjpa.ConnectionPassword\" value=\"\"/>\n+            <property name=\"openjpa.slice.DistributionPolicy\" value=\"org.apache.openjpa.slice.policy.UserDistributionPolicy\"/>\n+            <property name=\"openjpa.slice.Lenient\" value=\"false\"/>\n+            \n+            <property name=\"openjpa.Connection2URL\" value=\"jdbc:derby:target/database/openjpa-slice1;create=true\"/>\n+\t        <property name=\"openjpa.jdbc.SynchronizeMappings\" value=\"buildSchema\"/>\n+            <property name=\"openjpa.QueryCompilationCache\" value=\"false\"/>\n+   \t        <property name=\"openjpa.Log\" value=\"DefaultLevel=WARN, Enhance=TRACE, SQL=TRACE\"/>\n+            <property name=\"openjpa.jdbc.MappingDefaults\" value=\"DefaultMissingInfo=true\"/>\n+            <property name=\"openjpa.RuntimeUnenhancedClasses\" value=\"supported\"/>\n+      \t</properties>\n+   </persistence-unit>\n+   \n+      <persistence-unit name=\"ordering\">\n+        <class>org.apache.openjpa.slice.PObject</class>\n+        <properties>\n+            <property name=\"openjpa.BrokerFactory\" value=\"slice\"/>\n+            <property name=\"openjpa.ConnectionDriverName\" value=\"org.apache.derby.jdbc.EmbeddedDriver\"/>\n+            <property name=\"openjpa.slice.Even.ConnectionURL\" value=\"jdbc:derby:target/database/openjpa-slice1;create=true\"/>\n+            <property name=\"openjpa.slice.Odd.ConnectionURL\" value=\"jdbc:derby:target/database/openjpa-slice2;create=true\"/>\n+            <property name=\"openjpa.ConnectionUserName\" value=\"\"/>\n+            <property name=\"openjpa.ConnectionPassword\" value=\"\"/>\n+            <property name=\"openjpa.slice.DistributionPolicy\" value=\"org.apache.openjpa.slice.policy.EvenOddDistributionPolicy\"/>\n+            <property name=\"openjpa.slice.Lenient\" value=\"false\"/>\n+            \n+            <property name=\"openjpa.Connection2URL\" value=\"jdbc:derby:target/database/openjpa-slice1;create=true\"/>\n+            <property name=\"openjpa.jdbc.SynchronizeMappings\" value=\"buildSchema\"/>\n+            <property name=\"openjpa.Log\" value=\"DefaultLevel=WARN, Enhance=TRACE, SQL=TRACE\"/>\n+            <property name=\"openjpa.jdbc.MappingDefaults\" value=\"DefaultMissingInfo=true\"/>\n+        </properties>\n+   </persistence-unit>\n+</persistence>"}]}

