{"sha":"730ff8813eed5a331787765e2beeb6e3c5155f4b","node_id":"MDY6Q29tbWl0MjA2MzY0OjczMGZmODgxM2VlZDVhMzMxNzg3NzY1ZTJiZWViNmUzYzUxNTVmNGI=","commit":{"author":{"name":"Jeremy Bauer","email":"jrbauer@apache.org","date":"2009-03-04T19:23:33Z"},"committer":{"name":"Jeremy Bauer","email":"jrbauer@apache.org","date":"2009-03-04T19:23:33Z"},"message":"OPENJPA-927 Committing code contributed by Dianne Richards\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@750112 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"260d2e0f6b03ec62815e231b7be39c6cfe5b93cd","url":"https://api.github.com/repos/apache/openjpa/git/trees/260d2e0f6b03ec62815e231b7be39c6cfe5b93cd"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/730ff8813eed5a331787765e2beeb6e3c5155f4b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/730ff8813eed5a331787765e2beeb6e3c5155f4b","html_url":"https://github.com/apache/openjpa/commit/730ff8813eed5a331787765e2beeb6e3c5155f4b","comments_url":"https://api.github.com/repos/apache/openjpa/commits/730ff8813eed5a331787765e2beeb6e3c5155f4b/comments","author":null,"committer":null,"parents":[{"sha":"8bf4da08ff55a42ec65911e35b41e4759f9b43cc","url":"https://api.github.com/repos/apache/openjpa/commits/8bf4da08ff55a42ec65911e35b41e4759f9b43cc","html_url":"https://github.com/apache/openjpa/commit/8bf4da08ff55a42ec65911e35b41e4759f9b43cc"}],"stats":{"total":27,"additions":23,"deletions":4},"files":[{"sha":"411988331921abe64865a7e2d067f5602b623112","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationImpl.java","status":"modified","additions":14,"deletions":4,"changes":18,"blob_url":"https://github.com/apache/openjpa/blob/730ff8813eed5a331787765e2beeb6e3c5155f4b/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationImpl.java","raw_url":"https://github.com/apache/openjpa/raw/730ff8813eed5a331787765e2beeb6e3c5155f4b/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationImpl.java?ref=730ff8813eed5a331787765e2beeb6e3c5155f4b","patch":"@@ -53,6 +53,7 @@\n import java.util.MissingResourceException;\n import java.util.Properties;\n import java.util.Set;\n+import java.util.TreeMap;\n import java.util.TreeSet;\n \n import org.apache.commons.lang.StringUtils;\n@@ -125,6 +126,8 @@\n     // cache descriptors\n     private PropertyDescriptor[] _pds = null;\n     private MethodDescriptor[] _mds = null;\n+    \n+    private boolean getVisibleOnly = false;\n \n     /**\n      * Default constructor. Attempts to load default properties through\n@@ -589,11 +592,11 @@ private String findLocalized(String key, boolean fatal, Class<?> scope) {\n         // hashcode contracts\n         Map<String, String> clone;\n         if (_props == null)\n-            clone = new HashMap<String, String>();\n+            clone = new TreeMap<String, String>();\n         else if (_props instanceof Properties)\n             clone = (Map) ((Properties) _props).clone();\n         else\n-            clone = new HashMap<String, String>(_props);\n+            clone = new TreeMap<String, String>(_props);\n \n         // if no existing properties or the properties should contain entries\n         // with default values, add values to properties\n@@ -613,13 +616,17 @@ else if (_props instanceof Properties)\n                     setValue(clone, val, str);\n             }\n             if (_props == null)\n-                _props = new HashMap(clone);\n+                _props = new TreeMap(clone);\n         }\n         return clone;\n     }\n     \n     public Map<String, String> getAllProperties() {\n-        return toProperties(true, true);\n+        boolean saveGetVisibleOnly = getVisibleOnly;\n+        getVisibleOnly = true;\n+        Map<String, String> properties = toProperties(true, true);\n+        getVisibleOnly = saveGetVisibleOnly;\n+        return properties;\n     }\n \n     public Map<String, String> toProperties(boolean storeDefaults) {\n@@ -725,6 +732,9 @@ private void setValue(Map map, Value val, Object o) {\n                 }\n             }\n         }\n+        if (getVisibleOnly && !val.isVisible()) {\n+            return;\n+        }\n         map.put(key, o);\n     }\n "},{"sha":"18dbe1da505a38b0418651d49fb726d1a9f98053","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Value.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/730ff8813eed5a331787765e2beeb6e3c5155f4b/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Value.java","raw_url":"https://github.com/apache/openjpa/raw/730ff8813eed5a331787765e2beeb6e3c5155f4b/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Value.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Value.java?ref=730ff8813eed5a331787765e2beeb6e3c5155f4b","patch":"@@ -52,6 +52,7 @@\n     private boolean isDynamic = false;\n     private String originalValue = null;\n     private Set<String> otherNames = null;\n+    private boolean visible = true;\n \n     /**\n      * Default constructor.\n@@ -550,4 +551,12 @@ public Object clone() {\n             return null;\n         }\n     }\n+\n+    public boolean isVisible() {\n+        return visible;\n+    }\n+\n+    public void setVisible(boolean visible) {\n+        this.visible = visible;\n+    }\n }"}]}

