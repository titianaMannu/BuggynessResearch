{"sha":"732ff354b38ef9335d4ccffc40eedc1a909059bd","node_id":"MDY6Q29tbWl0MjA2MzY0OjczMmZmMzU0YjM4ZWY5MzM1ZDRjY2ZmYzQwZWVkYzFhOTA5MDU5YmQ=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2010-03-12T16:14:47Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2010-03-12T16:14:47Z"},"message":"OPENJPA-1566: Allow access to keys of the statistics.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@922311 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"78fd47834a0cc16119b78988ae3d8b2a5f1fd625","url":"https://api.github.com/repos/apache/openjpa/git/trees/78fd47834a0cc16119b78988ae3d8b2a5f1fd625"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/732ff354b38ef9335d4ccffc40eedc1a909059bd","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/732ff354b38ef9335d4ccffc40eedc1a909059bd","html_url":"https://github.com/apache/openjpa/commit/732ff354b38ef9335d4ccffc40eedc1a909059bd","comments_url":"https://api.github.com/repos/apache/openjpa/commits/732ff354b38ef9335d4ccffc40eedc1a909059bd/comments","author":null,"committer":null,"parents":[{"sha":"f04031edc128146bb7cfa52e072affb904930a43","url":"https://api.github.com/repos/apache/openjpa/commits/f04031edc128146bb7cfa52e072affb904930a43","html_url":"https://github.com/apache/openjpa/commit/f04031edc128146bb7cfa52e072affb904930a43"}],"stats":{"total":12,"additions":12,"deletions":0},"files":[{"sha":"be0306d6cc262c7eb9235bd0faa3a8809df3b2ac","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryStatistics.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/732ff354b38ef9335d4ccffc40eedc1a909059bd/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryStatistics.java","raw_url":"https://github.com/apache/openjpa/raw/732ff354b38ef9335d4ccffc40eedc1a909059bd/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryStatistics.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryStatistics.java?ref=732ff354b38ef9335d4ccffc40eedc1a909059bd","patch":"@@ -23,6 +23,7 @@\n import java.util.Date;\n import java.util.HashMap;\n import java.util.Map;\n+import java.util.Set;\n \n /**\n  * Records query execution statistics.\n@@ -38,6 +39,11 @@\n  * \n  */\n public interface QueryStatistics<T> extends Serializable {\n+    \n+    /**\n+     *  Gets all the identifier keys for the cached queries.\n+     */\n+    public Set<T> keys();\n \t\n \t/**\n \t * Record that the given query has been executed. \n@@ -126,6 +132,10 @@\n \t\tprivate Map<T, long[]> astats = new HashMap<T, long[]>();\n \t\tprivate Date start = new Date();\n \t\tprivate Date since = start;\n+\t\t\n+\t\tpublic Set<T> keys() {\n+\t\t    return stats.keySet();\n+\t\t}\n \n \t\tpublic long getExecutionCount() {\n \t\t\treturn stat[READ];\n@@ -205,6 +215,8 @@ private void addSample(Map<T, long[]> target, T query, int i) {\n \t\t}\n \t\t\n \t\tpublic void recordExecution(T query) {\n+\t\t    if (query == null)\n+\t\t        return;\n \t\t    boolean cached = (astats.containsKey(query));\n \t\t\taddSample(query, READ);\n \t\t\tif (cached)"}]}

