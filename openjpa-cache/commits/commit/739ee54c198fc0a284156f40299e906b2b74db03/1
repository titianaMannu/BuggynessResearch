{"sha":"739ee54c198fc0a284156f40299e906b2b74db03","node_id":"MDY6Q29tbWl0MjA2MzY0OjczOWVlNTRjMTk4ZmMwYTI4NDE1NmY0MDI5OWU5MDZiMmI3NGRiMDM=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-10-11T20:00:17Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-10-11T20:00:17Z"},"message":"OPENJPA-1830 Deserialization of EMF causes openjpa.connectionPassword to be overwritten with Value.INVISIBLE\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1021488 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"93d9ab7e1ecca83fe841ef69942a57bba8e00fbf","url":"https://api.github.com/repos/apache/openjpa/git/trees/93d9ab7e1ecca83fe841ef69942a57bba8e00fbf"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/739ee54c198fc0a284156f40299e906b2b74db03","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/739ee54c198fc0a284156f40299e906b2b74db03","html_url":"https://github.com/apache/openjpa/commit/739ee54c198fc0a284156f40299e906b2b74db03","comments_url":"https://api.github.com/repos/apache/openjpa/commits/739ee54c198fc0a284156f40299e906b2b74db03/comments","author":null,"committer":null,"parents":[{"sha":"9618edd2f101fc4b79aa40bb41bcf155081dc649","url":"https://api.github.com/repos/apache/openjpa/commits/9618edd2f101fc4b79aa40bb41bcf155081dc649","html_url":"https://github.com/apache/openjpa/commit/9618edd2f101fc4b79aa40bb41bcf155081dc649"}],"stats":{"total":21,"additions":9,"deletions":12},"files":[{"sha":"d8ca8889868698a7bdac2dcb82e7ee66192dba43","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationImpl.java","status":"modified","additions":8,"deletions":7,"changes":15,"blob_url":"https://github.com/apache/openjpa/blob/739ee54c198fc0a284156f40299e906b2b74db03/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationImpl.java","raw_url":"https://github.com/apache/openjpa/raw/739ee54c198fc0a284156f40299e906b2b74db03/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationImpl.java?ref=739ee54c198fc0a284156f40299e906b2b74db03","patch":"@@ -585,9 +585,7 @@ private String findLocalized(String key, boolean fatal, Class<?> scope) {\n      * \n      * @param storeDefaults\n      *            whether or not to retrieve a property if its value is the\n-     *            default value. This parameter is irrelevant if getAll is true.\n-     * @param getAll\n-     *            whether or not to get all of the properties\n+     *            default value.\n      * @return\n      */\n     public Map toProperties(boolean storeDefaults) {\n@@ -606,10 +604,11 @@ else if (_props instanceof Properties)\n         // with default values, add values to properties\n         if (_props == null || storeDefaults) {\n             String str;\n-            for (Value val : _vals) { \n+            for (Value val : _vals) {\n+                // NOTE: Following was removed to hide Value.INVISIBLE properties, like connectionPassword\n                 // if key in existing properties, we already know value is up to date\n-//                if (_props != null && Configurations.containsProperty(val, _props) && val.isVisible())\n-//                    continue;\n+                //if (_props != null && Configurations.containsProperty(val, _props) && val.isVisible())\n+                //    continue;\n                 str = val.getString();\n                 if ((str != null && (storeDefaults || !str.equals(val.getDefault()))))\n                     setValue(clone, val);\n@@ -651,7 +650,9 @@ else if (map instanceof Properties)\n             if (o == null)\n                 continue;\n             if (o instanceof String) {\n-                if (!StringUtils.equals((String) o, val.getString()))\n+                // OPENJPA-1830 Do not overwrite existing string values with \"******\"\n+                if ((!StringUtils.equals((String) o, val.getString())) &&\n+                        (!StringUtils.equals((String) o, Value.INVISIBLE)))\n                     val.setString((String) o);\n             } else {\n                 ser &= o instanceof Serializable;"},{"sha":"631c2cdf434b8dba2c424e7b564d690f53699950","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/TestPropertiesMethods.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/739ee54c198fc0a284156f40299e906b2b74db03/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/TestPropertiesMethods.java","raw_url":"https://github.com/apache/openjpa/raw/739ee54c198fc0a284156f40299e906b2b74db03/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/TestPropertiesMethods.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/TestPropertiesMethods.java?ref=739ee54c198fc0a284156f40299e906b2b74db03","patch":"@@ -24,7 +24,6 @@\n import java.util.Set;\n \n import javax.persistence.EntityManager;\n-import javax.persistence.EntityManagerFactory;\n import javax.persistence.Persistence;\n \n import junit.framework.TestCase;"},{"sha":"3ade10d22440487063cdc35deb6926c9d07d18f6","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/TestSerializedFactory.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/739ee54c198fc0a284156f40299e906b2b74db03/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/TestSerializedFactory.java","raw_url":"https://github.com/apache/openjpa/raw/739ee54c198fc0a284156f40299e906b2b74db03/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/TestSerializedFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/simple/TestSerializedFactory.java?ref=739ee54c198fc0a284156f40299e906b2b74db03","patch":"@@ -22,10 +22,7 @@\n \n import javax.persistence.EntityManager;\n import javax.persistence.EntityManagerFactory;\n-import javax.persistence.EntityTransaction;\n-\n import junit.textui.TestRunner;\n-import org.apache.openjpa.persistence.OpenJPAEntityManager;\n import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n \n /**\n@@ -36,7 +33,7 @@\n public class TestSerializedFactory extends SingleEMFTestCase {\n \n     public void setUp() {\n-        setUp(AllFieldTypes.class);\n+        setUp(AllFieldTypes.class, CLEAR_TABLES);\n     }\n \n     /**"}]}

