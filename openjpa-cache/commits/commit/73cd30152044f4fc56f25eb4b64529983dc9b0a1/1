{"sha":"73cd30152044f4fc56f25eb4b64529983dc9b0a1","node_id":"MDY6Q29tbWl0MjA2MzY0OjczY2QzMDE1MjA0NGY0ZmM1NmYyNWViNGI2NDUyOTk4M2RjOWIwYTE=","commit":{"author":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-11-19T19:48:49Z"},"committer":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-11-19T19:48:49Z"},"message":"OPENJPA-1892: Fix NPE in DataCacheStoreManager.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1036988 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"4fb5f0286a4602840ab7e49319cb2ecad0354b63","url":"https://api.github.com/repos/apache/openjpa/git/trees/4fb5f0286a4602840ab7e49319cb2ecad0354b63"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/73cd30152044f4fc56f25eb4b64529983dc9b0a1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/73cd30152044f4fc56f25eb4b64529983dc9b0a1","html_url":"https://github.com/apache/openjpa/commit/73cd30152044f4fc56f25eb4b64529983dc9b0a1","comments_url":"https://api.github.com/repos/apache/openjpa/commits/73cd30152044f4fc56f25eb4b64529983dc9b0a1/comments","author":null,"committer":null,"parents":[{"sha":"24e17363ef3faf489bf187b26f748eb80a19d3a0","url":"https://api.github.com/repos/apache/openjpa/commits/24e17363ef3faf489bf187b26f748eb80a19d3a0","html_url":"https://github.com/apache/openjpa/commit/24e17363ef3faf489bf187b26f748eb80a19d3a0"}],"stats":{"total":167,"additions":164,"deletions":3},"files":[{"sha":"127d50a6e11d750829e0e6f4fd883885b287ed3f","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCacheStoreManager.java","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/73cd30152044f4fc56f25eb4b64529983dc9b0a1/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCacheStoreManager.java","raw_url":"https://github.com/apache/openjpa/raw/73cd30152044f4fc56f25eb4b64529983dc9b0a1/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCacheStoreManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCacheStoreManager.java?ref=73cd30152044f4fc56f25eb4b64529983dc9b0a1","patch":"@@ -392,9 +392,14 @@ public boolean initialize(OpenJPAStateManager sm, PCState state, FetchConfigurat\n                            && ((fetch.getCacheStoreMode() == DataCacheStoreMode.USE && !alreadyCached)\n                             || (fetch.getCacheStoreMode() == DataCacheStoreMode.REFRESH));\n         if (updateCache) {\n-            cacheStateManager(cache, sm, data);\n-            if (stats.isEnabled()) {\n-                ((CacheStatisticsSPI) stats).newPut(sm.getMetaData().getDescribedType());\n+            // It is possible that the \"cacheability\" of the provided SM changed after hitting the DB. This can happen\n+            // when we are operating against an Entity that is in some sort of inheritance structure.\n+            cache = _mgr.selectCache(sm);\n+            if (cache != null) {\n+                cacheStateManager(cache, sm, data);\n+                if (stats.isEnabled()) {\n+                    ((CacheStatisticsSPI) stats).newPut(sm.getMetaData().getDescribedType());\n+                }\n             }\n         }\n         return fromDatabase || alreadyCached;"},{"sha":"4c5245465056eab2272d638137b4dc171d1d4d8a","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/cache/jpa/TestCacheModeDisableSelectiveInheritance.java","status":"added","additions":65,"deletions":0,"changes":65,"blob_url":"https://github.com/apache/openjpa/blob/73cd30152044f4fc56f25eb4b64529983dc9b0a1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/cache/jpa/TestCacheModeDisableSelectiveInheritance.java","raw_url":"https://github.com/apache/openjpa/raw/73cd30152044f4fc56f25eb4b64529983dc9b0a1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/cache/jpa/TestCacheModeDisableSelectiveInheritance.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/cache/jpa/TestCacheModeDisableSelectiveInheritance.java?ref=73cd30152044f4fc56f25eb4b64529983dc9b0a1","patch":"@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.cache.jpa;\n+\n+import javax.persistence.EntityManager;\n+\n+import org.apache.openjpa.persistence.cache.jpa.featureSelection.ChildUncacheable;\n+import org.apache.openjpa.persistence.cache.jpa.featureSelection.ParentUnspecifiedEntity;\n+import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n+\n+/**\n+ * This test was added for https://issues.apache.org/jira/browse/OPENJPA-1892.\n+ * \n+ * The key to this test is that the ChildUncacheable is uncacheable and ParentUnspecifiedEntity is cacheable. In the\n+ * case were we pass the root Entity in em.find(ParentUnspecifiedEntity.class, 1) AND the id we passed corresponds to\n+ * the child Entity we shouldn't be caching this result.\n+ * \n+ */\n+public class TestCacheModeDisableSelectiveInheritance extends SingleEMFTestCase {\n+    Object[] params =\n+        new Object[] { ChildUncacheable.class, ParentUnspecifiedEntity.class, CLEAR_TABLES,\n+            \"javax.persistence.sharedCache.mode\", \"DISABLE_SELECTIVE\", \"openjpa.DataCache\", \"true\" };\n+\n+    @Override\n+    public void setUp() throws Exception {\n+        super.setUp(params);\n+    }\n+\n+    @Override\n+    public void tearDown() throws Exception {\n+\n+    }\n+\n+    public void testSimpleFind() throws Exception {\n+        EntityManager em = emf.createEntityManager();\n+        try {\n+            ChildUncacheable c = new ChildUncacheable();\n+            em.getTransaction().begin();\n+            em.persist(c);\n+            em.getTransaction().commit();\n+            assertEquals(c, em.find(ChildUncacheable.class, c.getId()));\n+            em.clear();\n+            assertEquals(c.getId(), em.find(ChildUncacheable.class, c.getId()).getId());\n+\n+        } finally {\n+            em.close();\n+        }\n+    }\n+}"},{"sha":"0ebdf818b6c3a0b97523f09048bc9bf1b62391e3","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/cache/jpa/featureSelection/ChildUncacheable.java","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/apache/openjpa/blob/73cd30152044f4fc56f25eb4b64529983dc9b0a1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/cache/jpa/featureSelection/ChildUncacheable.java","raw_url":"https://github.com/apache/openjpa/raw/73cd30152044f4fc56f25eb4b64529983dc9b0a1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/cache/jpa/featureSelection/ChildUncacheable.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/cache/jpa/featureSelection/ChildUncacheable.java?ref=73cd30152044f4fc56f25eb4b64529983dc9b0a1","patch":"@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.cache.jpa.featureSelection;\n+\n+import javax.persistence.Basic;\n+import javax.persistence.Cacheable;\n+import javax.persistence.Entity;\n+\n+@Entity\n+@Cacheable(value = false)\n+public class ChildUncacheable extends ParentUnspecifiedEntity {\n+    @Basic\n+    String child;\n+}"},{"sha":"62be9aa98fc39ecd8a4af690a0f83b9f284cb699","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/cache/jpa/featureSelection/ParentUnspecifiedEntity.java","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/apache/openjpa/blob/73cd30152044f4fc56f25eb4b64529983dc9b0a1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/cache/jpa/featureSelection/ParentUnspecifiedEntity.java","raw_url":"https://github.com/apache/openjpa/raw/73cd30152044f4fc56f25eb4b64529983dc9b0a1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/cache/jpa/featureSelection/ParentUnspecifiedEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/cache/jpa/featureSelection/ParentUnspecifiedEntity.java?ref=73cd30152044f4fc56f25eb4b64529983dc9b0a1","patch":"@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.cache.jpa.featureSelection;\n+\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+import javax.persistence.Version;\n+\n+@Entity\n+public class ParentUnspecifiedEntity {\n+    @Id\n+    @Column(name = \"ID\")\n+    protected int id;\n+\n+    @Version\n+    @Column(name = \"VERSN\")\n+    protected int version;\n+\n+    protected String name;\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public int getId() {\n+        return id;\n+    }\n+\n+    public void setId(int id) {\n+        this.id = id;\n+    }\n+\n+    public int getVersion() {\n+        return version;\n+    }\n+\n+    public void setVersion(int version) {\n+        this.version = version;\n+    }\n+}"}]}

