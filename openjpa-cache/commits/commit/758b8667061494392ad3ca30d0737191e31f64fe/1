{"sha":"758b8667061494392ad3ca30d0737191e31f64fe","node_id":"MDY6Q29tbWl0MjA2MzY0Ojc1OGI4NjY3MDYxNDk0MzkyYWQzY2EzMGQwNzM3MTkxZTMxZjY0ZmU=","commit":{"author":{"name":"Romain Manni-Bucau","email":"rmannibucau@gmail.com","date":"2020-09-30T10:25:03Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2020-09-30T10:25:03Z"},"message":"Merge pull request #75 from eolivelli/fix/OPENJPA-2832\n\nOPENJPA-2832 DROP COLUMN does not use delimiters and always add double quotes","tree":{"sha":"1fbcd3d85a48da76442e278b0f7526f4c7b8977e","url":"https://api.github.com/repos/apache/openjpa/git/trees/1fbcd3d85a48da76442e278b0f7526f4c7b8977e"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/758b8667061494392ad3ca30d0737191e31f64fe","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfdFz/CRBK7hj4Ov3rIwAAdHIIAAkYBnNpl/DLDU4WIFJ6Xzvw\nMMvYwJ/uin4SIeFHtJ1OZTcSM+B9NTErhAQyKkLHvZ9K1QKC1Q6m6m+8toxD7Ero\nGAfFvwMGquZRuIV5HLW0fBMhtRAJ3oN+YmzDE8qx/KO3p+QKWi33WsZAooKKiGqk\npd9RYzDV2cQIa2Ek/jiMAgM1qTq0kwf4LMh4cHiu5Ohf4trpAavV5N5fUBvyKZxY\nqDHBw1Zdm954OVx7AqkHCwPfwmmQIKX+M2aYf0A2/lVJLfYYmytTAYFtOt7/nhHo\nfaSPEZZRhAiypaOIhWpIbDAg6lhAHRm4yXJYBWgzBjt3354aIccvIk7XjtxsLVE=\n=/VQB\n-----END PGP SIGNATURE-----\n","payload":"tree 1fbcd3d85a48da76442e278b0f7526f4c7b8977e\nparent 049c2ef163d3632f9e91abb91b5ac0d52584d4a9\nparent 61f11a7088f5155d01b65f426a4f290a7ee6ea1d\nauthor Romain Manni-Bucau <rmannibucau@gmail.com> 1601461503 +0200\ncommitter GitHub <noreply@github.com> 1601461503 +0200\n\nMerge pull request #75 from eolivelli/fix/OPENJPA-2832\n\nOPENJPA-2832 DROP COLUMN does not use delimiters and always add double quotes"}},"url":"https://api.github.com/repos/apache/openjpa/commits/758b8667061494392ad3ca30d0737191e31f64fe","html_url":"https://github.com/apache/openjpa/commit/758b8667061494392ad3ca30d0737191e31f64fe","comments_url":"https://api.github.com/repos/apache/openjpa/commits/758b8667061494392ad3ca30d0737191e31f64fe/comments","author":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"049c2ef163d3632f9e91abb91b5ac0d52584d4a9","url":"https://api.github.com/repos/apache/openjpa/commits/049c2ef163d3632f9e91abb91b5ac0d52584d4a9","html_url":"https://github.com/apache/openjpa/commit/049c2ef163d3632f9e91abb91b5ac0d52584d4a9"},{"sha":"61f11a7088f5155d01b65f426a4f290a7ee6ea1d","url":"https://api.github.com/repos/apache/openjpa/commits/61f11a7088f5155d01b65f426a4f290a7ee6ea1d","html_url":"https://github.com/apache/openjpa/commit/61f11a7088f5155d01b65f426a4f290a7ee6ea1d"}],"stats":{"total":34,"additions":33,"deletions":1},"files":[{"sha":"0776702eb0c93babf83c50ea63efd0033b6124c3","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/758b8667061494392ad3ca30d0737191e31f64fe/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/758b8667061494392ad3ca30d0737191e31f64fe/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java?ref=758b8667061494392ad3ca30d0737191e31f64fe","patch":"@@ -3840,7 +3840,7 @@ public String getAlterSequenceSQL(Sequence seq) {\n             return new String[0];\n         return new String[]{ \"ALTER TABLE \"\n             + getFullName(column.getTable(), false)\n-            + \" DROP COLUMN \" + column };\n+            + \" DROP COLUMN \" + toDBName(column.getIdentifier()) };\n     }\n \n     /**"},{"sha":"33254dc1cb19ab0c7c739e2d8b47f08d434c9e05","filename":"openjpa-jdbc/src/test/java/org/apache/openjpa/jdbc/sql/TestDBDictionaryGeneratedSQL.java","status":"modified","additions":32,"deletions":0,"changes":32,"blob_url":"https://github.com/apache/openjpa/blob/758b8667061494392ad3ca30d0737191e31f64fe/openjpa-jdbc/src/test/java/org/apache/openjpa/jdbc/sql/TestDBDictionaryGeneratedSQL.java","raw_url":"https://github.com/apache/openjpa/raw/758b8667061494392ad3ca30d0737191e31f64fe/openjpa-jdbc/src/test/java/org/apache/openjpa/jdbc/sql/TestDBDictionaryGeneratedSQL.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/test/java/org/apache/openjpa/jdbc/sql/TestDBDictionaryGeneratedSQL.java?ref=758b8667061494392ad3ca30d0737191e31f64fe","patch":"@@ -25,6 +25,7 @@\n import org.apache.openjpa.jdbc.conf.JDBCConfiguration;\n import org.apache.openjpa.jdbc.identifier.DBIdentifier;\n import org.apache.openjpa.jdbc.identifier.DBIdentifierUtilImpl;\n+import org.apache.openjpa.jdbc.schema.Column;\n import org.apache.openjpa.jdbc.schema.Table;\n import org.apache.openjpa.util.UserException;\n import org.jmock.Expectations;\n@@ -192,4 +193,35 @@ public void testOverridePropertyShortName() {\n         assertTrue(sqls[0].contains(\"NameIsRight\"));\n         assertTrue(sqls[0].contains(\"schema\"));\n     }\n+\n+    @Test\n+    public void testDropColumnWithDelimiters() {\n+        final JDBCConfiguration mockConfiguration = context.mock(JDBCConfiguration.class);\n+        final DBIdentifierUtilImpl idImpl = new DBIdentifierUtilImpl();\n+\n+        context.checking(new Expectations()\n+        {\n+            {\n+                allowing(mockConfiguration).getIdentifierUtilInstance();\n+                will(returnValue(idImpl));\n+\n+                allowing(mockConfiguration);\n+            }\n+        });\n+\n+        DBDictionary dict = new DBDictionary();\n+        dict.setDelimitIdentifiers(true);\n+        dict.setSupportsDelimitedIdentifiers(true);\n+        dict.setLeadingDelimiter(\"`\");\n+        dict.setTrailingDelimiter(\"`\");\n+        dict.setConfiguration(mockConfiguration);\n+        Table table = new Table();\n+        table.setIdentifier(dict.fromDBName(\"NameIsRight\", DBIdentifier.DBIdentifierType.TABLE));\n+\n+        Column column = new Column(dict.fromDBName(\"MyColumn\", DBIdentifier.DBIdentifierType.COLUMN), table);\n+\n+        String[] sqls = dict.getDropColumnSQL(column);\n+        assertEquals(1, sqls.length);\n+        assertEquals(sqls[0], \"ALTER TABLE `NameIsRight` DROP COLUMN `MyColumn`\");\n+    }\n }"}]}

