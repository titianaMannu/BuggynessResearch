{"sha":"767f670490e9d73ab8b6ca0c21a3b9d9f4d398af","node_id":"MDY6Q29tbWl0MjA2MzY0Ojc2N2Y2NzA0OTBlOWQ3M2FiOGI2Y2EwYzIxYTNiOWQ5ZjRkMzk4YWY=","commit":{"author":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-02-25T18:32:35Z"},"committer":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-02-25T18:32:35Z"},"message":"OPENJPA-1539: Allow DataCacheManagerImpl.isCachable(ClassMetaData meta) to cache the cacheability for each given type.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@916388 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"6389043e1c5a17060e4858bae885b28a404857e7","url":"https://api.github.com/repos/apache/openjpa/git/trees/6389043e1c5a17060e4858bae885b28a404857e7"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/767f670490e9d73ab8b6ca0c21a3b9d9f4d398af","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/767f670490e9d73ab8b6ca0c21a3b9d9f4d398af","html_url":"https://github.com/apache/openjpa/commit/767f670490e9d73ab8b6ca0c21a3b9d9f4d398af","comments_url":"https://api.github.com/repos/apache/openjpa/commits/767f670490e9d73ab8b6ca0c21a3b9d9f4d398af/comments","author":null,"committer":null,"parents":[{"sha":"7b1ee0cbcc329b4cd2d92a3ab942a13b7de35d00","url":"https://api.github.com/repos/apache/openjpa/commits/7b1ee0cbcc329b4cd2d92a3ab942a13b7de35d00","html_url":"https://github.com/apache/openjpa/commit/7b1ee0cbcc329b4cd2d92a3ab942a13b7de35d00"}],"stats":{"total":19,"additions":10,"deletions":9},"files":[{"sha":"0f269f3f76ed72ee290d758a580f54aa51a46064","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCacheManagerImpl.java","status":"modified","additions":10,"deletions":9,"changes":19,"blob_url":"https://github.com/apache/openjpa/blob/767f670490e9d73ab8b6ca0c21a3b9d9f4d398af/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCacheManagerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/767f670490e9d73ab8b6ca0c21a3b9d9f4d398af/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCacheManagerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCacheManagerImpl.java?ref=767f670490e9d73ab8b6ca0c21a3b9d9f4d398af","patch":"@@ -18,23 +18,17 @@\n  */\n package org.apache.openjpa.datacache;\n \n-import java.util.Arrays;\n-import java.util.Collections;\n-import java.util.HashSet;\n-import java.util.Set;\n+import java.util.HashMap;\n+import java.util.Map;\n \n-import org.apache.commons.lang.StringUtils;\n import org.apache.openjpa.conf.OpenJPAConfiguration;\n import org.apache.openjpa.enhance.PCDataGenerator;\n import org.apache.openjpa.kernel.OpenJPAStateManager;\n-import org.apache.openjpa.lib.conf.Configuration;\n import org.apache.openjpa.lib.conf.ObjectValue;\n import org.apache.openjpa.lib.util.Closeable;\n import org.apache.openjpa.meta.ClassMetaData;\n import org.apache.openjpa.util.ImplHelper;\n \n-import serp.util.Strings;\n-\n /**\n  * Default data cache manager provides handle to utilities {@linkplain PCDataGenerator}, {@linkplain DataCacheScheduler}\n  * and {@linkplain CacheDistributionPolicy} for the cache operation. This implementation also determines whether a\n@@ -53,7 +47,8 @@\n     private DataCachePCDataGenerator _pcGenerator = null;\n     private DataCacheScheduler _scheduler = null;\n     private CacheDistributionPolicy _policy = new DefaultCacheDistributionPolicy();\n-\n+    private Map<ClassMetaData,Boolean> _cacheable = new HashMap<ClassMetaData, Boolean>();\n+    \n     public void initialize(OpenJPAConfiguration conf, ObjectValue dataCache, ObjectValue queryCache) {\n         _conf = conf;\n         _cache = (DataCache) dataCache.instantiate(DataCache.class, conf);\n@@ -137,10 +132,16 @@ public CacheDistributionPolicy getDistributionPolicy() {\n      * Affirms if the given type is eligible for cache.\n      */\n     public boolean isCachable(ClassMetaData meta) {\n+        Boolean res = _cacheable.get(meta);\n+        if(res != null){\n+            return res;\n+        }\n+\n         Boolean isCachable = isCacheableByMode(meta);\n         if (isCachable == null) {\n            isCachable = isCacheableByType(meta);\n         }\n+        _cacheable.put(meta, isCachable);\n         return isCachable;\n     }\n     "}]}

