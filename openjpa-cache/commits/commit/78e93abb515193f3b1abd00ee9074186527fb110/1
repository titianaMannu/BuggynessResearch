{"sha":"78e93abb515193f3b1abd00ee9074186527fb110","node_id":"MDY6Q29tbWl0MjA2MzY0Ojc4ZTkzYWJiNTE1MTkzZjNiMWFiZDAwZWU5MDc0MTg2NTI3ZmIxMTA=","commit":{"author":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-08-28T04:27:53Z"},"committer":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-08-28T04:27:53Z"},"message":"OPENJPA-1269: honor the table attribute in the MapKeyColumn annotation\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@808750 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"653efb48199d79df79a95b8d01c09f5bf20669f6","url":"https://api.github.com/repos/apache/openjpa/git/trees/653efb48199d79df79a95b8d01c09f5bf20669f6"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/78e93abb515193f3b1abd00ee9074186527fb110","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/78e93abb515193f3b1abd00ee9074186527fb110","html_url":"https://github.com/apache/openjpa/commit/78e93abb515193f3b1abd00ee9074186527fb110","comments_url":"https://api.github.com/repos/apache/openjpa/commits/78e93abb515193f3b1abd00ee9074186527fb110/comments","author":null,"committer":null,"parents":[{"sha":"250186fbcbf7b82437ae4e912cdcd92bab8640b8","url":"https://api.github.com/repos/apache/openjpa/commits/250186fbcbf7b82437ae4e912cdcd92bab8640b8","html_url":"https://github.com/apache/openjpa/commit/250186fbcbf7b82437ae4e912cdcd92bab8640b8"}],"stats":{"total":22,"additions":21,"deletions":1},"files":[{"sha":"63056ec7c6663169e736eaf7d90a2f27d57c03ba","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/AnnotationPersistenceMappingParser.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/78e93abb515193f3b1abd00ee9074186527fb110/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/AnnotationPersistenceMappingParser.java","raw_url":"https://github.com/apache/openjpa/raw/78e93abb515193f3b1abd00ee9074186527fb110/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/AnnotationPersistenceMappingParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/AnnotationPersistenceMappingParser.java?ref=78e93abb515193f3b1abd00ee9074186527fb110","patch":"@@ -1968,6 +1968,9 @@ private static Column newColumn(ElementJoinColumn join) {\n      */\n     protected void parseMapKeyColumn(FieldMapping fm, MapKeyColumn anno) {\n         int unique = 0;\n+        FieldMappingInfo info = fm.getMappingInfo();\n+        if (anno.table() != null && anno.table().length() > 0)\n+        info.setTableName(anno.table());\n         Column col = new Column();\n         setupMapKeyColumn(fm, col, anno);\n         unique |= (anno.unique()) ? TRUE : FALSE;"},{"sha":"f6034ade4178296b496213fb0a61c591bada5e36","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/Item2.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/78e93abb515193f3b1abd00ee9074186527fb110/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/Item2.java","raw_url":"https://github.com/apache/openjpa/raw/78e93abb515193f3b1abd00ee9074186527fb110/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/Item2.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/Item2.java?ref=78e93abb515193f3b1abd00ee9074186527fb110","patch":"@@ -29,6 +29,7 @@\n     int id;\n     \n     @ElementCollection\n+    @MapKeyColumn(name=\"IMAGE_NAME\", table=\"ITEM2_XXX\")\n     Map<String, String> images = new HashMap<String, String>();\n     \n     public int getId() {"},{"sha":"6d6b9d7dd7bd3b04d82f0b8cf010ff1e9a4810aa","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java","status":"modified","additions":17,"deletions":1,"changes":18,"blob_url":"https://github.com/apache/openjpa/blob/78e93abb515193f3b1abd00ee9074186527fb110/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java","raw_url":"https://github.com/apache/openjpa/raw/78e93abb515193f3b1abd00ee9074186527fb110/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java?ref=78e93abb515193f3b1abd00ee9074186527fb110","patch":"@@ -36,9 +36,10 @@\n \n import org.apache.openjpa.lib.log.Log;\n import org.apache.openjpa.persistence.ArgumentException;\n+import org.apache.openjpa.persistence.test.SQLListenerTestCase;\n import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n \n-public class TestEmbeddable extends SingleEMFTestCase {\n+public class TestEmbeddable extends SQLListenerTestCase {\n     private static final Calendar cal = new GregorianCalendar();\n     private static final Integer timeHash = new Integer(cal.hashCode());\n     public int numEmbeddables = 1;\n@@ -92,6 +93,7 @@ public void setUp() {\n             EntityA_Embed_MappedToOneCascadeDelete.class, EntityB2.class, \n             Book.class, Listing.class, Seller.class,\n             EntityA_Embed_Complex.class, CLEAR_TABLES);\n+            sql.clear();\n     }\n     \n     public void testEntityA_Coll_String() {\n@@ -1964,6 +1966,20 @@ public void createObjMapKeyClass() {\n         tran.begin();\n         em.flush();\n         tran.commit();\n+        boolean found = false;\n+        for (String sqlStr : sql) {\n+            if (sqlStr.toUpperCase().indexOf(\"ITEM2_XXX\") != -1) {\n+                found = true;\n+                break;\n+            } \n+            if (sqlStr.toUpperCase().indexOf(\"ITEM2_IMAGES\") != -1) {\n+                found = false;\n+                break;\n+            }\n+        }\n+        if (!found) {\n+            fail(\"Table name ITEM2_IMG specified in the MapKeyColumn annotation is not honored\");\n+        }\n         em.close();\n     }\n "}]}

