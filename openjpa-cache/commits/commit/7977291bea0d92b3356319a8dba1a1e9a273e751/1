{"sha":"7977291bea0d92b3356319a8dba1a1e9a273e751","node_id":"MDY6Q29tbWl0MjA2MzY0Ojc5NzcyOTFiZWEwZDkyYjMzNTYzMTlhOGRiYTFhMWU5YTI3M2U3NTE=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-08-21T02:21:44Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-08-21T02:21:44Z"},"message":"OPENJPA-293. Fixed bug with property access and booleans and 'is' accessors.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@567911 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"4ec87e18cc01c49de6afdb8f03a5ef7e9a47fa3b","url":"https://api.github.com/repos/apache/openjpa/git/trees/4ec87e18cc01c49de6afdb8f03a5ef7e9a47fa3b"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/7977291bea0d92b3356319a8dba1a1e9a273e751","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/7977291bea0d92b3356319a8dba1a1e9a273e751","html_url":"https://github.com/apache/openjpa/commit/7977291bea0d92b3356319a8dba1a1e9a273e751","comments_url":"https://api.github.com/repos/apache/openjpa/commits/7977291bea0d92b3356319a8dba1a1e9a273e751/comments","author":null,"committer":null,"parents":[{"sha":"3d22005bad92bb23973d8620a1b1e2649c772e46","url":"https://api.github.com/repos/apache/openjpa/commits/3d22005bad92bb23973d8620a1b1e2649c772e46","html_url":"https://github.com/apache/openjpa/commit/3d22005bad92bb23973d8620a1b1e2649c772e46"}],"stats":{"total":20,"additions":10,"deletions":10},"files":[{"sha":"4213372c7071a5e042315e5d448281a4fbc4b3d2","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java","status":"modified","additions":9,"deletions":10,"changes":19,"blob_url":"https://github.com/apache/openjpa/blob/7977291bea0d92b3356319a8dba1a1e9a273e751/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java","raw_url":"https://github.com/apache/openjpa/raw/7977291bea0d92b3356319a8dba1a1e9a273e751/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java?ref=7977291bea0d92b3356319a8dba1a1e9a273e751","patch":"@@ -657,13 +657,6 @@ private static String getSetterName(FieldMetaData fmd) {\n         return \"set\" + StringUtils.capitalize(fmd.getName());\n     }\n \n-    /**\n-     * Return the name of the getter method for the given field.\n-     */\n-    private static String getGetterName(FieldMetaData fmd) {\n-        return \"get\" + StringUtils.capitalize(fmd.getName());\n-    }\n-\n     /**\n      * Return the field returned by the given method, or null if none.\n      * Package-protected and static for testing.\n@@ -3325,8 +3318,12 @@ private void addSubclassSetMethod(FieldMetaData fmd)\n     }\n \n     private boolean setVisibilityToSuperMethod(BCMethod method) {\n-        BCMethod superMeth = _managedType.getMethods(method.getName(),\n-            method.getParamTypes())[0];\n+        BCMethod[] methods = _managedType.getMethods(method.getName(),\n+            method.getParamTypes());\n+        if (methods.length == 0)\n+            throw new UserException(_loc.get(\"no-accessor\",\n+                _managedType.getName(), method.getName()));\n+        BCMethod superMeth = methods[0];\n         if (superMeth.isPrivate()) {\n             method.makePrivate();\n             return true;\n@@ -3348,7 +3345,9 @@ private boolean setVisibilityToSuperMethod(BCMethod method) {\n      * performs any necessary field tracking.\n      */\n     private void addSubclassGetMethod(FieldMetaData fmd) {\n-        String methName = getGetterName(fmd);\n+        String methName = \"get\" + StringUtils.capitalize(fmd.getName());\n+        if (_managedType.getMethods(methName, new Class[0]).length == 0)\n+            methName = \"is\" + StringUtils.capitalize(fmd.getName());\n         BCMethod getter = _pc.declareMethod(methName, fmd.getDeclaredType(),\n             null);\n         setVisibilityToSuperMethod(getter);"},{"sha":"c1e12f2b054a72e8f62185ed1a7b6bce6cc05807","filename":"openjpa-kernel/src/main/resources/org/apache/openjpa/enhance/localizer.properties","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/7977291bea0d92b3356319a8dba1a1e9a273e751/openjpa-kernel/src/main/resources/org/apache/openjpa/enhance/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/7977291bea0d92b3356319a8dba1a1e9a273e751/openjpa-kernel/src/main/resources/org/apache/openjpa/enhance/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/resources/org/apache/openjpa/enhance/localizer.properties?ref=7977291bea0d92b3356319a8dba1a1e9a273e751","patch":"@@ -194,3 +194,4 @@ subclasser-fetch-group-override: The field {1} in type {0} is configured to be \\\n     lazily loaded, but lazy loading is not available for classes that use field\\\n     access when not running the OpenJPA enhancer or when dynamic class \\\n     redefinition is not available.\n+no-accessor: Could not find method called {0} in type {1}.\n\\ No newline at end of file"}]}

