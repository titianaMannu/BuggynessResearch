{"sha":"7b1d5067d6be77ad953a907d7ca12027acc975bd","node_id":"MDY6Q29tbWl0MjA2MzY0OjdiMWQ1MDY3ZDZiZTc3YWQ5NTNhOTA3ZDdjYTEyMDI3YWNjOTc1YmQ=","commit":{"author":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2010-08-10T22:22:10Z"},"committer":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2010-08-10T22:22:10Z"},"message":"OPENJPA-1753 update lockmgr RefreshPermutation for more consistent test cycle.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@984243 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a158ffd0b3cb1345f6f21e767593c20b0575e473","url":"https://api.github.com/repos/apache/openjpa/git/trees/a158ffd0b3cb1345f6f21e767593c20b0575e473"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/7b1d5067d6be77ad953a907d7ca12027acc975bd","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/7b1d5067d6be77ad953a907d7ca12027acc975bd","html_url":"https://github.com/apache/openjpa/commit/7b1d5067d6be77ad953a907d7ca12027acc975bd","comments_url":"https://api.github.com/repos/apache/openjpa/commits/7b1d5067d6be77ad953a907d7ca12027acc975bd/comments","author":null,"committer":null,"parents":[{"sha":"4fd4c17c769a8eb2b36fc4ca51191d654b03849f","url":"https://api.github.com/repos/apache/openjpa/commits/4fd4c17c769a8eb2b36fc4ca51191d654b03849f","html_url":"https://github.com/apache/openjpa/commit/4fd4c17c769a8eb2b36fc4ca51191d654b03849f"}],"stats":{"total":199,"additions":62,"deletions":137},"files":[{"sha":"2e5cba2ea2444a8d8a50ec6d612f2c943145c5f6","filename":"openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerRefreshPermutation.java","status":"modified","additions":62,"deletions":137,"changes":199,"blob_url":"https://github.com/apache/openjpa/blob/7b1d5067d6be77ad953a907d7ca12027acc975bd/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerRefreshPermutation.java","raw_url":"https://github.com/apache/openjpa/raw/7b1d5067d6be77ad953a907d7ca12027acc975bd/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerRefreshPermutation.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerRefreshPermutation.java?ref=7b1d5067d6be77ad953a907d7ca12027acc975bd","patch":"@@ -308,7 +308,7 @@ public void testRefreshPessimsiticForceIncPessimisticForceInc() {\n         commonRefreshTest(\n             \"testRefresh(PessimsiticForceInc,Commit/PessimisticForceInc,Commit)\",\n             LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 3, null, \n-            LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 3, null);\n+            LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 2, null);\n         commonRefreshTest(\n             \"testRefresh(PessimsiticForceInc,Commit/PessimisticForceInc,Rollback)\",\n             LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 2, null,\n@@ -328,145 +328,70 @@ private void commonRefreshTest( String testName,\n                 \", versionInc= +\" + t2VersionInc +\n                 \", expectedEx= \" + Arrays.toString(t2Exceptions)};\n             \n-        String t1Message1 = \"Refresh in Thread 1\";\n-        String t1Message2 = \"Refresh in Thread 1 Again\";\n-        String t2Message1 = \"Refresh in Thread 2\";\n+        String t1Message1 = \"Refresh in Thread 0\";\n+        String t1Message2 = \"Refresh in Thread 0 Again\";\n+        String t2Message1 = \"Refresh in Thread 1\";\n         \n-//        Object[][] threadMain = {\n-//                {Act.CreateEm},\n-//                {Act.Find},\n-//                {Act.SaveVersion},\n-//                {Act.TestEmployee, 1, Default_FirstName},\n-//                \n-//                {Act.CloseEm},\n-//                {Act.Sleep, 100},\n-//\n-//                {Act.CreateEm},\n-//                {Act.StartTx},\n-//                {Act.RefreshWithLock, 1, t1Lock},\n-//                {Act.SaveVersion},\n-//                {Act.TestException},\n-//                \n-//                {Act.NewThread, 1 },\n-//                {Act.StartThread, 1 },\n-//                \n-//                {Act.Wait},\n-//                {Act.UpdateEmployee},                \n-//                {t1IsCommit},\n-//                \n-//                {Act.Notify, 1},\n-//\n-//                {Act.Find},\n-//                \n-//                {Act.WaitAllChildren},\n-//                {Act.Find},\n-//                {Act.TestEmployee, 1, null, t1VersionInc},\n-//                {Act.TestException, 0, t1Exceptions },\n-//                {Act.TestException, 1, t2Exceptions },\n-//                {Act.CloseEm}\n-//            };\n-//\n-//            Object[][] thread1 = {\n-//                {Act.CreateEm},\n-//                {Act.StartTx},\n-//                {Act.FindWithLock, 1, t2Lock},\n-//                {Act.SaveVersion},\n-//                {Act.TestException},\n-//                {Act.Notify, 0},\n-//                \n-//                {Act.Wait},\n-//                {Act.Sleep, 2000},  // sleep for at least 2 sec so that the entity name updated with timestamp \n-//                                    // in each of the 2 threads are different. \n-//                {Act.UpdateEmployee},\n-//                \n-//                {t2IsCommit},\n-//                {Act.Sleep, 1000},\n-//                {Act.Find},\n-//                {Act.TestEmployee, 1, null, t2VersionInc},\n-//                {Act.CloseEm}\n-//            };\n-//            launchActionSequence(testName, parameters, threadMain, thread1);\n-\n         Object[][] threadMain = {\n-            {Act.CreateEm},\n-            {Act.Find},\n-            {Act.SaveVersion},\n-            {Act.TestEmployee, 1, Default_FirstName},\n-            \n-            {Act.NewThread, 1 },\n-            {Act.NewThread, 2 },\n-            \n-            {Act.StartThread, 1 },\n-            {Act.Wait},\n-            \n-            {Act.StartThread, 2 },            \n-            {Act.WaitAllChildren},\n-            \n-            {Act.Find},\n-            {Act.TestEmployee, 1},\n-            {Act.TestException, 1, t1Exceptions },\n-            {Act.TestException, 2, t2Exceptions },\n-            {Act.CloseEm}\n-        };\n-        Object[][] thread1 = {\n-            {Act.CreateEm},\n-            {Act.Find, 1},\n-            {Act.SaveVersion},\n-            {Act.TestEmployee, 1, Default_FirstName},\n-            {Act.Notify, 0},\n-            {Act.Wait},\n-            \n-            {Act.StartTx},\n-            {Act.UpdateEmployee, 1, t1Message1},\n-            {Act.TestEmployee, 1, t1Message1},\n-            {Act.CommitTx},\n-            {Act.TestException},\n-            {Act.Notify, 2},\n-            {Act.Wait},\n-            \n-            {Act.StartTx},\n-            {Act.RefreshWithLock, 1, t1Lock },\n-            {Act.TestLockMode, 1, t1Lock},\n-            {Act.TestEmployee, 1, t1Message1},\n-            {Act.UpdateEmployee, 1, t1Message2},\n-            {Act.TestEmployee, 1, t1Message2},\n-            \n-            {t1IsCommit},\n-            {Act.Notify, 2},\n-            {Act.Notify, 2},\n-            \n-            {Act.Clear},\n-            {Act.Find},\n-            {Act.TestEmployee, 1, null, t1VersionInc},\n-            {Act.CloseEm}\n-        };\n-        Object[][] thread2 = {\n-            {Act.CreateEm},\n-            {Act.Find, 1},\n-            {Act.SaveVersion},\n-            {Act.TestEmployee, 1, Default_FirstName},\n-            {Act.Notify, 1},\n-            {Act.Wait},\n+                {Act.CreateEm},\n+                {Act.Find},\n+                {Act.SaveVersion},\n+                {Act.TestEmployee, 1, Default_FirstName},\n+                \n+                {Act.NewThread, 1 },\n+                {Act.StartThread, 1 },\n+                {Act.Wait},\n+      \n+                {Act.StartTx},\n+                {Act.UpdateEmployee, 1, t1Message1},\n+                {Act.TestEmployee, 1, t1Message1},\n+                {Act.CommitTx},\n+                {Act.TestException},\n+                {Act.Notify, 1},\n+                {Act.Wait},\n+        \n+                {Act.StartTx},\n+                {Act.RefreshWithLock, 1, t1Lock},\n+                {Act.TestLockMode, 1, t1Lock},\n+                {Act.TestEmployee, 1, t1Message1},\n+                {Act.UpdateEmployee, 1, t1Message2},\n+                {Act.TestEmployee, 1, t1Message2},\n+        \n+                {t1IsCommit},\n+                \n+                {Act.Notify, 1},\n \n-            {Act.StartTx},\n-            {Act.UpdateEmployee, 1, t2Message1},\n-            {Act.TestEmployee, 1, t2Message1},\n-            {Act.RefreshWithLock, 1, t2Lock },\n-            {Act.TestLockMode, 1, t2Lock},\n-            {Act.TestEmployee, 1, t1Message1},\n-            \n-            {Act.Notify, 1},\n-            {Act.Wait},\n-            {t2IsCommit},\n-            {Act.Wait},\n-            \n-            {Act.Clear},\n-            {Act.Find},\n-            {Act.TestEmployee, 1, null, t2VersionInc},\n-            {Act.CloseEm}\n-       };\n+                {Act.WaitAllChildren},\n+                {Act.Find},\n+                {Act.TestEmployee, 1, null, t1VersionInc},\n+        \n+                {Act.TestException, 0, t1Exceptions },\n+                {Act.TestException, 1, t2Exceptions },\n+                {Act.CloseEm}\n+            };\n+\n+            Object[][] thread1 = {\n+                {Act.CreateEm},\n+                {Act.Find, 1},\n+                {Act.SaveVersion},\n+                {Act.TestEmployee, 1, Default_FirstName},\n+                {Act.TestException},\n+                {Act.Notify, 0},\n+                {Act.Wait},\n+                \n+                {Act.StartTx},\n+                {Act.UpdateEmployee, 1, t2Message1},\n+                {Act.TestEmployee, 1, t2Message1},\n+                {Act.RefreshWithLock, 1, t2Lock },\n+                {Act.TestLockMode, 1, t2Lock},\n+                {Act.TestEmployee, 1, t1Message1},\n+        \n+                {Act.Notify, 0},\n+                {Act.Wait},\n+                {t2IsCommit},\n         \n-        launchActionSequence(testName, parameters, threadMain, thread1,\n-            thread2);\n+                {Act.CloseEm}\n+            };\n+            launchActionSequence(testName, parameters, threadMain, thread1);\n     }\n }"}]}

