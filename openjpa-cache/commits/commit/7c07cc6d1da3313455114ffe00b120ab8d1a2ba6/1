{"sha":"7c07cc6d1da3313455114ffe00b120ab8d1a2ba6","node_id":"MDY6Q29tbWl0MjA2MzY0OjdjMDdjYzZkMWRhMzMxMzQ1NTExNGZmZTAwYjEyMGFiOGQxYTJiYTY=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2007-09-10T16:20:08Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2007-09-10T16:20:08Z"},"message":"OPENJPA-357, OPENJPA-358: Checking for user error of wrong fetch group inclusion\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@574293 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"598a8f880feca1c97f2770ea983efa00379d5bce","url":"https://api.github.com/repos/apache/openjpa/git/trees/598a8f880feca1c97f2770ea983efa00379d5bce"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/7c07cc6d1da3313455114ffe00b120ab8d1a2ba6","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/7c07cc6d1da3313455114ffe00b120ab8d1a2ba6","html_url":"https://github.com/apache/openjpa/commit/7c07cc6d1da3313455114ffe00b120ab8d1a2ba6","comments_url":"https://api.github.com/repos/apache/openjpa/commits/7c07cc6d1da3313455114ffe00b120ab8d1a2ba6/comments","author":null,"committer":null,"parents":[{"sha":"6d5fe3bb8ada4d0aceb5d6221140637dc60ab47d","url":"https://api.github.com/repos/apache/openjpa/commits/6d5fe3bb8ada4d0aceb5d6221140637dc60ab47d","html_url":"https://github.com/apache/openjpa/commit/6d5fe3bb8ada4d0aceb5d6221140637dc60ab47d"}],"stats":{"total":20,"additions":17,"deletions":3},"files":[{"sha":"e4e8b9bbe3f533ffcfc904a4da674a84d7ccc511","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java","status":"modified","additions":13,"deletions":3,"changes":16,"blob_url":"https://github.com/apache/openjpa/blob/7c07cc6d1da3313455114ffe00b120ab8d1a2ba6/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java","raw_url":"https://github.com/apache/openjpa/raw/7c07cc6d1da3313455114ffe00b120ab8d1a2ba6/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java?ref=7c07cc6d1da3313455114ffe00b120ab8d1a2ba6","patch":"@@ -109,6 +109,8 @@\n import org.apache.openjpa.util.InternalException;\n import org.apache.openjpa.util.MetaDataException;\n import org.apache.openjpa.util.UnsupportedException;\n+import org.apache.openjpa.util.UserException;\n+\n import serp.util.Numbers;\n import serp.util.Strings;\n \n@@ -897,12 +899,20 @@ private void parseFetchGroups(ClassMetaData meta, FetchGroup... groups) {\n                 fg.addDeclaredInclude(s);\n             }\n         }\n-        \n+        // Add the parent-child style bi-links between fetch groups in a \n+        // separate pass. \n         for (FetchGroup group:groups) {\n         \tfg = meta.getFetchGroup(group.name());\n         \tString[] includedFetchGropNames = fg.getDeclaredIncludes();\n-        \tfor (String includedFectchGroupName:includedFetchGropNames)\n-        \t    meta.getFetchGroup(includedFectchGroupName).addContainedBy(fg);\n+        \tfor (String includedFectchGroupName:includedFetchGropNames) {\n+        \t\torg.apache.openjpa.meta.FetchGroup child =\n+        \t    meta.getFetchGroup(includedFectchGroupName);\n+        \t\tif (child == null) \n+        \t\t\tthrow new UserException(_loc.get(\"missing-included-fg\", \n+        \t\t\t\tmeta.getDescribedType().getName(), fg.getName(),\n+        \t\t\t\tincludedFectchGroupName));\n+        \t\tchild.addContainedBy(fg);\n+        \t}\n         }\n         \n         for (FetchGroup group : groups) {"},{"sha":"b19b4774b99b39d5c0d2c3637223f2880641d092","filename":"openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7c07cc6d1da3313455114ffe00b120ab8d1a2ba6/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/7c07cc6d1da3313455114ffe00b120ab8d1a2ba6/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties?ref=7c07cc6d1da3313455114ffe00b120ab8d1a2ba6","patch":"@@ -59,6 +59,9 @@ unnamed-fg: \"{0}\" declares an unnamed fetch group.  All fetch groups \\\n bad-fg-field: Fetch group \"{0}\" in type \"{1}\" includes field \"{2}\", but \\\n \tthis field is not declared in \"{1}\", or is not persistent.  Currently, \\\n \tOpenJPA only supports declared fields in fetch groups.\n+missing-included-fg:\"{0}\" declares a fecth group \"{1}\" includes \"{2}\". But \\\n+\tthe included fetch group \"{2}\" can not be found in \"{0}\". Currently, all \\\n+\tincluded fetch groups must be declared within the same entity scope.\n not-update-delete-query: Cannot perform an update or delete operation \\\n \ton select query: \"{0}\".\n not-select-query: Cannot perform a select on update or delete query: \"{0}\".\n@@ -141,3 +144,4 @@ EntityManagerFactory-cat: Persistence.Advanced\n EntityManagerFactory-displayorder: 50\n EntityManagerFactory-expert: true\n EntityManagerFactory-interface: org.apache.openjpa.persistence.EntityManagerFactoryImpl\n+"}]}

