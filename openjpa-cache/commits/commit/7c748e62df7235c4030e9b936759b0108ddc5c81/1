{"sha":"7c748e62df7235c4030e9b936759b0108ddc5c81","node_id":"MDY6Q29tbWl0MjA2MzY0OjdjNzQ4ZTYyZGY3MjM1YzQwMzBlOWI5MzY3NTliMDEwOGRkYzVjODE=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-03-12T19:05:30Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-03-12T19:05:30Z"},"message":"OPENJPA-1491 When used in an OSGi environment with Apache Aries, the org.apache.openjpa.kernel.Bootstrap should use the OpenJPA bundle classloader instead of the application bundle classloader to instatiate a BrokerFactory.  Also moved our BundleActivator from the openjpa module to openjpa-persistence module with a BundleUtils wrapper to remove direct OSGi class refs, so the BundleContext in it could be accessed by PersistenceProviderImpl.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@922397 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"08f448087f141e5f7db17907742da02b2bab0e64","url":"https://api.github.com/repos/apache/openjpa/git/trees/08f448087f141e5f7db17907742da02b2bab0e64"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/7c748e62df7235c4030e9b936759b0108ddc5c81","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/7c748e62df7235c4030e9b936759b0108ddc5c81","html_url":"https://github.com/apache/openjpa/commit/7c748e62df7235c4030e9b936759b0108ddc5c81","comments_url":"https://api.github.com/repos/apache/openjpa/commits/7c748e62df7235c4030e9b936759b0108ddc5c81/comments","author":null,"committer":null,"parents":[{"sha":"6503eabef5327eaf3c20965d75ad086c3c4480dd","url":"https://api.github.com/repos/apache/openjpa/commits/6503eabef5327eaf3c20965d75ad086c3c4480dd","html_url":"https://github.com/apache/openjpa/commit/6503eabef5327eaf3c20965d75ad086c3c4480dd"}],"stats":{"total":193,"additions":168,"deletions":25},"files":[{"sha":"40a9b2fafe3f47118dda0d17fad030cde4b22443","filename":"openjpa-persistence/pom.xml","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/7c748e62df7235c4030e9b936759b0108ddc5c81/openjpa-persistence/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/7c748e62df7235c4030e9b936759b0108ddc5c81/openjpa-persistence/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/pom.xml?ref=7c748e62df7235c4030e9b936759b0108ddc5c81","patch":"@@ -48,6 +48,13 @@\n             <artifactId>geronimo-validation_1.0_spec</artifactId>\n             <scope>provided</scope>\n         </dependency>        \n+        <!-- for osgi bundle activator code, use same level as Apache Aries -->\n+        <dependency>\n+            <groupId>org.osgi</groupId>\n+            <artifactId>org.osgi.core</artifactId>\n+            <version>4.2.0</version>\n+            <scope>provided</scope>\n+        </dependency>\n     </dependencies>\n     \n     <build>"},{"sha":"544d12d89df8352b38a454567ce4efe21da253e8","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProviderImpl.java","status":"modified","additions":16,"deletions":8,"changes":24,"blob_url":"https://github.com/apache/openjpa/blob/7c748e62df7235c4030e9b936759b0108ddc5c81/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProviderImpl.java","raw_url":"https://github.com/apache/openjpa/raw/7c748e62df7235c4030e9b936759b0108ddc5c81/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProviderImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProviderImpl.java?ref=7c748e62df7235c4030e9b936759b0108ddc5c81","patch":"@@ -50,6 +50,7 @@\n import org.apache.openjpa.meta.AbstractCFMetaDataFactory;\n import org.apache.openjpa.meta.MetaDataModes;\n import org.apache.openjpa.meta.MetaDataRepository;\n+import org.apache.openjpa.persistence.osgi.BundleUtils;\n import org.apache.openjpa.persistence.validation.ValidationUtils;\n import org.apache.openjpa.util.ClassResolver;\n \n@@ -179,18 +180,25 @@ public OpenJPAEntityManagerFactory createContainerEntityManagerFactory(Persisten\n                 cp.addProperty(\"openjpa.\" + BrokerValue.KEY, getDefaultBrokerAlias());\n             }\n \n-            BrokerFactory factory = getBrokerFactory(cp, poolValue, pui.getClassLoader());\n-            if (transformerException != null) {\n-                Log log = factory.getConfiguration().getLog(OpenJPAConfiguration.LOG_RUNTIME);\n-                if (log.isTraceEnabled()) {\n-                    log.warn(_loc.get(\"transformer-registration-error-ex\", pui), transformerException);\n-                } else {\n-                    log.warn(_loc.get(\"transformer-registration-error\", pui));\n-                }\n+            // OPENJPA-1491 If running under OSGi, use the Bundle's ClassLoader instead of the application one\n+            BrokerFactory factory;\n+            if (BundleUtils.runningUnderOSGi()) {\n+                factory = getBrokerFactory(cp, poolValue, BundleUtils.getBundleClassLoader());\n+            } else {\n+                factory = getBrokerFactory(cp, poolValue, pui.getClassLoader());\n             }\n+\n             OpenJPAConfiguration conf = factory.getConfiguration();\n             setPersistenceEnvironmentInfo(conf, pui);\n             _log = conf.getLog(OpenJPAConfiguration.LOG_RUNTIME);\n+            // now we can log any transformer exceptions from above\n+            if (transformerException != null) {\n+                if (_log.isTraceEnabled()) {\n+                    _log.warn(_loc.get(\"transformer-registration-error-ex\", pui), transformerException);\n+                } else {\n+                    _log.warn(_loc.get(\"transformer-registration-error\", pui));\n+                }\n+            }\n \n             // Create appropriate LifecycleEventManager\n             loadValidator(factory);"},{"sha":"f3ffe970bec32147312c70448dfc2985517a2662","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/osgi/BundleDelegatingClassLoader.java","status":"added","additions":57,"deletions":0,"changes":57,"blob_url":"https://github.com/apache/openjpa/blob/7c748e62df7235c4030e9b936759b0108ddc5c81/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/osgi/BundleDelegatingClassLoader.java","raw_url":"https://github.com/apache/openjpa/raw/7c748e62df7235c4030e9b936759b0108ddc5c81/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/osgi/BundleDelegatingClassLoader.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/osgi/BundleDelegatingClassLoader.java?ref=7c748e62df7235c4030e9b936759b0108ddc5c81","patch":"@@ -0,0 +1,57 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.osgi;\n+\n+import java.io.IOException;\n+import java.net.URL;\n+import java.util.Enumeration;\n+\n+import org.osgi.framework.Bundle;\n+\n+/**\n+ * This is a simple ClassLoader that delegates to the Bundle\n+ * and is used by the PersistenceUnitInfo\n+ *\n+ * @version $Rev$ $Date$\n+ */\n+public class BundleDelegatingClassLoader extends ClassLoader {\n+\n+  private final Bundle bundle;\n+  \n+  public BundleDelegatingClassLoader(Bundle b) {\n+    bundle = b;\n+  }\n+  \n+  @Override\n+  protected Class<?> findClass(String className) throws ClassNotFoundException {\n+    return bundle.loadClass(className);\n+  }\n+\n+  @Override\n+  protected URL findResource(String resName) {\n+    return bundle.getResource(resName);\n+  }\n+\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  protected Enumeration<URL> findResources(String resName) throws IOException {\n+    return bundle.getResources(resName);\n+  }\n+\n+}"},{"sha":"1b8f371279aa715d2e083ea9b91d6e25dde8ef46","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/osgi/BundleUtils.java","status":"added","additions":66,"deletions":0,"changes":66,"blob_url":"https://github.com/apache/openjpa/blob/7c748e62df7235c4030e9b936759b0108ddc5c81/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/osgi/BundleUtils.java","raw_url":"https://github.com/apache/openjpa/raw/7c748e62df7235c4030e9b936759b0108ddc5c81/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/osgi/BundleUtils.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/osgi/BundleUtils.java?ref=7c748e62df7235c4030e9b936759b0108ddc5c81","patch":"@@ -0,0 +1,66 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.osgi;\n+\n+// DO NOT import any org.osgi packages or classes here!\n+\n+/**\n+ * OSGi helper class and methods.\n+ * All routines MUST use reflection, so we don't have any hard-coded\n+ * runtime depends on OSGi classes for Java SE and EE users.\n+ *\n+ * @version $Rev$ $Date$\n+ */\n+public class BundleUtils {\n+\n+    public static boolean runningUnderOSGi() {\n+        try {\n+            @SuppressWarnings(\"unused\")\n+            Class<?> c = Class.forName(\"org.osgi.framework.Bundle\");\n+            c = Class.forName(\"org.osgi.framework.BundleActivator\");\n+            c = Class.forName(\"org.osgi.framework.BundleContext\");\n+            c = Class.forName(\"org.osgi.framework.ServiceRegistration\");\n+            return true;\n+        } catch (ClassNotFoundException e) {\n+            // no-op - catch, eat and return false below\n+        } catch (NoClassDefFoundError e) {\n+            // no-op - catch, eat and return false below\n+        }\n+        return false;\n+    }\n+\n+    /* (non-Javadoc)\n+     * OPENJPA-1491 Allow us to use the OSGi Bundle's ClassLoader instead of the application one.\n+     * Uses reflection so we don't have any runtime depends on OSGi classes for Java SE and EE users.\n+     */\n+    public static ClassLoader getBundleClassLoader() {\n+        ClassLoader cl = null;\n+        if (runningUnderOSGi()) {\n+            try {\n+                Class<?> c = Class.forName(\"org.apache.openjpa.persistence.osgi.PersistenceActivator\");\n+                cl = (ClassLoader) c.getMethod(\"getBundleClassLoader\").invoke(null);\n+            } catch (Throwable t) {\n+                // fail-fast\n+                throw new RuntimeException(t);\n+            }\n+        }\n+        return cl;\n+    }\n+\n+}"},{"sha":"d72b778f31af8139d058600f9fef2cd2f9f7ad93","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/osgi/PersistenceActivator.java","status":"renamed","additions":20,"deletions":2,"changes":22,"blob_url":"https://github.com/apache/openjpa/blob/7c748e62df7235c4030e9b936759b0108ddc5c81/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/osgi/PersistenceActivator.java","raw_url":"https://github.com/apache/openjpa/raw/7c748e62df7235c4030e9b936759b0108ddc5c81/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/osgi/PersistenceActivator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/osgi/PersistenceActivator.java?ref=7c748e62df7235c4030e9b936759b0108ddc5c81","patch":"@@ -14,13 +14,14 @@\n  *  See the License for the specific language governing permissions and\n  *  limitations under the License.\n  */\n-package org.apache.openjpa.osgi;\n+package org.apache.openjpa.persistence.osgi;\n \n import java.util.Hashtable;\n \n import javax.persistence.spi.PersistenceProvider;\n \n import org.apache.openjpa.persistence.PersistenceProviderImpl;\n+import org.osgi.framework.Bundle;\n import org.osgi.framework.BundleActivator;\n import org.osgi.framework.BundleContext;\n import org.osgi.framework.ServiceRegistration;\n@@ -37,12 +38,14 @@\n     // following would be set by Aries to expose their OSGi enabled provider\n     public static final String PERSISTENCE_PROVIDER = PersistenceProvider.class.getName();\n     public static final String OSGI_PERSISTENCE_PROVIDER = PersistenceProviderImpl.class.getName();\n-    private ServiceRegistration svcReg = null;\n+    private static BundleContext ctx = null;\n+    private static ServiceRegistration svcReg = null;\n \n     /* (non-Javadoc)\n      * @see org.osgi.framework.BundleActivator#start(org.osgi.framework.BundleContext)\n      */\n     public void start(BundleContext ctx) throws Exception {\n+        this.ctx = ctx;\n         PersistenceProvider provider = new PersistenceProviderImpl();\n         Hashtable<String, String> props = new Hashtable<String, String>();\n         props.put(PERSISTENCE_PROVIDER_ARIES, OSGI_PERSISTENCE_PROVIDER);\n@@ -57,6 +60,21 @@ public void stop(BundleContext ctx) throws Exception {\n             svcReg.unregister();\n             svcReg = null;\n         }\n+        this.ctx = null;\n+    }\n+\n+    /* (non-Javadoc)\n+     * OPENJPA-1491 Allow us to use the OSGi Bundle's ClassLoader instead of the application one.\n+     * This class and method are dynamically loaded by BundleUtils, so any method signature changes\n+     * here need to also be reflected in BundleUtils.getBundleClassLoader()\n+     */\n+    public static ClassLoader getBundleClassLoader() {\n+        ClassLoader cl = null;\n+        if (ctx != null) {\n+            Bundle b = ctx.getBundle();\n+            cl = new BundleDelegatingClassLoader(b);\n+        }\n+        return cl;\n     }\n \n }","previous_filename":"openjpa/src/main/java/org/apache/openjpa/osgi/PersistenceActivator.java"},{"sha":"e00a6bd7b8e17dd2951398c219c1648d4c07ca0b","filename":"openjpa/pom.xml","status":"modified","additions":2,"deletions":15,"changes":17,"blob_url":"https://github.com/apache/openjpa/blob/7c748e62df7235c4030e9b936759b0108ddc5c81/openjpa/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/7c748e62df7235c4030e9b936759b0108ddc5c81/openjpa/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa/pom.xml?ref=7c748e62df7235c4030e9b936759b0108ddc5c81","patch":"@@ -134,9 +134,9 @@\n                     <instructions>\n                         <!-- OSGi Bundle Metadata -->\n                         <Bundle-DocURL>${project.url}</Bundle-DocURL>\n-                        <Bundle-Activator>org.apache.openjpa.osgi.PersistenceActivator</Bundle-Activator>\n+                        <Bundle-Activator>org.apache.openjpa.persistence.osgi.PersistenceActivator</Bundle-Activator>\n                         <Private-Package />\n-                        <Export-Package>org.apache.openjpa.*;version=${pom.version}</Export-Package>\n+                        <Export-Package>org.apache.openjpa.*;version=${project.version}</Export-Package>\n                         <Import-Package>com.ibm.*;resolution:=optional,org.postgresql.*;resolution:=optional,org.apache.tools.ant.*;resolution:=optional,org.apache.log4j.*;resolution:=optional,javax.activation.xa*;resolution:=optional,javax.jms.*;version=\"[1.1.0,1.2)\";resolution:=optional,javax.transaction.*;version=\"[1.1.0,1.2)\";resolution:=optional,javax.validation.*;version=\"[1.0.0,1.1)\";resolution:=optional,javax.xml.bind.*;resolution:=optional,serp.*;resolution:=optional,javax.persistence.*;version=\"[2.0.0,2.1)\",*</Import-Package>\n                         <!-- Eclipse metadata -->\n                         <Eclipse-Autostart>false</Eclipse-Autostart>\n@@ -236,18 +236,5 @@\n             <artifactId>openjpa-slice</artifactId>\n             <version>${pom.version}</version>\n         </dependency>\n-        <!-- for osgi bundle activator code -->\n-        <dependency>\n-            <groupId>org.apache.felix</groupId>\n-            <artifactId>org.osgi.core</artifactId>\n-            <version>1.4.0</version>\n-            <scope>provided</scope>\n-            <exclusions>\n-                <exclusion>\n-                    <groupId>org.apache.felix</groupId>\n-                    <artifactId>org.osgi.foundation</artifactId>\n-                </exclusion>\n-            </exclusions>\n-        </dependency>\n     </dependencies>\n </project>"}]}

