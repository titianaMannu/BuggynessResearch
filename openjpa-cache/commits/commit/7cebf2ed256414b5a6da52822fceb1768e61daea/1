{"sha":"7cebf2ed256414b5a6da52822fceb1768e61daea","node_id":"MDY6Q29tbWl0MjA2MzY0OjdjZWJmMmVkMjU2NDE0YjVhNmRhNTI4MjJmY2ViMTc2OGU2MWRhZWE=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-12-02T19:44:08Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-12-02T19:44:08Z"},"message":"Use generic type for Result\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@886290 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"bf418ba6905d571758c266b149ee0f0dbdcab7ab","url":"https://api.github.com/repos/apache/openjpa/git/trees/bf418ba6905d571758c266b149ee0f0dbdcab7ab"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/7cebf2ed256414b5a6da52822fceb1768e61daea","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/7cebf2ed256414b5a6da52822fceb1768e61daea","html_url":"https://github.com/apache/openjpa/commit/7cebf2ed256414b5a6da52822fceb1768e61daea","comments_url":"https://api.github.com/repos/apache/openjpa/commits/7cebf2ed256414b5a6da52822fceb1768e61daea/comments","author":null,"committer":null,"parents":[{"sha":"8a0f2da8fd57cd2bd129e56b66a672d724efe13e","url":"https://api.github.com/repos/apache/openjpa/commits/8a0f2da8fd57cd2bd129e56b66a672d724efe13e","html_url":"https://github.com/apache/openjpa/commit/8a0f2da8fd57cd2bd129e56b66a672d724efe13e"}],"stats":{"total":74,"additions":36,"deletions":38},"files":[{"sha":"77dffd1bc9c56c5f28ae10a0eb1b647638b14482","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DelegatingResultList.java","status":"modified","additions":36,"deletions":38,"changes":74,"blob_url":"https://github.com/apache/openjpa/blob/7cebf2ed256414b5a6da52822fceb1768e61daea/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DelegatingResultList.java","raw_url":"https://github.com/apache/openjpa/raw/7cebf2ed256414b5a6da52822fceb1768e61daea/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DelegatingResultList.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DelegatingResultList.java?ref=7cebf2ed256414b5a6da52822fceb1768e61daea","patch":"@@ -35,41 +35,40 @@\n  * @author Marc Prud'hommeaux\n  * @nojavadoc\n  */\n-public class DelegatingResultList\n-    implements ResultList {\n+public class DelegatingResultList<T>\n+    implements ResultList<T> {\n \n-    private final ResultList _del;\n+    private final ResultList<T> _del;\n     private final RuntimeExceptionTranslator _trans;\n \n     /**\n      * Constructor; supply delegate.\n      */\n-    public DelegatingResultList(ResultList list) {\n+    public DelegatingResultList(ResultList<T> list) {\n         this(list, null);\n     }\n \n     /**\n      * Constructor; supply delegate and exception translator.\n      */\n-    public DelegatingResultList(ResultList list,\n-        RuntimeExceptionTranslator trans) {\n+    public DelegatingResultList(ResultList<T> list, RuntimeExceptionTranslator trans) {\n         _del = list;\n         _trans = trans;\n     }\n \n     /**\n      * Return the direct delegate.\n      */\n-    public ResultList getDelegate() {\n+    public ResultList<T> getDelegate() {\n         return _del;\n     }\n \n     /**\n      * Return the native delegate.\n      */\n-    public ResultList getInnermostDelegate() {\n+    public ResultList<T> getInnermostDelegate() {\n         return _del instanceof DelegatingResultList\n-            ? ((DelegatingResultList) _del).getInnermostDelegate() : _del;\n+            ? ((DelegatingResultList<T>) _del).getInnermostDelegate() : _del;\n     }\n \n     /**\n@@ -171,7 +170,7 @@ public boolean contains(Object o) {\n         }\n     }\n \n-    public Iterator iterator() {\n+    public Iterator<T> iterator() {\n         return listIterator();\n     }\n \n@@ -191,7 +190,7 @@ public Iterator iterator() {\n         }\n     }\n \n-    public boolean add(Object o) {\n+    public boolean add(T o) {\n         try {\n             return _del.add(o);\n         } catch (RuntimeException re) {\n@@ -207,39 +206,39 @@ public boolean remove(Object o) {\n         }\n     }\n \n-    public boolean containsAll(Collection c) {\n+    public boolean containsAll(Collection<?> c) {\n         try {\n             return _del.containsAll(c);\n         } catch (RuntimeException re) {\n             throw translate(re);\n         }\n     }\n \n-    public boolean addAll(Collection c) {\n+    public boolean addAll(Collection<? extends T> c) {\n         try {\n             return _del.addAll(c);\n         } catch (RuntimeException re) {\n             throw translate(re);\n         }\n     }\n \n-    public boolean addAll(int index, Collection c) {\n+    public boolean addAll(int index, Collection<? extends T> c) {\n         try {\n             return _del.addAll(index, c);\n         } catch (RuntimeException re) {\n             throw translate(re);\n         }\n     }\n \n-    public boolean removeAll(Collection c) {\n+    public boolean removeAll(Collection<?> c) {\n         try {\n             return _del.removeAll(c);\n         } catch (RuntimeException re) {\n             throw translate(re);\n         }\n     }\n \n-    public boolean retainAll(Collection c) {\n+    public boolean retainAll(Collection<?> c) {\n         try {\n             return _del.retainAll(c);\n         } catch (RuntimeException re) {\n@@ -255,31 +254,31 @@ public void clear() {\n         }\n     }\n \n-    public Object get(int index) {\n+    public T get(int index) {\n         try {\n             return _del.get(index);\n         } catch (RuntimeException re) {\n             throw translate(re);\n         }\n     }\n \n-    public Object set(int index, Object element) {\n+    public T set(int index, T element) {\n         try {\n             return _del.set(index, element);\n         } catch (RuntimeException re) {\n             throw translate(re);\n         }\n     }\n \n-    public void add(int index, Object element) {\n+    public void add(int index, T element) {\n         try {\n             _del.add(index, element);\n         } catch (RuntimeException re) {\n             throw translate(re);\n         }\n     }\n \n-    public Object remove(int index) {\n+    public T remove(int index) {\n         try {\n             return _del.remove(index);\n         } catch (RuntimeException re) {\n@@ -303,23 +302,23 @@ public int lastIndexOf(Object o) {\n         }\n     }\n \n-    public ListIterator listIterator() {\n+    public ListIterator<T> listIterator() {\n         try {\n-            return new DelegatingListIterator(_del.listIterator());\n+            return new DelegatingListIterator<T>(_del.listIterator());\n         } catch (RuntimeException re) {\n             throw translate(re);\n         }\n     }\n \n-    public ListIterator listIterator(int index) {\n+    public ListIterator<T> listIterator(int index) {\n         try {\n-            return new DelegatingListIterator(_del.listIterator(index));\n+            return new DelegatingListIterator<T>(_del.listIterator(index));\n         } catch (RuntimeException re) {\n             throw translate(re);\n         }\n     }\n \n-    public List subList(int fromIndex, int toIndex) {\n+    public List<T> subList(int fromIndex, int toIndex) {\n         try {\n             return _del.subList(fromIndex, toIndex);\n         } catch (RuntimeException re) {\n@@ -338,31 +337,31 @@ public String toString() {\n     /**\n      * Delegating iterator that also performs exception translation.\n      */\n-    public class DelegatingListIterator\n-        implements ListIterator {\n+    public class DelegatingListIterator<T>\n+        implements ListIterator<T> {\n \n-        private final ListIterator _del;\n+        private final ListIterator<T> _del;\n \n         /**\n          * Constructor; supply delegate.\n          */\n-        public DelegatingListIterator(ListIterator it) {\n+        public DelegatingListIterator(ListIterator<T> it) {\n             _del = it;\n         }\n \n         /**\n          * Return the direct delegate.\n          */\n-        public ListIterator getDelegate() {\n+        public ListIterator<T> getDelegate() {\n             return _del;\n         }\n \n         /**\n          * Return the native delegate.\n          */\n-        public ListIterator getInnermostDelegate() {\n+        public ListIterator<T> getInnermostDelegate() {\n             return _del instanceof DelegatingListIterator\n-                ? ((DelegatingListIterator) _del).getInnermostDelegate() : _del;\n+                ? ((DelegatingListIterator<T>) _del).getInnermostDelegate() : _del;\n         }\n \n         public int hashCode() {\n@@ -377,8 +376,7 @@ public boolean equals(Object other) {\n             if (other == this)\n                 return true;\n             if (other instanceof DelegatingListIterator)\n-                other = ((DelegatingListIterator) other).\n-                    getInnermostDelegate();\n+                other = ((DelegatingListIterator) other).getInnermostDelegate();\n             try {\n                 return getInnermostDelegate().equals(other);\n             } catch (RuntimeException re) {\n@@ -394,7 +392,7 @@ public boolean hasNext() {\n             }\n         }\n \n-        public Object next() {\n+        public T next() {\n             try {\n                 return _del.next();\n             } catch (RuntimeException re) {\n@@ -410,7 +408,7 @@ public boolean hasPrevious() {\n             }\n         }\n \n-        public Object previous() {\n+        public T previous() {\n             try {\n                 return _del.previous();\n             } catch (RuntimeException re) {\n@@ -442,15 +440,15 @@ public void remove() {\n             }\n         }\n \n-        public void set(Object o) {\n+        public void set(T o) {\n             try {\n                 _del.set(o);\n             } catch (RuntimeException re) {\n                 throw translate(re);\n             }\n         }\n \n-        public void add(Object o) {\n+        public void add(T o) {\n             try {\n                 _del.add(o);\n             } catch (RuntimeException re) {"}]}

