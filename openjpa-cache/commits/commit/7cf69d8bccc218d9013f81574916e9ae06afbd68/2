{"sha":"7cf69d8bccc218d9013f81574916e9ae06afbd68","node_id":"MDY6Q29tbWl0MjA2MzY0OjdjZjY5ZDhiY2NjMjE4ZDkwMTNmODE1NzQ5MTZlOWFlMDZhZmJkNjg=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2006-07-13T23:44:20Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2006-07-13T23:44:20Z"},"message":"reformatted comments to follow Sun standards and use the standard ASL comment formatting\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@421741 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"d485666afe76b9b2f2f09574ada162d96f9355c7","url":"https://api.github.com/repos/apache/openjpa/git/trees/d485666afe76b9b2f2f09574ada162d96f9355c7"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/7cf69d8bccc218d9013f81574916e9ae06afbd68","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/7cf69d8bccc218d9013f81574916e9ae06afbd68","html_url":"https://github.com/apache/openjpa/commit/7cf69d8bccc218d9013f81574916e9ae06afbd68","comments_url":"https://api.github.com/repos/apache/openjpa/commits/7cf69d8bccc218d9013f81574916e9ae06afbd68/comments","author":null,"committer":null,"parents":[{"sha":"4ddf63ea3f0ed80c6efa8877201d909900965244","url":"https://api.github.com/repos/apache/openjpa/commits/4ddf63ea3f0ed80c6efa8877201d909900965244","html_url":"https://github.com/apache/openjpa/commit/4ddf63ea3f0ed80c6efa8877201d909900965244"}],"stats":{"total":8159,"additions":4118,"deletions":4041},"files":[{"sha":"5efdb25264062edbf869f93f6e187df8813099d6","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataTool.java","status":"modified","additions":15,"deletions":17,"changes":32,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataTool.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataTool.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataTool.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -36,7 +36,7 @@\n import org.apache.openjpa.util.MetaDataException;\n \n /**\n- * <p>Tool for generating default metadata.</p>\n+ * Tool for generating default metadata.\n  *\n  * @since 3.0\n  * @author Abe White\n@@ -64,7 +64,7 @@\n     private boolean _flush = false;\n \n     /**\n-     * Constructor.  Supply configuration and action.\n+     * Constructor. Supply configuration and action.\n      */\n     public MetaDataTool(OpenJPAConfiguration conf, String action) {\n         _conf = conf;\n@@ -140,7 +140,7 @@ public void setRepository(MetaDataRepository repos) {\n     }\n \n     /**\n-     * Reset state.  This is called automatically after every {@link #record}.\n+     * Reset state. This is called automatically after every {@link #record}.\n      */\n     public void clear() {\n         _repos = null;\n@@ -221,30 +221,28 @@ public void record() {\n     }\n \n     /**\n-     * <p>Usage: java org.apache.openjpa.meta.MetaDataTool [option]*\n+     * Usage: java org.apache.openjpa.meta.MetaDataTool [option]*\n      * [-action/-a &lt;add | drop&gt;]\n-     * &lt;class name | .java file | .class file&gt;+</p>\n-     * <p/>\n-     * <p>Where the following options are recognized.\n+     * &lt;class name | .java file | .class file&gt;+\n+     *  Where the following options are recognized.\n      * <ul>\n      * <li><i>-properties/-p &lt;properties file or resource&gt;</i>: The path\n      * or resource name of a OpenJPA properties file containing information\n-     * as outlined in {@link OpenJPAConfiguration}.  Optional.</li>\n+     * as outlined in {@link OpenJPAConfiguration}. Optional.</li>\n      * <li><i>-&lt;property name&gt; &lt;property value&gt;</i>: All bean\n      * properties of the OpenJPA {@link OpenJPAConfiguration} can be set by\n      * using their names and supplying a value.</li>\n      * <li><i>-file/-f &lt;stdout | output file or resource&gt;</i>: The path\n      * or resource name of a file the metadata should be generated to.\n      * If the given file already contains metadata, the generated\n      * metadata will be merged into the existing document.</li>\n-     * </ul></p>\n-     * <p/>\n-     * <p>The available actions are:\n+     * </ul>\n+     *  The available actions are:\n      * <ul>\n-     * <li><i>add</i>: Generate default metadata for the given classes.  This\n+     * <li><i>add</i>: Generate default metadata for the given classes. This\n      * is the default action.</li>\n      * <li><i>drop</i>: Remove existing metadata for the given classes.</li>\n-     * </ul></p>\n+     * </ul>\n      */\n     public static void main(String[] args)\n         throws IOException {\n@@ -261,7 +259,7 @@ public static void main(String[] args)\n     }\n \n     /**\n-     * Run the tool.  Returns false if any invalid options were given.\n+     * Run the tool. Returns false if any invalid options were given.\n      */\n     public static boolean run(OpenJPAConfiguration conf, String[] args,\n         Options opts)\n@@ -291,7 +289,7 @@ public static boolean run(OpenJPAConfiguration conf, String[] args,\n     }\n \n     /**\n-     * Run the tool.  Return false if invalid options were given.  The given\n+     * Run the tool. Return false if invalid options were given. The given\n      * repository may be null.\n      */\n     public static boolean run(OpenJPAConfiguration conf, String[] args,\n@@ -338,7 +336,7 @@ public static boolean run(OpenJPAConfiguration conf, String[] args,\n     }\n \n     /**\n-     *\tRun flags.\n+     * Run flags.\n      */\n     public static class Flags {\n "},{"sha":"5b522202c8c3bfffc88dbd0889b7db04b6f84b24","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/NoneMetaDataFactory.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/meta/NoneMetaDataFactory.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/meta/NoneMetaDataFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/NoneMetaDataFactory.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -24,7 +24,7 @@\n import org.apache.openjpa.lib.meta.ClassArgParser;\n \n /**\n- * </p>No-op metadata I/O to prevent attempts to load other classes.</p>\n+ * No-op metadata I/O to prevent attempts to load other classes.\n  *\n  * @author Abe White\n  * @nojavadoc"},{"sha":"769d7e3822d9dd61825c79a396f0f26f7621c148","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/Order.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/meta/Order.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/meta/Order.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/Order.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -18,7 +18,7 @@\n import java.util.Comparator;\n \n /**\n- * <p>Order a field.</p>\n+ * Order a field.\n  *\n  * @author Abe White\n  */\n@@ -40,8 +40,8 @@\n     public boolean isAscending();\n \n     /**\n-     *\tReturn a comparator for ordering by this element, or null if\n-     *\tthe ordering is done in the datastore.\n+     * Return a comparator for ordering by this element, or null if\n+     * the ordering is done in the datastore.\n      */\n     public Comparator getComparator ();\n }"},{"sha":"d0ed91f2cffa4a69a6524ddc5034f764b507dc6c","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/ProxySetupStateManager.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ProxySetupStateManager.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ProxySetupStateManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ProxySetupStateManager.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -25,9 +25,9 @@\n import org.apache.openjpa.util.InternalException;\n \n /**\n- * <p>Mostly-unimplemented state manager type whose sole purpose is to\n+ * Mostly-unimplemented state manager type whose sole purpose is to\n  * check the initial value of all SCO container fields for their initialized\n- * types and comparators.</p>\n+ * types and comparators.\n  *\n  * @author Abe White\n  */"},{"sha":"280311e0bcdb804a038b32c0c42ef52d8578c3db","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/QueryMetaData.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/meta/QueryMetaData.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/meta/QueryMetaData.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/QueryMetaData.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -24,10 +24,9 @@\n import org.apache.openjpa.lib.xml.Commentable;\n \n /**\n- * <p>Holds metadata about named queries.</p>\n- * <p/>\n- * <p>Information stored in this instance gets transfered to\n- * new {@link Query} instances.</p>\n+ * Holds metadata about named queries.\n+ *  Information stored in this instance gets transfered to\n+ * new {@link Query} instances.\n  *\n  * @author Steve Kim\n  */\n@@ -179,7 +178,7 @@ public void addHint(String key, Object value) {\n \n     /**\n      * Set query template information into the given concrete\n-     * query instance.  However, the language, query string, and\n+     * query instance. However, the language, query string, and\n      * candidate class are assumed to be declared in the query\n      * instantiation, and hints are not transferred.\n      */"},{"sha":"6b1d091f79784539a832b5c47990ba2c03ee42cc","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/SequenceMetaData.java","status":"modified","additions":8,"deletions":9,"changes":17,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/meta/SequenceMetaData.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/meta/SequenceMetaData.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/SequenceMetaData.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -30,7 +30,7 @@\n import org.apache.openjpa.util.OpenJPAException;\n \n /**\n- * <p>Metadata about a named sequence.</p>\n+ * Metadata about a named sequence.\n  *\n  * @author Abe White\n  * @since 4.0\n@@ -277,7 +277,7 @@ protected Seq instantiate(ClassLoader envLoader) {\n     }\n \n     /**\n-     * Create a new plugin value for sequences.  Returns a standard\n+     * Create a new plugin value for sequences. Returns a standard\n      * {@link SeqValue} by default.\n      */\n     protected PluginValue newPluginValue(String property) {\n@@ -295,7 +295,7 @@ protected void addStandardProperties(StringBuffer props) {\n     }\n \n     /**\n-     * Add a string property to the buffer.  Nothing will be added if value\n+     * Add a string property to the buffer. Nothing will be added if value\n      * is null or empty string.\n      */\n     protected void appendProperty(StringBuffer props, String name, String val) {\n@@ -307,8 +307,7 @@ protected void appendProperty(StringBuffer props, String name, String val) {\n     }\n \n     /**\n-     * Add an int property to the buffer.  Nothing will be added if value\n-     * is -1.\n+     * Add an int property to the buffer. Nothing will be added if value is -1.\n      */\n     protected void appendProperty(StringBuffer props, String name, int val) {\n         if (val == -1)\n@@ -346,13 +345,13 @@ public void setComments(String[] comments) {\n     }\n \n     /**\n-     *\tAllow facades to supply adapters from a spec sequence type to the\n-     *\tOpenJPA sequence type.\n+     * Allow facades to supply adapters from a spec sequence type to the\n+     * OpenJPA sequence type.\n      */\n     public static interface SequenceFactory {\n \n         /**\n-         *\tTransform the given class named in metadata into a sequence.\n+         * Transform the given class named in metadata into a sequence.\n          */\n \t\tpublic Seq toSequence (Class cls, String props)\n \t\t\tthrows Exception;"},{"sha":"b71fe42c324cd4c923abcf6e5ef6e2ef2774e516","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/UpdateStrategies.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/meta/UpdateStrategies.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/meta/UpdateStrategies.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/UpdateStrategies.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -22,7 +22,7 @@\n import org.apache.openjpa.lib.util.StringDistance;\n \n /**\n- * <p>Strategies for persistent value updates.</p>\n+ * Strategies for persistent value updates.\n  *\n  * @author Abe White\n  * @since 4.0\n@@ -64,7 +64,7 @@ public static String getName(int strategy) {\n     }\n \n     /**\n-     *\tConvert the given strategy name to its constant.\n+     * Convert the given strategy name to its constant.\n      */\n     public static int getCode(String val, Object context) {\n         if (\"none\".equals(val))"},{"sha":"dccf44af679f2d8b29016bbf82c5d9b59731fef8","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/ValueMetaData.java","status":"modified","additions":29,"deletions":29,"changes":58,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ValueMetaData.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ValueMetaData.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ValueMetaData.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -16,8 +16,8 @@\n package org.apache.openjpa.meta;\n \n /**\n- * <p>Holds metadata on a value; this could be a field value, key value, or\n- * element value.</p>\n+ * Holds metadata on a value; this could be a field value, key value, or\n+ * element value.\n  *\n  * @since 4.0\n  * @author Abe White\n@@ -36,7 +36,7 @@\n     public int CASCADE_IMMEDIATE = 1;\n \n     /**\n-     * Use automatic cascade behavior.  Persistence-by-reachability,\n+     * Use automatic cascade behavior. Persistence-by-reachability,\n      * delete-dependent, attach-if-detached, etc.\n      */\n     public int CASCADE_AUTO = 2;\n@@ -83,7 +83,7 @@\n     public ClassMetaData getTypeMetaData();\n \n     /**\n-     * Return the declared class of the value.  This can differ\n+     * Return the declared class of the value. This can differ\n      * from the return value of {@link #getType} if the user indicates\n      * a different type or the value has an externalizer.\n      */\n@@ -95,14 +95,14 @@\n     public void setDeclaredType(Class type);\n \n     /**\n-     * Return the declared type code of the value.  This can differ\n+     * Return the declared type code of the value. This can differ\n      * from the return value of {@link #getTypeCode} if the user indicates\n      * a different type or the value has an externalizer.\n      */\n     public int getDeclaredTypeCode();\n \n     /**\n-     * Set the type code for the value.  The type code is usually\n+     * Set the type code for the value. The type code is usually\n      * computed automatically, but it can be useful to set it explicitly\n      * when creating metadatas from scratch.\n      */\n@@ -121,7 +121,7 @@\n     /**\n      * This attribute is a hint to the implementation to store this value\n      * in the same structure as the class, rather than as a separate datastore\n-     * structure.  Defaults to true if the field is not a collection or map\n+     * structure. Defaults to true if the field is not a collection or map\n      * or persistence-capable object; defaults to false otherwise.\n      * Implementations are permitted to ignore this attribute.\n      */\n@@ -130,7 +130,7 @@\n     /**\n      * This attribute is a hint to the implementation to store this value\n      * in the same structure as the class, rather than as a separate datastore\n-     * structure.  Defaults to true if the field is not a collection or map\n+     * structure. Defaults to true if the field is not a collection or map\n      * or persistence-capable objects; defaults to false otherwise.\n      * Implementations are permitted to ignore this attribute.\n      */\n@@ -152,8 +152,8 @@\n     public ClassMetaData addEmbeddedMetaData();\n \n     /**\n-     * Cascade behavior for delete operation.  Only applies to\n-     * persistence-capable values.  Options are:<br />\n+     * Cascade behavior for delete operation. Only applies to\n+     * persistence-capable values. Options are:<br />\n      * <ul>\n      * <li><code>CASCADE_NONE</code>: No cascades.</li>\n      * <li><code>CASCADE_IMMEDIATE</code>: Value is deleted immediately when\n@@ -169,15 +169,15 @@\n     /**\n      * Cascade behavior for deletion.\n      *\n-     * @see    #getCascadeDelete\n+     * @see #getCascadeDelete\n      */\n     public void setCascadeDelete(int cascade);\n \n     /**\n-     * Cascade behavior for persist operation.  Only applies to\n-     * persistence-capable values.  Options are:<br />\n+     * Cascade behavior for persist operation. Only applies to\n+     * persistence-capable values. Options are:<br />\n      * <ul>\n-     * <li><code>CASCADE_NONE</code>: No cascades.  If a transient relation\n+     * <li><code>CASCADE_NONE</code>: No cascades. If a transient relation\n      * is held at flush, an error is thrown.</li>\n      * <li><code>CASCADE_IMMEDIATE</code>: Value is persisted immediately when\n      * the owning object is persisted.</li>\n@@ -189,15 +189,15 @@\n     /**\n      * Cascade behavior for persist operation.\n      *\n-     * @see    #getCascadePersist\n+     * @see #getCascadePersist\n      */\n     public void setCascadePersist(int cascade);\n \n     /**\n-     * Cascade behavior for attach operation.  Only applies to\n-     * persistence-capable values.  Options are:<br />\n+     * Cascade behavior for attach operation. Only applies to\n+     * persistence-capable values. Options are:<br />\n      * <ul>\n-     * <li><code>CASCADE_NONE</code>: No cascades of attach.  Relation\n+     * <li><code>CASCADE_NONE</code>: No cascades of attach. Relation\n      * remains detached.</li>\n      * <li><code>CASCADE_IMMEDIATE</code>: Value is attached immediately.</li>\n      * </ul>\n@@ -207,13 +207,13 @@\n     /**\n      * Cascade behavior for attach operation.\n      *\n-     * @see    #getCascadeAttach\n+     * @see #getCascadeAttach\n      */\n     public void setCascadeAttach(int cascade);\n \n     /**\n-     * Cascade behavior for refresh operation.  Only applies to\n-     * persistence-capable values.  Options are:<br />\n+     * Cascade behavior for refresh operation. Only applies to\n+     * persistence-capable values. Options are:<br />\n      * <ul>\n      * <li><code>CASCADE_NONE</code>: No cascades of refresh.</li>\n      * <li><code>CASCADE_IMMEDIATE</code>: Persistent value object is also\n@@ -227,7 +227,7 @@\n     /**\n      * Cascade behavior for refresh operation.\n      *\n-     * @see    #getCascadeRefresh\n+     * @see #getCascadeRefresh\n      */\n     public void setCascadeRefresh(int cascade);\n \n@@ -242,21 +242,21 @@\n     public void setSerialized(boolean serialized);\n \n     /**\n-     * The field that this value shares a mapping with.  Currently the only\n+     * The field that this value shares a mapping with. Currently the only\n      * supported use for a mapped-by value is when a map field key is\n      * determined by a field of the persistence-capable map value.\n      */\n     public String getValueMappedBy();\n \n     /**\n-     * The field that this value shares a mapping with.  Currently the only\n+     * The field that this value shares a mapping with. Currently the only\n      * supported use for a mapped-by value is when a map field key is\n      * determined by a field of the persistence-capable map value.\n      */\n     public void setValueMappedBy(String mapped);\n \n     /**\n-     * The field that this value shares a mapping with.  Currently the only\n+     * The field that this value shares a mapping with. Currently the only\n      * supported use for a mapped-by value is when a map field key is\n      * determined by a field of the persistence-capable map value.\n      */\n@@ -288,13 +288,13 @@\n     public void setResolve(int mode, boolean on);\n \n     /**\n-     * Resolve and validate metadata.  Return true if already resolved.\n+     * Resolve and validate metadata. Return true if already resolved.\n      */\n     public boolean resolve(int mode);\n \n     /**\n-     *\tCopy state from the given value to this one.  Do not copy mapping\n-      *\tinformation.\n+     * Copy state from the given value to this one. Do not copy mapping\n+      * information.\n      */\n     public void copy (ValueMetaData vmd);\n }"},{"sha":"e766d34937d05c502e686d8fc30aebd7a185d165","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/ValueMetaDataImpl.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ValueMetaDataImpl.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ValueMetaDataImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ValueMetaDataImpl.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -20,7 +20,7 @@\n import org.apache.openjpa.util.UserException;\n \n /**\n- * <p>Default {@link ValueMetaData} implementation.</p>\n+ * Default {@link ValueMetaData} implementation.\n  *\n  * @author Abe White\n  * @nojavadoc\n@@ -235,7 +235,7 @@ public void setCascadePersist(int persist) {\n \n     public int getCascadeAttach() {\n         if (_owner.getManagement() != FieldMetaData.MANAGE_PERSISTENT\n-            || !isDeclaredTypePC())    // attach acts on declared type\n+            || !isDeclaredTypePC()) // attach acts on declared type\n             return CASCADE_NONE;\n         return _attach;\n     }\n@@ -248,7 +248,7 @@ public void setCascadeAttach(int attach) {\n \n     public int getCascadeRefresh() {\n         if (_owner.getManagement() != FieldMetaData.MANAGE_PERSISTENT\n-            || !isDeclaredTypePC())    // refresh acts on declared type\n+            || !isDeclaredTypePC()) // refresh acts on declared type\n             return CASCADE_NONE;\n         return _refresh;\n     }"},{"sha":"85c3aefda6f90a4b411bb72cd2c6059ad669e28f","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/ValueStrategies.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ValueStrategies.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ValueStrategies.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ValueStrategies.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -23,7 +23,7 @@\n import serp.util.Numbers;\n \n /**\n- * <p>Strategies for persistent value generation.</p>\n+ * Strategies for persistent value generation.\n  *\n  * @author Abe White\n  * @since 4.0\n@@ -115,7 +115,7 @@ public static int getCode(String val, Object context) {\n     }\n \n     /**\n-     *\tAssert that the given strategy is supported by the current runtime.\n+     * Assert that the given strategy is supported by the current runtime.\n      */\n     public static void assertSupported(int strategy, MetaDataContext context,\n         String attributeName) {"},{"sha":"9c4083fa77f81b92153bd5867470b7126fadf211","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/AbstractChangeTracker.java","status":"modified","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/AbstractChangeTracker.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/AbstractChangeTracker.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/AbstractChangeTracker.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -24,7 +24,7 @@\n import org.apache.commons.collections.set.MapBackedSet;\n \n /**\n- * <p>Base class that provides utilities to change trackers.</p>\n+ * Base class that provides utilities to change trackers.\n  *\n  * @author Abe White\n  * @nojavadoc\n@@ -33,17 +33,17 @@\n     implements ChangeTracker {\n \n     /**\n-     * Collection of added items.  May be null.\n+     * Collection of added items. May be null.\n      */\n     protected Collection add = null;\n \n     /**\n-     * Collection of removed items.  May be null.\n+     * Collection of removed items. May be null.\n      */\n     protected Collection rem = null;\n \n     /**\n-     * Collection of changed items.  May be null.\n+     * Collection of changed items. May be null.\n      */\n     protected Collection change = null;\n \n@@ -60,15 +60,15 @@ public AbstractChangeTracker() {\n \n     /**\n      * Whether to automatically stop tracking when the number of changes\n-     * exceeds the container size.  Defaults to true.\n+     * exceeds the container size. Defaults to true.\n      */\n     public boolean getAutoOff() {\n         return _autoOff;\n     }\n \n     /**\n      * Whether to automatically stop tracking when the number of changes\n-     * exceeds the container size.  Defaults to true.\n+     * exceeds the container size. Defaults to true.\n      */\n     public void setAutoOff(boolean autoOff) {\n         _autoOff = autoOff;\n@@ -86,8 +86,8 @@ public void startTracking() {\n     }\n \n     /**\n-     * Return the initial sequence value for this proxy.  Typically this is\n-     * the container size.  Assumes an unordered collection by default,\n+     * Return the initial sequence value for this proxy. Typically this is\n+     * the container size. Assumes an unordered collection by default,\n      * returning 0.\n      */\n     protected int initialSequence() {\n@@ -179,7 +179,7 @@ public void setNextSequence(int seq) {\n     }\n \n     /**\n-     * Create a new set for storing adds/removes/changes.  Takes into account\n+     * Create a new set for storing adds/removes/changes. Takes into account\n      * whether we need to use an identity set or standard set.\n      */\n     protected Set newSet() {\n@@ -190,7 +190,7 @@ protected Set newSet() {\n \n     /**\n      * Set whether to use identity-based datastructures, and switch our current\n-     * datastructures appropriately if needed.  We use identity structures for\n+     * datastructures appropriately if needed. We use identity structures for\n      * PC types in case the user has coded them such that two objects with\n      * different identities can compare equals().\n      */\n@@ -209,7 +209,7 @@ private void setIdentity(Object val) {\n     }\n \n     /**\n-     *\tSwitch from an identity structure to a standard one, or vice versa.\n+     * Switch from an identity structure to a standard one, or vice versa.\n      */\n     private static Collection switchStructure(Collection cur,\n         boolean identity) {"},{"sha":"41b1f60c0d2b213202c859622c4746884f6e81dc","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/AbstractLRSProxyCollection.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/AbstractLRSProxyCollection.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/AbstractLRSProxyCollection.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/AbstractLRSProxyCollection.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -32,14 +32,14 @@\n import org.apache.openjpa.lib.util.Localizer;\n \n /**\n- * <p>A collection proxy designed for collections backed by extremely large\n+ * A collection proxy designed for collections backed by extremely large\n  * result sets in which each call to {@link #iterator} may perform a database\n- * query.  Changes to the collection are tracked through a\n- * {@link ChangeTracker}.  This collection has the following limitations:\n+ * query. Changes to the collection are tracked through a\n+ * {@link ChangeTracker}. This collection has the following limitations:\n  * <ul>\n  * <li>The <code>size</code> method may return {@link Integer#MAX_VALUE}.</li>\n  * <li>The collection cannot contain duplicate elements.</li>\n- * </ul></p>\n+ * </ul>\n  *\n  * @author Abe White\n  */\n@@ -61,9 +61,9 @@\n     /**\n      * Constructor.\n      *\n-     * @param    elementType        the allowed type of elements, or null for no\n+     * @param elementType the allowed type of elements, or null for no\n      * restrictions\n-     * @param    ordered            true if this collection is ordered\n+     * @param ordered true if this collection is ordered\n      */\n     public AbstractLRSProxyCollection(Class elementType, boolean ordered,\n         OpenJPAConfiguration conf) {\n@@ -279,7 +279,7 @@ protected Object writeReplace()\n \n     /**\n      * Implement this method to return an iterator over the contents of the\n-     * collection.  This method may be invoked multiple times.  The returned\n+     * collection. This method may be invoked multiple times. The returned\n      * iterator does not have to support the {@link Iterator#remove} method,\n      * and may implement {@link org.apache.openjpa.lib.util.Closeable}.\n      */\n@@ -356,7 +356,7 @@ public void setNextSequence(int seq) {\n     }\n \n     /**\n-     *\tWrapper around our filtering iterator chain.\n+     * Wrapper around our filtering iterator chain.\n      */\n     private class Itr\n         implements Iterator, Closeable {"},{"sha":"748ea081aa9a46bbd8cbdff49e1a7d7ce6ff6128","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/AbstractLRSProxyMap.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/AbstractLRSProxyMap.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/AbstractLRSProxyMap.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/AbstractLRSProxyMap.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -36,14 +36,14 @@\n import org.apache.openjpa.lib.util.Localizer;\n \n /**\n- * <p>A map proxy designed for maps backed by extremely large result sets in\n+ * A map proxy designed for maps backed by extremely large result sets in\n  * which each call to {@link #get} or {@link #containsKey} may perform a\n- * database query.  Changes to the map are tracked through a\n- * {@link ChangeTracker}.  This map has the following limitations:\n+ * database query. Changes to the map are tracked through a\n+ * {@link ChangeTracker}. This map has the following limitations:\n  * <ul>\n  * <li>The <code>size</code> method may return {@link Integer#MAX_VALUE}.</li>\n  * <li>Null keys and values are not supported.</li>\n- * </ul></p>\n+ * </ul>\n  *\n  * @author Abe White\n  */\n@@ -329,9 +329,9 @@ protected Object writeReplace()\n \n     /**\n      * Implement this method to return an iterator over the entries\n-     * in the map.  Each returned object must implement the\n-     * <code>Map.Entry</code> interface.  This method may be invoked multiple\n-     * times.  The iterator does not have to support the\n+     * in the map. Each returned object must implement the\n+     * <code>Map.Entry</code> interface. This method may be invoked multiple\n+     * times. The iterator does not have to support the\n      * {@link Iterator#remove} method, and may implement\n      * {@link org.apache.openjpa.lib.util.Closeable}.\n      */\n@@ -432,7 +432,7 @@ public void setNextSequence(int seq) {\n     }\n \n     /**\n-     *\tWrapper around our filtering iterator chain.\n+     * Wrapper around our filtering iterator chain.\n      */\n     private class Itr\n         implements Iterator, Closeable {"},{"sha":"013bd0f7c829ca40e98d921b83352a3d400bc711","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ApplicationIds.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ApplicationIds.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ApplicationIds.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ApplicationIds.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -34,15 +34,15 @@\n import serp.util.Numbers;\n \n /**\n- * <p>Utility class for manipulating application object ids.</p>\n+ * Utility class for manipulating application object ids.\n  *\n  * @author Abe White\n  * @nojavadoc\n  */\n public class ApplicationIds {\n \n     /**\n-     * Return the primary key values for the given object id.  The values\n+     * Return the primary key values for the given object id. The values\n      * will be returned in the same order as the metadata primary key fields.\n      */\n     public static Object[] toPKValues(Object oid, ClassMetaData meta) {\n@@ -397,7 +397,7 @@ private static boolean assign(OpenJPAStateManager sm, StoreManager store,\n     }\n \n     /**\n-     *\tHelper class used to transfer pk values to/from application oids.\n+     * Helper class used to transfer pk values to/from application oids.\n      */\n     private static class PrimaryKeyFieldManager\n         implements FieldManager {"},{"sha":"f44d2a00c849d2be06d6f322160e9569292b779f","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ArrayStateImage.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ArrayStateImage.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ArrayStateImage.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ArrayStateImage.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -20,10 +20,10 @@\n import org.apache.commons.lang.ObjectUtils;\n \n /**\n- * <p>Utilities for dealing with a simple state image consisting of an\n+ * Utilities for dealing with a simple state image consisting of an\n  * <code>Object[]</code> of field values with one extra index containing a\n- * {@link BitSet} of loaded fields.  This simplistic state image might be used\n- * for optimistic versioning.</p>\n+ * {@link BitSet} of loaded fields. This simplistic state image might be used\n+ * for optimistic versioning.\n  *\n  * @author Abe White\n  * @nojavadoc\n@@ -76,8 +76,8 @@ public static void setLoaded(Object[] state, BitSet loaded) {\n     }\n \n     /**\n-     *\tReturn whether the given images are equivalent from an optimistic\n-     *\tlocking perspective.\n+     * Return whether the given images are equivalent from an optimistic\n+     * locking perspective.\n      */\n     public static boolean sameVersion(Object[] state1, Object[] state2) {\n         if (state1 == state2)"},{"sha":"2a3d4e1f8b2d38a27e2174cd15f4157f8d1916c7","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ByteId.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ByteId.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ByteId.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ByteId.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,"},{"sha":"548b81f5390b4a3441bc1be841d1ef9a97567997","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/CacheMap.java","status":"modified","additions":9,"deletions":10,"changes":19,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/CacheMap.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/CacheMap.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/CacheMap.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -152,15 +152,15 @@ protected void softMapValueExpired(Object key) {\n     }\n \n     /**\n-     * Put the given entry into the given map.  Allows subclasses to\n+     * Put the given entry into the given map. Allows subclasses to\n      * take additional actions.\n      */\n     protected Object put(Map map, Object key, Object value) {\n         return map.put(key, value);\n     }\n \n     /**\n-     * Remove the given key from the given map.  Allows subclasses to\n+     * Remove the given key from the given map. Allows subclasses to\n      * take additional actions.\n      */\n     protected Object remove(Map map, Object key) {\n@@ -260,9 +260,9 @@ public Set getPinnedKeys() {\n     }\n \n     /**\n-     * Locks the given key and its value into the map.  Objects pinned into\n+     * Locks the given key and its value into the map. Objects pinned into\n      * the map are not counted towards the maximum cache size, and are never\n-     * evicted implicitly.  You may pin keys for which no value is in the map.\n+     * evicted implicitly. You may pin keys for which no value is in the map.\n      *\n      * @return true if the givne key's value was pinned; false if no value\n      * for the given key is cached\n@@ -320,18 +320,18 @@ public boolean unpin(Object key) {\n      * requirements or through garbage collection of soft references.\n      * It is invoked with <code>expired</code> set to <code>false</code>\n      * when an object is explicitly removed via the {@link #remove} or\n-     * {@link #clear} methods.  This may be invoked more than once for a\n+     * {@link #clear} methods. This may be invoked more than once for a\n      * given entry.\n      *\n-     * @param    value    may be null if the value was a soft reference that has\n+     * @param value may be null if the value was a soft reference that has\n      * been GCd\n      * @since 2.5.0\n      */\n     protected void entryRemoved(Object key, Object value, boolean expired) {\n     }\n \n     /**\n-     * Invoked when an entry is added to the cache.  This may be invoked\n+     * Invoked when an entry is added to the cache. This may be invoked\n      * more than once for an entry.\n      */\n     protected void entryAdded(Object key, Object value) {\n@@ -586,7 +586,7 @@ public Iterator iterator() {\n     }\n \n     /**\n-     *\tIterator over all entries.\n+     * Iterator over all entries.\n      */\n     private class EntryIterator\n         implements Iterator, Predicate {\n@@ -647,4 +647,3 @@ public boolean evaluate(Object obj) {\n \t}\n }\n \n-"},{"sha":"c90e91e5a9c61d46083d76b5201cb98cd774ab15","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/CallbackException.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/CallbackException.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/CallbackException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/CallbackException.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -16,7 +16,7 @@\n package org.apache.openjpa.util;\n \n /**\n- * <p>Exception type thrown when an error occurs in a callback.</p>\n+ * Exception type thrown when an error occurs in a callback.\n  *\n  * @since 4.0\n  * @author Marc Prud'hommeaux"},{"sha":"b5d9c1cac1dbbaeae2ee2b9bba44c39d88eed55f","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ChangeTracker.java","status":"modified","additions":15,"deletions":15,"changes":30,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ChangeTracker.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ChangeTracker.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ChangeTracker.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -18,9 +18,9 @@\n import java.util.Collection;\n \n /**\n- * <p>Interface for components that track changes to containers at a\n- * fine-grained level.  Proxies that use change trackers might have better\n- * update performance than non-tracking proxies.</p>\n+ * Interface for components that track changes to containers at a\n+ * fine-grained level. Proxies that use change trackers might have better\n+ * update performance than non-tracking proxies.\n  *\n  * @author Abe White\n  */\n@@ -56,8 +56,8 @@\n     public Collection getRemoved();\n \n     /**\n-     * Return the set of elements that have changed.  In maps, this marks a\n-     * possible change in value for a key.  In collections, this marks an\n+     * Return the set of elements that have changed. In maps, this marks a\n+     * possible change in value for a key. In collections, this marks an\n      * element that has been removed and re-added.\n      */\n     public Collection getChanged();\n@@ -67,20 +67,20 @@\n      * If the data store keeps this proxy's data in sequence order but allows\n      * holes for removed objects, the implementation can set the next\n      * sequence at load time, then retrieve it and start from there for\n-     * added objects at flush time.  This value is set back to 0 if the\n-     * proxy stops tracking changes.  For ordered proxies, it is set to the\n+     * added objects at flush time. This value is set back to 0 if the\n+     * proxy stops tracking changes. For ordered proxies, it is set to the\n      * proxy's size when the proxy starts tracking changes again.\n      */\n     public int getNextSequence();\n \n     /**\n-     *\tThe maximum element sequence value for this proxy at load time.\n-     *\tIf the data store keeps this proxy's data in sequence order but allows\n-     *\tholes for removed objects, the implementation can set the next\n-     *\tsequence at load time, then retrieve it and start from there for\n-     *\tadded objects at flush time.  This value is set back to 0 if the\n-     *\tproxy stops tracking changes.  For ordered proxies, it is set to the\n-     *\tproxy's size when the proxy starts tracking changes again.\n+     * The maximum element sequence value for this proxy at load time.\n+     * If the data store keeps this proxy's data in sequence order but allows\n+     * holes for removed objects, the implementation can set the next\n+     * sequence at load time, then retrieve it and start from there for\n+     * added objects at flush time. This value is set back to 0 if the\n+     * proxy stops tracking changes. For ordered proxies, it is set to the\n+     * proxy's size when the proxy starts tracking changes again.\n      */\n     public void setNextSequence (int seq);\n }"},{"sha":"f41c07b81cc918dfb6c53bf08556780f8bf51b92","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/CharId.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/CharId.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/CharId.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/CharId.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,"},{"sha":"fd0610431241d4a769ac9a8e0c1930ba1ad7fbfd","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ClassResolver.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ClassResolver.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ClassResolver.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ClassResolver.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -18,7 +18,7 @@\n import org.apache.openjpa.lib.util.MultiClassLoader;\n \n /**\n- * <p>Interface to customize the loading of classes under OpenJPA.</p>\n+ * Interface to customize the loading of classes under OpenJPA.\n  *\n  * @since 3.0\n  * @author Marc Prud'hommeaux\n@@ -31,9 +31,8 @@\n      * This can be a standard class loader, or a customized loader such\n      * as a {@link MultiClassLoader}.\n      *\n-     * @param    contextClass    the context class; may be null if no context\n-     * class\n-     * @param    envLoader        the thread's context class loader when the\n+     * @param contextClass the context class; may be null if no context class\n+     * @param envLoader the thread's context class loader when the\n      * persistence environment (i.e. broker)\n      * was obtained; may be null if operating outside\n      * the context of persistence environment"},{"sha":"25b3ce654dcb396d6d6cc576069926cb88bec637","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ClassResolverImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ClassResolverImpl.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ClassResolverImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ClassResolverImpl.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -18,7 +18,7 @@\n import org.apache.openjpa.lib.util.MultiClassLoader;\n \n /**\n- * <p>Default class resolver implementation.</p>\n+ * Default class resolver implementation.\n  *\n  * @since 3.0\n  * @author Abe White"},{"sha":"751aaa70f06a7db1d5c4026de69f994a8a5154e7","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/CollectionChangeTracker.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/CollectionChangeTracker.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/CollectionChangeTracker.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/CollectionChangeTracker.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -16,10 +16,10 @@\n package org.apache.openjpa.util;\n \n /**\n- * <p>Change tracker that can be used for collections.  If the user calls\n+ * Change tracker that can be used for collections. If the user calls\n  * any mutating methods on the collection that do not have an equivalent in\n  * this change tracker, then you must call {@link #stopTracking} after\n- * applying the operation to the collection.</p>\n+ * applying the operation to the collection.\n  *\n  * @author Abe White\n  */"},{"sha":"e88fb144ddd234de7a6bc675a6d583a8aa556cb2","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/CollectionChangeTrackerImpl.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/CollectionChangeTrackerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/CollectionChangeTrackerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/CollectionChangeTrackerImpl.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -21,7 +21,7 @@\n import org.apache.openjpa.conf.OpenJPAConfiguration;\n \n /**\n- * <p>Default {@link CollectionChangeTracker}.</p>\n+ * Default {@link CollectionChangeTracker}.\n  *\n  * @author Abe White\n  * @nojavadoc\n@@ -37,10 +37,9 @@\n     /**\n      * Constructor.\n      *\n-     * @param    coll    the collection to delegate to\n-     * @param    dups    true if the collection allows duplicates, false\n-     * otherwise\n-     * @param    order    true if the collection is ordered, false otherwise\n+     * @param coll the collection to delegate to\n+     * @param dups true if the collection allows duplicates, false otherwise\n+     * @param order true if the collection is ordered, false otherwise\n      */\n     public CollectionChangeTrackerImpl(Collection coll, boolean dups,\n         boolean order, OpenJPAConfiguration conf) {"},{"sha":"0d19fd39aacca2db37152733201bd6d3a2e8f2c1","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/DateId.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/DateId.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/DateId.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/DateId.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,"},{"sha":"68b70a1516f254455438b2fa390e38affe3c9162","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ExceptionInfo.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ExceptionInfo.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ExceptionInfo.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ExceptionInfo.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -16,8 +16,8 @@\n package org.apache.openjpa.util;\n \n /**\n- * <p>Interface supplying additional exception information.  All OpenJPA\n- * exceptions implement this interface.</p>\n+ * Interface supplying additional exception information. All OpenJPA\n+ * exceptions implement this interface.\n  *\n  * @author Abe White\n  * @since 4.0\n@@ -33,7 +33,7 @@\n     /**\n      * Exception message.\n      *\n-     * @see    Throwable#getMessage\n+     * @see Throwable#getMessage\n      */\n     public String getMessage();\n \n@@ -48,7 +48,7 @@\n     /**\n      * Stack.\n      *\n-     * @see    Throwable#printStackTrace\n+     * @see Throwable#printStackTrace\n      */\n     public void printStackTrace();\n \n@@ -73,7 +73,7 @@\n     public Throwable[] getNestedThrowables();\n \n     /**\n-     *\tThe failed object.\n+     * The failed object.\n      */\n     public Object getFailedObject ();\n }"},{"sha":"f5cb1f33fcddf4ac2d54266060ba3558593d73db","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/Exceptions.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/Exceptions.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/Exceptions.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/Exceptions.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -235,8 +235,8 @@ public static Object replaceFailedObject(Object ob) {\n     }\n \n     /**\n-     *\tReturn the object id for <code>ob</code> if it has one, or\n-     *\t<code>null</code> otherwise.\n+     * Return the object id for <code>ob</code> if it has one, or\n+     * <code>null</code> otherwise.\n      */\n     private static Object getObjectId(Object ob) {\n         if (ob instanceof PersistenceCapable"},{"sha":"e640aacda4bb9b0d23e2b3b084339f6a392bded4","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/GeneralException.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/GeneralException.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/GeneralException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/GeneralException.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -16,7 +16,7 @@\n package org.apache.openjpa.util;\n \n /**\n- * <p>General exception type.</p>\n+ * General exception type.\n  *\n  * @author Abe White\n  */"},{"sha":"7f5e84dbc90e7b4451e4848ceded387ee888047e","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/Id.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/Id.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/Id.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/Id.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -20,8 +20,8 @@\n import serp.util.Numbers;\n \n /**\n- * <p>Datastore identity type.  Implementations may choose to use this type,\n- * or choose to use their own datastore identity values.</p>\n+ * Datastore identity type. Implementations may choose to use this type,\n+ * or choose to use their own datastore identity values.\n  *\n  * @author Abe White\n  */\n@@ -100,7 +100,7 @@ public Id(Class cls, String key) {\n         else {\n             // allow either stringified long or result of Id.toString\n             int dash = key.indexOf('-');\n-            if (dash > 0)    // don't check for -1; might be negative number\n+            if (dash > 0) // don't check for -1; might be negative number\n                 key = key.substring(dash + 1);\n             _id = Long.parseLong(key);\n         }"},{"sha":"a5bb3c0c9a9e3a498ae017deff4475d5724d0db5","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ImplHelper.java","status":"modified","additions":18,"deletions":18,"changes":36,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ImplHelper.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ImplHelper.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ImplHelper.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -42,7 +42,7 @@\n import serp.util.Strings;\n \n /**\n- * <p>Helper for OpenJPA back-ends.</p>\n+ * Helper for OpenJPA back-ends.\n  *\n  * @since 3.0\n  * @author Abe White\n@@ -89,10 +89,10 @@ public static Method getSetter(Class cls, String prop) {\n     }\n \n     /**\n-     * Helper for store manager implementations.  This method simply delegates\n+     * Helper for store manager implementations. This method simply delegates\n      * to the proper singular method for each state manager.\n      *\n-     * @see    StoreManager#loadAll\n+     * @see StoreManager#loadAll\n      * @since 4.0\n      */\n     public static Collection loadAll(Collection sms, StoreManager store,\n@@ -130,7 +130,7 @@ private static Collection addFailedId(OpenJPAStateManager sm,\n     }\n \n     /**\n-     * Generate a value for the given metadata, or return null.  Generates\n+     * Generate a value for the given metadata, or return null. Generates\n      * values for hte following strategies: {@link ValueStrategies#SEQUENCE},\n      * {@link ValueStrategies#UUID_STRING}, {@link ValueStrategies#UUID_HEX}\n      */\n@@ -140,7 +140,7 @@ public static Object generateIdentityValue(StoreContext ctx,\n     }\n \n     /**\n-     * Generate a value for the given metadata, or return null.  Generates\n+     * Generate a value for the given metadata, or return null. Generates\n      * values for hte following strategies: {@link ValueStrategies#SEQUENCE},\n      * {@link ValueStrategies#UUID_STRING}, {@link ValueStrategies#UUID_HEX}\n      */\n@@ -174,18 +174,18 @@ private static Object generateValue(StoreContext ctx,\n \n     /**\n      * Return the store-specific facade class for the given broker\n-     * component class.  This method is used by facade implementations to\n+     * component class. This method is used by facade implementations to\n      * wrap store-specific components without knowing about all possible\n      * back-ends.\n      *\n-     * @param    conf        configuration for runtime\n-     * @param    openjpaCls        class of OpenJPA component (e.g.\n+     * @param conf configuration for runtime\n+     * @param openjpaCls class of OpenJPA component (e.g.\n      * JDBCFetchConfiguration.class)\n-     * @param    openjpaSuff    suffix of OpenJPA component (e.g. \"FetchConfiguration\")\n-     * @param    facadePkg    the unqualified facade package name (e.g. \"jdo\")\n-     * @param    facadeCls    the generic facade interface's class (e.g.\n+     * @param openjpaSuff suffix of OpenJPA component (e.g. \"FetchConfiguration\")\n+     * @param facadePkg the unqualified facade package name (e.g. \"jdo\")\n+     * @param facadeCls the generic facade interface's class (e.g.\n      * FetchPlan.class)\n-     * @param    facadeSuff    the suffix to append to the store prefix to get\n+     * @param facadeSuff the suffix to append to the store prefix to get\n      * the implementation class name (e.g. \"FetchPlanImpl\")\n      * or null to use the unqualified name of\n      * <code>facadeCls</code>\n@@ -228,7 +228,7 @@ public static Class getStoreFacadeType(OpenJPAConfiguration conf,\n     }\n \n     /**\n-     * Close the given resource.  The resource can be an extent iterator,\n+     * Close the given resource. The resource can be an extent iterator,\n      * query result, large result set relation, or any closeable OpenJPA\n      * component.\n      */\n@@ -251,17 +251,17 @@ public static void close(Object o) {\n      *\n      * @param type the class to test\n      * @return true if the class is manageable.\n-     * @param    conf the configuration that defines the current context\n+     * @param conf the configuration that defines the current context\n      */\n     public static boolean isManagedType(Class type) {\n         return PersistenceCapable.class.isAssignableFrom(type);\n     }\n \n     /**\n-     *  Returns true if the specified instance is manageable.\n+     * Returns true if the specified instance is manageable.\n      *\n-     *  @param  instance  the object to check\n-     *  @return true if the instance is a persistent type, false otherwise\n+     * @param instance the object to check\n+     * @return true if the instance is a persistent type, false otherwise\n      */\n     public static boolean isManageable(Object instance) {\n         return instance instanceof PersistenceCapable;"},{"sha":"8b839e7f8c96552c4fa99aa66ae9a7ac29252305","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/IntId.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/IntId.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/IntId.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/IntId.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,"},{"sha":"bb13a233bcdfd11bf900577aec789141bc21927b","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/InternalException.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/InternalException.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/InternalException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/InternalException.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -16,7 +16,7 @@\n package org.apache.openjpa.util;\n \n /**\n- * <p>Exception type for internal errors.</p>\n+ * Exception type for internal errors.\n  *\n  * @author Abe White\n  * @since 3.2"},{"sha":"0e4a264ec8887c24b1cfc442bfbbaaff62a4ce13","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/InvalidStateException.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/InvalidStateException.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/InvalidStateException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/InvalidStateException.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -16,8 +16,8 @@\n package org.apache.openjpa.util;\n \n /**\n- * <p>Exception type thrown when attempting to execute an operation that\n- * is not allowed by the current state.</p>\n+ * Exception type thrown when attempting to execute an operation that\n+ * is not allowed by the current state.\n  *\n  * @since 4.0\n  * @author Abe White"},{"sha":"0f8a942446045bc0d58654ce65376b3aaae5097a","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/LRSProxy.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/LRSProxy.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/LRSProxy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/LRSProxy.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -16,7 +16,7 @@\n package org.apache.openjpa.util;\n \n /**\n- * <p>Marker interface for large result set proxies.</p>\n+ * Marker interface for large result set proxies.\n  *\n  * @author Abe White\n  * @since 3.0.3"},{"sha":"56e2c1cc157fe145d134d64591a8d4426144ea42","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/LockException.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/LockException.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/LockException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/LockException.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -22,8 +22,7 @@\n import org.apache.openjpa.lib.util.Localizer;\n \n /**\n- * Exception indicating that locks on one or more objects could\n- * not be acquired.\n+ * Exception indicating that locks on one or more objects could not be acquired.\n  *\n  * @author Marc Prud'hommeaux\n  * @since 3.1"},{"sha":"a261e04cc9b79fa91a298b8c64bba679744e7be3","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/LongId.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/LongId.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/LongId.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/LongId.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,"},{"sha":"36a0fef784887c29acd80be5b592deef2ec68d3c","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/MapChangeTracker.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/MapChangeTracker.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/MapChangeTracker.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/MapChangeTracker.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -16,27 +16,27 @@\n package org.apache.openjpa.util;\n \n /**\n- * <p>Change tracker that can be used for maps.  If the user calls\n+ * Change tracker that can be used for maps. If the user calls\n  * any mutating methods on the map that do not have an equivalent in\n- * this change tracker, then you must call {@link ChangeTracker#stopTracking} \n- * after applying the operation to the map.  The collections returned from\n+ * this change tracker, then you must call {@link ChangeTracker#stopTracking}\n+ * after applying the operation to the map. The collections returned from\n  * {@link ChangeTracker#getAdded} and {@link ChangeTracker#getRemoved} will\n- * be collections of keys to add/remove.</p>\n+ * be collections of keys to add/remove.\n  *\n  * @author Abe White\n  */\n public interface MapChangeTracker\n     extends ChangeTracker {\n \n     /**\n-     * Whether to track keys or values.  Defaults to keys.\n+     * Whether to track keys or values. Defaults to keys.\n      * If you set to values, it is assumed there is a 1-1 correlation\n      * between keys and values in this map.\n      */\n     public boolean getTrackKeys();\n \n     /**\n-     * Whether to track keys or values.  Defaults to keys.\n+     * Whether to track keys or values. Defaults to keys.\n      * If you set to values, it is assumed there is a 1-1 correlation\n      * between keys and values in this map.\n      */\n@@ -53,7 +53,7 @@\n     public void removed(Object key, Object val);\n \n     /**\n-     *\tRecord that the given entry was altered.\n+     * Record that the given entry was altered.\n      */\n     public void changed(Object key, Object oldVal, Object newVal);\n }"},{"sha":"6baa8b4532b51a7991939ab67c5388c4687d724b","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/MapChangeTrackerImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/MapChangeTrackerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/MapChangeTrackerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/MapChangeTrackerImpl.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -20,7 +20,7 @@\n import org.apache.openjpa.conf.OpenJPAConfiguration;\n \n /**\n- * <p>Default {@link MapChangeTracker}.</p>\n+ * Default {@link MapChangeTracker}.\n  *\n  * @author Abe White\n  * @nojavadoc"},{"sha":"8e85b197a72bbb4a6be5ece585dbb7da74381d4f","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/MetaDataException.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/MetaDataException.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/MetaDataException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/MetaDataException.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -16,7 +16,7 @@\n package org.apache.openjpa.util;\n \n /**\n- * <p>Exception type reserved for missing or invalid metadata.</p>\n+ * Exception type reserved for missing or invalid metadata.\n  *\n  * @since 3.0\n  * @author Abe White"},{"sha":"8a6b8e40655f81a68406ed06e3527a5e731c814d","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/MultiLoaderClassResolver.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/MultiLoaderClassResolver.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/MultiLoaderClassResolver.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/MultiLoaderClassResolver.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,"},{"sha":"28bf866f46bb6b6edaf486c06b38226836076266","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/NoTransactionException.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/NoTransactionException.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/NoTransactionException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/NoTransactionException.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -16,8 +16,8 @@\n package org.apache.openjpa.util;\n \n /**\n- * <p>Exception type thrown when attempting a transactional operation without\n- * an active transaction.</p>\n+ * Exception type thrown when attempting a transactional operation without\n+ * an active transaction.\n  *\n  * @since 4.0\n  * @author Abe White"},{"sha":"d541c32589827dea25b1aba46f586f9b6cc52345","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ObjectExistsException.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ObjectExistsException.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ObjectExistsException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ObjectExistsException.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -18,7 +18,7 @@\n import org.apache.openjpa.lib.util.Localizer;\n \n /**\n- * <p>Exception type reserved for conflicts with existing objects.</p>\n+ * Exception type reserved for conflicts with existing objects.\n  *\n  * @author Abe White\n  */"},{"sha":"875a5d605e3ddd933b336f3a860ac0912486d3b5","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ObjectId.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ObjectId.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ObjectId.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ObjectId.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -16,8 +16,8 @@\n package org.apache.openjpa.util;\n \n /**\n- * <p>Identity type appropriate for object primary key fields and shared\n- * id classes.</p>\n+ * Identity type appropriate for object primary key fields and shared\n+ * id classes.\n  *\n  * @author Abe White\n  */"},{"sha":"e9de0140be7ecc9b5b54196b996895e6fdda7f90","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ObjectNotFoundException.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ObjectNotFoundException.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ObjectNotFoundException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ObjectNotFoundException.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -20,7 +20,7 @@\n import org.apache.openjpa.lib.util.Localizer;\n \n /**\n- * <p>Exception type reserved for failed object lookups.</p>\n+ * Exception type reserved for failed object lookups.\n  *\n  * @author Abe White\n  */"},{"sha":"185b14585482388827650e68ec1ee6fb9bb1d9b8","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/OpenJPAException.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/OpenJPAException.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/OpenJPAException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/OpenJPAException.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -23,9 +23,9 @@\n import java.io.Serializable;\n \n /**\n- * <p>Exception type for all OpenJPA exceptions.  Meant to be easily\n+ * Exception type for all OpenJPA exceptions. Meant to be easily\n  * transformed into an appropriate exception at the API layer, since most APIs\n- * define their own exception types.</p>\n+ * define their own exception types.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"99f367ede600bcaebf0682cc6b1a63cb9f9f5931","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/OpenJPAId.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/OpenJPAId.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/OpenJPAId.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/OpenJPAId.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -18,7 +18,7 @@\n import java.io.Serializable;\n \n /**\n- * <p>Identity class extended by builtin OpenJPA identity objects.</p>\n+ * Identity class extended by builtin OpenJPA identity objects.\n  *\n  * @author Steve Kim\n  */"},{"sha":"48a6df2dae38a858415c2013536513899356c9a9","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/OptimisticException.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/OptimisticException.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/OptimisticException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/OptimisticException.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,"},{"sha":"a5a56c8476d55df669d2d7bf2db9b87d98a5728e","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/Proxies.java","status":"modified","additions":6,"deletions":7,"changes":13,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/Proxies.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/Proxies.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/Proxies.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -26,7 +26,7 @@\n import org.apache.openjpa.lib.util.Localizer;\n \n /**\n- * <p>Utility methods for managing proxies.</p>\n+ * Utility methods for managing proxies.\n  *\n  * @author Abe White\n  */\n@@ -48,8 +48,7 @@ public static boolean isOwner(Proxy proxy, OpenJPAStateManager sm,\n     }\n \n     /**\n-     * Used by proxy types to check that an attempt to add a new value\n-     * is legal.\n+     * Used by proxy types to check that an attempt to add a new value is legal.\n      */\n     public static void assertAllowedType(Object value, Class allowed) {\n         if (value != null && allowed != null && !allowed.isInstance(value)) {\n@@ -80,7 +79,7 @@ public static void removed(Proxy proxy, Object removed, boolean key) {\n     }\n \n     /**\n-     * Return an iterator that dirties its owner on calls to remove.  This\n+     * Return an iterator that dirties its owner on calls to remove. This\n      * iterator assumes that the given proxy collection uses a\n      * {@link CollectionChangeTracker}.\n      */\n@@ -111,7 +110,7 @@ public void remove() {\n \n     /**\n      * Return a proxy iterator that dirties its owner on remove, set, and\n-     * add.  This iterator assumes that the given proxy collection uses a\n+     * add. This iterator assumes that the given proxy collection uses a\n      * {@link CollectionChangeTracker}.\n      */\n     public static ListIterator listIterator(final ProxyCollection proxy,\n@@ -181,7 +180,7 @@ public void remove() {\n     }\n \n     /**\n-     *\tReturn a proxy for the given map key or entry set.\n+     * Return a proxy for the given map key or entry set.\n      */\n     public static Set entrySet(final ProxyMap proxy, final Set set,\n         final int mode) {"},{"sha":"ca84d131845c936f1c3f7b7657b5db455a0a961b","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/Proxy.java","status":"modified","additions":8,"deletions":9,"changes":17,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/Proxy.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/Proxy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/Proxy.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -18,20 +18,19 @@\n import org.apache.openjpa.kernel.OpenJPAStateManager;\n \n /**\n- * <p>Interface implemented by all proxy types to allow setting and nulling\n- * of their owning instance.</p>\n- * <p/>\n- * <p>All concrete proxy classes should be public and have publc no-args\n+ * Interface implemented by all proxy types to allow setting and nulling\n+ * of their owning instance.\n+ *  All concrete proxy classes should be public and have publc no-args\n  * constructors so that tools that work via reflection on persistent instances\n- * can manipulate them.</p>\n+ * can manipulate them.\n  *\n  * @author Abe White\n  */\n public interface Proxy {\n \n     /**\n      * Reset the state of the proxy, and set the owning instance of the\n-     * proxy and the name of the field it is assigned to.  Set to null to\n+     * proxy and the name of the field it is assigned to. Set to null to\n      * indicate that the proxy is no longer managed.\n      */\n     public void setOwner(OpenJPAStateManager sm, int field);\n@@ -52,8 +51,8 @@\n     public ChangeTracker getChangeTracker();\n \n     /**\n-     *\tReturn an unproxied copy of the given instance.  This method is used\n-     *\tby proxy managers to create backup values for use in rollback.\n+     * Return an unproxied copy of the given instance. This method is used\n+     * by proxy managers to create backup values for use in rollback.\n      */\n     public Object copy(Object orig);\n }"},{"sha":"5e9af0ded60876fbf432a87408dc4140c7330f91","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyArrayList.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyArrayList.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyArrayList.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyArrayList.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -26,12 +26,12 @@\n import org.apache.openjpa.kernel.OpenJPAStateManager;\n \n /**\n- * <p>Extension of the {@link ArrayList} type that dirties the\n+ * Extension of the {@link ArrayList} type that dirties the\n  * persistent/transactional field it is assigned to on modification.\n  * The need to dirty the field on <b>any</b> modification mandates that\n  * this class must override all mutator methods of the base type.\n  * This may lead to multiple calls to <code>dirty</code> for one state\n- * change if one mutator method of the base type calls another.</p>\n+ * change if one mutator method of the base type calls another.\n  *\n  * @author Abe White\n  * @nojavadoc"},{"sha":"917f026807d4832f84487f70a6bff9150cbb2803","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyCalendar.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyCalendar.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyCalendar.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyCalendar.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -18,8 +18,8 @@\n import java.util.TimeZone;\n \n /**\n- * <p>Interface implemented by all built-in proxies on\n- * {@link java.util.Calendar} types.</p>\n+ * Interface implemented by all built-in proxies on\n+ * {@link java.util.Calendar} types.\n  *\n  * @author Marc Prud'hommeaux\n  */"},{"sha":"327a802b95bd4e4221b7f1d210187c235273f101","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyCollection.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyCollection.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyCollection.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyCollection.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -21,8 +21,7 @@\n import org.apache.openjpa.conf.OpenJPAConfiguration;\n \n /**\n- * <p>Interface implemented by all built-in proxies on {@link Collection}\n- * types.</p>\n+ * Interface implemented by all built-in proxies on {@link Collection} types.\n  *\n  * @author Abe White\n  */\n@@ -31,9 +30,9 @@\n \n     /**\n      * This method should return a new proxy of the same concrete type as the\n-     * implementing class.  Used by the {@link ProxyManager} factories: one\n+     * implementing class. Used by the {@link ProxyManager} factories: one\n      * template instance of each type is created for the purpose of producing\n-     * new instances via this method.  Overcomes the performance penalties of\n+     * new instances via this method. Overcomes the performance penalties of\n      * reflection.\n      */\n     public ProxyCollection newInstance(Class elementType, Comparator compare,"},{"sha":"d80e6eb6d5cfe59a8da9e4fa2483e30c0076bd7c","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyDate.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyDate.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyDate.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyDate.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -16,8 +16,8 @@\n package org.apache.openjpa.util;\n \n /**\n- * <p>Interface implemented by all built-in proxies on {@link java.util.Date}\n- * types.</p>\n+ * Interface implemented by all built-in proxies on {@link java.util.Date}\n+ * types.\n  *\n  * @author Abe White\n  */"},{"sha":"03a7984ba3a5724ab8f3612b7fa741ce60d337b5","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyGregorianCalendar.java","status":"modified","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyGregorianCalendar.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyGregorianCalendar.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyGregorianCalendar.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -24,10 +24,10 @@\n import org.apache.openjpa.kernel.OpenJPAStateManager;\n \n /**\n- * <p>Extension of the {@link Calendar} type that calls the <code>dirty</code>\n- * method on its owning persistence capable instance on modification.  This\n+ * Extension of the {@link Calendar} type that calls the <code>dirty</code>\n+ * method on its owning persistence capable instance on modification. This\n  * class does not support modification via any deprecated method of the\n- * date class.</p>\n+ * date class.\n  *\n  * @author Marc Prud'hommeaux\n  * @nojavadoc\n@@ -124,14 +124,14 @@ public void setTimeInMillis(long millis) {\n     }\n \n     /* This is \"final\" in JDK 1.3 (not in 1.4 or 1.5)\n-     public void set (int field, int value)\n-     {\n-         if (get (field) != value)\n-         {\n-             Proxies.dirty (this);\n-             super.set (field, value);\n-         }\n-     }\n+ public void set (int field, int value)\n+ {\n+ if (get (field) != value)\n+ {\n+ Proxies.dirty (this);\n+ super.set (field, value);\n+ }\n+ }\n      */\n \n     public void add(int field, int amount) {"},{"sha":"9174e027486a106f0216c87e899294d8257e1b52","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyHashMap.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyHashMap.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyHashMap.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyHashMap.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -27,12 +27,12 @@\n import org.apache.openjpa.kernel.OpenJPAStateManager;\n \n /**\n- * <p>Extension of the {@link HashMap} type that dirties the\n+ * Extension of the {@link HashMap} type that dirties the\n  * persistent/transactional field it is assigned to on modification.\n  * The need to dirty the field on <b>any</b> modification mandates that\n  * this class must override all mutator methods of the base type.\n  * This may lead to multiple calls to <code>dirty</code> for one state\n- * change if one mutator method of the base type calls another.</p>\n+ * change if one mutator method of the base type calls another.\n  *\n  * @author Abe White\n  * @nojavadoc"},{"sha":"dcd5b2d7764ffe4d6414b7c09646f55c7b6151b5","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyHashSet.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyHashSet.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyHashSet.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyHashSet.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -25,12 +25,12 @@\n import org.apache.openjpa.kernel.OpenJPAStateManager;\n \n /**\n- * <p>Extension of the {@link HashSet} type that dirties the\n+ * Extension of the {@link HashSet} type that dirties the\n  * persistent/transactional field it is assigned to on modification.\n  * The need to dirty the field on <b>any</b> modification mandates that\n  * this class must override all mutator methods of the base type.\n  * This may lead to multiple calls to <code>dirty</code> for one state\n- * change if one mutator method of the base type calls another.</p>\n+ * change if one mutator method of the base type calls another.\n  *\n  * @author Abe White\n  * @nojavadoc"},{"sha":"3730a031ac4643e92560caef96fc03080aca7f60","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyHashtable.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyHashtable.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyHashtable.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyHashtable.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -27,12 +27,12 @@\n import org.apache.openjpa.kernel.OpenJPAStateManager;\n \n /**\n- * <p>Extension of the {@link Hashtable} type that dirties the\n+ * Extension of the {@link Hashtable} type that dirties the\n  * persistent/transactional field it is assigned to on modification.\n  * The need to dirty the field on <b>any</b> modification mandates that\n  * this class must override all mutator methods of the base type.\n  * This may lead to multiple calls to <code>dirty</code> for one state\n- * change if one mutator method of the base type calls another.</p>\n+ * change if one mutator method of the base type calls another.\n  *\n  * @author Abe White\n  * @nojavadoc"},{"sha":"4b2c17e328d7b4b171a3ad6944f0cefcf752f323","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyLinkedList.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyLinkedList.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyLinkedList.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyLinkedList.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -26,12 +26,12 @@\n import org.apache.openjpa.kernel.OpenJPAStateManager;\n \n /**\n- * <p>Extension of the {@link LinkedList} type that dirties the\n+ * Extension of the {@link LinkedList} type that dirties the\n  * persistent/transactional field it is assigned to on modification.\n  * The need to dirty the field on <b>any</b> modification mandates that\n  * this class must override all mutator methods of the base type.\n  * This may lead to multiple calls to <code>dirty</code> for one state\n- * change if one mutator method of the base type calls another.</p>\n+ * change if one mutator method of the base type calls another.\n  *\n  * @author Abe White\n  * @nojavadoc"},{"sha":"429912886420f139c3f4cb48af34f538d15e833c","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyManager.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyManager.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyManager.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -23,18 +23,18 @@\n import java.util.TimeZone;\n \n /**\n- * <p>Manager for copying and proxying second class objects.  Second class\n+ * Manager for copying and proxying second class objects. Second class\n  * objects are those that are often used as fields of persistent or\n  * transactional instances, and which can themselves be modified without\n- * resetting the owning class' field.  Because these types can change without\n+ * resetting the owning class' field. Because these types can change without\n  * an explicit call to the owning persistence capable instance, special care\n  * must be taken to ensure that their state is managed correctly.\n  * Specifically, they must be copied when saving state for rollback, and they\n  * must be proxied for any instance whose state is managed by a state manager,\n  * where proxying involves creating a second class object that automaticlly\n- * notifies its owning instance whenever it is modified.  Generally, this\n+ * notifies its owning instance whenever it is modified. Generally, this\n  * factory is only used by the implementation; second class object handling\n- * is transparent to client code.</p>\n+ * is transparent to client code.\n  *\n  * @author Abe White\n  */\n@@ -68,7 +68,7 @@\n \n     /**\n      * Return a new array of the same component type as the given array\n-     * and containing the same elements.  Works for both primitive and\n+     * and containing the same elements. Works for both primitive and\n      * object array types.\n      */\n     public Object copyArray(Object orig);\n@@ -94,26 +94,26 @@\n     public Proxy newCalendarProxy(Class type, TimeZone timeZone);\n \n     /**\n-     * Return a proxy for the given collection type.  The returned collection\n+     * Return a proxy for the given collection type. The returned collection\n      * will allow only addition of elements assignable from the given\n      * element type and will use the given comparator, if it is not null.\n      */\n     public Proxy newCollectionProxy(Class type, Class elementType,\n         Comparator compare);\n \n     /**\n-     * Return a proxy for the given map type.  The returned map will\n+     * Return a proxy for the given map type. The returned map will\n      * allow only addition of keys/values assignable from the given\n      * keyType/valueType, and will use the given comparator, if it is not null.\n      */\n     public Proxy newMapProxy(Class type, Class keyType, Class valueType,\n         Comparator compare);\n \n     /**\n-     *\tReturn a proxy for the given object, or null if this manager cannot\n-     *\tproxy the object.\n+     * Return a proxy for the given object, or null if this manager cannot\n+     * proxy the object.\n      *\n-     *\t@since 2.5\n+     * @since 2.5\n      */\n     public Proxy newCustomProxy (Object obj);\n }"},{"sha":"7eb5640bc04f43fc9a8d27e059f8aa1a800b6bad","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyManagerImpl.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyManagerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyManagerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyManagerImpl.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -45,7 +45,7 @@\n import org.apache.openjpa.lib.util.concurrent.ConcurrentHashMap;\n \n /**\n- * <p>Default implementation of the {@link ProxyManager} interface.</p>\n+ * Default implementation of the {@link ProxyManager} interface.\n  *\n  * @author Abe White\n  */\n@@ -125,7 +125,7 @@\n     /**\n      * Whether proxies produced by this factory will use {@link ChangeTracker}s\n      * to try to cut down on data store operations at the cost of some extra\n-     * bookkeeping overhead.  Defaults to true.\n+     * bookkeeping overhead. Defaults to true.\n      */\n     public boolean getTrackChanges() {\n         return _trackChanges;\n@@ -134,7 +134,7 @@ public boolean getTrackChanges() {\n     /**\n      * Whether proxies produced by this factory will use {@link ChangeTracker}s\n      * to try to cut down on data store operations at the cost of some extra\n-     * bookkeeping overhead.  Defaults to true.\n+     * bookkeeping overhead. Defaults to true.\n      */\n     public void setTrackChanges(boolean track) {\n         _trackChanges = track;\n@@ -143,7 +143,7 @@ public void setTrackChanges(boolean track) {\n     /**\n      * Whether to perform runtime checks to ensure that all elements\n      * added to collection and map proxies are the proper element/key/value\n-     * type as defined by the metadata.  Defaults to false.\n+     * type as defined by the metadata. Defaults to false.\n      */\n     public boolean getAssertAllowedType() {\n         return _assertType;\n@@ -152,7 +152,7 @@ public boolean getAssertAllowedType() {\n     /**\n      * Whether to perform runtime checks to ensure that all elements\n      * added to collection and map proxies are the proper element/key/value\n-     * type as defined by the metadata.  Defaults to false.\n+     * type as defined by the metadata. Defaults to false.\n      */\n     public void setAssertAllowedType(boolean assertType) {\n         _assertType = assertType;"},{"sha":"8070feebd7a423c1180df564624029a28d5cdff6","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyMap.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyMap.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyMap.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyMap.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -21,7 +21,7 @@\n import org.apache.openjpa.conf.OpenJPAConfiguration;\n \n /**\n- * <p>Interface implemented by all built-in proxies on {@link Map} types.</p>\n+ * Interface implemented by all built-in proxies on {@link Map} types.\n  *\n  * @author Abe White\n  */\n@@ -30,9 +30,9 @@\n \n     /**\n      * This method should return a new proxy of the same concrete type as the\n-     * implementing class.  Used by the {@link ProxyManager} factories: one\n+     * implementing class. Used by the {@link ProxyManager} factories: one\n      * template instance of each type is created for the purpose of producing\n-     * new instances via this method.  Overcomes the performance\n+     * new instances via this method. Overcomes the performance\n      * penalties of reflection.\n      */\n     public ProxyMap newInstance(Class keyType, Class valueType,"},{"sha":"399d4d66513e627554cf4af63af56389e24666b3","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyProperties.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyProperties.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyProperties.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyProperties.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -29,12 +29,12 @@\n import org.apache.openjpa.kernel.OpenJPAStateManager;\n \n /**\n- * <p>Extension of the {@link Properties} type that dirties the\n+ * Extension of the {@link Properties} type that dirties the\n  * persistent/transactional field it is assigned to on modification.\n  * The need to dirty the field on <b>any</b> modification mandates that\n  * this class must override all mutator methods of the base type.\n  * This may lead to multiple calls to <code>dirty</code> for one state\n- * change if one mutator method of the base type calls another.</p>\n+ * change if one mutator method of the base type calls another.\n  *\n  * @author Abe White\n  * @nojavadoc"},{"sha":"0873030ea86bb646a85a87cc16f1cd08a942d551","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxySQLDate.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxySQLDate.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxySQLDate.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxySQLDate.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -21,10 +21,10 @@\n import org.apache.openjpa.kernel.OpenJPAStateManager;\n \n /**\n- * <p>Extension of the {@link Date} type that calls the <code>dirty</code>\n- * method on its owning persistence capable instance on modification.  This\n+ * Extension of the {@link Date} type that calls the <code>dirty</code>\n+ * method on its owning persistence capable instance on modification. This\n  * class does not support modification via any deprecated method of the\n- * date class.</p>\n+ * date class.\n  *\n  * @author Abe White\n  * @nojavadoc"},{"sha":"ab05c71b99ac3ea00f6147567bb7be8270c70c71","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyTime.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyTime.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyTime.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyTime.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -21,10 +21,10 @@\n import org.apache.openjpa.kernel.OpenJPAStateManager;\n \n /**\n- * <p>Extension of the {@link Time} type that calls the <code>dirty</code>\n- * method on its owning persistence capable instance on modification.  This\n+ * Extension of the {@link Time} type that calls the <code>dirty</code>\n+ * method on its owning persistence capable instance on modification. This\n  * class does not support modification via any deprecated method of the\n- * date class.</p>\n+ * date class.\n  *\n  * @author Abe White\n  * @nojavadoc"},{"sha":"d1ff5a07f39e4e64f3211dc3364ccdfe249f4809","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyTimestamp.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyTimestamp.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyTimestamp.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyTimestamp.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -21,10 +21,10 @@\n import org.apache.openjpa.kernel.OpenJPAStateManager;\n \n /**\n- * <p>Extension of the {@link Timestamp} type that calls the <code>dirty</code>\n- * method on its owning persistence capable instance on modification.  This\n+ * Extension of the {@link Timestamp} type that calls the <code>dirty</code>\n+ * method on its owning persistence capable instance on modification. This\n  * class does not support modification via any deprecated method of the\n- * date class.</p>\n+ * date class.\n  *\n  * @author Abe White\n  * @nojavadoc"},{"sha":"521d0388ad593f53202942fbb8f24aae636a0b4f","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyTreeMap.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyTreeMap.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyTreeMap.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyTreeMap.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -28,12 +28,12 @@\n import org.apache.openjpa.kernel.OpenJPAStateManager;\n \n /**\n- * <p>Extension of the {@link TreeMap} type that dirties the\n+ * Extension of the {@link TreeMap} type that dirties the\n  * persistent/transactional field it is assigned to on modification.\n  * The need to dirty the field on <b>any</b> modification mandates that\n  * this class must override all mutator methods of the base type.\n  * This may lead to multiple calls to <code>dirty</code> for one state\n- * change if one mutator method of the base type calls another.</p>\n+ * change if one mutator method of the base type calls another.\n  *\n  * @author Abe White\n  * @nojavadoc"},{"sha":"01a95e563b0e61a0ee94a187e54d13bdf1105b29","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyTreeSet.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyTreeSet.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyTreeSet.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyTreeSet.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -26,12 +26,12 @@\n import org.apache.openjpa.kernel.OpenJPAStateManager;\n \n /**\n- * <p>Extension of the {@link TreeSet} type that dirties the\n+ * Extension of the {@link TreeSet} type that dirties the\n  * persistent/transactional field it is assigned to on modification.\n  * The need to dirty the field on <b>any</b> modification mandates that\n  * this class must override all mutator methods of the base type.\n  * This may lead to multiple calls to <code>dirty</code> for one state\n- * change if one mutator method of the base type calls another.</p>\n+ * change if one mutator method of the base type calls another.\n  *\n  * @author Abe White\n  * @nojavadoc"},{"sha":"ff2f17c214a6676f940b98486588af5cf8ae11c1","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyUtilDate.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyUtilDate.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyUtilDate.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyUtilDate.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -21,10 +21,10 @@\n import org.apache.openjpa.kernel.OpenJPAStateManager;\n \n /**\n- * <p>Extension of the {@link Date} type that calls the <code>dirty</code>\n- * method on its owning persistence capable instance on modification.  This\n+ * Extension of the {@link Date} type that calls the <code>dirty</code>\n+ * method on its owning persistence capable instance on modification. This\n  * class does not support modification via any deprecated method of the\n- * date class.</p>\n+ * date class.\n  *\n  * @author Abe White\n  * @nojavadoc"},{"sha":"3447b30d5963e2ffa260ef761b89da3f2ed60572","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyVector.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyVector.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyVector.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyVector.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -26,12 +26,12 @@\n import org.apache.openjpa.kernel.OpenJPAStateManager;\n \n /**\n- * <p>Extension of the {@link Vector} type that dirties the\n+ * Extension of the {@link Vector} type that dirties the\n  * persistent/transactional field it is assigned to on modification.\n  * The need to dirty the field on <b>any</b> modification mandates that\n  * this class must override all mutator methods of the base type.\n  * This may lead to multiple calls to <code>dirty</code> for one state\n- * change if one mutator method of the base type calls another.</p>\n+ * change if one mutator method of the base type calls another.\n  *\n  * @author Abe White\n  * @nojavadoc"},{"sha":"e762cadaf6a09dbc9214f782c928523b63123158","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ReferentialIntegrityException.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ReferentialIntegrityException.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ReferentialIntegrityException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ReferentialIntegrityException.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -22,7 +22,7 @@\n import org.apache.openjpa.lib.util.Localizer;\n \n /**\n- * <p>Exception type reserved for violations of integrity constraints.</p>\n+ * Exception type reserved for violations of integrity constraints.\n  *\n  * @author Patrick Linskey\n  */"},{"sha":"16036603a29cd3d6a677b189a0c59eac3eb97620","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/RuntimeExceptionTranslator.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/RuntimeExceptionTranslator.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/RuntimeExceptionTranslator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/RuntimeExceptionTranslator.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -18,7 +18,7 @@\n import java.io.Serializable;\n \n /**\n- * <p>Interface used by many facade helpers to translate exceptions.</p>\n+ * Interface used by many facade helpers to translate exceptions.\n  *\n  * @author Abe White\n  * @nojavadoc"},{"sha":"65e25ba9d0bc1205c579a6be4176343d3b8fe997","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/Serialization.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/Serialization.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/Serialization.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/Serialization.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -30,9 +30,9 @@\n import org.apache.openjpa.lib.util.Localizer;\n \n /**\n- * <p>Helper class to serialize and deserialize persistent objects,\n+ * Helper class to serialize and deserialize persistent objects,\n  * subtituting oids into the serialized stream and subtituting the persistent\n- * objects back during deserialization.</p>\n+ * objects back during deserialization.\n  *\n  * @author Abe White\n  * @since 3.3\n@@ -44,7 +44,7 @@\n         (Serialization.class);\n \n     /**\n-     * Serialize a value that might contain persistent objects.  Replaces\n+     * Serialize a value that might contain persistent objects. Replaces\n      * persistent objects with their oids.\n      */\n     public static byte[] serialize(Object val, StoreContext ctx) {\n@@ -150,7 +150,7 @@ protected Object resolveObject(Object obj) {\n     }\n \n     /**\n-     *\tMarker for oids.\n+     * Marker for oids.\n      */\n     private static class ObjectIdMarker\n         implements Serializable {"},{"sha":"531a8c64ae58334c25996554231606319caf8b72","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ShortId.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ShortId.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/ShortId.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ShortId.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,"},{"sha":"cb5102858d52de7f7dce9a67933957c6e87dc775","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/StoreException.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/StoreException.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/StoreException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/StoreException.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,"},{"sha":"296b08e9fbcb1fd030382d18df9869b8517805a5","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/StringId.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/StringId.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/StringId.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/StringId.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,"},{"sha":"31b1c9784f11bf978feab4552f09c40578577918","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/UnsupportedException.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/UnsupportedException.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/UnsupportedException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/UnsupportedException.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,"},{"sha":"f5e477147f7d8f3bbc593eddcfad63f507284e6d","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/UserException.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/UserException.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-kernel/src/main/java/org/apache/openjpa/util/UserException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/UserException.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,"},{"sha":"b73f4889a0412d169bed3131921c5d86adc6411e","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/ant/AbstractTask.java","status":"modified","additions":9,"deletions":8,"changes":17,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/ant/AbstractTask.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/ant/AbstractTask.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/ant/AbstractTask.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n@@ -29,12 +32,10 @@\n /**\n  * Ant tasks all have a nested <code>&lt;config&rt;</code> tag, which uses\n  * the configuration as a bean-like task. E.g., you can do:\n- * <p/>\n+ * \n  * <code> &lt;mytask&rt;<br />\n- * &nbsp;&nbsp;&lt;config connectionUserName=\"foo\"/&rt;<br />\n- * &lt;/mytask&rt;\n- * </code>\n- * The defailt configuration for the system will be used if the\n+ * &nbsp;&nbsp;&lt;config connectionUserName=\"foo\"/&rt;<br /> &lt;/mytask&rt;\n+ * </code> The defailt configuration for the system will be used if the\n  * <code>&lt;config&rt;</code> subtask is excluded.\n  *\n  * @nojavadoc"},{"sha":"50c7d1016c9d38f694e6c94f74fa80df3410960d","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/BooleanValue.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/BooleanValue.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/BooleanValue.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/BooleanValue.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"dad0b290c7c720253efba8cc5af395bc7540e979","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configurable.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configurable.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configurable.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configurable.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"eaedaca684f9d9a7a8de6f1910bd85b638e320b8","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configuration.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configuration.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configuration.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configuration.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"8c478e9767a86be21712f50c0ec170d736c9ea19","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationImpl.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationImpl.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationImpl.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"ebfef450b608b1327733c03b87c83f5d2f8e0d43","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationProvider.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationProvider.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationProvider.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationProvider.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"173ad506ffd1600cf3e116b7550cae7faff972c2","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configurations.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configurations.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configurations.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configurations.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"1698c8d269950bd996d862d459e498db840d38a7","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/DoubleValue.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/DoubleValue.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/DoubleValue.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/DoubleValue.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"7d22543a2b177153f62b3551b9ba2fa56c2780a7","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/FileValue.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/FileValue.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/FileValue.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/FileValue.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"bcf3734a4e031fe11280eaad418f474d2838eac0","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/GenericConfigurable.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/GenericConfigurable.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/GenericConfigurable.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/GenericConfigurable.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"db3f0631ba65d5b42c8ce84d91caaaa2f2aeb933","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/IntValue.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/IntValue.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/IntValue.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/IntValue.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"e0bd1472dd4b3edbfd835eed7dc459d50886792a","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/MapConfigurationProvider.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/MapConfigurationProvider.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/MapConfigurationProvider.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/MapConfigurationProvider.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"6662309c1eb1a30687de360b4b47f5a0ad16d8e3","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ObjectValue.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ObjectValue.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ObjectValue.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ObjectValue.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"0c3866ac3de42b58e4abeeea8a2ccb36f4fc34e5","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/PluginListValue.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/PluginListValue.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/PluginListValue.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/PluginListValue.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"43f55fd74e984d17597f3c755b3acddd4654ec51","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/PluginValue.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/PluginValue.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/PluginValue.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/PluginValue.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"066bb447054ae344333eaa5d9da0755ebe4de626","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/StringListValue.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/StringListValue.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/StringListValue.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/StringListValue.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"9e966a304509effaf55bc4635cc2c77dff2c99f4","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/StringValue.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/StringValue.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/StringValue.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/StringValue.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"44f9341ce71d57a5ebee68f3a440c0026cca4032","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Value.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Value.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Value.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Value.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"b0a89733816335be7229a50ceca051baed1ca539","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ValueListener.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ValueListener.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ValueListener.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ValueListener.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"1e24eac060eb12aed413026f3d1f0c515436cf3d","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/AbstractJDBCListener.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/AbstractJDBCListener.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/AbstractJDBCListener.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/AbstractJDBCListener.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"a2494ba77739b29395e714df8db7307b11ff3ad8","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/ConfiguringConnectionDecorator.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/ConfiguringConnectionDecorator.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/ConfiguringConnectionDecorator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/ConfiguringConnectionDecorator.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"ecbc45513ade27b5bf8cdcbf00ed4ba909229c83","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/ConnectionDecorator.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/ConnectionDecorator.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/ConnectionDecorator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/ConnectionDecorator.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"f426817f00ef813c11c36c2366bd98fef964542a","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DataSourceLogs.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DataSourceLogs.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DataSourceLogs.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DataSourceLogs.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"b248d5fac02f5b4c5b18b0bde9eeb25b29e8eaf3","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DecoratingDataSource.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DecoratingDataSource.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DecoratingDataSource.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DecoratingDataSource.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"1d90045b6dc8e101313a62286b6601eded4f75b7","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingCallableStatement.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingCallableStatement.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingCallableStatement.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingCallableStatement.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"3b54db9a840d53e2d3ad717f0ff6b1755b31e044","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingConnection.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingConnection.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingConnection.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingConnection.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"6b374032009efd59363b998d1c0450d60116e923","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingDataSource.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingDataSource.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingDataSource.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingDataSource.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"88f96bc19364a0accfb8ce2a90f87c51a7d9f813","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingDatabaseMetaData.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingDatabaseMetaData.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingDatabaseMetaData.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingDatabaseMetaData.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"fc8ec11188566e6dc7de39ecf25480b3889c711a","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingPreparedStatement.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingPreparedStatement.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingPreparedStatement.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingPreparedStatement.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"616cee7571acab9ccb97141b97b2fabd533c586a","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingResultSet.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingResultSet.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingResultSet.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingResultSet.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"bf2c03569e896568e2fb7a844db6227100719c8c","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingStatement.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingStatement.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingStatement.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingStatement.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"957d9614cfb80e5abd409c98bba3b2689811449f","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/JDBCEvent.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/JDBCEvent.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/JDBCEvent.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/JDBCEvent.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"c48c05982de07e91d6a732b3224030eb363169d3","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/JDBCEventConnectionDecorator.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/JDBCEventConnectionDecorator.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/JDBCEventConnectionDecorator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/JDBCEventConnectionDecorator.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"da537b49fcdafe0fde6fc872e0c6f36c61ef83d4","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/JDBCListener.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/JDBCListener.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/JDBCListener.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/JDBCListener.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"7ff13aa19f0764c00652f2596226afd8c5ae82a2","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"e03157d258171757eadb8f0e50f9786a31a5c318","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/ReportingSQLException.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/ReportingSQLException.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/ReportingSQLException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/ReportingSQLException.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"5f410e7f81840b7952f5605d4488bd71cebb1105","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/SQLFormatter.java","status":"modified","additions":11,"deletions":13,"changes":24,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/SQLFormatter.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/SQLFormatter.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/SQLFormatter.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n@@ -25,19 +28,14 @@\n  * Converts single-line SQL strings into nicely-formatted\n  * multi-line, indented statements.\n  * Example: from PERSON t0, COMPANY t1 WHERE t0.ID = 10 AND \\\n- * t0.COMPANY_ID = t1.ID AND t1.NAME = 'OpenJPA'</code>\n- * becomes\n- * <code>SELECT *\n- * FROM PERSON t0, COMPANY t1\n+ * t0.COMPANY_ID = t1.ID AND t1.NAME = 'OpenJPA'</code> becomes\n+ * <code>SELECT * FROM PERSON t0, COMPANY t1\n  * WHERE t0.ID = 10 AND t0.COMPANY_ID = t1.ID AND t1.NAME = 'OpenJPA'\\\n- * </code>\n- * and\n+ * </code> and\n  * <code>INSERT INTO PERSON VALUES('Patrick', 'Linskey', 'OpenJPA', \\\n- * '202 595 2064 x1111')</code>\n- * becomes\n+ * '202 595 2064 x1111')</code> becomes\n  * <code>INSERT INTO PERSON VALUES('Patrick', 'Linskey', 'OpenJPA', '202\n- * 595 2064 x1111')</code>\n- * etc.\n+ * 595 2064 x1111')</code> etc.\n  *\n  * @author Patrick Linskey\n  */"},{"sha":"2f572ce20f60c31b434241abd0d8cb54241e439f","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/log/AbstractLog.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/AbstractLog.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/AbstractLog.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/AbstractLog.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"85be18fb9f342450a2f28218455f15ffee8237f8","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/log/CommonsLogFactory.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/CommonsLogFactory.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/CommonsLogFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/CommonsLogFactory.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"8b10f17ac8929314b9ebd09bb9e7a759a4ff2cfb","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/log/Log.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/Log.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/Log.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/Log.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"c2eee10951ff91083cc404f6d4f66d296ad83d55","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/log/Log4JLogFactory.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/Log4JLogFactory.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/Log4JLogFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/Log4JLogFactory.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"0d466fa5e7d139a4282bba43508dfffdbf76c494","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/log/LogFactory.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/LogFactory.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/LogFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/LogFactory.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"abf9027a46bda6c0b2474e1ae7d0e94b73a55adc","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/log/LogFactoryAdapter.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/LogFactoryAdapter.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/LogFactoryAdapter.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/LogFactoryAdapter.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"56d4212cb7e7f22a803844114c8246d3ecff3c10","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/log/LogFactoryImpl.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/LogFactoryImpl.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/LogFactoryImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/LogFactoryImpl.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"75c5e47fce27686800289e9a651ccedba6435249","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/log/LogOutputStream.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/LogOutputStream.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/LogOutputStream.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/LogOutputStream.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"9f1e87431942121492ebceb2dc586109a5c61f69","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/log/MultiLogFactory.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/MultiLogFactory.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/MultiLogFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/MultiLogFactory.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"65d0f8d13236be2e418e11df01d4b09655f1ca02","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/log/NoneLogFactory.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/NoneLogFactory.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/NoneLogFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/log/NoneLogFactory.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"117b6a691f90891776bdcef344e8c8eebe71d559","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/CFMetaDataParser.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/CFMetaDataParser.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/CFMetaDataParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/CFMetaDataParser.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"1e47e3739a8cf7438558f444fa62b05c8b9543f1","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/CFMetaDataSerializer.java","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/CFMetaDataSerializer.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/CFMetaDataSerializer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/CFMetaDataSerializer.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n@@ -49,7 +52,7 @@ protected void setPackage(String pkg) {\n      * Helper method to group objects by package.\n      *\n      * @return mapping of package name to a collection of objects in\n-     *         that package\n+     * that package\n      */\n     protected Map groupByPackage(Collection objs) throws SAXException {\n         Map packages = new LinkedMap();"},{"sha":"ef83078c3cbe35c7d00f8aac12b11e76930637d5","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/ClassAnnotationMetaDataFilter.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/ClassAnnotationMetaDataFilter.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/ClassAnnotationMetaDataFilter.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/ClassAnnotationMetaDataFilter.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"7f398ed1611ae9cb7ed048ea06dc626d698178c3","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/ClassArgParser.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/ClassArgParser.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/ClassArgParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/ClassArgParser.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"a3aaa6a2ae001f62242a0be14dac486c715c2ee6","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/ClassMetaDataIterator.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/ClassMetaDataIterator.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/ClassMetaDataIterator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/ClassMetaDataIterator.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"3d96db5094a68cd13b74cc8cb834d7d1c0f4e948","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/ClasspathMetaDataIterator.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/ClasspathMetaDataIterator.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/ClasspathMetaDataIterator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/ClasspathMetaDataIterator.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"8997b4920b45f05d6331952e219e58c847e74fa6","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/FileMetaDataIterator.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/FileMetaDataIterator.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/FileMetaDataIterator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/FileMetaDataIterator.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"ce75051ca56dd99b7f9d55428c8aea8fc54d60c3","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/MetaDataFilter.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/MetaDataFilter.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/MetaDataFilter.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/MetaDataFilter.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"e7a19dd84ace5fb50cb3c25b94db49bec32f4827","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/MetaDataIterator.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/MetaDataIterator.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/MetaDataIterator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/MetaDataIterator.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"e496d6d35acda12746fc2b6e99e693080da66151","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/MetaDataIteratorChain.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/MetaDataIteratorChain.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/MetaDataIteratorChain.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/MetaDataIteratorChain.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"92a752eaf29ad5a8e75d8bc9ec11d23844a9a758","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/MetaDataParser.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/MetaDataParser.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/MetaDataParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/MetaDataParser.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"e261cc31e290650d0c7a55b0be5d67678aba6937","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/MetaDataSerializer.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/MetaDataSerializer.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/MetaDataSerializer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/MetaDataSerializer.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n@@ -35,8 +38,7 @@\n      * parsed. Any objects for which a source file cannot be determined will\n      * not be included in the output.\n      *\n-     * @param flags bit flags specifying the output flags; e.g.\n-     * {@link #PRETTY}\n+     * @param flags bit flags specifying the output flags; e.g. {@link #PRETTY}\n      */\n     public void serialize(int flags) throws IOException;\n \n@@ -48,8 +50,7 @@\n      * othwerwise, populate the specified {@link Map} with\n      * keys that are the {@link File} instances, and\n      * values that are the {@link String} contents of the metadata\n-     * @param flags bit flags specifying the output flags; e.g.\n-     * {@link #PRETTY}\n+     * @param flags bit flags specifying the output flags; e.g. {@link #PRETTY}\n      */\n     public void serialize(Map output, int flags) throws IOException;\n \n@@ -64,8 +65,7 @@\n     /**\n      * Serialize the current set of objects to the given stream.\n      *\n-     * @param flags bit flags specifying the output flags; e.g.\n-     * {@link #PRETTY}\n+     * @param flags bit flags specifying the output flags; e.g. {@link #PRETTY}\n      */\n     public void serialize(Writer out, int flags) throws IOException;\n }"},{"sha":"093bdd01f76b61c8227e0fb5fe9c720047d94531","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/ResourceMetaDataIterator.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/ResourceMetaDataIterator.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/ResourceMetaDataIterator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/ResourceMetaDataIterator.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"695e9c2377e3dfd8445261b2a94cde48682b09fd","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/SourceTracker.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/SourceTracker.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/SourceTracker.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/SourceTracker.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"d3a08154a5dd31fb0d08ad4cd840e08c92570bca","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/SourceTrackers.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/SourceTrackers.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/SourceTrackers.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/SourceTrackers.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"5ba8d62849231862b50fb3dd2a449056a0b83ff9","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/SuffixMetaDataFilter.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/SuffixMetaDataFilter.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/SuffixMetaDataFilter.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/SuffixMetaDataFilter.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"22db166baf4eaa7655fef69d54c3a14a448fa069","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/URLMetaDataIterator.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/URLMetaDataIterator.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/URLMetaDataIterator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/URLMetaDataIterator.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"4bb8dc8fb0a1697ca1f61316d309e18d24d49067","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/XMLMetaDataParser.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/XMLMetaDataParser.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/XMLMetaDataParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/XMLMetaDataParser.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"bed083a0ab84c76bc6b77345a3df16edaf82c4b2","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/XMLMetaDataSerializer.java","status":"modified","additions":7,"deletions":5,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/XMLMetaDataSerializer.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/XMLMetaDataSerializer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/XMLMetaDataSerializer.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n@@ -43,8 +46,7 @@\n /**\n  * Abstract base type for serlializers that transfer groups of objects\n  * to XML. Includes a way of serializing objects back to the XML files\n- * they were parsed from.\n- * Serializers are not thread safe.\n+ * they were parsed from. Serializers are not thread safe.\n  *\n  * @author Abe White\n  * @nojavadoc"},{"sha":"7390a0c2b5da1a863bc7cda0dd291b2db069b4f6","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/ZipFileMetaDataIterator.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/ZipFileMetaDataIterator.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/ZipFileMetaDataIterator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/ZipFileMetaDataIterator.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"b3c8b6d92a24638cb57cc42b4a30a5c07e185515","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/ZipStreamMetaDataIterator.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/ZipStreamMetaDataIterator.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/ZipStreamMetaDataIterator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/ZipStreamMetaDataIterator.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"61ac845f2e32cd8ca2c9cb7d05eb5cc8488a84c3","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/AbstractListIterator.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/AbstractListIterator.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/AbstractListIterator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/AbstractListIterator.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"4535703ba817b1c34f05a8fa7de5f4b5a871ad6f","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/AbstractNonSequentialResultList.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/AbstractNonSequentialResultList.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/AbstractNonSequentialResultList.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/AbstractNonSequentialResultList.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"ab020632bfcbf492ba672f460841bf938f0ef61e","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/AbstractResultList.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/AbstractResultList.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/AbstractResultList.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/AbstractResultList.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"824fa2c4cd8ea7791c49cbf96746623225ee8e97","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/AbstractSequentialResultList.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/AbstractSequentialResultList.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/AbstractSequentialResultList.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/AbstractSequentialResultList.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"8425777c3036fe9337161c206caa18c8cb3a2ca7","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/EagerResultList.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/EagerResultList.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/EagerResultList.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/EagerResultList.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"7a735d1f9758d6ec6c829bc600c02a4430646a85","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/LazyForwardResultList.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/LazyForwardResultList.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/LazyForwardResultList.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/LazyForwardResultList.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"9c3f25f222e9eaa2689eeea910612e916c7713f6","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/ListResultList.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/ListResultList.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/ListResultList.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/ListResultList.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"e07110358fe4514a7a553a4d0af22b35ea0d5bd7","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/ListResultObjectProvider.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/ListResultObjectProvider.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/ListResultObjectProvider.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/ListResultObjectProvider.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"3cc6650b36ced612f7bf53b7bf53eedafab0d9a3","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/MergedResultObjectProvider.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/MergedResultObjectProvider.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/MergedResultObjectProvider.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/MergedResultObjectProvider.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"fe5f581d6c8b3753f02488dee49e1a0b438089f2","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/RandomAccessResultList.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/RandomAccessResultList.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/RandomAccessResultList.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/RandomAccessResultList.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"b34aac0e7ecbc44c24dae109b6fd627495cea60e","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/RangeResultObjectProvider.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/RangeResultObjectProvider.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/RangeResultObjectProvider.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/RangeResultObjectProvider.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"3ff127e19518434240d66299d7c3f5aa236a3281","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/ResultList.java","status":"modified","additions":8,"deletions":7,"changes":15,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/ResultList.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/ResultList.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/ResultList.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n@@ -21,12 +24,10 @@\n  * List interface that represents a potentially lazy ResultList instantiation.\n  * A ResultList will typically be instantiated from a factory, and\n  * will use a ResultObjectProvider for obtaining individual object\n- * data representations.\n- * Depending on the support for scrolling inputs,\n+ * data representations. Depending on the support for scrolling inputs,\n  * the list that is returned may use lazy instantiation of the\n  * objects, and thus allow very large result sets to be obtained and\n- * manipulated.\n- * Note that wrapping a ResultList in another Collection will\n+ * manipulated. Note that wrapping a ResultList in another Collection will\n  * always instantiate the entire set of elements contained in the\n  * ResultList. This may not always be desireable, since the list may\n  * be very large."},{"sha":"54ca62d7aaca66e9286ef839c5f63fa5d24904ba","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/ResultListIterator.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/ResultListIterator.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/ResultListIterator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/ResultListIterator.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"c38aaaa6f2dac76125b5904de47b4ee84ac96b75","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/ResultObjectProvider.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/ResultObjectProvider.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/ResultObjectProvider.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/ResultObjectProvider.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"7bfb009ba74d120483f77abd5fec9052473e7e0e","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/ResultObjectProviderIterator.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/ResultObjectProviderIterator.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/ResultObjectProviderIterator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/ResultObjectProviderIterator.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"3e48c186a73fea5c58601dceb995b0fdbb854fcb","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/SimpleResultList.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/SimpleResultList.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/SimpleResultList.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/SimpleResultList.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"3545bfd745ec583a3736da98a569958dc0b59fa2","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/SoftRandomAccessResultList.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/SoftRandomAccessResultList.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/SoftRandomAccessResultList.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/SoftRandomAccessResultList.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"f702c4b58ffdc66406bccfa830c5adf7d92513f9","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/WindowResultList.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/WindowResultList.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/WindowResultList.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/rop/WindowResultList.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"8eb4a07649377064c1ba508e0fdba0d150e0d662","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/AbstractEventManager.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/AbstractEventManager.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/AbstractEventManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/AbstractEventManager.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"e26ec7e2e6eaff6f184129b8741e94a14d69b27a","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Base16Encoder.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Base16Encoder.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Base16Encoder.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Base16Encoder.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"a8d6f6debbcfe2abe2e1a3506df17eb05a7b6ae2","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/BytecodeWriter.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/BytecodeWriter.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/BytecodeWriter.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/BytecodeWriter.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"19c95e892f03ae28b3f7a9cb46e591e98cbd59ce","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Closeable.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Closeable.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Closeable.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Closeable.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"db64d3866c0f9ad85b9bca6149c3c92664967a09","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/CodeFormat.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/CodeFormat.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/CodeFormat.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/CodeFormat.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"5bbd0b3ea3d34d3fb075a89c63817f035fd52be9","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/EventManager.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/EventManager.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/EventManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/EventManager.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"8233b3b7e469bf1b9c56ca3c885a16223beecf01","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Files.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Files.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Files.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Files.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"eac5c5aabdf84352df60e7553a3b0297835e4a23","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/FormatPreservingProperties.java","status":"modified","additions":11,"deletions":8,"changes":19,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/FormatPreservingProperties.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/FormatPreservingProperties.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/FormatPreservingProperties.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n@@ -37,16 +40,16 @@\n \n /*\n  * ### things to add: - should probably be a SourceTracker\n- *  - if an entry is removed, should there be an option to remove comments\n+ * - if an entry is removed, should there be an option to remove comments\n  * just before the entry(a la javadoc)?\n- *  - should we have an option to clean up whitespace?\n- *  - potentially would be interesting to add comments about each\n+ * - should we have an option to clean up whitespace?\n+ * - potentially would be interesting to add comments about each\n  * property that OpenJPA adds to this object. We'd want to make the\n  * automatic comment-removing code work first, though, so that if\n  * someone then removed the property, the comments would go away.\n- *  - would be neat if DuplicateKeyException could report line numbers of\n+ * - would be neat if DuplicateKeyException could report line numbers of\n  * offending entries.\n- *  - putAll() with another FormatPreservingProperties should be smarter\n+ * - putAll() with another FormatPreservingProperties should be smarter\n  */\n \n /**"},{"sha":"9875dac730e2259f31ab151da7c82bccf377fd13","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/JavaVersions.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/JavaVersions.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/JavaVersions.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/JavaVersions.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"8f8b75cef5210175240e3fcdc2ea0276fea435f4","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/LRUMap.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/LRUMap.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/LRUMap.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/LRUMap.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"e41e33e8daf12770be08dd596590d356928c31f4","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Localizer.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Localizer.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Localizer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Localizer.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"82cc6bd16a804c63dc1af703d78af74a895860a8","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/MultiClassLoader.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/MultiClassLoader.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/MultiClassLoader.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/MultiClassLoader.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"621e3f8f1071bfc69baf99fbebec126f4881eb7f","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Options.java","status":"modified","additions":15,"deletions":13,"changes":28,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Options.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Options.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Options.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n@@ -83,7 +86,7 @@ public Options(Properties defaults) {\n      *\n      * @param args the command-line arguments\n      * @return all arguments in the original array beyond the\n-     *         flag/value pair list\n+     * flag/value pair list\n      * @author Patrick Linskey\n      */\n     public String[] setFromCmdLine(String[] args) {\n@@ -149,13 +152,12 @@ public Options(Properties defaults) {\n      * <li>Map Entry: <code>\"brother.name\"-&gt;\"Bob\"</code><br />\n      * Resultant method call: <code>obj.getBrother().setName(\"Bob\")\n      * <code></li>\n-     * </ul>\n-     * Any keys present in the map for which there is no\n+     * </ul> Any keys present in the map for which there is no\n      * corresponding property in the given object will be ignored,\n      * and will be returned in the {@link Map} returned by this method.\n      *\n      * @return a {@link Map} of key-value pairs in this object\n-     *         for which no setters could be found.\n+     * for which no setters could be found.\n      * @throws RuntimeException on parse error\n      */\n     public Map setInto(Object obj) {\n@@ -191,7 +193,7 @@ public Map setInto(Object obj) {\n      * given object.\n      *\n      * @return <code>true</code> if the set succeeded, or\n-     *         <code>false</code> if no method could be found for this property.\n+     * <code>false</code> if no method could be found for this property.\n      */\n     private boolean setInto(Object obj, Map.Entry entry) {\n         if (entry.getKey() == null)\n@@ -244,7 +246,7 @@ private static String trimQuote(String val) {\n      *\n      * @param type The class for which available options should be listed.\n      * @return The available option names in <code>type</code>. The\n-     *         names will have initial caps. They will be ordered alphabetically.\n+     * names will have initial caps. They will be ordered alphabetically.\n      */\n     public static Collection findOptionsFor(Class type) {\n         Collection names = new TreeSet();\n@@ -280,10 +282,10 @@ public static Collection findOptionsFor(Class type) {\n      * @param match an array of length 2, where the first index is set\n      * to the object to retrieve the setter for\n      * @return true if a match was made, false otherwise; additionally,\n-     *         the first index of the match array will be set to\n-     *         the matching object and the second index will be\n-     *         set to the setter method or public field for the\n-     *         property named by the key\n+     * the first index of the match array will be set to\n+     * the matching object and the second index will be\n+     * set to the setter method or public field for the\n+     * property named by the key\n      */\n     private static boolean matchOptionToMember(String key, Object[] match)\n         throws Exception {"},{"sha":"70100382dbc150331f58f0507a9d6e2a63ee2ab9","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ParameterTemplate.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ParameterTemplate.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ParameterTemplate.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ParameterTemplate.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"9757ba72fe8cf2054a1b8393fee18c108edd60c6","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ParseException.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ParseException.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ParseException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ParseException.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"32a71818da813b4dc5895076e68aa8569e9e258a","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ReferenceHashMap.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ReferenceHashMap.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ReferenceHashMap.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ReferenceHashMap.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"09f55da655760281ec8277ad162d6a766159b876","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ReferenceHashSet.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ReferenceHashSet.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ReferenceHashSet.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ReferenceHashSet.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"98689b09dd6b7203f208aae5fcd82c2a0ef5b89c","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ReferenceMap.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ReferenceMap.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ReferenceMap.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ReferenceMap.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"e82c5bae3294369a0a6cea14167e970c6df2f0fa","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ResourceBundleProvider.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ResourceBundleProvider.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ResourceBundleProvider.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ResourceBundleProvider.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"ca94d5f489b99f7ebcf7aad6ac89c54483352789","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Services.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Services.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Services.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Services.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"8b6ea5bcb05ccf8f7f636a5b0da904891d4d3ad9","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/SimpleRegex.java","status":"modified","additions":7,"deletions":5,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/SimpleRegex.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/SimpleRegex.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/SimpleRegex.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n@@ -15,8 +18,7 @@\n /**\n  * Allows for simple regex style testing of strings. The wildcard '.'\n  * is used to represent any single character, while '.*' is used to represent\n- * any series of 0 or more characters.\n- * Examples:<br />\n+ * any series of 0 or more characters. Examples:<br />\n  * <code> SimpleRegex re = new SimpleRegex(\"the qu.ck .* dog\", true);\n  * boolean matches = re.matches(\"The quick fox jumped over the lazy dog\");\n  * </code>"},{"sha":"70d363a289e4d384367624a289071f50be660886","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/SimpleResourceBundleProvider.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/SimpleResourceBundleProvider.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/SimpleResourceBundleProvider.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/SimpleResourceBundleProvider.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"f090b5e7c17a7e5a62c52a9b4ac72aeebe8b1ff3","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/SizedMap.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/SizedMap.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/SizedMap.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/SizedMap.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"528d588ed7f46430555f0a1e91c7dc6329cbb68b","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/StreamResourceBundleProvider.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/StreamResourceBundleProvider.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/StreamResourceBundleProvider.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/StreamResourceBundleProvider.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"093bdfa56b156165b56085037283171eeb6b1c52","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/StringDistance.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/StringDistance.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/StringDistance.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/StringDistance.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"918095964f53c441e7b1ac808c575d721b41e814","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/TemporaryClassLoader.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/TemporaryClassLoader.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/TemporaryClassLoader.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/TemporaryClassLoader.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"05145a10e97881ce20fdaa643749ce5cd01a05bc","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/TypedProperties.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/TypedProperties.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/TypedProperties.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/TypedProperties.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"7cbccb47240e057989466dd667f919984f6cfb1a","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/UUIDGenerator.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/UUIDGenerator.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/UUIDGenerator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/UUIDGenerator.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"6e1e11379508f8c8a7502d4abfbd6c56e605b71f","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ZipResourceBundleProvider.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ZipResourceBundleProvider.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ZipResourceBundleProvider.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/ZipResourceBundleProvider.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"bcfed019bffb253a1b2c6f3387e96e1a4e7295b0","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/AbstractCollection.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/AbstractCollection.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/AbstractCollection.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/AbstractCollection.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"0eff5dcf37fc55f23dda5b1ff87a81d16c979147","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/AbstractConcurrentEventManager.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/AbstractConcurrentEventManager.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/AbstractConcurrentEventManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/AbstractConcurrentEventManager.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"b6bdf0d72884e91458a059fdf194514a6ca8331a","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/AbstractQueue.java","status":"modified","additions":8,"deletions":7,"changes":15,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/AbstractQueue.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/AbstractQueue.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/AbstractQueue.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n@@ -37,8 +40,7 @@\n  * {@link Collection#iterator} supporting {@link\n  * Iterator#remove}. Typically, additional methods will be overridden\n  * as well. If these requirements cannot be met, consider instead\n- * subclassing {@link AbstractCollection}.\n- * This class is a member of the\n+ * subclassing {@link AbstractCollection}. This class is a member of the\n  * <a href=\"{@docRoot}/../guide/collections/index.html\">\n  * Java Collections Framework</a>.\n  *\n@@ -82,8 +84,7 @@ public boolean add(Object e) {\n     /**\n      * Retrieves and removes the head of this queue. This method differs\n      * from {@link #poll poll} only in that it throws an exception if this\n-     * queue is empty.\n-     * This implementation returns the result of <tt>poll</tt>\n+     * queue is empty. This implementation returns the result of <tt>poll</tt>\n      * unless the queue is empty.\n      *\n      * @return the head of this queue"},{"sha":"f4dc8262272ec8873eff9d2ad8379ec18c2b6069","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/AbstractSet.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/AbstractSet.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/AbstractSet.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/AbstractSet.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"e47618022fa0ebb5db2ff2ac7671e71a1a82f4d2","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/Arrays.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/Arrays.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/Arrays.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/Arrays.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"0140a824c37806ac3510c7659b3e9182346f59a4","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/ConcurrentHashMap.java","status":"modified","additions":16,"deletions":13,"changes":29,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/ConcurrentHashMap.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/ConcurrentHashMap.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/ConcurrentHashMap.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n@@ -199,7 +202,7 @@ private static Object unmaskNull(Object key) {\n      */\n     private static int hash(Object x) {\n         int h = x.hashCode();\n-        return h - (h << 7);    // i.e., -127 * h\n+        return h - (h << 7); // i.e., -127 * h\n     }\n \n     /**\n@@ -272,7 +275,7 @@ public final boolean isEmpty() {\n      *\n      * @param key the key whose associated value is to be returned.\n      * @return the value to which this map maps the specified key, or\n-     *         <tt>null</tt> if the map contains no mapping for this key.\n+     * <tt>null</tt> if the map contains no mapping for this key.\n      * @see #put(Object, Object)\n      */\n     public Object get(Object key) {\n@@ -286,7 +289,7 @@ public Object get(Object key) {\n      *\n      * @param keyThe key whose presence in this map is to be tested\n      * @return <tt>true</tt> if this map contains a mapping for the specified\n-     *         key.\n+     * key.\n      */\n     public final boolean containsKey(Object key) {\n         return getEntry(key) != null;\n@@ -315,9 +318,9 @@ protected Entry getEntry(Object key) {\n      * @param key key with which the specified value is to be associated.\n      * @param value value to be associated with the specified key.\n      * @return previous value associated with specified key, or <tt>null</tt>\n-     *         if there was no mapping for key. A <tt>null</tt> return can\n-     *         also indicate that the ConcurrentHashMap previously associated\n-     *         <tt>null</tt> with the specified key.\n+     * if there was no mapping for key. A <tt>null</tt> return can\n+     * also indicate that the ConcurrentHashMap previously associated\n+     * <tt>null</tt> with the specified key.\n      */\n     public Object put(Object key, Object value) {\n         Object k = maskNull(key);\n@@ -433,9 +436,9 @@ public final synchronized void putAll(Map t) {\n      *\n      * @param key key whose mapping is to be removed from the map.\n      * @return previous value associated with specified key, or <tt>null</tt>\n-     *         if there was no mapping for key. A <tt>null</tt> return can\n-     *         also indicate that the map previously associated <tt>null</tt>\n-     *         with the specified key.\n+     * if there was no mapping for key. A <tt>null</tt> return can\n+     * also indicate that the map previously associated <tt>null</tt>\n+     * with the specified key.\n      */\n     public Object remove(Object key) {\n         Entry e = removeEntryForKey(key);\n@@ -570,7 +573,7 @@ public Iterator randomEntryIterator() {\n      *\n      * @param value value whose presence in this map is to be tested.\n      * @return <tt>true</tt> if this map maps one or more keys to the\n-     *         specified value.\n+     * specified value.\n      */\n     public final boolean containsValue(Object value) {\n         if (value == null) return containsNullValue();"},{"sha":"f8ed894898d734dd130d8e9f96950c24ea4151d4","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/ConcurrentHashSet.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/ConcurrentHashSet.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/ConcurrentHashSet.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/ConcurrentHashSet.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"69e6a1b72656c3a7f34becdddf3989f4e17a9f55","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/ConcurrentLinkedQueue.java","status":"modified","additions":8,"deletions":6,"changes":14,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/ConcurrentLinkedQueue.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/ConcurrentLinkedQueue.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/ConcurrentLinkedQueue.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n@@ -45,8 +48,7 @@\n  * of elements requires a traversal of the elements.\n  * This class and its iterator implement all of the\n  * <em>optional</em> methods of the {@link Collection} and {@link\n- * Iterator} interfaces.\n- * Memory consistency effects: As with other concurrent\n+ * Iterator} interfaces. Memory consistency effects: As with other concurrent\n  * collections, actions in a thread prior to placing an object into a\n  * {@code ConcurrentLinkedQueue}\n  * <a href=\"package-summary.html#MemoryVisibility\"><i>happen-before</i></a>\n@@ -75,7 +77,7 @@\n      * fields to null. The normal queue operations unlink but then\n      * pass over nodes with null item fields. Similarly, iteration\n      * methods ignore those with nulls.\n-     *  Also note that like most non-blocking algorithms in this\n+     * Also note that like most non-blocking algorithms in this\n      * package, this implementation relies on the fact that in garbage\n      * collected systems, there is no possibility of ABA problems due\n      * to recycled nodes, so there is no need to use \"counted"},{"sha":"445aff02668437452281b38330796c6ed4e68ad1","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/ConcurrentMap.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/ConcurrentMap.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/ConcurrentMap.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/ConcurrentMap.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"0f84723e5e3c265770a446b0f7d7b4c3fe967e68","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/ConcurrentReferenceHashMap.java","status":"modified","additions":10,"deletions":7,"changes":17,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/ConcurrentReferenceHashMap.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/ConcurrentReferenceHashMap.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/ConcurrentReferenceHashMap.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n@@ -317,8 +320,8 @@ private void rehash() {\n      * @param key key with which the specified value is to be associated.\n      * @param value value to be associated with the specified key.\n      * @return previous value associated with specified key, or null if there\n-     *         was no mapping for key. A null return can also indicate that\n-     *         the HashMap previously associated null with the specified key.\n+     * was no mapping for key. A null return can also indicate that\n+     * the HashMap previously associated null with the specified key.\n      */\n     public Object put(Object key, Object value) {\n         if ((key == null && keyType != HARD)\n@@ -400,8 +403,8 @@ private void removeOverflow(int maxSize) {\n      *\n      * @param key key whose mapping is to be removed from the Map.\n      * @return previous value associated with specified key, or null if there\n-     *         was no mapping for key. A null return can also indicate that\n-     *         the HashMap previously associated null with the specified key.\n+     * was no mapping for key. A null return can also indicate that\n+     * the HashMap previously associated null with the specified key.\n      */\n     public Object remove(Object key) {\n         if (key == null && keyType != HARD)"},{"sha":"659a9255aa8985a85fa1599a28b1a4e33aeafcc1","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/ConcurrentReferenceHashSet.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/ConcurrentReferenceHashSet.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/ConcurrentReferenceHashSet.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/ConcurrentReferenceHashSet.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"e0e3d6f1697a87ea85e16e4438a4dcd9e09db6e5","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/CondVar.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/CondVar.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/CondVar.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/CondVar.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"8c909d997f73ce0d845b7a2b5b614647d3f95f95","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/Condition.java","status":"modified","additions":24,"deletions":28,"changes":52,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/Condition.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/Condition.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/Condition.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n@@ -27,8 +30,7 @@\n  * combining them with the use of arbitrary {@link Lock} implementations.\n  * Where a <tt>Lock</tt> replaces the use of <tt>synchronized</tt> methods\n  * and statements, a <tt>Condition</tt> replaces the use of the Object\n- * monitor methods.\n- * Conditions(also known as <em>condition queues</em> or\n+ * monitor methods. Conditions(also known as <em>condition queues</em> or\n  * <em>condition variables</em>) provide a means for one thread to\n  * suspend execution(to &quot;wait&quot;) until notified by another\n  * thread that some state condition may now be true. Because access\n@@ -54,21 +56,21 @@\n  * <b>final Lock lock = new ReentrantLock();</b>\n  * final Condition notFull = <b>lock.newCondition(); </b>\n  * final Condition notEmpty = <b>lock.newCondition(); </b>\n- *  final Object[] items = new Object[100]; int putptr, takeptr, count;\n- *  public void put(Object x) throws InterruptedException {\n+ * final Object[] items = new Object[100]; int putptr, takeptr, count;\n+ * public void put(Object x) throws InterruptedException {\n  * <b>lock.lock(); try {</b> while (count == items.length)\n  * <b>notFull.await();</b> items[putptr] = x;\n  * if (++putptr == items.length) putptr = 0; ++count;\n  * <b>notEmpty.signal();</b>\n  * <b>} finally { lock.unlock(); }</b> }\n- *  public Object take() throws InterruptedException {\n+ * public Object take() throws InterruptedException {\n  * <b>lock.lock(); try {</b> while (count == 0)\n  * <b>notEmpty.await();</b> Object x = items[takeptr];\n  * if (++takeptr == items.length) takeptr = 0; --count;\n  * <b>notFull.signal();</b> return x;\n  * <b>} finally { lock.unlock(); }</b> } }\n  * </pre>\n- * <p/>\n+ * \n  * (The {@link edu.emory.mathcs.backport.java.util.concurrent.ArrayBlockingQueue} class provides\n  * this functionality, so there is no reason to implement this\n  * sample usage class.)\n@@ -90,7 +92,7 @@\n  * instances in this way, except perhaps within their own implementation.\n  * Except where noted, passing a <tt>null</tt> value for any parameter\n  * will result in a {@link NullPointerException} being thrown.\n- * <p/>\n+ * \n  * <h3>Implementation Considerations</h3>\n  * When waiting upon a <tt>Condition</tt>, a &quot;<em>spurious\n  * wakeup</em>&quot; is permitted to occur, in\n@@ -100,8 +102,7 @@\n  * the state predicate that is being waited for. An implementation is\n  * free to remove the possibility of spurious wakeups but it is\n  * recommended that applications programmers always assume that they can\n- * occur and so always wait in a loop.\n- * The three forms of condition waiting\n+ * occur and so always wait in a loop. The three forms of condition waiting\n  * (interruptible, non-interruptible, and timed) may differ in their ease of\n  * implementation on some platforms and in their performance characteristics.\n  * In particular, it may be difficult to provide these features and maintain\n@@ -142,8 +143,7 @@\n      * <li>Some other thread {@link Thread#interrupt interrupts} the current\n      * thread, and interruption of thread suspension is supported; or\n      * <li>A &quot;<em>spurious wakeup</em>&quot; occurs\n-     * </ul>\n-     * In all cases, before this method can return the current thread must\n+     * </ul> In all cases, before this method can return the current thread must\n      * re-acquire the lock associated with this condition. When the\n      * thread returns it is <em>guaranteed</em> to hold this lock.\n      * If the current thread:\n@@ -156,7 +156,7 @@\n      * interrupted status is cleared. It is not specified, in the first\n      * case, whether or not the test for interruption occurs before the lock\n      * is released.\n-     * <p/>\n+     * \n      * <b>Implementation Considerations</b>\n      * The current thread is assumed to hold the lock associated with this\n      * <tt>Condition</tt> when this method is called.\n@@ -186,15 +186,14 @@\n      * <li>Some other thread invokes the {@link #signalAll} method for this\n      * <tt>Condition</tt>; or\n      * <li>A &quot;<em>spurious wakeup</em>&quot; occurs\n-     * </ul>\n-     * In all cases, before this method can return the current thread must\n+     * </ul> In all cases, before this method can return the current thread must\n      * re-acquire the lock associated with this condition. When the\n      * thread returns it is <em>guaranteed</em> to hold this lock.\n      * If the current thread's interrupted status is set when it enters\n      * this method, or it is {@link Thread#interrupt interrupted}\n      * while waiting, it will continue to wait until signalled. When it finally\n      * returns from this method its interrupted status will still be set.\n-     * <p/>\n+     * \n      * <b>Implementation Considerations</b>\n      * The current thread is assumed to hold the lock associated with this\n      * <tt>Condition</tt> when this method is called.\n@@ -256,7 +255,7 @@\n //     *      else\n //     *        return false;\n //     *   }\n-//     *   // ...\n+//     * // ...\n //     * }\n //     * </pre>\n //     *\n@@ -301,7 +300,7 @@\n      * @param time the maximum time to wait\n      * @param unit the time unit of the <tt>time</tt> argument.\n      * @return <tt>false</tt> if the waiting time detectably elapsed\n-     *         before return from the method, else <tt>true</tt>.\n+     * before return from the method, else <tt>true</tt>.\n      * @throws InterruptedException if the current thread is interrupted(and\n      * interruption of thread suspension is supported).\n      */\n@@ -323,12 +322,10 @@\n      * thread, and interruption of thread suspension is supported; or\n      * <li>The specified deadline elapses; or\n      * <li>A &quot;<em>spurious wakeup</em>&quot; occurs.\n-     * </ul>\n-     * In all cases, before this method can return the current thread must\n+     * </ul> In all cases, before this method can return the current thread must\n      * re-acquire the lock associated with this condition. When the\n      * thread returns it is <em>guaranteed</em> to hold this lock.\n-     * <p/>\n-     * If the current thread:\n+     *  If the current thread:\n      * <ul>\n      * <li>has its interrupted status set on entry to this method; or\n      * <li>is {@link Thread#interrupt interrupted} while waiting\n@@ -338,15 +335,14 @@\n      * interrupted status is cleared. It is not specified, in the first\n      * case, whether or not the test for interruption occurs before the lock\n      * is released.\n-     * <p/>\n-     * The return value indicates whether the deadline has elapsed,\n+     *  The return value indicates whether the deadline has elapsed,\n      * which can be used as follows:\n      * <pre> synchronized boolean aMethod(Date deadline) {\n      * boolean stillWaiting = true; while (!conditionBeingWaitedFor) {\n      * if (stillWaiting) stillWaiting = theCondition.awaitUntil(deadline); else\n      * return false; } // ... }\n      * </pre>\n-     * <p/>\n+     * \n      * <b>Implementation Considerations</b>\n      * The current thread is assumed to hold the lock associated with this\n      * <tt>Condition</tt> when this method is called.\n@@ -362,7 +358,7 @@\n      *\n      * @param deadline the absolute time to wait until\n      * @return <tt>false</tt> if the deadline has\n-     *         elapsed upon return, else <tt>true</tt>.\n+     * elapsed upon return, else <tt>true</tt>.\n      * @throws InterruptedException if the current thread is interrupted(and\n      * interruption of thread suspension is supported).\n      */"},{"sha":"178a07cf2d01f4dc557bd243b79d6d99c221b756","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/CopyOnWriteArrayList.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/CopyOnWriteArrayList.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/CopyOnWriteArrayList.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/CopyOnWriteArrayList.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"f2b365ba85231b8c3c1de0926962754a50191de1","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/CopyOnWriteArraySet.java","status":"modified","additions":15,"deletions":14,"changes":29,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/CopyOnWriteArraySet.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/CopyOnWriteArraySet.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/CopyOnWriteArraySet.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n@@ -41,17 +44,16 @@\n  * <b>Sample Usage.</b> The following code sketch uses a\n  * copy-on-write set to maintain a set of Handler objects that\n  * perform some action upon state updates.\n- * <p/>\n+ * \n  * <pre> class Handler { void handle(); ... }\n- *  class X { private final CopyOnWriteArraySet&lt;Handler&gt; handlers\n+ * class X { private final CopyOnWriteArraySet&lt;Handler&gt; handlers\n  * = new CopyOnWriteArraySet&lt;Handler&gt;();\n  * public void addHandler(Handler h) { handlers.add(h); }\n- *  private long internalState;\n+ * private long internalState;\n  * private synchronized void changeState() { internalState = ...; }\n- *  public void update() { changeState(); for (Handler handler : handlers)\n+ * public void update() { changeState(); for (Handler handler : handlers)\n  * handler.handle(); } }\n- * </pre>\n- * This class is a member of the\n+ * </pre> This class is a member of the\n  * <a href=\"{@docRoot}/../guide/collections/index.html\">\n  * Java Collections Framework</a>.\n  *\n@@ -124,8 +126,7 @@ public boolean contains(Object o) {\n      * are maintained by this set. (In other words, this method must\n      * allocate a new array even if this set is backed by an array).\n      * The caller is thus free to modify the returned array.\n-     * This method acts as bridge between array-based and collection-based\n-     * APIs.\n+     * This method acts as bridge between array-based and collection-based APIs.\n      *\n      * @return an array containing all the elements in this set\n      */\n@@ -155,7 +156,7 @@ public boolean contains(Object o) {\n      * Suppose <tt>x</tt> is a set known to contain only strings.\n      * The following code can be used to dump the set into a newly allocated\n      * array of <tt>String</tt>:\n-     * <p/>\n+     * \n      * <pre> String[] y = x.toArray(new String[0]);</pre>\n      * Note that <tt>toArray(new Object[0])</tt> is identical in function to\n      * <tt>toArray()</tt>.\n@@ -206,7 +207,7 @@ public boolean remove(Object o) {\n      *\n      * @param e element to be added to this set\n      * @return <tt>true</tt> if this set did not already contain the specified\n-     *         element\n+     * element\n      */\n     public boolean add(Object e) {\n         return al.addIfAbsent(e);\n@@ -219,7 +220,7 @@ public boolean add(Object e) {\n      *\n      * @param c collection to be checked for containment in this set\n      * @return <tt>true</tt> if this set contains all of the elements of the\n-     *         specified collection\n+     * specified collection\n      * @throws NullPointerException if the specified collection is null\n      * @see #contains(Object)\n      */"},{"sha":"f216554d6ec8cb933af2929256d37eaa1b73fa8f","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/FIFOCondVar.java","status":"modified","additions":8,"deletions":5,"changes":13,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/FIFOCondVar.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/FIFOCondVar.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/FIFOCondVar.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n@@ -117,7 +120,7 @@ public void signal() {\n         }\n         for (; ;) {\n             WaitQueue.WaitNode w = wq.extract();\n-            if (w == null) return;  // no one to signal\n+            if (w == null) return; // no one to signal\n             if (w.signal(sync)) return; // notify if still waiting, else skip\n         }\n     }\n@@ -128,7 +131,7 @@ public void signalAll() {\n         }\n         for (; ;) {\n             WaitQueue.WaitNode w = wq.extract();\n-            if (w == null) return;  // no more to signal\n+            if (w == null) return; // no more to signal\n             w.signal(sync);\n         }\n     }"},{"sha":"80fea7aaad260c178ac56f5f6f9ef5a9658836ce","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/FIFOWaitQueue.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/FIFOWaitQueue.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/FIFOWaitQueue.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/FIFOWaitQueue.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"3506614cd04a9859158770bf9134a0f1dc9cc86d","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/Lock.java","status":"modified","additions":15,"deletions":13,"changes":28,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/Lock.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/Lock.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/Lock.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n@@ -51,15 +54,15 @@\n  * responsibility. The absence of block-structured locking removes the\n  * automatic release of locks that occurs with <tt>synchronized</tt>\n  * methods and statements. In most cases, the following idiom should be used:\n- * <p/>\n+ * \n  * <pre><tt> Lock l = ...; l.lock(); try {\n  * // access the resource protected by this lock } finally { l.unlock(); }\n  * </tt></pre>\n  * When locking and unlocking occur in different scopes, care must be\n  * taken to ensure that all code that is executed while the lock is\n  * held is protected by try-finally or try-catch to ensure that the\n  * lock is released when necessary.\n- * <p/>\n+ * \n  * <tt>Lock</tt> implementations provide additional functionality\n  * over the use of <tt>synchronized</tt> methods and statements by\n  * providing a non-blocking attempt to acquire a lock({@link\n@@ -80,7 +83,7 @@\n  * instances in this way, except within their own implementation.\n  * Except where noted, passing a <tt>null</tt> value for any\n  * parameter will result in a {@link NullPointerException} being thrown.\n- * <p/>\n+ * \n  * <h3>Memory Synchronization</h3>\n  * All <tt>Lock</tt> implementations <em>must</em> enforce the same\n  * memory synchronization semantics as provided by the built-in monitor\n@@ -91,11 +94,10 @@\n  * synchronization effects as a successful <em>Lock</em> action.\n  * <li>A successful <tt>unlock</tt> operation has the same\n  * memory synchronization effects as a successful <em>Unlock</em> action.\n- * </ul>\n- * Unsuccessful locking and unlocking operations, and reentrant\n+ * </ul> Unsuccessful locking and unlocking operations, and reentrant\n  * locking/unlocking operations, do not require any memory\n  * synchronization effects.\n- * <p/>\n+ * \n  * <h3>Implementation Considerations</h3>\n  * The three forms of lock acquisition(interruptible,\n  * non-interruptible, and timed) may differ in their performance\n@@ -156,7 +158,7 @@\n      * </ul>\n      * then {@link InterruptedException} is thrown and the current thread's\n      * interrupted status is cleared.\n-     * <p/>\n+     * \n      * <b>Implementation Considerations</b>\n      * The ability to interrupt a lock acquisition in some\n      * implementations may not be possible, and if possible may be an\n@@ -192,7 +194,7 @@\n      * doesn't try to unlock if the lock was not acquired.\n      *\n      * @return <tt>true</tt> if the lock was acquired and <tt>false</tt>\n-     *         otherwise.\n+     * otherwise.\n      */\n     boolean tryLock();\n \n@@ -220,7 +222,7 @@\n      * If the specified waiting time elapses then the value <tt>false</tt>\n      * is returned. If the time is\n      * less than or equal to zero, the method will not wait at all.\n-     * <p/>\n+     * \n      * <b>Implementation Considerations</b>\n      * The ability to interrupt a lock acquisition in some implementations\n      * may not be possible, and if possible may be an expensive operation.\n@@ -237,7 +239,7 @@\n      * @param time the maximum time to wait for the lock\n      * @param unit the time unit of the <tt>time</tt> argument.\n      * @return <tt>true</tt> if the lock was acquired and <tt>false</tt>\n-     *         if the waiting time elapsed before the lock was acquired.\n+     * if the waiting time elapsed before the lock was acquired.\n      * @throws InterruptedException if the current thread is interrupted\n      * while acquiring the lock(and interruption of lock acquisition is\n      * supported)."},{"sha":"8082356ce2ecb7a7870957e9d6a11a13634ae173","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/NanoTimer.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/NanoTimer.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/NanoTimer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/NanoTimer.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"d042c4ea366728d207007315b1aac5481f81d451","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/Queue.java","status":"modified","additions":13,"deletions":12,"changes":25,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/Queue.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/Queue.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/Queue.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n@@ -31,8 +34,8 @@\n  * operation). The latter form of the insert operation is designed\n  * specifically for use with capacity-restricted <tt>Queue</tt>\n  * implementations; in most implementations, insert operations cannot fail.\n- * <p/>\n- * <p/>\n+ * \n+ * \n  * <table BORDER CELLPADDING=3 CELLSPACING=1>\n  * <tr>\n  * <td></td>\n@@ -54,8 +57,7 @@\n  * <td>{@link #element element()}</td>\n  * <td>{@link #peek peek()}</td>\n  * </tr>\n- * </table>\n- * Queues typically, but do not necessarily, order elements in a\n+ * </table> Queues typically, but do not necessarily, order elements in a\n  * FIFO(first-in-first-out) manner. Among the exceptions are\n  * priority queues, which order elements according to a supplied\n  * comparator, or the elements' natural ordering, and LIFO queues(or\n@@ -88,23 +90,22 @@\n  * which wait for elements to appear or for space to become available, are\n  * defined in the {@link edu.emory.mathcs.backport.java.util.concurrent.BlockingQueue} interface, which\n  * extends this interface.\n- * <p/>\n+ * \n  * <tt>Queue</tt> implementations generally do not allow insertion\n  * of <tt>null</tt> elements, although some implementations, such as\n  * {@link LinkedList}, do not prohibit insertion of <tt>null</tt>.\n  * Even in the implementations that permit it, <tt>null</tt> should\n  * not be inserted into a <tt>Queue</tt>, as <tt>null</tt> is also\n  * used as a special return value by the <tt>poll</tt> method to\n  * indicate that the queue contains no elements.\n- * <p/>\n+ * \n  * <tt>Queue</tt> implementations generally do not define\n  * element-based versions of methods <tt>equals</tt> and\n  * <tt>hashCode</tt> but instead inherit the identity based versions\n  * from class <tt>Object</tt>, because element-based equality is not\n  * always well-defined for queues with the same elements but different\n  * ordering properties.\n- * <p/>\n- * This interface is a member of the\n+ *  This interface is a member of the\n  * <a href=\"{@docRoot}/../guide/collections/index.html\">\n  * Java Collections Framework</a>.\n  *\n@@ -149,7 +150,7 @@\n      *\n      * @param e the element to add\n      * @return <tt>true</tt> if the element was added to this queue, else\n-     *         <tt>false</tt>\n+     * <tt>false</tt>\n      * @throws ClassCastException if the class of the specified element\n      * prevents it from being added to this queue\n      * @throws NullPointerException if the specified element is null and"},{"sha":"bd9eb2f1b14b5a9da6f9f61cb94d0daa9428d74c","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/ReentrantLock.java","status":"modified","additions":57,"deletions":65,"changes":122,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/ReentrantLock.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/ReentrantLock.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/ReentrantLock.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n@@ -29,8 +32,7 @@\n  * the lock is not owned by another thread. The method will return\n  * immediately if the current thread already owns the lock. This can\n  * be checked using methods {@link #isHeldByCurrentThread}, and {@link\n- * #getHoldCount}.\n- * The constructor for this class accepts an optional\n+ * #getHoldCount}. The constructor for this class accepts an optional\n  * <em>fairness</em> parameter. When set <tt>true</tt>, under\n  * contention, locks favor granting access to the longest-waiting\n  * thread. Otherwise this lock does not guarantee any particular\n@@ -48,13 +50,11 @@\n  * It is recommended practice to <em>always</em> immediately\n  * follow a call to <tt>lock</tt> with a <tt>try</tt> block, most\n  * typically in a before/after construction such as:\n- * <p/>\n+ * \n  * <pre> class X { private final ReentrantLock lock = new ReentrantLock();\n- * // ...\n- *  public void m() { lock.lock(); // block until condition holds try {\n+ * // ... public void m() { lock.lock(); // block until condition holds try {\n  * // ... method body } finally { lock.unlock() } } }\n- * </pre>\n- * In addition to implementing the {@link Lock} interface, this\n+ * </pre> In addition to implementing the {@link Lock} interface, this\n  * class defines methods <tt>isLocked</tt> and\n  * <tt>getLockQueueLength</tt>, as well as some associated\n  * <tt>protected</tt> access methods that may be useful for\n@@ -376,7 +376,7 @@ public void unlock() {\n             Thread caller = Thread.currentThread();\n             for (; ;) {\n                 WaitQueue.WaitNode w = getSignallee(caller);\n-                if (w == null) return;  // no one to signal\n+                if (w == null) return; // no one to signal\n                 if (w.signal(this)) return; // notify if still waiting, or skip\n             }\n         }\n@@ -431,8 +431,7 @@ public ReentrantLock(boolean fair) {\n     /**\n      * Acquires the lock.\n      * Acquires the lock if it is not held by another thread and returns\n-     * immediately, setting the lock hold count to one.\n-     * If the current thread\n+     * immediately, setting the lock hold count to one. If the current thread\n      * already holds the lock then the hold count is incremented by one and\n      * the method returns immediately.\n      * If the lock is held by another thread then the\n@@ -454,25 +453,23 @@ public void lock() {\n      * If the lock is held by another thread then the\n      * current thread becomes disabled for thread scheduling\n      * purposes and lies dormant until one of two things happens:\n-     * <p/>\n+     * \n      * <ul>\n-     * <p/>\n+     * \n      * <li>The lock is acquired by the current thread; or\n-     * <p/>\n+     * \n      * <li>Some other thread {@link Thread#interrupt interrupts} the current\n      * thread.\n-     * <p/>\n-     * </ul>\n-     * If the lock is acquired by the current thread then the lock hold\n-     * count is set to one.\n-     * If the current thread:\n-     * <p/>\n+     * \n+     * </ul> If the lock is acquired by the current thread then the lock hold\n+     * count is set to one. If the current thread:\n+     * \n      * <ul>\n-     * <p/>\n+     * \n      * <li>has its interrupted status set on entry to this method; or\n-     * <p/>\n+     * \n      * <li>is {@link Thread#interrupt interrupted} while acquiring the lock,\n-     * <p/>\n+     * \n      * </ul>\n      * then {@link InterruptedException} is thrown and the current thread's\n      * interrupted status is cleared.\n@@ -489,8 +486,7 @@ public void lockInterruptibly() throws InterruptedException {\n \n     /**\n      * Acquires the lock only if it is not held by another thread at the time\n-     * of invocation.\n-     * Acquires the lock if it is not held by another thread and\n+     * of invocation. Acquires the lock if it is not held by another thread and\n      * returns immediately with the value <tt>true</tt>, setting the\n      * lock hold count to one. Even when this lock has been set to use a\n      * fair ordering policy, a call to <tt>tryLock()</tt> <em>will</em>\n@@ -508,8 +504,8 @@ public void lockInterruptibly() throws InterruptedException {\n      * immediately with the value <tt>false</tt>.\n      *\n      * @return <tt>true</tt> if the lock was free and was acquired by the\n-     *         current thread, or the lock was already held by the current thread; and\n-     *         <tt>false</tt> otherwise.\n+     * current thread, or the lock was already held by the current thread; and\n+     * <tt>false</tt> otherwise.\n      */\n     public boolean tryLock() {\n         return sync.tryLock();\n@@ -526,36 +522,34 @@ public boolean tryLock() {\n      * are waiting for the lock. This is in contrast to the {@link #tryLock()}\n      * method. If you want a timed <tt>tryLock</tt> that does permit barging on\n      * a fair lock then combine the timed and un-timed forms together:\n-     * <p/>\n+     * \n      * <pre>if (lock.tryLock() || lock.tryLock(timeout, unit) ) { ... }\n-     * </pre>\n-     * If the current thread\n+     * </pre> If the current thread\n      * already holds this lock then the hold count is incremented by one and\n      * the method returns <tt>true</tt>.\n      * If the lock is held by another thread then the\n      * current thread becomes disabled for thread scheduling\n      * purposes and lies dormant until one of three things happens:\n-     * <p/>\n+     * \n      * <ul>\n-     * <p/>\n+     * \n      * <li>The lock is acquired by the current thread; or\n-     * <p/>\n+     * \n      * <li>Some other thread {@link Thread#interrupt interrupts} the current\n      * thread; or\n-     * <p/>\n+     * \n      * <li>The specified waiting time elapses\n-     * <p/>\n+     * \n      * </ul>\n      * If the lock is acquired then the value <tt>true</tt> is returned and\n-     * the lock hold count is set to one.\n-     * If the current thread:\n-     * <p/>\n+     * the lock hold count is set to one. If the current thread:\n+     * \n      * <ul>\n-     * <p/>\n+     * \n      * <li>has its interrupted status set on entry to this method; or\n-     * <p/>\n+     * \n      * <li>is {@link Thread#interrupt interrupted} while acquiring the lock,\n-     * <p/>\n+     * \n      * </ul>\n      * then {@link InterruptedException} is thrown and the current thread's\n      * interrupted status is cleared.\n@@ -571,9 +565,9 @@ public boolean tryLock() {\n      * @param timeout the time to wait for the lock\n      * @param unit the time unit of the timeout argument\n      * @return <tt>true</tt> if the lock was free and was acquired by the\n-     *         current thread, or the lock was already held by the current thread; and\n-     *         <tt>false</tt> if the waiting time elapsed before the lock could be\n-     *         acquired.\n+     * current thread, or the lock was already held by the current thread; and\n+     * <tt>false</tt> if the waiting time elapsed before the lock could be\n+     * acquired.\n      * @throws InterruptedException if the current thread is interrupted\n      * @throws NullPointerException if unit is null\n      */\n@@ -583,8 +577,7 @@ public boolean tryLock(long timeout, TimeUnit unit)\n     }\n \n     /**\n-     * Attempts to release this lock.\n-     * If the current thread is the\n+     * Attempts to release this lock. If the current thread is the\n      * holder of this lock then the hold count is decremented. If the\n      * hold count is now zero then the lock is released. If the\n      * current thread is not the holder of this lock then {@link\n@@ -604,32 +597,32 @@ public void unlock() {\n      * usages as do the {@link Object} monitor methods({@link\n      * Object#wait() wait}, {@link Object#notify notify}, and {@link\n      * Object#notifyAll notifyAll}) when used with the built-in monitor lock.\n-     * <p/>\n+     * \n      * <ul>\n-     * <p/>\n+     * \n      * <li>If this lock is not held when any of the {@link Condition}\n      * {@link Condition#await() waiting} or {@link Condition#signal\n      * signalling} methods are called, then an {@link\n      * IllegalMonitorStateException} is thrown.\n-     * <p/>\n+     * \n      * <li>When the condition {@link Condition#await() waiting}\n      * methods are called the lock is released and, before they\n      * return, the lock is reacquired and the lock hold count restored\n      * to what it was when the method was called.\n-     * <p/>\n+     * \n      * <li>If a thread is {@link Thread#interrupt interrupted} while\n      * waiting then the wait will terminate, an {@link\n      * InterruptedException} will be thrown, and the thread's\n      * interrupted status will be cleared.\n-     * <p/>\n+     * \n      * <li> Waiting threads are signalled in FIFO order\n-     * <p/>\n+     * \n      * <li>The ordering of lock reacquisition for threads returning\n      * from waiting methods is the same as for threads initially\n      * acquiring the lock, which is in the default case not specified,\n      * but for <em>fair</em> locks favors those threads that have been\n      * waiting the longest.\n-     * <p/>\n+     * \n      * </ul>\n      *\n      * @return the Condition object\n@@ -645,14 +638,14 @@ public Condition newCondition() {\n      * The hold count information is typically only used for testing and\n      * debugging purposes. For example, if a certain section of code should\n      * not be entered with the lock already held then we can assert that fact:\n-     * <p/>\n+     * \n      * <pre> class X { ReentrantLock lock = new ReentrantLock(); // ...\n      * public void m() { assert lock.getHoldCount() == 0; lock.lock(); try {\n      * // ... method body } finally { lock.unlock(); } } }\n      * </pre>\n      *\n      * @return the number of holds on this lock by the current thread,\n-     *         or zero if this lock is not held by the current thread.\n+     * or zero if this lock is not held by the current thread.\n      */\n     public int getHoldCount() {\n         return sync.getHoldCount();\n@@ -664,21 +657,20 @@ public int getHoldCount() {\n      * monitor locks, this method is typically used for debugging and\n      * testing. For example, a method that should only be called while\n      * a lock is held can assert that this is the case:\n-     * <p/>\n+     * \n      * <pre> class X { ReentrantLock lock = new ReentrantLock(); // ...\n-     *  public void m() { assert lock.isHeldByCurrentThread();\n+     * public void m() { assert lock.isHeldByCurrentThread();\n      * // ... method body } }\n-     * </pre>\n-     * It can also be used to ensure that a reentrant lock is used\n+     * </pre> It can also be used to ensure that a reentrant lock is used\n      * in a non-reentrant manner, for example:\n-     * <p/>\n+     * \n      * <pre> class X { ReentrantLock lock = new ReentrantLock(); // ...\n-     *  public void m() { assert !lock.isHeldByCurrentThread(); lock.lock();\n+     * public void m() { assert !lock.isHeldByCurrentThread(); lock.lock();\n      * try { // ... method body } finally { lock.unlock(); } } }\n      * </pre>\n      *\n      * @return <tt>true</tt> if current thread holds this lock and\n-     *         <tt>false</tt> otherwise.\n+     * <tt>false</tt> otherwise.\n      */\n     public boolean isHeldByCurrentThread() {\n         return sync.isHeldByCurrentThread();\n@@ -690,7 +682,7 @@ public boolean isHeldByCurrentThread() {\n      * not for synchronization control.\n      *\n      * @return <tt>true</tt> if any thread holds this lock and\n-     *         <tt>false</tt> otherwise.\n+     * <tt>false</tt> otherwise.\n      */\n     public boolean isLocked() {\n         return sync.isLocked();"},{"sha":"8fb4d9fdca9ea97451604dd4133b1085b269cc94","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/TimeUnit.java","status":"modified","additions":24,"deletions":23,"changes":47,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/TimeUnit.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/TimeUnit.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/TimeUnit.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n@@ -32,12 +35,11 @@\n  * the following code will timeout in 50 milliseconds if the {@link\n  * edu.emory.mathcs.backport.java.util.concurrent.locks.Lock lock} is not\n  * available:\n- * <p/>\n+ * \n  * <pre> Lock lock = ...; if ( lock.tryLock(50L, TimeUnit.MILLISECONDS) ) ...\n  * </pre> while this code will timeout in 50 seconds:\n  * <pre> Lock lock = ...; if ( lock.tryLock(50L, TimeUnit.SECONDS) ) ...\n- * </pre>\n- * Note however, that there is no guarantee that a particular timeout\n+ * </pre> Note however, that there is no guarantee that a particular timeout\n  * implementation will be able to notice the passage of time at the\n  * same granularity as the given <tt>TimeUnit</tt>.\n  *\n@@ -385,15 +387,14 @@ static long x(long d, long m, long over) {\n      * <tt>0</tt>. Conversions from coarser to finer granularities\n      * with arguments that would numerically overflow saturate to\n      * <tt>Long.MIN_VALUE</tt> if negative or <tt>Long.MAX_VALUE</tt>\n-     * if positive.\n-     * For example, to convert 10 minutes to milliseconds, use:\n+     * if positive. For example, to convert 10 minutes to milliseconds, use:\n      * <tt>TimeUnit.MILLISECONDS.convert(10L, TimeUnit.MINUTES)</tt>\n      *\n      * @param sourceDuration the time duration in the given <tt>sourceUnit</tt>\n      * @param sourceUnit the unit of the <tt>sourceDuration</tt> argument\n      * @return the converted duration in this unit,\n-     *         or <tt>Long.MIN_VALUE</tt> if conversion would negatively\n-     *         overflow, or <tt>Long.MAX_VALUE</tt> if it would positively overflow.\n+     * or <tt>Long.MIN_VALUE</tt> if conversion would negatively\n+     * overflow, or <tt>Long.MAX_VALUE</tt> if it would positively overflow.\n      */\n     public abstract long convert(long sourceDuration, TimeUnit sourceUnit);\n \n@@ -402,8 +403,8 @@ static long x(long d, long m, long over) {\n      *\n      * @param duration the duration\n      * @return the converted duration,\n-     *         or <tt>Long.MIN_VALUE</tt> if conversion would negatively\n-     *         overflow, or <tt>Long.MAX_VALUE</tt> if it would positively overflow.\n+     * or <tt>Long.MIN_VALUE</tt> if conversion would negatively\n+     * overflow, or <tt>Long.MAX_VALUE</tt> if it would positively overflow.\n      * @see #convert\n      */\n     public abstract long toNanos(long duration);\n@@ -413,8 +414,8 @@ static long x(long d, long m, long over) {\n      *\n      * @param duration the duration\n      * @return the converted duration,\n-     *         or <tt>Long.MIN_VALUE</tt> if conversion would negatively\n-     *         overflow, or <tt>Long.MAX_VALUE</tt> if it would positively overflow.\n+     * or <tt>Long.MIN_VALUE</tt> if conversion would negatively\n+     * overflow, or <tt>Long.MAX_VALUE</tt> if it would positively overflow.\n      * @see #convert\n      */\n     public abstract long toMicros(long duration);\n@@ -424,8 +425,8 @@ static long x(long d, long m, long over) {\n      *\n      * @param duration the duration\n      * @return the converted duration,\n-     *         or <tt>Long.MIN_VALUE</tt> if conversion would negatively\n-     *         overflow, or <tt>Long.MAX_VALUE</tt> if it would positively overflow.\n+     * or <tt>Long.MIN_VALUE</tt> if conversion would negatively\n+     * overflow, or <tt>Long.MAX_VALUE</tt> if it would positively overflow.\n      * @see #convert\n      */\n     public abstract long toMillis(long duration);\n@@ -435,8 +436,8 @@ static long x(long d, long m, long over) {\n      *\n      * @param duration the duration\n      * @return the converted duration,\n-     *         or <tt>Long.MIN_VALUE</tt> if conversion would negatively\n-     *         overflow, or <tt>Long.MAX_VALUE</tt> if it would positively overflow.\n+     * or <tt>Long.MIN_VALUE</tt> if conversion would negatively\n+     * overflow, or <tt>Long.MAX_VALUE</tt> if it would positively overflow.\n      * @see #convert\n      */\n     public abstract long toSeconds(long duration);\n@@ -446,8 +447,8 @@ static long x(long d, long m, long over) {\n      *\n      * @param duration the duration\n      * @return the converted duration,\n-     *         or <tt>Long.MIN_VALUE</tt> if conversion would negatively\n-     *         overflow, or <tt>Long.MAX_VALUE</tt> if it would positively overflow.\n+     * or <tt>Long.MIN_VALUE</tt> if conversion would negatively\n+     * overflow, or <tt>Long.MAX_VALUE</tt> if it would positively overflow.\n      * @see #convert\n      * @since 1.6\n      */\n@@ -458,8 +459,8 @@ static long x(long d, long m, long over) {\n      *\n      * @param duration the duration\n      * @return the converted duration,\n-     *         or <tt>Long.MIN_VALUE</tt> if conversion would negatively\n-     *         overflow, or <tt>Long.MAX_VALUE</tt> if it would positively overflow.\n+     * or <tt>Long.MIN_VALUE</tt> if conversion would negatively\n+     * overflow, or <tt>Long.MAX_VALUE</tt> if it would positively overflow.\n      * @see #convert\n      * @since 1.6\n      */\n@@ -490,7 +491,7 @@ static long x(long d, long m, long over) {\n      * into the form required by the <tt>Object.wait</tt> method.\n      * For example, you could implement a blocking <tt>poll</tt>\n      * method(see {@link BlockingQueue#poll BlockingQueue.poll}) using:\n-     * <p/>\n+     * \n      * <pre> public synchronized Object poll(long timeout, TimeUnit unit)\n      * throws InterruptedException { while (empty) {\n      * unit.timedWait(this, timeout); ... } }</pre>"},{"sha":"a77f573f4683cfa2305963f3ca8f43d11c810e8d","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/Utils.java","status":"modified","additions":15,"deletions":14,"changes":29,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/Utils.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/Utils.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/Utils.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n@@ -14,7 +17,7 @@\n  * Written by Dawid Kurzyniec, based on code written by Doug Lea with assistance\n  * from members of JCP JSR-166 Expert Group. Released to the public domain,\n  * as explained at http://creativecommons.org/licenses/publicdomain.\n- *  Thanks to Craig Mattocks for suggesting to use <code>sun.misc.Perf</code>.\n+ * Thanks to Craig Mattocks for suggesting to use <code>sun.misc.Perf</code>.\n  */\n \n package org.apache.openjpa.lib.util.concurrent;\n@@ -92,7 +95,7 @@ private Utils() {\n      * in successive calls that span greater than approximately 292 years\n      * (2^63 nanoseconds) will not accurately compute elapsed time due to\n      * numerical overflow.\n-     * <p/>\n+     * \n      * <em>Implementation note:</em>By default, this method uses\n      * <code>sun.misc.Perf</code> on Java 1.4.2, and falls back to\n      * System.currentTimeMillis() emulation on earlier JDKs. Custom\n@@ -135,8 +138,7 @@ public static long nanoTime() {\n      * thread, and interruption of thread suspension is supported; or\n      * <li>The specified waiting time elapses; or\n      * <li>A &quot;<em>spurious wakeup</em>&quot; occurs.\n-     * </ul>\n-     * In all cases, before this method can return the current thread must\n+     * </ul> In all cases, before this method can return the current thread must\n      * re-acquire the lock associated with this condition. When the\n      * thread returns it is <em>guaranteed</em> to hold this lock.\n      * If the current thread:\n@@ -148,23 +150,22 @@ public static long nanoTime() {\n      * then {@link InterruptedException} is thrown and the current thread's\n      * interrupted status is cleared. It is not specified, in the first\n      * case, whether or not the test for interruption occurs before the lock\n-     * is released.\n-     * The method returns an estimate of the number of nanoseconds\n+     * is released. The method returns an estimate of the number of nanoseconds\n      * remaining to wait given the supplied <tt>nanosTimeout</tt>\n      * value upon return, or a value less than or equal to zero if it\n      * timed out. Accuracy of this estimate is directly dependent on the\n      * accuracy of {@link #nanoTime}. This value can be used to determine\n      * whether and how long to re-wait in cases where the wait returns but an\n      * awaited condition still does not hold. Typical uses of this method take\n      * the following form:\n-     * <p/>\n+     * \n      * <pre> synchronized boolean aMethod(long timeout, TimeUnit unit) {\n      * long nanosTimeout = unit.toNanos(timeout);\n      * while (!conditionBeingWaitedFor) { if (nanosTimeout &gt; 0)\n      * nanosTimeout = theCondition.awaitNanos(nanosTimeout); else return false;\n      * } // ... }\n      * </pre>\n-     * <p/>\n+     * \n      * <b>Implementation Considerations</b>\n      * The current thread is assumed to hold the lock associated with this\n      * <tt>Condition</tt> when this method is called.\n@@ -181,9 +182,9 @@ public static long nanoTime() {\n      * @param cond the condition to wait for\n      * @param nanosTimeout the maximum time to wait, in nanoseconds\n      * @return A value less than or equal to zero if the wait has\n-     *         timed out; otherwise an estimate, that\n-     *         is strictly less than the <tt>nanosTimeout</tt> argument,\n-     *         of the time still remaining when this method returned.\n+     * timed out; otherwise an estimate, that\n+     * is strictly less than the <tt>nanosTimeout</tt> argument,\n+     * of the time still remaining when this method returned.\n      * @throws InterruptedException if the current thread is interrupted(and\n      * interruption of thread suspension is supported).\n      */"},{"sha":"3d5af9b5b05a021cae01addf9a3749bc1869800a","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/WaitQueue.java","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/WaitQueue.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/WaitQueue.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/concurrent/WaitQueue.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n@@ -88,7 +91,7 @@ else if (nanos <= 0) {\n                             return true;\n                         else {\n                             nanos = deadline - Utils.nanoTime();\n-                            if (nanos <= 0) { //  timed out\n+                            if (nanos <= 0) { // timed out\n                                 waiting = false;\n                                 return false;\n                             }"},{"sha":"e4ebafa417c8376d668ab32115ce0ff7e1674bbb","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/Commentable.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/Commentable.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/Commentable.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/Commentable.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"91dc8cf69494cd3fd9b361199d04e7330151c403","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/DocTypeReader.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/DocTypeReader.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/DocTypeReader.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/DocTypeReader.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"7338943adf4030f933f7f2664efebcb9a0eb5102","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/Location.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/Location.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/Location.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/Location.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"c4aefeca5859afacc9c4e675ac0ca6638f798dba","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/ValidatingErrorHandler.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/ValidatingErrorHandler.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/ValidatingErrorHandler.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/ValidatingErrorHandler.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"e77fafc28f0c16e423407dbe13fb0a528b7bcdd1","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/XMLFactory.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/XMLFactory.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/XMLFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/XMLFactory.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"89c0b67eb0329c2443752fc1d240464a6d97e091","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/XMLWriter.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/XMLWriter.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/XMLWriter.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/XMLWriter.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -1,10 +1,13 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and"},{"sha":"d34428839d6973de5e9ead0e9ca1691d95906b4b","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java","status":"modified","additions":14,"deletions":14,"changes":28,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -108,8 +108,8 @@\n import serp.util.Strings;\n \n /**\n- * <p>Persistence annotation metadata parser.  Currently does not parse\n- * deployment descriptors.</p>\n+ * Persistence annotation metadata parser. Currently does not parse\n+ * deployment descriptors.\n  *\n  * @author Abe White\n  * @author Steve Kim\n@@ -205,7 +205,7 @@ public Log getLog() {\n     }\n \n     /**\n-     * Returns the repository for this parser.  If none has been set,\n+     * Returns the repository for this parser. If none has been set,\n      * create a new repository and sets it.\n      */\n     public MetaDataRepository getRepository() {\n@@ -253,7 +253,7 @@ public void setEnvClassLoader(ClassLoader loader) {\n \n     /**\n      * Whether to allow later parses of mapping information to override\n-     * earlier information for the same class.  Defaults to false.  Useful\n+     * earlier information for the same class. Defaults to false. Useful\n      * when a tool is mapping a class, so that annotation partial mapping\n      * information can be used even when mappings are stored in another\n      * location.\n@@ -264,7 +264,7 @@ public boolean getMappingOverride() {\n \n     /**\n      * Whether to allow later parses of mapping information to override\n-     * earlier information for the same class.  Defaults to false.  Useful\n+     * earlier information for the same class. Defaults to false. Useful\n      * when a tool is mapping a class, so that annotation partial mapping\n      * information can be used even when mappings are stored in another\n      * location.\n@@ -630,7 +630,7 @@ protected boolean handleUnknownClassAnnotation(ClassMetaData meta,\n     }\n \n     /**\n-     * Find or create metadata for the given type.  May return null if\n+     * Find or create metadata for the given type. May return null if\n      * this class has already been parsed fully.\n      */\n     private ClassMetaData getMetaData() {\n@@ -741,7 +741,7 @@ else if (cache.enabled())\n     }\n \n     /**\n-     * Parse @DetachedState.  The annotation may be null.\n+     * Parse @DetachedState. The annotation may be null.\n      */\n     private void parseDetachedState(ClassMetaData meta,\n         DetachedState detached) {\n@@ -774,11 +774,11 @@ else if (!StringUtils.isEmpty(detached.fieldName()))\n \n     /**\n      * Parse callback methods into the given array, and return that array,\n-     * creating one if null.  Each index into the array is a collection of\n+     * creating one if null. Each index into the array is a collection of\n      * callback adapters for that numeric event type.\n      *\n-     * @param    sups whether to scan superclasses\n-     * @param    listener whether this is a listener or not\n+     * @param sups whether to scan superclasses\n+     * @param listener whether this is a listener or not\n      */\n     public static Collection<LifecycleCallbacks>[] parseCallbackMethods\n         (Class cls, Collection<LifecycleCallbacks>[] callbacks, boolean sups,\n@@ -1139,7 +1139,7 @@ private static int getGeneratedValueStrategy(Object context,\n     }\n \n     /**\n-     * Parse @Basic.  Given annotation may be null.\n+     * Parse @Basic. Given annotation may be null.\n      */\n     private void parseBasic(FieldMetaData fmd, Basic anno, boolean lob) {\n         Class type = fmd.getDeclaredType();\n@@ -1228,7 +1228,7 @@ private void parseOneToOne(FieldMetaData fmd, OneToOne anno) {\n     }\n \n     /**\n-     * Parse @Embedded.  Given annotation may be null.\n+     * Parse @Embedded. Given annotation may be null.\n      */\n     private void parseEmbedded(FieldMetaData fmd, Embedded anno) {\n         if (!JavaTypes.maybePC(fmd.getValue()))\n@@ -1459,7 +1459,7 @@ private void parseSequenceGenerator(AnnotatedElement el,\n         if (StringUtils.isEmpty(seq)) {\n             clsName = SequenceMetaData.IMPL_NATIVE;\n             props = null;\n-        } else if (seq.indexOf('(') != -1)    // plugin\n+        } else if (seq.indexOf('(') != -1) // plugin\n         {\n             seq = null;\n             clsName = Configurations.getClassName(seq);"},{"sha":"0721e2f4a92bd8ae2febfe5c0c0dd7f3cfba6ebf","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ArgumentException.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ArgumentException.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ArgumentException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ArgumentException.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -26,7 +26,7 @@\n import org.apache.openjpa.util.Exceptions;\n \n /**\n- * <p>Extended {@link IllegalArgumentException}.</p>\n+ * Extended {@link IllegalArgumentException}.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"48060232fe665da5ab2bbf8156d281217905017e","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ConfigurationProviderImpl.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ConfigurationProviderImpl.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ConfigurationProviderImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ConfigurationProviderImpl.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -37,10 +37,10 @@\n import org.apache.openjpa.util.GeneralException;\n \n /**\n- * <p>Configuration provider capable of loading a {@link Configuration} from\n- * the current environment's JPA-style XML configuration data.</p>\n- * <p/>\n- * <p>For defaults, looks in <code>org.apache.openjpa.properties</code> system property for\n+ * Configuration provider capable of loading a {@link Configuration} from\n+ * the current environment's JPA-style XML configuration data.\n+ * \n+ * For defaults, looks in <code>org.apache.openjpa.properties</code> system property for\n  * the location of a file to parse. If no system property is defined, the\n  * default resource location of <code>org.apache.openjpa.xml</code> is used.\n  * If it exists, the resource is parsed as an XML file.\n@@ -106,7 +106,7 @@ public boolean load(PersistenceUnitInfo pinfo, Map m)\n \n     /**\n      * Load configuration from the given resource, with the given map of\n-     * overrides.  If the resource is null, tries to load from persistence.xml,\n+     * overrides. If the resource is null, tries to load from persistence.xml,\n      * but still returns true if persistence.xml does not exist.\n      */\n     public boolean load(String name, String rsrc, Map m)\n@@ -155,7 +155,7 @@ public boolean loadDefaults(ClassLoader loader)\n      * resource into a new {@link PersistenceUnitInfo}. Then, applies the\n      * overrides in <code>m</code>.\n      *\n-     * @return    {@link Boolean#TRUE} if the resource was loaded, null if it\n+     * @return {@link Boolean#TRUE} if the resource was loaded, null if it\n      * does not exist, or {@link Boolean#FALSE} if it is not for OpenJPA\n      */\n     private Boolean load(String name, String rsrc, Map m, ClassLoader loader,\n@@ -252,8 +252,8 @@ public void setInto(Configuration conf) {\n     }\n \n     /**\n-     *\tSAX handler capable of parsing an JPA persistence.xml file.\n-     *\tPackage-protected for testing.\n+     * SAX handler capable of parsing an JPA persistence.xml file.\n+     * Package-protected for testing.\n      */\n     static class ConfigurationParser\n         extends XMLMetaDataParser {\n@@ -349,7 +349,7 @@ protected void endElement(String name)\n         }\n \n         /**\n-         *\tParse persistence-unit element.\n+         * Parse persistence-unit element.\n          */\n         private void startPersistenceUnit(Attributes attrs)\n             throws SAXException {"},{"sha":"2ba969c747706bff37c9e96145570bcbb0365a2d","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/DataCache.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/DataCache.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/DataCache.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/DataCache.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -21,7 +21,7 @@\n import java.lang.annotation.Target;\n \n /**\n- * <p>Caching characteristics for this class.</p>\n+ * Caching characteristics for this class.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"e2e3af442ee1c0daa49d3ada76f22cb1409f2b70","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/DataStoreId.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/DataStoreId.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/DataStoreId.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/DataStoreId.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -22,7 +22,7 @@\n import javax.persistence.GenerationType;\n \n /**\n- * <p>Describes how to generate a value for a field.</p>\n+ * Describes how to generate a value for a field.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"3293b54c7f343b5e68b1a9c67470c855d3da0bbf","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Dependent.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Dependent.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Dependent.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Dependent.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -22,7 +22,7 @@\n import java.lang.annotation.Target;\n \n /**\n- * <p>Dependent field marker.</p>\n+ * Dependent field marker.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"f8a89bf38968c248b3380506f09d0182b0e83389","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/DetachedState.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/DetachedState.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/DetachedState.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/DetachedState.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -22,7 +22,7 @@\n import java.lang.annotation.Target;\n \n /**\n- * <p>Detached state.</p>\n+ * Detached state.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"45805335f30c974e561f175bfd138e7491359343","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ElementDependent.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ElementDependent.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ElementDependent.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ElementDependent.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -22,7 +22,7 @@\n import java.lang.annotation.Target;\n \n /**\n- * <p>Dependent array, collection, or map element marker.</p>\n+ * Dependent array, collection, or map element marker.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"f4395f3bb65f70dfbc091e75406cce929e72a39b","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ElementType.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ElementType.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ElementType.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ElementType.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -22,8 +22,8 @@\n import java.lang.annotation.Target;\n \n /**\n- * <p>Indicates the persistent element type of an array, collection, or map\n- * field, if different than the declared element type.</p>\n+ * Indicates the persistent element type of an array, collection, or map\n+ * field, if different than the declared element type.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"7933a27eb78f1efb75dae3431c4a11a84e06ea5b","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityExistsException.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityExistsException.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityExistsException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityExistsException.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -27,7 +27,7 @@\n import org.apache.openjpa.util.StoreException;\n \n /**\n- * <p>Conflict with existing entity.</p>\n+ * Conflict with existing entity.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"030954a205ce5cb1113e9af2e6e4890a5b9c163e","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerFactoryImpl.java","status":"modified","additions":10,"deletions":10,"changes":20,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerFactoryImpl.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerFactoryImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerFactoryImpl.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -59,7 +59,7 @@\n     private transient QueryResultCache _queryCache = null;\n \n     /**\n-     * Constructor.  Delegate must be provided on construction.\n+     * Constructor. Delegate must be provided on construction.\n      */\n     protected EntityManagerFactoryImpl(BrokerFactory factory) {\n         _factory = new DelegatingBrokerFactory(factory,\n@@ -261,14 +261,14 @@ public boolean equals(Object other) {\n     }\n \n     /**\n-     *\tCreate a store-specific facade for the given fetch configuration.\n-     *\tThe name of the facade class is formed by taking the top-most org.apache.openjpa.xxx\n-     *\tpackage and class name prefix from the fetch configuration class and\n-     *\tcombining it as\n-     *\t<code>org.apache.openjpa.persistence.xxx.PrefixFetchConfiguration</code>.\n-     *\tThe class must have a constructor that takes a\n-     *\t<code>FetchConfiguration</code> argument.  If no facade class\n-     *\texists, we use the default {@link FetchConfiguration}.\n+     * Create a store-specific facade for the given fetch configuration.\n+     * The name of the facade class is formed by taking the top-most org.apache.openjpa.xxx\n+     * package and class name prefix from the fetch configuration class and\n+     * combining it as\n+     * <code>org.apache.openjpa.persistence.xxx.PrefixFetchConfiguration</code>.\n+     * The class must have a constructor that takes a\n+     * <code>FetchConfiguration</code> argument. If no facade class\n+     * exists, we use the default {@link FetchConfiguration}.\n      */\n     FetchPlan toFetchPlan(FetchConfiguration fetch) {\n         if (fetch == null)"},{"sha":"4f74982719f124892e428c93e45ac0d1dd1e1a46","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -52,7 +52,7 @@\n import org.apache.openjpa.util.UserException;\n \n /**\n- * <p>Implementation of {@link EntityManager} interface.</p>\n+ * Implementation of {@link EntityManager} interface.\n  *\n  * @author Patrick Linskey\n  * @author Abe White\n@@ -813,8 +813,7 @@ static LockModeType fromLockLevel(int level) {\n     }\n \n     /**\n-     * Translate the javax.persistence enum value to our internal\n-     * lock level.\n+     * Translate the javax.persistence enum value to our internal lock level.\n      */\n     static int toLockLevel(LockModeType mode) {\n         if (mode == null)"},{"sha":"8898a05383aaa199faa79dbdcde9e7f5b32f3666","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityNotFoundException.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityNotFoundException.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityNotFoundException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityNotFoundException.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -27,7 +27,7 @@\n import org.apache.openjpa.util.StoreException;\n \n /**\n- * <p>Missing entity.</p>\n+ * Missing entity.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"42bc33aad13a51bfd6626667730a41e52b98ec68","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Extent.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Extent.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Extent.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Extent.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -21,7 +21,7 @@\n import org.apache.openjpa.kernel.DelegatingExtent;\n \n /**\n- * <p>An extent is a logical view of all instances of a class.</p>\n+ * An extent is a logical view of all instances of a class.\n  *\n  * @author Abe White\n  * @published"},{"sha":"8c77b5c6055c76d8ad215f53896d6162be27262e","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ExternalValues.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ExternalValues.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ExternalValues.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ExternalValues.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -22,9 +22,9 @@\n import java.lang.annotation.Target;\n \n /**\n- * <p>Maps field values to their datastore equivalents.  Each element of\n+ * Maps field values to their datastore equivalents. Each element of\n  * the value array should be a string in the form:\n- * <code>&lt;field value&gt;=&lt;datastore value&gt;</code></p>\n+ * <code>&lt;field value&gt;=&lt;datastore value&gt;</code>\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"057b9c5a4991064733f2080889a602a79dab8abe","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Externalizer.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Externalizer.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Externalizer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Externalizer.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -22,8 +22,8 @@\n import java.lang.annotation.Target;\n \n /**\n- * <p>Declares a method that transforms the field value to its datastore\n- * equivalent.</p>\n+ * Declares a method that transforms the field value to its datastore\n+ * equivalent.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"46999f846ef560a89df36117cabe5bff3d379bf6","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Factory.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Factory.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Factory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Factory.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -22,8 +22,8 @@\n import java.lang.annotation.Target;\n \n /**\n- * <p>Declares a method that transforms the datastore value to its field\n- * equivalent.</p>\n+ * Declares a method that transforms the datastore value to its field\n+ * equivalent.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"6e36a0678443bf2dff2a51b2433ad314a385066f","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchAttribute.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchAttribute.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchAttribute.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchAttribute.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -20,7 +20,7 @@\n import java.lang.annotation.Target;\n \n /**\n- * <p>Includes a persistent attribute in a {@link FetchGroup}.</p>\n+ * Includes a persistent attribute in a {@link FetchGroup}.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"5356935912d755f01da088a745d9eef34fa8708d","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchGroup.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchGroup.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchGroup.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchGroup.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -21,7 +21,7 @@\n import java.lang.annotation.Target;\n \n /**\n- * <p>Fetch group definition.</p>\n+ * Fetch group definition.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"3dadbe9f5b7007e54cde62b76666407eaa302c94","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchGroups.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchGroups.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchGroups.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchGroups.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -21,7 +21,7 @@\n import java.lang.annotation.Target;\n \n /**\n- * <p>Fetch groups holder.</p>\n+ * Fetch groups holder.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"233ad8fc58c41acf94615a465f5ac0542ab3eef3","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchPlan.java","status":"modified","additions":11,"deletions":11,"changes":22,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchPlan.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchPlan.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/FetchPlan.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -25,8 +25,8 @@\n import org.apache.openjpa.kernel.FetchConfiguration;\n \n /**\n- * <p>The fetch plan allows you to dynamically alter eager fetching\n- * configuration and other aspects of data loading.</p>\n+ * The fetch plan allows you to dynamically alter eager fetching\n+ * configuration and other aspects of data loading.\n  *\n  * @author Abe White\n  * @since 4.0\n@@ -72,7 +72,7 @@ public FetchConfiguration getDelegate() {\n \n     /**\n      * Return the fetch batch size for large result set support.\n-     * Defaults to the\t<code>org.apache.openjpa.FetchBatchSize</code> setting.  Note\n+     * Defaults to the\t<code>org.apache.openjpa.FetchBatchSize</code> setting. Note\n      * that this property will be ignored under some data stores.\n      */\n     public int getFetchBatchSize() {\n@@ -81,7 +81,7 @@ public int getFetchBatchSize() {\n \n     /**\n      * Set the fetch batch size for large result set support.\n-     * Defaults to the\t<code>org.apache.openjpa.FetchBatchSize</code> setting.  Note\n+     * Defaults to the\t<code>org.apache.openjpa.FetchBatchSize</code> setting. Note\n      * that this property will be ignored under some data stores.\n      */\n     public FetchPlan setFetchBatchSize(int fetchBatchSize) {\n@@ -90,7 +90,7 @@ public FetchPlan setFetchBatchSize(int fetchBatchSize) {\n     }\n \n     /**\n-     * Return whether or not query caching is enabled.  If this returns\n+     * Return whether or not query caching is enabled. If this returns\n      * <code>true</code> but the datacache plugin is not installed, caching\n      * will not be enabled. If this\n      * returns <code>false</code>, query caching will not be used\n@@ -101,7 +101,7 @@ public boolean getQueryResultCache() {\n     }\n \n     /**\n-     * Control whether or not query caching is enabled.  This has no effect\n+     * Control whether or not query caching is enabled. This has no effect\n      * if the datacache plugin is not installed, or if the query cache size\n      * is set to zero.\n      */\n@@ -112,7 +112,7 @@ public FetchPlan setQueryResultCache(boolean cache) {\n \n     /**\n      * Returns the names of the fetch groups that this component will use\n-     * when loading objects.  Defaults to the\n+     * when loading objects. Defaults to the\n      * <code>org.apache.openjpa.FetchGroups</code> setting.\n      */\n     public Collection<String> getFetchGroups() {\n@@ -192,7 +192,7 @@ public FetchPlan resetFetchGroups() {\n \n     /**\n      * Returns the fully qualified names of the fields that this component\n-     * will use when loading objects.  Defaults to the empty set.\n+     * will use when loading objects. Defaults to the empty set.\n      */\n     public Collection<String> getFields() {\n //\t\treturn new FetchFieldSet ();\n@@ -400,7 +400,7 @@ public boolean equals(Object other) {\n     }\n \n     /**\n-     *\tView of fetch groups as collection.\n+     * View of fetch groups as collection.\n      */\n //\tprivate class FetchGroupSet\n //\t\textends AbstractCollection<String>\n@@ -431,7 +431,7 @@ public boolean equals(Object other) {\n //\t}\n \n     /**\n-     *\tView of fetch fields as collection.\n+     * View of fetch fields as collection.\n      */\n //\tprivate class FetchFieldSet\n //\t\textends AbstractCollection<String>"},{"sha":"df4164b584855dcf3784e50d8fe513c8439feb8f","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Generator.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Generator.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Generator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Generator.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -21,7 +21,7 @@\n import org.apache.openjpa.meta.ClassMetaData;\n \n /**\n- * <p>Represents a store sequence.</p>\n+ * Represents a store sequence.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"b1d97f88611fc0f7a8eb82475f221ce18f027ed0","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/InvalidStateException.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/InvalidStateException.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/InvalidStateException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/InvalidStateException.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -27,7 +27,7 @@\n import org.apache.openjpa.util.UserException;\n \n /**\n- * <p>Extended {@link IllegalStateException}.</p>\n+ * Extended {@link IllegalStateException}.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"35b04641fd256ca710434c1f56a6892d941e514d","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/InverseLogical.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/InverseLogical.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/InverseLogical.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/InverseLogical.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -22,7 +22,7 @@\n import java.lang.annotation.Target;\n \n /**\n- * <p>Declares the logical inverse of a field.</p>\n+ * Declares the logical inverse of a field.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"63cc4263113af313331a89d037938947eb5a4d0e","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/KeyDependent.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/KeyDependent.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/KeyDependent.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/KeyDependent.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -22,7 +22,7 @@\n import java.lang.annotation.Target;\n \n /**\n- * <p>Dependent map key marker.</p>\n+ * Dependent map key marker.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"c5edffe836d95eecb0f3316a89501ea92f7706f9","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/KeyType.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/KeyType.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/KeyType.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/KeyType.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -22,8 +22,8 @@\n import java.lang.annotation.Target;\n \n /**\n- * <p>Indicates the persistent key type of a map field, if different than the\n- * declared type.</p>\n+ * Indicates the persistent key type of a map field, if different than the\n+ * declared type.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"8a5c5682943548301a87232d5c8692706346ebce","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/LRS.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/LRS.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/LRS.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/LRS.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -22,7 +22,7 @@\n import java.lang.annotation.Target;\n \n /**\n- * <p>Large result set field marker.</p>\n+ * Large result set field marker.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"57aa339d8fd1e481fb2f5ec43c17b8a0c61bbf7e","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/MetaDataTag.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/MetaDataTag.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/MetaDataTag.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/MetaDataTag.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -21,7 +21,7 @@\n /////////////////////////////////////////////////////////\n \n /**\n- * <p>Set of metadata tags used in JPA.</p>\n+ * Set of metadata tags used in JPA.\n  *\n  * @author Abe White\n  */"},{"sha":"223a57d2a58f3c4ae45898f02d39c073a0daa82b","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/NoResultException.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/NoResultException.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/NoResultException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/NoResultException.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -27,7 +27,7 @@\n import org.apache.openjpa.util.UserException;\n \n /**\n- * <p>Unique query returned no results.</p>\n+ * Unique query returned no results.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"93d8fd8deb09d1281255ba5daa829d9d2f9f0809","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/NonUniqueResultException.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/NonUniqueResultException.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/NonUniqueResultException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/NonUniqueResultException.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -27,7 +27,7 @@\n import org.apache.openjpa.util.UserException;\n \n /**\n- * <p>Unique query returned multipl results.</p>\n+ * Unique query returned multipl results.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"f1dd1504feb420afaffc297f07c3cea5fcf43651","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAEntityManager.java","status":"modified","additions":44,"deletions":51,"changes":95,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAEntityManager.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAEntityManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAEntityManager.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -31,7 +31,7 @@\n import org.apache.openjpa.lib.util.Closeable;\n \n /**\n- * <p>Interface implemented by OpenJPA entity managers.</p>\n+ * Interface implemented by OpenJPA entity managers.\n  *\n  * @since 4.0\n  * @author Abe White\n@@ -62,7 +62,7 @@\n     /**\n      * Return the connection retain mode for this entity manager.\n      *\n-     * @see    ConnectionRetainModes\n+     * @see ConnectionRetainModes\n      */\n     public int getConnectionRetainMode();\n \n@@ -78,13 +78,13 @@\n \n     /**\n      * Whether to check for a global transaction upon every managed,\n-     * non-transactional operation.  Defaults to false.\n+     * non-transactional operation. Defaults to false.\n      */\n     public boolean getSyncWithManagedTransactions();\n \n     /**\n      * Whether to check for a global transaction upon every managed,\n-     * non-transactional operation.  Defaults to false.\n+     * non-transactional operation. Defaults to false.\n      */\n     public void setSyncWithManagedTransactions(boolean resync);\n \n@@ -161,14 +161,14 @@\n     /**\n      * Whether to restore an object's original state on rollback.\n      *\n-     * @see    RestoreState\n+     * @see RestoreState\n      */\n     public int getRestoreState();\n \n     /**\n      * Whether to restore an object's original state on rollback.\n      *\n-     * @see    RestoreState\n+     * @see RestoreState\n      */\n     public void setRestoreState(int restore);\n \n@@ -186,29 +186,29 @@\n      * Detach mode constant to determine which fields are part of the\n      * detached graph.\n      *\n-     * @see    DetachState\n+     * @see DetachState\n      */\n     public int getDetachState();\n \n     /**\n      * Detach mode constant to determine which fields are part of the\n      * detached graph.\n      *\n-     * @see    DetachState\n+     * @see DetachState\n      */\n     public void setDetachState(int mode);\n \n     /**\n      * Whether to clear state when entering a transaction.\n      *\n-     * @see    AutoClear\n+     * @see AutoClear\n      */\n     public int getAutoClear();\n \n     /**\n      * Whether to clear state when entering a transaction.\n      *\n-     * @see    AutoClear\n+     * @see AutoClear\n      */\n     public void setAutoClear(int clear);\n \n@@ -276,7 +276,7 @@\n     public void setLargeTransaction(boolean largeTransaction);\n \n     /**\n-     * Put the specified key-value pair into the map of user objects.  Use\n+     * Put the specified key-value pair into the map of user objects. Use\n      * a value of null to remove the key.\n      */\n     public Object putUserObject(Object key, Object val);\n@@ -302,7 +302,7 @@\n \n     /**\n      * Register a listener for lifecycle-related events on the specified\n-     * classes.  If the classes are null, all events will be propagated to\n+     * classes. If the classes are null, all events will be propagated to\n      * the listener.\n      */\n     public void addLifecycleListener(Object listener, Class... classes);\n@@ -319,28 +319,28 @@\n     /**\n      * Return the objects with the given oids.\n      *\n-     * @param    oids    the oids of the objects to return\n+     * @param oids the oids of the objects to return\n      * @return the objects that were looked up, in the\n      * same order as the oids parameter.\n-     * @see    #find(Class,Object)\n+     * @see #find(Class,Object)\n      */\n     public <T> T[] findAll(Class<T> cls, Object... oids);\n \n     /**\n      * Return the objects with the given oids.\n      *\n-     * @param    oids    the oids of the objects to return\n+     * @param oids the oids of the objects to return\n      * @return the objects that were looked up, in the\n      * same order as the oids parameter.\n-     * @see    #find(Class,Object)\n+     * @see #find(Class,Object)\n      */\n     public <T> Collection<T> findAll(Class<T> cls, Collection oids);\n \n     /**\n      * Return the cached instance for the given oid/object, or null if not\n      * cached.\n      *\n-     * @param    oid        the object's id\n+     * @param oid the object's id\n      * @return the cached object, or null if not cached\n      */\n     public <T> T findCached(Class<T> cls, Object oid);\n@@ -357,29 +357,23 @@\n \n     /**\n      * Issue a commit and then start a new transaction. This is identical to:\n-     * <pre>\n-     * \tmanager.commit ();\n-     * \tmanager.begin ();\n-     * \t</pre>\n-     * except that the entity manager's internal atomic lock is utilized,\n+     * <pre> manager.commit (); manager.begin ();\n+     * </pre> except that the entity manager's internal atomic lock is utilized,\n      * so this method can be safely executed from multiple threads.\n      *\n-     * @see    #commit()\n-     * @see    #begin()\n+     * @see #commit()\n+     * @see #begin()\n      */\n     public void commitAndResume();\n \n     /**\n      * Issue a rollback and then start a new transaction. This is identical to:\n-     * <pre>\n-     * \tmanager.rollback ();\n-     * \tmanager.begin ();\n-     * \t</pre>\n-     * except that the entity manager's internal atomic lock is utilized,\n+     * <pre> manager.rollback (); manager.begin ();\n+     * </pre> except that the entity manager's internal atomic lock is utilized,\n      * so this method can be safely executed from multiple threads.\n      *\n-     * @see    #rollback()\n-     * @see    #begin()\n+     * @see #rollback()\n+     * @see #begin()\n      */\n     public void rollbackAndResume();\n \n@@ -435,9 +429,9 @@\n \n     /**\n      * Validate the changes made in this transaction, reporting any optimistic\n-     * violations, constraint violations, etc.  In a datastore transaction or\n+     * violations, constraint violations, etc. In a datastore transaction or\n      * a flushed optimistic transaction, this method will act just like\n-     * {@link #flush()}.  In an optimistic transaction that has not yet begun a\n+     * {@link #flush()}. In an optimistic transaction that has not yet begun a\n      * datastore-level transaction, however, it will only report exceptions\n      * that would occur on flush, without retaining any datastore resources.\n      */\n@@ -449,7 +443,7 @@\n     public boolean isStoreActive();\n \n     /**\n-     * Begins a store transaction if one isn't already started.  The\n+     * Begins a store transaction if one isn't already started. The\n      * entity manager must already be in a logical transaction.\n      */\n     public void beginStore();\n@@ -489,43 +483,43 @@\n     public void removeAll(Collection pcs);\n \n     /**\n-     * Release the given object from management.  This operation is not\n+     * Release the given object from management. This operation is not\n      * recursive.\n      */\n     public void release(Object pc);\n \n     /**\n-     * Release the given object from management.  This operation is not\n+     * Release the given object from management. This operation is not\n      * recursive.\n      */\n     public void releaseAll(Object... pcs);\n \n     /**\n-     * Release the given objects from management.  This operation is not\n+     * Release the given objects from management. This operation is not\n      * recursive.\n      */\n     public void releaseAll(Collection pcs);\n \n     /**\n-     * Immediately load the given object's persistent fields.  One might\n+     * Immediately load the given object's persistent fields. One might\n      * use this action to make sure that an instance's fields are loaded\n-     * before transitioning it to transient.  Note that this action is not\n-     * recursive.  Any related objects that are loaded will not necessarily\n+     * before transitioning it to transient. Note that this action is not\n+     * recursive. Any related objects that are loaded will not necessarily\n      * have their fields loaded.\n      */\n     public void retrieve(Object pc);\n \n     /**\n      * Retrieve the persistent state of the given objects.\n      *\n-     * @see    #retrieve\n+     * @see #retrieve\n      */\n     public void retrieveAll(Object... pcs);\n \n     /**\n      * Retrieve the persistent state of the given objects.\n      *\n-     * @see    #retrieve\n+     * @see #retrieve\n      */\n     public void retrieveAll(Collection pcs);\n \n@@ -767,7 +761,7 @@\n     //////////////\n \n     /**\n-     * Cancel all pending data store statements.  If statements are cancelled\n+     * Cancel all pending data store statements. If statements are cancelled\n      * while a flush is in progress, the transaction rollback only flag will\n      * be set.\n      *\n@@ -852,7 +846,7 @@\n      * {@link org.apache.openjpa.enhance.PersistenceCapable},\n      * following the property-based persistent attribute access rules, or\n      * will raise an exception if the class does not meet the requirements\n-     * for subclassing.  Otherwise, this will return an instance of the\n+     * for subclassing. Otherwise, this will return an instance of the\n      * specified class.\n      */\n     public <T> T createInstance(Class<T> cls);\n@@ -894,16 +888,15 @@\n     public boolean isRemoved(Object o);\n \n     /**\n-     * \tReturns <code>true</code> if <code>pc</code> is a detached object\n-\t * \t(one that can be reattached to a {@link EntityManager} via a call\n-\t *\tto {@link EntityManager#merge}); otherwise returns\n-\t *\t<code>false</code>.\n+     * Returns <code>true</code> if <code>pc</code> is a detached object\n+\t * (one that can be reattached to a {@link EntityManager} via a call\n+\t * to {@link EntityManager#merge}); otherwise returns\n+\t * <code>false</code>.\n \t */\n \tpublic boolean isDetached (Object o);\n \n-\n \t/**\n-\t *\tReturns the current version indicator for <code>o</code>.\n+\t * Returns the current version indicator for <code>o</code>.\n \t */\n \tpublic Object getVersion (Object o);\n }"},{"sha":"9a9802c5446300ff6d286f027d5a5e3c2cdf88be","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAEntityManagerFactory.java","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAEntityManagerFactory.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAEntityManagerFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAEntityManagerFactory.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -25,7 +25,7 @@\n import org.apache.openjpa.lib.util.Closeable;\n \n /**\n- * <p>Interface implemented by OpenJPA entity manager factories.</p>\n+ * Interface implemented by OpenJPA entity manager factories.\n  *\n  * @author Abe White\n  * @since 4.0\n@@ -56,7 +56,7 @@\n     public Object getUserObject(Object key);\n \n     /**\n-     * Access the level 2 store cache.  This cache acts as a proxy to all\n+     * Access the level 2 store cache. This cache acts as a proxy to all\n      * named caches.\n      */\n     public StoreCache getStoreCache();\n@@ -74,7 +74,7 @@\n     public OpenJPAEntityManager createEntityManager();\n \n     /**\n-     * <p>Return an entity manager with the provided additional configuration\n+     * Return an entity manager with the provided additional configuration\n      * settings. OpenJPA recognizes the following configuration settings in this\n      * method:\n      * <ul>\n@@ -88,18 +88,18 @@\n \n     /**\n      * Register a listener for lifecycle-related events on the specified\n-     * classes.  If the classes are null, all events will be propagated to\n-     * the listener.  The listener will be passed on to all new entity\n-     * managers.  See the <code>org.apache.openjpa.event</code> package for listener types.\n+     * classes. If the classes are null, all events will be propagated to\n+     * the listener. The listener will be passed on to all new entity\n+     * managers. See the <code>org.apache.openjpa.event</code> package for listener types.\n      *\n      * @since 3.3\n      */\n     public void addLifecycleListener(Object listener, Class... classes);\n \n     /**\n-     *\tRemove a listener for lifecycle-related events.\n+     * Remove a listener for lifecycle-related events.\n      *\n-     *\t@since 3.3\n+     * @since 3.3\n      */\n     public void removeLifecycleListener (Object listener);\n }"},{"sha":"fd12d22e19dfce6cd313eaa97661889edfb5680b","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAPersistence.java","status":"modified","additions":13,"deletions":18,"changes":31,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAPersistence.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAPersistence.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAPersistence.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -48,8 +48,8 @@\n import org.apache.openjpa.util.StringId;\n \n /**\n- * <p>Static helper method for JPA users, including switching\n- * between OpenJPA native and Java Persistence APIs.</p>\n+ * Static helper method for JPA users, including switching\n+ * between OpenJPA native and Java Persistence APIs.\n  *\n  * @author Abe White\n  * @published\n@@ -160,7 +160,7 @@ public static OpenJPAQuery cast(Query q) {\n \n     /**\n      * Returns the {@link OpenJPAEntityManagerFactory} specified by\n-     * your OpenJPA defaults.  This method will return the same logical factory\n+     * your OpenJPA defaults. This method will return the same logical factory\n      * for each invocation.\n      */\n     public static OpenJPAEntityManagerFactory getEntityManagerFactory() {\n@@ -169,7 +169,7 @@ public static OpenJPAEntityManagerFactory getEntityManagerFactory() {\n \n     /**\n      * Returns the {@link OpenJPAEntityManagerFactory} specified by\n-     * your OpenJPA defaults, using <code>map</code> as overrides.  This method\n+     * your OpenJPA defaults, using <code>map</code> as overrides. This method\n      * will return the same logical factory for invocations with the same\n      * overrides.\n      */\n@@ -185,36 +185,31 @@ public static OpenJPAEntityManagerFactory getEntityManagerFactory(Map map) {\n     }\n \n     /**\n-     * <p>Returns a new {@link OpenJPAEntityManagerFactory} specified by\n+     * Returns a new {@link OpenJPAEntityManagerFactory} specified by\n      * <code>name</code> in an XML configuration file at the resource location\n      * <code>resource</code>. If <code>name</code> is <code>null</code>, uses\n      * the first resource found in the specified location, regardless of the\n      * name specified in the XML resource or the name of the jar that the\n      * resource is contained in. If <code>resource</code> is <code>null</code>,\n-     * uses the spec-defined <code>META-INF/persistence.xml</code>\n-     * resource.</p>\n-     * <p/>\n-     * <p>This method only resolves {@link OpenJPAEntityManagerFactory}\n-     * instances.</p>\n+     * uses the spec-defined <code>META-INF/persistence.xml</code> resource.\n+     *  This method only resolves {@link OpenJPAEntityManagerFactory} instances.\n      */\n     public static OpenJPAEntityManagerFactory createEntityManagerFactory\n         (String name, String resource) {\n         return createEntityManagerFactory(name, resource, null);\n     }\n \n     /**\n-     * <p>Returns a new {@link OpenJPAEntityManagerFactory} specified by\n+     * Returns a new {@link OpenJPAEntityManagerFactory} specified by\n      * <code>name</code> in an XML configuration file at the resource location\n      * <code>resource</code>, applying the properties specified in\n      * <code>map</code> as overrides. If <code>name</code> is\n      * <code>null</code>, uses the first resource found in the specified\n      * location, regardless of the name specified in the XML resource or the\n      * name of the jar that the resource is contained in.\n      * If <code>resource</code> is <code>null</code>, uses the spec-defined\n-     * <code>META-INF/persistence.xml</code> resource.</p>\n-     * <p/>\n-     * <p>This method only resolves {@link OpenJPAEntityManagerFactory}\n-     * instances.</p>\n+     * <code>META-INF/persistence.xml</code> resource.\n+     *  This method only resolves {@link OpenJPAEntityManagerFactory} instances.\n      */\n     public static OpenJPAEntityManagerFactory createEntityManagerFactory\n         (String name, String resource, Map map) {\n@@ -316,7 +311,7 @@ public static ClassMetaData getMetaData(EntityManagerFactory emf,\n     }\n \n     /**\n-     * Close the given resource.  The resource can be an extent iterator,\n+     * Close the given resource. The resource can be an extent iterator,\n      * query result, large result set relation, or any closeable OpenJPA\n      * component.\n      */\n@@ -433,7 +428,7 @@ public static Collection toOpenJPAObjectIds(ClassMetaData meta,\n     }\n \n     /**\n-     *\tTranslate from a OpenJPA identity class to a native one.\n+     * Translate from a OpenJPA identity class to a native one.\n      */\n     public static Class fromOpenJPAObjectIdClass(Class oidClass) {\n         if (oidClass == null)"},{"sha":"44773d8aa4510b94b03d8dcd39c8e0a3f1343c61","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAQuery.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAQuery.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAQuery.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAQuery.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -29,7 +29,7 @@\n import org.apache.openjpa.kernel.exps.FilterListener;\n \n /**\n- * <p>Interface implemented by OpenJPA queries.</p>\n+ * Interface implemented by OpenJPA queries.\n  *\n  * @since 4.0\n  * @author Abe White\n@@ -175,8 +175,7 @@\n     /**\n      * Returns a description of the commands that will be sent to\n      * the datastore in order to execute this query. This will\n-     * typically be in the native query language of the database\n-     * (e.g., SQL).\n+     * typically be in the native query language of the database (e.g., SQL).\n      *\n      * @param params the named parameter map for the query invocation\n      */\n@@ -207,7 +206,7 @@ public OpenJPAQuery setParameter(int position, Calendar value,\n     public OpenJPAQuery setFlushMode(FlushModeType flushMode);\n \n     /**\n-     *\tReturn the current flush mode.\n+     * Return the current flush mode.\n \t */\n \tpublic FlushModeType getFlushMode ();\n }"},{"sha":"8cd95ce00f66ed0b4f3af4905a67c41f0e7cc432","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OptimisticLockException.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OptimisticLockException.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OptimisticLockException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OptimisticLockException.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -27,7 +27,7 @@\n import org.apache.openjpa.util.StoreException;\n \n /**\n- * <p>Optimistic concurrency violation.</p>\n+ * Optimistic concurrency violation.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"dd990841da6026f596d040719df750f66180312b","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceException.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceException.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceException.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -26,7 +26,7 @@\n import org.apache.openjpa.util.Exceptions;\n \n /**\n- * <p>General persistence exception.</p>\n+ * General persistence exception.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"67afcc7bb55534baf19bcdb088d9178ef4251cfd","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceExceptions.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceExceptions.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceExceptions.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceExceptions.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -25,7 +25,7 @@\n import org.apache.openjpa.util.UserException;\n \n /**\n- * <p>Converts from OpenJPA to persistence exception types.</p>\n+ * Converts from OpenJPA to persistence exception types.\n  *\n  * @author Abe White\n  * @author Marc Prud'hommeaux\n@@ -84,7 +84,7 @@ public static RuntimeException toPersistenceException(Throwable t) {\n     /**\n      * Translate the given exception.\n      *\n-     * @param    checked        whether to translate checked exceptions\n+     * @param checked whether to translate checked exceptions\n      */\n     private static Throwable translateException(Throwable t, boolean checked) {\n         if (isPersistenceException(t))\n@@ -236,8 +236,8 @@ private static Object getFailedObject(OpenJPAException ke) {\n     }\n \n     /**\n-     *\tHelper method to extract a nested exception from an internal nested\n-     *\tarray in a safe way.\n+     * Helper method to extract a nested exception from an internal nested\n+     * array in a safe way.\n      */\n     static Throwable getCause(Throwable[] nested) {\n         if (nested == null || nested.length == 0)"},{"sha":"1117c5db571e462eb7eb2d81f8250da2b1420209","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceListenerAdapter.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceListenerAdapter.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceListenerAdapter.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceListenerAdapter.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,"},{"sha":"86224f97c0069c7887bf9069205c75d876950c5d","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceMetaDataDefaults.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceMetaDataDefaults.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceMetaDataDefaults.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceMetaDataDefaults.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -53,7 +53,7 @@\n import org.apache.openjpa.util.MetaDataException;\n \n /**\n- * </p>Javax persistence-based metadata defaults.</p>\n+ * Javax persistence-based metadata defaults.\n  *\n  * @author Patrick Linskey\n  * @author Abe White\n@@ -96,7 +96,7 @@ public PersistenceMetaDataDefaults() {\n     }\n \n     /**\n-     * Return the code for the strategy of the given member.  Return null if\n+     * Return the code for the strategy of the given member. Return null if\n      * no strategy.\n      */\n     public static PersistenceStrategy getPersistenceStrategy"},{"sha":"198e51f7486df5f310592da28df6a7064acd4d8e","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceMetaDataFactory.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceMetaDataFactory.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceMetaDataFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceMetaDataFactory.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -49,7 +49,7 @@\n import org.apache.openjpa.util.MetaDataException;\n \n /**\n- * <p>{@link MetaDataFactory} for JPA metadata.</p>\n+ * {@link MetaDataFactory} for JPA metadata.\n  *\n  * @author Steve Kim\n  * @since 4.0"},{"sha":"dac65bb21c23dda04f8f39592ea91657dad10487","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -21,7 +21,7 @@\n import org.apache.openjpa.lib.conf.ConfigurationProvider;\n \n /**\n- * <p>Sets JPA specification defaults.</p>\n+ * Sets JPA specification defaults.\n  *\n  * @author Abe White\n  * @nojavadoc"},{"sha":"68a80ac4cebf29fd50fc35851852b5d9bbe74d30","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProviderImpl.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProviderImpl.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProviderImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProviderImpl.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -46,15 +46,14 @@\n         \"org.apache.openjpa.ClassTransformerOptions\";\n \n     /**\n-     * <p>Loads the entity manager specified by <code>name</code>, applying\n+     * Loads the entity manager specified by <code>name</code>, applying\n      * the properties in <code>m</code> as overrides to the properties defined\n      * in the XML configuration file for <code>name</code>. If <code>name</code>\n      * is <code>null</code>, this method loads the XML in the resource\n      * identified by <code>resource</code>, and uses the first resource found\n      * when doing this lookup, regardless of the name specified in the XML\n-     * resource or the name of the jar that the resource is contained in.</p>\n-     * <p/>\n-     * <p>This does no pooling of EntityManagersFactories.</p>\n+     * resource or the name of the jar that the resource is contained in.\n+     *  This does no pooling of EntityManagersFactories.\n      */\n     public EntityManagerFactory createEntityManagerFactory(String name,\n         String resource, Map m) {"},{"sha":"20af195ad6bcd56ec6882a87ae1a6900c06a8fcd","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceStrategy.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceStrategy.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -21,7 +21,7 @@\n ///////////////////////////////////////////////////////////////////\n \n /**\n- * <p>Set of field persistence strategies used in JPA.</p>\n+ * Set of field persistence strategies used in JPA.\n  *\n  * @author Abe White\n  */"},{"sha":"1e30fe83d49a6d7de653c2091696ee7bc85579a9","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceUnitInfoImpl.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceUnitInfoImpl.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceUnitInfoImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceUnitInfoImpl.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -243,14 +243,14 @@ public void addTransformer(ClassTransformer transformer) {\n     }\n \n     /**\n-     * The location of the persistence.xml resource.  May be null.\n+     * The location of the persistence.xml resource. May be null.\n      */\n     public URL getPersistenceXmlFileUrl() {\n         return _persistenceXmlFile;\n     }\n \n     /**\n-     * The location of the persistence.xml resource.  May be null.\n+     * The location of the persistence.xml resource. May be null.\n      */\n     public void setPersistenceXmlFileUrl(URL url) {\n         _persistenceXmlFile = url;\n@@ -438,7 +438,7 @@ public String getResourceName() {\n     }\n \n     /**\n-     *\tSimple class resolver built around the persistence unit loader.\n+     * Simple class resolver built around the persistence unit loader.\n      */\n     private static class ClassResolverImpl\n         implements ClassResolver {"},{"sha":"9a3d0a2604d8c54b71b6cf0c5929c5c9df8a6f5d","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Persistent.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Persistent.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Persistent.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Persistent.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -24,7 +24,7 @@\n import javax.persistence.FetchType;\n \n /**\n- * <p>Metadata annotation for a persistent field.</p>\n+ * Metadata annotation for a persistent field.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"086ef5b642c91c4e256ddbb7eee8a386c83215e0","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistentCollection.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistentCollection.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistentCollection.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistentCollection.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -24,7 +24,7 @@\n import javax.persistence.FetchType;\n \n /**\n- * <p>Metadata annotation for a persistent collection field.</p>\n+ * Metadata annotation for a persistent collection field.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"f60b019e27448ddc5d4ac79799f1719f1ee93a34","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistentMap.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistentMap.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistentMap.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistentMap.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -24,7 +24,7 @@\n import javax.persistence.FetchType;\n \n /**\n- * <p>Metadata annotation for a persistent map field.</p>\n+ * Metadata annotation for a persistent map field.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"7d6f401dc0c58258b1cfe58abb8bd8d84b1e15d1","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryImpl.java","status":"modified","additions":4,"deletions":5,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryImpl.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryImpl.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -41,7 +41,7 @@\n import org.apache.openjpa.lib.util.Localizer;\n \n /**\n- * <p>Implementation of {@link Query} interface.</p>\n+ * Implementation of {@link Query} interface.\n  *\n  * @author Marc Prud'hommeaux\n  * @author Abe White\n@@ -56,7 +56,7 @@\n         (QueryImpl.class);\n \n     private final DelegatingQuery _query;\n-    private transient Broker _broker;    // for profiling\n+    private transient Broker _broker; // for profiling\n     private transient EntityManagerImpl _em;\n     private transient FetchPlan _fetch;\n \n@@ -313,8 +313,7 @@ public int executeUpdate() {\n     }\n \n     /**\n-     * Cast the specified long down to an int, first checking\n-     * for overflow.\n+     * Cast the specified long down to an int, first checking for overflow.\n      */\n     private static int asInt(long l) {\n         if (l > Integer.MAX_VALUE)"},{"sha":"37bc8fdc1bdbe8a9eb3824b8b631db31c518d5fc","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryResultCache.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryResultCache.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryResultCache.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryResultCache.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -24,7 +24,7 @@\n import org.apache.openjpa.datacache.TypesChangedEvent;\n \n /**\n- * <p>Query result cache.</p>\n+ * Query result cache.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"a729c92f3336b52af6276f115e81eb9cc703b148","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ReadOnly.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ReadOnly.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ReadOnly.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/ReadOnly.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -22,7 +22,7 @@\n import java.lang.annotation.Target;\n \n /**\n- * <p>Marks a field read-only.</p>\n+ * Marks a field read-only.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"4d1bde6354d630900e8f0bc72724d3a833188e09","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/RollbackException.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/RollbackException.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/RollbackException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/RollbackException.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -26,7 +26,7 @@\n import org.apache.openjpa.util.Exceptions;\n \n /**\n- * <p>Rollback occurred on attempt to commit.</p>\n+ * Rollback occurred on attempt to commit.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"536b9e15dbc0371716cc3e42eb28e30a3e06f013","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/StoreCache.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/StoreCache.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/StoreCache.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/StoreCache.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -25,7 +25,7 @@\n import org.apache.openjpa.meta.MetaDataRepository;\n \n /**\n- * <p>Represents the L2 cache over the data store.</p>\n+ * Represents the L2 cache over the data store.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"ac37d81cbf9e56e1083a6d123152b37fdb0d12be","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/TransactionRequiredException.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/TransactionRequiredException.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/TransactionRequiredException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/TransactionRequiredException.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -27,7 +27,7 @@\n import org.apache.openjpa.util.UserException;\n \n /**\n- * <p>Transaction required.</p>\n+ * Transaction required.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"f54adddf04b341e1a77f0bbbf98137689b5ed775","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Type.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Type.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Type.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/Type.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -22,8 +22,8 @@\n import java.lang.annotation.Target;\n \n /**\n- * <p>Indicates the persistent type of a field, if different than the\n- * declared type.</p>\n+ * Indicates the persistent type of a field, if different than the\n+ * declared type.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"754b0cd21c71ff8142223218bff1b0ca456c1e21","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/UpdateAction.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/UpdateAction.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/UpdateAction.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/UpdateAction.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -16,7 +16,7 @@\n package org.apache.openjpa.persistence;\n \n /**\n- * <p>Action to take when a field's value is changed.</p>\n+ * Action to take when a field's value is changed.\n  *\n  * @author Abe White\n  * @since 4.0"},{"sha":"cb3ac3fcb615e83ca06f436c43003bfe27e790f9","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","status":"modified","additions":18,"deletions":18,"changes":36,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -62,8 +62,8 @@\n import org.apache.openjpa.util.UnsupportedException;\n \n /**\n- * <p>Custom SAX parser used by the system to quickly parse persistence i\n- * metadata files.</p>\n+ * Custom SAX parser used by the system to quickly parse persistence i\n+ * metadata files.\n  *\n  * @author Steve Kim\n  * @nojavadoc\n@@ -185,15 +185,15 @@ public OpenJPAConfiguration getConfiguration() {\n     }\n \n     /**\n-     * The annotation parser.  When class is discovered in an XML file,\n+     * The annotation parser. When class is discovered in an XML file,\n      * we first parse any annotations present, then override with the XML.\n      */\n     public AnnotationPersistenceMetaDataParser getAnnotationParser() {\n         return _parser;\n     }\n \n     /**\n-     * The annotation parser.  When class is discovered in an XML file,\n+     * The annotation parser. When class is discovered in an XML file,\n      * we first parse any annotations present, then override with the XML.\n      */\n     public void setAnnotationParser(\n@@ -202,7 +202,7 @@ public void setAnnotationParser(\n     }\n \n     /**\n-     * Returns the repository for this parser.  If none has been set, creates\n+     * Returns the repository for this parser. If none has been set, creates\n      * a new repository and sets it.\n      */\n     public MetaDataRepository getRepository() {\n@@ -253,7 +253,7 @@ public void setEnvClassLoader(ClassLoader loader) {\n \n     /**\n      * Whether to allow later parses of mapping information to override\n-     * earlier information for the same class.  Defaults to false.  Useful\n+     * earlier information for the same class. Defaults to false. Useful\n      * when a tool is mapping a class, so that .jdo file partial mapping\n      * information can be used even when mappings are stored in .orm files\n      * or other locations.\n@@ -264,7 +264,7 @@ public boolean getMappingOverride() {\n \n     /**\n      * Whether to allow later parses of mapping information to override\n-     * earlier information for the same class.  Defaults to false.  Useful\n+     * earlier information for the same class. Defaults to false. Useful\n      * when a tool is mapping a class, so that .jdo file partial mapping\n      * information can be used even when mappings are stored in .orm files\n      * or other locations.\n@@ -274,7 +274,7 @@ public void setMappingOverride(boolean override) {\n     }\n \n     /**\n-     * The parse mode according to the expected document type.  The\n+     * The parse mode according to the expected document type. The\n      * mode constants act as bit flags, and therefore can be combined.\n      */\n     public int getMode() {\n@@ -350,7 +350,7 @@ protected Object popElement() {\n     }\n \n     /**\n-     * Return the current element being parsed.  May be a class metadata,\n+     * Return the current element being parsed. May be a class metadata,\n      * field metadata, query metadata, etc.\n      */\n     protected Object currentElement() {\n@@ -1122,14 +1122,14 @@ private void finishField()\n     }\n \n     /**\n-     * Implement to add field mapping data.  Does nothing by default.\n+     * Implement to add field mapping data. Does nothing by default.\n      */\n     protected void startFieldMapping(FieldMetaData field, Attributes attrs)\n         throws SAXException {\n     }\n \n     /**\n-     * Implement to finalize field mapping.  Does nothing by default.\n+     * Implement to finalize field mapping. Does nothing by default.\n      */\n     protected void endFieldMapping(FieldMetaData field)\n         throws SAXException {\n@@ -1226,7 +1226,7 @@ protected void parseEmbedded(FieldMetaData fmd, Attributes attrs)\n         throws SAXException {\n         assertPC(fmd, \"Embedded\");\n         fmd.setEmbedded(true);\n-        fmd.setSerialized(false);    // override any Lob annotation\n+        fmd.setSerialized(false); // override any Lob annotation\n         if (fmd.getEmbeddedMetaData() == null)\n             fmd.addEmbeddedMetaData();\n     }\n@@ -1250,7 +1250,7 @@ protected void parseOneToOne(FieldMetaData fmd, Attributes attrs)\n         if (val != null)\n             fmd.setDeclaredType(classForName(val));\n         assertPC(fmd, \"OneToOne\");\n-        fmd.setSerialized(false);    // override any Lob annotation\n+        fmd.setSerialized(false); // override any Lob annotation\n         if (!fmd.isDefaultFetchGroupExplicit())\n             fmd.setInDefaultFetchGroup(true);\n     }\n@@ -1264,7 +1264,7 @@ protected void parseManyToOne(FieldMetaData fmd, Attributes attrs)\n         if (val != null)\n             fmd.setDeclaredType(classForName(val));\n         assertPC(fmd, \"ManyToOne\");\n-        fmd.setSerialized(false);    // override any Lob annotation\n+        fmd.setSerialized(false); // override any Lob annotation\n         if (!fmd.isDefaultFetchGroupExplicit())\n             fmd.setInDefaultFetchGroup(true);\n     }\n@@ -1278,7 +1278,7 @@ protected void parseManyToMany(FieldMetaData fmd, Attributes attrs)\n         if (val != null)\n             fmd.getElement().setDeclaredType(classForName(val));\n         assertPCCollection(fmd, \"ManyToMany\");\n-        fmd.setSerialized(false);    // override Lob in annotation\n+        fmd.setSerialized(false); // override Lob in annotation\n     }\n \n     /**\n@@ -1308,7 +1308,7 @@ protected void parseOneToMany(FieldMetaData fmd, Attributes attrs)\n         if (val != null)\n             fmd.getElement().setDeclaredType(classForName(val));\n         assertPCCollection(fmd, \"OneToMany\");\n-        fmd.setSerialized(false);    // override any Lob annotation\n+        fmd.setSerialized(false); // override any Lob annotation\n     }\n \n     /**\n@@ -1626,7 +1626,7 @@ private void storeCallbacks(ClassMetaData cls) {\n     }\n \n     /**\n-     *\tInstantiate the given class, taking into account the default package.\n+     * Instantiate the given class, taking into account the default package.\n \t */\n \tprotected Class classForName (String name)\n \t\tthrows SAXException"},{"sha":"d099026efac5be8ee4e6fb8ff1bc427325e1e979","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataSerializer.java","status":"modified","additions":23,"deletions":24,"changes":47,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataSerializer.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataSerializer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataSerializer.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,7 +5,7 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n@@ -50,11 +50,11 @@\n import serp.util.Strings;\n \n /**\n- * <p>Serializes persistence metadata back to XML.\n+ * Serializes persistence metadata back to XML.\n  * This class processes all object level tags that are store-agnostic.\n  * However, it provides hooks for the subclasses to include store-specific\n  * tags to be serialized both at &lt;entity-mappings&gt; and\n- * &lt;entity&gt; level.</p>\n+ * &lt;entity&gt; level.\n  *\n  * @since 4.0\n  * @author Steve Kim\n@@ -85,7 +85,7 @@\n     private SerializationComparator _comp = null;\n \n     /**\n-     * Constructor.  Supply configuration.\n+     * Constructor. Supply configuration.\n      */\n     public XMLPersistenceMetaDataSerializer(OpenJPAConfiguration conf) {\n         _conf = conf;\n@@ -117,15 +117,15 @@ public void setSerializeAnnotations(boolean annos) {\n     }\n \n     /**\n-     * The serialization mode according to the expected document type.  The\n+     * The serialization mode according to the expected document type. The\n      * mode constants act as bit flags, and therefore can be combined.\n      */\n     public int getMode() {\n         return _mode;\n     }\n \n     /**\n-     * The serialization mode according to the expected document type.  The\n+     * The serialization mode according to the expected document type. The\n      * mode constants act as bit flags, and therefore can be combined.\n      */\n     public void setMode(int mode) {\n@@ -178,7 +178,7 @@ protected boolean isMappingMode() {\n     }\n \n     /**\n-     * Convenience method for interpreting {@link #getMode}.  Takes into\n+     * Convenience method for interpreting {@link #getMode}. Takes into\n      * account whether mapping information is loaded for the given instance.\n      */\n     protected boolean isMappingMode(ClassMetaData meta) {\n@@ -190,7 +190,7 @@ protected boolean isMappingMode(ClassMetaData meta) {\n     }\n \n     /**\n-     * Convenience method for interpreting {@link #getMode}.  Takes into\n+     * Convenience method for interpreting {@link #getMode}. Takes into\n      * account whether mapping information is loaded for the given instance.\n      */\n     protected boolean isMappingMode(ValueMetaData vmd) {\n@@ -375,7 +375,7 @@ protected Collection getObjects() {\n     }\n \n     /**\n-     * Add system-level mapping elements to be serialized.  Does nothing\n+     * Add system-level mapping elements to be serialized. Does nothing\n      * by default.\n      */\n     protected void addSystemMappingElements(Collection toSerialize) {\n@@ -809,7 +809,7 @@ else if (meta.getAccessType() == ClassMetaData.ACCESS_PROPERTY\n     }\n \n     /**\n-     * Add mapping attributes for the given class.  Does nothing by default\n+     * Add mapping attributes for the given class. Does nothing by default\n      */\n     protected void addClassMappingAttributes(ClassMetaData mapping)\n         throws SAXException {\n@@ -834,21 +834,21 @@ private void serializeIdClass(ClassMetaData meta)\n     }\n \n     /**\n-     * Serialize class mapping content.  Does nothing by default.\n+     * Serialize class mapping content. Does nothing by default.\n      */\n     protected void serializeClassMappingContent(ClassMetaData mapping)\n         throws SAXException {\n     }\n \n     /**\n-     * Serialize inheritance content.  Does nothing by default.\n+     * Serialize inheritance content. Does nothing by default.\n      */\n     protected void serializeInheritanceContent(ClassMetaData mapping)\n         throws SAXException {\n     }\n \n     /**\n-     * Serialize query mappings.  Does nothing by default.\n+     * Serialize query mappings. Does nothing by default.\n      */\n     protected void serializeQueryMappings(ClassMetaData meta)\n         throws SAXException {\n@@ -955,7 +955,7 @@ else if (fmd.isVersion())\n     }\n \n     /**\n-     * Add mapping attributes for the given field.  Does nothing by default.\n+     * Add mapping attributes for the given field. Does nothing by default.\n      */\n     protected void addFieldMappingAttributes(FieldMetaData fmd,\n         FieldMetaData orig)\n@@ -983,7 +983,7 @@ private void serializeAttributeOverrideContent(FieldMetaData fmd,\n     }\n \n     /**\n-     * Serialize attribute override mapping content.  Does nothing by default,\n+     * Serialize attribute override mapping content. Does nothing by default,\n      */\n     protected void serializeAttributeOverrideMappingContent\n         (FieldMetaData fmd, FieldMetaData orig)\n@@ -1126,15 +1126,15 @@ private void addManyToManyAttributes(FieldMetaData fmd)\n \n     /**\n      * Serialize field mapping content; this will be called before\n-     * {@link #serializeValueMappingContent}.  Does nothing by default.\n+     * {@link #serializeValueMappingContent}. Does nothing by default.\n      */\n     protected void serializeFieldMappingContent(FieldMetaData fmd,\n         PersistenceStrategy strategy)\n         throws SAXException {\n     }\n \n     /**\n-     * Set mapping attributes for strategy.  Sets mapped-by by default.\n+     * Set mapping attributes for strategy. Sets mapped-by by default.\n      */\n     protected void addStrategyMappingAttributes(FieldMetaData fmd)\n         throws SAXException {\n@@ -1229,8 +1229,7 @@ public ClassQueries(List<QueryMetaData> queries) {\n         }\n \n         /**\n-         * Compare query metadata.\n-         * Normal queries appear before native queries.\n+         * Compare query metadata. Normal queries appear before native queries.\n          * If the given queries use same language, then their names are\n          * compared.\n          */\n@@ -1274,8 +1273,8 @@ public int compareTo(ClassQueries other) {\n \n     /**\n      * Compares clases, sequences, and queries to order them for serialization.\n-     * Places sequences first, then classes, then queries.  Sequences and\n-     * queries are ordered alphabetically by name.  Classes are placed in\n+     * Places sequences first, then classes, then queries. Sequences and\n+     * queries are ordered alphabetically by name. Classes are placed in\n      * listing order, in inheritance order within that, and in alphabetical\n      * order within that.\n      *\n@@ -1315,7 +1314,7 @@ public int compare(Object o1, Object o2) {\n         }\n \n         /**\n-         * Compare two unrecognized elements of the same type.  Throws\n+         * Compare two unrecognized elements of the same type. Throws\n          * exception by default.\n          */\n         protected int compareUnknown(Object o1, Object o2) {\n@@ -1370,8 +1369,8 @@ private int compare(SequenceMetaData o1, SequenceMetaData o2) {\n     }\n \n     /**\n-     *\tSorts fields according to listing order, then XSD strategy order,\n-     *\tthen name order.\n+     * Sorts fields according to listing order, then XSD strategy order,\n+     * then name order.\n      */\n     private class FieldComparator\n         implements Comparator {"},{"sha":"4bc23281630514645b685e5086b52798a2b5b811","filename":"openjpa-xmlstore/src/main/java/org/apache/openjpa/xmlstore/ObjectData.java","status":"modified","additions":7,"deletions":12,"changes":19,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-xmlstore/src/main/java/org/apache/openjpa/xmlstore/ObjectData.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-xmlstore/src/main/java/org/apache/openjpa/xmlstore/ObjectData.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-xmlstore/src/main/java/org/apache/openjpa/xmlstore/ObjectData.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,17 +5,14 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-/*********************************************************************\n-\n- **********************************************************************/\n package org.apache.openjpa.xmlstore;\n \n import java.lang.reflect.Array;\n@@ -40,8 +37,7 @@\n import serp.util.Numbers;\n \n /**\n- * <p>In-memory form of data in datastore backing a single persistent\n- * object.</p>\n+ * In-memory form of data in datastore backing a single persistent object.\n  */\n public final class ObjectData\n     implements Cloneable {\n@@ -52,7 +48,7 @@\n     private ClassMetaData _meta;\n \n     /**\n-     * Create the object without underlying data.  Just pass in type specific\n+     * Create the object without underlying data. Just pass in type specific\n      * metadata and the oid.\n      */\n     public ObjectData(Object oid, ClassMetaData meta) {\n@@ -106,7 +102,7 @@ public ClassMetaData getMetaData() {\n \n     /**\n      * Load the data and version information for this object into the\n-     * given state manager.  Only fields in the given fetch configuration are\n+     * given state manager. Only fields in the given fetch configuration are\n      * loaded.\n      */\n     public void load(OpenJPAStateManager sm, FetchState fetchState) {\n@@ -124,8 +120,7 @@ public void load(OpenJPAStateManager sm, FetchState fetchState) {\n \n     /**\n      * Load the data and version information for this object into the\n-     * given state manager.  Only fields in the given bit set will be\n-     * loaded.\n+     * given state manager. Only fields in the given bit set will be loaded.\n      */\n     public void load(OpenJPAStateManager sm, BitSet fields,\n         FetchState fetchState) {\n@@ -211,7 +206,7 @@ private static Object toLoadable(OpenJPAStateManager sm,\n \n     /**\n      * Convert the given stored value <code>val</code> to a value for loading\n-     * into a state manager.  The value <code>val</code> must be a singular\n+     * into a state manager. The value <code>val</code> must be a singular\n      * value; it cannot be a container.\n      */\n     private static Object toNestedLoadable(OpenJPAStateManager sm,\n@@ -242,7 +237,7 @@ private static Object toNestedLoadable(OpenJPAStateManager sm,\n \n     /**\n      * Store the data and version information for this object from the\n-     * given state manager.  Only dirty fields will be stored.\n+     * given state manager. Only dirty fields will be stored.\n      */\n     public void store(OpenJPAStateManager sm) {\n         _version = (Long) sm.getVersion();"},{"sha":"f0c112283ad07cc4eb345644768c8b855a3a3247","filename":"openjpa-xmlstore/src/main/java/org/apache/openjpa/xmlstore/XMLConfiguration.java","status":"modified","additions":5,"deletions":8,"changes":13,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-xmlstore/src/main/java/org/apache/openjpa/xmlstore/XMLConfiguration.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-xmlstore/src/main/java/org/apache/openjpa/xmlstore/XMLConfiguration.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-xmlstore/src/main/java/org/apache/openjpa/xmlstore/XMLConfiguration.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,17 +5,14 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-/*********************************************************************\n-\n- **********************************************************************/\n package org.apache.openjpa.xmlstore;\n \n import org.apache.openjpa.conf.OpenJPAConfigurationImpl;\n@@ -24,12 +21,12 @@\n import org.apache.openjpa.kernel.BrokerFactory;\n \n /**\n- * <p>Configuration implementation for the XML file store.  Each unique\n+ * Configuration implementation for the XML file store. Each unique\n  * {@link BrokerFactory} has a distinct configuration instance.\n  * Thus this configuration is shared by all {@link Broker}s\n  * associated with the owning factory, and is a good place to provide access\n- * to shared resources.  Note that each broker has its own\n- * {@link org.apache.openjpa.abstractstore.AbstractStoreManager}.</p>\n+ * to shared resources. Note that each broker has its own\n+ * {@link org.apache.openjpa.abstractstore.AbstractStoreManager}.\n  */\n public class XMLConfiguration\n     extends OpenJPAConfigurationImpl {\n@@ -63,7 +60,7 @@ public synchronized XMLFileHandler getFileHandler() {\n     }\n \n     /**\n-     *\tReturn the {@link XMLStore} associated with this configuration.\n+     * Return the {@link XMLStore} associated with this configuration.\n      */\n     public synchronized XMLStore getStore() {\n         if (_store == null)"},{"sha":"39f7e3673c200148591232917c7d1da9790b0efe","filename":"openjpa-xmlstore/src/main/java/org/apache/openjpa/xmlstore/XMLFileHandler.java","status":"modified","additions":19,"deletions":22,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-xmlstore/src/main/java/org/apache/openjpa/xmlstore/XMLFileHandler.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-xmlstore/src/main/java/org/apache/openjpa/xmlstore/XMLFileHandler.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-xmlstore/src/main/java/org/apache/openjpa/xmlstore/XMLFileHandler.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,17 +5,14 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-/*********************************************************************\n-\n- **********************************************************************/\n package org.apache.openjpa.xmlstore;\n \n import java.io.ByteArrayInputStream;\n@@ -57,8 +54,8 @@\n import org.apache.openjpa.util.UnsupportedException;\n \n /**\n- * <p>Stores {@link ObjectData} objects by serializing a collection\n- * of them into and out of an XML file.</p>\n+ * Stores {@link ObjectData} objects by serializing a collection\n+ * of them into and out of an XML file.\n  */\n public class XMLFileHandler {\n \n@@ -121,8 +118,8 @@ private File getFile(ClassMetaData meta) {\n      * Stores all instances in <code>datas</code> into the appropriate file,\n      * as dictated by <code>meta</code>.\n      *\n-     * @param    meta    the least-derived type of the instances being stored\n-     * @param    datas    a collection of {@link ObjectData} instances, each\n+     * @param meta the least-derived type of the instances being stored\n+     * @param datas a collection of {@link ObjectData} instances, each\n      * of which represents an object of type <code>meta</code>\n      */\n     public void store(ClassMetaData meta, Collection datas) {\n@@ -238,7 +235,7 @@ private void write(Collection datas, FileWriter fw)\n     }\n \n     /**\n-     * Write out the data value.  This method writes nulls as \"null\",\n+     * Write out the data value. This method writes nulls as \"null\",\n      * serializes (using Java serialization and base16 encoding) out non-\n      * primitives/boxed primitives and non-persistent types, and writes\n      * primitives/boxed primitives and oids using their toString.\n@@ -354,7 +351,7 @@ public void startElement(String uri, String localName, String qName,\n         private void startElement(String qName, Attributes attrs)\n             throws Exception {\n             switch (qName.charAt(0)) {\n-                case 'o':    // object\n+                case 'o': // object\n                     // get the metadata for the type we're reading\n                     String type = attrs.getValue(\"class\");\n                     ClassMetaData meta = _conf.getMetaDataRepository().\n@@ -374,7 +371,7 @@ private void startElement(String qName, Attributes attrs)\n                     _object.setVersion(new Long(attrs.getValue(\"version\")));\n                     break;\n \n-                case 'f':    // field\n+                case 'f': // field\n                     // start parsing a field element: for container types,\n                     // initialize the container; for other types, initialize a\n                     // buffer\n@@ -393,9 +390,9 @@ private void startElement(String qName, Attributes attrs)\n                     }\n                     break;\n \n-                case 'e':    // element\n-                case 'k':    // key\n-                case 'v':    // value\n+                case 'e': // element\n+                case 'k': // key\n+                case 'v': // value\n                     // initialize a buffer for the element value\n                     _buf = new StringBuffer();\n                     break;\n@@ -422,11 +419,11 @@ private void endElement(String qName)\n             throws Exception {\n             Object val;\n             switch (qName.charAt(0)) {\n-                case 'o':     // object\n+                case 'o': // object\n                     // add the object to our results\n                     _extent.add(_object);\n \n-                case 'f':    // field\n+                case 'f': // field\n                     switch (_fmd.getTypeCode()) {\n                         case JavaTypes.COLLECTION:\n                         case JavaTypes.ARRAY:\n@@ -443,20 +440,20 @@ private void endElement(String qName)\n                     _object.setField(_fmd.getIndex(), _fieldVal);\n                     break;\n \n-                case 'e':    // element\n+                case 'e': // element\n                     // cache element value\n                     val = fromXMLString(_fmd.getElement().getTypeCode(),\n                         _fmd.getElement().getTypeMetaData(), _buf.toString());\n                     ((Collection) _fieldVal).add(val);\n                     break;\n \n-                case 'k':     // key\n+                case 'k': // key\n                     // cache key value\n                     _keyVal = fromXMLString(_fmd.getKey().getTypeCode(),\n                         _fmd.getKey().getTypeMetaData(), _buf.toString());\n                     break;\n \n-                case 'v':    // value\n+                case 'v': // value\n                     // create value and put cached key and value into map\n                     val = fromXMLString(_fmd.getElement().getTypeCode(),\n                         _fmd.getElement().getTypeMetaData(), _buf.toString());\n@@ -587,7 +584,7 @@ private Class classForName(String name)\n     }\n \n     /**\n-     *\tUtility methods for encoding and decoding XML strings.\n+     * Utility methods for encoding and decoding XML strings.\n      */\n     private static class XMLEncoder {\n \n@@ -652,8 +649,8 @@ public static String decode(String s) {\n         }\n \n         /**\n-         *\tCreate and initialize a buffer for the encoded/decoded string if\n-         *\tneeded.\n+         * Create and initialize a buffer for the encoded/decoded string if\n+         * needed.\n          */\n         private static StringBuffer initializeBuffer(StringBuffer buf,\n             String s, int i) {"},{"sha":"bde55bf648307f95fc0960c3c6e95e243d6717ae","filename":"openjpa-xmlstore/src/main/java/org/apache/openjpa/xmlstore/XMLStore.java","status":"modified","additions":9,"deletions":13,"changes":22,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-xmlstore/src/main/java/org/apache/openjpa/xmlstore/XMLStore.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-xmlstore/src/main/java/org/apache/openjpa/xmlstore/XMLStore.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-xmlstore/src/main/java/org/apache/openjpa/xmlstore/XMLStore.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,17 +5,14 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-/*********************************************************************\n-\n- **********************************************************************/\n package org.apache.openjpa.xmlstore;\n \n import java.util.Collection;\n@@ -28,9 +25,9 @@\n import org.apache.openjpa.meta.ClassMetaData;\n \n /**\n- * <p>Represents a store of object data encoded in XML.  This store only allows\n- * one datastore transaction to proceed at a time.  File I/O errors can put\n- * this store into an invalid state.</p>\n+ * Represents a store of object data encoded in XML. This store only allows\n+ * one datastore transaction to proceed at a time. File I/O errors can put\n+ * this store into an invalid state.\n  */\n public class XMLStore {\n \n@@ -69,8 +66,7 @@ public synchronized ObjectData getData(ClassMetaData meta, Object oid) {\n     }\n \n     /**\n-     * Returns the map of oids to object datas for the given\n-     * least-derived type.\n+     * Returns the map of oids to object datas for the given least-derived type.\n      */\n     private Map getMap(ClassMetaData meta) {\n         Map m = (Map) _metaOidMaps.get(meta);\n@@ -100,7 +96,7 @@ private static ClassMetaData getLeastDerived(ClassMetaData meta) {\n     }\n \n     /**\n-     * Begin a datastore transaction.  Obtains an exclusive write lock on the\n+     * Begin a datastore transaction. Obtains an exclusive write lock on the\n      * store.\n      */\n     public synchronized void beginTransaction() {\n@@ -114,10 +110,10 @@ public synchronized void beginTransaction() {\n     }\n \n     /**\n-     *\tEnd the datastore transaction.\n+     * End the datastore transaction.\n      *\n-     *\t@param    updates        {@link ObjectData} instances to insert or update\n-     *\t@param    deletes        {@link ObjectData} instances to delete\n+     * @param updates {@link ObjectData} instances to insert or update\n+     * @param deletes {@link ObjectData} instances to delete\n      */\n     public synchronized void endTransaction(Collection updates,\n         Collection deletes) {"},{"sha":"55ddf37d37078937f481a86d4d5024402e3a59c2","filename":"openjpa-xmlstore/src/main/java/org/apache/openjpa/xmlstore/XMLStoreManager.java","status":"modified","additions":5,"deletions":8,"changes":13,"blob_url":"https://github.com/apache/openjpa/blob/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-xmlstore/src/main/java/org/apache/openjpa/xmlstore/XMLStoreManager.java","raw_url":"https://github.com/apache/openjpa/raw/7cf69d8bccc218d9013f81574916e9ae06afbd68/openjpa-xmlstore/src/main/java/org/apache/openjpa/xmlstore/XMLStoreManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-xmlstore/src/main/java/org/apache/openjpa/xmlstore/XMLStoreManager.java?ref=7cf69d8bccc218d9013f81574916e9ae06afbd68","patch":"@@ -5,17 +5,14 @@\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n  *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n+ * http://www.apache.org/licenses/LICENSE-2.0\n  *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-/*********************************************************************\n-\n- **********************************************************************/\n package org.apache.openjpa.xmlstore;\n \n import java.util.ArrayList;\n@@ -39,12 +36,12 @@\n import serp.util.Numbers;\n \n /**\n- * <p>Store manager to a back-end consisting of XML files.  This\n+ * Store manager to a back-end consisting of XML files. This\n  * implementation accesses data through the {@link XMLStore} associated with\n- * its {@link XMLConfiguration}.  Configuration instances are shared by all\n- * store managers owned by all brokers created with the same factory.</p>\n+ * its {@link XMLConfiguration}. Configuration instances are shared by all\n+ * store managers owned by all brokers created with the same factory.\n  *\n- * @see    AbstractStoreManager\n+ * @see AbstractStoreManager\n  */\n public class XMLStoreManager\n     extends AbstractStoreManager {"}]}

