{"sha":"7d6c0afa45acb46d8120e1663e4c65b4900dd220","node_id":"MDY6Q29tbWl0MjA2MzY0OjdkNmMwYWZhNDVhY2I0NmQ4MTIwZTE2NjNlNGM2NWI0OTAwZGQyMjA=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-07-15T08:03:34Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-07-15T08:03:34Z"},"message":"Minor reformatting\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@556371 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"afa1ab2cf87c97b87c1379c20cd347fca22e4805","url":"https://api.github.com/repos/apache/openjpa/git/trees/afa1ab2cf87c97b87c1379c20cd347fca22e4805"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/7d6c0afa45acb46d8120e1663e4c65b4900dd220","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/7d6c0afa45acb46d8120e1663e4c65b4900dd220","html_url":"https://github.com/apache/openjpa/commit/7d6c0afa45acb46d8120e1663e4c65b4900dd220","comments_url":"https://api.github.com/repos/apache/openjpa/commits/7d6c0afa45acb46d8120e1663e4c65b4900dd220/comments","author":null,"committer":null,"parents":[{"sha":"96a7367ec5d9e68412eb6c7ddc9f9816c70217aa","url":"https://api.github.com/repos/apache/openjpa/commits/96a7367ec5d9e68412eb6c7ddc9f9816c70217aa","html_url":"https://github.com/apache/openjpa/commit/96a7367ec5d9e68412eb6c7ddc9f9816c70217aa"}],"stats":{"total":10,"additions":3,"deletions":7},"files":[{"sha":"b06305739ada76ef91e6e72525163b8209419063","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/ee/WASManagedRuntime.java","status":"modified","additions":3,"deletions":7,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/7d6c0afa45acb46d8120e1663e4c65b4900dd220/openjpa-kernel/src/main/java/org/apache/openjpa/ee/WASManagedRuntime.java","raw_url":"https://github.com/apache/openjpa/raw/7d6c0afa45acb46d8120e1663e4c65b4900dd220/openjpa-kernel/src/main/java/org/apache/openjpa/ee/WASManagedRuntime.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/ee/WASManagedRuntime.java?ref=7d6c0afa45acb46d8120e1663e4c65b4900dd220","patch":"@@ -21,7 +21,6 @@\n import java.io.IOException;\n import java.io.InputStream;\n import java.lang.reflect.Method;\n-import java.security.AccessController;\n \n import javax.naming.Context;\n import javax.naming.InitialContext;\n@@ -40,7 +39,6 @@\n import org.apache.openjpa.lib.conf.Configurable;\n import org.apache.openjpa.lib.conf.Configuration;\n import org.apache.openjpa.lib.log.Log;\n-import org.apache.openjpa.lib.util.J2DoPrivHelper;\n import org.apache.openjpa.lib.util.Localizer;\n import org.apache.openjpa.util.InvalidStateException;\n import org.apache.openjpa.util.NoTransactionException;\n@@ -65,7 +63,7 @@\n  */\n public class WASManagedRuntime implements ManagedRuntime, Configurable {\n \n-    private static Localizer _loc =\n+    private static final Localizer _loc =\n         Localizer.forPackage(WASManagedRuntime.class);\n \n     private Object _extendedTransaction = null;\n@@ -100,7 +98,7 @@\n         javax.transaction.Transaction {\n \n         public int getStatus() throws SystemException {\n-            int rval = Status.STATUS_UNKNOWN;\n+            int rval;\n             try {\n                 if (getGlobalId() != null) {\n                     rval = Status.STATUS_ACTIVE;\n@@ -152,14 +150,12 @@ public void registerSynchronization(Synchronization arg0)\n          *         occurs. byte[] id if a global transaction is active.\n          */\n         private byte[] getGlobalId() {\n-            byte[] rval = null;\n             try {\n-                rval = (byte[]) _getGlobalId.invoke(_extendedTransaction, null);\n+                return (byte[]) _getGlobalId.invoke(_extendedTransaction, null);\n             } catch (Exception e) {\n                 throw new InvalidStateException(_loc\n                     .get(\"was-reflection-exception\")).setCause(e);\n             }\n-            return rval;\n         }\n \n         /**"}]}

