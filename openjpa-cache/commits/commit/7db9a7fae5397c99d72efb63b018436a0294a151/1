{"sha":"7db9a7fae5397c99d72efb63b018436a0294a151","node_id":"MDY6Q29tbWl0MjA2MzY0OjdkYjlhN2ZhZTUzOTdjOTlkNzJlZmI2M2IwMTg0MzZhMDI5NGExNTE=","commit":{"author":{"name":"David J. Wisneski","email":"wisneskid@apache.org","date":"2007-06-29T21:22:01Z"},"committer":{"name":"David J. Wisneski","email":"wisneskid@apache.org","date":"2007-06-29T21:22:01Z"},"message":"OPENJPA-266, committing the patch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@552039 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2279dd81463d18b60a059efc2963334e785a5aad","url":"https://api.github.com/repos/apache/openjpa/git/trees/2279dd81463d18b60a059efc2963334e785a5aad"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/7db9a7fae5397c99d72efb63b018436a0294a151","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/7db9a7fae5397c99d72efb63b018436a0294a151","html_url":"https://github.com/apache/openjpa/commit/7db9a7fae5397c99d72efb63b018436a0294a151","comments_url":"https://api.github.com/repos/apache/openjpa/commits/7db9a7fae5397c99d72efb63b018436a0294a151/comments","author":null,"committer":null,"parents":[{"sha":"1b9d1e2d1258b3147929e5b27bedc23714a32964","url":"https://api.github.com/repos/apache/openjpa/commits/1b9d1e2d1258b3147929e5b27bedc23714a32964","html_url":"https://github.com/apache/openjpa/commit/1b9d1e2d1258b3147929e5b27bedc23714a32964"}],"stats":{"total":30,"additions":17,"deletions":13},"files":[{"sha":"1b561423069950dfbe21ab58e5b6ce66a1cd75a8","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/AbstractUpdateManager.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7db9a7fae5397c99d72efb63b018436a0294a151/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/AbstractUpdateManager.java","raw_url":"https://github.com/apache/openjpa/raw/7db9a7fae5397c99d72efb63b018436a0294a151/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/AbstractUpdateManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/AbstractUpdateManager.java?ref=7db9a7fae5397c99d72efb63b018436a0294a151","patch":"@@ -136,7 +136,7 @@ protected abstract Collection flush(RowManager rowMgr,\n      * @param customs buffer custom mappings\n      * @return the exceptions list\n      */\n-    private Collection populateRowManager(OpenJPAStateManager sm,\n+    protected Collection populateRowManager(OpenJPAStateManager sm,\n         RowManager rowMgr, JDBCStore store, Collection exceps,\n         Collection customs) {\n         try {\n@@ -336,7 +336,7 @@ private boolean bufferCustomUpdate(Strategy strat, OpenJPAStateManager sm,\n     /**\n      * Executes customized mapping updates.\n      */\n-    private static class CustomMapping {\n+    protected static class CustomMapping {\n \n         public static final int INSERT = 0;\n         public static final int UPDATE = 1;"},{"sha":"436237de6e7670710e330f94ba6cdfac627c0ef2","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/PreparedStatementManagerImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/7db9a7fae5397c99d72efb63b018436a0294a151/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/PreparedStatementManagerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/7db9a7fae5397c99d72efb63b018436a0294a151/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/PreparedStatementManagerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/PreparedStatementManagerImpl.java?ref=7db9a7fae5397c99d72efb63b018436a0294a151","patch":"@@ -79,7 +79,7 @@ public void flush(RowImpl row) {\n     /**\n      * Flush the given row.\n      */\n-    private void flushInternal(RowImpl row) throws SQLException {\n+    protected void flushInternal(RowImpl row) throws SQLException {\n         // can't batch rows with auto-inc columns\n         Column[] autoAssign = null;\n         if (row.getAction() == Row.ACTION_INSERT)"},{"sha":"32a758e752c333a8a8c65b552bd6744530d247fe","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/OracleDictionary.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/7db9a7fae5397c99d72efb63b018436a0294a151/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/OracleDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/7db9a7fae5397c99d72efb63b018436a0294a151/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/OracleDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/OracleDictionary.java?ref=7db9a7fae5397c99d72efb63b018436a0294a151","patch":"@@ -912,7 +912,7 @@ protected String getGeneratedKeyTriggerName(Column col) {\n     /**\n      * Returns a OpenJPA 3-compatible name for an auto-assign sequence.\n      */\n-    private String getOpenJPA3GeneratedKeySequenceName(Column col) {\n+    protected String getOpenJPA3GeneratedKeySequenceName(Column col) {\n         Table table = col.getTable();\n         return makeNameValid(\"SEQ_\" + table.getName(), table.getSchema().\n             getSchemaGroup(), maxTableNameLength, NAME_ANY);\n@@ -921,7 +921,7 @@ private String getOpenJPA3GeneratedKeySequenceName(Column col) {\n     /**\n      * Returns a OpenJPA 3-compatible name for an auto-assign trigger.\n      */\n-    private String getOpenJPA3GeneratedKeyTriggerName(Column col) {\n+    protected String getOpenJPA3GeneratedKeyTriggerName(Column col) {\n         Table table = col.getTable();\n         return makeNameValid(\"TRIG_\" + table.getName(), table.getSchema().\n             getSchemaGroup(), maxTableNameLength, NAME_ANY);"},{"sha":"9fcc9e0f2e04404f98434b5030e63a27b9243126","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java","status":"modified","additions":12,"deletions":8,"changes":20,"blob_url":"https://github.com/apache/openjpa/blob/7db9a7fae5397c99d72efb63b018436a0294a151/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java","raw_url":"https://github.com/apache/openjpa/raw/7db9a7fae5397c99d72efb63b018436a0294a151/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java?ref=7db9a7fae5397c99d72efb63b018436a0294a151","patch":"@@ -122,7 +122,7 @@\n     private SortedMap _tables = null;\n \n     // combined list of selected ids and map of each id to its alias\n-    private final Selects _selects = new Selects();\n+    protected final Selects _selects = newSelects();\n     private List _ordered = null;\n \n     // flags\n@@ -158,7 +158,7 @@\n \n     // from select if this select selects from a tmp table created by another\n     private SelectImpl _from = null;\n-    private SelectImpl _outer = null;\n+    protected SelectImpl _outer = null;\n     \n     // bitSet indicating if an alias is removed from parent select\n     // bit 0 : correspond to alias 0\n@@ -2670,20 +2670,24 @@ public String toString() {\n             return super.toString() + \" (\" + _outer + \"): \" + _joins;\n         }\n     }\n+    \n+    protected Selects newSelects() {\n+        return new Selects();\n+    }\n \n     /**\n      * Helper class to track selected columns, with fast contains method.\n      * Acts as a list of select ids, with additional methods to manipulate\n      * the alias of each selected id.\n      */\n-    private static class Selects\n+    protected static class Selects\n         extends AbstractList {\n \n-        private List _ids = null;\n-        private List _idents = null;\n-        private Map _aliases = null;\n-        private Map _selectAs = null;\n-        private DBDictionary _dict = null;\n+        protected List _ids = null;\n+        protected List _idents = null;\n+        protected Map _aliases = null;\n+        protected Map _selectAs = null;\n+        protected DBDictionary _dict = null;\n \n         /**\n          * Add all aliases from another instance."}]}

