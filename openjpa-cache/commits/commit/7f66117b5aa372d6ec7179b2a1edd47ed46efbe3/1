{"sha":"7f66117b5aa372d6ec7179b2a1edd47ed46efbe3","node_id":"MDY6Q29tbWl0MjA2MzY0OjdmNjYxMTdiNWFhMzcyZDZlYzcxNzliMmExZWRkNDdlZDQ2ZWZiZTM=","commit":{"author":{"name":"Fay Wang","email":"faywang@apache.org","date":"2010-01-17T22:47:47Z"},"committer":{"name":"Fay Wang","email":"faywang@apache.org","date":"2010-01-17T22:47:47Z"},"message":"OPENJPA-782: element collection field in orm.xml should not be serialized\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@900236 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"b5f570c0a8e6728f958d0c541126ac6aa8c1ecc4","url":"https://api.github.com/repos/apache/openjpa/git/trees/b5f570c0a8e6728f958d0c541126ac6aa8c1ecc4"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/7f66117b5aa372d6ec7179b2a1edd47ed46efbe3","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/7f66117b5aa372d6ec7179b2a1edd47ed46efbe3","html_url":"https://github.com/apache/openjpa/commit/7f66117b5aa372d6ec7179b2a1edd47ed46efbe3","comments_url":"https://api.github.com/repos/apache/openjpa/commits/7f66117b5aa372d6ec7179b2a1edd47ed46efbe3/comments","author":null,"committer":null,"parents":[{"sha":"d31639d7b96d0d2c7a83172d996eb52757406b97","url":"https://api.github.com/repos/apache/openjpa/commits/d31639d7b96d0d2c7a83172d996eb52757406b97","html_url":"https://github.com/apache/openjpa/commit/d31639d7b96d0d2c7a83172d996eb52757406b97"}],"stats":{"total":11,"additions":10,"deletions":1},"files":[{"sha":"fec48153e2d7ba12acd56b703f7c29cf99beb825","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddableXml.java","status":"modified","additions":9,"deletions":1,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/7f66117b5aa372d6ec7179b2a1edd47ed46efbe3/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddableXml.java","raw_url":"https://github.com/apache/openjpa/raw/7f66117b5aa372d6ec7179b2a1edd47ed46efbe3/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddableXml.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddableXml.java?ref=7f66117b5aa372d6ec7179b2a1edd47ed46efbe3","patch":"@@ -39,7 +39,7 @@\n public class TestEmbeddableXml extends SingleEMFTestCase {\n    \n     public int numEmbeddables = 1;\n-    public int numBasicTypes = 1;\n+    public int numBasicTypes = 10;\n     public int ID = 1;\n     public int deptId = 1;\n     public int empId = 1;\n@@ -156,6 +156,14 @@ public void findEntityA_Coll_StringXml() {\n         EntityManager em = emf.createEntityManager();\n         EntityA_Coll_StringXml a = em.find(EntityA_Coll_StringXml.class, ID);\n         checkEntityA_Coll_StringXml(a);\n+        \n+        Query q = em.createNativeQuery(\"select count(*) from EntityA_Coll_StringXml_nickNames\");\n+        Object obj = q.getSingleResult();\n+        // ensure that multiple rows are inserted into the table (the column is not serialized)\n+        assertEquals(numBasicTypes, obj);          \n+        \n+        \n+        \n         em.close();\n     }\n "},{"sha":"b611a10366467c5fb23230a153ae83ec320a27d3","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/7f66117b5aa372d6ec7179b2a1edd47ed46efbe3/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","raw_url":"https://github.com/apache/openjpa/raw/7f66117b5aa372d6ec7179b2a1edd47ed46efbe3/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java?ref=7f66117b5aa372d6ec7179b2a1edd47ed46efbe3","patch":"@@ -1569,6 +1569,7 @@ protected void parseElementCollection(FieldMetaData fmd, Attributes attrs)\n         if (val != null)\n             fmd.setInDefaultFetchGroup(\"EAGER\".equals(val));\n         fmd.setElementCollection(true);\n+        fmd.setSerialized(false);\n         if (JavaTypes.maybePC(fmd.getElement()) && !fmd.getElement().getDeclaredType().isEnum()) {\n             fmd.getElement().setEmbedded(true);\n             if (fmd.getElement().getEmbeddedMetaData() == null)"}]}

