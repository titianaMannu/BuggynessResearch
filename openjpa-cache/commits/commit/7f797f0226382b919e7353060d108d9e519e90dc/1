{"sha":"7f797f0226382b919e7353060d108d9e519e90dc","node_id":"MDY6Q29tbWl0MjA2MzY0OjdmNzk3ZjAyMjYzODJiOTE5ZTczNTMwNjBkMTA4ZDllNTE5ZTkwZGM=","commit":{"author":{"name":"Kevin W. Sutter","email":"kwsutter@apache.org","date":"2008-01-17T15:35:45Z"},"committer":{"name":"Kevin W. Sutter","email":"kwsutter@apache.org","date":"2008-01-17T15:35:45Z"},"message":"OPENJPA-437.  Changed AbstractBrokerFactory.loadPersistentTypes to be synchronized to get around the multi-threading issue during broker creation.\n\nAlso, migrated the change for OPENJPA-449 from trunk to the 1.0.x branch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@612846 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"ead86744806d3bd7f7e0b5fddaff0637e7f8832b","url":"https://api.github.com/repos/apache/openjpa/git/trees/ead86744806d3bd7f7e0b5fddaff0637e7f8832b"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/7f797f0226382b919e7353060d108d9e519e90dc","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/7f797f0226382b919e7353060d108d9e519e90dc","html_url":"https://github.com/apache/openjpa/commit/7f797f0226382b919e7353060d108d9e519e90dc","comments_url":"https://api.github.com/repos/apache/openjpa/commits/7f797f0226382b919e7353060d108d9e519e90dc/comments","author":null,"committer":null,"parents":[{"sha":"240d356314bb8662101ac87c1e2e97ebf829c4b2","url":"https://api.github.com/repos/apache/openjpa/commits/240d356314bb8662101ac87c1e2e97ebf829c4b2","html_url":"https://github.com/apache/openjpa/commit/240d356314bb8662101ac87c1e2e97ebf829c4b2"}],"stats":{"total":9,"additions":7,"deletions":2},"files":[{"sha":"04a6f65ccea6e3b98bf6b868a4a388d8427ce86a","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractBrokerFactory.java","status":"modified","additions":7,"deletions":2,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/7f797f0226382b919e7353060d108d9e519e90dc/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractBrokerFactory.java","raw_url":"https://github.com/apache/openjpa/raw/7f797f0226382b919e7353060d108d9e519e90dc/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractBrokerFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractBrokerFactory.java?ref=7f797f0226382b919e7353060d108d9e519e90dc","patch":"@@ -256,8 +256,13 @@ protected void addListeners(BrokerImpl broker) {\n     /**\n      * Load the configured persistent classes list. Performed automatically\n      * whenever a broker is created.\n+     * \n+     * This method is synchronized due to the possible creation of new brokers\n+     * (entity managers) by multiple threads (clients).  The two data structures\n+     * used by this method (_pcClassNames and _pcClassLoaders) are not thread\n+     * safe and this was an easy, efficient solution (OPENJPA-437).\n      */\n-    private void loadPersistentTypes(ClassLoader envLoader) {\n+    private synchronized void loadPersistentTypes(ClassLoader envLoader) {\n         // no listed persistent types?\n         if (_pcClassNames != null && _pcClassNames.isEmpty())\n             return;\n@@ -270,7 +275,7 @@ private void loadPersistentTypes(ClassLoader envLoader) {\n             Collection clss = _conf.getMetaDataRepositoryInstance().\n                 loadPersistentTypes(false, loader);\n             if (clss.isEmpty())\n-                _pcClassNames = Collections.EMPTY_SET;\n+                _pcClassNames = Collections.EMPTY_LIST;\n             else {\n                 _pcClassNames = new ArrayList(clss.size());\n                 for (Iterator itr = clss.iterator(); itr.hasNext();) {"}]}

