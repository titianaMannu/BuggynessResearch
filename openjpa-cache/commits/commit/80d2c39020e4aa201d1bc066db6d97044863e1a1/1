{"sha":"80d2c39020e4aa201d1bc066db6d97044863e1a1","node_id":"MDY6Q29tbWl0MjA2MzY0OjgwZDJjMzkwMjBlNGFhMjAxZDFiYzA2NmRiNmQ5NzA0NDg2M2UxYTE=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2007-10-29T15:48:31Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2007-10-29T15:48:31Z"},"message":"OPENJPA-423\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@589696 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"9e7e8c6091fe8f0a6234e3004240c2903ddafebd","url":"https://api.github.com/repos/apache/openjpa/git/trees/9e7e8c6091fe8f0a6234e3004240c2903ddafebd"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/80d2c39020e4aa201d1bc066db6d97044863e1a1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/80d2c39020e4aa201d1bc066db6d97044863e1a1","html_url":"https://github.com/apache/openjpa/commit/80d2c39020e4aa201d1bc066db6d97044863e1a1","comments_url":"https://api.github.com/repos/apache/openjpa/commits/80d2c39020e4aa201d1bc066db6d97044863e1a1/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"1f92ab584254fc29e93f3246e1f798ea4d74afb9","url":"https://api.github.com/repos/apache/openjpa/commits/1f92ab584254fc29e93f3246e1f798ea4d74afb9","html_url":"https://github.com/apache/openjpa/commit/1f92ab584254fc29e93f3246e1f798ea4d74afb9"}],"stats":{"total":40,"additions":34,"deletions":6},"files":[{"sha":"b5602fe1789a172cc9f636c0b00bc16f0adc4d02","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/TableJDBCSeq.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/80d2c39020e4aa201d1bc066db6d97044863e1a1/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/TableJDBCSeq.java","raw_url":"https://github.com/apache/openjpa/raw/80d2c39020e4aa201d1bc066db6d97044863e1a1/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/TableJDBCSeq.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/TableJDBCSeq.java?ref=80d2c39020e4aa201d1bc066db6d97044863e1a1","patch":"@@ -461,8 +461,9 @@ protected long getSequence(ClassMapping mapping, Connection conn)\n         String tableName = resolveTableName(mapping, _seqColumn.getTable());\n         SQLBuffer tables = new SQLBuffer(dict).append(tableName);\n \n-        SQLBuffer select = dict.toSelect(sel, null, tables, where, null,\n-            null, null, false, dict.supportsSelectForUpdate, 0, Long.MAX_VALUE);\n+        SQLBuffer select = dict.toSelect(sel, null, tables, where, null, null,\n+                null, false, dict.supportsSelectForUpdate, 0, Long.MAX_VALUE,\n+                false, true);\n \n         PreparedStatement stmnt = select.prepareStatement(conn);\n         ResultSet rs = null;"},{"sha":"e6b4a6cfdaf94364948b8a1e8fd84901cc889473","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","status":"modified","additions":30,"deletions":3,"changes":33,"blob_url":"https://github.com/apache/openjpa/blob/80d2c39020e4aa201d1bc066db6d97044863e1a1/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/80d2c39020e4aa201d1bc066db6d97044863e1a1/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java?ref=80d2c39020e4aa201d1bc066db6d97044863e1a1","patch":"@@ -2192,7 +2192,7 @@ public SQLBuffer toSelect(SQLBuffer selects, JDBCFetchConfiguration fetch,\n     /**\n      * Combine the given components into a SELECT statement.\n      */\n-    private SQLBuffer toSelect(SQLBuffer selects, JDBCFetchConfiguration fetch,\n+    public SQLBuffer toSelect(SQLBuffer selects, JDBCFetchConfiguration fetch,\n         SQLBuffer from, SQLBuffer where, SQLBuffer group,\n         SQLBuffer having, SQLBuffer order,\n         boolean distinct, boolean forUpdate, long start, long end,\n@@ -2201,6 +2201,16 @@ private SQLBuffer toSelect(SQLBuffer selects, JDBCFetchConfiguration fetch,\n             group, having, order, distinct, start, end,\n             getForUpdateClause(fetch, forUpdate, null), subselect);\n     }\n+    \n+    public SQLBuffer toSelect(SQLBuffer selects, JDBCFetchConfiguration fetch,\n+            SQLBuffer from, SQLBuffer where, SQLBuffer group,\n+            SQLBuffer having, SQLBuffer order,\n+            boolean distinct, boolean forUpdate, long start, long end,\n+            boolean subselect, boolean checkTableForUpdate) {\n+            return toOperation(getSelectOperation(fetch), selects, from, where,\n+                group, having, order, distinct, start, end,\n+                getForUpdateClause(fetch, forUpdate, null), subselect, checkTableForUpdate);\n+        }\n \n     /**\n      * Combine the given components into a SELECT statement.\n@@ -2242,21 +2252,32 @@ public String getSelectOperation(JDBCFetchConfiguration fetch) {\n     /**\n      * Return the SQL for the given selecting operation.\n      */\n-    protected SQLBuffer toOperation(String op, SQLBuffer selects,\n+    public SQLBuffer toOperation(String op, SQLBuffer selects,\n         SQLBuffer from, SQLBuffer where, SQLBuffer group, SQLBuffer having,\n         SQLBuffer order, boolean distinct, long start, long end,\n         String forUpdateClause) {\n         return toOperation(op, selects, from, where, group, having, order,\n             distinct, start, end, forUpdateClause, false);\n     }\n+    \n+    /**\n+     * Return the SQL for the given selecting operation.\n+     */\n+    public SQLBuffer toOperation(String op, SQLBuffer selects,\n+        SQLBuffer from, SQLBuffer where, SQLBuffer group, SQLBuffer having,\n+        SQLBuffer order, boolean distinct, long start, long end,\n+        String forUpdateClause, boolean subselect) {\n+        return toOperation(op, selects, from, where, group, having, order,\n+                distinct, start, end, forUpdateClause, subselect, false);\n+    }\n \n     /**\n      * Return the SQL for the given selecting operation.\n      */\n     private SQLBuffer toOperation(String op, SQLBuffer selects,\n         SQLBuffer from, SQLBuffer where, SQLBuffer group, SQLBuffer having,\n         SQLBuffer order, boolean distinct, long start, long end,\n-        String forUpdateClause, boolean subselect) {\n+        String forUpdateClause, boolean subselect, boolean checkTableForUpdate) {\n         SQLBuffer buf = new SQLBuffer(this);\n         buf.append(op);\n \n@@ -2270,6 +2291,12 @@ private SQLBuffer toOperation(String op, SQLBuffer selects,\n \n         buf.append(\" \").append(selects).append(\" FROM \").append(from);\n \n+        if (checkTableForUpdate\n+                && (StringUtils.isEmpty(forUpdateClause) && !StringUtils\n+                        .isEmpty(tableForUpdateClause))) {\n+            buf.append(\" \").append(tableForUpdateClause);\n+        }\n+\n         if (where != null && !where.isEmpty())\n             buf.append(\" WHERE \").append(where);\n         if (group != null && !group.isEmpty())"},{"sha":"9a241a51844a48f6410945702c596be0e34a3fd8","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/HSQLDictionary.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/80d2c39020e4aa201d1bc066db6d97044863e1a1/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/HSQLDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/80d2c39020e4aa201d1bc066db6d97044863e1a1/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/HSQLDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/HSQLDictionary.java?ref=80d2c39020e4aa201d1bc066db6d97044863e1a1","patch":"@@ -193,7 +193,7 @@ protected String getSequencesSQL(String schemaName, String sequenceName) {\n         return buf.toString();\n     }\n \n-    protected SQLBuffer toOperation(String op, SQLBuffer selects,\n+    public SQLBuffer toOperation(String op, SQLBuffer selects,\n         SQLBuffer from, SQLBuffer where, SQLBuffer group, SQLBuffer having,\n         SQLBuffer order, boolean distinct, long start, long end,\n         String forUpdateClause) {"}]}

