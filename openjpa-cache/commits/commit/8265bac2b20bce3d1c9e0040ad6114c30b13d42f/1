{"sha":"8265bac2b20bce3d1c9e0040ad6114c30b13d42f","node_id":"MDY6Q29tbWl0MjA2MzY0OjgyNjViYWMyYjIwYmNlM2QxYzllMDA0MGFkNjExNGMzMGIxM2Q0MmY=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-08-31T21:46:59Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-08-31T21:46:59Z"},"message":"Minor logging correction; flow control correction. 'svn merge -c 571599 ../../trunk'\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/1.0.x@571608 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"f2794af917254763ee5eb8ac27b48a473619cd35","url":"https://api.github.com/repos/apache/openjpa/git/trees/f2794af917254763ee5eb8ac27b48a473619cd35"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/8265bac2b20bce3d1c9e0040ad6114c30b13d42f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/8265bac2b20bce3d1c9e0040ad6114c30b13d42f","html_url":"https://github.com/apache/openjpa/commit/8265bac2b20bce3d1c9e0040ad6114c30b13d42f","comments_url":"https://api.github.com/repos/apache/openjpa/commits/8265bac2b20bce3d1c9e0040ad6114c30b13d42f/comments","author":null,"committer":null,"parents":[{"sha":"f1c4c68d90c5425ea1e31f9446d99e22ef79122f","url":"https://api.github.com/repos/apache/openjpa/commits/f1c4c68d90c5425ea1e31f9446d99e22ef79122f","html_url":"https://github.com/apache/openjpa/commit/f1c4c68d90c5425ea1e31f9446d99e22ef79122f"}],"stats":{"total":25,"additions":14,"deletions":11},"files":[{"sha":"fa76f87bea5bec925be8ae667cfe484d765fb8f1","filename":"openjpa-kernel-5/src/main/java/org/apache/openjpa/enhance/ClassRedefiner.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/8265bac2b20bce3d1c9e0040ad6114c30b13d42f/openjpa-kernel-5/src/main/java/org/apache/openjpa/enhance/ClassRedefiner.java","raw_url":"https://github.com/apache/openjpa/raw/8265bac2b20bce3d1c9e0040ad6114c30b13d42f/openjpa-kernel-5/src/main/java/org/apache/openjpa/enhance/ClassRedefiner.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel-5/src/main/java/org/apache/openjpa/enhance/ClassRedefiner.java?ref=8265bac2b20bce3d1c9e0040ad6114c30b13d42f","patch":"@@ -55,14 +55,15 @@\n     /**\r\n      * For each element in <code>classes</code>, this method will redefine\r\n      * all the element's methods such that field accesses are intercepted\r\n-     * in-line.\r\n+     * in-line. If {@link #canRedefineClasses()} returns <code>false</code>,\r\n+     * this method is a no-op.\r\n      */\r\n     public static void redefineClasses(OpenJPAConfiguration conf,\r\n         final Map<Class,byte[]> classes) {\r\n-        Log log = conf.getLog(OpenJPAConfiguration.LOG_ENHANCE);\r\n-        if (classes == null || classes.size() == 0)\r\n+        if (classes == null || classes.size() == 0 || !canRedefineClasses())\r\n             return;\r\n \r\n+        Log log = conf.getLog(OpenJPAConfiguration.LOG_ENHANCE);\r\n         Instrumentation inst = null;\r\n         ClassFileTransformer t = null;\r\n         try {\r"},{"sha":"d0365e201ff16c07458ef23a353c3a4d011ab39a","filename":"openjpa-kernel-5/src/main/java/org/apache/openjpa/enhance/ManagedClassSubclasser.java","status":"modified","additions":10,"deletions":8,"changes":18,"blob_url":"https://github.com/apache/openjpa/blob/8265bac2b20bce3d1c9e0040ad6114c30b13d42f/openjpa-kernel-5/src/main/java/org/apache/openjpa/enhance/ManagedClassSubclasser.java","raw_url":"https://github.com/apache/openjpa/raw/8265bac2b20bce3d1c9e0040ad6114c30b13d42f/openjpa-kernel-5/src/main/java/org/apache/openjpa/enhance/ManagedClassSubclasser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel-5/src/main/java/org/apache/openjpa/enhance/ManagedClassSubclasser.java?ref=8265bac2b20bce3d1c9e0040ad6114c30b13d42f","patch":"@@ -104,10 +104,10 @@\n \r\n         boolean redefine = ClassRedefiner.canRedefineClasses();\r\n         if (redefine)\r\n-            log.info(_loc.get(\"enhance-and-subclass-no-redef-start\",\r\n+            log.info(_loc.get(\"enhance-and-subclass-and-redef-start\",\r\n                 classes));\r\n         else\r\n-            log.info(_loc.get(\"enhance-and-subclass-and-redef-start\",\r\n+            log.info(_loc.get(\"enhance-and-subclass-no-redef-start\",\r\n                 classes));\r\n \r\n         final Map<Class, byte[]> map = new HashMap<Class, byte[]>();\r\n@@ -139,12 +139,14 @@ public void write(BCClass bc) throws IOException {\n             unspecified = collectRelatedUnspecifiedTypes(enhancer.getMetaData(),\r\n                 classes, unspecified);\r\n \r\n-            enhancer.run();\r\n-            try {\r\n-                enhancer.record();\r\n-            } catch (IOException e) {\r\n-                // our impl of BytecodeWriter doesn't throw IOException\r\n-                throw new InternalException(e);\r\n+            int runResult = enhancer.run();\r\n+            if (runResult == PCEnhancer.ENHANCE_PC) {\r\n+                try {\r\n+                    enhancer.record();\r\n+                } catch (IOException e) {\r\n+                    // our impl of BytecodeWriter doesn't throw IOException\r\n+                    throw new InternalException(e);\r\n+                }\r\n             }\r\n         }\r\n \r"}]}

