{"sha":"82a62a6b7800f0c218102c62232667390ef1d071","node_id":"MDY6Q29tbWl0MjA2MzY0OjgyYTYyYTZiNzgwMGYwYzIxODEwMmM2MjIzMjY2NzM5MGVmMWQwNzE=","commit":{"author":{"name":"Srinivasa Segu","email":"ssegu@apache.org","date":"2007-02-21T04:06:45Z"},"committer":{"name":"Srinivasa Segu","email":"ssegu@apache.org","date":"2007-02-21T04:06:45Z"},"message":"OPENJPA-157. Fix to use the getIndependentTypeMappings to handle the case of field's declared type being abstract/unmapped\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@509885 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"4287ac47455463284d894c5f476c4c8b62733062","url":"https://api.github.com/repos/apache/openjpa/git/trees/4287ac47455463284d894c5f476c4c8b62733062"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/82a62a6b7800f0c218102c62232667390ef1d071","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/82a62a6b7800f0c218102c62232667390ef1d071","html_url":"https://github.com/apache/openjpa/commit/82a62a6b7800f0c218102c62232667390ef1d071","comments_url":"https://api.github.com/repos/apache/openjpa/commits/82a62a6b7800f0c218102c62232667390ef1d071/comments","author":null,"committer":null,"parents":[{"sha":"0b8bf2818c3b5fbb1699a3f222eb30de87844638","url":"https://api.github.com/repos/apache/openjpa/commits/0b8bf2818c3b5fbb1699a3f222eb30de87844638","html_url":"https://github.com/apache/openjpa/commit/0b8bf2818c3b5fbb1699a3f222eb30de87844638"}],"stats":{"total":12,"additions":11,"deletions":1},"files":[{"sha":"2aa3c4de79f52bf9afcdd3d627ca890e4185652a","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationStrategies.java","status":"modified","additions":9,"deletions":1,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/82a62a6b7800f0c218102c62232667390ef1d071/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationStrategies.java","raw_url":"https://github.com/apache/openjpa/raw/82a62a6b7800f0c218102c62232667390ef1d071/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationStrategies.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationStrategies.java?ref=82a62a6b7800f0c218102c62232667390ef1d071","patch":"@@ -31,6 +31,7 @@\n import org.apache.openjpa.lib.util.Localizer;\n import org.apache.openjpa.meta.JavaTypes;\n import org.apache.openjpa.util.MetaDataException;\n+import org.apache.openjpa.util.UserException;\n \n /**\n  * Helper methods for relation mappings.\n@@ -74,12 +75,19 @@ public static MetaDataException uninversable(ValueMapping vm) {\n     public static Object toDataStoreValue(ValueMapping vm, Object val,\n         JDBCStore store) {\n         ClassMapping rel;\n-        if (val == null || val.getClass() == vm.getType()) \n+        if (val == null) {\n+            ClassMapping[] clss = vm.getIndependentTypeMappings();\n+            rel = (clss.length > 0) ? clss[0] : vm.getTypeMapping();\n+        } else if (val.getClass() == vm.getType())\n             rel = vm.getTypeMapping(); // common case\n         else\n             rel = vm.getMappingRepository().getMapping(val.getClass(),\n                 store.getContext().getClassLoader(), true);\n \n+        if (!rel.isMapped())\n+            throw new UserException(_loc.get(\"unmapped-datastore-value\", \n+                rel.getDescribedType()));\n+\n         Column[] cols;\n         if (vm.getJoinDirection() == ValueMapping.JOIN_INVERSE)\n             cols = rel.getPrimaryKeyColumns();"},{"sha":"a1be227ff235ed99c2dfdd4250b89fe6f0ad3dc5","filename":"openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/strats/localizer.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/82a62a6b7800f0c218102c62232667390ef1d071/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/strats/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/82a62a6b7800f0c218102c62232667390ef1d071/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/strats/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/strats/localizer.properties?ref=82a62a6b7800f0c218102c62232667390ef1d071","patch":"@@ -131,3 +131,5 @@ unknown-discrim-value: Could not map disciminator value \"{0}\" to any \\\n bad-unmapped-rel: \"{0}\" cannot be mapped without stringifying the oid of \\\n \tthe related object to a string column.  The related type is unmapped and \\\n \tits \"{1}\" primary key field does not use a simple mapping.\n+unmapped-datastore-value: Instances of type \"{0}\" are not valid query \\\n+\tparameters because the type is not mapped.\n\\ No newline at end of file"}]}

