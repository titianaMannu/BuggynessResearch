{"sha":"832d913520d909b587cd52ae16e63773965a17ad","node_id":"MDY6Q29tbWl0MjA2MzY0OjgzMmQ5MTM1MjBkOTA5YjU4N2NkNTJhZTE2ZTYzNzczOTY1YTE3YWQ=","commit":{"author":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-09-12T21:39:01Z"},"committer":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-09-12T21:39:01Z"},"message":"Delete child object(s) before parent when cascading delete.  Also fix case where\nan interface field uses targetEntity to declare itself as a concrete entity \nrelation, and add test case for fix.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@442718 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"075cc417940baa272b7bbd601375d3b489cb9ab7","url":"https://api.github.com/repos/apache/openjpa/git/trees/075cc417940baa272b7bbd601375d3b489cb9ab7"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/832d913520d909b587cd52ae16e63773965a17ad","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/832d913520d909b587cd52ae16e63773965a17ad","html_url":"https://github.com/apache/openjpa/commit/832d913520d909b587cd52ae16e63773965a17ad","comments_url":"https://api.github.com/repos/apache/openjpa/commits/832d913520d909b587cd52ae16e63773965a17ad/comments","author":null,"committer":null,"parents":[{"sha":"6ac482c68fb8f57ce68202f73f623142b1c86cc5","url":"https://api.github.com/repos/apache/openjpa/commits/6ac482c68fb8f57ce68202f73f623142b1c86cc5","html_url":"https://github.com/apache/openjpa/commit/6ac482c68fb8f57ce68202f73f623142b1c86cc5"}],"stats":{"total":258,"additions":254,"deletions":4},"files":[{"sha":"7500d2f68b19d509d49c13ed703eee65c0454db7","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/832d913520d909b587cd52ae16e63773965a17ad/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/832d913520d909b587cd52ae16e63773965a17ad/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java?ref=832d913520d909b587cd52ae16e63773965a17ad","patch":"@@ -2404,9 +2404,9 @@ void delete(Object obj, StateManagerImpl sm, OpCallbacks call) {\n         if (sm != null) {\n             if (sm.isDetached())\n                 throw newDetachedException(obj, \"delete\");\n-            sm.delete();\n             if ((action & OpCallbacks.ACT_CASCADE) != 0)\n                 sm.cascadeDelete(call);\n+            sm.delete();\n         } else if (assertPersistenceCapable(obj).pcIsDetached() == Boolean.TRUE)\n             throw newDetachedException(obj, \"delete\");\n     }"},{"sha":"9b056ef50369375e465ff787a0305044bbede915","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/EntityL3.java","status":"modified","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/apache/openjpa/blob/832d913520d909b587cd52ae16e63773965a17ad/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/EntityL3.java","raw_url":"https://github.com/apache/openjpa/raw/832d913520d909b587cd52ae16e63773965a17ad/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/EntityL3.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/EntityL3.java?ref=832d913520d909b587cd52ae16e63773965a17ad","patch":"@@ -1,3 +1,18 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n package org.apache.openjpa.persistence.inheritance;\n \n import javax.persistence.Entity;"},{"sha":"06f9039cc88824d29e255430d6b63901ee083e3a","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/MappedSuperclassBase.java","status":"modified","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/apache/openjpa/blob/832d913520d909b587cd52ae16e63773965a17ad/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/MappedSuperclassBase.java","raw_url":"https://github.com/apache/openjpa/raw/832d913520d909b587cd52ae16e63773965a17ad/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/MappedSuperclassBase.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/MappedSuperclassBase.java?ref=832d913520d909b587cd52ae16e63773965a17ad","patch":"@@ -1,3 +1,18 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n package org.apache.openjpa.persistence.inheritance;\n \n import javax.persistence.GeneratedValue;"},{"sha":"a646793507f9aba16209175ef12b06db3a6f5e35","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/MappedSuperclassL2.java","status":"modified","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/apache/openjpa/blob/832d913520d909b587cd52ae16e63773965a17ad/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/MappedSuperclassL2.java","raw_url":"https://github.com/apache/openjpa/raw/832d913520d909b587cd52ae16e63773965a17ad/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/MappedSuperclassL2.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/MappedSuperclassL2.java?ref=832d913520d909b587cd52ae16e63773965a17ad","patch":"@@ -1,3 +1,18 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n package org.apache.openjpa.persistence.inheritance;\n \n import javax.persistence.MappedSuperclass;"},{"sha":"5614018a65406a8dae63d9c6366c367a43c07c7d","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/CascadingOneManyChild.java","status":"modified","additions":16,"deletions":1,"changes":17,"blob_url":"https://github.com/apache/openjpa/blob/832d913520d909b587cd52ae16e63773965a17ad/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/CascadingOneManyChild.java","raw_url":"https://github.com/apache/openjpa/raw/832d913520d909b587cd52ae16e63773965a17ad/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/CascadingOneManyChild.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/CascadingOneManyChild.java?ref=832d913520d909b587cd52ae16e63773965a17ad","patch":"@@ -1,3 +1,18 @@\n+/*\r\n+ * Copyright 2006 The Apache Software Foundation.\r\n+ *\r\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n+ * you may not use this file except in compliance with the License.\r\n+ * You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing, software\r\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+ * See the License for the specific language governing permissions and\r\n+ * limitations under the License.\r\n+ */\r\n package org.apache.openjpa.persistence.relations;\r\n \r\n import javax.persistence.Column;\r\n@@ -22,7 +37,7 @@\n     private String name;\r\n \r\n     @ManyToOne(optional=false)\r\n-    @JoinColumn(name=\"PARENT_ID\")\r\n+    @JoinColumn(name=\"PARENT_ID\", nullable=false)\r\n     @ForeignKey\r\n     private CascadingOneManyParent parent;\r\n \r"},{"sha":"78f201b066297d78808b13cf44d36b70590e5d0b","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/CascadingOneManyParent.java","status":"modified","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/apache/openjpa/blob/832d913520d909b587cd52ae16e63773965a17ad/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/CascadingOneManyParent.java","raw_url":"https://github.com/apache/openjpa/raw/832d913520d909b587cd52ae16e63773965a17ad/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/CascadingOneManyParent.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/CascadingOneManyParent.java?ref=832d913520d909b587cd52ae16e63773965a17ad","patch":"@@ -1,3 +1,18 @@\n+/*\r\n+ * Copyright 2006 The Apache Software Foundation.\r\n+ *\r\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n+ * you may not use this file except in compliance with the License.\r\n+ * You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing, software\r\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+ * See the License for the specific language governing permissions and\r\n+ * limitations under the License.\r\n+ */\r\n package org.apache.openjpa.persistence.relations;\r\n \r\n import java.util.ArrayList;\r"},{"sha":"940fea5ccf522e6187a473384cbd102dce69e34a","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/IFace.java","status":"added","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/apache/openjpa/blob/832d913520d909b587cd52ae16e63773965a17ad/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/IFace.java","raw_url":"https://github.com/apache/openjpa/raw/832d913520d909b587cd52ae16e63773965a17ad/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/IFace.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/IFace.java?ref=832d913520d909b587cd52ae16e63773965a17ad","patch":"@@ -0,0 +1,21 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.relations;\n+\n+public interface IFace {\n+\n+    public String getName();\n+}"},{"sha":"88bc8ff0aa9bfb1e793ca23ceafc5726bf99d198","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TargetedIFaceRelationParent.java","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/apache/openjpa/blob/832d913520d909b587cd52ae16e63773965a17ad/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TargetedIFaceRelationParent.java","raw_url":"https://github.com/apache/openjpa/raw/832d913520d909b587cd52ae16e63773965a17ad/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TargetedIFaceRelationParent.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TargetedIFaceRelationParent.java?ref=832d913520d909b587cd52ae16e63773965a17ad","patch":"@@ -0,0 +1,61 @@\n+/*\r\n+ * Copyright 2006 The Apache Software Foundation.\r\n+ *\r\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n+ * you may not use this file except in compliance with the License.\r\n+ * You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing, software\r\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+ * See the License for the specific language governing permissions and\r\n+ * limitations under the License.\r\n+ */\r\n+package org.apache.openjpa.persistence.relations;\r\n+\r\n+import javax.persistence.CascadeType;\r\n+import javax.persistence.Entity;\r\n+import javax.persistence.GeneratedValue;\r\n+import javax.persistence.Id;\r\n+import javax.persistence.ManyToOne;\r\n+import javax.persistence.Version;\r\n+\r\n+@Entity\r\n+public class TargetedIFaceRelationParent \r\n+    implements IFace {\r\n+\r\n+    @Id\r\n+    @GeneratedValue\r\n+    private long id;\r\n+\r\n+    private String name;\r\n+\r\n+    @ManyToOne(targetEntity=TargetedIFaceRelationParent.class,\r\n+        cascade=CascadeType.ALL)\r\n+    private IFace iface;\r\n+\r\n+    @Version\r\n+    private Integer optLock;\r\n+\r\n+    public long getId() { \r\n+        return id; \r\n+    }\r\n+\r\n+    public IFace getIFace() {\r\n+        return iface; \r\n+    }\r\n+\r\n+    public void setIFace(IFace iface) {\r\n+        this.iface = iface; \r\n+    }\r\n+\r\n+    public String getName() { \r\n+        return name; \r\n+    }\r\n+\r\n+    public void setName(String name) { \r\n+        this.name = name; \r\n+    }\r\n+}\r"},{"sha":"564227a718f652f9caf5231e4c8729298bafb81b","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestTargetedIFaceRelations.java","status":"added","additions":93,"deletions":0,"changes":93,"blob_url":"https://github.com/apache/openjpa/blob/832d913520d909b587cd52ae16e63773965a17ad/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestTargetedIFaceRelations.java","raw_url":"https://github.com/apache/openjpa/raw/832d913520d909b587cd52ae16e63773965a17ad/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestTargetedIFaceRelations.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestTargetedIFaceRelations.java?ref=832d913520d909b587cd52ae16e63773965a17ad","patch":"@@ -0,0 +1,93 @@\n+/*\n+ * Copyright 2006 The Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.relations;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import javax.persistence.EntityManager;\n+import javax.persistence.EntityManagerFactory;\n+import javax.persistence.EntityTransaction;\n+import javax.persistence.Persistence;\n+\n+import junit.framework.TestCase;\n+import junit.textui.TestRunner;\n+\n+/**\n+ * Perform basic operations on an entity with interface relations that use\n+ * the targetEntity attribute to set a concrete related type.\n+ *\n+ * @author Abe White\n+ */\n+public class TestTargetedIFaceRelations\n+    extends TestCase {\n+\n+    private EntityManagerFactory emf;\n+\n+    public void setUp() {\n+        Map props = new HashMap();\n+        props.put(\"openjpa.MetaDataFactory\", \"jpa(Types=\" \n+            + TargetedIFaceRelationParent.class.getName() + \")\");\n+        emf = Persistence.createEntityManagerFactory(\"test\", props);\n+    }\n+\n+    public void tearDown() {\n+        if (emf == null)\n+            return;\n+        try {\n+            EntityManager em = emf.createEntityManager();\n+            em.getTransaction().begin();\n+            em.createQuery(\"delete from TargetedIFaceRelationParent\").\n+                executeUpdate();\n+            em.getTransaction().commit();\n+            em.close();\n+            emf.close();\n+        } catch (Exception e) {\n+        }\n+    }\n+\n+    public void testPersist() {\n+        TargetedIFaceRelationParent parent = new TargetedIFaceRelationParent();\n+        parent.setName(\"parent\");\n+        TargetedIFaceRelationParent child = new TargetedIFaceRelationParent();\n+        child.setName(\"child\");\n+        parent.setIFace(child);\n+        \n+        EntityManager em = emf.createEntityManager();\n+        em.getTransaction().begin();\n+        em.persist(parent);\n+        em.getTransaction().commit();\n+        long id = parent.getId();\n+        assertTrue(id != 0);\n+        em.close();\n+\n+        em = emf.createEntityManager();\n+        parent = em.find(TargetedIFaceRelationParent.class, id);\n+        assertNotNull(parent);\n+        assertEquals(\"parent\", parent.getName());\n+        assertNotNull(parent.getIFace());\n+        assertEquals(\"child\", parent.getIFace().getName());\n+        assertEquals(TargetedIFaceRelationParent.class, \n+            parent.getIFace().getClass());\n+        assertNull(((TargetedIFaceRelationParent) parent.getIFace()).\n+            getIFace());\n+        em.close();\n+    }\n+\n+    public static void main(String[] args) {\n+        TestRunner.run(TestTargetedIFaceRelations.class);\n+    }\n+}\n+"},{"sha":"8b70525e5f4a4a50eaea68fca6262eefa626893e","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/832d913520d909b587cd52ae16e63773965a17ad/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java","raw_url":"https://github.com/apache/openjpa/raw/832d913520d909b587cd52ae16e63773965a17ad/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java?ref=832d913520d909b587cd52ae16e63773965a17ad","patch":"@@ -1200,7 +1200,7 @@ private void parseManyToOne(FieldMetaData fmd, ManyToOne anno) {\n         if (!anno.optional())\n             fmd.setNullValue(FieldMetaData.NULL_EXCEPTION);\n         if (anno.targetEntity() != void.class)\n-            fmd.setDeclaredType(anno.targetEntity());\n+            fmd.setTypeOverride(anno.targetEntity());\n         setCascades(fmd, anno.cascade());\n     }\n \n@@ -1223,7 +1223,7 @@ private void parseOneToOne(FieldMetaData fmd, OneToOne anno) {\n         if (isMappingOverrideMode() && !StringUtils.isEmpty(anno.mappedBy()))\n             fmd.setMappedBy(anno.mappedBy());\n         if (anno.targetEntity() != void.class)\n-            fmd.setDeclaredType(anno.targetEntity());\n+            fmd.setTypeOverride(anno.targetEntity());\n         setCascades(fmd, anno.cascade());\n     }\n "}]}

