{"sha":"833031ba61e2d15611f23baa9294035aa95ac9f9","node_id":"MDY6Q29tbWl0MjA2MzY0OjgzMzAzMWJhNjFlMmQxNTYxMWYyM2JhYTkyOTQwMzVhYTk1YWM5Zjk=","commit":{"author":{"name":"Heath Thomann","email":"hthomann@apache.org","date":"2014-03-24T18:26:36Z"},"committer":{"name":"Heath Thomann","email":"hthomann@apache.org","date":"2014-03-24T18:26:36Z"},"message":"OPENJPA-2286: ArgumentException: Attempt to compare incompatible types class java.util.Date and class org.apache.openjpa.jdbc.sql.Raw\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1580972 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"e38a1c104884c8cc0c35545e0ee71e7d846f8fdc","url":"https://api.github.com/repos/apache/openjpa/git/trees/e38a1c104884c8cc0c35545e0ee71e7d846f8fdc"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/833031ba61e2d15611f23baa9294035aa95ac9f9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/833031ba61e2d15611f23baa9294035aa95ac9f9","html_url":"https://github.com/apache/openjpa/commit/833031ba61e2d15611f23baa9294035aa95ac9f9","comments_url":"https://api.github.com/repos/apache/openjpa/commits/833031ba61e2d15611f23baa9294035aa95ac9f9/comments","author":null,"committer":null,"parents":[{"sha":"030ba2a41f99771c230aeec856701928a4768de9","url":"https://api.github.com/repos/apache/openjpa/commits/030ba2a41f99771c230aeec856701928a4768de9","html_url":"https://github.com/apache/openjpa/commit/030ba2a41f99771c230aeec856701928a4768de9"}],"stats":{"total":45,"additions":38,"deletions":7},"files":[{"sha":"cddcd8b76b2c028f0964223ac9df77e89d86212e","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/CompareExpression.java","status":"modified","additions":14,"deletions":4,"changes":18,"blob_url":"https://github.com/apache/openjpa/blob/833031ba61e2d15611f23baa9294035aa95ac9f9/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/CompareExpression.java","raw_url":"https://github.com/apache/openjpa/raw/833031ba61e2d15611f23baa9294035aa95ac9f9/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/CompareExpression.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/CompareExpression.java?ref=833031ba61e2d15611f23baa9294035aa95ac9f9","patch":"@@ -26,6 +26,7 @@\n import org.apache.openjpa.kernel.exps.ExpressionVisitor;\n import org.apache.openjpa.lib.util.Localizer;\n import org.apache.openjpa.util.UserException;\n+import org.apache.openjpa.jdbc.sql.Raw;\n \n /**\n  * Compares two values.\n@@ -67,10 +68,19 @@ public void appendTo(Select sel, ExpContext ctx, ExpState state,\n         BinaryOpExpState bstate = (BinaryOpExpState) state;\n         _val1.calculateValue(sel, ctx, bstate.state1, _val2, bstate.state2);\n         _val2.calculateValue(sel, ctx, bstate.state2, _val1, bstate.state1);\n-        if (!Filters.canConvert(_val1.getType(), _val2.getType(), false)\n-            && !Filters.canConvert(_val2.getType(), _val1.getType(), false))\n-            throw new UserException(_loc.get(\"cant-convert\", _val1.getType(),\n-                _val2.getType()));\n+        Class val1Type = _val1.getType();\n+        Class val2Type = _val2.getType();\n+        // For purposes of the 'canConvert', when dealing with a Lit with Raw\n+        // use a String type since Raw contains a String.\n+        if (_val1 instanceof Lit && val1Type.isAssignableFrom(Raw.class)){\n+            val1Type = String.class;\n+        }\n+        if (_val2 instanceof Lit && val2Type.isAssignableFrom(Raw.class)){\n+            val2Type = String.class;\n+        }\n+        if (!Filters.canConvert(val1Type, val2Type, false)\n+            && !Filters.canConvert(val2Type, val1Type, false))\n+            throw new UserException(_loc.get(\"cant-convert\", val1Type, val2Type));\n \n         ctx.store.getDBDictionary().comparison(buf, _op,\n             new FilterValueImpl(sel, ctx, bstate.state1, _val1),"},{"sha":"2e6bec0d1546b0af4fd587484a68e9f532cd6aec","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestJDBCEscapeDate.java","status":"modified","additions":24,"deletions":3,"changes":27,"blob_url":"https://github.com/apache/openjpa/blob/833031ba61e2d15611f23baa9294035aa95ac9f9/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestJDBCEscapeDate.java","raw_url":"https://github.com/apache/openjpa/raw/833031ba61e2d15611f23baa9294035aa95ac9f9/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestJDBCEscapeDate.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestJDBCEscapeDate.java?ref=833031ba61e2d15611f23baa9294035aa95ac9f9","patch":"@@ -44,7 +44,7 @@ public void setUp() {\n         setUp(Employee.class, DROP_TABLES);\n     }\n \n-    public void testJDBCEscape() {\n+    public void populate(){\n         EntityManager em = emf.createEntityManager();\n         EntityTransaction tran = em.getTransaction();\n         Employee e = new Employee();\n@@ -55,9 +55,13 @@ public void testJDBCEscape() {\n         e.setHireTimestamp(new Date());\n         em.persist(e);\n         tran.begin();\n-        em.flush();\n         tran.commit();\n-        em.clear();\n+        em.close();        \n+    }\n+    \n+    public void testJDBCEscape() {\n+        populate();\n+        EntityManager em = emf.createEntityManager();\n \n         String[] jpql;\n         DBDictionary dict = ((JDBCConfiguration)emf.getConfiguration()).getDBDictionaryInstance();\n@@ -157,4 +161,21 @@ public void testJDBCEscape() {\n         Assert.assertEquals(1, updateCnt);\n         em.close();\n     }\n+    \n+    /*\n+     * Added for OJ-2286.  The test executes the same query multiple times.  Prior\n+     * to the JIRA fix, upon the second exception an exception would occur.  \n+     */\n+    public void testMultipleQueryExecutionWithDateLiteral() {\n+        populate();\n+        EntityManager em = emf.createEntityManager();\n+        \n+        Query q = em.createQuery(\"SELECT e FROM Employee e WHERE e.hireTimestamp > {ts '2001-01-01 00:00:00'}\");        \n+        Assert.assertEquals(\"First assertion\", 1, q.getResultList().size());\n+        // Prior to JIRA OJ-2286, an exception would occur here:\n+        Assert.assertEquals(\"Second assertion\", 1, q.getResultList().size());\n+        // For good measure execute it a couple more times.  :)\n+        Assert.assertEquals(\"Third assertion\", 1, q.getResultList().size());\n+        Assert.assertEquals(\"Fourth assertion\", 1, q.getResultList().size());\n+    }    \n }"}]}

