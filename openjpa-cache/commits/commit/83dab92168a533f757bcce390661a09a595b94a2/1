{"sha":"83dab92168a533f757bcce390661a09a595b94a2","node_id":"MDY6Q29tbWl0MjA2MzY0OjgzZGFiOTIxNjhhNTMzZjc1N2JjY2UzOTA2NjFhMDlhNTk1Yjk0YTI=","commit":{"author":{"name":"Heath Thomann","email":"hthomann@apache.org","date":"2013-10-17T23:28:31Z"},"committer":{"name":"Heath Thomann","email":"hthomann@apache.org","date":"2013-10-17T23:28:31Z"},"message":"OPENJPA-2435: Version field in a projection always returned as an Integer.  Merged 2.1.x changes to trunk.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1533289 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"198c123ec9ac402c98159eb9be145e3273af6788","url":"https://api.github.com/repos/apache/openjpa/git/trees/198c123ec9ac402c98159eb9be145e3273af6788"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/83dab92168a533f757bcce390661a09a595b94a2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/83dab92168a533f757bcce390661a09a595b94a2","html_url":"https://github.com/apache/openjpa/commit/83dab92168a533f757bcce390661a09a595b94a2","comments_url":"https://api.github.com/repos/apache/openjpa/commits/83dab92168a533f757bcce390661a09a595b94a2/comments","author":null,"committer":null,"parents":[{"sha":"bb743b5f156b08aa750305b9e1a94369f90b1a0f","url":"https://api.github.com/repos/apache/openjpa/commits/bb743b5f156b08aa750305b9e1a94369f90b1a0f","html_url":"https://github.com/apache/openjpa/commit/bb743b5f156b08aa750305b9e1a94369f90b1a0f"}],"stats":{"total":367,"additions":362,"deletions":5},"files":[{"sha":"543dd582560c2a76db8874d7358d84614f9e877d","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/NumberVersionStrategy.java","status":"modified","additions":12,"deletions":5,"changes":17,"blob_url":"https://github.com/apache/openjpa/blob/83dab92168a533f757bcce390661a09a595b94a2/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/NumberVersionStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/83dab92168a533f757bcce390661a09a595b94a2/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/NumberVersionStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/NumberVersionStrategy.java?ref=83dab92168a533f757bcce390661a09a595b94a2","patch":"@@ -18,12 +18,12 @@\n  */\n package org.apache.openjpa.jdbc.meta.strats;\n \n-import java.util.Map;\n import java.util.HashMap;\n+import java.util.Map;\n \n-import org.apache.openjpa.meta.JavaTypes;\n-import org.apache.openjpa.util.InternalException;\n+import org.apache.openjpa.jdbc.meta.FieldMapping;\n import org.apache.openjpa.jdbc.schema.Column;\n+import org.apache.openjpa.meta.JavaTypes;\n \n /**\n  * Uses a version number for optimistic versioning.\n@@ -36,7 +36,8 @@\n     public static final String ALIAS = \"version-number\";\n \n     private Number _initial = 1;\n-\n+    private Integer _javaType = null;\n+    \n     /**\n      * Set the initial value for version column. Defaults to 1.\n      */\n@@ -56,7 +57,13 @@ public String getAlias() {\n     }\n \n     protected int getJavaType() {\n-        return JavaTypes.INT;\n+        if (_javaType == null && vers.getClassMapping().getVersionFieldMapping() != null) {\n+            _javaType = Integer.valueOf(vers.getClassMapping().getVersionFieldMapping().getTypeCode());\n+        } else {\n+            return JavaTypes.INT;\n+        }\n+\n+        return _javaType;\n     }\n     \n     protected Object nextVersion(Object version) {"},{"sha":"f5231350b12b7aedcd613677c704071397c2a855","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/BaseEntity.java","status":"added","additions":30,"deletions":0,"changes":30,"blob_url":"https://github.com/apache/openjpa/blob/83dab92168a533f757bcce390661a09a595b94a2/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/BaseEntity.java","raw_url":"https://github.com/apache/openjpa/raw/83dab92168a533f757bcce390661a09a595b94a2/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/BaseEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/BaseEntity.java?ref=83dab92168a533f757bcce390661a09a595b94a2","patch":"@@ -0,0 +1,30 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.    \r\n+ */\r\n+package org.apache.openjpa.persistence.jpql.version.type;\r\n+\r\n+import javax.persistence.*;\r\n+\r\n+@MappedSuperclass\r\n+abstract class BaseEntity {\r\n+        \r\n+    @Version\r\n+    protected Long version;\r\n+\r\n+    public Long getVersion() { return version; }\r\n+}\r"},{"sha":"0a44a8751405db74d0bc9be2f26c86730c874381","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/ChildVersionEntity.java","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/apache/openjpa/blob/83dab92168a533f757bcce390661a09a595b94a2/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/ChildVersionEntity.java","raw_url":"https://github.com/apache/openjpa/raw/83dab92168a533f757bcce390661a09a595b94a2/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/ChildVersionEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/ChildVersionEntity.java?ref=83dab92168a533f757bcce390661a09a595b94a2","patch":"@@ -0,0 +1,33 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.    \r\n+ */\r\n+package org.apache.openjpa.persistence.jpql.version.type;\r\n+\r\n+import javax.persistence.Entity;\r\n+import javax.persistence.Id;\r\n+\r\n+@Entity\r\n+public class ChildVersionEntity extends BaseEntity {\r\n+    \r\n+    @Id\r\n+    private int id;\r\n+        \r\n+    public int getId() { return id; }\r\n+    public void setId(int id) { this.id = id; }\r\n+}\r\n+\r"},{"sha":"c61dc3f21237dddcda1e735833207ef955724248","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/LongVersionEntity.java","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/apache/openjpa/blob/83dab92168a533f757bcce390661a09a595b94a2/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/LongVersionEntity.java","raw_url":"https://github.com/apache/openjpa/raw/83dab92168a533f757bcce390661a09a595b94a2/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/LongVersionEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/LongVersionEntity.java?ref=83dab92168a533f757bcce390661a09a595b94a2","patch":"@@ -0,0 +1,38 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.    \r\n+ */\r\n+package org.apache.openjpa.persistence.jpql.version.type;\r\n+\r\n+import java.io.Serializable;\r\n+import java.sql.Timestamp;\r\n+\r\n+import javax.persistence.*;\r\n+\r\n+@Entity\r\n+public class LongVersionEntity implements Serializable {\r\n+    @Id\r\n+    private int id;\r\n+    \r\n+    @Version\r\n+    protected Long version;\r\n+    \r\n+    public int getId() { return id; }\r\n+    public void setId(int id) { this.id = id; }\r\n+    public Long getVersion() { return version; }\r\n+}\r\n+\r"},{"sha":"fec896513ebb928440510cd50fa2ea51e2929b3d","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/PrimativeLongVersionEntity.java","status":"added","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/apache/openjpa/blob/83dab92168a533f757bcce390661a09a595b94a2/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/PrimativeLongVersionEntity.java","raw_url":"https://github.com/apache/openjpa/raw/83dab92168a533f757bcce390661a09a595b94a2/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/PrimativeLongVersionEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/PrimativeLongVersionEntity.java?ref=83dab92168a533f757bcce390661a09a595b94a2","patch":"@@ -0,0 +1,37 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.    \r\n+ */\r\n+package org.apache.openjpa.persistence.jpql.version.type;\r\n+\r\n+import java.io.Serializable;\r\n+\r\n+import javax.persistence.*;\r\n+\r\n+@Entity\r\n+public class PrimativeLongVersionEntity implements Serializable {\r\n+    @Id\r\n+    private int id;\r\n+    \r\n+    @Version\r\n+    protected long version;\r\n+\r\n+    public int getId() { return id; }\r\n+    public void setId(int id) { this.id = id; }\r\n+    public long getVersion() { return version; }\r\n+}\r\n+\r"},{"sha":"593d9a6613d962a2fa615b0b361980f757fd5309","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/PrimativeShortVersionEntity.java","status":"added","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/apache/openjpa/blob/83dab92168a533f757bcce390661a09a595b94a2/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/PrimativeShortVersionEntity.java","raw_url":"https://github.com/apache/openjpa/raw/83dab92168a533f757bcce390661a09a595b94a2/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/PrimativeShortVersionEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/PrimativeShortVersionEntity.java?ref=83dab92168a533f757bcce390661a09a595b94a2","patch":"@@ -0,0 +1,37 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.    \r\n+ */\r\n+package org.apache.openjpa.persistence.jpql.version.type;\r\n+\r\n+import java.io.Serializable;\r\n+\r\n+import javax.persistence.*;\r\n+\r\n+@Entity\r\n+public class PrimativeShortVersionEntity implements Serializable {\r\n+    @Id\r\n+    private int id;\r\n+    \r\n+    @Version\r\n+    protected short version;\r\n+\r\n+    public int getId() { return id; }\r\n+    public void setId(int id) { this.id = id; }\r\n+    public short getVersion() { return version; }\r\n+}\r\n+\r"},{"sha":"257fc013dbae7e249ffc98861dc4fb8bd6d98df2","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/ShortVersionEntity.java","status":"added","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/apache/openjpa/blob/83dab92168a533f757bcce390661a09a595b94a2/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/ShortVersionEntity.java","raw_url":"https://github.com/apache/openjpa/raw/83dab92168a533f757bcce390661a09a595b94a2/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/ShortVersionEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/ShortVersionEntity.java?ref=83dab92168a533f757bcce390661a09a595b94a2","patch":"@@ -0,0 +1,37 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.    \r\n+ */\r\n+package org.apache.openjpa.persistence.jpql.version.type;\r\n+\r\n+import java.io.Serializable;\r\n+\r\n+import javax.persistence.*;\r\n+\r\n+@Entity\r\n+public class ShortVersionEntity implements Serializable {\r\n+    @Id\r\n+    private int id;\r\n+    \r\n+    @Version\r\n+    protected Short version;\r\n+\r\n+    public int getId() { return id; }\r\n+    public void setId(int id) { this.id = id; }\r\n+    public Short getVersion() { return version; }\r\n+}\r\n+\r"},{"sha":"da4a05659c1ca3e380f64579455450e9db589869","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/TestVersionFieldType.java","status":"added","additions":100,"deletions":0,"changes":100,"blob_url":"https://github.com/apache/openjpa/blob/83dab92168a533f757bcce390661a09a595b94a2/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/TestVersionFieldType.java","raw_url":"https://github.com/apache/openjpa/raw/83dab92168a533f757bcce390661a09a595b94a2/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/TestVersionFieldType.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/TestVersionFieldType.java?ref=83dab92168a533f757bcce390661a09a595b94a2","patch":"@@ -0,0 +1,100 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.    \r\n+ */\r\n+package org.apache.openjpa.persistence.jpql.version.type;\r\n+\r\n+import java.sql.Timestamp;\r\n+import java.util.List;\r\n+\r\n+import javax.persistence.EntityManager;\r\n+import javax.persistence.Query;\r\n+\r\n+import org.apache.openjpa.persistence.test.SingleEMFTestCase;\r\n+\r\n+/**\r\n+ * Verifies that the version field is of the proper java type \r\n+ * when returned from a query. See OPENJPA-2435.\r\n+ */\r\n+public class TestVersionFieldType extends SingleEMFTestCase {\r\n+\r\n+    public void setUp() {\r\n+        setUp(CLEAR_TABLES, LongVersionEntity.class, \r\n+            ShortVersionEntity.class, PrimativeLongVersionEntity.class,\r\n+            PrimativeShortVersionEntity.class, TimestampVersionEntity.class, \r\n+            BaseEntity.class, ChildVersionEntity.class);\r\n+        createTestData();\r\n+    }\r\n+\r\n+    public void testProjectionVersionReturnType() {\r\n+        verifyType(LongVersionEntity.class, Long.class);\r\n+        verifyType(ShortVersionEntity.class, Short.class);\r\n+        verifyType(PrimativeShortVersionEntity.class, Short.class);\r\n+        verifyType(PrimativeLongVersionEntity.class, Long.class);\r\n+        verifyType(ChildVersionEntity.class, Long.class);\r\n+        verifyType(TimestampVersionEntity.class, Timestamp.class);\r\n+    }\r\n+\r\n+    public void verifyType(Class<?> cls, Class<?> expectedClsType) {\r\n+\r\n+        EntityManager em = emf.createEntityManager();\r\n+        String str = \"SELECT o.id, o.version FROM \" + cls.getName() + \" o\";\r\n+        Query query = em.createQuery(str);\r\n+        List<Object[]> objectList = query.getResultList();\r\n+\r\n+        for (Object[] objects : objectList) {\r\n+            assertNotNull(\"Version should not be null.\", objects[1]);\r\n+            assertTrue(\"Type should be \" + expectedClsType.getName() + \r\n+                \".  But it is \" + objects[1].getClass(),\r\n+                objects[1].getClass() == expectedClsType);\r\n+        }\r\n+        \r\n+        em.close();\r\n+    }\r\n+\r\n+    public void createTestData() {\r\n+        EntityManager em = emf.createEntityManager();\r\n+        em.getTransaction().begin();\r\n+\r\n+        LongVersionEntity lve = new LongVersionEntity();\r\n+        lve.setId(9);\r\n+        em.persist(lve);\r\n+\r\n+        ShortVersionEntity sve = new ShortVersionEntity();\r\n+        sve.setId(9);\r\n+        em.persist(sve);\r\n+\r\n+        PrimativeShortVersionEntity psve = new PrimativeShortVersionEntity();\r\n+        psve.setId(9);\r\n+        em.persist(psve);\r\n+\r\n+        PrimativeLongVersionEntity plve = new PrimativeLongVersionEntity();\r\n+        plve.setId(9);\r\n+        em.persist(plve);\r\n+\r\n+        TimestampVersionEntity tve = new TimestampVersionEntity();\r\n+        tve.setId(9);\r\n+        em.persist(tve);\r\n+\r\n+        ChildVersionEntity ave = new ChildVersionEntity();\r\n+        ave.setId(9);\r\n+        em.persist(ave);\r\n+\r\n+        em.getTransaction().commit();\r\n+        em.close();\r\n+    }\r\n+}\r"},{"sha":"9ebc88b2825e28f9c4c94eac45c8069bd82c6d5b","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/TimestampVersionEntity.java","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/apache/openjpa/blob/83dab92168a533f757bcce390661a09a595b94a2/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/TimestampVersionEntity.java","raw_url":"https://github.com/apache/openjpa/raw/83dab92168a533f757bcce390661a09a595b94a2/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/TimestampVersionEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/version/type/TimestampVersionEntity.java?ref=83dab92168a533f757bcce390661a09a595b94a2","patch":"@@ -0,0 +1,38 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.    \r\n+ */\r\n+package org.apache.openjpa.persistence.jpql.version.type;\r\n+\r\n+import java.io.Serializable;\r\n+import java.sql.Timestamp;\r\n+\r\n+import javax.persistence.*;\r\n+\r\n+@Entity\r\n+public class TimestampVersionEntity implements Serializable {\r\n+    @Id\r\n+    private int id;\r\n+\r\n+    @Version\r\n+    protected Timestamp version;\r\n+\r\n+    public int getId() { return id; }\r\n+    public void setId(int id) { this.id = id; }\r\n+    public Timestamp getVersion() { return version; }\r\n+}\r\n+\r"}]}

