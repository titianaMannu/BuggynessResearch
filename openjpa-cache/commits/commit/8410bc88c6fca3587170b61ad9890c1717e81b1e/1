{"sha":"8410bc88c6fca3587170b61ad9890c1717e81b1e","node_id":"MDY6Q29tbWl0MjA2MzY0Ojg0MTBiYzg4YzZmY2EzNTg3MTcwYjYxYWQ5ODkwYzE3MTdlODFiMWU=","commit":{"author":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-12-16T20:33:31Z"},"committer":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-12-16T20:33:31Z"},"message":"OPENJPA-1435: remove null element from the coll\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@891417 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"cb364225f766bfb0eec660140d12fc64c11bb407","url":"https://api.github.com/repos/apache/openjpa/git/trees/cb364225f766bfb0eec660140d12fc64c11bb407"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/8410bc88c6fca3587170b61ad9890c1717e81b1e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/8410bc88c6fca3587170b61ad9890c1717e81b1e","html_url":"https://github.com/apache/openjpa/commit/8410bc88c6fca3587170b61ad9890c1717e81b1e","comments_url":"https://api.github.com/repos/apache/openjpa/commits/8410bc88c6fca3587170b61ad9890c1717e81b1e/comments","author":null,"committer":null,"parents":[{"sha":"40f017a2e99211101f25fe3d6faafdef38d780a8","url":"https://api.github.com/repos/apache/openjpa/commits/40f017a2e99211101f25fe3d6faafdef38d780a8","html_url":"https://github.com/apache/openjpa/commit/40f017a2e99211101f25fe3d6faafdef38d780a8"}],"stats":{"total":253,"additions":252,"deletions":1},"files":[{"sha":"6542e3e199c9f04fe87f7d2d5cbb03de1bde83d1","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/StoreCollectionFieldStrategy.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/8410bc88c6fca3587170b61ad9890c1717e81b1e/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/StoreCollectionFieldStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/8410bc88c6fca3587170b61ad9890c1717e81b1e/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/StoreCollectionFieldStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/StoreCollectionFieldStrategy.java?ref=8410bc88c6fca3587170b61ad9890c1717e81b1e","patch":"@@ -437,7 +437,9 @@ public void loadEagerJoin(OpenJPAStateManager sm, JDBCStore store,\n             if (field.getOrderColumn() != null)\n                 seq = res.getInt(field.getOrderColumn(), refJoins) + 1;\n             res.setBaseMapping(null);\n-            add(store, coll, loadElement(sm, store, fetch, res, dataJoins));\n+            Object obj = loadElement(sm, store, fetch, res, dataJoins);\n+            if (obj != null)\n+                add(store, coll, obj);\n             if (!res.next() || res.indexOf() != typeIdx) {\n                 res.pushBack();\n                 break;"},{"sha":"9c288dd98e24618ca69d38f2079a983789ddfb8a","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestOneToManyWithEagerLazyFetch.java","status":"added","additions":104,"deletions":0,"changes":104,"blob_url":"https://github.com/apache/openjpa/blob/8410bc88c6fca3587170b61ad9890c1717e81b1e/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestOneToManyWithEagerLazyFetch.java","raw_url":"https://github.com/apache/openjpa/raw/8410bc88c6fca3587170b61ad9890c1717e81b1e/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestOneToManyWithEagerLazyFetch.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestOneToManyWithEagerLazyFetch.java?ref=8410bc88c6fca3587170b61ad9890c1717e81b1e","patch":"@@ -0,0 +1,104 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.relations;\n+\n+import java.util.Collection;\n+\n+import javax.persistence.EntityManager;\n+\n+import junit.textui.TestRunner;\n+import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n+\n+/**\n+ * Test Multi-OneToMany relationship with different fetch types.\n+ */\n+public class TestOneToManyWithEagerLazyFetch extends SingleEMFTestCase {\n+\n+    final int TestUtil1xm_TestRow_Id = 100;\n+\n+    public void setUp() {\n+        setUp(Util1xmLf.class, Util1xmRt.class);\n+\n+        EntityManager em = emf.createEntityManager();\n+        em.getTransaction().begin();\n+\n+        // Initialize Util1xmLf entity\n+        Util1xmLf lf1xm = new Util1xmLf();\n+        lf1xm.setId(TestUtil1xm_TestRow_Id);\n+        lf1xm.setFirstName(\"loaded firstName\");\n+\n+        Util1xmRt rt1xm1 = new Util1xmRt();\n+        rt1xm1.setId(TestUtil1xm_TestRow_Id + 11);\n+        rt1xm1.setLastName(\"loaded lastName1\");\n+        lf1xm.addUniRightLzy(rt1xm1);\n+        \n+        Util1xmRt rt1xm2 = new Util1xmRt();\n+        rt1xm2.setId(TestUtil1xm_TestRow_Id + 12);\n+        rt1xm2.setLastName(\"loaded lastName2\");\n+        lf1xm.addUniRightLzy(rt1xm2);\n+\n+        Util1xmRt rt1xm3 = new Util1xmRt();\n+        rt1xm3.setId(TestUtil1xm_TestRow_Id + 21);\n+        rt1xm3.setLastName(\"loaded eager lastName3\");\n+        lf1xm.addUniRightEgr(rt1xm3);\n+        \n+        Util1xmRt rt1xm4 = new Util1xmRt();\n+        rt1xm4.setId(TestUtil1xm_TestRow_Id + 22);\n+        rt1xm4.setLastName(\"loaded eager lastName4\");\n+        lf1xm.addUniRightEgr(rt1xm4);\n+\n+        em.persist(rt1xm1);\n+        em.persist(rt1xm2);\n+        em.persist(rt1xm3);\n+        em.persist(rt1xm4);\n+        em.persist(lf1xm);\n+\n+        em.getTransaction().commit();\n+        em.close();\n+    }\n+\n+    public void testLoadedOneToManyCount() {\n+        EntityManager em = emf.createEntityManager();\n+        Util1xmLf e1 = em.find(Util1xmLf.class, TestUtil1xm_TestRow_Id);\n+        // SELECT t0.firstName, t1.UTIL1XMLF_ID, t2.id, t2.lastName FROM Util1xmLf t0 \n+        //      LEFT OUTER JOIN Util1xmLf_Util1xmRt t1 ON t0.id = t1.UTIL1XMLF_ID \n+        //      LEFT OUTER JOIN Util1xmRt t2 ON t1.UNIRIGHTEGR_ID = t2.id WHERE t0.id = ? \n+        //      [params=(int) 100]\n+\n+        assertNotNull(\"Found Util1xmLf(id=\" + TestUtil1xm_TestRow_Id + \")\", e1);\n+        \n+        Collection<Util1xmRt> eRs = e1.getUniRightLzy();\n+        // SELECT t1.id, t1.lastName FROM Util1xmLf_Util1xmRt t0 \n+        //      INNER JOIN Util1xmRt t1 ON t0.UNIRIGHTLZY_ID = t1.id WHERE t0.UTIL1XMLF_ID = ? \n+        //      [params=(int) 100]\n+        assertNotNull(\"Util1xmRt uniRightLzy != null\", eRs);\n+        assertEquals(\"Util1xmRt uniRightLzy.size == 2\", eRs.size(), 2);\n+        \n+        Collection<Util1xmRt> eEs = e1.getUniRightEgr();\n+        assertNotNull(\"Util1xmRt uniRightEgr != null\", eEs);\n+        // Failing test: Getting 3 in eager collection, one null entry\n+        assertEquals(\"Util1xmRt uniRightEgr.size == 2\", eEs.size(), 2);\n+\n+        em.close();\n+    }\n+\n+    public static void main(String[] args) {\n+        TestRunner.run(TestOneToManyWithEagerLazyFetch.class);\n+    }\n+}"},{"sha":"b299c1901d048014a886eebd07524a4789829001","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/Util1xmLf.java","status":"added","additions":90,"deletions":0,"changes":90,"blob_url":"https://github.com/apache/openjpa/blob/8410bc88c6fca3587170b61ad9890c1717e81b1e/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/Util1xmLf.java","raw_url":"https://github.com/apache/openjpa/raw/8410bc88c6fca3587170b61ad9890c1717e81b1e/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/Util1xmLf.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/Util1xmLf.java?ref=8410bc88c6fca3587170b61ad9890c1717e81b1e","patch":"@@ -0,0 +1,90 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.relations;\n+\n+import java.util.Collection;\n+import java.util.HashSet;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.Id;\n+import javax.persistence.OneToMany;\n+import javax.persistence.Version;\n+\n+@Entity\n+public class Util1xmLf {\n+\n+    private int id;\n+\n+    private int version;\n+\n+    private String firstName;\n+\n+    public Collection<Util1xmRt> uniRightLzy = new HashSet<Util1xmRt>();\n+\n+    public Collection<Util1xmRt> uniRightEgr = new HashSet<Util1xmRt>();\n+\n+    @Id\n+    public int getId() {\n+        return id;\n+    }\n+\n+    @Version\n+    public int getVersion() {\n+        return version;\n+    }\n+\n+    public void setId(int id) {\n+        this.id = id;\n+    }\n+\n+    public String getFirstName() {\n+        return firstName;\n+    }\n+\n+    public void setFirstName(String firstName) {\n+        this.firstName = firstName;\n+    }\n+\n+    @OneToMany// (fetch = FetchType.LAZY)\n+    public Collection<Util1xmRt> getUniRightLzy() {\n+        return uniRightLzy;\n+    }\n+\n+    public void setUniRightLzy(Collection<Util1xmRt> uniRightLzy) {\n+        this.uniRightLzy = uniRightLzy;\n+    }\n+\n+    public void addUniRightLzy(Util1xmRt uniRightLzy) {\n+        getUniRightLzy().add(uniRightLzy);\n+    }\n+\n+    @OneToMany(fetch = FetchType.EAGER)\n+    public Collection<Util1xmRt> getUniRightEgr() {\n+        return uniRightEgr;\n+    }\n+\n+    public void setUniRightEgr(Collection<Util1xmRt> uniRightEgr) {\n+        this.uniRightEgr = uniRightEgr;\n+    }\n+\n+    public void addUniRightEgr(Util1xmRt uniRightEgr) {\n+        getUniRightEgr().add(uniRightEgr);\n+    }\n+}"},{"sha":"324213233fa5c1c15580e8ae95aeebda66eeb6c5","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/Util1xmRt.java","status":"added","additions":55,"deletions":0,"changes":55,"blob_url":"https://github.com/apache/openjpa/blob/8410bc88c6fca3587170b61ad9890c1717e81b1e/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/Util1xmRt.java","raw_url":"https://github.com/apache/openjpa/raw/8410bc88c6fca3587170b61ad9890c1717e81b1e/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/Util1xmRt.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/Util1xmRt.java?ref=8410bc88c6fca3587170b61ad9890c1717e81b1e","patch":"@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.relations;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+import javax.persistence.Version;\n+\n+@Entity\n+public class Util1xmRt {\n+\n+    private int id;\n+\n+    private int version;\n+\n+    private String lastName;\n+\n+    @Id\n+    public int getId() {\n+        return id;\n+    }\n+\n+    public void setId(int id) {\n+        this.id = id;\n+    }\n+\n+    @Version\n+    public int getVersion() {\n+        return version;\n+    }\n+\n+    public String getLastName() {\n+        return lastName;\n+    }\n+\n+    public void setLastName(String lastName) {\n+        this.lastName = lastName;\n+    }\n+}"}]}

