{"sha":"845f9b50187f2a14ceb3826561945edb8742988e","node_id":"MDY6Q29tbWl0MjA2MzY0Ojg0NWY5YjUwMTg3ZjJhMTRjZWIzODI2NTYxOTQ1ZWRiODc0Mjk4OGU=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2010-03-16T14:30:53Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2010-03-16T14:30:53Z"},"message":"OPENJPA-1578: Set CacheMode properties properly\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@923755 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"3f66878106a4732fa242293ba88a64229bcebcff","url":"https://api.github.com/repos/apache/openjpa/git/trees/3f66878106a4732fa242293ba88a64229bcebcff"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/845f9b50187f2a14ceb3826561945edb8742988e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/845f9b50187f2a14ceb3826561945edb8742988e","html_url":"https://github.com/apache/openjpa/commit/845f9b50187f2a14ceb3826561945edb8742988e","comments_url":"https://api.github.com/repos/apache/openjpa/commits/845f9b50187f2a14ceb3826561945edb8742988e/comments","author":null,"committer":null,"parents":[{"sha":"8a1e0307f242cc5b035db140c36ac134008a8aab","url":"https://api.github.com/repos/apache/openjpa/commits/8a1e0307f242cc5b035db140c36ac134008a8aab","html_url":"https://github.com/apache/openjpa/commit/8a1e0307f242cc5b035db140c36ac134008a8aab"}],"stats":{"total":20,"additions":17,"deletions":3},"files":[{"sha":"1ce403e8afa6d392dc385beb98b6350955547132","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStoreManager.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/845f9b50187f2a14ceb3826561945edb8742988e/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStoreManager.java","raw_url":"https://github.com/apache/openjpa/raw/845f9b50187f2a14ceb3826561945edb8742988e/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStoreManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStoreManager.java?ref=845f9b50187f2a14ceb3826561945edb8742988e","patch":"@@ -78,6 +78,7 @@\n import org.apache.openjpa.meta.JavaTypes;\n import org.apache.openjpa.meta.ValueStrategies;\n import org.apache.openjpa.util.ApplicationIds;\n+import org.apache.openjpa.util.Exceptions;\n import org.apache.openjpa.util.Id;\n import org.apache.openjpa.util.ImplHelper;\n import org.apache.openjpa.util.InvalidStateException;\n@@ -328,7 +329,8 @@ public boolean initialize(OpenJPAStateManager sm, PCState state,\n         } catch (ClassNotFoundException cnfe) {\n             throw new UserException(cnfe);\n         } catch (SQLException se) {\n-            throw SQLExceptions.getStore(se, _dict, fetch.getReadLockLevel());\n+            throw SQLExceptions.getStore(se, Exceptions.toString(sm.getPersistenceCapable()), \n+                    _dict, fetch.getReadLockLevel());\n         }\n     }\n "},{"sha":"8bea486fdd0efcb88e61444c681e47aa3b269a9d","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/FetchConfigurationImpl.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/845f9b50187f2a14ceb3826561945edb8742988e/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/FetchConfigurationImpl.java","raw_url":"https://github.com/apache/openjpa/raw/845f9b50187f2a14ceb3826561945edb8742988e/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/FetchConfigurationImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/FetchConfigurationImpl.java?ref=845f9b50187f2a14ceb3826561945edb8742988e","patch":"@@ -228,6 +228,8 @@ public void copy(FetchConfiguration fetch) {\n         addFetchGroups(fetch.getFetchGroups());\n         clearFields();\n         copyHints(fetch);\n+        setCacheRetrieveMode(fetch.getCacheRetrieveMode());\n+        setCacheStoreMode(fetch.getCacheStoreMode());\n         addFields(fetch.getFields());\n \n         // don't use setters because require active transaction"},{"sha":"08ae6af4707f3acecbd5eb655b8ea402c4af4060","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java","status":"modified","additions":12,"deletions":2,"changes":14,"blob_url":"https://github.com/apache/openjpa/blob/845f9b50187f2a14ceb3826561945edb8742988e/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/845f9b50187f2a14ceb3826561945edb8742988e/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java?ref=845f9b50187f2a14ceb3826561945edb8742988e","patch":"@@ -482,6 +482,7 @@ public void setLifecycleListenerCallbackMode(int callbackMode) {\n     @SuppressWarnings(\"unchecked\")\n     public <T> T find(Class<T> cls, Object oid, LockModeType mode, Map<String, Object> properties) {\n         assertNotCloseInvoked();\n+        configureCurrentCacheModes(getFetchPlan(), properties);\n         configureCurrentFetchPlan(pushFetchPlan(), properties, mode, true);\n         try {\n             oid = _broker.newObjectId(cls, oid);\n@@ -1174,7 +1175,7 @@ public void lock(Object entity, LockModeType mode, Map<String, Object> propertie\n         assertNotCloseInvoked();\n         assertValidAttchedEntity(\"lock\", entity);\n         _broker.assertActiveTransaction();\n-\n+        configureCurrentCacheModes(getFetchPlan(), properties);\n         configureCurrentFetchPlan(pushFetchPlan(), properties, mode, false);\n         try {\n             _broker.lock(entity, MixedLockLevelsHelper.toLockLevel(mode),\n@@ -1663,7 +1664,6 @@ RuntimeExceptionTranslator getExceptionTranslator() {\n     private void configureCurrentFetchPlan(FetchPlan fetch, Map<String, Object> properties, \n             LockModeType lock, boolean requiresTxn) {\n         // handle properties in map first\n-        configureCurrentCacheModes(fetch, properties);\n         if (properties != null) {\n             for (Map.Entry<String, Object> entry : properties.entrySet())\n                 fetch.setHint(entry.getKey(), entry.getValue());\n@@ -1680,6 +1680,16 @@ private void configureCurrentFetchPlan(FetchPlan fetch, Map<String, Object> prop\n         }\n     }\n     \n+    /**\n+     * Populate the fetch configuration with specified cache mode properties.\n+     * The cache mode properties modify the fetch configuration and remove those\n+     * properties. This method should be called <em>before</em> the fetch configuration of the current \n+     * context has been pushed.\n+     * @param fetch the fetch configuration of the current context. Not the \n+     * new configuration pushed (and later popped) during a single operation.\n+     * \n+     * @param properties\n+     */\n     private void configureCurrentCacheModes(FetchPlan fetch, Map<String, Object> properties) {\n         if (properties == null)\n             return;"}]}

