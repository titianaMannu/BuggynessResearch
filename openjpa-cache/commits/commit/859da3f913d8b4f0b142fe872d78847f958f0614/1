{"sha":"859da3f913d8b4f0b142fe872d78847f958f0614","node_id":"MDY6Q29tbWl0MjA2MzY0Ojg1OWRhM2Y5MTNkOGI0ZjBiMTQyZmU4NzJkNzg4NDdmOTU4ZjA2MTQ=","commit":{"author":{"name":"Kevin W. Sutter","email":"kwsutter@apache.org","date":"2007-02-08T17:21:19Z"},"committer":{"name":"Kevin W. Sutter","email":"kwsutter@apache.org","date":"2007-02-08T17:21:19Z"},"message":"OPENJPA-133.  Change the processing of the getMethod() method to properly recognize non-public callback methods, along with validating the parameter types.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@504970 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"92a08d211a0851cc30caa6cd6c08218ef3e97b30","url":"https://api.github.com/repos/apache/openjpa/git/trees/92a08d211a0851cc30caa6cd6c08218ef3e97b30"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/859da3f913d8b4f0b142fe872d78847f958f0614","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/859da3f913d8b4f0b142fe872d78847f958f0614","html_url":"https://github.com/apache/openjpa/commit/859da3f913d8b4f0b142fe872d78847f958f0614","comments_url":"https://api.github.com/repos/apache/openjpa/commits/859da3f913d8b4f0b142fe872d78847f958f0614/comments","author":null,"committer":null,"parents":[{"sha":"485cfd37ca2e810c0cdc6bc897fe73109bfd5e3c","url":"https://api.github.com/repos/apache/openjpa/commits/485cfd37ca2e810c0cdc6bc897fe73109bfd5e3c","html_url":"https://github.com/apache/openjpa/commit/485cfd37ca2e810c0cdc6bc897fe73109bfd5e3c"}],"stats":{"total":25,"additions":7,"deletions":18},"files":[{"sha":"8de55d3ce465874a41096fe13ca5f78a4b16cad6","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/event/MethodLifecycleCallbacks.java","status":"modified","additions":7,"deletions":18,"changes":25,"blob_url":"https://github.com/apache/openjpa/blob/859da3f913d8b4f0b142fe872d78847f958f0614/openjpa-kernel/src/main/java/org/apache/openjpa/event/MethodLifecycleCallbacks.java","raw_url":"https://github.com/apache/openjpa/raw/859da3f913d8b4f0b142fe872d78847f958f0614/openjpa-kernel/src/main/java/org/apache/openjpa/event/MethodLifecycleCallbacks.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/event/MethodLifecycleCallbacks.java?ref=859da3f913d8b4f0b142fe872d78847f958f0614","patch":"@@ -96,32 +96,21 @@ public String toString() {\n      * the proper exception on error.\n      */\n     protected static Method getMethod(Class cls, String method, Class[] args) {\n-        try {\n-            Method[] methods = cls.getMethods();\n+        Class currentClass = cls;\n+        do {\n+            Method[] methods = currentClass.getDeclaredMethods();\n             for (int i = 0; i < methods.length; i++) {\n                 if (!method.equals(methods[i].getName()))\n                     continue;\n \n                 if (isAssignable(methods[i].getParameterTypes(), args))\n                     return methods[i];\n             }\n+        } while ((currentClass = currentClass.getSuperclass()) != null);\n \n-            return cls.getMethod(method, args);\n-\n-        } catch (Throwable t) {\n-            try {\n-                // try again with the declared methods, which will\n-                // check private and protected methods\n-                Method m = cls.getDeclaredMethod(method, args);\n-                if (!m.isAccessible())\n-                    m.setAccessible(true);\n-                return m;\n-            } catch (Throwable t2) {\n-                throw new UserException(_loc.get(\"method-notfound\",\n-                    cls.getName(), method,\n-                        args == null ? null : Arrays.asList(args)), t);\n-            }\n-\t\t}\n+        // if we get here, no suitable method was found\n+        throw new UserException(_loc.get(\"method-notfound\", cls.getName(),\n+                method, args == null ? null : Arrays.asList(args)));\n \t}\n \n     /** "}]}

