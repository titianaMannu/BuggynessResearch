{"sha":"85a609aa5d3ac8a83048e121526f3519d7c8bdfc","node_id":"MDY6Q29tbWl0MjA2MzY0Ojg1YTYwOWFhNWQzYWM4YTgzMDQ4ZTEyMTUyNmYzNTE5ZDdjOGJkZmM=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2009-09-23T19:12:07Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2009-09-23T19:12:07Z"},"message":"OPENJPA-1116 Annotation Strategy not working.  Checking in testcases as code patch already committed in r808703 by Pinaki.  Patches contributed by Ashish Paliwal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@818212 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c76878bc9aab09ae7e535a029816e6a93dbf1fa1","url":"https://api.github.com/repos/apache/openjpa/git/trees/c76878bc9aab09ae7e535a029816e6a93dbf1fa1"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/85a609aa5d3ac8a83048e121526f3519d7c8bdfc","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/85a609aa5d3ac8a83048e121526f3519d7c8bdfc","html_url":"https://github.com/apache/openjpa/commit/85a609aa5d3ac8a83048e121526f3519d7c8bdfc","comments_url":"https://api.github.com/repos/apache/openjpa/commits/85a609aa5d3ac8a83048e121526f3519d7c8bdfc/comments","author":null,"committer":null,"parents":[{"sha":"2eeca2a8ac545585a51404c94e59c63559395f05","url":"https://api.github.com/repos/apache/openjpa/commits/2eeca2a8ac545585a51404c94e59c63559395f05","html_url":"https://github.com/apache/openjpa/commit/2eeca2a8ac545585a51404c94e59c63559395f05"}],"stats":{"total":233,"additions":233,"deletions":0},"files":[{"sha":"ee6ff1888583d37ce7de1d26e70028e9a2040725","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/strategy/Address.java","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/apache/openjpa/blob/85a609aa5d3ac8a83048e121526f3519d7c8bdfc/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/strategy/Address.java","raw_url":"https://github.com/apache/openjpa/raw/85a609aa5d3ac8a83048e121526f3519d7c8bdfc/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/strategy/Address.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/strategy/Address.java?ref=85a609aa5d3ac8a83048e121526f3519d7c8bdfc","patch":"@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.jdbc.strategy;\n+\n+import java.util.*;\n+import javax.persistence.*;\n+\n+@Entity\n+public class Address {\n+\t@Id\n+\t@GeneratedValue(strategy = GenerationType.IDENTITY)\n+\t@Column(name = \"id_address\")\n+\tprivate long idAddress;\n+\n+\t@Basic\n+\t@Column(nullable = false, length = 30)\n+\tprivate String city;\n+\n+\t\n+\tpublic Address() {}\n+\n+\tpublic String getCity() {\n+\t\treturn city;\n+\t}\n+\n+\tpublic void setCity(String city) {\n+\t\tthis.city = city;\n+\t}\n+\n+\tpublic long getIdAddress() {\n+\t\treturn idAddress;\n+\t}\n+\n+\tpublic void setIdAddress(long idAddress) {\n+\t\tthis.idAddress = idAddress;\n+\t}\n+}\n+"},{"sha":"43cc66b9d20dc4aa27f5f57ce3cf4b1361f3b82d","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/strategy/InnerJoinStrategy.java","status":"added","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/apache/openjpa/blob/85a609aa5d3ac8a83048e121526f3519d7c8bdfc/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/strategy/InnerJoinStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/85a609aa5d3ac8a83048e121526f3519d7c8bdfc/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/strategy/InnerJoinStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/strategy/InnerJoinStrategy.java?ref=85a609aa5d3ac8a83048e121526f3519d7c8bdfc","patch":"@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.jdbc.strategy;\n+\n+import org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration;\n+import org.apache.openjpa.jdbc.kernel.JDBCStore;\n+import org.apache.openjpa.jdbc.meta.strats.RelationFieldStrategy;\n+import org.apache.openjpa.jdbc.sql.Select;\n+import org.apache.openjpa.kernel.OpenJPAStateManager;\n+\n+public class InnerJoinStrategy extends RelationFieldStrategy {\n+    public void selectEagerJoin(Select sel, OpenJPAStateManager sm,\n+        JDBCStore store, JDBCFetchConfiguration fetch, int eagerMode) {\n+\n+        // add field to inner join to make sure that \"inner join\" is made \n+        // rather than default \"left outer join\"\t \n+        fetch.addFetchInnerJoin(field.getFullName(false));\t \n+        super.selectEagerJoin(sel, sm, store, fetch, eagerMode);\n+    } \n+}\n+"},{"sha":"89cce5c80bfd926f2819398518d149be66e9c3e2","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/strategy/Person.java","status":"added","additions":81,"deletions":0,"changes":81,"blob_url":"https://github.com/apache/openjpa/blob/85a609aa5d3ac8a83048e121526f3519d7c8bdfc/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/strategy/Person.java","raw_url":"https://github.com/apache/openjpa/raw/85a609aa5d3ac8a83048e121526f3519d7c8bdfc/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/strategy/Person.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/strategy/Person.java?ref=85a609aa5d3ac8a83048e121526f3519d7c8bdfc","patch":"@@ -0,0 +1,81 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.jdbc.strategy;\n+\n+import java.util.*;\n+import javax.persistence.*;\n+\n+import org.apache.openjpa.persistence.jdbc.Strategy;\n+import org.apache.openjpa.persistence.jdbc.Strategy;\n+\n+@Entity\n+public class Person {\n+\t\n+\tprivate long idPerson;\n+\t\n+\tprivate String name;\n+\n+\tprivate int age;\n+\t\t\n+\tprivate Address address;\n+\n+\tpublic Person() {}\n+\n+\t@Basic\n+\t@Column(nullable = false)\n+\tpublic int getAge() {\n+\t\treturn age;\n+\t}\n+\n+\tpublic void setAge(int age) {\n+\t\tthis.age = age;\n+\t}\n+\n+\t@Basic\n+\t@Column(nullable = false, length = 30)\n+\tpublic String getName() {\n+\t\treturn name;\n+\t}\n+\n+\tpublic void setName(String name) {\n+\t\tthis.name = name;\n+\t}\n+\n+\t@Id\n+\t@GeneratedValue(strategy = GenerationType.SEQUENCE)\n+\t@Column(name = \"id_person\")\n+\tpublic long getIdPerson() {\n+\t\treturn idPerson;\n+\t}\n+\n+\tpublic void setIdPerson(long idPerson) {\n+\t\tthis.idPerson = idPerson;\n+\t}\n+\n+\t@OneToOne(cascade = CascadeType.ALL, fetch = FetchType.EAGER)\n+\t@Strategy(value = \"org.apache.openjpa.persistence.jdbc.strategy.InnerJoinStrategy\" )\n+\tpublic Address getAddress() {\n+\t\treturn address;\n+\t}\n+\n+\tpublic void setAddress(Address address) {\n+\t\tthis.address = address;\n+\t}\n+}\n+"},{"sha":"9c9d6bae48c93c9876eb1189cb9bfd319bb41169","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/strategy/TestStrategyAnnotaion.java","status":"added","additions":52,"deletions":0,"changes":52,"blob_url":"https://github.com/apache/openjpa/blob/85a609aa5d3ac8a83048e121526f3519d7c8bdfc/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/strategy/TestStrategyAnnotaion.java","raw_url":"https://github.com/apache/openjpa/raw/85a609aa5d3ac8a83048e121526f3519d7c8bdfc/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/strategy/TestStrategyAnnotaion.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/strategy/TestStrategyAnnotaion.java?ref=85a609aa5d3ac8a83048e121526f3519d7c8bdfc","patch":"@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.jdbc.strategy;\n+\n+import java.util.List;\n+\n+import javax.persistence.EntityManager;\n+import javax.persistence.EntityManagerFactory;\n+import javax.persistence.Persistence;\n+\n+import junit.framework.TestCase;\n+\n+import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n+\n+\n+public class TestStrategyAnnotaion extends SingleEMFTestCase {\n+\t public void testStrategy() {\n+\t    \tEntityManagerFactory emf = Persistence.\n+\t       \t\tcreateEntityManagerFactory(\"example\", System.getProperties());\n+\t   \tEntityManager em = emf.createEntityManager();\n+\t\tem.getTransaction().begin();\n+\t\tPerson person = new Person();\n+\t\tperson.setName(\"parul\");\n+\t\tperson.setAge(21);\n+\n+\t\t// no address entered for person.\n+\t\tem.persist(person);\n+\t\tem.getTransaction().commit();\n+\t\tem.clear();\n+\n+\t\t// In case of inner join, the result set should be empty\n+\t\tList pers = em.createQuery(\"select p from Person p\").getResultList();\n+\t\tassertTrue(pers.isEmpty());\n+\t}\n+}\n+"},{"sha":"af5e4c0ac09394bd196066d43718bdcfdf98aa28","filename":"openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/85a609aa5d3ac8a83048e121526f3519d7c8bdfc/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/85a609aa5d3ac8a83048e121526f3519d7c8bdfc/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml?ref=85a609aa5d3ac8a83048e121526f3519d7c8bdfc","patch":"@@ -234,4 +234,13 @@\n         </properties>\n     </persistence-unit>    \n \n+    <persistence-unit name=\"example\" transaction-type=\"RESOURCE_LOCAL\">\n+        <class>org.apache.openjpa.persistence.jdbc.strategy.Person</class>\n+        <class>org.apache.openjpa.persistence.jdbc.strategy.Address</class>\n+        <properties>\n+            <property name=\"openjpa.jdbc.SynchronizeMappings\" value=\"buildSchema\"/>\n+        </properties>\n+    </persistence-unit>\n+\n </persistence>\n+"}]}

