{"sha":"8607e0b3b4050a29c93c15bdd23fe676bf76490f","node_id":"MDY6Q29tbWl0MjA2MzY0Ojg2MDdlMGIzYjQwNTBhMjljOTNjMTViZGQyM2ZlNjc2YmY3NjQ5MGY=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-12-08T14:51:44Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-12-08T14:51:44Z"},"message":"OPENJPA-1397: Allow some columns of compound key to be null. \n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@888417 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"3ee1f7bb2b64aae0bff2d6bb64a551bee54637fe","url":"https://api.github.com/repos/apache/openjpa/git/trees/3ee1f7bb2b64aae0bff2d6bb64a551bee54637fe"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/8607e0b3b4050a29c93c15bdd23fe676bf76490f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/8607e0b3b4050a29c93c15bdd23fe676bf76490f","html_url":"https://github.com/apache/openjpa/commit/8607e0b3b4050a29c93c15bdd23fe676bf76490f","comments_url":"https://api.github.com/repos/apache/openjpa/commits/8607e0b3b4050a29c93c15bdd23fe676bf76490f/comments","author":null,"committer":null,"parents":[{"sha":"3f3d586c7301b1f2f926fb40fac194b6229d970e","url":"https://api.github.com/repos/apache/openjpa/commits/3f3d586c7301b1f2f926fb40fac194b6229d970e","html_url":"https://github.com/apache/openjpa/commit/3f3d586c7301b1f2f926fb40fac194b6229d970e"}],"stats":{"total":7,"additions":5,"deletions":2},"files":[{"sha":"eaaf96650447faf726eda380388d7abb6918cf77","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ClassMapping.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/8607e0b3b4050a29c93c15bdd23fe676bf76490f/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ClassMapping.java","raw_url":"https://github.com/apache/openjpa/raw/8607e0b3b4050a29c93c15bdd23fe676bf76490f/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ClassMapping.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ClassMapping.java?ref=8607e0b3b4050a29c93c15bdd23fe676bf76490f","patch":"@@ -172,6 +172,7 @@ private Object getObjectId(ClassMapping cls, JDBCStore store, Result res,\n         Joinable join;\n         int pkIdx;\n         boolean canReadDiscriminator = true;\n+        boolean isNullPK = true;\n         for (int i = 0; i < pks.length; i++) {\n             // we know that all pk column join mappings use primary key fields,\n             // cause this mapping uses the oid as its primary key (we recursed\n@@ -186,10 +187,12 @@ private Object getObjectId(ClassMapping cls, JDBCStore store, Result res,\n                 vals[pkIdx] = join.getPrimaryKeyValue(res, join.getColumns(),\n                     fk, store, joins);\n                 res.endDataRequest();\n-                if (vals[pkIdx] == null)\n-                    return null;\n+                isNullPK = isNullPK && vals[pkIdx] == null;\n             }\n         }\n+        if (isNullPK) {\n+            return null;\n+        }\n \n         // the oid data is loaded by the base type, but if discriminator data\n         // is present, make sure to use it to construct the actual oid instance"}]}

