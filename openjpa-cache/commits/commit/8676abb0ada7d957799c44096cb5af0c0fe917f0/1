{"sha":"8676abb0ada7d957799c44096cb5af0c0fe917f0","node_id":"MDY6Q29tbWl0MjA2MzY0Ojg2NzZhYmIwYWRhN2Q5NTc3OTljNDQwOTZjYjVhZjBjMGZlOTE3ZjA=","commit":{"author":{"name":"Marc Prud'hommeaux","email":"mprudhom@apache.org","date":"2006-09-05T19:28:36Z"},"committer":{"name":"Marc Prud'hommeaux","email":"mprudhom@apache.org","date":"2006-09-05T19:28:36Z"},"message":"Fixed empty binary tags to be unary (since it was causing problems with some XML validators; fixed duplicate 'ref_guide_runtime_jpaquery' id, which appears like it should have been named 'ref_guide_runtime_jpaextent'\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@440450 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"119a7b4bb78c6266f6536c2a3276d254178b7a72","url":"https://api.github.com/repos/apache/openjpa/git/trees/119a7b4bb78c6266f6536c2a3276d254178b7a72"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/8676abb0ada7d957799c44096cb5af0c0fe917f0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/8676abb0ada7d957799c44096cb5af0c0fe917f0","html_url":"https://github.com/apache/openjpa/commit/8676abb0ada7d957799c44096cb5af0c0fe917f0","comments_url":"https://api.github.com/repos/apache/openjpa/commits/8676abb0ada7d957799c44096cb5af0c0fe917f0/comments","author":null,"committer":null,"parents":[{"sha":"c1a146714e70b5c64d67916acde8c2aa2b5cd753","url":"https://api.github.com/repos/apache/openjpa/commits/c1a146714e70b5c64d67916acde8c2aa2b5cd753","html_url":"https://github.com/apache/openjpa/commit/c1a146714e70b5c64d67916acde8c2aa2b5cd753"}],"stats":{"total":1136,"additions":562,"deletions":574},"files":[{"sha":"4bd8d95d34ffa8a92892510483085f5fb327cb30","filename":"openjpa-project/src/doc/manual/jpa_overview_arch.xml","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/jpa_overview_arch.xml","raw_url":"https://github.com/apache/openjpa/raw/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/jpa_overview_arch.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_arch.xml?ref=8676abb0ada7d957799c44096cb5af0c0fe917f0","patch":"@@ -17,8 +17,8 @@ of the JPA architecture.\n     <mediaobject>\n         <imageobject>\n             <!-- PNG image data 400 x 256 (see README) -->\n-            <imagedata fileref=\"img/jpa-arch.png\" width=\"267px\">\n-            </imagedata>\n+            <imagedata fileref=\"img/jpa-arch.png\" width=\"267px\"/>\n+            \n         </imageobject>\n         <textobject>\n             <phrase>\n@@ -262,8 +262,8 @@ application.\n         <mediaobject>\n             <imageobject>\n                 <!-- PNG image data, 427 x 355 (see README) -->\n-                <imagedata fileref=\"img/jpa-exceptions.png\" width=\"285px\">\n-                </imagedata>\n+                <imagedata fileref=\"img/jpa-exceptions.png\" width=\"285px\"/>\n+                \n             </imageobject>\n             <textobject>\n                 <phrase>"},{"sha":"67810e7aeaf3771323eac3e0ed22392e582658b7","filename":"openjpa-project/src/doc/manual/jpa_overview_em.xml","status":"modified","additions":13,"deletions":13,"changes":26,"blob_url":"https://github.com/apache/openjpa/blob/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/jpa_overview_em.xml","raw_url":"https://github.com/apache/openjpa/raw/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/jpa_overview_em.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_em.xml?ref=8676abb0ada7d957799c44096cb5af0c0fe917f0","patch":"@@ -10,8 +10,8 @@\n     <mediaobject>\n         <imageobject>\n             <!-- PNG image data, 283 x 391 (see README) -->\n-            <imagedata fileref=\"img/entitymanager.png\" width=\"189px\">\n-            </imagedata>\n+            <imagedata fileref=\"img/entitymanager.png\" width=\"189px\"/>\n+            \n         </imageobject>\n     </mediaobject>\n     <para>\n@@ -401,7 +401,7 @@ objects without incurring the overhead of multiple remote method invocations.\n         <para>\n JPA provides support for this pattern by automatically detaching\n entities when they are serialized or when a persistence context ends (see\n-<xref linkend=\"jpa_overview_emfactory_perscontext\"></xref> for an exploration of\n+<xref linkend=\"jpa_overview_emfactory_perscontext\"/> for an exploration of\n persistence contexts). The JPA <emphasis>merge</emphasis> API\n re-attaches detached entities. This allows you to detach a persistent instance,\n modify the detached instance offline, and merge the instance back into an\n@@ -432,7 +432,7 @@ normal optimistic conflict were detected.\n             <para>\n OpenJPA offers enhancements to JPA detachment functionality,\n including additional options to control which fields are detached. See\n-<xref linkend=\"ref_guide_detach\"></xref> in the Reference Guide for details.\n+<xref linkend=\"ref_guide_detach\"/> in the Reference Guide for details.\n             </para>\n         </note>\n         <para>\n@@ -518,7 +518,7 @@ themselves did not change in the transaction.\n         <note>\n             <para>\n OpenJPA has additional APIs for controlling object locking. See\n-<xref linkend=\"ref_guide_locking\"></xref> in the Reference Guide for details.\n+<xref linkend=\"ref_guide_locking\"/> in the Reference Guide for details.\n             </para>\n         </note>\n         <para>\n@@ -528,8 +528,8 @@ APIs presented in this section.\n         <mediaobject>\n             <imageobject>\n                 <!-- PNG image data, 445 x 337 (see README) -->\n-                <imagedata fileref=\"img/jpa-state-transitions.png\" width=\"297px\">\n-                </imagedata>\n+                <imagedata fileref=\"img/jpa-state-transitions.png\" width=\"297px\"/>\n+                \n             </imageobject>\n         </mediaobject>\n     </section>\n@@ -709,7 +709,7 @@ persistent identities of the managed objects in the persistence context. The\n following methods allow you to interact with the management of persistent\n identities. The behavior of these methods is deeply affected by the persistence\n context type of the <classname>EntityManager</classname>; see\n-<xref linkend=\"jpa_overview_emfactory_perscontext\"></xref> for an explanation of\n+<xref linkend=\"jpa_overview_emfactory_perscontext\"/> for an explanation of\n persistence contexts.\n         </para>\n <programlisting>\n@@ -867,7 +867,7 @@ in the current transaction to the datastore. If the <classname>EntityManager\n </classname> does not already have a connection to the datastore, it obtains one\n for the flush and retains it for the duration of the transaction. Any exceptions\n during flush cause the transaction to be marked for rollback. See\n-<xref linkend=\"jpa_overview_trans\"></xref>.\n+<xref linkend=\"jpa_overview_trans\"/>.\n         </para>\n         <para>\n Flushing requires an active transaction. If there isn't a transaction in\n@@ -924,7 +924,7 @@ instances.\n OpenJPA only flushes before a query if the query might be affected by data\n changed in the current transaction. Additionally, OpenJPA allows fine-grained\n control over flushing behavior. See the Reference Guide's\n-<xref linkend=\"ref_guide_dbsetup_retain\"></xref>.\n+<xref linkend=\"ref_guide_dbsetup_retain\"/>.\n             </para>\n         </note>\n <programlisting>\n@@ -982,7 +982,7 @@ public Query createQuery (String query);\n <classname>Query</classname> objects are used to find entities matching certain\n criteria. The <methodname>createQuery</methodname> method creates a query using\n the given Java Persistence Query Language (JPQL) string. See\n-<xref linkend=\"jpa_overview_query\"></xref> for details.\n+<xref linkend=\"jpa_overview_query\"/> for details.\n         </para>\n <programlisting>\n public Query createNamedQuery (String name);\n@@ -991,7 +991,7 @@ public Query createNamedQuery (String name);\n This method retrieves a query defined in metadata by name. The returned\n <classname>Query</classname> instance is initialized with the information\n declared in metadata. For more information on named queries, read\n-<xref linkend=\"jpa_overview_query_named\"></xref>.\n+<xref linkend=\"jpa_overview_query_named\"/>.\n         </para>\n <programlisting>\n public Query createNativeQuery (String sql);\n@@ -1001,7 +1001,7 @@ public Query createNativeQuery (String sql, String resultMapping);\n         <para>\n <emphasis>Native</emphasis> queries are queries in the datastore's native\n language. For relational databases, this the Structured Query Language (SQL).\n-<xref linkend=\"jpa_overview_sqlquery\"></xref> elaborates on JPA's\n+<xref linkend=\"jpa_overview_sqlquery\"/> elaborates on JPA's\n native query support.\n         </para>\n     </section>"},{"sha":"c4134a0aecb62254d109f04f18d34d7a120fa273","filename":"openjpa-project/src/doc/manual/jpa_overview_emfactory.xml","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/apache/openjpa/blob/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/jpa_overview_emfactory.xml","raw_url":"https://github.com/apache/openjpa/raw/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/jpa_overview_emfactory.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_emfactory.xml?ref=8676abb0ada7d957799c44096cb5af0c0fe917f0","patch":"@@ -10,8 +10,8 @@\n     <mediaobject>\n         <imageobject>\n             <!-- PNG image data, 418 x 274 (see README) -->\n-            <imagedata fileref=\"img/entitymanagerfactory.png\" width=\"279px\">\n-            </imagedata>\n+            <imagedata fileref=\"img/entitymanagerfactory.png\" width=\"279px\"/>\n+            \n         </imageobject>\n     </mediaobject>\n     <para>\n@@ -64,7 +64,7 @@ EntityManagerFactory</classname> implementations, but we recommend using the\n Java Connector Architecture (JCA) in a managed environment, or the <classname>\n Persistence</classname> class' <methodname>createEntityManagerFactory\n </methodname> methods in an unmanaged environment, as described in\n-<xref linkend=\"jpa_overview_persistence\"></xref>. These strategies allow\n+<xref linkend=\"jpa_overview_persistence\"/>. These strategies allow\n vendors to pool factories, cutting down on resource utilization.\n         </para>\n         <para>\n@@ -153,7 +153,7 @@ createEntityManager</methodname>:\n The last option uses reflection to configure any property of OpenJPA's\n <classname>EntityManager</classname> implementation with the value supplied in\n your map. The first options correspond exactly to the same-named OpenJPA\n-configuration keys described in <xref linkend=\"ref_guide_conf\"></xref> of the\n+configuration keys described in <xref linkend=\"ref_guide_conf\"/> of the\n Reference Guide.\n             </para>\n         </note>\n@@ -186,7 +186,7 @@ When a persistence context ends, previously-managed entities become <emphasis>\n detached</emphasis>. A detached entity is no longer under the control of the\n <classname>EntityManager</classname>, and no longer has access to datastore\n resources. We discuss detachment is detail in\n-<xref linkend=\"jpa_overview_em_lifecycle\"></xref>. For now, it is sufficient to\n+<xref linkend=\"jpa_overview_em_lifecycle\"/>. For now, it is sufficient to\n know that detachment as has two obvious consequences:\n         </para>\n         <orderedlist>\n@@ -208,8 +208,8 @@ entity will create a new managed entity with the same identity.\n         <note>\n             <para>\n OpenJPA offers several features related to detaching entities. See\n-<xref linkend=\"ref_guide_detach\"></xref> in the Reference Guide.\n-<xref linkend=\"ref_guide_detach_graph\"></xref> in particular describes how to\n+<xref linkend=\"ref_guide_detach\"/> in the Reference Guide.\n+<xref linkend=\"ref_guide_detach_graph\"/> in particular describes how to\n use the <literal>DetachState</literal> setting to boost the performance of\n merging detached entities.\n             </para>\n@@ -256,7 +256,7 @@ object.\n             <para>\n When the next transaction begins, the <classname>EntityManager</classname> will\n begin a new persistence context, and will again start returning managed\n-entities. As you'll see in <xref linkend=\"jpa_overview_em\"></xref>, you can\n+entities. As you'll see in <xref linkend=\"jpa_overview_em\"/>, you can\n also merge the previously-detached entites back into the new persistence\n context.\n             </para>"},{"sha":"86cec09f881d967601a2232bd842be4888142ce4","filename":"openjpa-project/src/doc/manual/jpa_overview_mapping.xml","status":"modified","additions":62,"deletions":62,"changes":124,"blob_url":"https://github.com/apache/openjpa/blob/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/jpa_overview_mapping.xml","raw_url":"https://github.com/apache/openjpa/raw/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/jpa_overview_mapping.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_mapping.xml?ref=8676abb0ada7d957799c44096cb5af0c0fe917f0","patch":"@@ -58,20 +58,20 @@ your relational featureSelection.\n     <note>\n         <para>\n OpenJPA offers tools to automate mapping and schema creation. See\n-<xref linkend=\"ref_guide_mapping\"></xref> in the Reference Guide.\n+<xref linkend=\"ref_guide_mapping\"/> in the Reference Guide.\n         </para>\n     </note>\n     <para>\n Throughout this chapter, we will draw on the object featureSelection introduced in\n-<xref linkend=\"jpa_overview_meta\"></xref>. We present that featureSelection again below.\n+<xref linkend=\"jpa_overview_meta\"/>. We present that featureSelection again below.\n As we discuss various aspects of mapping metadata, we will zoom in on specific\n areas of the featureSelection and show how we map the object layer to the relational layer.\n     </para>\n     <mediaobject>\n         <imageobject>\n             <!-- PNG image data, 553 x 580 (see README) -->\n-            <imagedata fileref=\"img/jpa-meta-featureSelection.png\" width=\"369px\">\n-            </imagedata>\n+            <imagedata fileref=\"img/jpa-meta-featureSelection.png\" width=\"369px\"/>\n+            \n         </imageobject>\n     </mediaobject>\n     <para>\n@@ -100,7 +100,7 @@ The <classname>Table</classname> annotation specifies the table for an entity\n class. If you omit the <classname>Table</classname> annotation, base entity\n classes default to a table with their unqualified class name. The default table\n of an entity subclass depends on the inheritance strategy, as you will see in\n-<xref linkend=\"jpa_overview_mapping_inher\"></xref>.\n+<xref linkend=\"jpa_overview_mapping_inher\"/>.\n         </para>\n         <para>\n <classname>Table</classname>s have the following properties:\n@@ -173,8 +173,8 @@ are in the default schema.\n         <mediaobject>\n             <imageobject>\n                 <!-- PNG image data, 513 x 410 (see README) -->\n-                <imagedata fileref=\"img/mapping-tables.png\" width=\"341px\">\n-                </imagedata>\n+                <imagedata fileref=\"img/mapping-tables.png\" width=\"341px\"/>\n+                \n             </imageobject>\n         </mediaobject>\n         <para>\n@@ -703,8 +703,8 @@ diagram includes this data in its encoding of our mappings.\n         <mediaobject>\n             <imageobject>\n                 <!-- PNG image data, 513 x 410 (see README) -->\n-                <imagedata fileref=\"img/jpa-mapping-identity.png\" width=\"341px\">\n-                </imagedata>\n+                <imagedata fileref=\"img/jpa-mapping-identity.png\" width=\"341px\"/>\n+                \n             </imageobject>\n         </mediaobject>\n         <para>\n@@ -883,7 +883,7 @@ expressed in XML form:\n One aspect of identity mapping not covered in the previous section is JPA's\n ability to automatically assign a value to your numeric identity fields using\n <emphasis>generators</emphasis>. We discussed the available generator types in\n-<xref linkend=\"jpa_overview_meta_id\"></xref>. Now we show you how to define\n+<xref linkend=\"jpa_overview_meta_id\"/>. Now we show you how to define\n named generators.\n         </para>\n         <section id=\"jpa_overview_mapping_sequence_seqgen\">\n@@ -978,7 +978,7 @@ implementations in the <literal>sequenceName</literal> property. You can also\n set the <literal>sequenceName</literal> to <literal>system</literal> to use the\n system sequence defined by the <link linkend=\"openjpa.Sequence\"><literal>\n openjpa.Sequence</literal></link> configuration property. See the Reference\n-Guide's <xref linkend=\"ref_guide_sequence\"></xref> for details.\n+Guide's <xref linkend=\"ref_guide_sequence\"/> for details.\n                 </para>\n             </note>\n             <para>\n@@ -1493,7 +1493,7 @@ The following sections describe JPA's standard inheritance strategies.\n             <para>\n OpenJPA allows you to vary your inheritance strategy for each class, rather than\n forcing a single strategy per inheritance hierarchy. See\n-<xref linkend=\"ref_guide_mapping_jpa\"></xref> in the Reference Guide for\n+<xref linkend=\"ref_guide_mapping_jpa\"/> in the Reference Guide for\n details.\n             </para>\n         </note>\n@@ -1527,8 +1527,8 @@ the hierarchy to the base class' table.\n             <mediaobject>\n                 <imageobject>\n                     <!-- PNG image data, 266 x 203 (see README) -->\n-                    <imagedata fileref=\"img/inher-superclass-table.png\" width=\"177px\">\n-                    </imagedata>\n+                    <imagedata fileref=\"img/inher-superclass-table.png\" width=\"177px\"/>\n+                    \n                 </imageobject>\n             </mediaobject>\n             <para>\n@@ -1701,8 +1701,8 @@ inheritance mapping.\n             <mediaobject>\n                 <imageobject>\n                     <!-- PNG image data, 256 x 229 (see README) -->\n-                    <imagedata fileref=\"img/jpa-inher-joined.png\" width=\"171px\">\n-                    </imagedata>\n+                    <imagedata fileref=\"img/jpa-inher-joined.png\" width=\"171px\"/>\n+                    \n                 </imageobject>\n             </mediaobject>\n             <para>\n@@ -1732,7 +1732,7 @@ identity field, defaults to that field's column name.\n <literal>String columnDefinition</literal>: This property has the same meaning\n as the <literal>columnDefinition</literal> property on the <classname>Column\n </classname> annotation, described in\n-<xref linkend=\"jpa_overview_mapping_column\"></xref>.\n+<xref linkend=\"jpa_overview_mapping_column\"/>.\n                     </para>\n                 </listitem>\n             </itemizedlist>\n@@ -1907,7 +1907,7 @@ this mapping is very fast.\n                     <para>\n When executing a select against a hierarchy that uses joined subclass table\n inheritance, you must consider how to load subclass state.\n-<xref linkend=\"ref_guide_perfpack_eager\"></xref> in the Reference Guide\n+<xref linkend=\"ref_guide_perfpack_eager\"/> in the Reference Guide\n describes OpenJPA's options for efficient data loading.\n                     </para>\n                 </note>\n@@ -1948,8 +1948,8 @@ tables.\n             <mediaobject>\n                 <imageobject>\n                     <!-- PNG image data, 283 x 247 (see README) -->\n-                    <imagedata fileref=\"img/inher-tpc.png\" width=\"189px\">\n-                    </imagedata>\n+                    <imagedata fileref=\"img/inher-tpc.png\" width=\"189px\"/>\n+                    \n                 </imageobject>\n             </mediaobject>\n             <para>\n@@ -1965,7 +1965,7 @@ well. Thus the <literal>TABLOID</literal> table would contain columns for\n <literal>isbn</literal>, <literal>title</literal>, and other <classname>\n Magazine</classname> fields. These columns would default to the names used in\n <classname>Magazine</classname>'s mapping metadata.\n-<xref linkend=\"jpa_overview_mapping_embed\"></xref> will show you how to use\n+<xref linkend=\"jpa_overview_mapping_embed\"/> will show you how to use\n <literal>AttributeOverride</literal>s and <literal>AssociationOverride</literal>\n s to override superclass field mappings.\n             </para>\n@@ -2054,7 +2054,7 @@ possible subclass), or a complex <literal>UNION</literal>.\n                 </para>\n                 <note>\n                     <para>\n-<xref linkend=\"ref_guide_mapping_limits_tpc\"></xref> in the Reference Guide\n+<xref linkend=\"ref_guide_mapping_limits_tpc\"/> in the Reference Guide\n describes the limitations OpenJPA places on table-per-class mapping.\n                     </para>\n                 </note>\n@@ -2071,8 +2071,8 @@ document with inheritance information. Here is the complete featureSelection:\n             <mediaobject>\n                 <imageobject>\n                     <!-- PNG image data, 513 x 410 (see README) -->\n-                    <imagedata fileref=\"img/jpa-inher-all.png\" width=\"341px\">\n-                    </imagedata>\n+                    <imagedata fileref=\"img/jpa-inher-all.png\" width=\"341px\"/>\n+                    \n                 </imageobject>\n             </mediaobject>\n             <para>\n@@ -2368,7 +2368,7 @@ column. Defaults to 31.\n <literal>String columnDefinition</literal>: This property has the same meaning\n as the <literal>columnDefinition</literal> property on the <classname>Column\n </classname> annotation, described in\n-<xref linkend=\"jpa_overview_mapping_column\"></xref>.\n+<xref linkend=\"jpa_overview_mapping_column\"/>.\n                 </para>\n             </listitem>\n             <listitem>\n@@ -2451,7 +2451,7 @@ a discriminator to make some operations more efficient, but do not require one.\n             </para>\n             <para>\n OpenJPA defines additional discriminator strategies; see\n-<xref linkend=\"ref_guide_mapping_jpa\"></xref> in the Reference Guide for\n+<xref linkend=\"ref_guide_mapping_jpa\"/> in the Reference Guide for\n details. OpenJPA also supports final entity classes. OpenJPA does not use a\n discriminator on final classes.\n             </para>\n@@ -2463,8 +2463,8 @@ JPA mappings. We first extend our diagram with discriminator columns:\n         <mediaobject>\n             <imageobject>\n                 <!-- PNG image data, 513 x 410 (see README) -->\n-                <imagedata fileref=\"img/jpa-discrim-all.png\" width=\"341px\">\n-                </imagedata>\n+                <imagedata fileref=\"img/jpa-discrim-all.png\" width=\"341px\"/>\n+                \n             </imageobject>\n         </mediaobject>\n         <para>\n@@ -2730,15 +2730,15 @@ The same metadata expressed in XML:\n         <para>\n The following sections enumerate the myriad of field mappings JPA\n supports. JPA augments the persistence metadata covered in\n-<xref linkend=\"jpa_overview_meta\"></xref> with many new object-relational\n+<xref linkend=\"jpa_overview_meta\"/> with many new object-relational\n annotations. As we explore the library of standard mappings, we introduce each\n of these enhancements in context.\n         </para>\n         <note>\n             <para>\n OpenJPA supports many additional field types, and allows you to create custom\n mappings for unsupported field types or database schemas. See the Reference\n-Guide's <xref linkend=\"ref_guide_mapping\"></xref> for complete coverage of\n+Guide's <xref linkend=\"ref_guide_mapping\"/> for complete coverage of\n OpenJPA's mapping capabilities.\n             </para>\n         </note>\n@@ -2768,7 +2768,7 @@ OpenJPA's mapping capabilities.\n             <para>\n A <emphasis>basic</emphasis> field mapping stores the field value directly into\n a database column. The following field metadata types use basic mapping. These\n-types were defined in <xref linkend=\"jpa_overview_meta_field\"></xref>.\n+types were defined in <xref linkend=\"jpa_overview_meta_field\"/>.\n             </para>\n             <itemizedlist>\n                 <listitem>\n@@ -2792,11 +2792,11 @@ fields.\n             <para>\n In fact, you have already seen examples of basic field mappings in this chapter\n - the mapping of all identity fields in\n-<xref linkend=\"jpa_overview_mapping_identityex\"></xref>. As you saw in that\n+<xref linkend=\"jpa_overview_mapping_identityex\"/>. As you saw in that\n section, to write a basic field mapping you use the <classname>Column\n </classname> annotation to describe the column the field value is stored in. We\n discussed the <classname>Column</classname> annotation in\n-<xref linkend=\"jpa_overview_mapping_column\"></xref>. Recall that the name of\n+<xref linkend=\"jpa_overview_mapping_column\"/>. Recall that the name of\n the column defaults to the field name, and the type of the column defaults to an\n appropriate type for the field type. These defaults allow you to sometimes omit\n the annotation altogether.\n@@ -2962,14 +2962,14 @@ schema, followed by the corresponding mapping metadata. Note that the mapping\n metadata relies on defaults where possible. Also note that as a mapped\n superclass, <classname>Document</classname> can define mappings that will\n automatically transfer to its subclass' tables. In\n-<xref linkend=\"jpa_overview_mapping_embed\"></xref>, you will see how a subclass\n+<xref linkend=\"jpa_overview_mapping_embed\"/>, you will see how a subclass\n can override its mapped superclass' mappings.\n                 </para>\n                 <mediaobject>\n                     <imageobject>\n                         <!-- PNG image data, 580 x 553 (see README) -->\n-                        <imagedata fileref=\"img/jpa-basic-field.png\" width=\"387px\">\n-                        </imagedata>\n+                        <imagedata fileref=\"img/jpa-basic-field.png\" width=\"387px\"/>\n+                        \n                     </imageobject>\n                 </mediaobject>\n                 <example id=\"jpa_overview_mapping_basicex\">\n@@ -3366,15 +3366,15 @@ Define the secondary table on the entity class declaration.\n             <para>\n You define secondary tables with the <classname>SecondaryTable</classname>\n annotation. This annotation has all the properties of the <classname>Table\n-</classname> annotation covered in <xref linkend=\"jpa_overview_mapping_table\">\n-</xref>, plus a <literal> pkJoinColumns</literal> property.\n+</classname> annotation covered in <xref linkend=\"jpa_overview_mapping_table\"/>\n+, plus a <literal> pkJoinColumns</literal> property.\n             </para>\n             <para>\n The <literal>pkJoinColumns</literal> property is an array of <classname>\n PrimaryKeyJoinColumn</classname>s dictating how to join secondary table records\n to their owning primary table records. Each <classname>PrimaryKeyJoinColumn\n </classname> joins a secondary table column to a primary key column in the\n-primary table. See <xref linkend=\"jpa_overview_mapping_inher_joined\"></xref>\n+primary table. See <xref linkend=\"jpa_overview_mapping_inher_joined\"/>\n above for coverage of <classname>PrimaryKeyJoinColumn</classname>'s properties.\n             </para>\n             <para>\n@@ -3384,14 +3384,14 @@ accepts nested <literal>primary-key-join-column</literal> elements.\n             </para>\n             <para>\n In the following example, we move the <literal>Article.content</literal> field\n-we mapped in <xref linkend=\"jpa_overview_mapping_basic\"></xref> into a joined\n+we mapped in <xref linkend=\"jpa_overview_mapping_basic\"/> into a joined\n secondary table, like so:\n             </para>\n             <mediaobject>\n                 <imageobject>\n                     <!-- PNG image data, 284 x 167 (see README) -->\n-                    <imagedata fileref=\"img/secondary-table.png\" width=\"189px\">\n-                    </imagedata>\n+                    <imagedata fileref=\"img/secondary-table.png\" width=\"189px\"/>\n+                    \n                 </imageobject>\n             </mediaobject>\n             <example id=\"jpa_overview_mapping_secondaryex\">\n@@ -3459,7 +3459,7 @@ And in XML:\n                 </secondary>\n             </indexterm>\n             <para>\n-<xref linkend=\"jpa_overview_meta\"></xref> describes JPA's concept of <emphasis>\n+<xref linkend=\"jpa_overview_meta\"/> describes JPA's concept of <emphasis>\n embeddable</emphasis> objects. The field values of embedded objects are stored\n as part of the owning record, rather than as a separate database record. Thus,\n instead of mapping a relation to an embeddable object as a foreign key, you map\n@@ -3469,8 +3469,8 @@ table.\n             <mediaobject>\n                 <imageobject>\n                     <!-- PNG image data, 464 x 203 (see README) -->\n-                    <imagedata fileref=\"img/jpa-embedded.png\" width=\"309px\">\n-                    </imagedata>\n+                    <imagedata fileref=\"img/jpa-embedded.png\" width=\"309px\"/>\n+                    \n                 </imageobject>\n             </mediaobject>\n             <para>\n@@ -3731,8 +3731,8 @@ represented in the database by foreign key columns:\n             <mediaobject>\n                 <imageobject>\n                     <!-- PNG image data, 374 x 386 (see README) -->\n-                    <imagedata fileref=\"img/jpa-direct-relation.png\" width=\"249px\">\n-                    </imagedata>\n+                    <imagedata fileref=\"img/jpa-direct-relation.png\" width=\"249px\"/>\n+                    \n                 </imageobject>\n             </mediaobject>\n             <para>\n@@ -3769,7 +3769,7 @@ unique values for all rows. Defaults to false.\n , <literal>insertable</literal>, <literal> updatable</literal>, <literal>\n columnDefinition</literal>, and <literal>table</literal> properties as the\n <classname> Column</classname> annotation. See\n-<xref linkend=\"jpa_overview_mapping_column\"></xref> for details on these\n+<xref linkend=\"jpa_overview_mapping_column\"/> for details on these\n properties.\n             </para>\n             <para>\n@@ -3828,7 +3828,7 @@ of <classname>JoinColumn</classname> values. In XML, simply list multiple\n             <note>\n                 <para>\n OpenJPA supports many non-standard joins. See\n-<xref linkend=\"ref_guide_mapping_notes_nonstdjoins\"></xref> in the Reference\n+<xref linkend=\"ref_guide_mapping_notes_nonstdjoins\"/> in the Reference\n Guide for details.\n                 </para>\n             </note>\n@@ -4017,8 +4017,8 @@ Article.authors</literal>.\n             <mediaobject>\n                 <imageobject>\n                     <!-- PNG image data, 391 x 407 (see README) -->\n-                    <imagedata fileref=\"img/jpa-assoc-table.png\" width=\"261px\">\n-                    </imagedata>\n+                    <imagedata fileref=\"img/jpa-assoc-table.png\" width=\"261px\"/>\n+                    \n                 </imageobject>\n             </mediaobject>\n             <para>\n@@ -4049,12 +4049,12 @@ name of the related entity's table.\n </classname> sshowing how to associate join table records with the owning row in\n the primary table. This property mirrors the <literal>pkJoinColumns</literal>\n property of the <classname> SecondaryTable</classname> annotation in\n-functionality. See <xref linkend=\"jpa_overview_mapping_secondary\"></xref> to\n+functionality. See <xref linkend=\"jpa_overview_mapping_secondary\"/> to\n refresh your memory on secondary tables.\n                     </para>\n                     <para>\n If this is a bidirectional relation (see\n-<xref linkend=\"jpa_overview_meta_mappedby\"></xref> ), the name of a join column\n+<xref linkend=\"jpa_overview_meta_mappedby\"/> ), the name of a join column\n defaults to the inverse field name, plus an underscore, plus the referenced\n primary key column name. Otherwise, the join column name defaults to the field's\n owning entity name, plus an underscore, plus the referenced primary key column\n@@ -4067,7 +4067,7 @@ name.\n JoinColumns</classname> showing how to associate join table records with the\n records that form the elements of the collection. These join columns are used\n just like the join columns for direct relations, and they have the same naming\n-defaults. Read <xref linkend=\"jpa_overview_mapping_rel\"></xref> for a review of\n+defaults. Read <xref linkend=\"jpa_overview_mapping_rel\"/> for a review of\n direct relation mapping.\n                     </para>\n                 </listitem>\n@@ -4200,7 +4200,7 @@ The same metadata expressed in XML:\n                 </secondary>\n             </indexterm>\n             <para>\n-<xref linkend=\"jpa_overview_meta_mappedby\"></xref> introduced bidirectional\n+<xref linkend=\"jpa_overview_meta_mappedby\"/> introduced bidirectional\n relations. To map a bidirectional relation, you map one field normally using the\n annotations we have covered throughout this chapter. Then you use the <literal>\n mappedBy</literal> property of the other field's metadata annotation or the\n@@ -4249,13 +4249,13 @@ fields, namely dedicated <link linkend=\"jpa_overview_mapping_assoccoll\">join\n tables</link> or <link linkend=\"jpa_overview_mapping_bidi\">bidirectional\n relations</link>. The only additions are the <classname>MapKey</classname>\n annotation and <literal>map-key</literal> element to declare the key field. We\n-covered these additions in in <xref linkend=\"jpa_overview_meta_mapkey\"></xref>.\n+covered these additions in in <xref linkend=\"jpa_overview_meta_mapkey\"/>.\n             </para>\n             <mediaobject>\n                 <imageobject>\n                     <!-- PNG image data, 382 x 274 (see README) -->\n-                    <imagedata fileref=\"img/jpa-map.png\" width=\"255px\">\n-                    </imagedata>\n+                    <imagedata fileref=\"img/jpa-map.png\" width=\"255px\"/>\n+                    \n                 </imageobject>\n             </mediaobject>\n             <para>\n@@ -4339,8 +4339,8 @@ We began this chapter with the goal of mapping the following object featureSelection:\n         <mediaobject>\n             <imageobject>\n                 <!-- PNG image data, 553 x 580 (see README) -->\n-                <imagedata fileref=\"img/jpa-meta-featureSelection.png\" width=\"369px\">\n-                </imagedata>\n+                <imagedata fileref=\"img/jpa-meta-featureSelection.png\" width=\"369px\"/>\n+                \n             </imageobject>\n         </mediaobject>\n         <para>\n@@ -4351,8 +4351,8 @@ complete featureSelection. First, the database schema:\n         <mediaobject>\n             <imageobject>\n                 <!-- PNG image data, 490 x 662 (see README) -->\n-                <imagedata fileref=\"img/jpa-data-featureSelection.png\" width=\"326px\">\n-                </imagedata>\n+                <imagedata fileref=\"img/jpa-data-featureSelection.png\" width=\"326px\"/>\n+                \n             </imageobject>\n         </mediaobject>\n         <para>"},{"sha":"1b6b96665f1de2a8c9aef13f0fc3858e28495054","filename":"openjpa-project/src/doc/manual/jpa_overview_meta.xml","status":"modified","additions":40,"deletions":40,"changes":80,"blob_url":"https://github.com/apache/openjpa/blob/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/jpa_overview_meta.xml","raw_url":"https://github.com/apache/openjpa/raw/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/jpa_overview_meta.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_meta.xml?ref=8676abb0ada7d957799c44096cb5af0c0fe917f0","patch":"@@ -74,25 +74,25 @@ the class' class loader.\n     <para>\n We describe the standard metadata annotations and XML equivalents throughout\n this chapter. The full schema for XML mapping files is available in\n-<xref linkend=\"jpa_overview_meta_xml\"></xref>. JPA also standardizes relational\n+<xref linkend=\"jpa_overview_meta_xml\"/>. JPA also standardizes relational\n mapping metadata and named query metadata, which we discuss in\n-<xref linkend=\"jpa_overview_mapping\"></xref> and\n-<xref linkend=\"jpa_overview_query_named\"></xref> respectively.\n+<xref linkend=\"jpa_overview_mapping\"/> and\n+<xref linkend=\"jpa_overview_query_named\"/> respectively.\n     </para>\n     <note>\n         <para>\n OpenJPA defines many useful annotations beyond the standard set. See\n-<xref linkend=\"ref_guide_meta_jpa\"></xref> and\n-<xref linkend=\"ref_guide_meta_ext\"></xref>\n+<xref linkend=\"ref_guide_meta_jpa\"/> and\n+<xref linkend=\"ref_guide_meta_ext\"/>\n in the Reference Guide for details. There are currently no XML equivalents for\n these extension annotations.\n         </para>\n     </note>\n     <mediaobject>\n         <imageobject>\n             <!-- PNG image data, 553 x 580 (see README) -->\n-            <imagedata fileref=\"img/jpa-meta-featureSelection.png\" width=\"369\">\n-            </imagedata>\n+            <imagedata fileref=\"img/jpa-meta-featureSelection.png\" width=\"369\"/>\n+            \n         </imageobject>\n     </mediaobject>\n     <para>\n@@ -169,15 +169,15 @@ name property above.\n                     <para>\n <literal>access</literal>: The access type to use for the class. Must either be\n <literal>FIELD</literal> or <literal>PROPERTY</literal>. For details on access\n-types, see <xref linkend=\"jpa_overview_meta_field\"></xref>.\n+types, see <xref linkend=\"jpa_overview_meta_field\"/>.\n                     </para>\n                 </listitem>\n             </itemizedlist>\n             <note>\n                 <para>\n OpenJPA uses a process called <emphasis>enhancement</emphasis> to modify the\n bytecode of entities for transparent lazy loading and immediate dirty tracking.\n-See <xref linkend=\"ref_guide_pc_enhance\"></xref> in the Reference Guide for\n+See <xref linkend=\"ref_guide_pc_enhance\"/> in the Reference Guide for\n details on enhancement.\n                 </para>\n             </note>\n@@ -208,7 +208,7 @@ details on enhancement.\n                 </secondary>\n             </indexterm>\n             <para>\n-As we discussed in <xref linkend=\"jpa_overview_pc_identitycls\"></xref>,\n+As we discussed in <xref linkend=\"jpa_overview_pc_identitycls\"/>,\n entities with multiple identity fields must use an <emphasis> identity class\n </emphasis> to encapsulate their persistent identity. The <classname>IdClass\n </classname> annotation specifies this class. It accepts a single <classname>\n@@ -275,7 +275,7 @@ the following attributes:\n                     <para>\n <literal>access</literal>: The access type to use for the class. Must either be\n <literal>FIELD</literal> or <literal>PROPERTY</literal>. For details on access\n-types, see <xref linkend=\"jpa_overview_meta_field\"></xref>.\n+types, see <xref linkend=\"jpa_overview_meta_field\"/>.\n                     </para>\n                 </listitem>\n             </itemizedlist>\n@@ -335,7 +335,7 @@ following attributes:\n                     <para>\n <literal>access</literal>: The access type to use for the class. Must either be\n <literal>FIELD</literal> or <literal>PROPERTY</literal>. For details on access\n-types, see <xref linkend=\"jpa_overview_meta_field\"></xref>.\n+types, see <xref linkend=\"jpa_overview_meta_field\"/>.\n                     </para>\n                 </listitem>\n             </itemizedlist>\n@@ -388,7 +388,7 @@ An entity may list its lifecycle event listeners in the <classname>\n EntityListeners</classname> annotation. This value of this annotation is an\n array of the listener <classname>Class</classname> es for the entity. The\n equivalent XML element is <literal>entity-listeners</literal>. For more details\n-on entity listeners, see <xref linkend=\"jpa_overview_pc_callbacks\"></xref>.\n+on entity listeners, see <xref linkend=\"jpa_overview_pc_callbacks\"/>.\n             </para>\n         </section>\n         <section id=\"jpa_overview_meta_classex\">\n@@ -706,7 +706,7 @@ is required.\n             <para>\n Annotate your simple identity fields with <classname>Id</classname>. This\n annotation has no properties. We explore entity identity and identity fields in\n-<xref linkend=\"jpa_overview_pc_id\"></xref>.\n+<xref linkend=\"jpa_overview_pc_id\"/>.\n             </para>\n             <para>\n The equivalent XML element is <literal>id</literal>. It has one required\n@@ -791,7 +791,7 @@ field value.\n                     <para>\n <literal>String generator</literal>: The name of a generator defined in mapping\n metadata. We show you how to define named generators in\n-<xref linkend=\"jpa_overview_mapping_sequence\"></xref>. If the <classname>\n+<xref linkend=\"jpa_overview_mapping_sequence\"/>. If the <classname>\n GenerationType</classname> is set but this property is unset, the JPA\n implementation uses appropriate defaults for the selected generation type.\n                     </para>\n@@ -821,7 +821,7 @@ above.\n OpenJPA allows you to use the <classname>GeneratedValue</classname> annotation\n on any field, not just identity fields. Before using the <literal>IDENTITY\n </literal> generation strategy, however, read\n-<xref linkend=\"ref_guide_pc_oid_pkgen_autoinc\"></xref> in the Reference Guide.\n+<xref linkend=\"ref_guide_pc_oid_pkgen_autoinc\"/> in the Reference Guide.\n                 </para>\n                 <para>\n OpenJPA also offers two additional generator strategies for non-numeric fields,\n@@ -910,7 +910,7 @@ If your entity has multiple identity values, you may declare multiple <literal>\n field. The type of a field annotated with <classname>EmbeddedId</classname> must\n be an embeddable entity class. The fields of this embeddable class are\n considered the identity values of the owning entity. We explore entity identity\n-and identity fields in <xref linkend=\"jpa_overview_pc_id\"></xref>.\n+and identity fields in <xref linkend=\"jpa_overview_pc_id\"/>.\n             </para>\n             <para>\n The <classname>EmbeddedId</classname> annotation has no properties.\n@@ -954,7 +954,7 @@ required attribute:\n             </indexterm>\n             <para>\n Use the <classname>Version</classname> annotation to designate a version field.\n-<xref linkend=\"jpa_overview_pc_version\"></xref> explained the importance of\n+<xref linkend=\"jpa_overview_pc_version\"/> explained the importance of\n version fields to JPA. This is a marker annotation; it has no properties.\n             </para>\n             <para>\n@@ -1098,7 +1098,7 @@ types.\n                 <para>\n With a mix of eager and lazily-loaded fields, you can ensure that commonly-used\n fields load efficiently, and that other state loads transparently when accessed.\n-As you will see in <xref linkend=\"jpa_overview_emfactory_perscontext\"></xref>,\n+As you will see in <xref linkend=\"jpa_overview_emfactory_perscontext\"/>,\n you can also use eager fetching to ensure that entites have all needed data\n loaded before they become <emphasis>detached</emphasis> at the end of a\n persistence context.\n@@ -1107,11 +1107,11 @@ persistence context.\n                     <para>\n OpenJPA can lazy-load any field type. OpenJPA also allows you to dynamically\n change which fields are eagerly or lazily loaded at runtime. See\n-<xref linkend=\"ref_guide_fetch\"></xref> in the Reference Guide for details.\n+<xref linkend=\"ref_guide_fetch\"/> in the Reference Guide for details.\n                     </para>\n                     <para>\n The Reference Guide details OpenJPA's eager fetching behavior in\n-<xref linkend=\"ref_guide_perfpack_eager\"></xref>.\n+<xref linkend=\"ref_guide_perfpack_eager\"/>.\n                     </para>\n                 </note>\n             </section>\n@@ -1218,7 +1218,7 @@ behavior for this field. We explore cascades below. Defaults to an empty array.\n <literal>FetchType fetch</literal>: Whether to load the field eagerly (\n <literal>FetchType.EAGER</literal>) or lazily ( <literal>FetchType.LAZY\n </literal> ). Defaults to <literal>FetchType.EAGER</literal>. See\n-<xref linkend=\"jpa_overview_meta_fetch\"></xref> above for details on fetch\n+<xref linkend=\"jpa_overview_meta_fetch\"/> above for details on fetch\n types.\n                     </para>\n                 </listitem>\n@@ -1278,7 +1278,7 @@ null.\n                 </indexterm>\n                 <para>\n We introduce the JPA <classname>EntityManager</classname> in\n-<xref linkend=\"jpa_overview_em\"></xref>. The <classname>EntityManager\n+<xref linkend=\"jpa_overview_em\"/>. The <classname>EntityManager\n </classname> has APIs to persist new entities, remove (delete) existing\n entities, refresh entity state from the datastore, and merge <emphasis> detached\n </emphasis> entity state back into the persistence context. We explore all of\n@@ -1424,15 +1424,15 @@ unidirectional relation.\n                     <para>\n <literal>CascadeType[] cascade</literal>: Array of enum values defining cascade\n behavior for the collection elements. We explore cascades above in\n-<xref linkend=\"jpa_overview_meta_cascade\"></xref>. Defaults to an empty array.\n+<xref linkend=\"jpa_overview_meta_cascade\"/>. Defaults to an empty array.\n                     </para>\n                 </listitem>\n                 <listitem>\n                     <para>\n <literal>FetchType fetch</literal>: Whether to load the field eagerly (\n <literal>FetchType.EAGER</literal>) or lazily ( <literal>FetchType.LAZY\n </literal> ). Defaults to <literal>FetchType.LAZY</literal>. See\n-<xref linkend=\"jpa_overview_meta_fetch\"></xref> above for details on fetch\n+<xref linkend=\"jpa_overview_meta_fetch\"/> above for details on fetch\n types.\n                     </para>\n                 </listitem>\n@@ -1462,7 +1462,7 @@ required.\n                 <listitem>\n                     <para>\n <literal>mapped-by</literal>: The name of the field or property that owns the\n-relation. See <xref linkend=\"jpa_overview_meta_field\"></xref>.\n+relation. See <xref linkend=\"jpa_overview_meta_field\"/>.\n                     </para>\n                 </listitem>\n             </itemizedlist>\n@@ -1519,7 +1519,7 @@ property. Marking <literal>Company.mags</literal> as <literal>mappedBy</literal>\n Magazine.publisher</literal>, but inverses it. In fact, it is illegal to\n specify any additional mapping information when you use the <literal>mappedBy\n </literal> property. All mapping information is read from the referenced field.\n-We explore mapping in depth in <xref linkend=\"jpa_overview_mapping\"></xref>.\n+We explore mapping in depth in <xref linkend=\"jpa_overview_mapping\"/>.\n                         </para>\n                     </listitem>\n                     <listitem>\n@@ -1547,7 +1547,7 @@ mapping!\n                     <para>\n You can configure OpenJPA to automatically synchronize both sides of a\n bidirectional relation, or to perform various actions when it detects\n-inconsistent relations. See <xref linkend=\"ref_guide_inverses\"></xref> in the\n+inconsistent relations. See <xref linkend=\"ref_guide_inverses\"/> in the\n Reference Guide for details.\n                     </para>\n                 </note>\n@@ -1602,15 +1602,15 @@ This information is usually taken from the field type.\n                     <para>\n <literal>String mappedBy</literal>: Names the field in the related entity that\n maps this bidirectional relation. We explain bidirectional relations in\n-<xref linkend=\"jpa_overview_meta_mappedby\"></xref> above. Leaving this property\n+<xref linkend=\"jpa_overview_meta_mappedby\"/> above. Leaving this property\n unset signals that this is a standard unidirectional relation.\n                     </para>\n                 </listitem>\n                 <listitem>\n                     <para>\n <literal>CascadeType[] cascade</literal>: Array of enum values defining cascade\n behavior for this field. We explore cascades in\n-<xref linkend=\"jpa_overview_meta_cascade\"></xref> above. Defaults to an empty\n+<xref linkend=\"jpa_overview_meta_cascade\"/> above. Defaults to an empty\n array.\n                     </para>\n                 </listitem>\n@@ -1619,7 +1619,7 @@ array.\n <literal>FetchType fetch</literal>: Whether to load the field eagerly (\n <literal>FetchType.EAGER</literal>) or lazily ( <literal>FetchType.LAZY\n </literal> ). Defaults to <literal>FetchType.EAGER</literal>. See\n-<xref linkend=\"jpa_overview_meta_fetch\"></xref> above for details on fetch\n+<xref linkend=\"jpa_overview_meta_fetch\"/> above for details on fetch\n types.\n                     </para>\n                 </listitem>\n@@ -1656,7 +1656,7 @@ required.\n                 <listitem>\n                     <para>\n <literal>mapped-by</literal>: The field that owns the relation. See\n-<xref linkend=\"jpa_overview_meta_field\"></xref>.\n+<xref linkend=\"jpa_overview_meta_field\"/>.\n                     </para>\n                 </listitem>\n             </itemizedlist>\n@@ -1718,23 +1718,23 @@ parameterized type.\n                     <para>\n <literal>String mappedBy</literal>: Names the many to many field in the related\n entity that maps this bidirectional relation. We explain bidirectional relations\n-in <xref linkend=\"jpa_overview_meta_mappedby\"></xref> above. Leaving this\n+in <xref linkend=\"jpa_overview_meta_mappedby\"/> above. Leaving this\n property unset signals that this is a standard unidirectional relation.\n                     </para>\n                 </listitem>\n                 <listitem>\n                     <para>\n <literal>CascadeType[] cascade</literal>: Array of enum values defining cascade\n behavior for the collection elements. We explore cascades above in\n-<xref linkend=\"jpa_overview_meta_cascade\"></xref>. Defaults to an empty array.\n+<xref linkend=\"jpa_overview_meta_cascade\"/>. Defaults to an empty array.\n                     </para>\n                 </listitem>\n                 <listitem>\n                     <para>\n <literal>FetchType fetch</literal>: Whether to load the field eagerly (\n <literal>FetchType.EAGER</literal>) or lazily ( <literal>FetchType.LAZY\n </literal> ). Defaults to <literal>FetchType.LAZY</literal>. See\n-<xref linkend=\"jpa_overview_meta_fetch\"></xref> above for details on fetch\n+<xref linkend=\"jpa_overview_meta_fetch\"/> above for details on fetch\n types.\n                     </para>\n                 </listitem>\n@@ -1764,7 +1764,7 @@ required.\n                 <listitem>\n                     <para>\n <literal>mapped-by</literal>: The field that owns the relation. See\n-<xref linkend=\"jpa_overview_meta_field\"></xref>.\n+<xref linkend=\"jpa_overview_meta_field\"/>.\n                     </para>\n                 </listitem>\n             </itemizedlist>\n@@ -1825,8 +1825,8 @@ string.\n             </para>\n             <note>\n                 <para>\n-OpenJPA expands the available ordering syntax. See <xref linkend=\"order-by\">\n-</xref> in the Reference Guide for details.\n+OpenJPA expands the available ordering syntax. See <xref linkend=\"order-by\"/>\n+ in the Reference Guide for details.\n                 </para>\n             </note>\n         </section>\n@@ -1966,7 +1966,7 @@ to being non-persistent if not.\n         <para>\n We present the complete XML schema below. Many of the elements relate to\n object/relational mapping rather than metadata; these elements are discussed in\n-<xref linkend=\"jpa_overview_mapping\"></xref>.\n+<xref linkend=\"jpa_overview_mapping\"/>.\n         </para>\n <programlisting>\n &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n@@ -3807,7 +3807,7 @@ The same metadata declarations in XML:\n </programlisting>\n         </example>\n         <para>\n-<xref linkend=\"jpa_overview_mapping\"></xref> will show you how to map your\n+<xref linkend=\"jpa_overview_mapping\"/> will show you how to map your\n persistent classes to the datastore using additional annotations and XML markup.\n First, however, we turn to the JPA runtime APIs.\n         </para>"},{"sha":"21d56ff59b72c95c8c5758a0a6c7510d2b117c39","filename":"openjpa-project/src/doc/manual/jpa_overview_pc.xml","status":"modified","additions":15,"deletions":15,"changes":30,"blob_url":"https://github.com/apache/openjpa/blob/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/jpa_overview_pc.xml","raw_url":"https://github.com/apache/openjpa/raw/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/jpa_overview_pc.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_pc.xml?ref=8676abb0ada7d957799c44096cb5af0c0fe917f0","patch":"@@ -163,7 +163,7 @@ constructor.\n                 <para>\n OpenJPA's <emphasis>enhancer</emphasis> will automatically add a protected\n no-arg constructor to your class when required. Therefore, this restriction does\n-not apply when using OpenJPA. See <xref linkend=\"ref_guide_pc_enhance\"></xref>\n+not apply when using OpenJPA. See <xref linkend=\"ref_guide_pc_enhance\"/>\n of the Reference Guide for details.\n                 </para>\n             </note>\n@@ -208,14 +208,14 @@ persistent identity of an instance. These are called <emphasis>identity\n Magazine</classname> class, <literal>isbn</literal> and <literal>title</literal>\n are identity fields, because no two magazine records in the datastore can have\n the same <literal>isbn</literal> and <literal>title</literal> values.\n-<xref linkend=\"jpa_overview_meta_id\"></xref> will show you how to denote your\n-identity fields in JPA metadata. <xref linkend=\"jpa_overview_pc_identity\">\n-</xref> below examines persistent identity.\n+<xref linkend=\"jpa_overview_meta_id\"/> will show you how to denote your\n+identity fields in JPA metadata. <xref linkend=\"jpa_overview_pc_identity\"/>\n+ below examines persistent identity.\n             </para>\n             <note>\n                 <para>\n OpenJPA fully supports identity fields, but does not require them. See\n-<xref linkend=\"ref_guide_pc_oid\"></xref> of the Reference Guide for details.\n+<xref linkend=\"ref_guide_pc_oid\"/> of the Reference Guide for details.\n                 </para>\n             </note>\n         </section>\n@@ -251,7 +251,7 @@ overwriting the previous commit with stale data.\n The version field is not required, but without one concurrent threads or\n processes might succeed in making conflicting changes to the same record at the\n same time. This is unacceptable to most applications.\n-<xref linkend=\"jpa_overview_meta_version\"></xref> shows you how to designate a\n+<xref linkend=\"jpa_overview_meta_version\"/> shows you how to designate a\n version field in JPA metadata.\n             </para>\n             <para>\n@@ -265,7 +265,7 @@ undefined results.\n OpenJPA fully supports version fields, but does not require them for concurrency\n detection. OpenJPA can maintain surrogate version values or use state\n comparisons to detect concurrent modifications. See\n-<xref linkend=\"ref_guide_mapping_jpa\"></xref> in the Reference Guide.\n+<xref linkend=\"ref_guide_mapping_jpa\"/> in the Reference Guide.\n                 </para>\n             </note>\n         </section>\n@@ -316,7 +316,7 @@ non-persistent superclass cannot be persisted.\n                 <listitem>\n                     <para>\n All classes in an inheritance tree must use the same identity type. We cover\n-entity identity in <xref linkend=\"jpa_overview_pc_identity\"></xref>.\n+entity identity in <xref linkend=\"jpa_overview_pc_identity\"/>.\n                     </para>\n                 </listitem>\n             </itemizedlist>\n@@ -555,7 +555,7 @@ Collection and map types may be parameterized.\n                 </seealso>\n             </indexterm>\n Most JPA implementations also have support for persisting serializable values as\n-binary data in the datastore. <xref linkend=\"jpa_overview_meta\"></xref> has more\n+binary data in the datastore. <xref linkend=\"jpa_overview_meta\"/> has more\n information on persisting serializable types.\n             </para>\n             <note>\n@@ -726,7 +726,7 @@ as immutable objects in your applications.\n             </seealso>\n         </indexterm>\n If you are dealing with a single persistence context (see\n-<xref linkend=\"jpa_overview_emfactory_perscontext\"></xref> ), then you do not\n+<xref linkend=\"jpa_overview_emfactory_perscontext\"/> ), then you do not\n have to compare identity fields to test whether two entity references represent\n the same state in the datastore. There is a much easier way: the <literal>==\n </literal> operator. JPA requires that each persistence context maintain only\n@@ -811,7 +811,7 @@ If the class is an inner class, it must be <literal>static</literal>.\n All entity classes related by inheritance must use the same identity class, or\n else each entity class must have its own identity class whose inheritance\n hierarchy mirrors the inheritance hierarchy of the owning entity classes (see\n-<xref linkend=\"jpa_overview_pc_identity_hierarchy\"></xref> ).\n+<xref linkend=\"jpa_overview_pc_identity_hierarchy\"/> ).\n                     </para>\n                 </listitem>\n             </itemizedlist>\n@@ -820,7 +820,7 @@ hierarchy mirrors the inheritance hierarchy of the owning entity classes (see\n Though you may still create identity classes by hand, OpenJPA provides the\n <classname>appidtool</classname> to automatically generate proper identity\n classes based on your identity fields. See\n-<xref linkend=\"ref_guide_pc_oid_application\"></xref> of the Reference Guide.\n+<xref linkend=\"ref_guide_pc_oid_application\"/> of the Reference Guide.\n                 </para>\n             </note>\n             <example id=\"jpa_overview_pc_identity_appidcode\">\n@@ -905,8 +905,8 @@ public class Magazine\n                 <mediaobject>\n                     <imageobject>\n                         <!-- PNG image data, 320 x 267 (see README) -->\n-                        <imagedata fileref=\"img/appid-hierarchy.png\" width=\"213px\">\n-                        </imagedata>\n+                        <imagedata fileref=\"img/appid-hierarchy.png\" width=\"213px\"/>\n+                        \n                     </imageobject>\n                 </mediaobject>\n                 <para>\n@@ -1226,7 +1226,7 @@ In an XML mapping file, we can define the same methods without annotations:\n             <note>\n                 <para>\n We fully explore persistence metadata annotations and XML in\n-<xref linkend=\"jpa_overview_meta\"></xref>.\n+<xref linkend=\"jpa_overview_meta\"/>.\n                 </para>\n             </note>\n         </section>"},{"sha":"a3e92a8c4031a3062c191ac0151fd1d4d5947b65","filename":"openjpa-project/src/doc/manual/jpa_overview_persistence.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/jpa_overview_persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/jpa_overview_persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_persistence.xml?ref=8676abb0ada7d957799c44096cb5af0c0fe917f0","patch":"@@ -34,8 +34,8 @@\n     <mediaobject>\n         <imageobject>\n             <!-- PNG image data, 427 x 121 (see README) -->\n-            <imagedata fileref=\"img/persistence.png\" width=\"285px\">\n-            </imagedata>\n+            <imagedata fileref=\"img/persistence.png\" width=\"285px\"/>\n+            \n         </imageobject>\n     </mediaobject>\n     <note>\n@@ -181,7 +181,7 @@ property</literal> has a name attribute and a value attribute.\n                 </para>\n                 <note>\n                     <para>\n-The Reference Guide's <xref linkend=\"ref_guide_conf\"></xref> describes OpenJPA's\n+The Reference Guide's <xref linkend=\"ref_guide_conf\"/> describes OpenJPA's\n configuration properties.\n                     </para>\n                 </note>"},{"sha":"236dd2a33c894104ad76b62e5f7d254f7848d3bf","filename":"openjpa-project/src/doc/manual/jpa_overview_query.xml","status":"modified","additions":22,"deletions":22,"changes":44,"blob_url":"https://github.com/apache/openjpa/blob/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/jpa_overview_query.xml","raw_url":"https://github.com/apache/openjpa/raw/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/jpa_overview_query.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_query.xml?ref=8676abb0ada7d957799c44096cb5af0c0fe917f0","patch":"@@ -21,8 +21,8 @@\n     <mediaobject>\n         <imageobject>\n             <!-- PNG image data, 292 x 265 (see README) -->\n-            <imagedata fileref=\"img/jpa-query.png\" width=\"195px\">\n-            </imagedata>\n+            <imagedata fileref=\"img/jpa-query.png\" width=\"195px\"/>\n+            \n         </imageobject>\n     </mediaobject>\n     <para>\n@@ -33,8 +33,8 @@ very similar to SQL, but is object-oriented rather than table-oriented.\n     </para>\n     <para>\n The API for executing JPQL queries will be discussed in\n-<xref linkend=\"jpa_query_api\"></xref>, and a full language reference will be\n-covered in <xref linkend=\"jpa_langref\"></xref>.\n+<xref linkend=\"jpa_query_api\"/>, and a full language reference will be\n+covered in <xref linkend=\"jpa_langref\"/>.\n     </para>\n     <section id=\"jpa_query_api\">\n         <title>\n@@ -363,7 +363,7 @@ SELECT x FROM Magazine x join fetch x.articles join fetch x.authors WHERE x.titl\n             <para>\n <note><para> Specifying the <literal>join fetch</literal> declaration is\n functionally equivalent to adding the fields to the Query's <classname>\n-FetchConfiguration</classname>. See <xref linkend=\"ref_guide_fetch\"></xref>.\n+FetchConfiguration</classname>. See <xref linkend=\"ref_guide_fetch\"/>.\n                     </para>\n                 </note>\n             </para>\n@@ -829,16 +829,16 @@ delete_statement\n                 \n \n     The complete BNF for JPQL is defined in \n-                <xref linkend=\"jpa_langref_bnf\">\n-                </xref>\n+                <xref linkend=\"jpa_langref_bnf\"/>\n+                \n                 .\n \n     Any JPQL statement may be constructed\n     dynamically or may be statically defined in a metadata annotation or\n     XML descriptor element. All statement types may have parameters, as\n     discussed in \n-                <xref linkend=\"jpa_langref_input_params\">\n-                </xref>\n+                <xref linkend=\"jpa_langref_input_params\"/>\n+                \n                 .\n \n     \n@@ -944,8 +944,8 @@ delete_statement ::= delete_clause [where_clause]\n       be used to restrict the scope of the update or delete operation. Update\n       and delete statements are described further in\n       \n-                    <xref linkend=\"jpa_langref_bulk_ops\">\n-                    </xref>\n+                    <xref linkend=\"jpa_langref_bulk_ops\"/>\n+                    \n                     .\n       \n                 </para>\n@@ -1757,7 +1757,7 @@ result as restrictions upon the groups. The syntax of the <literal>HAVING\n             </para>\n             <para>\n The <literal>GROUP BY</literal> and <literal>HAVING</literal> constructs are\n-further discussed in <xref linkend=\"jpa_langref_group\"></xref>.\n+further discussed in <xref linkend=\"jpa_langref_group\"/>.\n             </para>\n         </section>\n         <section id=\"jpa_langref_cond\">\n@@ -1802,7 +1802,7 @@ case, they are case insensitive.\n All identification variables used in the <literal>WHERE</literal> or <literal>\n HAVING</literal> clause of a <literal>SELECT</literal> or <literal>DELETE\n </literal> statement must be declared in the <literal>FROM</literal> clause, as\n-described in <xref linkend=\"jpa_langref_from_vars\"></xref>. The identification\n+described in <xref linkend=\"jpa_langref_from_vars\"/>. The identification\n variables used in the <literal>WHERE</literal> clause of an <literal>UPDATE\n </literal> statement must be declared in the <literal>UPDATE</literal> clause.\n Identification variables are existentially quantified in the <literal>WHERE\n@@ -1837,7 +1837,7 @@ query.\n                 <para>\n Note that if an input parameter value is null, comparison operations or\n arithmetic operations involving the input parameter will return an unknown\n-value. See <xref linkend=\"jpa_langref_null_values\"></xref>.\n+value. See <xref linkend=\"jpa_langref_null_values\"/>.\n                 </para>\n                 <section id=\"jpa_langref_pos_params\">\n                     <title>\n@@ -1867,7 +1867,7 @@ positional parameters.\n                     <para>\n A named parameter is an identifier that is prefixed by the \":\" symbol. It\n follows the rules for identifiers defined in\n-<xref linkend=\"jpa_langref_from_identifiers\"></xref>. Named parameters are case\n+<xref linkend=\"jpa_langref_from_identifiers\"/>. Named parameters are case\n sensitive.\n                     </para>\n                     <para>\n@@ -1924,7 +1924,7 @@ exists_expression\n                 </para>\n                 <para>\n Aggregate functions can only be used in conditional expressions in a <literal>\n-HAVING</literal> clause. See <xref linkend=\"jpa_langref_group\"></xref>.\n+HAVING</literal> clause. See <xref linkend=\"jpa_langref_group\"/>.\n                 </para>\n             </section>\n             <section id=\"jpa_langref_operators\">\n@@ -1983,7 +1983,7 @@ datetime_expression\n The BETWEEN expression <programlisting>x BETWEEN y AND z</programlisting> is\n semantically equivalent to: <programlisting>y &lt;= x AND x &lt;= z\n </programlisting> The rules for unknown and <literal>NULL</literal> values in\n-comparison operations apply. See <xref linkend=\"jpa_langref_null_values\"></xref>\n+comparison operations apply. See <xref linkend=\"jpa_langref_null_values\"/>\n . Examples are: <programlisting>p.age BETWEEN 15 and 19</programlisting> is\n equivalent to <programlisting>p.age &gt;= 15 AND p.age &lt;= 19</programlisting>\n                 </para>\n@@ -2016,12 +2016,12 @@ in_item ::= literal | input_parameter\n The state_field_path_expression must have a string, numeric, or enum value. The\n literal and/or input_parameter values must be like the same abstract schema type\n of the state_field_path_expression in type. (See\n-<xref linkend=\"jpa_langref_equality\"></xref> ).\n+<xref linkend=\"jpa_langref_equality\"/> ).\n                 </para>\n                 <para>\n The results of the subquery must be like the same abstract schema type of the\n state_field_path_expression in type. Subqueries are discussed in\n-<xref linkend=\"jpa_langref_subqueries\"></xref>. Examples are: <programlisting>o.country IN ('UK', 'US', 'France')\n+<xref linkend=\"jpa_langref_subqueries\"/>. Examples are: <programlisting>o.country IN ('UK', 'US', 'France')\n </programlisting> is true for UK and false for Peru, and is equivalent to the\n expression: <programlisting>(o.country = 'UK') OR (o.country = 'US') OR (o.country = ' France')\n </programlisting> In the following expression: <programlisting>o.country NOT IN ('UK', 'US', 'France')\n@@ -2203,7 +2203,7 @@ synonymous with <literal>ANY</literal>. The comparison operators used with\n <literal>ALL</literal> or <literal>ANY</literal> conditional expressions are =,\n &lt;, &lt;=, &gt;, &gt;=, &lt;&gt;. The result of the subquery must be like that\n of the other argument to the comparison operator in type. See\n-<xref linkend=\"jpa_langref_equality\"></xref>. The syntax of an <literal>ALL\n+<xref linkend=\"jpa_langref_equality\"/>. The syntax of an <literal>ALL\n </literal> or <literal>ANY</literal> expression is specified as follows:\n <itemizedlist><listitem><para>all_or_any_expression ::= { ALL | ANY | SOME}\n (subquery)\n@@ -2534,7 +2534,7 @@ object/relational mapping.\n                         <listitem>\n                             <para>\n The result type of aggregate_expression is defined in section\n-<xref linkend=\"jpa_langref_aggregates\"></xref>.\n+<xref linkend=\"jpa_langref_aggregates\"/>.\n                             </para>\n                         </listitem>\n                         <listitem>\n@@ -2740,7 +2740,7 @@ identification_variable]\n             </para>\n             <para>\n The syntax of the <literal>WHERE</literal> clause is described in\n-<xref linkend=\"jpa_langref_where\"></xref>. A delete operation only applies to\n+<xref linkend=\"jpa_langref_where\"/>. A delete operation only applies to\n entities of the specified class and its subclasses. It does not cascade to\n related entities. The new_value specified for an update operation must be\n compatible in type with the state-field to which it is assigned. Bulk update"},{"sha":"86365668a00b2cd6b1552da4d7ed359ceb0f23ba","filename":"openjpa-project/src/doc/manual/jpa_overview_sqlquery.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/jpa_overview_sqlquery.xml","raw_url":"https://github.com/apache/openjpa/raw/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/jpa_overview_sqlquery.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_sqlquery.xml?ref=8676abb0ada7d957799c44096cb5af0c0fe917f0","patch":"@@ -60,7 +60,7 @@ obtain a <classname>ResultSet</classname>. And of course, you are free to\n continue using this low-level approach to SQL execution in your JPA\n applications. However, JPA also supports executing SQL queries through the\n <classname>javax.persistence.Query</classname> interface introduced in\n-<xref linkend=\"jpa_overview_query\"></xref>. Using a JPA SQL query, you can\n+<xref linkend=\"jpa_overview_query\"/>. Using a JPA SQL query, you can\n retrieve either persistent objects or projections of column values. The\n following sections detail each use.\n     </para>\n@@ -181,8 +181,8 @@ simple mapping between a class and the database:\n         <mediaobject>\n             <imageobject>\n                 <!-- PNG image data, 320 x 149 (see README) -->\n-                <imagedata fileref=\"img/sqlquery-featureSelection.png\" width=\"213px\">\n-                </imagedata>\n+                <imagedata fileref=\"img/sqlquery-featureSelection.png\" width=\"213px\"/>\n+                \n             </imageobject>\n         </mediaobject>\n         <example id=\"jpa_overview_sqlquery_objex\">"},{"sha":"276b535f806f8946d5aa9882baa5999c4082c1b0","filename":"openjpa-project/src/doc/manual/jpa_overview_trans.xml","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/jpa_overview_trans.xml","raw_url":"https://github.com/apache/openjpa/raw/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/jpa_overview_trans.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_trans.xml?ref=8676abb0ada7d957799c44096cb5af0c0fe917f0","patch":"@@ -280,9 +280,9 @@ of hanging due to deadlock.\n OpenJPA uses optimistic semantics by default, but supports both optimistic and\n datastore transactions. OpenJPA also offers advanced locking and versioning APIs\n for fine-grained control over database resource allocation and object\n-versioning. See <xref linkend=\"ref_guide_locking\"></xref> and\n-<xref linkend=\"ref_guide_lock_groups\"></xref> of the Reference Guide for details\n-on locking. <xref linkend=\"jpa_overview_meta_version\"></xref>\n+versioning. See <xref linkend=\"ref_guide_locking\"/> and\n+<xref linkend=\"ref_guide_lock_groups\"/> of the Reference Guide for details\n+on locking. <xref linkend=\"jpa_overview_meta_version\"/>\n of this document covers standard object versioning, while\n <xref linkend=\"ref_guide_mapping_jpa\"/> of the Reference Guide discusses \n additional versioning strategies available in OpenJPA.\n@@ -304,8 +304,8 @@ additional versioning strategies available in OpenJPA.\n         <mediaobject>\n             <imageobject>\n                 <!-- PNG image data, 193 x 157 (see README) -->\n-                <imagedata fileref=\"img/jpa-transaction.png\" width=\"129px\">\n-                </imagedata>\n+                <imagedata fileref=\"img/jpa-transaction.png\" width=\"129px\"/>\n+                \n             </imageobject>\n         </mediaobject>\n         <para>"},{"sha":"79b4ea5aac336198376437bdb639626c48867239","filename":"openjpa-project/src/doc/manual/jpa_overview_why.xml","status":"modified","additions":8,"deletions":16,"changes":24,"blob_url":"https://github.com/apache/openjpa/blob/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/jpa_overview_why.xml","raw_url":"https://github.com/apache/openjpa/raw/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/jpa_overview_why.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_why.xml?ref=8676abb0ada7d957799c44096cb5af0c0fe917f0","patch":"@@ -24,22 +24,14 @@ by the table below.\n             Persistence Mechanisms\n         </title>\n         <tgroup cols=\"8\" align=\"left\" colsep=\"1\" rowsep=\"1\">\n-            <colspec colname=\"sup\">\n-            </colspec>\n-            <colspec colname=\"ser\">\n-            </colspec>\n-            <colspec colname=\"jdbc\">\n-            </colspec>\n-            <colspec colname=\"or\">\n-            </colspec>\n-            <colspec colname=\"objdb\">\n-            </colspec>\n-            <colspec colname=\"ejb2\">\n-            </colspec>\n-            <colspec colname=\"jdo\">\n-            </colspec>\n-            <colspec colname=\"jpa\">\n-            </colspec>\n+            <colspec colname=\"sup\"/> \n+            <colspec colname=\"ser\"/> \n+            <colspec colname=\"jdbc\"/> \n+            <colspec colname=\"or\"/> \n+            <colspec colname=\"objdb\"/> \n+            <colspec colname=\"ejb2\"/> \n+            <colspec colname=\"jdo\"/> \n+            <colspec colname=\"jpa\"/> \n             <thead>\n                 <row>\n                     <entry colname=\"sup\">"},{"sha":"a536ba7a3cd145601eb679911504aea3ba9b0e74","filename":"openjpa-project/src/doc/manual/jpa_tutorials.xml","status":"modified","additions":21,"deletions":21,"changes":42,"blob_url":"https://github.com/apache/openjpa/blob/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/jpa_tutorials.xml","raw_url":"https://github.com/apache/openjpa/raw/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/jpa_tutorials.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_tutorials.xml?ref=8676abb0ada7d957799c44096cb5af0c0fe917f0","patch":"@@ -84,7 +84,7 @@ closer look at these classes.\n tutorial.persistence.AnimalMaintenance</classname></ulink>: Provides some\n utility methods for examining and manipulating the animals stored in the\n database. We will fill in method definitions in\n-<xref linkend=\"jpa_tutorial_chapter3\"></xref>.\n+<xref linkend=\"jpa_tutorial_chapter3\"/>.\n                         </para>\n                     </listitem>\n                     <listitem>\n@@ -105,16 +105,16 @@ specific to dogs.\n                         <para>\n <ulink url=\"../../../tutorial/persistence/Rabbit.java\"><classname>\n tutorial.persistence.Rabbit</classname></ulink>: Contains data and methods\n-specific to rabbits. It will be used in <xref linkend=\"jpa_tutorial_chapter4\">\n-</xref>.\n+specific to rabbits. It will be used in <xref linkend=\"jpa_tutorial_chapter4\"/>\n+.\n                         </para>\n                     </listitem>\n                     <listitem>\n                         <para>\n <ulink url=\"../../../tutorial/persistence/Snake.java\"><classname>\n tutorial.persistence.Snake</classname></ulink>: Contains data and methods\n-specific to snakes. It will be used in <xref linkend=\"jpa_tutorial_chapter5\">\n-</xref>.\n+specific to snakes. It will be used in <xref linkend=\"jpa_tutorial_chapter5\"/>\n+.\n                         </para>\n                     </listitem>\n                     <listitem>\n@@ -172,8 +172,8 @@ files listed above.\n                             </primary>\n                         </indexterm>\n <command>openjpac</command>: Runs the OpenJPA enhancer against the specified\n-classes. More information is available in <xref linkend=\"ref_guide_pc_enhance\">\n-</xref> of the Reference Guide.\n+classes. More information is available in <xref linkend=\"ref_guide_pc_enhance\"/>\n+ of the Reference Guide.\n                         </para>\n                     </listitem>\n                     <listitem>\n@@ -187,7 +187,7 @@ classes. More information is available in <xref linkend=\"ref_guide_pc_enhance\">\n maintain the object-relational mappings and schema of all persistent classes in\n a JDBC-compliant datastore. This functionality allows the underlying mappings\n and schema to be easily kept up-to-date with the Java classes in the system. See\n-<xref linkend=\"ref_guide_mapping\"></xref> of the Reference Guide for more\n+<xref linkend=\"ref_guide_mapping\"/> of the Reference Guide for more\n information.\n                         </para>\n                     </listitem>\n@@ -257,8 +257,8 @@ public abstract class Animal\n </programlisting>\n                     <para>\n The annotations serve to map the class into the database. For more information\n-on these and other annotations, see <xref linkend=\"jpa_overview_meta\"></xref>\n-and <xref linkend=\"jpa_overview_mapping\"></xref>.\n+on these and other annotations, see <xref linkend=\"jpa_overview_meta\"/>\n+and <xref linkend=\"jpa_overview_mapping\"/>.\n                     </para>\n                     <orderedlist>\n                         <listitem>\n@@ -322,7 +322,7 @@ private float price = 0f;\n </programlisting>\n                     <para>\n The annotations serve to map the fields into the database. For more information\n-on these and other annotations, see <xref linkend=\"jpa_overview_meta\"></xref>.\n+on these and other annotations, see <xref linkend=\"jpa_overview_meta\"/>.\n                     </para>\n                     <orderedlist>\n                         <listitem>\n@@ -374,7 +374,7 @@ openjpac -p persistence.xml Animal.java Dog.java\n                     <para>\n This step runs the OpenJPA enhancer on the <filename>Animal.java</filename> and\n <filename>Dog.java</filename> files mentioned above. See\n-<xref linkend=\"ref_guide_pc_enhance\"></xref> of the Reference Guide for more\n+<xref linkend=\"ref_guide_pc_enhance\"/> of the Reference Guide for more\n information on the enhancer, including how to use automatic runtime enhancement.\n                     </para>\n                     <note>\n@@ -385,7 +385,7 @@ default configuration in a resource called <filename>openjpa.xml</filename> or\n <filename>META-INF/openjpa.xml</filename>. Thus you can avoid passing the\n <literal>-p</literal> argument to tools by using this configuration file name in\n place of <filename>persistence.xml</filename>. See\n-<xref linkend=\"ref_guide_conf\"></xref> in the Reference Guide for details on\n+<xref linkend=\"ref_guide_conf\"/> in the Reference Guide for details on\n OpenJPA configuration.\n                         </para>\n                     </note>\n@@ -405,7 +405,7 @@ of the relational databases that we support. You can also write your own plugin\n for any database that we do not support. For the sake of simplicity, this\n tutorial only describes how to set up connectivity to a Hypersonic SQL database.\n For more information on how to connect to a different database or how to add\n-support for other databases, see <xref linkend=\"ref_guide_dbsetup\"></xref> of\n+support for other databases, see <xref linkend=\"ref_guide_dbsetup\"/> of\n the Reference Guide.\n                 </para>\n                 <orderedlist>\n@@ -431,9 +431,9 @@ directory. To delete the database, just delete these files.\n                         </para>\n                         <para>\n By default, JPA uses object-relational mapping information stored in annotations\n-in your source files. <xref linkend=\"jpa_overview_mapping\"></xref> of the JPA\n+in your source files. <xref linkend=\"jpa_overview_mapping\"/> of the JPA\n Overview will help you understand mapping annotations. Additionally,\n-<xref linkend=\"ref_guide_mapping\"></xref> of the Reference Guide describes your\n+<xref linkend=\"ref_guide_mapping\"/> of the Reference Guide describes your\n other mapping options in detail.\n                         </para>\n                         <para>\n@@ -448,7 +448,7 @@ schematool -p persistence.xml -a reflect -f tmp.schema\n                         <para>\n This will create a <filename>tmp.schema</filename> file with an XML\n representation of the database schema. The XML should be self explanatory; see\n-<xref linkend=\"ref_guide_schema_xml\"></xref> of the Reference Guide for details.\n+<xref linkend=\"ref_guide_schema_xml\"/> of the Reference Guide for details.\n You may delete the <filename>tmp.schema</filename> file before proceeding.\n                         </para>\n                     </listitem>\n@@ -541,8 +541,8 @@ The Java Persistence Query Language (JPQL) is designed to look and behave much\n like an object oriented SQL dialect. The <literal>name</literal> and <literal>\n price</literal> fields identified in the above queries map to the member fields\n of those names in <classname> tutorial.persistence.Animal</classname>. More\n-details on JPQL syntax is available in <xref linkend=\"jpa_overview_query\">\n-</xref> of the JPA Overview.\n+details on JPQL syntax is available in <xref linkend=\"jpa_overview_query\"/>\n+ of the JPA Overview.\n                     </para>\n                 </listitem>\n             </orderedlist>\n@@ -774,7 +774,7 @@ RABBIT_CHILDREN.PARENT_ID</literal> is a foreign key to the parent's <literal>\n ID</literal> primary key column. Similarly, the <literal>inverseJoinColumns\n </literal> attribute denotes the foreign key columns linking to the collection\n elements (the children). For more details on the <literal>@JoinTable</literal>\n-annotation, see <xref linkend=\"jpa_overview_mapping\"></xref> of the JPA\n+annotation, see <xref linkend=\"jpa_overview_mapping\"/> of the JPA\n Overview.\n                     </para>\n                     <para>\n@@ -957,7 +957,7 @@ bidirectional many-to-one relation, the many side must always be the owner.\n                     </para>\n                     <para>\n For more information on types of relations, see\n-<xref linkend=\"jpa_overview_mapping_field\"></xref> of the JPA Overview.\n+<xref linkend=\"jpa_overview_mapping_field\"/> of the JPA Overview.\n                     </para>\n                     <para>\n Modify the <literal>toString (boolean)</literal> method to output the giTract"},{"sha":"06a00b7cfab042dd1e012499744f514e3bb1e024","filename":"openjpa-project/src/doc/manual/openjpa_intro.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/openjpa_intro.xml","raw_url":"https://github.com/apache/openjpa/raw/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/openjpa_intro.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/openjpa_intro.xml?ref=8676abb0ada7d957799c44096cb5af0c0fe917f0","patch":"@@ -21,9 +21,9 @@ details on the use of OpenJPA.\n     </para>\n     <para>\n To quickly get started with JPA, you may want to begin at\n-<xref linkend=\"jpa_tutorial\"></xref>. If you would prefer to start with an\n+<xref linkend=\"jpa_tutorial\"/>. If you would prefer to start with an\n introduction to the concepts of JPA, begin with\n-<xref linkend=\"jpa_overview_intro\"></xref>.\n+<xref linkend=\"jpa_overview_intro\"/>.\n     </para>\n     <section id=\"openjpa_intro_about\">\n         <title>"},{"sha":"486c60bc15b929a34fe5fac1a1a329699e5d3073","filename":"openjpa-project/src/doc/manual/ref_guide_caching.xml","status":"modified","additions":20,"deletions":20,"changes":40,"blob_url":"https://github.com/apache/openjpa/blob/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/ref_guide_caching.xml","raw_url":"https://github.com/apache/openjpa/raw/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/ref_guide_caching.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_caching.xml?ref=8676abb0ada7d957799c44096cb5af0c0fe917f0","patch":"@@ -44,10 +44,10 @@ id, and iteration over an <classname>Extent</classname>. OpenJPA's cache plugin\n accelerates three of these mechanisms. It does not provide any caching of large\n result set relations or <classname>Extent</classname> iterators. If you find\n yourself in need of higher-performance <classname>Extent</classname> iteration,\n-see <xref linkend=\"ref_guide_cache_limits_extent\"></xref>. <table><title>Data\n+see <xref linkend=\"ref_guide_cache_limits_extent\"/>. <table><title>Data\n access methods</title><tgroup cols=\"2\" align=\"left\" colsep=\"1\" rowsep=\"1\">\n-<colspec colname=\"access-method\"></colspec><colspec colname=\"cacheable\">\n-</colspec><thead><row><entry colname=\"access-method\">Access method</entry>\n+<colspec colname=\"access-method\"/><colspec colname=\"cacheable\"/>\n+<thead><row><entry colname=\"access-method\">Access method</entry>\n <entry colname=\"cacheable\">Uses cache</entry></row></thead><tbody><row>\n <entry colname=\"access-method\"> Standard relation traversal</entry>\n <entry colname=\"cacheable\">Yes</entry></row><row>\n@@ -67,9 +67,9 @@ are loaded from the datastore.\n         <para>\n OpenJPA's data cache can in both single-JVM and multi-JVM environments.\n Multi-JVM caching is achieved through the use of the distributed event\n-notification framework described in <xref linkend=\"ref_guide_event\"></xref>, or\n+notification framework described in <xref linkend=\"ref_guide_event\"/>, or\n through one of OpenJPA's integrations with third-party distributed caches (see\n-<xref linkend=\"ref_guide_datacacheintegrations\"></xref> ).\n+<xref linkend=\"ref_guide_datacacheintegrations\"/> ).\n         </para>\n         <para>\n The single JVM mode of operation maintains and shares a data cache across all\n@@ -104,8 +104,8 @@ To configure the data cache to remain up-to-date in a distributed environment,\n set the <link linkend=\"openjpa.RemoteCommitProvider\"><literal>\n openjpa.RemoteCommitProvider</literal></link> property appropriately, or\n integrate OpenJPA with a third-party caching solution. Remote commit providers\n-are described in <xref linkend=\"ref_guide_event\"></xref>.\n-<xref linkend=\"ref_guide_datacacheintegrations\"></xref> enumerates supported\n+are described in <xref linkend=\"ref_guide_event\"/>.\n+<xref linkend=\"ref_guide_datacacheintegrations\"/> enumerates supported\n third-party caching solutions.\n             </para>\n             <para>\n@@ -283,7 +283,7 @@ The <literal>org.apache.openjpa.datacache</literal> package defines OpenJPA's\n data caching framework. While you may use this framework directly (see its\n <ulink url=\"../apidocs/org/apache/openjpa/datacache/package-summary.html\">\n Javadoc</ulink> for details), its APIs are meant primarily for service\n-providers. In fact, <xref linkend=\"ref_guide_cache_extension\"></xref> below has\n+providers. In fact, <xref linkend=\"ref_guide_cache_extension\"/> below has\n tips on how to use this package to extend OpenJPA's caching service yourself.\n             </para>\n             <para>\n@@ -383,7 +383,7 @@ cache.evict (Magazine.class, changedMag.getId ());\n See the <classname>StoreCache</classname>\n <ulink url=\"../../api/openjpa/persistence/StoreCache.html\">Javadoc</ulink> for\n information on additional functionality it provides. Also,\n-<xref linkend=\"ref_guide_runtime\"></xref> discusses OpenJPA's other extensions\n+<xref linkend=\"ref_guide_runtime\"/> discusses OpenJPA's other extensions\n to the standard set of JPA runtime interfaces.\n             </para>\n             <para>\n@@ -964,8 +964,8 @@ mechanism, extend <classname>org.apache.openjpa.datacache.AbstractDataCache\n </classname> directly. If you want to implement a distributed cache that uses an\n unsupported method for communications, create an implementation of <classname>\n org.apache.openjpa.event.RemoteCommitProvider</classname>. This process is\n-described in greater detail in <xref linkend=\"ref_guide_event_customization\">\n-</xref>.\n+described in greater detail in <xref linkend=\"ref_guide_event_customization\"/>\n+.\n             </para>\n             <para>\n The query cache is just as easy to extend. Add functionality by extending the\n@@ -994,7 +994,7 @@ specification.\n Invoking <methodname>OpenJPAEntityManager.evict</methodname><emphasis>does not\n </emphasis> result in the corresponding data being dropped from the data cache,\n unless you have set the proper configuration options as explained above (see\n-<xref linkend=\"ref_guide_cache_pmevict\"></xref> ). Other methods related to the\n+<xref linkend=\"ref_guide_cache_pmevict\"/> ). Other methods related to the\n <classname>EntityManager</classname> cache also do not effect the data cache.\n                     </para>\n                     <para>\n@@ -1106,21 +1106,21 @@ query strings. As a result, most queries are only parsed once in OpenJPA, and\n cached thereafter. You can control the compilation cache through the\n <link linkend=\"openjpa.QueryCompilationCache\"><literal>\n openjpa.QueryCompilationCache</literal></link> configuration property. This\n-property accepts a plugin string (see <xref linkend=\"ref_guide_conf_plugins\">\n-</xref>) describing the <classname>Map</classname> used to associate query\n+property accepts a plugin string (see <xref linkend=\"ref_guide_conf_plugins\"/>\n+) describing the <classname>Map</classname> used to associate query\n strings and their parsed form. This property accepts the following aliases:\n         </para>\n         <table>\n             <title>\n                 Pre-defined aliases\n             </title>\n             <tgroup cols=\"2\" align=\"left\" colsep=\"1\" rowsep=\"1\">\n-                <colspec colname=\"alias\">\n-                </colspec>\n-                <colspec colname=\"value\">\n-                </colspec>\n-                <colspec colname=\"notes\">\n-                </colspec>\n+                <colspec colname=\"alias\"/>\n+                \n+                <colspec colname=\"value\"/>\n+                \n+                <colspec colname=\"notes\"/>\n+                \n                 <thead>\n                     <row>\n                         <entry colname=\"alias\">"},{"sha":"937cd7d111d6ff3de2836ed71737379daa31cc82","filename":"openjpa-project/src/doc/manual/ref_guide_conf.xml","status":"modified","additions":93,"deletions":93,"changes":186,"blob_url":"https://github.com/apache/openjpa/blob/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/ref_guide_conf.xml","raw_url":"https://github.com/apache/openjpa/raw/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/ref_guide_conf.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_conf.xml?ref=8676abb0ada7d957799c44096cb5af0c0fe917f0","patch":"@@ -95,7 +95,7 @@ When using JCA deployment the <literal>config-property</literal> values in your\n                 <para>\n All OpenJPA command-line tools accept flags that allow you to specify the\n configuration resource to use, and to override any property.\n-<xref linkend=\"ref_guide_conf_devtools\"></xref> describes these flags.\n+<xref linkend=\"ref_guide_conf_devtools\"/> describes these flags.\n                 </para>\n             </listitem>\n         </itemizedlist>\n@@ -389,12 +389,12 @@ AggregateListeners</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A comma-separated list of plugin\n-strings (see <xref linkend=\"ref_guide_conf_plugins\"></xref>) describing custom\n+strings (see <xref linkend=\"ref_guide_conf_plugins\"/>) describing custom\n <ulink url=\"../apidocs/org/apache/openjpa/jdbc/kernel/exps/JDBCAggregateListener.html\">\n <classname> org.apache.openjpa.jdbc.kernel.exps.JDBCAggregateListener\n </classname></ulink>s to make available to all queries, in addition to the\n-standard set of listeners. See <xref linkend=\"ref_guide_enterprise_queryext\">\n-</xref> for details on aggregate listeners.\n+standard set of listeners. See <xref linkend=\"ref_guide_enterprise_queryext\"/>\n+ for details on aggregate listeners.\n             </para>\n         </section>\n         <section id=\"openjpa.AutoClear\">\n@@ -522,7 +522,7 @@ BrokerFactory</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref>) describing the\n+<xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n <ulink url=\"../apidocs/org/apache/openjpa/kernel/BrokerFactory.html\">\n <classname>org.apache.openjpa.kernel.BrokerFactory</classname></ulink> type to\n use.\n@@ -564,10 +564,10 @@ BrokerImpl</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref>) describing the\n+<xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n <ulink url=\"../apidocs/org/apache/openjpa/kernel/Broker.html\"><classname>\n org.apache.openjpa.kernel.Broker</classname></ulink> type to use at runtime. See\n-<xref linkend=\"ref_guide_runtime_pmextension\"></xref> on for details.\n+<xref linkend=\"ref_guide_runtime_pmextension\"/> on for details.\n             </para>\n         </section>\n         <section id=\"openjpa.ClassResolver\">\n@@ -606,7 +606,7 @@ ClassResolver</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref>) describing the\n+<xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n <ulink url=\"../apidocs/org/apache/openjpa/util/ClassResolver.html\"><classname>\n org.apache.openjpa.util.ClassResolver</classname></ulink> implementation to use\n for class name resolution. You may wish to plug in your own resolver if you have\n@@ -688,7 +688,7 @@ ConnectionDriverName</literal>\n <emphasis role=\"bold\">Description:</emphasis> The full class name of either the\n JDBC <classname>java.sql.Driver</classname>, or a <classname>\n javax.sql.DataSource</classname> implementation to use to connect to the\n-database. See <xref linkend=\"ref_guide_dbsetup\"></xref> for details.\n+database. See <xref linkend=\"ref_guide_dbsetup\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.Connection2DriverName\">\n@@ -729,9 +729,9 @@ Connection2DriverName</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> This property is equivalent to the\n <literal>openjpa.ConnectionDriverName</literal> property described in\n-<xref linkend=\"openjpa.ConnectionDriverName\"></xref>, but applies to the\n+<xref linkend=\"openjpa.ConnectionDriverName\"/>, but applies to the\n alternate connection factory used for unmanaged connections. See\n-<xref linkend=\"ref_guide_dbsetup_thirdparty_enlist\"></xref> for details.\n+<xref linkend=\"ref_guide_dbsetup_thirdparty_enlist\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.ConnectionFactory\">\n@@ -771,7 +771,7 @@ ConnectionFactory</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A <classname>javax.sql.DataSource\n </classname> to use to connect to the database. See\n-<xref linkend=\"ref_guide_dbsetup\"></xref> for details.\n+<xref linkend=\"ref_guide_dbsetup\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.ConnectionFactory2\">\n@@ -811,7 +811,7 @@ ConnectionFactory2</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> An unmanaged <classname>\n javax.sql.DataSource</classname> to use to connect to the database. See\n-<xref linkend=\"ref_guide_dbsetup\"></xref> for details.\n+<xref linkend=\"ref_guide_dbsetup\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.ConnectionFactoryName\">\n@@ -852,7 +852,7 @@ ConnectionFactoryName</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> The JNDI location of a <classname>\n javax.sql.DataSource</classname> to use to connect to the database. See\n-<xref linkend=\"ref_guide_dbsetup\"></xref> for details.\n+<xref linkend=\"ref_guide_dbsetup\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.ConnectionFactory2Name\">\n@@ -893,7 +893,7 @@ ConnectionFactory2Name</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> The JNDI location of an unmanaged\n <classname>javax.sql.DataSource</classname> to use to connect to the database.\n-See <xref linkend=\"ref_guide_enterprise_xa\"></xref> for details.\n+See <xref linkend=\"ref_guide_enterprise_xa\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.ConnectionFactoryMode\">\n@@ -938,7 +938,7 @@ ConnectionFactoryMode</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> The connection factory mode to use\n when integrating with the application server's managed transactions. See\n-<xref linkend=\"ref_guide_dbsetup_thirdparty_enlist\"></xref> for details.\n+<xref linkend=\"ref_guide_dbsetup_thirdparty_enlist\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.ConnectionFactoryProperties\">\n@@ -978,9 +978,9 @@ ConnectionFactoryProperties</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref>) listing properties for\n+<xref linkend=\"ref_guide_conf_plugins\"/>) listing properties for\n configuration of the <classname>javax.sql.DataSource</classname> in use. See the\n-<xref linkend=\"ref_guide_dbsetup\"></xref> for details.\n+<xref linkend=\"ref_guide_dbsetup\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.ConnectionFactory2Properties\">\n@@ -1021,9 +1021,9 @@ ConnectionFactory2Properties</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> This property is equivalent to the\n <literal>openjpa.ConnectionFactoryProperties</literal> property described in\n-<xref linkend=\"openjpa.ConnectionFactoryProperties\"></xref>, but applies to the\n+<xref linkend=\"openjpa.ConnectionFactoryProperties\"/>, but applies to the\n alternate connection factory used for unmanaged connections. See\n-<xref linkend=\"ref_guide_dbsetup_thirdparty_enlist\"></xref> for details.\n+<xref linkend=\"ref_guide_dbsetup_thirdparty_enlist\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.ConnectionPassword\">\n@@ -1063,7 +1063,7 @@ ConnectionPassword</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> The password for the user\n specified in the <literal>ConnectionUserName</literal> property. See\n-<xref linkend=\"ref_guide_dbsetup\"></xref> for details.\n+<xref linkend=\"ref_guide_dbsetup\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.Connection2Password\">\n@@ -1103,9 +1103,9 @@ Connection2Password</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> This property is equivalent to the\n <literal>openjpa.ConnectionPassword</literal> property described in\n-<xref linkend=\"openjpa.ConnectionPassword\"></xref>, but applies to the\n+<xref linkend=\"openjpa.ConnectionPassword\"/>, but applies to the\n alternate connection factory used for unmanaged connections. See\n-<xref linkend=\"ref_guide_dbsetup_thirdparty_enlist\"></xref> for details.\n+<xref linkend=\"ref_guide_dbsetup_thirdparty_enlist\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.ConnectionProperties\">\n@@ -1145,9 +1145,9 @@ ConnectionProperties</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref>) listing properties to configure\n+<xref linkend=\"ref_guide_conf_plugins\"/>) listing properties to configure\n the driver listed in the <literal>ConnectionDriverName</literal> property\n-described below. See <xref linkend=\"ref_guide_dbsetup\"></xref> for details.\n+described below. See <xref linkend=\"ref_guide_dbsetup\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.Connection2Properties\">\n@@ -1188,9 +1188,9 @@ Connection2Properties</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> This property is equivalent to the\n <literal>openjpa.ConnectionProperties</literal> property described in\n-<xref linkend=\"openjpa.ConnectionProperties\"></xref>, but applies to the\n+<xref linkend=\"openjpa.ConnectionProperties\"/>, but applies to the\n alternate connection factory used for unmanaged connections. See\n-<xref linkend=\"ref_guide_dbsetup_thirdparty_enlist\"></xref> for details.\n+<xref linkend=\"ref_guide_dbsetup_thirdparty_enlist\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.ConnectionURL\">\n@@ -1229,7 +1229,7 @@ ConnectionURL</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> The JDBC URL for the database. See\n-<xref linkend=\"ref_guide_dbsetup\"></xref> for details.\n+<xref linkend=\"ref_guide_dbsetup\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.Connection2URL\">\n@@ -1269,9 +1269,9 @@ Connection2URL</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> This property is equivalent to the\n <literal>openjpa.ConnectionURL</literal> property described in\n-<xref linkend=\"openjpa.ConnectionURL\"></xref>, but applies to the alternate\n+<xref linkend=\"openjpa.ConnectionURL\"/>, but applies to the alternate\n connection factory used for unmanaged connections. See\n-<xref linkend=\"ref_guide_dbsetup_thirdparty_enlist\"></xref> for details.\n+<xref linkend=\"ref_guide_dbsetup_thirdparty_enlist\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.ConnectionUserName\">\n@@ -1310,7 +1310,7 @@ ConnectionUserName</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> The user name to use when\n-connecting to the database. See the <xref linkend=\"ref_guide_dbsetup\"></xref>\n+connecting to the database. See the <xref linkend=\"ref_guide_dbsetup\"/>\n for details.\n             </para>\n         </section>\n@@ -1351,9 +1351,9 @@ Connection2UserName</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> This property is equivalent to the\n <literal>openjpa.ConnectionUserName</literal> property described in\n-<xref linkend=\"openjpa.ConnectionUserName\"></xref>, but applies to the\n+<xref linkend=\"openjpa.ConnectionUserName\"/>, but applies to the\n alternate connection factory used for unmanaged connections. See\n-<xref linkend=\"ref_guide_dbsetup_thirdparty_enlist\"></xref> for details.\n+<xref linkend=\"ref_guide_dbsetup_thirdparty_enlist\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.ConnectionRetainMode\">\n@@ -1394,7 +1394,7 @@ ConnectionRetainMode</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> Controls how OpenJPA uses\n datastore connections. This property can also be specified for individual\n-sessions. See <xref linkend=\"ref_guide_dbsetup_retain\"></xref> for details.\n+sessions. See <xref linkend=\"ref_guide_dbsetup_retain\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.DataCache\">\n@@ -1433,10 +1433,10 @@ DataCache</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin list string (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref>) describing the\n+<xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n <ulink url=\"../apidocs/org/apache/openjpa/datacache/DataCache.html\"><classname>\n org.apache.openjpa.datacache.DataCache</classname></ulink>s to use for data\n-caching. See <xref linkend=\"ref_guide_cache_conf\"></xref> for details.\n+caching. See <xref linkend=\"ref_guide_cache_conf\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.DataCacheManager\">\n@@ -1475,10 +1475,10 @@ DataCacheManager</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref>) describing the\n+<xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n <ulink url=\"../apidocs/org/apache/openjpa/datacache/DataCacheManager.html\">\n <classname>openjpa.datacache.DataCacheManager</classname></ulink> that manages\n-the system data caches. See <xref linkend=\"ref_guide_cache\"></xref> for details\n+the system data caches. See <xref linkend=\"ref_guide_cache\"/> for details\n on data caching.\n             </para>\n         </section>\n@@ -1520,7 +1520,7 @@ DataCacheTimeout</literal>\n <emphasis role=\"bold\">Description:</emphasis> The number of milliseconds that\n data in the data cache is valid. Set this to -1 to indicate that data should not\n expire from the cache. This property can also be specified for individual\n-classes. See <xref linkend=\"ref_guide_cache_conf\"></xref> for details.\n+classes. See <xref linkend=\"ref_guide_cache_conf\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.DetachState\">\n@@ -1567,7 +1567,7 @@ DetachState</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> Determines which fields are part\n of the detached graph and related options. For more details, see\n-<xref linkend=\"ref_guide_detach_graph\"></xref>.\n+<xref linkend=\"ref_guide_detach_graph\"/>.\n             </para>\n         </section>\n         <section id=\"openjpa.DynamicDataStructs\">\n@@ -1662,7 +1662,7 @@ FetchBatchSize</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> The number of rows to fetch at\n once when scrolling through a result set. The fetch size can also be set at\n-runtime. See <xref linkend=\"ref_guide_dbsetup_lrs\"></xref> for details.\n+runtime. See <xref linkend=\"ref_guide_dbsetup_lrs\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.FetchGroups\">\n@@ -1697,8 +1697,8 @@ FetchGroups</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A comma-separated list of fetch\n group names that are to be loaded when retrieving objects from the datastore.\n-Fetch groups can also be set at runtime. See <xref linkend=\"ref_guide_fetch\">\n-</xref> for details.\n+Fetch groups can also be set at runtime. See <xref linkend=\"ref_guide_fetch\"/>\n+ for details.\n             </para>\n         </section>\n         <section id=\"openjpa.FilterListeners\">\n@@ -1737,12 +1737,12 @@ FilterListeners</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A comma-separated list of full\n-plugin strings (see <xref linkend=\"ref_guide_conf_plugins\"></xref>) for custom\n+plugin strings (see <xref linkend=\"ref_guide_conf_plugins\"/>) for custom\n <ulink url=\"../apidocs/org/apache/openjpa/jdbc/kernel/exps/JDBCFilterListener.html\">\n <classname> org.apache.openjpa.jdbc.kernel.exps.JDBCFilterListener</classname>\n </ulink>s to make available to all queries, in addition to the standard set of\n listeners. You can also add filter listeners to individual queries. See\n-<xref linkend=\"ref_guide_enterprise_queryext\"></xref> for details.\n+<xref linkend=\"ref_guide_enterprise_queryext\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.FlushBeforeQueries\">\n@@ -1794,7 +1794,7 @@ FlushBeforeQueries</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> Whether or not to flush any\n changes made in the current transaction to the datastore before executing a\n-query. See <xref linkend=\"ref_guide_dbsetup_retain\"></xref> for details.\n+query. See <xref linkend=\"ref_guide_dbsetup_retain\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.IgnoreChanges\">\n@@ -1873,11 +1873,11 @@ InverseManager</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref>) describing a\n+<xref linkend=\"ref_guide_conf_plugins\"/>) describing a\n <ulink url=\"../apidocs/org/apache/openjpa/kernel/InverseManager.html\">\n <classname>org.apache.openjpa.kernel.InverseManager</classname></ulink> to use\n for managing bidirectional relations upon a flush. See\n-<xref linkend=\"ref_guide_inverses\"></xref> for usage documentation.\n+<xref linkend=\"ref_guide_inverses\"/> for usage documentation.\n             </para>\n         </section>\n         <section id=\"openjpa.LockManager\">\n@@ -1920,7 +1920,7 @@ LockManager</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref>) describing a\n+<xref linkend=\"ref_guide_conf_plugins\"/>) describing a\n <ulink url=\"../apidocs/org/apache/openjpa/kernel/LockManager.html\"><classname>\n org.apache.openjpa.kernel.LockManager</classname></ulink> to use for acquiring\n locks on persistent instances during transactions.\n@@ -1963,7 +1963,7 @@ LockTimeout</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> The number of milliseconds to wait\n for an object lock before throwing an exception, or -1 for no limit. See\n-<xref linkend=\"ref_guide_locking\"></xref> for details.\n+<xref linkend=\"ref_guide_locking\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.Log\">\n@@ -2005,10 +2005,10 @@ for an object lock before throwing an exception, or -1 for no limit. See\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref>) describing a\n+<xref linkend=\"ref_guide_conf_plugins\"/>) describing a\n <ulink url=\"../apidocs/org/apache/openjpa/lib/log/LogFactory.html\"><classname>\n org.apache.openjpa.lib.log.LogFactory</classname></ulink> to use for logging.\n-For details on logging, see <xref linkend=\"ref_guide_logging\"></xref>.\n+For details on logging, see <xref linkend=\"ref_guide_logging\"/>.\n             </para>\n         </section>\n         <section id=\"openjpa.ManagedRuntime\">\n@@ -2050,7 +2050,7 @@ ManagedRuntime</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref>) describing the\n+<xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n <ulink url=\"../apidocs/org/apache/openjpa/ee/ManagedRuntime.html\"><classname>\n org.apache.openjpa.ee.ManagedRuntime</classname></ulink> implementation to use\n for obtaining a reference to the <classname>TransactionManager</classname> in an\n@@ -2167,11 +2167,11 @@ MetaDataFactory</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref>) describing the\n+<xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n <ulink url=\"../apidocs/org/apache/openjpa/meta/MetaDataFactory.html\">\n <classname>openjpa.meta.MetaDataFactory</classname></ulink> to use to store and\n retrieve metadata for your persistent classes. See\n-<xref linkend=\"ref_guide_meta_factory\"></xref> for details.\n+<xref linkend=\"ref_guide_meta_factory\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.Multithreaded\">\n@@ -2292,11 +2292,11 @@ OrphanedKeyAction</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref>) describing a\n+<xref linkend=\"ref_guide_conf_plugins\"/>) describing a\n <ulink url=\"../apidocs/org/apache/openjpa/event/OrphanedKeyAction.html\">\n <classname>org.apache.openjpa.event.OrphanedKeyAction</classname></ulink> to\n invoke when OpenJPA discovers an orphaned datastore key. See\n-<xref linkend=\"ref_guide_orphan\"></xref> for details.\n+<xref linkend=\"ref_guide_orphan\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.NontransactionalRead\">\n@@ -2400,11 +2400,11 @@ ProxyManager</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref>) describing a\n+<xref linkend=\"ref_guide_conf_plugins\"/>) describing a\n <ulink url=\"../apidocs/org/apache/openjpa/util/ProxyManager.html\"><classname>\n org.apache.openjpa.util.ProxyManager</classname></ulink> to use for proxying\n mutable second class objects. See\n-<xref linkend=\"ref_guide_pc_scos_proxy_custom\"></xref> for details.\n+<xref linkend=\"ref_guide_pc_scos_proxy_custom\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.QueryCache\">\n@@ -2440,16 +2440,16 @@ QueryCache</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Default:</emphasis><literal>true</literal>, when the data\n-cache (see <xref linkend=\"openjpa.DataCache\"></xref>) is also enabled, <literal>\n+cache (see <xref linkend=\"openjpa.DataCache\"/>) is also enabled, <literal>\n false</literal> otherwise.\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref>) describing the\n+<xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n <ulink url=\"../apidocs/org/apache/openjpa/datacache/QueryCache.html\">\n <classname>org.apache.openjpa.datacache.QueryCache</classname></ulink>\n implementation to use for caching of queries loaded from the data store. See\n-<xref linkend=\"ref_guide_cache_query\"></xref> for details.\n+<xref linkend=\"ref_guide_cache_query\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.QueryCompilationCache\">\n@@ -2489,9 +2489,9 @@ QueryCompilationCache</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref>) describing the <literal>\n+<xref linkend=\"ref_guide_conf_plugins\"/>) describing the <literal>\n java.util.Map</literal> to use for caching of data used during query\n-compilation. See <xref linkend=\"ref_guide_cache_querycomp\"></xref> for details.\n+compilation. See <xref linkend=\"ref_guide_cache_querycomp\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.ReadLockLevel\">\n@@ -2585,11 +2585,11 @@ RemoteCommitProvider</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref>) describing the\n+<xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n <ulink url=\"../apidocs/org/apache/openjpa/event/RemoteCommitProvider.html\">\n <classname>org.apache.openjpa.event.RemoteCommitProvider</classname></ulink>\n implementation to use for distributed event notification. See\n-<xref linkend=\"ref_guide_event_conf\"></xref> for more information.\n+<xref linkend=\"ref_guide_event_conf\"/> for more information.\n             </para>\n         </section>\n         <section id=\"openjpa.RestoreState\">\n@@ -2728,11 +2728,11 @@ SavepointManager\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref>) describing a\n+<xref linkend=\"ref_guide_conf_plugins\"/>) describing a\n <ulink url=\"javadoc/openjpa/kernel/SavepointManager.html\"><classname>\n org.apache.openjpa.kernel.SavepointManager</classname></ulink> to use for\n-managing transaction savepoints. See <xref linkend=\"ref_guide_savepoints\">\n-</xref> for details.\n+managing transaction savepoints. See <xref linkend=\"ref_guide_savepoints\"/>\n+ for details.\n             </para>\n         </section>\n         <section id=\"openjpa.Sequence\">\n@@ -2763,10 +2763,10 @@ Sequence</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref>) describing the\n+<xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n <ulink url=\"../apidocs/org/apache/openjpa/kernel/Seq.html\"><classname>\n org.apache.openjpa.kernel.Seq</classname></ulink> implementation to use for the\n-system sequence. See <xref linkend=\"ref_guide_sequence\"></xref> for more\n+system sequence. See <xref linkend=\"ref_guide_sequence\"/> for more\n information.\n             </para>\n         </section>\n@@ -2912,7 +2912,7 @@ ConnectionDecorators</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A comma-separated list of plugin\n-strings (see <xref linkend=\"ref_guide_conf_plugins\"></xref>) describing\n+strings (see <xref linkend=\"ref_guide_conf_plugins\"/>) describing\n <ulink url=\"../apidocs/org/apache/openjpa/lib/jdbc/ConnectionDecorator.html\">\n <classname>org.apache.openjpa.lib.jdbc.ConnectionDecorator</classname></ulink>\n instances to install on the connection factory. These decorators can wrap\n@@ -2962,14 +2962,14 @@ openjpa.ConnectionDriverName</literal></link>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref>) describing the\n+<xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n <ulink url=\"../apidocs/org/apache/openjpa/jdbc/sql/DBDictionary.html\">\n <classname>org.apache.openjpa.jdbc.sql.DBDictionary</classname></ulink> to use\n for database interaction. OpenJPA typically auto-configures the dictionary based\n on the JDBC URL, but you may have to set this property explicitly if you are\n using an unrecognized driver, or to plug in your own dictionary for a database\n OpenJPA <phrase>JPA</phrase> does not support out-of-the-box. See\n-<xref linkend=\"ref_guide_dbsetup_dbsupport\"></xref> for details.\n+<xref linkend=\"ref_guide_dbsetup_dbsupport\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.jdbc.DriverDataSource\">\n@@ -3016,7 +3016,7 @@ instances. The provided default implementation (\n <ulink url=\"../apidocs/org/apache/openjpa/jdbc/schema/OpenJPAPoolingDataSource\">\n <classname>org.apache.openjpa.jdbc.schema.OpenJPAPoolingDataSource</classname>\n </ulink>, will perform connection pooling as described at\n-<xref linkend=\"ref_guide_dbsetup\"></xref>.\n+<xref linkend=\"ref_guide_dbsetup\"/>.\n             </para>\n         </section>\n         <section id=\"openjpa.jdbc.EagerFetchMode\">\n@@ -3060,7 +3060,7 @@ EagerFetchMode</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> Optimizes how OpenJPA loads\n persistent relations. This setting can also be varied at runtime. See\n-<xref linkend=\"ref_guide_perfpack_eager\"></xref> for details.\n+<xref linkend=\"ref_guide_perfpack_eager\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.jdbc.FetchDirection\">\n@@ -3104,7 +3104,7 @@ FetchDirection</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> The expected order in which query\n result lists will be accessed. This property can also be varied at runtime. See\n-<xref linkend=\"ref_guide_dbsetup_lrs\"></xref> for details.\n+<xref linkend=\"ref_guide_dbsetup_lrs\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.jdbc.JDBCListeners\">\n@@ -3143,7 +3143,7 @@ JDBCListeners</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A comma-separated list of plugin\n-strings (see <xref linkend=\"ref_guide_conf_plugins\"></xref>) describing\n+strings (see <xref linkend=\"ref_guide_conf_plugins\"/>) describing\n <ulink url=\"../apidocs/org/apache/openjpa/lib/jdbc/JDBCListener.html\">\n <classname>org.apache.openjpa.lib.jdbc.JDBCListener</classname></ulink> event\n listeners to install. These listeners will be notified on various JDBC-related\n@@ -3191,7 +3191,7 @@ LRSSize</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> The strategy to use to calculate\n the size of a result list. This property can also be varied at runtime. See\n-<xref linkend=\"ref_guide_dbsetup_lrs\"></xref> for details.\n+<xref linkend=\"ref_guide_dbsetup_lrs\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.jdbc.MappingDefaults\">\n@@ -3234,11 +3234,11 @@ MappingDefaults</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref>) describing the\n+<xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n <ulink url=\"../apidocs/org/apache/openjpa/jdbc/meta/MappingDefaults.html\">\n <classname>org.apache.openjpa.jdbc.meta.MappingDefaults</classname></ulink> to\n use to define default column names, table names, and constraints for your\n-persistent classes. See <xref linkend=\"ref_guide_mapping_factory\"></xref> for\n+persistent classes. See <xref linkend=\"ref_guide_mapping_factory\"/> for\n details.\n             </para>\n         </section>\n@@ -3282,11 +3282,11 @@ MappingFactory</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref>) describing the\n+<xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n <ulink url=\"../apidocs/org/apache/openjpa/meta/MetaDataFactory.html\">\n <classname>org.apache.openjpa.meta.MetaDataFactory</classname></ulink> to use to\n store and retrieve object-relational mapping information for your persistent\n-classes. See <xref linkend=\"ref_guide_mapping_factory\"></xref> for details.\n+classes. See <xref linkend=\"ref_guide_mapping_factory\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.jdbc.ResultSetType\">\n@@ -3330,7 +3330,7 @@ ResultSetType</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> The JDBC result set type to use\n when fetching result lists. This property can also be varied at runtime. See\n-<xref linkend=\"ref_guide_dbsetup_lrs\"></xref> for details.\n+<xref linkend=\"ref_guide_dbsetup_lrs\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.jdbc.Schema\">\n@@ -3365,7 +3365,7 @@ Schema</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> The default schema name to prepend\n to unqualified table names. Also, the schema in which OpenJPA will create new\n-tables. See <xref linkend=\"ref_guide_schema_def\"></xref> for details.\n+tables. See <xref linkend=\"ref_guide_schema_def\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.jdbc.SchemaFactory\">\n@@ -3409,11 +3409,11 @@ others\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref>) describing the\n+<xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n <ulink url=\"../apidocs/org/apache/openjpa/jdbc/schema/SchemaFactory.html\">\n <classname>org.apache.openjpa.jdbc.schema.SchemaFactory</classname></ulink> to\n use to store and retrieve information about the database schema. See\n-<xref linkend=\"ref_guide_schema_info_factory\"></xref> for details.\n+<xref linkend=\"ref_guide_schema_info_factory\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.jdbc.Schemas\">\n@@ -3448,7 +3448,7 @@ Schemas</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A comma-separated list of the\n schemas and/or tables used for your persistent data. See\n-<xref linkend=\"ref_guide_schema_info_list\"></xref> for details.\n+<xref linkend=\"ref_guide_schema_info_list\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.jdbc.SQLFactory\">\n@@ -3487,10 +3487,10 @@ SQLFactory</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref>) describing the\n+<xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n <ulink url=\"../apidocs/org/apache/openjpa/jdbc/sql/SQLFactory.html\"><classname>\n org.apache.openjpa.jdbc.sql.SQLFactory</classname></ulink> to use to abstract\n-common SQL constructs. See <xref linkend=\"ref_guide_dbsetup_sqlfactory\"></xref>\n+common SQL constructs. See <xref linkend=\"ref_guide_dbsetup_sqlfactory\"/>\n for details.\n             </para>\n         </section>\n@@ -3543,7 +3543,7 @@ SubclassFetchMode</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> How to select subclass data when\n it is in other tables. This setting can also be varied at runtime. See\n-<xref linkend=\"ref_guide_perfpack_eager\"></xref>.\n+<xref linkend=\"ref_guide_perfpack_eager\"/>.\n             </para>\n         </section>\n         <section id=\"openjpa.jdbc.SynchronizeMappings\">\n@@ -3585,7 +3585,7 @@ SynchronizeMappings</literal>\n <emphasis role=\"bold\">Description:</emphasis> Controls whether OpenJPA will\n attempt to run the mapping tool on all persistent classes to synchronize their\n mappings and schema at runtime. Useful for rapid test/debug cycles. See\n-<xref linkend=\"ref_guide_mapping_synch\"></xref> for more information.\n+<xref linkend=\"ref_guide_mapping_synch\"/> for more information.\n             </para>\n         </section>\n         <section id=\"openjpa.jdbc.TransactionIsolation\">\n@@ -3639,7 +3639,7 @@ serializable</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> The JDBC transaction isolation\n-level to use. See <xref linkend=\"ref_guide_dbsetup_isolation\"></xref> for\n+level to use. See <xref linkend=\"ref_guide_dbsetup_isolation\"/> for\n details.\n             </para>\n         </section>"},{"sha":"9659ecb7b35a1b5ce57c6652e8c23661d9a42331","filename":"openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","status":"modified","additions":33,"deletions":33,"changes":66,"blob_url":"https://github.com/apache/openjpa/blob/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","raw_url":"https://github.com/apache/openjpa/raw/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml?ref=8676abb0ada7d957799c44096cb5af0c0fe917f0","patch":"@@ -87,7 +87,7 @@ user.\n To configure advanced features such as connection pooling and prepared statement\n caching, or to configure the underlying JDBC driver, use the following optional\n properties. The syntax of these property strings follows the syntax of OpenJPA\n-plugin parameters described in <xref linkend=\"ref_guide_conf_plugins\"></xref>.\n+plugin parameters described in <xref linkend=\"ref_guide_conf_plugins\"/>.\n         </para>\n         <itemizedlist>\n             <listitem>\n@@ -377,10 +377,10 @@ database is not shown, this property defaults to null.\n                                 Validation SQL Defaults\n                             </title>\n                             <tgroup cols=\"2\" align=\"left\" colsep=\"1\" rowsep=\"1\">\n-                                <colspec colname=\"db\">\n-                                </colspec>\n-                                <colspec colname=\"sql\">\n-                                </colspec>\n+                                <colspec colname=\"db\"/>\n+                                \n+                                <colspec colname=\"sql\"/>\n+                                \n                                 <thead>\n                                     <row>\n                                         <entry colname=\"db\">\n@@ -480,7 +480,7 @@ database is not shown, this property defaults to null.\n                         </table>\n                         <para>\n To disable validation SQL, set this property to an empty string, as in\n-<xref linkend=\"ref_guide_dbsetup_builtin_ex\"></xref>\n+<xref linkend=\"ref_guide_dbsetup_builtin_ex\"/>\n                         </para>\n                     </listitem>\n                     <listitem>\n@@ -802,12 +802,12 @@ unique primary key values for your datastore identity objects. Configure the\n second <classname> DataSource</classname> just as the first, but use the various\n \"2\" connection properties, such as <literal>openjpa.ConnectionFactory2Name\n </literal> or <literal>openjpa.Connection2DriverName</literal>. These\n-properties are outlined in <xref linkend=\"ref_guide_conf\"></xref>. <phrase> If\n+properties are outlined in <xref linkend=\"ref_guide_conf\"/>. <phrase> If\n your second <classname>DataSource</classname> is also bound to JNDI, you can use\n JPA XML's <literal>non-jta-data-source</literal> to specify its location.\n </phrase> Typically, <phrase>though,</phrase> you will use OpenJPA's built-in\n implementation for the second <classname>DataSource</classname> (see\n-<xref linkend=\"ref_guide_dbsetup_builtin\"></xref> ).\n+<xref linkend=\"ref_guide_dbsetup_builtin\"/> ).\n             </para>\n             <example id=\"ref_guide_enterprise_xa_conf_ex\">\n                 <title>\n@@ -941,7 +941,7 @@ conn.close ();\n         <para>\n OpenJPA <phrase>JPA</phrase> can take advantage of any JDBC 2.x compliant\n driver, making almost any major database a candidate for use. See our officially\n-supported database list in <xref linkend=\"supported_databases\"></xref> for more\n+supported database list in <xref linkend=\"supported_databases\"/> for more\n information. Typically, OpenJPA auto-configures its JDBC behavior and SQL\n dialect for your database, based on the values of your connection-related\n configuration properties.\n@@ -1582,7 +1582,7 @@ database whenever a connection is retrieved from the <classname>DataSource\n                         </secondary>\n                     </indexterm>\n <literal>JoinSyntax</literal>: The SQL join syntax to use in select statements.\n-See <xref linkend=\"ref_guide_dbsetup_sql92\"></xref>.\n+See <xref linkend=\"ref_guide_dbsetup_sql92\"/>.\n                     </para>\n                 </listitem>\n                 <listitem id=\"DBDictionary.CrossJoinClause\">\n@@ -2959,8 +2959,8 @@ simulation of auto-increment columns by the use of Oracle triggers. OpenJPA will\n assume that the current sequence value from the sequence specified in the\n <literal>AutoAssignSequenceName</literal> parameter will hold the value of the\n new primary key for rows that have been inserted. For more details on\n-auto-increment support, see <xref linkend=\"ref_guide_pc_oid_pkgen_autoinc\">\n-</xref>.\n+auto-increment support, see <xref linkend=\"ref_guide_pc_oid_pkgen_autoinc\"/>\n+.\n                     </para>\n                 </listitem>\n                 <listitem id=\"OracleDictionary.AutoAssignSequenceName\">\n@@ -3093,7 +3093,7 @@ configure the following parameters:\n                 </indexterm>\n <literal>BatchLimit</literal>: The maximum number of SQL update statements to\n batch together. Set to 0 to disable statement batching, or -1 for no limit. See\n-<xref linkend=\"ref_guide_perfpack_batch\"></xref>.\n+<xref linkend=\"ref_guide_perfpack_batch\"/>.\n                 </para>\n             </listitem>\n             <listitem id=\"SQLFactory.BatchParameterLimit\">\n@@ -3335,8 +3335,8 @@ Not all databases support this syntax.\n         </itemizedlist>\n         <para>\n You can change the join syntax at runtime through the OpenJPA fetch\n-configuration API, which is described in <xref linkend=\"ref_guide_runtime\">\n-</xref>.\n+configuration API, which is described in <xref linkend=\"ref_guide_runtime\"/>\n+.\n         </para>\n         <example id=\"ref_guide_dbsetup_sql92_conf\">\n             <title>\n@@ -3446,7 +3446,7 @@ commit process.\n You can also specify the connection retain mode of individual <classname>\n EntityManager</classname>s when you retrieve them from the <classname>\n EntityManagerFactory</classname>. See\n-<xref linkend=\"ref_guide_runtime_emfactory\"></xref> for details.\n+<xref linkend=\"ref_guide_runtime_emfactory\"/> for details.\n         </para>\n         <para>\n         <indexterm>\n@@ -3493,7 +3493,7 @@ earlier in this section.\n         </itemizedlist>\n         <para>\n The flush mode can also be varied at runtime using the OpenJPA fetch\n-configuration API, discussed in <xref linkend=\"ref_guide_runtime\"></xref>.\n+configuration API, discussed in <xref linkend=\"ref_guide_runtime\"/>.\n         </para>\n         <para>\n         <indexterm>\n@@ -3514,16 +3514,16 @@ results.\n                 OpenJPA Automatic Flush Behavior\n             </title>\n             <tgroup rowsep=\"1\" colsep=\"1\" align=\"left\" cols=\"5\">\n-                <colspec colname=\"col1\">\n-                </colspec>\n-                <colspec colname=\"col2\">\n-                </colspec>\n-                <colspec colname=\"col3\">\n-                </colspec>\n-                <colspec colname=\"col4\">\n-                </colspec>\n-                <colspec colname=\"col5\">\n-                </colspec>\n+                <colspec colname=\"col1\"/>\n+                \n+                <colspec colname=\"col2\"/>\n+                \n+                <colspec colname=\"col3\"/>\n+                \n+                <colspec colname=\"col4\"/>\n+                \n+                <colspec colname=\"col5\"/>\n+                \n                 <thead>\n                     <row>\n                         <entry colname=\"col1\">\n@@ -3755,7 +3755,7 @@ amounts of data without exhausting JVM memory.\n             <para>\n You can also configure on-demand loading for individual collection and map\n fields via large result set proxies. See\n-<xref linkend=\"ref_guide_pc_scos_proxy_lrs\"></xref>.\n+<xref linkend=\"ref_guide_pc_scos_proxy_lrs\"/>.\n             </para>\n         </note>\n         <para>\n@@ -3912,7 +3912,7 @@ loading.\n         <para>\n Many <link linkend=\"ref_guide_runtime\">OpenJPA runtime components</link> also\n have methods to configure these properties on a case-by-case basis through their\n-fetch configuration. See <xref linkend=\"ref_guide_runtime\"></xref>.\n+fetch configuration. See <xref linkend=\"ref_guide_runtime\"/>.\n         </para>\n         <example id=\"ref_guide_dbsetup_lrs_runtime\">\n             <title>\n@@ -3959,7 +3959,7 @@ mapping definitions.\n         <para>\n The <literal>Schema</literal> property also establishes the default schema for\n new tables created through OpenJPA tools, such as the mapping tool covered in\n-<xref linkend=\"ref_guide_mapping_mappingtool\"></xref>.\n+<xref linkend=\"ref_guide_mapping_mappingtool\"/>.\n         </para>\n     </section>\n     <section id=\"ref_guide_schema_info\">\n@@ -4141,8 +4141,8 @@ top level of any jar in your <literal>CLASSPATH</literal>.\n             </itemizedlist>\n             <para>\n You can switch freely between schema factories at any time. The XML file format\n-used by some factories is detailed in <xref linkend=\"ref_guide_schema_xml\">\n-</xref>. As with any OpenJPA plugin, you can can also implement your own schema\n+used by some factories is detailed in <xref linkend=\"ref_guide_schema_xml\"/>\n+. As with any OpenJPA plugin, you can can also implement your own schema\n factory if you have needs not met by the existing options.\n             </para>\n         </section>\n@@ -4250,7 +4250,7 @@ CLASSPATH</literal>, data will be written to that resource. Use <literal>stdout\n on the schema, whether to reflect on tables and sequences whose names start with\n <literal>OPENJPA_</literal>. Certain OpenJPA components may use such tables -\n for example, the <literal>table</literal> schema factory option covered in\n-<xref linkend=\"ref_guide_schema_info_factory\"></xref>. When using other\n+<xref linkend=\"ref_guide_schema_info_factory\"/>. When using other\n actions, <literal>openjpaTables</literal> controls whether these tables can be\n dropped. Defaults to <literal>false</literal>.\n                 </para>"},{"sha":"a7a4b2ea7442a120ea6bafa3631618ba1993dac4","filename":"openjpa-project/src/doc/manual/ref_guide_deploy.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/ref_guide_deploy.xml","raw_url":"https://github.com/apache/openjpa/raw/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/ref_guide_deploy.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_deploy.xml?ref=8676abb0ada7d957799c44096cb5af0c0fe917f0","patch":"@@ -35,7 +35,7 @@ OpenJPA offers several <phrase><classname>EntityManagerFactory</classname>\n The JPA Overview describes the <classname>javax.persistence.Persistence\n </classname> class. You can use <classname>Persistence</classname> to obtain\n <classname>EntityManagerFactory</classname> instances, as demonstrated in\n-<xref linkend=\"jpa_overview_persistence\"></xref>. OpenJPA also extends\n+<xref linkend=\"jpa_overview_persistence\"/>. OpenJPA also extends\n <classname>Persistence</classname> to add additional <classname>\n EntityManagerFactory</classname> creation methods. The <classname>\n org.apache.openjpa.persistence.OpenJPAPersistence</classname> class\n@@ -147,7 +147,7 @@ transactions is a simple two-step process:\n                     <para>\n Point OpenJPA at an enlisted <classname>XADataSource</classname>, and configure\n a second non-enlisted data source. See\n-<xref linkend=\"ref_guide_dbsetup_thirdparty_enlist\"></xref>.\n+<xref linkend=\"ref_guide_dbsetup_thirdparty_enlist\"/>.\n                     </para>\n                 </listitem>\n             </orderedlist>"},{"sha":"003fd7e9075a2ab081c05b67e74d14f479845fd7","filename":"openjpa-project/src/doc/manual/ref_guide_integration.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/ref_guide_integration.xml","raw_url":"https://github.com/apache/openjpa/raw/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/ref_guide_integration.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_integration.xml?ref=8676abb0ada7d957799c44096cb5af0c0fe917f0","patch":"@@ -172,7 +172,7 @@ Following is an example of using a <literal>classpath</literal> tag:\n Finally, tasks that invoke code-generation tools like the application identity\n tool and reverse mapping tool accept a nested <literal>codeformat</literal>\n element. See the code formatting documentation in\n-<xref linkend=\"ref_guide_conf_devtools_format\"></xref> for a list of code\n+<xref linkend=\"ref_guide_conf_devtools_format\"/> for a list of code\n formatting attributes.\n             </para>\n             <example id=\"ref_guide_integration_conf_codeformat\">"},{"sha":"7e927d388916c77bc45f65fb3119e9211e4d45c8","filename":"openjpa-project/src/doc/manual/ref_guide_logging.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/ref_guide_logging.xml","raw_url":"https://github.com/apache/openjpa/raw/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/ref_guide_logging.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_logging.xml?ref=8676abb0ada7d957799c44096cb5af0c0fe917f0","patch":"@@ -59,9 +59,9 @@ channels:\n and Ant tools. Most messages are basic statements detailing which classes or\n files the tools are running on. Detailed output is only available via the\n logging category the tool belongs to, such as <literal>openjpa.Enhance</literal>\n-for the enhancer (see <xref linkend=\"ref_guide_pc_enhance\"></xref>) or <literal>\n+for the enhancer (see <xref linkend=\"ref_guide_pc_enhance\"/>) or <literal>\n openjpa.MetaData</literal> for the mapping tool (see\n-<xref linkend=\"ref_guide_mapping_mappingtool\"></xref> ). This logging category\n+<xref linkend=\"ref_guide_mapping_mappingtool\"/> ). This logging category\n is provided so that you can get a general idea of what a tool is doing without\n having to manipulate logging settings that might also affect runtime behavior.\n                 </para>\n@@ -548,7 +548,7 @@ public class CustomLogFactory\n To make OpenJPA use your custom log factory, set the\n <link linkend=\"openjpa.Log\"><literal>openjpa.Log</literal></link> configuration\n property to your factory's full class name. Because this property is a plugin\n-property (see <xref linkend=\"ref_guide_conf_plugins\"></xref> ), you can also\n+property (see <xref linkend=\"ref_guide_conf_plugins\"/> ), you can also\n pass parameters to your factory. For example, to use the example factory above\n and set its prefix to \"LOG MSG\", you would set the <literal>openjpa.Log\n </literal> property to the following string:"},{"sha":"53876f3cea8cf5678747c3d4dcbeeaa7f6783244","filename":"openjpa-project/src/doc/manual/ref_guide_mapping.xml","status":"modified","additions":95,"deletions":95,"changes":190,"blob_url":"https://github.com/apache/openjpa/blob/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/ref_guide_mapping.xml","raw_url":"https://github.com/apache/openjpa/raw/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/ref_guide_mapping.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_mapping.xml?ref=8676abb0ada7d957799c44096cb5af0c0fe917f0","patch":"@@ -8,7 +8,7 @@\n         </primary>\n     </indexterm>\n     <para>\n-The JPA Overview's <xref linkend=\"jpa_overview_mapping\"></xref> explains\n+The JPA Overview's <xref linkend=\"jpa_overview_mapping\"/> explains\n object-relational mapping under JPA. This chapter reviews the mapping utilities\n OpenJPA provides and examines OpenJPA features that go beyond the JPA\n specification.\n@@ -53,7 +53,7 @@ org.apache.openjpa.jdbc.meta.MappingTool</classname></ulink>.\n         </para>\n         <note>\n             <para>\n-<xref linkend=\"ref_guide_integration_mappingtool\"></xref> describes the mapping\n+<xref linkend=\"ref_guide_integration_mappingtool\"/> describes the mapping\n tool Ant task.\n             </para>\n         </note>\n@@ -76,7 +76,7 @@ mapping tool accepts the following command line arguments:\n <literal>-schemaAction/-sa &lt;add | refresh | drop | build | retain | none&gt;\n </literal>: The action to take on the schema. These options correspond to the\n same-named actions on the schema tool described in\n-<xref linkend=\"ref_guide_schema_schematool\"></xref>. Unless you are running the\n+<xref linkend=\"ref_guide_schema_schematool\"/>. Unless you are running the\n mapping tool on all of your persistent types at once or dropping a mapping, we\n strongly recommend you use the default <literal>add</literal> action or the\n <literal>build</literal> action. Otherwise you may end up inadvertently dropping\n@@ -185,7 +185,7 @@ the action to take on each class. The available actions are:\n             <listitem>\n                 <para>\n <literal>buildSchema</literal>: This is the default action when using JPA\n-mapping defaults (see <xref linkend=\"ref_guide_mapping_defaults\"></xref> ). It\n+mapping defaults (see <xref linkend=\"ref_guide_mapping_defaults\"/> ). It\n makes the database schema match your existing mappings. If your provided\n mappings conflict with a class definition, OpenJPA will fail with an informative\n exception.\n@@ -222,11 +222,11 @@ The <filename>.class</filename> file of a persistent class.\n         <para>\n If you do not supply any arguments to the mapping tool, it will run on the\n classes in your persistent classes list (see\n-<xref linkend=\"ref_guide_pc_pcclasses\"></xref> ).\n+<xref linkend=\"ref_guide_pc_pcclasses\"/> ).\n         </para>\n         <para>\n The mappings generated by the mapping tool are stored by the system <emphasis>\n-mapping factory</emphasis>. <xref linkend=\"ref_guide_mapping_factory\"></xref>\n+mapping factory</emphasis>. <xref linkend=\"ref_guide_mapping_factory\"/>\n discusses your mapping factory options.\n         </para>\n         <section id=\"ref_guide_mapping_mappingtool_examples\">\n@@ -244,11 +244,11 @@ discusses your mapping factory options.\n             <para>\n The JPA specification defines a comprehensive set of defaults for missing\n mapping information. Thus, forward mapping in JPA is virtually automatic. After\n-using the mapping annotations covered in <xref linkend=\"jpa_overview_mapping\">\n-</xref> of the JPA Overview to override any unsatisfactory defaults, run the\n+using the mapping annotations covered in <xref linkend=\"jpa_overview_mapping\"/>\n+ of the JPA Overview to override any unsatisfactory defaults, run the\n mapping tool's <literal>buildSchema</literal> action on your persistent classes.\n This is the default action when you use JPA mapping defaults (see\n-<xref linkend=\"ref_guide_mapping_defaults\"></xref> ).\n+<xref linkend=\"ref_guide_mapping_defaults\"/> ).\n             </para>\n             <para>\n The <literal>buildSchema</literal> action manipulates the database schema to\n@@ -356,16 +356,16 @@ meant for use during rapid test/debug cycles.\n             </para>\n             <para>\n In order to enable automatic runtime mapping, you must first list all your\n-persistent classes as described in <xref linkend=\"ref_guide_pc_pcclasses\">\n-</xref>.\n+persistent classes as described in <xref linkend=\"ref_guide_pc_pcclasses\"/>\n+.\n             </para>\n             <para>\n OpenJPA will run the mapping tool on these classes when your application obtains\n its first <classname>EntityManager</classname>.\n             </para>\n             <para>\n The <literal>openjpa.jdbc.SynchronizeMappings</literal> property is a plugin\n-string (see <xref linkend=\"ref_guide_conf_plugins\"></xref>) where the class\n+string (see <xref linkend=\"ref_guide_conf_plugins\"/>) where the class\n name is the mapping tool action to invoke, and the properties are the\n <classname>MappingTool</classname> class' JavaBean properties. These properties\n correspond go the long versions of the tool's command line flags.\n@@ -419,7 +419,7 @@ OpenJPA includes a <emphasis>reverse mapping</emphasis> tool for generating\n persistent class definitions, complete with metadata, from an existing database\n schema. You do not have to use the reverse mapping tool to access an existing\n schema; you are free to write your classes and mappings yourself, as described\n-in <xref linkend=\"ref_guide_mapping_middle\"></xref>. The reverse mapping tool,\n+in <xref linkend=\"ref_guide_mapping_middle\"/>. The reverse mapping tool,\n however, can give you an excellent starting point from which to grow your\n persistent classes.\n         </para>\n@@ -455,7 +455,7 @@ schematool -a reflect -f schema.xml\n Examine the generated schema file. JDBC drivers often provide incomplete or\n faulty metadata, in which case the file will not exactly match the actual\n schema. Alter the XML file to match the true schema. The XML format for the\n-schema file is described in <xref linkend=\"ref_guide_schema_xml\"></xref>.\n+schema file is described in <xref linkend=\"ref_guide_schema_xml\"/>.\n                 </para>\n                 <para>\n After fixing any errors in the schema file, modify the XML to include foreign\n@@ -496,7 +496,7 @@ the reverse mapping tool recognizes the following command line arguments:\n comma-separated list of schema and table names to reverse map, if no XML schema\n file is supplied. Each element of the list must follow the naming conventions\n for the <literal>openjpa.jdbc.Schemas</literal> property described in\n-<xref linkend=\"ref_guide_schema_info_list\"></xref>. In fact, if this flag is\n+<xref linkend=\"ref_guide_schema_info_list\"/>. In fact, if this flag is\n omitted, it defaults to the value of the <literal>Schemas</literal> property. If\n the <literal>Schemas</literal> property is not defined, all schemas will be\n reverse-mapped.\n@@ -668,7 +668,7 @@ should first compile them with <literal>javac</literal>, <literal>jikes\n </literal>, or your favorite Java compiler. Make sure the classes and their\n metadata are located in the directory corresponding to the <literal>-package\n </literal> flag you gave the reverse mapping tool. Finally, enhance the classes\n-if necessary (see <xref linkend=\"ref_guide_pc_enhance\"></xref> ).\n+if necessary (see <xref linkend=\"ref_guide_pc_enhance\"/> ).\n                 </para>\n             </listitem>\n         </orderedlist>\n@@ -884,7 +884,7 @@ mapping approach, you control both the relational featureSelection and the object featureSelection. It\n is up to you to define the mappings between these models.  The mapping\n tool's <literal>validate</literal> action is useful to meet-in-the-middle\n mappers. We examined the mapping tool in\n-<xref linkend=\"ref_guide_mapping_mappingtool\"></xref>. The <literal>validate\n+<xref linkend=\"ref_guide_mapping_mappingtool\"/>. The <literal>validate\n </literal> action verifies that the mapping information for a class matches the\n class definition and the existing schema. It throws an informative exception\n when your mappings are incorrect.\n@@ -899,7 +899,7 @@ mappingtool -a validate Magazine.java\n         </example>\n         <para>\n The <literal>buildSchema</literal> action we discussed in\n-<xref linkend=\"ref_guide_mapping_mappingtool\"></xref> is also somewhat useful\n+<xref linkend=\"ref_guide_mapping_mappingtool\"/> is also somewhat useful\n during meet-in-the-middle mapping. Unlike the <literal>validate</literal>\n action, which throws an exception if your mapping data does not match the\n existing schema, the <literal>buildSchema</literal> action assumes your mapping\n@@ -909,7 +909,7 @@ database's tools to bring the schema up-to-date.\n         </para>\n         <para>\n <literal>buildSchema</literal> is the default action when you use JPA mapping\n-defaults ( <xref linkend=\"ref_guide_mapping_defaults\"></xref> ).\n+defaults ( <xref linkend=\"ref_guide_mapping_defaults\"/> ).\n         </para>\n         <example id=\"ref_guide_mapping_middle_buildschema_mid\">\n             <title>\n@@ -955,14 +955,14 @@ schema that matches your object featureSelection.\n OpenJPA relies on foreign key constraint information at runtime to order SQL\n appropriately. Be sure to set your mapping defaults to reflect your existing\n database constraints, or use explicit foreign key mappings as described in\n-<phrase><xref linkend=\"ref_guide_mapping_jpa_fk\"></xref></phrase>.\n+<phrase><xref linkend=\"ref_guide_mapping_jpa_fk\"/></phrase>.\n             </para>\n         </important>\n         <para>\n The <link linkend=\"openjpa.jdbc.MappingDefaults\"><literal>\n openjpa.jdbc.MappingDefaults</literal></link> configuration property controls\n the <classname>MappingDefaults</classname> interface implementation in use. This\n-is a plugin property (see <xref linkend=\"ref_guide_conf_plugins\"></xref> ), so\n+is a plugin property (see <xref linkend=\"ref_guide_conf_plugins\"/> ), so\n you can substitute your own implementation or configure the existing ones.\n OpenJPA includes the following standard implementations:\n         </para>\n@@ -1005,7 +1005,7 @@ JPA specification.\n classes. You can specify a built-in strategy alias or the full class name of a\n <link linkend=\"ref_guide_mapping_custom_class\"> custom class strategy</link>.\n You can also use OpenJPA's plugin format (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref>) to pass arguments to the\n+<xref linkend=\"ref_guide_conf_plugins\"/>) to pass arguments to the\n strategy instance. See the\n <ulink url=\"../apidocs/org/apache/openjpa/jdbc/meta/strats/package-summary.html\">\n <literal>org.apache.openjpa.jdbc.meta.strats</literal></ulink> package for\n@@ -1018,7 +1018,7 @@ available strategies.\n subclasses. You can specify a builtin strategy alias or the full class name of a\n <link linkend=\"ref_guide_mapping_custom_class\"> custom class strategy</link>.\n You can also use OpenJPA's plugin format (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref>) to pass arguments to the\n+<xref linkend=\"ref_guide_conf_plugins\"/>) to pass arguments to the\n strategy instance. Common strategies are <literal>vertical</literal> and\n <literal>flat</literal>, the default. See the\n <ulink url=\"../apidocs/org/apache/openjpa/jdbc/meta/strats/package-summary.html\">\n@@ -1032,7 +1032,7 @@ available strategies.\n without a version field. You can specify a builtin strategy alias or the full\n class name of a <link linkend=\"ref_guide_mapping_custom_versdiscrim\"> custom\n version strategy</link>. You can also use OpenJPA's plugin format (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref>) to pass arguments to the\n+<xref linkend=\"ref_guide_conf_plugins\"/>) to pass arguments to the\n strategy instance. Common strategies are <literal>none</literal>, <literal>\n state-comparison</literal>, <literal> timestamp</literal>, and <literal>\n version-number</literal>, the default. See the\n@@ -1048,7 +1048,7 @@ when no discriminator value is given. You can specify a builtin strategy alias\n or the full class name of a\n <link linkend=\"ref_guide_mapping_custom_versdiscrim\"> custom discriminator\n strategy</link>. You can also use OpenJPA's plugin format (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref>) to pass arguments to the\n+<xref linkend=\"ref_guide_conf_plugins\"/>) to pass arguments to the\n strategy instance. Common strategies are <literal>final</literal> for a base\n class without subclasses, <literal>none</literal> to use joins to subclass\n tables rather than a discriminator column, and <literal> class-name</literal>,\n@@ -1062,11 +1062,11 @@ available strategies.\n                         <para>\n <literal>FieldStrategies</literal>: This property associates field types with\n custom strategies. The format of this property is similar to that of plugin\n-strings (see <xref linkend=\"ref_guide_conf_plugins\"></xref> ), without the class\n+strings (see <xref linkend=\"ref_guide_conf_plugins\"/> ), without the class\n name. It is a comma-separated list of key/value pairs, where each key is a\n possible field type, and each value is itself a plugin string describing the\n strategy for that type. We present an example below. See\n-<xref linkend=\"ref_guide_mapping_custom_field\"></xref> for information on custum\n+<xref linkend=\"ref_guide_mapping_custom_field\"/> for information on custum\n field strategies.\n                         </para>\n                     </listitem>\n@@ -1128,7 +1128,7 @@ column. Defaults to true.\n                         <para>\n <literal>VersionColumnName</literal>: The default name of version columns. If\n you use custom lock groups, this name may be combined with lock group names. See\n-<xref linkend=\"ref_guide_lock_groups\"></xref> for more information on lock\n+<xref linkend=\"ref_guide_lock_groups\"/> for more information on lock\n groups.\n                         </para>\n                     </listitem>\n@@ -1234,11 +1234,11 @@ schema.\n         <para>\n In JPA, mapping metadata is defined in annotations. Future versions of the JPA\n drafts will also define a mapping XML format.\n-<xref linkend=\"jpa_overview_mapping\"></xref> in the JPA Overview describes JPA\n+<xref linkend=\"jpa_overview_mapping\"/> in the JPA Overview describes JPA\n mapping options.\n         </para>\n         <para>\n-<xref linkend=\"ref_guide_meta_factory\"></xref> introduced OpenJPA's <classname>\n+<xref linkend=\"ref_guide_meta_factory\"/> introduced OpenJPA's <classname>\n MetaDataFactory</classname> interface. OpenJPA uses this same interface to\n abstract the storage and retrieval of mapping information. OpenJPA includes the\n built-in mapping factories below, and you can create your own factory if you\n@@ -1288,7 +1288,7 @@ In the standard JPA configuration, the mapping factory is left unset.\n             </secondary>\n         </indexterm>\n         <para>\n-The JPA Overview's <xref linkend=\"jpa_overview_mapping\"></xref> explains join\n+The JPA Overview's <xref linkend=\"jpa_overview_mapping\"/> explains join\n mapping. All of the examples in that document, however, use \"standard\" joins, in\n that there is one foreign key column for each primary key column in the target\n table. OpenJPA supports additional join patterns, including partial primary key\n@@ -1327,7 +1327,7 @@ you are joining to must be controlled by a field mapping that implements the\n org.apache.openjpa.jdbc.meta.Joinable</classname></ulink> interface. All built\n in basic mappings implement this interface, including basic fields of embedded\n objects. OpenJPA will also respect any custom mappings that implement this\n-interface. See <xref linkend=\"ref_guide_mapping_custom\"></xref> for an\n+interface. See <xref linkend=\"ref_guide_mapping_custom\"/> for an\n examination of custom mappings.\n         </para>\n         <para>\n@@ -1356,8 +1356,8 @@ to differentiate it from a column name.\n         <mediaobject>\n             <imageobject>\n                 <!-- PNG image data, 427 x 211 (see README) -->\n-                <imagedata fileref=\"img/joins-constant.png\" width=\"285px\">\n-                </imagedata>\n+                <imagedata fileref=\"img/joins-constant.png\" width=\"285px\"/>\n+                \n             </imageobject>\n         </mediaobject>\n         <para>\n@@ -1440,7 +1440,7 @@ public class ...\n         </indexterm>\n         <para>\n OpenJPA supports many persistence strategies beyond those of the JPA\n-specification. <xref linkend=\"ref_guide_meta_jpa\"></xref> covered the logical\n+specification. <xref linkend=\"ref_guide_meta_jpa\"/> covered the logical\n metadata for OpenJPA's additional persistence strategies. We now demonstrate how\n to map entities using these strategies to the database.\n         </para>\n@@ -1481,7 +1481,7 @@ to map entities using these strategies to the database.\n                 </primary>\n             </indexterm>\n             <para>\n-<xref linkend=\"ref_guide_pc_oid\"></xref> describes how to use datastore identity\n+<xref linkend=\"ref_guide_pc_oid\"/> describes how to use datastore identity\n in JPA. OpenJPA requires a single numeric primary key column to hold datastore\n identity values. The\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/DataStoreIdColumn.html\">\n@@ -1519,7 +1519,7 @@ has the following properties:\n             <para>\n All properties correspond exactly to the same-named properties on the standard\n <classname>Column</classname> annotation, described in\n-<xref linkend=\"jpa_overview_mapping_column\"></xref>.\n+<xref linkend=\"jpa_overview_mapping_column\"/>.\n             </para>\n             <example id=\"ref_guide_mapping_jpa_datastoreidex\">\n                 <title>\n@@ -1637,16 +1637,16 @@ values. Each <classname>VersionColumn</classname> has the following properties:\n             <para>\n The <literal>lockGroup</literal> property allows you to specify that a version\n column is for some lock group other than the default group. See\n-<xref linkend=\"ref_guide_lock_groups\"></xref> for an example. All other\n+<xref linkend=\"ref_guide_lock_groups\"/> for an example. All other\n properties correspond exactly to the same-named properties on the standard\n <classname>Column</classname> annotation, described in\n-<xref linkend=\"jpa_overview_mapping_column\"></xref>.\n+<xref linkend=\"jpa_overview_mapping_column\"/>.\n             </para>\n             <para>\n By default, OpenJPA assumes that surrogate versioning uses a version number\n strategy. You can choose a different strategy with the <classname>\n VersionStrategy</classname> annotation described in\n-<xref linkend=\"version-strategy\"></xref>.\n+<xref linkend=\"version-strategy\"/>.\n             </para>\n         </section>\n         <section id=\"ref_guide_mapping_jpa_columns\">\n@@ -1686,21 +1686,21 @@ this with the\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/Columns.html\">\n <classname>org.apache.openjpa.persistence.jdbc.Columns</classname></ulink>\n annotation, which contains an array of <classname>Column</classname> values.\n-<xref linkend=\"ref_guide_mapping_custom_field_conf_extex\"></xref> uses OpenJPA's\n+<xref linkend=\"ref_guide_mapping_custom_field_conf_extex\"/> uses OpenJPA's\n <classname>Columns</classname> annotation to map a <classname>java.awt.Point\n </classname> to separate X and Y columns.\n             </para>\n             <para>\n Remember to annotate custom field types with <classname> Persistent</classname>\n-, as described in <xref linkend=\"ref_guide_meta_jpa_persistent\"></xref>.\n+, as described in <xref linkend=\"ref_guide_meta_jpa_persistent\"/>.\n             </para>\n         </section>\n         <section id=\"ref_guide_mapping_jpa_fieldjoin\">\n             <title>\n                 Join Column Attribute Targets\n             </title>\n             <para>\n-<xref linkend=\"jpa_overview_mapping_rel\"></xref> in the JPA Overview introduced\n+<xref linkend=\"jpa_overview_mapping_rel\"/> in the JPA Overview introduced\n you to the <classname>JoinColumn</classname> annotation. A <classname>\n JoinColumn</classname>'s <literal> referencedColumnName</literal> property\n declares which column in the table of the related type this join column links\n@@ -1738,7 +1738,7 @@ XJoinColumn</classname> s.\n             <para>\n JPA uses the <classname>AttributeOverride</classname> annotation to override the\n default mappings of an embeddable class. The JPA Overview details this process\n-in <xref linkend=\"jpa_overview_mapping_embed\"></xref>. <classname>\n+in <xref linkend=\"jpa_overview_mapping_embed\"/>. <classname>\n AttributeOverride</classname>s suffice for simple mappings, but do not allow\n you to override complex mappings. Also, JPA has no way to differentitate between\n a null embedded object and one with default values for all of its fields.\n@@ -1822,36 +1822,36 @@ mapping, if it is a relation field.\n                     <para>\n <literal>ContainerTable containerTable</literal>: Table for the new collection\n or map field mapping. We cover collection mappings in\n-<xref linkend=\"ref_guide_mapping_jpa_coll\"></xref>, and map mappings in\n-<xref linkend=\"ref_guide_mapping_jpa_map\"></xref>.\n+<xref linkend=\"ref_guide_mapping_jpa_coll\"/>, and map mappings in\n+<xref linkend=\"ref_guide_mapping_jpa_map\"/>.\n                     </para>\n                 </listitem>\n                 <listitem>\n                     <para>\n <literal>ElementColumn[] elementColumns</literal>: Element columns for the new\n collection or map field mapping. You will see how to use element columns in\n-<xref linkend=\"ref_guide_mapping_jpa_coll_cols\"></xref>.\n+<xref linkend=\"ref_guide_mapping_jpa_coll_cols\"/>.\n                     </para>\n                 </listitem>\n                 <listitem>\n                     <para>\n <literal>ElementJoinColumn[] elementJoinColumns</literal>: Element join columns\n for the new collection or map field mapping. You will see how to use element\n-join columns in <xref linkend=\"ref_guide_mapping_jpa_coll_joincols\"></xref>.\n+join columns in <xref linkend=\"ref_guide_mapping_jpa_coll_joincols\"/>.\n                     </para>\n                 </listitem>\n                 <listitem>\n                     <para>\n <literal>KeyColumn[] keyColumns</literal>: Map key columns for the new map\n field mapping. You will see how to use key columns in\n-<xref linkend=\"ref_guide_mapping_jpa_map_keycols\"></xref>.\n+<xref linkend=\"ref_guide_mapping_jpa_map_keycols\"/>.\n                     </para>\n                 </listitem>\n                 <listitem>\n                     <para>\n <literal>KeyJoinColumn[] keyJoinColumns</literal>: Key join columns for the new\n map field mapping. You will see how to use key join columns in\n-<xref linkend=\"ref_guide_mapping_jpa_map_keyjoincols\"></xref>.\n+<xref linkend=\"ref_guide_mapping_jpa_map_keyjoincols\"/>.\n                     </para>\n                 </listitem>\n             </itemizedlist>\n@@ -1915,7 +1915,7 @@ public class Path\n                 </secondary>\n             </indexterm>\n             <para>\n-In <xref linkend=\"ref_guide_meta_jpa_persistent_coll\"></xref>, we explored the\n+In <xref linkend=\"ref_guide_meta_jpa_persistent_coll\"/>, we explored the\n <classname>PersistentCollection</classname> annotation for persistent collection\n fields that aren't a standard <literal>OneToMany</literal> or <literal>\n ManyToMany</literal> relation. To map these non-standard collections, combine\n@@ -1980,7 +1980,7 @@ The <literal>name</literal>, <literal>catalog</literal>, <literal>schema\n </literal>, and <literal>joinColumns</literal> properties describe the container\n table and how it joins to the owning entity's table. These properties correspond\n to the same-named properties on the standard <classname> JoinTable</classname>\n-annotation, described in <xref linkend=\"jpa_overview_mapping_assoccoll\"></xref>\n+annotation, described in <xref linkend=\"jpa_overview_mapping_assoccoll\"/>\n . If left unspecified, the name of the table defaults to the first five\n characters of the entity table name, plus an underscore, plus the field name.\n The <literal>joinForeignKey</literal> and <literal> joinIndex</literal>\n@@ -2022,7 +2022,7 @@ An <classname>ElementColumn</classname> always resides in a container table, so\n it does not have the <literal> table</literal> property of a standard\n <classname> Column</classname>. Otherwise, the <classname>ElementColumn\n </classname> and standard <classname>Column</classname> annotations are\n-equivalent. See <xref linkend=\"jpa_overview_mapping_column\"></xref> in the JPA\n+equivalent. See <xref linkend=\"jpa_overview_mapping_column\"/> in the JPA\n Overview for a review of the <classname>Column</classname> annotation.\n                 </para>\n             </section>\n@@ -2057,7 +2057,7 @@ so it does not have the <literal> table</literal> property of a standard\n above, <classname> ElementJoinColumn</classname>s can reference a linked\n attribute rather than a static linked column. Otherwise, the <classname>\n ElementJoinColumn</classname> and standard <classname>JoinColumn</classname>\n-annotations are equivalent. See <xref linkend=\"jpa_overview_mapping_rel\"></xref>\n+annotations are equivalent. See <xref linkend=\"jpa_overview_mapping_rel\"/>\n in the JPA Overview for a review of the <classname>JoinColumn</classname>\n annotation.\n                 </para>\n@@ -2144,7 +2144,7 @@ ordering (if you have enabled it by default via your\n the <literal>enabled</literal> property to <literal>false</literal>. All other\n properties correspond exactly to the same-named properties on the standard\n <classname>Column</classname> annotation, described in\n-<xref linkend=\"jpa_overview_mapping_column\"></xref>.\n+<xref linkend=\"jpa_overview_mapping_column\"/>.\n                 </para>\n             </section>\n             <section id=\"ref_guide_mapping_jpa_coll_ex\">\n@@ -2154,8 +2154,8 @@ properties correspond exactly to the same-named properties on the standard\n                 <mediaobject>\n                     <imageobject>\n                         <!-- PNG image data, 383 x 176 (see README) -->\n-                        <imagedata fileref=\"img/basic-coll.png\" width=\"255px\">\n-                        </imagedata>\n+                        <imagedata fileref=\"img/basic-coll.png\" width=\"255px\"/>\n+                        \n                     </imageobject>\n                 </mediaobject>\n                 <para>\n@@ -2198,8 +2198,8 @@ Now we map a collection of embedded <classname>Address</classname> objects for a\n                 <mediaobject>\n                     <imageobject>\n                         <!-- PNG image data, 545 x 239 (see README) -->\n-                        <imagedata fileref=\"img/embedded-coll.png\" width=\"363px\">\n-                        </imagedata>\n+                        <imagedata fileref=\"img/embedded-coll.png\" width=\"363px\"/>\n+                        \n                     </imageobject>\n                 </mediaobject>\n                 <example id=\"ref_guide_mapping_jpa_coll_embedex\">\n@@ -2259,15 +2259,15 @@ s, however, have one additional use: to create a one-sided one-many mapping.\n Standard JPA supports <classname>OneToMany</classname> fields without a\n <literal>mappedBy</literal> inverse, but only by mapping these fields to a\n <classname>JoinTable</classname> (see\n-<xref linkend=\"jpa_overview_mapping_assoccoll\"></xref> in the JPA Overview for\n+<xref linkend=\"jpa_overview_mapping_assoccoll\"/> in the JPA Overview for\n details). Often, you'd like to create a one-many association based on an inverse\n foreign key (logical or actual) in the table of the related type.\n             </para>\n             <mediaobject>\n                 <imageobject>\n                     <!-- PNG image data, 392 x 192 (see README) -->\n-                    <imagedata fileref=\"img/inv-key-coll.png\" width=\"261\">\n-                    </imagedata>\n+                    <imagedata fileref=\"img/inv-key-coll.png\" width=\"261\"/>\n+                    \n                 </imageobject>\n             </mediaobject>\n             <para>\n@@ -2326,7 +2326,7 @@ public class Subscription\n                 </secondary>\n             </indexterm>\n             <para>\n-<xref linkend=\"ref_guide_meta_jpa_persistent_map\"></xref> discussed the\n+<xref linkend=\"ref_guide_meta_jpa_persistent_map\"/> discussed the\n <classname>PersistentMap</classname> annotation for persistent map fields. To\n map these non-standard fields to the database, combine OpenJPA's <classname>\n ContainerTable</classname> annotation with <classname>KeyColumn</classname> s,\n@@ -2337,11 +2337,11 @@ ElementJoinColumn</classname> s, or an <classname> ElementEmbeddedMapping\n             </para>\n             <para>\n We detailed the <literal>ContainerTable</literal> annotation in\n-<xref linkend=\"ref_guide_mapping_jpa_coll_table\"></xref>. We also discussed\n+<xref linkend=\"ref_guide_mapping_jpa_coll_table\"/>. We also discussed\n element columns, join columns, and embedded mappings in\n-<xref linkend=\"ref_guide_mapping_jpa_coll_cols\"></xref>,\n-<xref linkend=\"ref_guide_mapping_jpa_coll_joincols\"></xref>, and\n-<xref linkend=\"ref_guide_mapping_jpa_coll_embed\"></xref>. Key columns, join\n+<xref linkend=\"ref_guide_mapping_jpa_coll_cols\"/>,\n+<xref linkend=\"ref_guide_mapping_jpa_coll_joincols\"/>, and\n+<xref linkend=\"ref_guide_mapping_jpa_coll_embed\"/>. Key columns, join\n columns, and embedded mappings are new, however; we tackle them below.\n             </para>\n             <section id=\"ref_guide_mapping_jpa_map_keycols\">\n@@ -2358,7 +2358,7 @@ columns, and embedded mappings are new, however; we tackle them below.\n                 </indexterm>\n                 <para>\n Key columns serve the same role for map keys as the element columns described in\n-<xref linkend=\"ref_guide_mapping_jpa_coll_cols\"></xref> serve for collection\n+<xref linkend=\"ref_guide_mapping_jpa_coll_cols\"/> serve for collection\n elements. OpenJPA's\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/KeyColumn.html\">\n <classname>org.apache.openjpa.persistence.jdbc.KeyColumn</classname></ulink>\n@@ -2372,7 +2372,7 @@ A <classname>KeyColumn</classname> always resides in a container table, so it\n does not have the <literal> table</literal> property of a standard <classname>\n Column</classname>. Otherwise, the <classname>KeyColumn</classname> and standard\n <classname>Column</classname> annotations are equivalent. See\n-<xref linkend=\"jpa_overview_mapping_column\"></xref> in the JPA Overview for a\n+<xref linkend=\"jpa_overview_mapping_column\"/> in the JPA Overview for a\n review of the <classname>Column</classname> annotation.\n                 </para>\n             </section>\n@@ -2407,7 +2407,7 @@ it does not have the <literal> table</literal> property of a standard\n above, <classname> KeyJoinColumn</classname>s can reference a linked field\n rather than a static linked column. Otherwise, the <classname> KeyJoinColumn\n </classname> and standard <classname>JoinColumn</classname> annotations are\n-equivalent. See <xref linkend=\"jpa_overview_mapping_rel\"></xref> in the JPA\n+equivalent. See <xref linkend=\"jpa_overview_mapping_rel\"/> in the JPA\n Overview for a review of the <classname>JoinColumn</classname> annotation.\n                 </para>\n             </section>\n@@ -2440,8 +2440,8 @@ container table. This annotation has exactly the same properties as the\n                 <mediaobject>\n                     <imageobject>\n                         <!-- PNG image data, 410 x 266 (see README) -->\n-                        <imagedata fileref=\"img/string-rel-map.png\" width=\"273px\">\n-                        </imagedata>\n+                        <imagedata fileref=\"img/string-rel-map.png\" width=\"273px\"/>\n+                        \n                     </imageobject>\n                 </mediaobject>\n                 <para>\n@@ -2500,8 +2500,8 @@ batch size.\n             </para>\n             <para>\n OpenJPA assumes certain columns have indexes or constraints based on your\n-mapping defaults, as detailed in <xref linkend=\"ref_guide_mapping_defaults\">\n-</xref>. You can override the configured defaults on individual joins, field\n+mapping defaults, as detailed in <xref linkend=\"ref_guide_mapping_defaults\"/>\n+. You can override the configured defaults on individual joins, field\n values, collection elements, map keys, or map values using the annotations\n presented in the following sections.\n             </para>\n@@ -2696,14 +2696,14 @@ supported by the database.\n                     Examples\n                 </title>\n                 <para>\n-Here again is our map example from <xref linkend=\"ref_guide_mapping_jpa_map\">\n-</xref>, now with explicit indexes and constraints added.\n+Here again is our map example from <xref linkend=\"ref_guide_mapping_jpa_map\"/>\n+, now with explicit indexes and constraints added.\n                 </para>\n                 <mediaobject>\n                     <imageobject>\n                         <!-- PNG image data, 410 x 266 (see README) -->\n-                        <imagedata fileref=\"img/string-rel-map.png\" width=\"273px\">\n-                        </imagedata>\n+                        <imagedata fileref=\"img/string-rel-map.png\" width=\"273px\"/>\n+                        \n                     </imageobject>\n                 </mediaobject>\n                 <example id=\"ref_guide_mapping_jpa_constraintex_map\">\n@@ -2804,15 +2804,15 @@ a table-per-class inheritance hierarchy mapped with an inverse foreign key.\n                 <listitem>\n                     <para>\n Table-per-class hierarchies impose limitations on eager fetching. See\n-<xref linkend=\"ref_guide_perfpack_eager_consider\"></xref>.\n+<xref linkend=\"ref_guide_perfpack_eager_consider\"/>.\n                     </para>\n                 </listitem>\n             </itemizedlist>\n             <note>\n                 <para>\n Non-polymorphic relations do not suffer from these limitations. You can declare\n a non-polymorphic relation using the extensions described in\n-<xref linkend=\"nonpolymorphic\"></xref>.\n+<xref linkend=\"nonpolymorphic\"/>.\n                 </para>\n             </note>\n         </section>\n@@ -2863,8 +2863,8 @@ openjpa.jdbc.SubclassFetchMode</literal></link> property. <phrase> Set the JPA\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/EagerFetchType.html\">\n <classname>org.apache.openjpa.persistence.jdbc.EagerFetchType</classname>\n </ulink> enum: <literal>JOIN</literal>, <literal>PARALLEL</literal>, or\n-<literal>NONE</literal>.</phrase> See <xref linkend=\"ref_guide_perfpack_eager\">\n-</xref> for a discussion of eager fetching.\n+<literal>NONE</literal>.</phrase> See <xref linkend=\"ref_guide_perfpack_eager\"/>\n+ for a discussion of eager fetching.\n                 </para>\n             </section>\n             <section id=\"class-strategy\">\n@@ -2889,7 +2889,7 @@ openjpa.jdbc.SubclassFetchMode</literal></link> property. <phrase> Set the JPA\n The <ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/Strategy.html\">\n <classname>org.apache.openjpa.persistence.jdbc.Strategy</classname></ulink>\n class annotation allows you to specify a custom mapping strategy for your class.\n-See <xref linkend=\"ref_guide_mapping_custom\"></xref> for information on custom\n+See <xref linkend=\"ref_guide_mapping_custom\"/> for information on custom\n mappings.\n                 </para>\n             </section>\n@@ -2916,7 +2916,7 @@ The\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/DiscriminatorStrategy.html\">\n <classname>org.apache.openjpa.persistence.jdbc.DiscriminatorStrategy</classname>\n </ulink> class annotation allows you to specify a custom discriminator strategy.\n-See <xref linkend=\"ref_guide_mapping_custom\"></xref> for information on custom\n+See <xref linkend=\"ref_guide_mapping_custom\"/> for information on custom\n mappings.\n                 </para>\n             </section>\n@@ -2943,7 +2943,7 @@ The\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/VersionStrategy.html\">\n <classname>org.apache.openjpa.persistence.jdbc.VersionStrategy</classname>\n </ulink> class annotation allows you to specify a custom version strategy. See\n-<xref linkend=\"ref_guide_mapping_custom\"></xref> for information on custom\n+<xref linkend=\"ref_guide_mapping_custom\"/> for information on custom\n mappings.\n                 </para>\n             </section>\n@@ -2983,8 +2983,8 @@ openjpa.jdbc.EagerFetchMode</literal></link> property. <phrase> Set the JPA\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/EagerFetchType.html\">\n <classname>org.apache.openjpa.persistence.jdbc.EagerFetchType</classname>\n </ulink> enum: <literal>JOIN</literal>, <literal>PARALLEL</literal>, or\n-<literal>NONE</literal>.</phrase> See <xref linkend=\"ref_guide_perfpack_eager\">\n-</xref> for a discussion of eager fetching.\n+<literal>NONE</literal>.</phrase> See <xref linkend=\"ref_guide_perfpack_eager\"/>\n+ for a discussion of eager fetching.\n                 </para>\n             </section>\n             <section id=\"nonpolymorphic\">\n@@ -3014,7 +3014,7 @@ efficiency of your relations.\n                 <note>\n                     <para>\n OpenJPA also includes the <literal>type</literal> metadata extension for\n-narrowing the declared type of a field See <xref linkend=\"type\"></xref>.\n+narrowing the declared type of a field See <xref linkend=\"type\"/>.\n                     </para>\n                 </note>\n                 <para>\n@@ -3140,7 +3140,7 @@ respectively:\n                 <para>\n OpenJPA's family of strategy extensions allow you to specify a custom mapping\n strategy or value handler for a field. See\n-<xref linkend=\"ref_guide_mapping_custom\"></xref> for information on custom\n+<xref linkend=\"ref_guide_mapping_custom\"/> for information on custom\n mappings.\n                 </para>\n                 <para>\n@@ -3241,8 +3241,8 @@ concrete strategies in the <literal>org.apache.openjpa.jdbc.meta.strats\n annotation allows you to declare a custom class mapping strategy in JPA mapping\n metadata. Set the value of the annotation to the full class name of your custom\n strategy.</phrase> You can configure your strategy class' bean properties using\n-OpenJPA's plugin syntax, detailed in <xref linkend=\"ref_guide_conf_plugins\">\n-</xref>.\n+OpenJPA's plugin syntax, detailed in <xref linkend=\"ref_guide_conf_plugins\"/>\n+.\n             </para>\n         </section>\n         <section id=\"ref_guide_mapping_custom_versdiscrim\">\n@@ -3275,7 +3275,7 @@ existing OpenJPA implementation.\n             <para>\n As with custom class mappings, you can configure your strategy class' bean\n properties using OpenJPA's plugin syntax, detailed in\n-<xref linkend=\"ref_guide_conf_plugins\"></xref>.\n+<xref linkend=\"ref_guide_conf_plugins\"/>.\n             </para>\n         </section>\n         <section id=\"ref_guide_mapping_custom_field\">\n@@ -3380,7 +3380,7 @@ field types with their corresponding custom value handler or strategy. OpenJPA\n will automatically use your custom strategies when it encounters a field of the\n associated type. OpenJPA will use your custom value handlers whenever it\n encounters a field, collection element, map key, or map value of the associated\n-type. <xref linkend=\"ref_guide_mapping_defaults\"></xref> described mapping\n+type. <xref linkend=\"ref_guide_mapping_defaults\"/> described mapping\n defaults in detail.\n                 </para>\n                 <para>\n@@ -3396,7 +3396,7 @@ in the proper mapping metadata extension. <phrase> OpenJPA includes the\n <classname>org.apache.openjpa.persistence.jdbc.KeyStrategy</classname></ulink>\n annotations.</phrase> You can configure the named strategy or handler's bean\n properties in these extensions using OpenJPA's plugin format (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref> ).\n+<xref linkend=\"ref_guide_conf_plugins\"/> ).\n                 </para>\n                 <para>\n The example below installs a custom strategy on the <literal>coverImage\n@@ -3469,7 +3469,7 @@ fields.\n OpenJPA's <link linkend=\"openjpa.OrphanedKeyAction\"><literal>\n openjpa.OrphanedKeyAction</literal></link> configuration property controls what\n action to take when OpenJPA encounters an orphaned key. You can set this plugin\n-string (see <xref linkend=\"ref_guide_conf_plugins\"></xref>) to a custom\n+string (see <xref linkend=\"ref_guide_conf_plugins\"/>) to a custom\n implementation of the\n <ulink url=\"../apidocs/org/apache/openjpa/event/OrphanedKeyAction.html\">\n <classname> org.apache.openjpa.event.OrphanedKeyAction</classname></ulink>"},{"sha":"d6a9e801071c1a51aa8fc37ed917098bd9bd567b","filename":"openjpa-project/src/doc/manual/ref_guide_meta.xml","status":"modified","additions":30,"deletions":30,"changes":60,"blob_url":"https://github.com/apache/openjpa/blob/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/ref_guide_meta.xml","raw_url":"https://github.com/apache/openjpa/raw/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/ref_guide_meta.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_meta.xml?ref=8676abb0ada7d957799c44096cb5af0c0fe917f0","patch":"@@ -3,8 +3,8 @@\n         Metadata\n     </title>\n     <para>\n-The JPA Overview covers JPA metadata in <xref linkend=\"jpa_overview_meta\">\n-</xref>. This chapter discusses OpenJPA's extensions to standard JPA metadata.\n+The JPA Overview covers JPA metadata in <xref linkend=\"jpa_overview_meta\"/>\n+. This chapter discusses OpenJPA's extensions to standard JPA metadata.\n     </para>\n     <section id=\"ref_guide_meta_factory\">\n         <title>\n@@ -24,14 +24,14 @@ The JPA Overview covers JPA metadata in <xref linkend=\"jpa_overview_meta\">\n         <para>\n The <link linkend=\"openjpa.MetaDataFactory\"><literal>openjpa.MetaDataFactory\n </literal></link> configuration property controls metadata loading and storing.\n-This property takes a plugin string (see <xref linkend=\"ref_guide_conf_plugins\">\n-</xref>) describing a concrete\n+This property takes a plugin string (see <xref linkend=\"ref_guide_conf_plugins\"/>\n+) describing a concrete\n <ulink url=\"../apidocs/org/apache/openjpa/meta/MetaDataFactory.html\">\n <classname>org.apache.openjpa.meta.MetaDataFactory</classname></ulink>\n implementation. A metadata factory can load mapping information as well as\n persistence metadata, or it can leave mapping information to a separate\n <emphasis>mapping factory</emphasis> (see\n-<xref linkend=\"ref_guide_mapping_factory\"></xref> ). OpenJPA recognizes the\n+<xref linkend=\"ref_guide_mapping_factory\"/> ). OpenJPA recognizes the\n following built-in metadata factories:\n         </para>\n         <itemizedlist>\n@@ -48,7 +48,7 @@ following built-in metadata factories:\n The standard metadata factories all accept the following properties for locating\n persistent classes. Each property represents a different mechanism for locating\n persistent types; you can choose the mechanism or combination of mechanisms that\n-are most convenient. See <xref linkend=\"ref_guide_pc_pcclasses\"></xref> for a\n+are most convenient. See <xref linkend=\"ref_guide_pc_pcclasses\"/> for a\n discussion of when it is necessary to list your persistent classes.\n         </para>\n         <itemizedlist>\n@@ -112,8 +112,8 @@ scanned for <phrase>annotated JPA entities</phrase>.\n         <para>\n This section describes OpenJPA's core additions to standard entity metadata. We\n present the object-relational mapping syntax to support these additions in\n-<xref linkend=\"ref_guide_mapping_jpa\"></xref>. Finally,\n-<xref linkend=\"ref_guide_meta_ext\"></xref> covers additional extensions to JPA\n+<xref linkend=\"ref_guide_mapping_jpa\"/>. Finally,\n+<xref linkend=\"ref_guide_meta_ext\"/> covers additional extensions to JPA\n metadata that allow you to access auxiliary OpenJPA features.\n         </para>\n         <section id=\"ref_guide_meta_jpa_datastoreid\">\n@@ -133,9 +133,9 @@ JPA typically requires you to declare one or more <literal>Id</literal> fields\n to act as primary keys. OpenJPA, however, can create and maintain a surrogate\n primary key value when you do not declare any <literal>Id</literal> fields. This\n form of persistent identity is called <emphasis>datastore identity</emphasis>.\n-<xref linkend=\"ref_guide_pc_oid\"></xref> discusses OpenJPA's support for\n+<xref linkend=\"ref_guide_pc_oid\"/> discusses OpenJPA's support for\n datastore identity in JPA. We cover how to map your datastore identity primary\n-key column in <xref linkend=\"ref_guide_mapping_jpa_datastoreid\"></xref>\n+key column in <xref linkend=\"ref_guide_mapping_jpa_datastoreid\"/>\n             </para>\n         </section>\n         <section id=\"ref_guide_meta_jpa_version\">\n@@ -154,7 +154,7 @@ key column in <xref linkend=\"ref_guide_mapping_jpa_datastoreid\"></xref>\n Just as OpenJPA can maintain your entity's identity without any <literal>Id\n </literal> fields, OpenJPA can maintain your entity's optimistic version without\n any <literal>Version</literal> fields.\n-<xref linkend=\"ref_guide_mapping_jpa_version\"></xref> shows you how to map\n+<xref linkend=\"ref_guide_mapping_jpa_version\"/> shows you how to map\n surrogate version columns.\n             </para>\n         </section>\n@@ -222,8 +222,8 @@ to the same-named property of standard JPA annotations such as\n Though you can use the <classname>Persistent</classname> annotation in place of\n most of the standard direct field annotations mentioned above, we recommend\n primarily using it for non-standard and custom types for which no standard JPA\n-annotation exists. For example, <xref linkend=\"ref_guide_mapping_jpa_columns\">\n-</xref> demonstrates the use of the <classname>Persistent</classname> annotation\n+annotation exists. For example, <xref linkend=\"ref_guide_mapping_jpa_columns\"/>\n+ demonstrates the use of the <classname>Persistent</classname> annotation\n to denote a persistent <classname>java.awt.Point</classname> field.\n             </para>\n         </section>\n@@ -295,7 +295,7 @@ cascade behavior for the collection elements. Corresponds exactly to the\n                 </listitem>\n             </itemizedlist>\n             <para>\n-<xref linkend=\"ref_guide_mapping_jpa_coll\"></xref> contains several examples of\n+<xref linkend=\"ref_guide_mapping_jpa_coll\"/> contains several examples of\n using <classname>PersistentCollection</classname> to mark non-standard\n collection fields persistent.\n             </para>\n@@ -376,7 +376,7 @@ cascade</literal> property of standard JPA annotations such as\n             <para>\n Map keys and values in OpenJPA can be entities, simple types (primitive\n wrappers, <classname>String</classname> s, etc), custom types, or embedded\n-objects. <xref linkend=\"ref_guide_mapping_jpa_map\"></xref> contains several\n+objects. <xref linkend=\"ref_guide_mapping_jpa_map\"/> contains several\n examples of using <classname>PersistentMap</classname> to annotate persistent\n map fields.\n             </para>\n@@ -397,7 +397,7 @@ map fields.\n         <para>\n OpenJPA extends standard metadata to allow you to access advanced OpenJPA\n functionality. This section covers persistence metadata extensions; we discuss\n-mapping metadata extensions in <xref linkend=\"ref_guide_mapping_ext\"></xref>.\n+mapping metadata extensions in <xref linkend=\"ref_guide_mapping_ext\"/>.\n All metadata extensions are optional; OpenJPA will rely on its defaults when no\n explicit data is provided.\n         </para>\n@@ -432,8 +432,8 @@ The <ulink url=\"../apidocs/org/apache/openjpa/persistence/FetchGroups.html\">\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/FetchGroup.html\">\n <classname>org.apache.openjpa.persistence.FetchGroup</classname></ulink>\n annotations allow you to define fetch groups in your JPA entities.\n-<xref linkend=\"ref_guide_fetch\"></xref> discusses OpenJPA's support for fetch\n-groups in general; see <xref linkend=\"ref_guide_fetch_custom\"></xref> for how to\n+<xref linkend=\"ref_guide_fetch\"/> discusses OpenJPA's support for fetch\n+groups in general; see <xref linkend=\"ref_guide_fetch_custom\"/> for how to\n use these annotations in particular.\n                 </para>\n             </section>\n@@ -456,7 +456,7 @@ use these annotations in particular.\n                     </seealso>\n                 </indexterm>\n                 <para>\n-<xref linkend=\"ref_guide_cache\"></xref> examines caching in OpenJPA. Metadata\n+<xref linkend=\"ref_guide_cache\"/> examines caching in OpenJPA. Metadata\n extensions allow individual classes to override system caching defaults.\n                 </para>\n                 <para>\n@@ -540,7 +540,7 @@ into the cache with name <literal>&lt;cache-name&gt;</literal>.\n                 <para>\n The OpenJPA <link linkend=\"ref_guide_pc_enhance\">enhancer</link> may add a\n synthetic field to detachable classes to hold detached state (see\n-<xref linkend=\"ref_guide_detach_graph\"></xref> for details). You can instead\n+<xref linkend=\"ref_guide_detach_graph\"/> for details). You can instead\n declare your own detached state field or supress the creation of a detached\n state field altogether. In the latter case, your class must not use\n <link linkend=\"ref_guide_pc_oid\">datastore identity</link>, and should declare\n@@ -590,7 +590,7 @@ mapped class. <phrase> The JPA\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/LockGroups.html\">\n <classname>org.apache.openjpa.persistence.LockGroups</classname></ulink>\n annotation accepts an array of lock group names.</phrase> For details on lock\n-groups, see <xref linkend=\"ref_guide_lock_groups_and_subclasses\"></xref>.\n+groups, see <xref linkend=\"ref_guide_lock_groups_and_subclasses\"/>.\n                 </para>\n             </section>\n             <section id=\"auditable\">\n@@ -688,7 +688,7 @@ This boolean extension, denoted by <phrase> the JPA\n org.apache.openjpa.persistence.LRS</classname></ulink> annotation,</phrase>\n indicates that a field should use OpenJPA's special large result set collection\n or map proxies. A complete description of large result set proxies is available\n-in <xref linkend=\"ref_guide_pc_scos_proxy_lrs\"></xref>.\n+in <xref linkend=\"ref_guide_pc_scos_proxy_lrs\"/>.\n                 </para>\n             </section>\n             <section id=\"order-by\">\n@@ -707,7 +707,7 @@ in <xref linkend=\"ref_guide_pc_scos_proxy_lrs\"></xref>.\n                     </tertiary>\n                 </indexterm>\n                 <para>\n-<phrase> The JPA Overview's <xref linkend=\"jpa_overview_meta_orderby\"></xref>\n+<phrase> The JPA Overview's <xref linkend=\"jpa_overview_meta_orderby\"/>\n describes JPA's <literal>OrderBy</literal> annotation for loading the elements\n of collection fields in a prescribed order.</phrase> Ordering syntax is as\n follows:\n@@ -775,7 +775,7 @@ This extension names the inverse field in a logical bidirectional relation.\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/InverseLogical.html\">\n <classname>org.apache.openjpa.persistence.InverseLogical</classname></ulink>\n annotation.</phrase> We discuss logical bidirectional relations and this\n-extension in detail in <xref linkend=\"ref_guide_inverses\"></xref>.\n+extension in detail in <xref linkend=\"ref_guide_inverses\"/>.\n                 </para>\n             </section>\n             <section id=\"lock-group\">\n@@ -802,8 +802,8 @@ OpenJPA's <ulink url=\"../apidocs/org/apache/openjpa/persistence/LockGroup.html\">\n <classname>org.apache.openjpa.persistence.LockGroup</classname></ulink>\n annotation</phrase> to name the lock group for a field. You can exclude a field\n from optimistic locking with a value of <literal>none</literal>. We discuss\n-lock groups and this extension further in <xref linkend=\"ref_guide_lock_groups\">\n-</xref>.\n+lock groups and this extension further in <xref linkend=\"ref_guide_lock_groups\"/>\n+.\n                 </para>\n             </section>\n             <section id=\"read-only\">\n@@ -930,7 +930,7 @@ hold persistent instances by default).\n                 </para>\n                 <para>\n This extension is also used with OpenJPA's externalization feature, described in\n-<xref linkend=\"ref_guide_pc_extern\"></xref>.\n+<xref linkend=\"ref_guide_pc_extern\"/>.\n                 </para>\n                 <para>\n OpenJPA defines the following type annotations for field values, collection,\n@@ -980,7 +980,7 @@ The <phrase> JPA\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/Externalizer.html\">\n <classname>org.apache.openjpa.persistence.Externalizer</classname></ulink>\n annotation</phrase> names a method to transform a field value into a value of\n-another type. See <xref linkend=\"ref_guide_pc_extern\"></xref> for details.\n+another type. See <xref linkend=\"ref_guide_pc_extern\"/> for details.\n                 </para>\n             </section>\n             <section id=\"factory\">\n@@ -1006,7 +1006,7 @@ The <phrase> JPA\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/Factory.html\"><classname>\n org.apache.openjpa.persistence.Factory</classname></ulink> annotation</phrase>\n names a method to re-create a field value from its externalized form. See\n-<xref linkend=\"ref_guide_pc_extern\"></xref> for details.\n+<xref linkend=\"ref_guide_pc_extern\"/> for details.\n                 </para>\n             </section>\n             <section id=\"external-values\">\n@@ -1033,7 +1033,7 @@ The <phrase> JPA\n <classname>org.apache.openjpa.persistence.ExternalValues</classname></ulink>\n annotation</phrase> declares values for transformation of simple fields to\n different constant values in the datastore. See\n-<xref linkend=\"ref_guide_pc_extern_values\"></xref> for details.\n+<xref linkend=\"ref_guide_pc_extern_values\"/> for details.\n                 </para>\n             </section>\n         </section>"},{"sha":"e528c5a1118e50a766ab608e5c393318df5f8e05","filename":"openjpa-project/src/doc/manual/ref_guide_optimization.xml","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/ref_guide_optimization.xml","raw_url":"https://github.com/apache/openjpa/raw/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/ref_guide_optimization.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_optimization.xml?ref=8676abb0ada7d957799c44096cb5af0c0fe917f0","patch":"@@ -36,10 +36,10 @@ more work onto the server will have a negative impact on scalability.\n             Optimization Guidelines\n         </title>\n         <tgroup cols=\"2\" align=\"left\" colsep=\"1\" rowsep=\"1\">\n-            <colspec colname=\"name\">\n-            </colspec>\n-            <colspec colname=\"desc\" colwidth=\"4*\">\n-            </colspec>\n+            <colspec colname=\"name\"/>\n+            \n+            <colspec colname=\"desc\" colwidth=\"4*\"/>\n+            \n             <tbody valign=\"top\">\n                 <row>\n                     <entry colname=\"name\">\n@@ -533,7 +533,7 @@ size.\n Attaching and even persisting instances can be more efficient when your detached\n objects use detached state managers. By default, OpenJPA does not use detached\n state managers when serializing an instance across tiers. See\n-<xref linkend=\"ref_guide_detach_graph\"></xref> for how to force OpenJPA to use\n+<xref linkend=\"ref_guide_detach_graph\"/> for how to force OpenJPA to use\n detached state managers across tiers, and for other options for more efficient\n attachment.\n                         </para>"},{"sha":"6340effac19b251507dd6ca8cc0874bd0d0b63e2","filename":"openjpa-project/src/doc/manual/ref_guide_pc.xml","status":"modified","additions":50,"deletions":50,"changes":100,"blob_url":"https://github.com/apache/openjpa/blob/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/ref_guide_pc.xml","raw_url":"https://github.com/apache/openjpa/raw/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/ref_guide_pc.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_pc.xml?ref=8676abb0ada7d957799c44096cb5af0c0fe917f0","patch":"@@ -8,7 +8,7 @@\n         </primary>\n     </indexterm>\n     <para>\n-Persistent class basics are covered in <xref linkend=\"jpa_overview_pc\"></xref>\n+Persistent class basics are covered in <xref linkend=\"jpa_overview_pc\"/>\n of the JPA Overview. This chapter details the persistent class features OpenJPA\n offers beyond the core JPA specification.\n     </para>\n@@ -57,7 +57,7 @@ may return incorrect results.\n             <listitem>\n                 <para>\n If you configure OpenJPA to create the needed database schema on startup (see\n-<xref linkend=\"ref_guide_mapping_synch\"></xref> ), OpenJPA must know all of your\n+<xref linkend=\"ref_guide_mapping_synch\"/> ), OpenJPA must know all of your\n persistent classes up-front.\n                 </para>\n             </listitem>\n@@ -66,7 +66,7 @@ persistent classes up-front.\n When any of these conditions are a factor in your JPA application, use the\n <literal>class</literal>, <literal> mapping-file</literal>, and <literal>\n jar-file</literal> elements of JPA's standard XML format to list your persistent\n-classes. See <xref linkend=\"jpa_overview_persistence_xml\"></xref> for details.\n+classes. See <xref linkend=\"jpa_overview_persistence_xml\"/> for details.\n         </para>\n         <note>\n             <para>\n@@ -113,8 +113,8 @@ the <methodname>getId</methodname> method in your source file.</phrase>\n         <mediaobject>\n             <imageobject>\n                 <!-- PNG image data, 509 x 133 (see README) -->\n-                <imagedata fileref=\"img/enhancement.png\" width=\"339px\">\n-                </imagedata>\n+                <imagedata fileref=\"img/enhancement.png\" width=\"339px\"/>\n+                \n             </imageobject>\n         </mediaobject>\n         <para>\n@@ -144,8 +144,8 @@ org.apache.openjpa.enhance.PCEnhancer</classname>.\n             </para>\n             <note>\n                 <para>\n-You can also enhance via Ant; see <xref linkend=\"ref_guide_integration_enhance\">\n-</xref>.\n+You can also enhance via Ant; see <xref linkend=\"ref_guide_integration_enhance\"/>\n+.\n                 </para>\n             </note>\n             <example id=\"ref_guide_pc_enhance_enhancer\">\n@@ -158,7 +158,7 @@ openjpac Magazine.java\n             </example>\n             <para>\n The enhancer accepts the standard set of command-line arguments defined by the\n-configuration framework (see <xref linkend=\"ref_guide_conf_devtools\"></xref> ),\n+configuration framework (see <xref linkend=\"ref_guide_conf_devtools\"/> ),\n along with the following flags:\n             </para>\n             <itemizedlist>\n@@ -218,8 +218,8 @@ The <filename>.class</filename> file of a class.\n             </itemizedlist>\n             <para>\n If you do not supply any arguments to the enhancer, it will run on the classes\n-in your persistent class list (see <xref linkend=\"ref_guide_pc_pcclasses\">\n-</xref> ).\n+in your persistent class list (see <xref linkend=\"ref_guide_pc_pcclasses\"/>\n+ ).\n             </para>\n             <para>\n You can run the enhancer over classes that have already been enhanced, in which\n@@ -296,8 +296,8 @@ enhancement</link> option.\n             <para>\n Searching for metadata for every class loaded by the JVM can slow application\n initialization. One way to speed things up is to take advantage of the optional\n-persistent class list described in <xref linkend=\"ref_guide_pc_pcclasses\">\n-</xref>. If you declare a persistent class list, OpenJPA will only search for\n+persistent class list described in <xref linkend=\"ref_guide_pc_pcclasses\"/>\n+. If you declare a persistent class list, OpenJPA will only search for\n metadata for classes in that list.\n             </para>\n             <para>\n@@ -315,12 +315,12 @@ java -javaagent:/home/dev/openjpa/lib/org.apache.openjpa.jar com.xyz.Main\n             </example>\n             <para>\n You can pass settings to the agent using OpenJPA's plugin syntax (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref> ). The agent accepts the long\n+<xref linkend=\"ref_guide_conf_plugins\"/> ). The agent accepts the long\n form of any of the standard configuration options (\n-<xref linkend=\"ref_guide_conf_devtools\"></xref> ). It also accepts the following\n+<xref linkend=\"ref_guide_conf_devtools\"/> ). It also accepts the following\n options, the first three of which correspond exactly to to the same-named\n options of the enhancer tool described in\n-<xref linkend=\"ref_guide_pc_enhance_build\"></xref>:\n+<xref linkend=\"ref_guide_pc_enhance_build\"/>:\n             </para>\n             <itemizedlist>\n                 <listitem>\n@@ -386,7 +386,7 @@ and unenhanced versions of a class. This allows you to serialize instances\n between a server using OpenJPA and a client that does not have access to\n enhanced classes or OpenJPA libraries. In some cases, however, you can make the\n persist and attach processes more robust and efficient by allowing breaks in\n-serialization compatibility. See <xref linkend=\"ref_guide_detach_graph\"></xref>\n+serialization compatibility. See <xref linkend=\"ref_guide_detach_graph\"/>\n for details.\n             </para>\n         </section>\n@@ -416,12 +416,12 @@ OpenJPA's\n annotation. This annotation has <literal>strategy</literal> and <literal>\n generator</literal> properties that mirror the same-named properties on the\n standard <classname>javax.persistence.GeneratedValue</classname> annotation\n-described in <xref linkend=\"jpa_overview_meta_id\"></xref> of the JPA Overview.\n+described in <xref linkend=\"jpa_overview_meta_id\"/> of the JPA Overview.\n         </para>\n         <para>\n To retrieve the identity value of a datastore identity entity, use the\n <methodname>OpenJPAEntityManager.getObjectId (Object entity)</methodname>\n-method. See <xref linkend=\"ref_guide_runtime_em\"></xref> for more information on\n+method. See <xref linkend=\"ref_guide_runtime_em\"/> for more information on\n the <classname>OpenJPAEntityManager</classname>.\n         </para>\n         <example id=\"ref_guide_pc_oid_datastoreentityex\">\n@@ -520,7 +520,7 @@ appidtool</literal> shell/bat script or via its Java class,\n             </para>\n             <note>\n                 <para>\n-<xref linkend=\"ref_guide_integration_appidtool\"></xref> describes the\n+<xref linkend=\"ref_guide_integration_appidtool\"/> describes the\n application identity tool's Ant task.\n                 </para>\n             </note>\n@@ -535,8 +535,8 @@ appidtool -s Id Magazine.java\n             <para>\n The application identity tool accepts the standard set of command-line arguments\n defined by the configuration framework (see\n-<xref linkend=\"ref_guide_conf_devtools\"></xref> ), including code formatting\n-flags described in <xref linkend=\"ref_guide_conf_devtools_format\"></xref>. It\n+<xref linkend=\"ref_guide_conf_devtools\"/> ), including code formatting\n+flags described in <xref linkend=\"ref_guide_conf_devtools_format\"/>. It\n also accepts the following arguments:\n             </para>\n             <itemizedlist>\n@@ -606,7 +606,7 @@ The <filename>.class</filename> file of a persistent class.\n             </itemizedlist>\n             <para>\n If you do not supply any arguments to the tool, it will act on the classes in\n-your persistent classes list (see <xref linkend=\"ref_guide_pc_pcclasses\"></xref>\n+your persistent classes list (see <xref linkend=\"ref_guide_pc_pcclasses\"/>\n ).\n             </para>\n         </section>\n@@ -639,7 +639,7 @@ your persistent classes list (see <xref linkend=\"ref_guide_pc_pcclasses\"></xref>\n                 </secondary>\n             </indexterm>\n             <para>\n-<xref linkend=\"jpa_overview_meta_gen\"></xref> explains how to use JPA's\n+<xref linkend=\"jpa_overview_meta_gen\"/> explains how to use JPA's\n <literal>IDENTITY</literal> generation type to automatically assign field\n values. However, here are some additional caveats you should be aware of when\n using <literal>IDENTITY</literal> generation:\n@@ -648,7 +648,7 @@ using <literal>IDENTITY</literal> generation:\n                 <listitem>\n                     <para>\n Your database must support auto-increment / identity columns, or some equivalent\n-(see <xref linkend=\"ref_guide_dbsetup_dbsupport_oracle\"></xref> for how to\n+(see <xref linkend=\"ref_guide_dbsetup_dbsupport_oracle\"/> for how to\n configure a combination of triggers and sequences to fake auto-increment support\n in Oracle).\n                     </para>\n@@ -692,7 +692,7 @@ This can have a negative impact on performance.\n         </indexterm>\n         <para>\n Bidirectional relations are an essential part of data modeling.\n-<xref linkend=\"jpa_overview_mapping\"></xref> in the JPA Overview explains how to\n+<xref linkend=\"jpa_overview_mapping\"/> in the JPA Overview explains how to\n use the <literal>mappedBy</literal> annotation attribute to form bidirectional\n relations that also share datastore storage in JPA.\n         </para>\n@@ -1072,8 +1072,8 @@ concrete collection or map class.\n                     </listitem>\n                     <listitem>\n                         <para>\n-The field cannot have an externalizer (see <xref linkend=\"ref_guide_pc_extern\">\n-</xref> ).\n+The field cannot have an externalizer (see <xref linkend=\"ref_guide_pc_extern\"/>\n+ ).\n                         </para>\n                     </listitem>\n                     <listitem>\n@@ -1229,10 +1229,10 @@ their corresponding metadata extensions.\n                     Externalizer Options\n                 </title>\n                 <tgroup cols=\"2\" align=\"left\" colsep=\"1\" rowsep=\"1\">\n-                    <colspec colname=\"method\">\n-                    </colspec>\n-                    <colspec colname=\"extension\">\n-                    </colspec>\n+                    <colspec colname=\"method\"/>\n+                    \n+                    <colspec colname=\"extension\"/>\n+                    \n                     <thead>\n                         <row>\n                             <entry colname=\"method\">\n@@ -1335,10 +1335,10 @@ corresponding metadata extensions.\n                     Factory Options\n                 </title>\n                 <tgroup cols=\"2\" align=\"left\" colsep=\"1\" rowsep=\"1\">\n-                    <colspec colname=\"method\">\n-                    </colspec>\n-                    <colspec colname=\"extension\">\n-                    </colspec>\n+                    <colspec colname=\"method\"/>\n+                    \n+                    <colspec colname=\"extension\"/>\n+                    \n                     <thead>\n                         <row>\n                             <entry colname=\"method\">\n@@ -1451,7 +1451,7 @@ mark the field dirty manully, or create a custom field proxy.\n field dirty manually in JPA.</phrase>\n                 </para>\n                 <para>\n-See <xref linkend=\"ref_guide_pc_scos_proxy\"></xref> for a discussion of proxies.\n+See <xref linkend=\"ref_guide_pc_scos_proxy\"/> for a discussion of proxies.\n                 </para>\n             </note>\n             <para>\n@@ -1462,7 +1462,7 @@ that a field can externalize to something as simple as a primitive, something as\n complex as a collection or map of persistence-capable objects, or anything in\n between. If you do choose to externalize to a collection or map, OpenJPA\n recognizes a family of metadata extensions for specying type information for the\n-externalized form of your fields - see <xref linkend=\"type\"></xref>. If the\n+externalized form of your fields - see <xref linkend=\"type\"/>. If the\n external form of your field is a persistence-capable object, or contains\n persistence-capable objects, OpenJPA will correctly include the objects in its\n persistence-by-reachability algorithms and its delete-dependent algorithms.\n@@ -1637,7 +1637,7 @@ standard data fetching. Specifying fetch groups allows for tuning of lazy\n loading and eager fetching behavior.\n         </para>\n         <para>\n-The JPA Overview's <xref linkend=\"jpa_overview_meta_fetch\"></xref> describes how\n+The JPA Overview's <xref linkend=\"jpa_overview_meta_fetch\"/> describes how\n to use JPA metadata annotations to control whether a field is fetched eagerly or\n lazily. Fetch groups add a dynamic aspect to this standard ability. As you will\n see, OpenJPA's JPA extensions allow you can add and remove fetch groups at\n@@ -1831,7 +1831,7 @@ public Collection&lt;String&gt; getFetchGroups ();\n public void clearFetchGroups ();\n </programlisting>\n             <para>\n-<xref linkend=\"ref_guide_runtime\"></xref> details the <classname>\n+<xref linkend=\"ref_guide_runtime\"/> details the <classname>\n OpenJPAEntityManager</classname>, <classname>OpenJPAQuery</classname>, and\n <classname>FetchPlan</classname> interfaces.\n             </para>\n@@ -2002,7 +2002,7 @@ a single query.\n         </para>\n         <para>\n Eager fetching only affects relations in the fetch groups being loaded (see\n-<xref linkend=\"ref_guide_fetch\"></xref> ). In other words, relations that would\n+<xref linkend=\"ref_guide_fetch\"/> ). In other words, relations that would\n not normally be loaded immediately when retrieving an object or accessing a\n field are not affected by eager fetching. In our example above, the address of\n each person would only be eagerly fetched if the query were configured to\n@@ -2042,7 +2042,7 @@ When loading data for multiple instances, though, (such as when executing a\n Instead, OpenJPA defaults to <literal>parallel</literal> mode for collections,\n as described below. You can force OpenJPA use a join rather than parallel mode\n for a collection field using the metadata extension described in\n-<xref linkend=\"eager-fetch-mode\"></xref>.\n+<xref linkend=\"eager-fetch-mode\"/>.\n                 </para>\n                 <para>\n                 <indexterm>\n@@ -2072,8 +2072,8 @@ from relation fetching, and can be disabled for specific classes.\n Some databases may not support UNIONs or outer joins. Also, OpenJPA can not use\n outer joins if you have set the <link linkend=\"openjpa.jdbc.DBDictionary\">\n <literal> DBDictionary</literal></link>'s <literal>JoinSyntax</literal> to\n-<literal>traditional</literal>. See <xref linkend=\"ref_guide_dbsetup_sql92\">\n-</xref>.\n+<literal>traditional</literal>. See <xref linkend=\"ref_guide_dbsetup_sql92\"/>\n+.\n                     </para>\n                 </note>\n             </listitem>\n@@ -2116,7 +2116,7 @@ dangerously, to the point that you could easily overwhelm the network.\n Polymorphic to-one relations to table-per-class mappings use parallel eager\n fetching because proper joins are impossible. You can force other to-one\n relations to use parallel rather than join mode eager fetching using the\n-metadata extension described in <xref linkend=\"eager-fetch-mode\"></xref>.\n+metadata extension described in <xref linkend=\"eager-fetch-mode\"/>.\n                 </para>\n                 <para>\n Setting your subclass fetch mode to <literal>parallel</literal> affects\n@@ -2196,7 +2196,7 @@ performant strategies.\n             <para>\n You can easily override the default fetch modes at runtime for any lookup or\n query through OpenJPA's fetch configuration APIs. See\n-<xref linkend=\"ref_guide_runtime\"></xref> for details.\n+<xref linkend=\"ref_guide_runtime\"/> for details.\n             </para>\n             <example id=\"ref_guide_perfpack_eager_def\">\n                 <title>\n@@ -2227,14 +2227,14 @@ List results = q.getResultList ();\n             </example>\n             <para>\n You can specify a default subclass fetch mode for an individual class with the\n-metadata extension described in <xref linkend=\"subclass-fetch-mode\"></xref>.\n+metadata extension described in <xref linkend=\"subclass-fetch-mode\"/>.\n Note, however, that you cannot \"upgrade\" the runtime fetch mode with your class\n setting. If the runtime fetch mode is <literal>none</literal>, no eager\n subclass data fetching will take place, regardless of your metadata setting.\n             </para>\n             <para>\n This applies to the eager fetch mode metadata extension as well (see\n-<xref linkend=\"eager-fetch-mode\"></xref> ). You can use this extension to\n+<xref linkend=\"eager-fetch-mode\"/> ). You can use this extension to\n disable eager fetching on a field or to declare that a collection would rather\n use joins than parallel selects or vice versa. But an extension value of\n <literal>join</literal> won't cause any eager joining if the fetch\n@@ -2269,7 +2269,7 @@ fetching:\n                         </secondary>\n                     </indexterm>\n When you are using <literal>parallel</literal> eager fetch mode and you have\n-large result sets enabled (see <xref linkend=\"ref_guide_dbsetup_lrs\"></xref>)\n+large result sets enabled (see <xref linkend=\"ref_guide_dbsetup_lrs\"/>)\n or you place a range on a query, OpenJPA performs the needed parallel selects on\n one page of results at a time. For example, suppose your <literal>\n FetchBatchSize</literal> is set to 20, and you perform a large result set query\n@@ -2316,7 +2316,7 @@ turn off eager to-many joining.\n                     <para>\n OpenJPA cannot eagerly join to polymorphic relations to non-leaf classes in a\n table-per-class inheritance hierarchy. You can work around this restriction\n-using the mapping extensions described in <xref linkend=\"nonpolymorphic\"></xref>\n+using the mapping extensions described in <xref linkend=\"nonpolymorphic\"/>\n .\n                     </para>\n                 </listitem>\n@@ -2374,7 +2374,7 @@ phoneNumber</literal> into one lock group, <literal>salary</literal> and\n <phrase> You specify a field's lock group in JPA metadata with the\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/LockGroup.html\">\n <classname>org.apache.openjpa.persistence.LockGroup</classname></ulink>\n-annotation.</phrase> See <xref linkend=\"lock-group\"></xref> for details on lock\n+annotation.</phrase> See <xref linkend=\"lock-group\"/> for details on lock\n group metadata.\n         </para>\n         <example id=\"ref_guide_lock_groups_metadata\">"},{"sha":"0e089fbf128eb97cee6f649797caec00e1ae1be9","filename":"openjpa-project/src/doc/manual/ref_guide_remote.xml","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/apache/openjpa/blob/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/ref_guide_remote.xml","raw_url":"https://github.com/apache/openjpa/raw/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/ref_guide_remote.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_remote.xml?ref=8676abb0ada7d957799c44096cb5af0c0fe917f0","patch":"@@ -53,7 +53,7 @@ sections explain these capabilities in detail.\n         </indexterm>\n         <para>\n The JPA Overview describes the specification's standard detach and attach APIs\n-in <xref linkend=\"jpa_overview_em_lifecycle\"></xref>. This section enumerates \n+in <xref linkend=\"jpa_overview_em_lifecycle\"/>. This section enumerates \n OpenJPA's enhancements to the standard behavior.\n         </para>\n         <section id=\"ref_guide_detach_behavior\">\n@@ -223,7 +223,7 @@ default.\n <literal>fgs</literal>: Detach all fields and relations in the default fetch\n group, and any other fetch groups that you have added to the current\n <link linkend=\"ref_guide_runtime\">fetch configuration</link>. For more\n-information on custom fetch groups, see <xref linkend=\"ref_guide_fetch\"></xref>\n+information on custom fetch groups, see <xref linkend=\"ref_guide_fetch\"/>\n .\n                     </para>\n                 </listitem>\n@@ -241,14 +241,14 @@ to its Java default value in the detached instance.\n             </para>\n             <para>\n The <literal>openjpa.DetachState</literal> option is actually a plugin string\n-(see <xref linkend=\"ref_guide_conf_plugins\"></xref>) that allows you to also\n+(see <xref linkend=\"ref_guide_conf_plugins\"/>) that allows you to also\n configure the following options related to detached state:\n             </para>\n             <itemizedlist>\n                 <listitem>\n                     <para>\n <literal>DetachedStateField</literal>: As described in\n-<xref linkend=\"ref_guide_attach_behavior\"></xref> above, OpenJPA can take\n+<xref linkend=\"ref_guide_attach_behavior\"/> above, OpenJPA can take\n advantage of a <emphasis>detached state field</emphasis> to make the attach\n process more efficient. This field is added by the enhancer and is not visible\n to your application. Set this property to one of the following values:\n@@ -279,7 +279,7 @@ classes and the OpenJPA libraries.\n                     <para>\n You can override the setting of this property or declare your own detached state\n field on individual classes using OpenJPA's metadata extensions. See\n-<xref linkend=\"ref_guide_detach_field\"></xref> below.\n+<xref linkend=\"ref_guide_detach_field\"/> below.\n                     </para>\n                 </listitem>\n                 <listitem>\n@@ -357,7 +357,7 @@ It is possible to define this detached state field yourself. Declaring this\n field in your class metadata prevents the enhancer from adding any extra fields\n to the class, and keeps the enhanced class serialization-compatible with the\n unenhanced version. The detached state field must not be persistent. See\n-<xref linkend=\"detached-state-field\"></xref> for details on how to declare a\n+<xref linkend=\"detached-state-field\"/> for details on how to declare a\n detached state field.\n                 </para>\n <programlisting>\n@@ -423,7 +423,7 @@ public class Magazine\n         </indexterm>\n The remote event notification framework allows a subset of the information\n available through OpenJPA's transaction events (see\n-<xref linkend=\"ref_guide_runtime_pm_event\"></xref>) to be broadcast to remote\n+<xref linkend=\"ref_guide_runtime_pm_event\"/>) to be broadcast to remote\n listeners. OpenJPA's <link linkend=\"ref_guide_cache\">data cache</link>, for\n example, uses remote events to remain synchronized when deployed in multiple\n JVMs.\n@@ -586,7 +586,7 @@ number of concurrent transactions increases. The maximum number of concurrent\n transactions is a function of the size of the connection pool. See the the\n <literal>MaxActive</literal> property of <literal>\n openjpa.ConnectionFactoryProperties</literal> in\n-<xref linkend=\"ref_guide_dbsetup_builtin\"></xref>. Setting a value of 0 will\n+<xref linkend=\"ref_guide_dbsetup_builtin\"/>. Setting a value of 0 will\n result in behavior where the thread invoking <methodname>commit</methodname>\n will perform the broadcast directly. Defaults to 2.\n                         </para>"},{"sha":"dc42272ae5eeca6e2140e9162023137adcc904cf","filename":"openjpa-project/src/doc/manual/ref_guide_runtime.xml","status":"modified","additions":12,"deletions":12,"changes":24,"blob_url":"https://github.com/apache/openjpa/blob/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/ref_guide_runtime.xml","raw_url":"https://github.com/apache/openjpa/raw/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/ref_guide_runtime.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_runtime.xml?ref=8676abb0ada7d957799c44096cb5af0c0fe917f0","patch":"@@ -253,11 +253,11 @@ org.apache.openjpa.persistence.OpenJPAQuery</classname> interface. See its\n details on the convenience methods it provides.\n             </para>\n         </section>\n-        <section id=\"ref_guide_runtime_jpaquery\">\n+        <section id=\"ref_guide_runtime_jpaextent\">\n             <title>\n                 Extent\n             </title>\n-            <indexterm zone=\"ref_guide_runtime_jpaquery\">\n+            <indexterm zone=\"ref_guide_runtime_jpaextent\">\n                 <primary>\n                     Extent\n                 </primary>\n@@ -312,7 +312,7 @@ the JPA specification, OpenJPA includes a flexible datastore-level cache. You\n can access this cache from your JPA code using the\n <ulink url=\"../../api/openjpa/persistence/StoreCache.html\"><classname>\n org.apache.openjpa.persistence.StoreCache</classname></ulink> facade.\n-<xref linkend=\"ref_guide_cache\"></xref> has detailed information on OpenJPA's\n+<xref linkend=\"ref_guide_cache\"/> has detailed information on OpenJPA's\n data caching system, including the <classname>StoreCache</classname> facade.\n             </para>\n         </section>\n@@ -330,7 +330,7 @@ OpenJPA can cache query results as well as persistent object data. The\n <ulink url=\"../../api/openjpa/persistence/QueryResultCache.html\"><classname>\n org.apache.openjpa.persistence.QueryResultCache</classname></ulink> is an\n JPA-flavored facade to OpenJPA's internal query cache. See\n-<xref linkend=\"ref_guide_cache_query\"></xref> for details on query caching in\n+<xref linkend=\"ref_guide_cache_query\"/> for details on query caching in\n OpenJPA.\n             </para>\n         </section>\n@@ -365,7 +365,7 @@ OpenJPA goes one step further, extending <classname>FetchPlan</classname> with\n org.apache.openjpa.persistence.jdbc.JDBCFetchPlan</classname></ulink> to add\n additional JDBC-specific tuning methods. Unless you have customized OpenJPA to\n use a non-relational back-end (see\n-<xref linkend=\"ref_guide_enterprise_abstractstore\"></xref> ), all <classname>\n+<xref linkend=\"ref_guide_enterprise_abstractstore\"/> ), all <classname>\n FetchPlan</classname>s in OpenJPA implement <classname>JDBCFetchPlan</classname>\n , so feel free to cast to this interface.\n             </para>\n@@ -383,7 +383,7 @@ configuration. Likewise, modifying an <classname>EntityManager</classname>'s\n configuration does not affect the <classname> EntityManagerFactory</classname>.\n             </para>\n             <para>\n-<xref linkend=\"ref_guide_fetch\"></xref> includes examples using <classname>\n+<xref linkend=\"ref_guide_fetch\"/> includes examples using <classname>\n FetchPlan</classname> s.\n             </para>\n         </section>\n@@ -1184,7 +1184,7 @@ There are two ways to register your custom filter extensions with OpenJPA:\n extensions by setting the <link linkend=\"openjpa.FilterListeners\"><literal>\n openjpa.FilterListeners</literal></link> configuration property to a\n comma-separated list of plugin strings (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref>) describing your extensions\n+<xref linkend=\"ref_guide_conf_plugins\"/>) describing your extensions\n classes. Extensions registered in this fashion must have a public no-arg\n constructor. They must also be thread safe, because they will be shared across\n all queries.\n@@ -1252,7 +1252,7 @@ There are two ways to register your custom query aggregates with OpenJPA:\n aggregates by setting the <link linkend=\"openjpa.AggregateListeners\"><literal>\n openjpa.AggregateListeners</literal></link> configuration property to a\n comma-separated list of plugin strings (see\n-<xref linkend=\"ref_guide_conf_plugins\"></xref>) describing your aggregate\n+<xref linkend=\"ref_guide_conf_plugins\"/>) describing your aggregate\n implementation. Aggregates registered in this fashion must have a public no-arg\n constructor. They must also be thread safe, because they will be shared across\n all queries.\n@@ -1384,7 +1384,7 @@ names and values of all the parameters for the query.\n             </secondary>\n         </indexterm>\n         <para>\n-The JPA Overview's <xref linkend=\"jpa_overview_mapping\"></xref> details using\n+The JPA Overview's <xref linkend=\"jpa_overview_mapping\"/> details using\n generators to automatically populate identity fields in JPA.\n         </para>\n         <para>\n@@ -1608,11 +1608,11 @@ You can use JPA <literal>SequenceGenerator</literal>s to describe any built-in\n <classname>Seq</classname>s or your own <classname>Seq</classname>\n implementation. Set the <literal>sequenceName</literal> attribute to a plugin\n string describing your choice. See\n-<xref linkend=\"jpa_overview_mapping_sequence\"></xref> in the JPA Overview for\n+<xref linkend=\"jpa_overview_mapping_sequence\"/> in the JPA Overview for\n details on defining <literal>SequenceGenerator</literal> s.\n         </para>\n         <para>\n-See <xref linkend=\"ref_guide_conf_plugins\"></xref> for plugin string formatting.\n+See <xref linkend=\"ref_guide_conf_plugins\"/> for plugin string formatting.\n         </para>\n         <example id=\"ref_guide_sequence_named\">\n             <title>\n@@ -1737,7 +1737,7 @@ remove listeners.\n For details on the transaction framework, see the <literal>\n org.apache.openjpa.event</literal> package\n <ulink url=\"../apidocs/org/apache/openjpa/event/package.html\">Javadoc</ulink>.\n-Also see <xref linkend=\"ref_guide_event\"></xref> for a description of OpenJPA's\n+Also see <xref linkend=\"ref_guide_event\"/> for a description of OpenJPA's\n remote event support.\n         </para>\n     </section>"},{"sha":"400ec97f3276dac8b40185b26ad7d6d615dcf316","filename":"openjpa-project/src/doc/manual/supported_databases.xml","status":"modified","additions":4,"deletions":8,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/supported_databases.xml","raw_url":"https://github.com/apache/openjpa/raw/8676abb0ada7d957799c44096cb5af0c0fe917f0/openjpa-project/src/doc/manual/supported_databases.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/supported_databases.xml?ref=8676abb0ada7d957799c44096cb5af0c0fe917f0","patch":"@@ -11,14 +11,10 @@ by OpenJPA <phrase>JPA</phrase>.\n             Supported Databases and JDBC Drivers\n         </title>\n         <tgroup rowsep=\"1\" colsep=\"1\" align=\"left\" cols=\"4\">\n-            <colspec colname=\"dbname\">\n-            </colspec>\n-            <colspec colname=\"dbversion\">\n-            </colspec>\n-            <colspec colname=\"drivname\">\n-            </colspec>\n-            <colspec colname=\"drivversion\">\n-            </colspec>\n+            <colspec colname=\"dbname\"/>\n+            <colspec colname=\"dbversion\"/>\n+            <colspec colname=\"drivname\"/>\n+            <colspec colname=\"drivversion\"/>\n             <thead>\n                 <row>\n                     <entry colname=\"dbname\">"}]}

