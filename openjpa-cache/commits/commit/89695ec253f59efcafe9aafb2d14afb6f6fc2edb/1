{"sha":"89695ec253f59efcafe9aafb2d14afb6f6fc2edb","node_id":"MDY6Q29tbWl0MjA2MzY0Ojg5Njk1ZWMyNTNmNTllZmNhZmU5YWFmYjJkMTRhZmI2ZjZmYzJlZGI=","commit":{"author":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2008-07-15T02:06:55Z"},"committer":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2008-07-15T02:06:55Z"},"message":"OPENJPA-51 A  non-correlated subquery resulting SQL syntax error\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@676787 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"1b6828b44e8d36cdc740db905c85bc4085918d49","url":"https://api.github.com/repos/apache/openjpa/git/trees/1b6828b44e8d36cdc740db905c85bc4085918d49"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/89695ec253f59efcafe9aafb2d14afb6f6fc2edb","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/89695ec253f59efcafe9aafb2d14afb6f6fc2edb","html_url":"https://github.com/apache/openjpa/commit/89695ec253f59efcafe9aafb2d14afb6f6fc2edb","comments_url":"https://api.github.com/repos/apache/openjpa/commits/89695ec253f59efcafe9aafb2d14afb6f6fc2edb/comments","author":null,"committer":null,"parents":[{"sha":"434319cfee6140b6eac8cc136f039de50de59b83","url":"https://api.github.com/repos/apache/openjpa/commits/434319cfee6140b6eac8cc136f039de50de59b83","html_url":"https://github.com/apache/openjpa/commit/434319cfee6140b6eac8cc136f039de50de59b83"}],"stats":{"total":19,"additions":17,"deletions":2},"files":[{"sha":"35d42f2b10e03d256d5781f28a9d6e3cc603913b","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java","status":"modified","additions":14,"deletions":2,"changes":16,"blob_url":"https://github.com/apache/openjpa/blob/89695ec253f59efcafe9aafb2d14afb6f6fc2edb/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java","raw_url":"https://github.com/apache/openjpa/raw/89695ec253f59efcafe9aafb2d14afb6f6fc2edb/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java?ref=89695ec253f59efcafe9aafb2d14afb6f6fc2edb","patch":"@@ -582,7 +582,8 @@ public void setParent(Select parent, String path) {\n         for (Map.Entry entry : entries) {\n             Object key = entry.getKey();\n             Integer alias = (Integer) entry.getValue();\n-            if (key.toString().indexOf(_subPath) != -1) {\n+            if (key.toString().indexOf(_subPath) != -1 ||\n+                _parent.findTableAlias(alias) == false) {\n                 if (_aliases == null)\n                     _aliases = new HashMap();\n                 _aliases.put(key, alias);\n@@ -602,7 +603,8 @@ public void setParent(Select parent, String path) {\n             for (Map.Entry entry : entries) {\n                 Object key = entry.getKey();\n                 Integer alias = (Integer) entry.getValue();\n-                if (key.toString().indexOf(_subPath) != -1) {\n+                if (key.toString().indexOf(_subPath) != -1 ||\n+                    _parent.findTableAlias(alias) == false) {\n                     _parent.removeAlias(key);\n \n                     Object tableString = _parent.getTables().get(alias);\n@@ -612,6 +614,16 @@ public void setParent(Select parent, String path) {\n         }\n     }\n     \n+    private boolean findTableAlias(Integer alias) {\n+        // if alias is defined and referenced, return true.\n+        String value = \"t\" + alias.toString() + \".\";\n+        if (_tableAliases != null)\n+            return _tableAliases.containsValue(value) &&\n+               _tables.containsKey(alias);\n+        else\n+            return true;\n+    }\n+    \n     public Map getAliases() {\n         return _aliases;\n     }"},{"sha":"f0d15c475520f6989cb8c4766ae01e895450f794","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestSubquery.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/89695ec253f59efcafe9aafb2d14afb6f6fc2edb/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestSubquery.java","raw_url":"https://github.com/apache/openjpa/raw/89695ec253f59efcafe9aafb2d14afb6f6fc2edb/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestSubquery.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestSubquery.java?ref=89695ec253f59efcafe9aafb2d14afb6f6fc2edb","patch":"@@ -36,6 +36,9 @@ public void setUp() {\n     }\n \n     static String[]  querys = new String[] {\n+        \"select o1.oid from Order o1 where o1.oid in \" +\n+            \" (select distinct o.oid from OrderItem i, Order o\" +\n+            \" where i.quantity > 10 and o.amount > 1000 and i.lid = o.oid)\" ,\n         \"select o.oid from Order o where o.customer.name =\" +\n             \" (select max(o2.customer.name) from Order o2\" +\n             \" where o.customer.cid.id = o2.customer.cid.id)\","}]}

