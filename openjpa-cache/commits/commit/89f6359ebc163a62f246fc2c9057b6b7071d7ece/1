{"sha":"89f6359ebc163a62f246fc2c9057b6b7071d7ece","node_id":"MDY6Q29tbWl0MjA2MzY0Ojg5ZjYzNTllYmMxNjNhNjJmMjQ2ZmMyYzkwNTdiNmI3MDcxZDdlY2U=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2006-07-18T23:52:09Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2006-07-18T23:52:09Z"},"message":"moved store facade type registry to Configuration instead of a static in ImplHelper\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@423295 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"df14ed338a3e0601a45d210731a035d41bb0ba04","url":"https://api.github.com/repos/apache/openjpa/git/trees/df14ed338a3e0601a45d210731a035d41bb0ba04"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/89f6359ebc163a62f246fc2c9057b6b7071d7ece","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/89f6359ebc163a62f246fc2c9057b6b7071d7ece","html_url":"https://github.com/apache/openjpa/commit/89f6359ebc163a62f246fc2c9057b6b7071d7ece","comments_url":"https://api.github.com/repos/apache/openjpa/commits/89f6359ebc163a62f246fc2c9057b6b7071d7ece/comments","author":null,"committer":null,"parents":[{"sha":"19b401bcc7a1059ac04de3a9abce2d3a99121cf1","url":"https://api.github.com/repos/apache/openjpa/commits/19b401bcc7a1059ac04de3a9abce2d3a99121cf1","html_url":"https://github.com/apache/openjpa/commit/19b401bcc7a1059ac04de3a9abce2d3a99121cf1"}],"stats":{"total":60,"additions":16,"deletions":44},"files":[{"sha":"9f3aaf19f9b2fd336ea61c07ed07c6d73ec7b79e","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfiguration.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/89f6359ebc163a62f246fc2c9057b6b7071d7ece/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfiguration.java","raw_url":"https://github.com/apache/openjpa/raw/89f6359ebc163a62f246fc2c9057b6b7071d7ece/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfiguration.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfiguration.java?ref=89f6359ebc163a62f246fc2c9057b6b7071d7ece","patch":"@@ -1325,4 +1325,10 @@\n \t * Backwards compatibility options.\n \t */\n \tpublic Compatibility getCompatibilityInstance ();\n+    \n+    /**\n+     * Return the {@link StoreFacadeTypeRegistry} instance associated with this\n+     * configuration.\n+     */\n+    public StoreFacadeTypeRegistry getStoreFacadeTypeRegistry();\n }"},{"sha":"8af5b13efbba75958d27d5c63bb5ea9461fd8c75","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfigurationImpl.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/89f6359ebc163a62f246fc2c9057b6b7071d7ece/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfigurationImpl.java","raw_url":"https://github.com/apache/openjpa/raw/89f6359ebc163a62f246fc2c9057b6b7071d7ece/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfigurationImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfigurationImpl.java?ref=89f6359ebc163a62f246fc2c9057b6b7071d7ece","patch":"@@ -141,6 +141,9 @@\n \n     private Collection supportedOptions = new HashSet(33);\n     private String spec = null;\n+    \n+    private final StoreFacadeTypeRegistry _storeFacadeRegistry =\n+        new StoreFacadeTypeRegistry();\n \n     /**\n      * Default constructor. Attempts to load default properties.\n@@ -1412,4 +1415,8 @@ public void close() {\n     public Log getConfigurationLog() {\n         return getLog(LOG_RUNTIME);\n \t}\n+\n+    public StoreFacadeTypeRegistry getStoreFacadeTypeRegistry() {\n+        return _storeFacadeRegistry;\n+    }\n }"},{"sha":"fe3e047a4758cd4ff67baae127f756b55acf6b03","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ImplHelper.java","status":"modified","additions":0,"deletions":42,"changes":42,"blob_url":"https://github.com/apache/openjpa/blob/89f6359ebc163a62f246fc2c9057b6b7071d7ece/openjpa-kernel/src/main/java/org/apache/openjpa/util/ImplHelper.java","raw_url":"https://github.com/apache/openjpa/raw/89f6359ebc163a62f246fc2c9057b6b7071d7ece/openjpa-kernel/src/main/java/org/apache/openjpa/util/ImplHelper.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ImplHelper.java?ref=89f6359ebc163a62f246fc2c9057b6b7071d7ece","patch":"@@ -19,14 +19,10 @@\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n-import java.util.HashMap;\n import java.util.Iterator;\n-import java.util.Map;\n \n import org.apache.commons.lang.StringUtils;\n import org.apache.openjpa.enhance.PersistenceCapable;\n-import org.apache.openjpa.kernel.BrokerFactory;\n-import org.apache.openjpa.kernel.DelegatingBrokerFactory;\n import org.apache.openjpa.kernel.FetchState;\n import org.apache.openjpa.kernel.LockManager;\n import org.apache.openjpa.kernel.OpenJPAStateManager;\n@@ -53,7 +49,6 @@\n \n     private static final Localizer _loc = Localizer.forPackage\n         (ImplHelper.class);\n-\tprivate static Map _facadeTypes = new HashMap ();\n \n     /**\n      * Return the getter method matching the given property name.\n@@ -174,43 +169,6 @@ private static Object generateValue(StoreContext ctx,\n         }\n     }\n \n-    /**\n-     * Return the store-specific facade class for the given broker\n-     * component class. This method is used by facade implementations to\n-     * wrap store-specific components without knowing about all possible\n-     * back-ends.\n-     *\n-     * @param bf broker factory for which an implementation class\n-     * @param compType type of desired component (e.g. FetchPlan.class)\n-     * @return the class corresponding to the type in the store facade registry,\n-     * or <code>null</code> if no registry entry exists.\n-     */\n-    public static Class getStoreFacadeType(BrokerFactory bf, Class compType) {\n-    \t\n-    \tClass bfClass;\n-    \tif (bf instanceof DelegatingBrokerFactory)\n-    \t\tbfClass = ((DelegatingBrokerFactory) bf).getInnermostDelegate()\n-    \t\t\t.getClass();\n-    \telse\n-    \t\tbfClass = bf.getClass();\n-    \t\n-    \treturn (Class) _facadeTypes.get(storeFacadeKey(bfClass, compType));\n-    }\n-    \n-    /**\n-     * Add a facade type for the specified broker factory type and \n-     * component type.\n-     * @see #getStoreFacadeType\n-     */\n-    public static void addStoreFacadeType(Class bfClass, Class compType,\n-    \tClass facadeType) {\n-    \t_facadeTypes.put(storeFacadeKey(bfClass, compType), facadeType);\n-    }\n-    \n-    private static String storeFacadeKey(Class bfClass, Class compType) {\n-    \treturn bfClass.getName() + \":\" + compType.getName();\n-    }\n-\n     /**\n      * Close the given resource. The resource can be an extent iterator,\n      * query result, large result set relation, or any closeable OpenJPA"},{"sha":"ee152927b002aec8f1bb9282a3a1acc4360d90fb","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerFactoryImpl.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/89f6359ebc163a62f246fc2c9057b6b7071d7ece/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerFactoryImpl.java","raw_url":"https://github.com/apache/openjpa/raw/89f6359ebc163a62f246fc2c9057b6b7071d7ece/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerFactoryImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerFactoryImpl.java?ref=89f6359ebc163a62f246fc2c9057b6b7071d7ece","patch":"@@ -276,8 +276,9 @@ FetchPlan toFetchPlan(FetchConfiguration fetch) {\n         _factory.lock();\n         try {\n             if (_plan == null) {\n-                Class cls = ImplHelper.getStoreFacadeType(_factory, \n-                \tFetchPlan.class);\n+                Class cls = _factory.getConfiguration()\n+                    .getStoreFacadeTypeRegistry().getImplementation(\n+                        FetchPlan.class);\n                 if (cls == null)\n                     cls = FetchPlan.class;\n                 _plan = cls.getConstructor(FetchPlan.class);"}]}

