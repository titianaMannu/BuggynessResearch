{"sha":"8a034d671755a672ce2c77af3830c97c1216b5b7","node_id":"MDY6Q29tbWl0MjA2MzY0OjhhMDM0ZDY3MTc1NWE2NzJjZTJjNzdhZjM4MzBjOTdjMTIxNmI1Yjc=","commit":{"author":{"name":"Fay Wang","email":"faywang@apache.org","date":"2010-04-14T18:37:30Z"},"committer":{"name":"Fay Wang","email":"faywang@apache.org","date":"2010-04-14T18:37:30Z"},"message":"OPENJPA-1627: fix OrderBy with EmbeddedId.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@934101 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"008a21798c4417c1e4da534e359a86c398a1ff5f","url":"https://api.github.com/repos/apache/openjpa/git/trees/008a21798c4417c1e4da534e359a86c398a1ff5f"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/8a034d671755a672ce2c77af3830c97c1216b5b7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/8a034d671755a672ce2c77af3830c97c1216b5b7","html_url":"https://github.com/apache/openjpa/commit/8a034d671755a672ce2c77af3830c97c1216b5b7","comments_url":"https://api.github.com/repos/apache/openjpa/commits/8a034d671755a672ce2c77af3830c97c1216b5b7/comments","author":null,"committer":null,"parents":[{"sha":"f90b0bb16fbc181b56c7e256de771bf6f21a0d7b","url":"https://api.github.com/repos/apache/openjpa/commits/f90b0bb16fbc181b56c7e256de771bf6f21a0d7b","html_url":"https://github.com/apache/openjpa/commit/f90b0bb16fbc181b56c7e256de771bf6f21a0d7b"}],"stats":{"total":44,"additions":40,"deletions":4},"files":[{"sha":"f336a463ce1b32dd5b6cf799bbb0c289cb2ea954","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/JDBCRelatedFieldOrder.java","status":"modified","additions":28,"deletions":2,"changes":30,"blob_url":"https://github.com/apache/openjpa/blob/8a034d671755a672ce2c77af3830c97c1216b5b7/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/JDBCRelatedFieldOrder.java","raw_url":"https://github.com/apache/openjpa/raw/8a034d671755a672ce2c77af3830c97c1216b5b7/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/JDBCRelatedFieldOrder.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/JDBCRelatedFieldOrder.java?ref=8a034d671755a672ce2c77af3830c97c1216b5b7","patch":"@@ -76,8 +76,34 @@ public boolean isInRelation() {\n \n     public void order(Select sel, ClassMapping elem, Joins joins) {\n         FieldMapping fm = _fm;\n-        if (elem != null)\n-            fm = elem.getFieldMapping(_fm.getIndex());\n+        if (elem != null) {\n+            fm = getOrderByField(elem, fm);\n+            if (fm == null)\n+                fm = elem.getFieldMapping(_fm.getIndex());\n+        }\n         sel.orderBy(fm.getColumns(), _asc, joins, false);\n     }\n+    \n+    private FieldMapping getOrderByField(ClassMapping elem, FieldMapping fm) {\n+        ClassMapping owner = (ClassMapping)_fm.getDefiningMetaData();\n+        if (owner.getDescribedType() == elem.getDescribedType())\n+            return elem.getFieldMapping(_fm.getIndex());\n+        else {\n+            FieldMapping fms[] = elem.getFieldMappings();\n+            for (int i = 0; i < fms.length; i++) {\n+                ValueMapping vm = (ValueMapping)fms[i].getValue();\n+                ClassMapping clm = (ClassMapping)vm.getEmbeddedMetaData();\n+                if (clm != null) {\n+                    if (clm.getDescribedType() == owner.getDescribedType()) {\n+                        return owner.getFieldMapping(_fm.getIndex());\n+                    } else {\n+                        FieldMapping fm1 = getOrderByField(clm, fm);\n+                        if (fm1 != null)\n+                            return fm1;\n+                    }\n+                }\n+            }\n+        }\n+        return null;\n+    }\n }"},{"sha":"60d253963fa7452f0a8474db6bad3a2f13820b83","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/enhance/identity/Library1.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/8a034d671755a672ce2c77af3830c97c1216b5b7/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/enhance/identity/Library1.java","raw_url":"https://github.com/apache/openjpa/raw/8a034d671755a672ce2c77af3830c97c1216b5b7/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/enhance/identity/Library1.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/enhance/identity/Library1.java?ref=8a034d671755a672ce2c77af3830c97c1216b5b7","patch":"@@ -24,8 +24,10 @@\n import javax.persistence.CascadeType;\n import javax.persistence.Column;\n import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n import javax.persistence.Id;\n import javax.persistence.OneToMany;\n+import javax.persistence.OrderBy;\n import javax.persistence.Table;\n \n import org.apache.openjpa.persistence.jdbc.VersionColumn;\n@@ -49,7 +51,8 @@\n     @Column(name=\"LIBRARY_NAME\", nullable = false)\n     private String name;\n     \n-    @OneToMany(cascade = CascadeType.ALL, mappedBy = \"library\")\n+    @OneToMany(fetch=FetchType.EAGER, cascade = CascadeType.ALL, mappedBy = \"library\")\n+    @OrderBy(value = \"bid.library ASC, bid.name ASC\")\n     private Set<Book1> books = new HashSet<Book1>();\n     \n     private String location;"},{"sha":"89ed9e2f4c4cf8a343037e3fb3fe30c45a5a49c2","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/enhance/identity/TestMultipleLevelDerivedIdentity1.java","status":"modified","additions":8,"deletions":1,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/8a034d671755a672ce2c77af3830c97c1216b5b7/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/enhance/identity/TestMultipleLevelDerivedIdentity1.java","raw_url":"https://github.com/apache/openjpa/raw/8a034d671755a672ce2c77af3830c97c1216b5b7/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/enhance/identity/TestMultipleLevelDerivedIdentity1.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/enhance/identity/TestMultipleLevelDerivedIdentity1.java?ref=8a034d671755a672ce2c77af3830c97c1216b5b7","patch":"@@ -200,7 +200,14 @@ public void testDeleteLeafObtainedByFind() {\n \t    assertEquals(NUM_PAGES-1, count(Page1.class));\n \t}\n \n-\t\n+    public void testOrderBy() {\n+        sql.clear();\n+        EntityManager em = emf.createEntityManager();\n+        Library1 lib = em.find(Library1.class, LIBRARY_NAME);\n+        assertNotNull(lib);\n+        assertSQLFragnments(sql, \"ORDER BY t1.LIBRARY_NAME ASC, t1.BOOK_NAME ASC\");\n+    }\n+    \n \t/**\n \t * Create a Library with a Book and three Pages.\n \t */"}]}

