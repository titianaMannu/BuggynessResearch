{"sha":"8a80d753a31e71ce07f24e7069b7ff5e71e30c03","node_id":"MDY6Q29tbWl0MjA2MzY0OjhhODBkNzUzYTMxZTcxY2UwN2YyNGU3MDY5YjdmZjVlNzFlMzBjMDM=","commit":{"author":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2008-06-04T19:49:41Z"},"committer":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2008-06-04T19:49:41Z"},"message":"OPENJPA-622 Informix -lock timieout, cursor not open problem for NonJTA datasource transaction RESOURCE_LOCAL in JEE\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@663358 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"97d8e1f955e1df4b9c5c659a0b5ade698b0be706","url":"https://api.github.com/repos/apache/openjpa/git/trees/97d8e1f955e1df4b9c5c659a0b5ade698b0be706"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/8a80d753a31e71ce07f24e7069b7ff5e71e30c03","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/8a80d753a31e71ce07f24e7069b7ff5e71e30c03","html_url":"https://github.com/apache/openjpa/commit/8a80d753a31e71ce07f24e7069b7ff5e71e30c03","comments_url":"https://api.github.com/repos/apache/openjpa/commits/8a80d753a31e71ce07f24e7069b7ff5e71e30c03/comments","author":null,"committer":null,"parents":[{"sha":"1fda19f8b7f147a70ac79b4ee642c032e2905a5d","url":"https://api.github.com/repos/apache/openjpa/commits/1fda19f8b7f147a70ac79b4ee642c032e2905a5d","html_url":"https://github.com/apache/openjpa/commit/1fda19f8b7f147a70ac79b4ee642c032e2905a5d"}],"stats":{"total":57,"additions":28,"deletions":29},"files":[{"sha":"bb90aedb4c62ca1b6c13781ef375a2e030fc654d","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java","status":"modified","additions":1,"deletions":10,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/8a80d753a31e71ce07f24e7069b7ff5e71e30c03/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java","raw_url":"https://github.com/apache/openjpa/raw/8a80d753a31e71ce07f24e7069b7ff5e71e30c03/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java?ref=8a80d753a31e71ce07f24e7069b7ff5e71e30c03","patch":"@@ -238,15 +238,6 @@ public Connection decorate(Connection conn)\n         return conn;\r\n     }\r\n \r\n-    private boolean isJDBC3(DatabaseMetaData meta) {\r\n-        try {\r\n-            // JDBC3-only method, so it might throw a AbstractMethodError\r\n-            return meta.getJDBCMajorVersion() >= 3;\r\n-        } catch (Throwable t) {\r\n-            return false;\r\n-        }\r\n-    }\r\n-\r\n     public void connectedConfiguration(Connection conn) throws SQLException {\r\n     \tsuper.connectedConfiguration(conn);\r\n \r\n@@ -266,7 +257,7 @@ else if (isDB2ISeriesV5R4OrLater())\n         }\r\n         \r\n     \tif (db2ServerType == 0) {\r\n-    \t    if (isJDBC3(metaData)) {\r\n+    \t    if (isJDBC3) {\r\n     \t        maj = metaData.getDatabaseMajorVersion();\r\n     \t        min = metaData.getDatabaseMinorVersion();\r\n     \t    }\r"},{"sha":"624aedb90172b7a65e128fd010cda9d182ee12d6","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","status":"modified","additions":20,"deletions":18,"changes":38,"blob_url":"https://github.com/apache/openjpa/blob/8a80d753a31e71ce07f24e7069b7ff5e71e30c03/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/8a80d753a31e71ce07f24e7069b7ff5e71e30c03/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java?ref=8a80d753a31e71ce07f24e7069b7ff5e71e30c03","patch":"@@ -327,6 +327,7 @@\n     protected JDBCConfiguration conf = null;\n     protected Log log = null;\n     protected boolean connected = false;\n+    protected boolean isJDBC3 = false;\n     protected final Set reservedWordSet = new HashSet();\n     protected final Set systemSchemaSet = new HashSet();\n     protected final Set systemTableSet = new HashSet();\n@@ -374,27 +375,28 @@ public DBDictionary() {\n     public void connectedConfiguration(Connection conn)\n         throws SQLException {\n         if (!connected) {\n-            DatabaseMetaData metaData = null;            \n+            DatabaseMetaData metaData = null;\n             try {\n-                if (log.isTraceEnabled()) {\n-                    metaData = conn.getMetaData();\n-                    boolean isJDBC3 = false;\n-                    log.trace(DBDictionaryFactory.toString\n-                        (metaData));\n-                    try {\n-                        // JDBC3-only method, so it might throw a \n-                        // AbstractMethodError\n-                        isJDBC3 = metaData.getJDBCMajorVersion() >= 3;\n-                    } catch (Throwable t) {\n-                        // ignore if not JDBC3\n-                    }\n-                    if (isJDBC3)\n-                        log.trace(_loc.get(\"connection-defaults\", new Object[]{\n-                            conn.getAutoCommit(), conn.getHoldability(),\n-                            conn.getTransactionIsolation()}));\n+                metaData = conn.getMetaData();\n+                try {\n+                    // JDBC3-only method, so it might throw a \n+                    // AbstractMethodError\n+                    isJDBC3 = metaData.getJDBCMajorVersion() >= 3;\n+                } catch (Throwable t) {\n+                    // ignore if not JDBC3\n                 }\n             } catch (Exception e) {\n-                log.trace(e.toString(), e);\n+                if (log.isTraceEnabled())\n+                    log.trace(e.toString(), e);\n+            }\n+\n+            if (log.isTraceEnabled()) {                    \n+                log.trace(DBDictionaryFactory.toString(metaData));\n+\n+                if (isJDBC3)\n+                    log.trace(_loc.get(\"connection-defaults\", new Object[]{\n+                        conn.getAutoCommit(), conn.getHoldability(),\n+                        conn.getTransactionIsolation()}));\n             }\n         }\n         connected = true;"},{"sha":"79e9e6eb2f77259267d155223822eb5cfe5b8726","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/InformixDictionary.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/8a80d753a31e71ce07f24e7069b7ff5e71e30c03/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/InformixDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/8a80d753a31e71ce07f24e7069b7ff5e71e30c03/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/InformixDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/InformixDictionary.java?ref=8a80d753a31e71ce07f24e7069b7ff5e71e30c03","patch":"@@ -121,7 +121,6 @@ public InformixDictionary() {\n         }));\n \n         supportsQueryTimeout = false;\n-        supportsMultipleNontransactionalResultSets = false;\n         supportsLockingWithDistinctClause = false;\n         supportsLockingWithMultipleTables = false;\n         supportsLockingWithOrderClause = false;\n@@ -161,6 +160,13 @@ public void connectedConfiguration(Connection conn)\n             else\n                 driverVendor = VENDOR_OTHER;\n         }\n+        if (isJDBC3) {\n+            conn.setHoldability(ResultSet.HOLD_CURSORS_OVER_COMMIT);\n+            if (log.isTraceEnabled())\n+                log.trace(_loc.get(\"connection-defaults\", new Object[]{\n+                    conn.getAutoCommit(), conn.getHoldability(),\n+                    conn.getTransactionIsolation()}));\n+        }\n     }\n \n     public Column[] getColumns(DatabaseMetaData meta, String catalog,"}]}

