{"sha":"8ab85903ff1db66396d13f8f05c1ff8b120827c0","node_id":"MDY6Q29tbWl0MjA2MzY0OjhhYjg1OTAzZmYxZGI2NjM5NmQxM2Y4ZjA1YzFmZjhiMTIwODI3YzA=","commit":{"author":{"name":"Milosz Tylenda","email":"mtylenda@apache.org","date":"2009-06-06T09:06:32Z"},"committer":{"name":"Milosz Tylenda","email":"mtylenda@apache.org","date":"2009-06-06T09:06:32Z"},"message":"OPENJPA-1127: Typos in user manual and log messages\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@782212 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c75fc73a7b02292fd4ce2c2879f2815aca7e2b65","url":"https://api.github.com/repos/apache/openjpa/git/trees/c75fc73a7b02292fd4ce2c2879f2815aca7e2b65"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/8ab85903ff1db66396d13f8f05c1ff8b120827c0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/8ab85903ff1db66396d13f8f05c1ff8b120827c0","html_url":"https://github.com/apache/openjpa/commit/8ab85903ff1db66396d13f8f05c1ff8b120827c0","comments_url":"https://api.github.com/repos/apache/openjpa/commits/8ab85903ff1db66396d13f8f05c1ff8b120827c0/comments","author":null,"committer":null,"parents":[{"sha":"9c15e0b746bacb6883104990cb12a09025b66681","url":"https://api.github.com/repos/apache/openjpa/commits/9c15e0b746bacb6883104990cb12a09025b66681","html_url":"https://github.com/apache/openjpa/commit/9c15e0b746bacb6883104990cb12a09025b66681"}],"stats":{"total":34,"additions":17,"deletions":17},"files":[{"sha":"aff6001ef72480fb1a232c0e3c45ee32ddc0fb6a","filename":"openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/8ab85903ff1db66396d13f8f05c1ff8b120827c0/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/8ab85903ff1db66396d13f8f05c1ff8b120827c0/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties?ref=8ab85903ff1db66396d13f8f05c1ff8b120827c0","patch":"@@ -194,7 +194,7 @@ invalid-orderBy: This is not a valid OrderBy annotation. The property or \\\n     field_name must be specified in the orederBy item of the orderBy list \\\n     for \"{0}\".\n dynamic-agent: OpenJPA dynamically loaded the class enhancer. Any classes \\\n-    that were not enhanced at build time will be enhanced when the are \\\n+    that were not enhanced at build time will be enhanced when they are \\\n     loaded by the JVM.\n vlem-creation-warn: Could not create the optional validation provider. \\\n     Reason returned: \"{0}\""},{"sha":"a5e8c288b3f7daa81180cc7fccf58cfaadf6d22e","filename":"openjpa-project/src/doc/manual/jpa_overview_query.xml","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/8ab85903ff1db66396d13f8f05c1ff8b120827c0/openjpa-project/src/doc/manual/jpa_overview_query.xml","raw_url":"https://github.com/apache/openjpa/raw/8ab85903ff1db66396d13f8f05c1ff8b120827c0/openjpa-project/src/doc/manual/jpa_overview_query.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_query.xml?ref=8ab85903ff1db66396d13f8f05c1ff8b120827c0","patch":"@@ -646,7 +646,7 @@ This code substitutes <literal>JDJ</literal> for the <literal> :titleParam\n             </title>\n             <para>\n JPQL provides support for hints which are name/value pairs used to control locking and optimization keywords in sql. \n-The following example shows how to use the JPA hint api to set the <classname>ReadLockMode</classname>  and <classname>ResultCount</classname>  in the OpenJPA fetch plan.  This will result in the sql keywords OPTIMIZE FOR 2 ROWS  and UPDATE to be emitted into the sql provided that a pessimistic LockManager is being used.\n+The following example shows how to use the JPA hint api to set the <classname>ReadLockMode</classname>  and <classname>ResultCount</classname>  in the OpenJPA fetch plan.  This will result in the sql keywords OPTIMIZE FOR 2 ROWS  and FOR UPDATE to be emitted into the sql provided that a pessimistic LockManager is being used.\n             </para>\n             <example id=\"jpa_query_hint1\">\n                 <title>\n@@ -2519,10 +2519,10 @@ of the functional expression is unknown.\n                     </title>\n                     <para>\n <itemizedlist><listitem><para>functions_returning_strings ::=\n-CONCAT(string_primar y, string_primary) | SUBSTRING(string_primar y,\n+CONCAT(string_primary, string_primary) | SUBSTRING(string_primary,\n simple_arithmetic_expression, simple_arithmetic_expression) |\n TRIM([[trim_specification] [trim_character] FROM] string_primary) |\n-LOWER(string_primar y) | UPPER(string_primar y)\n+LOWER(string_primary) | UPPER(string_primary)\n                                 </para>\n                             </listitem>\n                             <listitem>\n@@ -2532,8 +2532,8 @@ trim_specification ::= LEADING | TRAILING | BOTH\n                             </listitem>\n                             <listitem>\n                                 <para>\n-functions_returning_numerics ::= LENGTH(string_primar y) | LOCATE(string_primar\n-y, string_primar y[, simple_arithmetic_expression])\n+functions_returning_numerics ::= LENGTH(string_primary) |\n+LOCATE(string_primary, string_primary[, simple_arithmetic_expression])\n                                 </para>\n                             </listitem>\n                         </itemizedlist>"},{"sha":"1720e953d4f3d350372e2f5ee643031dfaca66ed","filename":"openjpa-project/src/doc/manual/ref_guide_caching.xml","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/8ab85903ff1db66396d13f8f05c1ff8b120827c0/openjpa-project/src/doc/manual/ref_guide_caching.xml","raw_url":"https://github.com/apache/openjpa/raw/8ab85903ff1db66396d13f8f05c1ff8b120827c0/openjpa-project/src/doc/manual/ref_guide_caching.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_caching.xml?ref=8ab85903ff1db66396d13f8f05c1ff8b120827c0","patch":"@@ -117,7 +117,7 @@ is stored in the cache when objects are committed and when persistent objects\n are loaded from the datastore.\n         </para>\n         <para>\n-OpenJPA's data cache can in both single-JVM and multi-JVM environments.\n+OpenJPA's data cache can operate in both single-JVM and multi-JVM environments.\n Multi-JVM caching is achieved through the use of the distributed event\n notification framework described in <xref linkend=\"ref_guide_event\"/>, or\n through custom integrations with a third-party distributed cache.\n@@ -322,7 +322,7 @@ Cache cache = em.getCache();\n     <example id=\"ref_guide_cache_use_jpa_standard\">\n         <title>Using the javax.persistence.Cache interface</title>\n         <programlisting>\n-// Check whether the cache contains a entity with a provided ID\n+// Check whether the cache contains an entity with a provided ID\n Cache cache = em.getCache();\n boolean contains = cache.contains(MyEntity.class, entityID);\n \n@@ -1048,7 +1048,7 @@ Cache.\n <para>\n Prepared SQL Cache is configured by the <link linkend=\"openjpa.jdbc.QuerySQLCache\">\n <literal>openjpa.jdbc.QuerySQLCache</literal></link> configuration property. This\n-property accepts a a plugin string (see <xref linkend=\"ref_guide_conf_plugins\"/>)\n+property accepts a plugin string (see <xref linkend=\"ref_guide_conf_plugins\"/>)\n with value of <literal>true</literal> or <literal>false</literal>. The default\n is <literal>true</literal>. \n </para>\n@@ -1082,7 +1082,7 @@ Following salient points to be noted regarding usage of Prepared Query Cache.\n \tsame as the first, though both will result in same SQL statement. \n \t</para>\n \t<para>\n-\tWhile in <xref linkend=\"jpa_caching_parametrize_jpql\"></xref>, the the \n+\tWhile in <xref linkend=\"jpa_caching_parametrize_jpql\"></xref>, the\n \tselection value for the <code>p.name</code> field is parameterized. \n \tPrepared Query Cache will recognize the second execution as\n \tsame as the first, and will execute the cached SQL statement directly. \n@@ -1137,7 +1137,7 @@ for a JPQL query.\n <itemizedlist>\n \t<listitem>A user application can disable Prepared SQL Cache\n \tfor entire lifetime of a persistence context by invoking the following\n-\tmethod on OpenJPA's EntityMananger interface:\n+\tmethod on OpenJPA's EntityManager interface:\n \t<programlisting>\n \t<methodname>OpenJPAEntityManager.setQuerySQLCache(boolean)</methodname> \n \t</programlisting>"},{"sha":"9931ead836973050fa285962ab2e89f60f62b780","filename":"openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/8ab85903ff1db66396d13f8f05c1ff8b120827c0/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","raw_url":"https://github.com/apache/openjpa/raw/8ab85903ff1db66396d13f8f05c1ff8b120827c0/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml?ref=8ab85903ff1db66396d13f8f05c1ff8b120827c0","patch":"@@ -2098,7 +2098,7 @@ a warning.\n                     </indexterm>\n <literal>StoreLargeNumbersAsStrings</literal>: When true, the dictionary \n prefers to store Java fields of \n-type <classname>BigInteger</classname> and <classname>BigDecimal</classname>) \n+type <classname>BigInteger</classname> and <classname>BigDecimal</classname>\n as string values in the database.  Likewise, the dictionary will instruct\n the mapping tool to map these Java types to character columns.   \n Because some databases have limitations on the number of digits that can "},{"sha":"f8bce3b1bee6292ad339a098e49244dcea3c6313","filename":"openjpa-project/src/doc/manual/ref_guide_pc.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/8ab85903ff1db66396d13f8f05c1ff8b120827c0/openjpa-project/src/doc/manual/ref_guide_pc.xml","raw_url":"https://github.com/apache/openjpa/raw/8ab85903ff1db66396d13f8f05c1ff8b120827c0/openjpa-project/src/doc/manual/ref_guide_pc.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_pc.xml?ref=8ab85903ff1db66396d13f8f05c1ff8b120827c0","patch":"@@ -421,7 +421,7 @@ java -javaagent:/home/dev/openjpa/lib/openjpa.jar=addDefaultConstructor=false co\n \t\tWhen then dynamic enhancer is loaded, the following \n \t\tinformational message is logged:\n <programlisting>\n-[java] jpa.enhancement  INFO   [main] openjpa.Runtime - OpenJPA dynamically loaded the class enhancer. Any classes that were not enhanced at build time will be enhanced as they are loaded by the JVM.\n+[java] jpa.enhancement  INFO   [main] openjpa.Runtime - OpenJPA dynamically loaded the class enhancer. Any classes that were not enhanced at build time will be enhanced when they are loaded by the JVM.\n </programlisting>\n \t</para>\n \t<para>\n@@ -730,7 +730,7 @@ public class Order {\n \n \t/**\n \t * LineItem uses a compound primary key. Part of the compound key \n-\t * LineItemId is relation or refernce to Order instance.\n+\t * LineItemId is relation or reference to Order instance.\n \t**/   \n @Entity\n @IdClass(LineItemId.class)"},{"sha":"72bfa8b24102e5556968c1f53a10c5b10a6ad8a1","filename":"openjpa-project/src/doc/manual/supported_databases.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/8ab85903ff1db66396d13f8f05c1ff8b120827c0/openjpa-project/src/doc/manual/supported_databases.xml","raw_url":"https://github.com/apache/openjpa/raw/8ab85903ff1db66396d13f8f05c1ff8b120827c0/openjpa-project/src/doc/manual/supported_databases.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/supported_databases.xml?ref=8ab85903ff1db66396d13f8f05c1ff8b120827c0","patch":"@@ -365,8 +365,8 @@ datastore transactions cannot use the pessimistic lock manager.\n                 </listitem>\n                 <listitem>\n                     <para>\n-Interbase does not support the <literal>LOWER</literal>, <literal>SUBSTRING\n-</literal>, or <literal>INSTR</literal> SQL functions>\n+Interbase does not support the <literal>LOWER</literal>,\n+<literal>SUBSTRING</literal>, or <literal>INSTR</literal> SQL functions.\n                     </para>\n                 </listitem>\n             </itemizedlist>\n@@ -823,7 +823,7 @@ higher) of the MySQL driver is required in order to get around this bug.\n                     <para>\n When using large result sets with MySQL there are a number of documented limitations.\n Please read the section titled \"ResultSet\" in the \"MySQL JDBC API Implementation Notes\".\n-The net of these limitations is that you will have to read all of the rows of a\n+The net effect of these limitations is that you will have to read all of the rows of a\n result set (or close the connection) before you can issue any other queries on\n the connection, or an exception will be thrown. Setting openjpa.FetchBatchSize \n to any value greater than zero will enable streaming result sets. "}]}

