{"sha":"8adfc84d9cfeb01a217d726a20b55df41a487448","node_id":"MDY6Q29tbWl0MjA2MzY0OjhhZGZjODRkOWNmZWIwMWEyMTdkNzI2YTIwYjU1ZGY0MWE0ODc0NDg=","commit":{"author":{"name":"Marc Prud'hommeaux","email":"mprudhom@apache.org","date":"2006-08-25T20:53:28Z"},"committer":{"name":"Marc Prud'hommeaux","email":"mprudhom@apache.org","date":"2006-08-25T20:53:28Z"},"message":"Fixed assumption by test case that the default locale would not be GERMANY, which was special-cased in the test.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@436941 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"14e40d310c399fce2e1a658a7495d0d000f8c8aa","url":"https://api.github.com/repos/apache/openjpa/git/trees/14e40d310c399fce2e1a658a7495d0d000f8c8aa"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/8adfc84d9cfeb01a217d726a20b55df41a487448","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/8adfc84d9cfeb01a217d726a20b55df41a487448","html_url":"https://github.com/apache/openjpa/commit/8adfc84d9cfeb01a217d726a20b55df41a487448","comments_url":"https://api.github.com/repos/apache/openjpa/commits/8adfc84d9cfeb01a217d726a20b55df41a487448/comments","author":null,"committer":null,"parents":[{"sha":"caffb7740578354566d57ff172ffdd15029c2be0","url":"https://api.github.com/repos/apache/openjpa/commits/caffb7740578354566d57ff172ffdd15029c2be0","html_url":"https://github.com/apache/openjpa/commit/caffb7740578354566d57ff172ffdd15029c2be0"}],"stats":{"total":22,"additions":14,"deletions":8},"files":[{"sha":"bf5d7f0b80f46736117de13f80c45d5c05ae1f3b","filename":"openjpa-lib/src/test/java/org/apache/openjpa/lib/util/TestLocalizer.java","status":"modified","additions":14,"deletions":8,"changes":22,"blob_url":"https://github.com/apache/openjpa/blob/8adfc84d9cfeb01a217d726a20b55df41a487448/openjpa-lib/src/test/java/org/apache/openjpa/lib/util/TestLocalizer.java","raw_url":"https://github.com/apache/openjpa/raw/8adfc84d9cfeb01a217d726a20b55df41a487448/openjpa-lib/src/test/java/org/apache/openjpa/lib/util/TestLocalizer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/test/java/org/apache/openjpa/lib/util/TestLocalizer.java?ref=8adfc84d9cfeb01a217d726a20b55df41a487448","patch":"@@ -1,10 +1,10 @@\n /*\n  * Copyright 2006 The Apache Software Foundation.\n- *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *  http://www.apache.org/licenses/LICENSE-2.0\n- *  Unless required by applicable law or agreed to in writing, software\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n@@ -37,14 +37,16 @@ public TestLocalizer(String test) {\n     }\n \n     public void setUp() {\n-        _locals = Localizer.forPackage(LocalizerTestHelper.class);\n+        _locals = Localizer.forPackage(LocalizerTestHelper.class,\n+            Locale.GERMANY);\n     }\n \n     /**\n      * Test getting a string for a class.\n      */\n     public void testForClass() {\n-        assertEquals(\"value1\", _locals.get(\"test.local1\"));\n+        assertEquals(Locale.getDefault() == Locale.GERMANY\n+            ? \"value1_de\" : \"value1\", _locals.get(\"test.local1\"));\n     }\n \n     /**\n@@ -62,7 +64,8 @@ public void testForLocale() {\n     public void testFallbackLocale() {\n         Localizer locl = Localizer.forPackage(LocalizerTestHelper.class,\n             Locale.FRANCE);\n-        assertEquals(\"value1\", locl.get(\"test.local1\"));\n+        assertEquals(Locale.getDefault() == Locale.GERMANY\n+            ? \"value1_de\" : \"value1\", locl.get(\"test.local1\"));\n     }\n \n     /**\n@@ -78,11 +81,14 @@ public void testTopLevel() {\n      * Test that the message formatting works correctly.\n      */\n     public void testMessageFormat() {\n-        assertEquals(\"value2 x sep y\", _locals.get(\"test.local2\",\n+        String suffix = Locale.getDefault() == Locale.GERMANY ? \"_de\" : \"\";\n+\n+        assertEquals(\"value2\" + suffix + \" x sep y\", _locals.get(\"test.local2\",\n             new String[]{ \"x\", \"y\" }));\n \n         // test that it treates single objects as single-element arrays\n-        assertEquals(\"value2 x sep {1}\", _locals.get(\"test.local2\", \"x\"));\n+        assertEquals(\"value2\" + suffix + \" x sep {1}\",\n+            _locals.get(\"test.local2\", \"x\"));\n     }\n \n     /**"}]}

