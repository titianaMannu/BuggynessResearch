{"sha":"8ba0483bf7273d3e26d88a4ac39762861afc0869","node_id":"MDY6Q29tbWl0MjA2MzY0OjhiYTA0ODNiZjcyNzNkM2UyNmQ4OGE0YWMzOTc2Mjg2MWFmYzA4Njk=","commit":{"author":{"name":"David J. Wisneski","email":"wisneskid@apache.org","date":"2007-08-10T00:24:19Z"},"committer":{"name":"David J. Wisneski","email":"wisneskid@apache.org","date":"2007-08-10T00:24:19Z"},"message":"OPENJPA-168 Query Hints documentation added to jpa_overview_query.xml\nHelp Catalina committing the patch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@564439 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"6ee950e605cfdafeea66bd1fdfa8f769eab0ee2f","url":"https://api.github.com/repos/apache/openjpa/git/trees/6ee950e605cfdafeea66bd1fdfa8f769eab0ee2f"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/8ba0483bf7273d3e26d88a4ac39762861afc0869","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/8ba0483bf7273d3e26d88a4ac39762861afc0869","html_url":"https://github.com/apache/openjpa/commit/8ba0483bf7273d3e26d88a4ac39762861afc0869","comments_url":"https://api.github.com/repos/apache/openjpa/commits/8ba0483bf7273d3e26d88a4ac39762861afc0869/comments","author":null,"committer":null,"parents":[{"sha":"5c9642d5f47c319d2279382c60141ebcb65cd3b0","url":"https://api.github.com/repos/apache/openjpa/commits/5c9642d5f47c319d2279382c60141ebcb65cd3b0","html_url":"https://github.com/apache/openjpa/commit/5c9642d5f47c319d2279382c60141ebcb65cd3b0"}],"stats":{"total":153,"additions":153,"deletions":0},"files":[{"sha":"12b007bad252c5d98410c21d70f4ab18efc71d4a","filename":"openjpa-project/src/doc/manual/jpa_overview_query.xml","status":"modified","additions":153,"deletions":0,"changes":153,"blob_url":"https://github.com/apache/openjpa/blob/8ba0483bf7273d3e26d88a4ac39762861afc0869/openjpa-project/src/doc/manual/jpa_overview_query.xml","raw_url":"https://github.com/apache/openjpa/raw/8ba0483bf7273d3e26d88a4ac39762861afc0869/openjpa-project/src/doc/manual/jpa_overview_query.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_query.xml?ref=8ba0483bf7273d3e26d88a4ac39762861afc0869","patch":"@@ -640,6 +640,159 @@ This code substitutes <literal>JDJ</literal> for the <literal> :titleParam\n </literal> parameter, then executes the query with those values.\n             </para>\n         </section>\n+        <section id=\"jpa_overview_query_hints\">\n+            <title>\n+                Query Hints\n+            </title>\n+            <para>\n+JPQL provides support for hints which are name/value pairs used to control locking and optimization keywords in sql. \n+The following example shows how to use the JPA hint api to set the <classname>ReadLockMode</classname>  and <classname>ResultCount</classname>  in the OpenJPA fetch plan.  This will result in the sql keywords OPTIMIZE FOR 2 ROWS  and UPDATE to be emitted into the sql provided that a pessimistic LockManager is being used.\n+            </para>\n+            <example id=\"jpa_query_hint1\">\n+                <title>\n+                    Query Hints  \n+                </title>\n+<programlisting>\n+...\n+Query q = em.createQuery(\"select m from Magazine m where ... \");\n+q.setHint(\"openjpa.hint.OptimizeResultCount\", new Integer(2));\n+q.setHint(\"openjpa.FetchPlan.ReadLockMode\",\"WRITE\");\n+List r = q.getResultList();\n+...\n+</programlisting>\n+            </example>\n+            <para>\n+Invalid hints or hints which can not be processed by a particular database are ignored.  Otherwise, invalid hints will result in an ArgumentException being thrown. \n+            </para>\n+            <section id=\"jpa_hints_locking\">\n+                <title>\n+                    Locking Hints\n+                </title>\n+                <para>\n+To avoid deadlock and optimistic update exceptions among multiple updaters, use a pessimistic LockManager, specified in the persistence unit definition, and use a hint name of &quot;openjpa.FetchPlan.ReadLockMode&quot; on queries for entities that must be locked for serialization.   The value of <classname>ReadLockMode</classname> can be either &quot;READ&quot; or &quot;WRITE&quot;.  This results in FOR UPDATE or USE AND KEEP UPDATE LOCKS in sql.\n+                </para>\n+                <para>\n+Using a <classname>ReadLockMode</classname> hint with JPA optimistic locking ( i.e. specifying LockManager = &quot;version&quot;) will result in the entity version field either being reread at end of transaction in the case of a value of &quot;READ&quot; or the version field updated at end of transaction in the case of  &quot;WRITE&quot;.   You must define a version field in the entity mapping when using a version LockManager and using ReadLockMode.   \n+                </para>\n+                <table>\n+                    <title>\n+                        Interaction of ReadLockMode hint and LockManager\n+                    </title>\n+                    <tgroup cols=\"3\" align=\"left\" colsep=\"1\" rowsep=\"1\">\n+                    <colspec colname=\"interaction\"/> \n+                    <colspec colname=\"pessimistic\"/> \n+                    <colspec colname=\"version\"/> \n+                    <thead>\n+                        <row>\n+                            <entry colname=\"read-lock\">\n+                                ReadLockMode\n+                            </entry>\n+                            <entry colname=\"pessimistic\">\n+                                LockManager=pessimistic\n+                            </entry>\n+                            <entry colname=\"version\">\n+                                LockManager=version\n+                            </entry>\n+                        </row>\n+                    </thead>\n+                     <tbody>\n+                         <row>\n+                             <entry colname=\"interaction\">\n+                                 READ\n+                             </entry>\n+                             <entry colname=\"pessimistic\">\n+                                 sql with UPDATE\n+                             </entry>\n+                             <entry colname=\"version\">sql without update;\n+                             <para>\n+reread version field at the end of transaction and check for no change.\n+                             </para>\n+                             </entry>\n+                         </row>\n+                         <row>\n+                             <entry colname=\"interaction\">\n+                                 WRITE\n+                             </entry>\n+                             <entry colname=\"pessimistic\">\n+                                 sql with UPDATE\n+                             </entry>\n+                             <entry colname=\"version\">\n+                                 sql without update; \n+                             <para>\n+force update version field at the end of transaction\n+                             </para>\n+                             </entry>\n+                         </row>\n+                         <row>\n+                             <entry colname=\"interaction\">\n+                                 not specified\n+                             </entry>\n+                             <entry colname=\"pessimistic\">\n+                                 sql without update\n+                             </entry>\n+                             <entry colname=\"version\">\n+                                 sql without update\n+                             </entry>\n+                         </row>\n+                    </tbody>\n+                    </tgroup>\n+                </table>\n+            </section>\n+            <section id=\"jpa_hints_resultset\">\n+                <title>\n+                    Result Set Size Hint\n+                </title>\n+                <para>\n+To specify a result set size hint to those databases that support it, specify a hint name of &quot;openjpa.hint.OptimizeResultCount&quot; with an integer value greater than zero.  This causes the sql keyword OPTIMIZE FOR to be generated.\n+                </para>\n+            </section>\n+            <section id=\"jpa_hints_isolation\">\n+                <title>\n+                    Isolation Level Hint\n+                </title>\n+                <para>\n+To specify an isolation level, specify a hint name of &quot;openjpa.FetchPlan.Isolation&quot;.  The value will be used to specify isolation level using the sql WITH &lt;isolation&gt; clause for those databases that support it.  This hint only works in conjunction with the ReadLockMode hint.\n+                </para>\n+            </section>\n+            <section id=\"jpa_hints_fetchplan\">\n+                <title>\n+                    Other Fetchplan Hints\n+                </title>\n+                <para>\n+Any property of  an OpenJPA FetchPlan can be changed using a hint by using a name of the form &quot;openjpa.FetchPlan.&quot;&lt;property name&gt;.Valid property names include :\n+<classname>MaxFetchDepth</classname>, <classname>FetchBatchSize</classname>, <classname>LockTimeOut</classname>, <classname>EagerFetchMode</classname>, <classname>SubclassFetchMode</classname> and <classname>Isolation</classname>.\n+                </para>\n+            </section>\n+            <section>\n+                <title>\n+                    Oracle Query Hints\n+                </title>\n+                <para>\n+The hint name &quot;openjpa.hint.OracleSelectHint&quot; can be used to specify a string value of an Oracle query hint that will inserted into sql for an Oracle database.See <xref linkend=\"dbsupport_oracle_query_hints\"/>    for an example.  \n+                </para>\n+            </section>\n+            <section id=\"jpa_hints_named\">\n+                <title>\n+                    Named Query Hints\n+                </title>\n+                <para>\n+Hints can also be included as part of a NamedQuery definition.\n+                </para>\n+                <example id=\"jpa_query_hint2\">\n+                <title>\n+                    Named Query using Hints\n+                 </title>\n+<programlisting>\n+...\n+@NamedQuery(name=\" magsOverPrice\",\n+query=\"SELECT x FROM Magazine x WHERE x.price > ?1\",\n+hints={ @QueryHint  (name=\"openjpa.hint.OptimizeResultCount\", value=\"2\"),\n+        @QueryHint (name=\"openjpa.FetchPlan.ReadLockMode\",value=\"WRITE\")} )\n+...\n+</programlisting>\n+                </example>\n+            </section>\n+        </section>\n         <section id=\"jpa_overview_query_ordering\">\n             <title>\n                 Ordering"}]}

