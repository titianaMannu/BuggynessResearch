{"sha":"8c68768917b64b0f687095f6f29bf1f86165536d","node_id":"MDY6Q29tbWl0MjA2MzY0OjhjNjg3Njg5MTdiNjRiMGY2ODcwOTVmNmYyOWJmMWY4NjE2NTUzNmQ=","commit":{"author":{"name":"Milosz Tylenda","email":"mtylenda@apache.org","date":"2011-04-09T19:02:33Z"},"committer":{"name":"Milosz Tylenda","email":"mtylenda@apache.org","date":"2011-04-09T19:02:33Z"},"message":"OPENJPA-1932: Documentation update: remove Java 5 references, improve formatting and wording, point out that getSupportedProperties is an OpenJPA extension (no longer in the JPA 2.0 spec), remove link to criteria API draft (criteria API is in the final 2.0 spec).\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1090649 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"4ec537bce09e888c5d8e2964efcebe255fbd34d8","url":"https://api.github.com/repos/apache/openjpa/git/trees/4ec537bce09e888c5d8e2964efcebe255fbd34d8"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/8c68768917b64b0f687095f6f29bf1f86165536d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/8c68768917b64b0f687095f6f29bf1f86165536d","html_url":"https://github.com/apache/openjpa/commit/8c68768917b64b0f687095f6f29bf1f86165536d","comments_url":"https://api.github.com/repos/apache/openjpa/commits/8c68768917b64b0f687095f6f29bf1f86165536d/comments","author":null,"committer":null,"parents":[{"sha":"e35178f645722793c9a25ea7b970a084b0dc8356","url":"https://api.github.com/repos/apache/openjpa/commits/e35178f645722793c9a25ea7b970a084b0dc8356","html_url":"https://github.com/apache/openjpa/commit/e35178f645722793c9a25ea7b970a084b0dc8356"}],"stats":{"total":92,"additions":48,"deletions":44},"files":[{"sha":"a3d5f548538d47e88aa4ba3dcc3ab5bd428e2817","filename":"openjpa-project/src/doc/manual/jpa_overview_criteria.xml","status":"modified","additions":12,"deletions":18,"changes":30,"blob_url":"https://github.com/apache/openjpa/blob/8c68768917b64b0f687095f6f29bf1f86165536d/openjpa-project/src/doc/manual/jpa_overview_criteria.xml","raw_url":"https://github.com/apache/openjpa/raw/8c68768917b64b0f687095f6f29bf1f86165536d/openjpa-project/src/doc/manual/jpa_overview_criteria.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_criteria.xml?ref=8c68768917b64b0f687095f6f29bf1f86165536d","patch":"@@ -38,7 +38,7 @@\n         </see>\n     </indexterm>\n     <para>\n-    JPA 2.0 Specification introduces a new API to define queries dynamically\n+    JPA 2.0 specification introduces a new API to define queries dynamically\n     via construction of an object-based \n     <classname>javax.persistence.CriteriaQuery</classname> instance, rather\n     than string-based approach used in JPQL (Java Persistence Query Language).\n@@ -116,7 +116,7 @@ Root&lt;Order&gt; order = customer.join(customer.get(Customer_.orders));\n     <section>\n     <title>Executing a CriteriaQuery</title>\n     <para>\n-    A CriteriaQuery is executed in a similar fashion of a string-based JPQL\n+    A CriteriaQuery is executed in a similar fashion to a string-based JPQL\n     query via the EntityManager and Query interfaces.\n     <programlisting>\n EntityManager em = ...\n@@ -130,12 +130,6 @@ List result = query.getResultList();\n     </para>\n     \n     <para>\n-    The JPA 2.0 Specification on Criteria API can be found at \n-    <ulink url=\"http://jcp.org/aboutJava/communityprocess/pr/jsr317/index.html\">\n-    public draft</ulink>.\n-    </para>\n-    <para>\n-    \n     <ulink url=\"http://www.ibm.com/developerworks/java/library/j-typesafejpa/\">A developerworks article</ulink>\n     explains details and further usage of Criteria API and its OpenJPA extensions.  \n     </para>\n@@ -145,18 +139,18 @@ List result = query.getResultList();\n     <title>Extension to Criteria API</title>\n     <para>\n     Criteria API has provided an alternative means to string-based JPQL to \n-    execute a query. However, JPA 2.0 Specification has not explicitly specified \n+    execute a query. However, JPA 2.0 specification has not explicitly specified \n     any equivalence between a dynamically constructed CriteriaQuery and\n     a JPQL string. OpenJPA provides a mechanism to convert a CriteriaQuery to\n     an equivalent JPQL query string via the extended OpenJPACriteriaQuery API.\n     <programlisting>\n-    \tpublic interface OpenJPACriteriaQuery extends CriteriaQuery {\n-\t\t/**\n-\t \t * Gets equivalent JPQL String for the given CriteriaQuery.\n- \t\t*/\n-\t\tpublic String toCQL();\n-\t}\n-\t</programlisting>\n+public interface OpenJPACriteriaQuery extends CriteriaQuery {\n+    /**\n+     * Gets equivalent JPQL String for the given CriteriaQuery.\n+     */\n+    public String toCQL();\n+}\n+    </programlisting>\n     \n     </para>\n     </section>\n@@ -197,15 +191,15 @@ The Annotation Processor recognizes the following options specified in the comma\n                -Aopenjpa.naming=class name : fully-qualified name of a class implementing \n                <code>org.apache.openjpa.meta.MetaDataFactory</code> that determines\n the name of a meta-class given the name of the original persistent Java entity class. Defaults to\n-<code>org.apache.openjpa.persistence.PersistenceMetaDataFactory</code> which appends a underscore character\n+<code>org.apache.openjpa.persistence.PersistenceMetaDataFactory</code> which appends an underscore character\n (<code>_</code>) to the original Java class name. \n              </para>\n         </listitem>\n         <listitem>\n \t\t\t<para>\n                -Aopenjpa.header=&lt;url&gt; : A url whose content will appear as comment header to the generated file(s). \n                Recognizes special value <code>ASL</code> for Apache Source License header as comment. \n-               By default, adds a OpenJPA proprietary text as comment block.\n+               By default, adds an OpenJPA proprietary text as comment block.\n              </para>\n         </listitem>\n     </itemizedlist>"},{"sha":"beaf26e151d8e59a10b3bcb1c0cf8d077a8595ff","filename":"openjpa-project/src/doc/manual/jpa_overview_emfactory.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/8c68768917b64b0f687095f6f29bf1f86165536d/openjpa-project/src/doc/manual/jpa_overview_emfactory.xml","raw_url":"https://github.com/apache/openjpa/raw/8c68768917b64b0f687095f6f29bf1f86165536d/openjpa-project/src/doc/manual/jpa_overview_emfactory.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_emfactory.xml?ref=8c68768917b64b0f687095f6f29bf1f86165536d","patch":"@@ -446,7 +446,7 @@ public PersistenceUnitUtil getPersistenceUnitUtil();\n </programlisting>\n         <para>\n The <classname>EntityManagerFactory</classname> method \n-<methodname>getPersistenceUnitUtil</methodname> to provide access to a \n+<methodname>getPersistenceUnitUtil</methodname> provides access to a \n <classname>PersistenceUnitUtil</classname> utility. <classname>PersistenceUnitUtil</classname>\n can be used to obtain the identity of a managed object and determine the load\n state of the entity or one of its attributes.  If the object is not\n@@ -461,7 +461,7 @@ if (puUtil.getIdentifier(deptEntity) == null) {\n     throw new Exception(\"Identity is not valid.\");\n }\n if (!puUtil.isLoaded(deptEntity, \"employees\")) {\n-    throw new Exception(\"Employees not loaded.\")\n+    throw new Exception(\"Employees not loaded.\");\n }\n </programlisting>\n         </para>"},{"sha":"54fdce7a6dcd607c03e29039abbf8182656deffd","filename":"openjpa-project/src/doc/manual/jpa_overview_meta.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/8c68768917b64b0f687095f6f29bf1f86165536d/openjpa-project/src/doc/manual/jpa_overview_meta.xml","raw_url":"https://github.com/apache/openjpa/raw/8c68768917b64b0f687095f6f29bf1f86165536d/openjpa-project/src/doc/manual/jpa_overview_meta.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_meta.xml?ref=8c68768917b64b0f687095f6f29bf1f86165536d","patch":"@@ -65,7 +65,7 @@ simply reflecting on the persistent class.\n             annotations\n         </primary>\n     </indexterm>\n-Persistence metadata is specified using either the Java 5 annotations defined in\n+Persistence metadata is specified using either the Java annotations defined in\n the <literal>javax.persistence</literal> package, XML mapping files, or a\n mixture of both. In the latter case, XML declarations override conflicting\n annotations. If you choose to use XML metadata, the XML files must be available"},{"sha":"3457845ab74d4b63a5ff1f5248abb5be79a38903","filename":"openjpa-project/src/doc/manual/jpa_overview_query.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/8c68768917b64b0f687095f6f29bf1f86165536d/openjpa-project/src/doc/manual/jpa_overview_query.xml","raw_url":"https://github.com/apache/openjpa/raw/8c68768917b64b0f687095f6f29bf1f86165536d/openjpa-project/src/doc/manual/jpa_overview_query.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_query.xml?ref=8c68768917b64b0f687095f6f29bf1f86165536d","patch":"@@ -882,7 +882,7 @@ To specify an isolation level, specify a hint name of &quot;openjpa.FetchPlan.Is\n                     Other Fetchplan Hints\n                 </title>\n                 <para>\n-Any property of  an OpenJPA FetchPlan can be changed using a hint by using a name of the form &quot;openjpa.FetchPlan.&quot;&lt;property name&gt;.Valid property names include :\n+Any property of  an OpenJPA FetchPlan can be changed using a hint by using a name of the form &quot;openjpa.FetchPlan.&quot;&lt;property name&gt;. Valid property names include:\n <classname>MaxFetchDepth</classname>, <classname>FetchBatchSize</classname>, <classname>LockTimeOut</classname>, <classname>EagerFetchMode</classname>, <classname>SubclassFetchMode</classname> and <classname>Isolation</classname>.\n                 </para>\n             </section>"},{"sha":"8054045ffd690c2521e85941c0abbbd831cade49","filename":"openjpa-project/src/doc/manual/migration_considerations.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/8c68768917b64b0f687095f6f29bf1f86165536d/openjpa-project/src/doc/manual/migration_considerations.xml","raw_url":"https://github.com/apache/openjpa/raw/8c68768917b64b0f687095f6f29bf1f86165536d/openjpa-project/src/doc/manual/migration_considerations.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/migration_considerations.xml?ref=8c68768917b64b0f687095f6f29bf1f86165536d","patch":"@@ -50,8 +50,8 @@\n                     The OpenJPAEntityManagerFactory interface getProperties()\n                     method was changed to return a Map instead of a\n                     Properties object. This change was made in order to\n-                    support the getProperties() method defined in the 2.0\n-                    JPA specification.\n+                    support the getProperties() method defined in the\n+                    JPA 2.0 specification.\n                 </para>\n             </section>\n             <section id=\"migration_detach_behavior\">"},{"sha":"9de683ce399fb13dda4fc5651b6cec04321ee386","filename":"openjpa-project/src/doc/manual/openjpa_legal.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/8c68768917b64b0f687095f6f29bf1f86165536d/openjpa-project/src/doc/manual/openjpa_legal.xml","raw_url":"https://github.com/apache/openjpa/raw/8c68768917b64b0f687095f6f29bf1f86165536d/openjpa-project/src/doc/manual/openjpa_legal.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/openjpa_legal.xml?ref=8c68768917b64b0f687095f6f29bf1f86165536d","patch":"@@ -77,7 +77,7 @@ The openjpa-all aggregate JAR includes software developed by the:\n     Apache Geronimo project (JMS 1.1, JTA 1.1 and JPA 2.0 spec APIs)\n                 </para></listitem>\n                 <listitem><para>\n-    JCP JSR-317 JPA 2.0 Schemas\n+    JCP JSR-317 JPA 2.0 schemas\n                 </para></listitem>\n                 <listitem><para>\n     SERP project"},{"sha":"d579d4c37d340b5ff3002246659346adefc7d81b","filename":"openjpa-project/src/doc/manual/properties_info.xml","status":"modified","additions":17,"deletions":6,"changes":23,"blob_url":"https://github.com/apache/openjpa/blob/8c68768917b64b0f687095f6f29bf1f86165536d/openjpa-project/src/doc/manual/properties_info.xml","raw_url":"https://github.com/apache/openjpa/raw/8c68768917b64b0f687095f6f29bf1f86165536d/openjpa-project/src/doc/manual/properties_info.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/properties_info.xml?ref=8c68768917b64b0f687095f6f29bf1f86165536d","patch":"@@ -19,7 +19,7 @@\n -->\n <para>\n There are two sets of properties that may be specified: those that\n-are specific to openjpa and those that have been defined by the JPA\n+are specific to OpenJPA and those that have been defined by the JPA\n specification. In some cases, two properties may be equivalent, but\n have different keys. For example, <emphasis>openjpa.LockTimeout\n </emphasis> and <emphasis>javax.persistence.lock.timeout</emphasis>\n@@ -28,24 +28,35 @@ are two different keys for the same property.\n <para>\n There are two methods that can be used to retrieve information related to\n properties:\n+<programlisting>\n+public Map&lt;String,Object&gt; getProperties();\n+public Set&lt;String&gt; getSupportedProperties();\n+</programlisting>\n \t<itemizedlist>\n \t\t<listitem>\n \t\t\t<para>\n-\t\t\tgetProperties() - This method provides a list of current \n+\t\t\t<methodname>getProperties</methodname> - Provides a list of current \n \t\t\tproperties. If a property has more than one key, the key\n \t\t\tthat will be returned is the one that was used when the\n \t\t\tproperty was set. If the property was not explicitly\n-\t\t\tset, the key defined by JPA specification will be returned \n+\t\t\tset, the key defined by the JPA specification will be returned \n \t\t\twith the default value.\n \t\t\t</para>\n \t\t</listitem>\n \t\t<listitem>\n \t\t\t<para>\n-\t\t\tgetSupportedProperties() - This method returns a set of\n-\t\t\tproperty keys. See the javadoc in the latest JPA\n-\t\t\tspecification for the definition of the set. If a property\n+\t\t\t<methodname>getSupportedProperties</methodname> - Returns a set of\n+\t\t\tsupported property keys. This includes keys defined by the JPA\n+\t\t\tspecification as well as keys specific to OpenJPA.\n+\t\t\tIf a property\n \t\t\thas more than one key, all possible keys will be returned.\n \t\t\t</para>\n \t\t</listitem>\n \t</itemizedlist>\n </para>\n+<note>\n+\t<para>\n+\t\tThe <methodname>getSupportedProperties</methodname> method is an OpenJPA\n+\t\textension to the JPA specification.\n+\t</para>\n+</note>"},{"sha":"70487f9bba227f6fa59aa39251bf227b1f1056c5","filename":"openjpa-project/src/doc/manual/ref_guide_conf.xml","status":"modified","additions":9,"deletions":9,"changes":18,"blob_url":"https://github.com/apache/openjpa/blob/8c68768917b64b0f687095f6f29bf1f86165536d/openjpa-project/src/doc/manual/ref_guide_conf.xml","raw_url":"https://github.com/apache/openjpa/raw/8c68768917b64b0f687095f6f29bf1f86165536d/openjpa-project/src/doc/manual/ref_guide_conf.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_conf.xml?ref=8c68768917b64b0f687095f6f29bf1f86165536d","patch":"@@ -303,7 +303,7 @@ java org.apache.openjpa.enhance.ApplicationIdTool -cf.spaceBeforeParen true -cf.\n         <para>\n Because OpenJPA is a highly customizable environment, many configuration\n properties relate to the creation and configuration of system plugins. Plugin\n-properties have a syntax very similar to that of Java 5 annotations. They allow\n+properties have a syntax very similar to that of Java annotations. They allow\n you to specify both what class to use for the plugin and how to configure the\n public fields or bean properties of the instantiated plugin instance. The\n easiest way to describe the plugin syntax is by example:\n@@ -396,8 +396,8 @@ default JDBC store.\n         </para>\n         \n         <para>\n-Few of the properties recognized by OpenJPA have been standardized in JPA 2.0 \n-Specification using equivalent names. These properties can be specified either\n+A few of the properties recognized by OpenJPA have been standardized in JPA 2.0 \n+specification using equivalent names. These properties can be specified either\n by the JPA standard key or equivalent OpenJPA key. Specifying the same key once\n as JPA standard key and again as equivalent OpenJPA key in the same configuration, \n however, is not allowed. The following table lists these standard JPA properties \n@@ -4234,7 +4234,7 @@ implementation is\n         <para>\n The default behavior of certain OpenJPA API methods can evolve to align with the behaviors\n defined in JPA specification. To maintain backward compatibility, OpenJPA allows configuration\n-options such that while the default behavior changes to align with current JPA Specification, the\n+options such that while the default behavior changes to align with current JPA specification, the\n previous behaviors can always be emulated. \n \t\t</para>\n \t\t<para>\n@@ -4253,13 +4253,13 @@ JPA 2.0 <literal>detach()</literal> semantics does not require a dirty instance\n before detach.        \n \t\t</para>\n \t\t<para>\n-A user application running with OpenJPA that is compliant to a specific version of JPA of specification,\n-the older behavior can be emulated by configuring OpenJPA Compatibility options.\n+A user application running with OpenJPA that is compliant to a specific version of JPA specification\n+can emulate the older behavior by configuring OpenJPA compatibility options.\n For example, <literal>openjpa.Compatibility=FlushBeforeDetach=false,CopyOnDetach=true</literal>\n-will emulate the older behavior of detach even when running with OpenJPA that are\n-compliant to JPA 2.0 Specification.  The configuration can also be set to a different version of the specification.\n+will emulate the older behavior of detach even when running with OpenJPA that is\n+compliant to JPA 2.0 specification.  The configuration can also be set to a different version of the specification.\n For example, <literal>openjpa.Specification=\"JPA 1.0\"</literal> configuration setting will emulate\n-default OpenJPA behavior as it were for JPA Specification version 1.0. Setting via\n+default OpenJPA behavior as it were for JPA specification version 1.0. Setting\n <literal>openjpa.Specification</literal> is a shorthand for more fine-grained control available via\n <literal>openjpa.Compatibility</literal>.    \n   "},{"sha":"9eef1dcee924ffffca6a94462b60de08c33e1e1c","filename":"openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/8c68768917b64b0f687095f6f29bf1f86165536d/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","raw_url":"https://github.com/apache/openjpa/raw/8c68768917b64b0f687095f6f29bf1f86165536d/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml?ref=8c68768917b64b0f687095f6f29bf1f86165536d","patch":"@@ -3909,7 +3909,7 @@ the operation will fail.\n         \t\tDelimited Identifiers Support\n         \t</title>\n         \t<para>\n-OpenJPA provides support for delimited identifiers as defined in the 2.0 JPA specification. \n+OpenJPA provides support for delimited identifiers as defined in the JPA 2.0 specification.\n Identifiers can either be automatically delimited or individually manually\n delimited. To have OpenJPA automatically delimit identifiers, add the\n <literal>&lt;delimited-identifiers/&gt;</literal> tag"},{"sha":"9564b1d714b27c4322f0c9a7ab74fb7482ad9834","filename":"openjpa-project/src/doc/manual/ref_guide_logging.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/8c68768917b64b0f687095f6f29bf1f86165536d/openjpa-project/src/doc/manual/ref_guide_logging.xml","raw_url":"https://github.com/apache/openjpa/raw/8c68768917b64b0f687095f6f29bf1f86165536d/openjpa-project/src/doc/manual/ref_guide_logging.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_logging.xml?ref=8c68768917b64b0f687095f6f29bf1f86165536d","patch":"@@ -278,7 +278,7 @@ For example, when loading an application that uses OpenJPA, a message like the\n following will be sent to the <literal>openjpa.Runtime</literal> channel:\n         </para>\n <programlisting>\n-2107  INFO   [main] openjpa.Runtime - Starting OpenJPA 0.9.7\n+2107  INFO   [main] openjpa.Runtime - Starting OpenJPA 2.2.0\n </programlisting>\n         <para>\n The default logging system accepts the following parameters:"},{"sha":"ba4f3c0eed721567dd5afefca5602f0a7631ad49","filename":"openjpa-project/src/doc/manual/ref_guide_pc.xml","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/8c68768917b64b0f687095f6f29bf1f86165536d/openjpa-project/src/doc/manual/ref_guide_pc.xml","raw_url":"https://github.com/apache/openjpa/raw/8c68768917b64b0f687095f6f29bf1f86165536d/openjpa-project/src/doc/manual/ref_guide_pc.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_pc.xml?ref=8c68768917b64b0f687095f6f29bf1f86165536d","patch":"@@ -2286,7 +2286,7 @@ default fetch group or in any other active fetch groups to the set of\n fields that will be eagerly loaded from the database.\n             </para>\n             <para>\n-JPA <classname>FetchPlan</classname> methods:\n+OpenJPA <classname>FetchPlan</classname> methods:\n             </para>\n <programlisting>\n public FetchPlan addField(String field);\n@@ -2318,7 +2318,6 @@ publisher</literal>.\n             </para>\n             \n             <para>\n-            <title>Extended Path Lookup</title>\n To include the fields defined in a super class by the subclass or to distinguish\n between fields that are defined in <emphasis>both</emphasis> super- and subclass,\n set <literal>setExtendedPathLookup(boolean)</literal> on <literal>FetchPlan"}]}

