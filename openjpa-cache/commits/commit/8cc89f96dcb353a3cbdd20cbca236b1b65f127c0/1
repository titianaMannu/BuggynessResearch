{"sha":"8cc89f96dcb353a3cbdd20cbca236b1b65f127c0","node_id":"MDY6Q29tbWl0MjA2MzY0OjhjYzg5Zjk2ZGNiMzUzYTNjYmRkMjBjYmNhMjM2YjFiNjVmMTI3YzA=","commit":{"author":{"name":"Milosz Tylenda","email":"mtylenda@apache.org","date":"2010-02-14T12:43:46Z"},"committer":{"name":"Milosz Tylenda","email":"mtylenda@apache.org","date":"2010-02-14T12:43:46Z"},"message":"OPENJPA-1510: User manual corrections: some terms made consistent in case, made hint and locking descriptions more database-agnostic, removed an old MySQL known issue, H2 version updated.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@910003 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"55d359c00a745c0d58b640a07a0a35a5dfcfe156","url":"https://api.github.com/repos/apache/openjpa/git/trees/55d359c00a745c0d58b640a07a0a35a5dfcfe156"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/8cc89f96dcb353a3cbdd20cbca236b1b65f127c0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/8cc89f96dcb353a3cbdd20cbca236b1b65f127c0","html_url":"https://github.com/apache/openjpa/commit/8cc89f96dcb353a3cbdd20cbca236b1b65f127c0","comments_url":"https://api.github.com/repos/apache/openjpa/commits/8cc89f96dcb353a3cbdd20cbca236b1b65f127c0/comments","author":null,"committer":null,"parents":[{"sha":"e70d8bf5f2de6b0f4fac0529830a64ce387eee01","url":"https://api.github.com/repos/apache/openjpa/commits/e70d8bf5f2de6b0f4fac0529830a64ce387eee01","html_url":"https://github.com/apache/openjpa/commit/e70d8bf5f2de6b0f4fac0529830a64ce387eee01"}],"stats":{"total":80,"additions":41,"deletions":39},"files":[{"sha":"f06532ac56f2081d48e8b6721b43dcf630c6e0c5","filename":"openjpa-project/src/doc/manual/jpa_overview_query.xml","status":"modified","additions":26,"deletions":16,"changes":42,"blob_url":"https://github.com/apache/openjpa/blob/8cc89f96dcb353a3cbdd20cbca236b1b65f127c0/openjpa-project/src/doc/manual/jpa_overview_query.xml","raw_url":"https://github.com/apache/openjpa/raw/8cc89f96dcb353a3cbdd20cbca236b1b65f127c0/openjpa-project/src/doc/manual/jpa_overview_query.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_query.xml?ref=8cc89f96dcb353a3cbdd20cbca236b1b65f127c0","patch":"@@ -737,8 +737,12 @@ All input parameters must be single-valued, except in IN expressions\n                 Query Hints\n             </title>\n             <para>\n-JPQL provides support for hints which are name/value pairs used to control locking and optimization keywords in sql. \n-The following example shows how to use the JPA hint api to set the <classname>ReadLockMode</classname>  and <classname>ResultCount</classname>  in the OpenJPA fetch plan.  This will result in the sql keywords OPTIMIZE FOR 2 ROWS  and FOR UPDATE to be emitted into the sql provided that a pessimistic LockManager is being used.\n+JPQL provides support for hints which are name/value pairs used to control locking and optimization keywords in SQL. \n+The following example shows how to use the JPA hint API to set the <classname>ReadLockMode</classname>\n+and <classname>ResultCount</classname> in the OpenJPA fetch plan. This will result in\n+a database-specific SQL keyword (usually FOR UPDATE) to be emitted into the SQL provided that a\n+pessimistic LockManager is being used. Additionally, if a DB2 database is being used,\n+the OPTIMIZE FOR 2 ROWS clause will also be emitted.\n             </para>\n             <example id=\"jpa_query_hint1\">\n                 <title>\n@@ -761,10 +765,13 @@ Invalid hints or hints which can not be processed by a particular database are i\n                     Locking Hints\n                 </title>\n                 <para>\n-To avoid deadlock and optimistic update exceptions among multiple updaters, use a pessimistic LockManager, specified in the persistence unit definition, and use a hint name of &quot;openjpa.FetchPlan.ReadLockMode&quot; on queries for entities that must be locked for serialization.   The value of <classname>ReadLockMode</classname> can be either &quot;READ&quot; or &quot;WRITE&quot;.  This results in FOR UPDATE or USE AND KEEP UPDATE LOCKS in sql.\n+To avoid deadlock and optimistic update exceptions among multiple updaters, use a pessimistic LockManager, specified in the persistence unit definition,\n+and use a hint name of &quot;openjpa.FetchPlan.ReadLockMode&quot; on queries for entities that must be locked for serialization.\n+The value of <classname>ReadLockMode</classname> can be either &quot;READ&quot; or &quot;WRITE&quot;.\n+This results in a database-specific locking keyword (usually FOR UPDATE) to be emitted into the SQL.\n                 </para>\n                 <para>\n-Using a <classname>ReadLockMode</classname> hint with JPA optimistic locking ( i.e. specifying LockManager = &quot;version&quot;) will result in the entity version field either being reread at end of transaction in the case of a value of &quot;READ&quot; or the version field updated at end of transaction in the case of  &quot;WRITE&quot;.   You must define a version field in the entity mapping when using a version LockManager and using ReadLockMode.   \n+Using a <classname>ReadLockMode</classname> hint with JPA optimistic locking (i.e. specifying LockManager = &quot;version&quot;) will result in the entity version field either being reread at end of transaction in the case of a value of &quot;READ&quot; or the version field updated at end of transaction in the case of  &quot;WRITE&quot;.   You must define a version field in the entity mapping when using a version LockManager and using ReadLockMode.   \n                 </para>\n                 <table>\n                     <title>\n@@ -793,9 +800,9 @@ Using a <classname>ReadLockMode</classname> hint with JPA optimistic locking ( i\n                                  READ\n                              </entry>\n                              <entry colname=\"pessimistic\">\n-                                 sql with UPDATE\n+                                 SQL with FOR UPDATE\n                              </entry>\n-                             <entry colname=\"version\">sql without update;\n+                             <entry colname=\"version\">SQL without FOR UPDATE;\n                              <para>\n reread version field at the end of transaction and check for no change.\n                              </para>\n@@ -806,10 +813,10 @@ reread version field at the end of transaction and check for no change.\n                                  WRITE\n                              </entry>\n                              <entry colname=\"pessimistic\">\n-                                 sql with UPDATE\n+                                 SQL with FOR UPDATE\n                              </entry>\n                              <entry colname=\"version\">\n-                                 sql without update; \n+                                 SQL without FOR UPDATE; \n                              <para>\n force update version field at the end of transaction\n                              </para>\n@@ -820,10 +827,10 @@ force update version field at the end of transaction\n                                  not specified\n                              </entry>\n                              <entry colname=\"pessimistic\">\n-                                 sql without update\n+                                 SQL without FOR UPDATE\n                              </entry>\n                              <entry colname=\"version\">\n-                                 sql without update\n+                                 SQL without FOR UPDATE\n                              </entry>\n                          </row>\n                     </tbody>\n@@ -857,15 +864,15 @@ default behavior.\n                     Result Set Size Hint\n                 </title>\n                 <para>\n-To specify a result set size hint to those databases that support it, specify a hint name of &quot;openjpa.hint.OptimizeResultCount&quot; with an integer value greater than zero.  This causes the sql keyword OPTIMIZE FOR to be generated.\n+To specify a result set size hint to those databases that support it, specify a hint name of &quot;openjpa.hint.OptimizeResultCount&quot; with an integer value greater than zero.  This causes the SQL keyword OPTIMIZE FOR to be generated.\n                 </para>\n             </section>\n             <section id=\"jpa_hints_isolation\">\n                 <title>\n                     Isolation Level Hint\n                 </title>\n                 <para>\n-To specify an isolation level, specify a hint name of &quot;openjpa.FetchPlan.Isolation&quot;.  The value will be used to specify isolation level using the sql WITH &lt;isolation&gt; clause for those databases that support it.  This hint only works in conjunction with the ReadLockMode hint.\n+To specify an isolation level, specify a hint name of &quot;openjpa.FetchPlan.Isolation&quot;.  The value will be used to specify isolation level using the SQL WITH &lt;isolation&gt; clause for those databases that support it.  This hint only works in conjunction with the ReadLockMode hint.\n                 </para>\n             </section>\n             <section id=\"jpa_hints_fetchplan\">\n@@ -884,7 +891,7 @@ Any property of  an OpenJPA FetchPlan can be changed using a hint by using a nam\n                 <para>\n The hint names &quot;openjpa.hint.MySQLSelectHint&quot; and\n &quot;openjpa.hint.OracleSelectHint&quot; can be used to specify a string value\n-of a query hint that will be inserted into sql for MySQL and Oracle databases.\n+of a query hint that will be inserted into SQL for MySQL and Oracle databases.\n See <xref linkend=\"dbsupport_mysql_query_hints\"/> and\n <xref linkend=\"dbsupport_oracle_query_hints\"/> for examples.  \n                 </para>\n@@ -903,9 +910,12 @@ Hints can also be included as part of a NamedQuery definition.\n <programlisting>\n ...\n @NamedQuery(name=\"magsOverPrice\",\n-query=\"SELECT x FROM Magazine x WHERE x.price > ?1\",\n-hints={ @QueryHint  (name=\"openjpa.hint.OptimizeResultCount\", value=\"2\"),\n-        @QueryHint (name=\"openjpa.FetchPlan.ReadLockMode\",value=\"WRITE\")} )\n+    query=\"SELECT x FROM Magazine x WHERE x.price > ?1\",\n+    hints={\n+        @QueryHint(name=\"openjpa.hint.OptimizeResultCount\", value=\"2\"),\n+        @QueryHint(name=\"openjpa.FetchPlan.ReadLockMode\", value=\"WRITE\")\n+    }\n+)\n ...\n </programlisting>\n                 </example>"},{"sha":"6ee8ac293592cf4a752d891ec21a84360e5ce114","filename":"openjpa-project/src/doc/manual/jpa_tutorials.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/8cc89f96dcb353a3cbdd20cbca236b1b65f127c0/openjpa-project/src/doc/manual/jpa_tutorials.xml","raw_url":"https://github.com/apache/openjpa/raw/8cc89f96dcb353a3cbdd20cbca236b1b65f127c0/openjpa-project/src/doc/manual/jpa_tutorials.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_tutorials.xml?ref=8cc89f96dcb353a3cbdd20cbca236b1b65f127c0","patch":"@@ -382,7 +382,7 @@ Compile the <filename>.java</filename> files.\n javac *.java\n </programlisting>\n                     <para>\n-You can use any java compiler instead of <command>javac</command>.\n+You can use any Java compiler instead of <command>javac</command>.\n                     </para>\n                 </listitem>\n                 <listitem>\n@@ -1158,8 +1158,8 @@ The first query is snake-centric - the query runs against the <classname>Snake\n </classname> class, looking for all snakes named Killer and providing a detailed\n listing of them. The second is rabbit-centric - it examines the rabbits in the\n database for instances whose <literal>eater</literal> is named Killer. This\n-second query demonstrates the that simple java 'dot' syntax is used when\n-traversing an to-one field in a query.\n+second query demonstrates that the simple Java 'dot' syntax is used when\n+traversing a to-one field in a query.\n                 </para>\n                 <para>\n It is also possible to traverse collection fields. Imagine that there was a"},{"sha":"e8352f3694b1bc0b9e579ba5ae17d812a3f0758d","filename":"openjpa-project/src/doc/manual/openjpa_legal.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/8cc89f96dcb353a3cbdd20cbca236b1b65f127c0/openjpa-project/src/doc/manual/openjpa_legal.xml","raw_url":"https://github.com/apache/openjpa/raw/8cc89f96dcb353a3cbdd20cbca236b1b65f127c0/openjpa-project/src/doc/manual/openjpa_legal.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/openjpa_legal.xml?ref=8cc89f96dcb353a3cbdd20cbca236b1b65f127c0","patch":"@@ -74,7 +74,7 @@ The openjpa-all aggregate JAR includes software developed by the:\n     Apache Commons Pool project\n                 </para></listitem>\n                 <listitem><para>\n-    Apache Geronimo project (JMS 1.1, JTA 1.1 and JPA 2.0 spec apis)\n+    Apache Geronimo project (JMS 1.1, JTA 1.1 and JPA 2.0 spec APIs)\n                 </para></listitem>\n                 <listitem><para>\n     JCP JSR-317 JPA 2.0 Schemas"},{"sha":"6c6012b8062617523f38c533a42601bd7a6d8fa7","filename":"openjpa-project/src/doc/manual/ref_guide_conf.xml","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/8cc89f96dcb353a3cbdd20cbca236b1b65f127c0/openjpa-project/src/doc/manual/ref_guide_conf.xml","raw_url":"https://github.com/apache/openjpa/raw/8cc89f96dcb353a3cbdd20cbca236b1b65f127c0/openjpa-project/src/doc/manual/ref_guide_conf.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_conf.xml?ref=8cc89f96dcb353a3cbdd20cbca236b1b65f127c0","patch":"@@ -2075,7 +2075,6 @@ or flush before running it against the datastore.\n             </para>\n         </section>\n         \n-InitializeEagerly\n         <section id=\"openjpa.InitializeEagerly\">\n             <title>\n                 openjpa.InitializeEagerly"},{"sha":"d97caa6114c91599a2f7fee23a2c306f3469f043","filename":"openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/8cc89f96dcb353a3cbdd20cbca236b1b65f127c0/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","raw_url":"https://github.com/apache/openjpa/raw/8cc89f96dcb353a3cbdd20cbca236b1b65f127c0/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml?ref=8cc89f96dcb353a3cbdd20cbca236b1b65f127c0","patch":"@@ -664,10 +664,10 @@ class.\n                 <para>\n                 <indexterm>\n                     <primary>\n-                        SQLServer\n+                        SQL Server\n                     </primary>\n                 </indexterm>\n-<literal>sqlserver</literal>: Dictionary for Microsoft's SQLServer database.\n+<literal>sqlserver</literal>: Dictionary for Microsoft's SQL Server database.\n This is an alias for the\n <ulink url=\"../javadoc/org/apache/openjpa/jdbc/sql/SQLServerDictionary.html\">\n <classname>org.apache.openjpa.jdbc.sql.SQLServerDictionary</classname></ulink>\n@@ -3962,12 +3962,12 @@ property accepts the following values:\n <literal>always</literal>: Each <classname>EntityManager</classname> obtains a\n single connection and uses it until the <classname>EntityManager</classname>\n closes. Great care should be taken when using this property if the application \n-cannot close the EntityManager (ie container-managed EntityManagers in a JEE \n+cannot close the EntityManager (i.e. container-managed EntityManagers in a JEE \n Application Server). In this case the connection will remain open for an \n undefined time and the application may not be able to recover from a terminated\n-connection(ie if a TCP/IP timeout severs the connection to the database). \n+connection (for example, if a TCP/IP timeout severs the connection to the database). \n For this reason the <literal>always</literal> option should not be used with \n-container managed EntityManagers.\n+container-managed EntityManagers.\n                 </para>\n             </listitem>\n             <listitem>"},{"sha":"930238cfab579f5a31ffa7c7b95ae0ae075ed62c","filename":"openjpa-project/src/doc/manual/ref_guide_mapping.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/8cc89f96dcb353a3cbdd20cbca236b1b65f127c0/openjpa-project/src/doc/manual/ref_guide_mapping.xml","raw_url":"https://github.com/apache/openjpa/raw/8cc89f96dcb353a3cbdd20cbca236b1b65f127c0/openjpa-project/src/doc/manual/ref_guide_mapping.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_mapping.xml?ref=8cc89f96dcb353a3cbdd20cbca236b1b65f127c0","patch":"@@ -549,7 +549,7 @@ generation.\n                         <para>\n <literal>-annotations/-ann &lt;true/t | false/f&gt;</literal>: Set to\n <literal>true</literal> to\n-generate JPA annotations in generated java classes.\n+generate JPA annotations in generated Java classes.\n                         </para>\n                     </listitem>\n                     <listitem>\n@@ -652,7 +652,7 @@ the default Java classes to generate for each SQL type that is seen in the\n schema. The format is <literal> SQLTYPE1=JavaClass1,SQLTYPE2=JavaClass2\n </literal>. The SQL type name first looks for a customization based on <literal>\n SQLTYPE(SIZE,PRECISION)</literal>, then <literal>SQLTYPE(SIZE)</literal>, then\n-<literal>SQLTYPE(SIZE,PRECISION)</literal>. So if a column whose type name is\n+<literal>SQLTYPE</literal>. So if a column whose type name is\n <literal>CHAR</literal> is found, it will first look for the <literal>\n CHAR(50,0)</literal> type name specification, then it will look for <literal>\n CHAR(50)</literal>, and finally it will just look for <literal>CHAR</literal>."},{"sha":"673dc313d799695ec13b00e7ddaa2b11dfac3c75","filename":"openjpa-project/src/doc/manual/ref_guide_optimization.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/8cc89f96dcb353a3cbdd20cbca236b1b65f127c0/openjpa-project/src/doc/manual/ref_guide_optimization.xml","raw_url":"https://github.com/apache/openjpa/raw/8cc89f96dcb353a3cbdd20cbca236b1b65f127c0/openjpa-project/src/doc/manual/ref_guide_optimization.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_optimization.xml?ref=8cc89f96dcb353a3cbdd20cbca236b1b65f127c0","patch":"@@ -461,9 +461,9 @@ database only as necessary.\n                         </para>\n                     </entry>\n                     <entry colname=\"desc\">\n-If you have enabled scrollable result sets and on-demand loading but do you not\n+If you have enabled scrollable result sets and on-demand loading but you do not\n require it, consider disabling it again.  Some JDBC drivers and databases \n-(SQLServer for example) are much slower when used with scrolling result sets.\n+(SQL Server for example) are much slower when used with scrolling result sets.\n                     </entry>\n                 </row>\n                 <row>"},{"sha":"eecbca86a83b27cd0f073d51a0ba22e4b84050a8","filename":"openjpa-project/src/doc/manual/supported_databases.xml","status":"modified","additions":2,"deletions":9,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/8cc89f96dcb353a3cbdd20cbca236b1b65f127c0/openjpa-project/src/doc/manual/supported_databases.xml","raw_url":"https://github.com/apache/openjpa/raw/8cc89f96dcb353a3cbdd20cbca236b1b65f127c0/openjpa-project/src/doc/manual/supported_databases.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/supported_databases.xml?ref=8cc89f96dcb353a3cbdd20cbca236b1b65f127c0","patch":"@@ -320,13 +320,13 @@ databases that have been fully tested against this release, please refer to the\n                         <link linkend=\"dbsupport_h2\">H2 Database Engine</link>\n                     </entry>\n                     <entry colname=\"dbversion\">\n-                        1.0\n+                        1.1.118\n                     </entry>\n                     <entry colname=\"drivname\">\n                         H2\n                     </entry>\n                     <entry colname=\"drivversion\">\n-                        1.0\n+                        1.1.118\n                     </entry>\n                 </row>\n                 <row>\n@@ -1050,13 +1050,6 @@ mismatch between the field that is stored and the field that is retrieved.\n                 </listitem>\n                 <listitem>\n                     <para>\n-Some version of the MySQL JDBC driver have a bug that prevents OpenJPA from\n-being able to interrogate the database for foreign keys. Version 3.0.14 (or\n-higher) of the MySQL driver is required in order to get around this bug.\n-                    </para>\n-                </listitem>\n-                <listitem>\n-                    <para>\n When using large result sets with MySQL there are a number of documented limitations.\n Please read the section titled \"ResultSet\" in the \"MySQL JDBC API Implementation Notes\".\n The net effect of these limitations is that you will have to read all of the rows of a"}]}

