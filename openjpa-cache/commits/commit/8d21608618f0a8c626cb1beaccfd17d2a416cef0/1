{"sha":"8d21608618f0a8c626cb1beaccfd17d2a416cef0","node_id":"MDY6Q29tbWl0MjA2MzY0OjhkMjE2MDg2MThmMGE4YzYyNmNiMWJlYWNjZmQxN2QyYTQxNmNlZjA=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2011-10-29T01:04:52Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2011-10-29T01:04:52Z"},"message":"OPENJPA-2065: allow interface as result class\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1190723 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"12d0a5c6bebc045bddf7a0fb310bb41c9586b437","url":"https://api.github.com/repos/apache/openjpa/git/trees/12d0a5c6bebc045bddf7a0fb310bb41c9586b437"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/8d21608618f0a8c626cb1beaccfd17d2a416cef0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/8d21608618f0a8c626cb1beaccfd17d2a416cef0","html_url":"https://github.com/apache/openjpa/commit/8d21608618f0a8c626cb1beaccfd17d2a416cef0","comments_url":"https://api.github.com/repos/apache/openjpa/commits/8d21608618f0a8c626cb1beaccfd17d2a416cef0/comments","author":null,"committer":null,"parents":[{"sha":"3494fab794711379f046a26e3a19f10a5f80c7ea","url":"https://api.github.com/repos/apache/openjpa/commits/3494fab794711379f046a26e3a19f10a5f80c7ea","html_url":"https://github.com/apache/openjpa/commit/3494fab794711379f046a26e3a19f10a5f80c7ea"}],"stats":{"total":18,"additions":13,"deletions":5},"files":[{"sha":"b35dcc05d6a30249c8476117a8ec3e90cd782e21","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/ResultPacker.java","status":"modified","additions":13,"deletions":5,"changes":18,"blob_url":"https://github.com/apache/openjpa/blob/8d21608618f0a8c626cb1beaccfd17d2a416cef0/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/ResultPacker.java","raw_url":"https://github.com/apache/openjpa/raw/8d21608618f0a8c626cb1beaccfd17d2a416cef0/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/ResultPacker.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/ResultPacker.java?ref=8d21608618f0a8c626cb1beaccfd17d2a416cef0","patch":"@@ -117,10 +117,9 @@ public ResultPacker(Class[] types, String[] aliases, Class resultClass) {\n     /**\n      * Internal constructor.\n      */\n-    private ResultPacker(Class candidate, Class[] types, String[] aliases,\n-        Class resultClass) {\n+    private ResultPacker(Class<?> candidate, Class<?>[] types, String[] aliases, Class<?> resultClass) {\n         _aliases = aliases;\n-        if (candidate == resultClass \n+        if (candidate == resultClass || isInterface(resultClass, candidate) \n          ||(types != null && types.length == 1 && types[0] == resultClass) \n          || resultClass.isArray()) {\n             _resultClass = resultClass;\n@@ -135,7 +134,7 @@ private ResultPacker(Class candidate, Class[] types, String[] aliases,\n             _constructor = null;\n         } else if (!_stdTypes.contains(_resultClass = resultClass)) {\n             // check for a constructor that matches the projection types\n-            Constructor cons = null;\n+            Constructor<?> cons = null;\n             if (types != null && types.length > 0) {\n                 try {\n                     cons = _resultClass.getConstructor(types);\n@@ -150,7 +149,7 @@ private ResultPacker(Class candidate, Class[] types, String[] aliases,\n                 _put = findPut(methods);\n                 _sets = new Member[aliases.length];\n \n-                Class type;\n+                Class<?> type;\n                 for (int i = 0; i < _sets.length; i++) {\n                     type = (types == null) ? candidate : types[i];\n                     _sets[i] = findSet(aliases[i], type, fields, methods);\n@@ -172,6 +171,15 @@ private ResultPacker(Class candidate, Class[] types, String[] aliases,\n             _constructor = null;\n         }\n     }\n+    \n+    boolean isInterface(Class<?> intf, Class<?> actual) {\n+    \tClass<?>[] intfs = actual.getInterfaces();\n+    \tfor (Class<?> c : intfs) {\n+    \t\tif (c == intf)\n+    \t\t\treturn true;\n+    \t}\n+    \treturn false;\n+    }\n \n     /**\n      * Ensure that conversion is possible."}]}

