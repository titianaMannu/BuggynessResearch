{"sha":"8dff01769495aa4fd94c83b58f144dfdebdfc581","node_id":"MDY6Q29tbWl0MjA2MzY0OjhkZmYwMTc2OTQ5NWFhNGZkOTRjODNiNThmMTQ0ZGZkZWJkZmM1ODE=","commit":{"author":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-12-15T22:26:11Z"},"committer":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-12-15T22:26:11Z"},"message":"OPENJPA-1431: fix @Temporal annotation when used in conjunction with @Column and @ElementCollection\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@891035 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"ddcee9b762ec5d53aa9dd2433a5c916a8a3d77b9","url":"https://api.github.com/repos/apache/openjpa/git/trees/ddcee9b762ec5d53aa9dd2433a5c916a8a3d77b9"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/8dff01769495aa4fd94c83b58f144dfdebdfc581","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/8dff01769495aa4fd94c83b58f144dfdebdfc581","html_url":"https://github.com/apache/openjpa/commit/8dff01769495aa4fd94c83b58f144dfdebdfc581","comments_url":"https://api.github.com/repos/apache/openjpa/commits/8dff01769495aa4fd94c83b58f144dfdebdfc581/comments","author":null,"committer":null,"parents":[{"sha":"f5c216eb19d280cc2c886e606ea0b337d5cfaff7","url":"https://api.github.com/repos/apache/openjpa/commits/f5c216eb19d280cc2c886e606ea0b337d5cfaff7","html_url":"https://github.com/apache/openjpa/commit/f5c216eb19d280cc2c886e606ea0b337d5cfaff7"}],"stats":{"total":46,"additions":39,"deletions":7},"files":[{"sha":"2ca97e7cd0a580a2f8d01bbe4d8f71a580ac9dfb","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/AnnotationPersistenceMappingParser.java","status":"modified","additions":6,"deletions":3,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/8dff01769495aa4fd94c83b58f144dfdebdfc581/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/AnnotationPersistenceMappingParser.java","raw_url":"https://github.com/apache/openjpa/raw/8dff01769495aa4fd94c83b58f144dfdebdfc581/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/AnnotationPersistenceMappingParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/AnnotationPersistenceMappingParser.java?ref=8dff01769495aa4fd94c83b58f144dfdebdfc581","patch":"@@ -1480,9 +1480,12 @@ private void parseTemporal(FieldMapping fm, Temporal anno) {\n                 String.valueOf(cols.size()), \"1\"));\n         if (cols.isEmpty()) {\n             cols = Arrays.asList(new Column[]{ new Column() });\n-            if (fm.isElementCollection())\n-                fm.getElementMapping().getValueInfo().setColumns(cols);\n-            else\n+            if (fm.isElementCollection()) {\n+                if (!fm.getElementMapping().getValueInfo().getColumns().isEmpty())\n+                    cols = fm.getElementMapping().getValueInfo().getColumns();\n+                else    \n+                    fm.getElementMapping().getValueInfo().setColumns(cols);\n+            } else\n                 fm.getValueInfo().setColumns(cols);\n         }\n "},{"sha":"d1423d259c5ddc5aad31d7e6795e5f6c66962342","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/A.java","status":"modified","additions":20,"deletions":1,"changes":21,"blob_url":"https://github.com/apache/openjpa/blob/8dff01769495aa4fd94c83b58f144dfdebdfc581/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/A.java","raw_url":"https://github.com/apache/openjpa/raw/8dff01769495aa4fd94c83b58f144dfdebdfc581/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/A.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/A.java?ref=8dff01769495aa4fd94c83b58f144dfdebdfc581","patch":"@@ -18,13 +18,15 @@\n  */\n package org.apache.openjpa.persistence.embed;\n \n+import java.util.Collection;\n+import java.util.Date;\n import java.util.HashSet;\n import java.util.Set;\n \n import javax.persistence.*;\n \n @Entity\n-@Table(name = \"A_EMB\")\n+@Table(name = \"A_EMBED\")\n public class A implements java.io.Serializable {\n \n     @Id\n@@ -37,6 +39,14 @@\n     @ElementCollection\n     protected Set<Embed> embeds = new HashSet();\n \n+    @CollectionTable(name = \"collectionTemporalOrderColumnTable\", \n+            joinColumns = @JoinColumn(name = \"parent_id\"))\n+    @ElementCollection(fetch = FetchType.EAGER)\n+    @Column(name = \"value\")\n+    @OrderColumn(name = \"valueOrderColumn\")\n+    @Temporal(TemporalType.DATE)\n+    private Collection<Date> collectionDate;\n+\n     public String getId() {\n         return id;\n     }\n@@ -68,5 +78,14 @@ public void setValue(int value) {\n     public void setEmbeds(Set<Embed> embeds) {\n         this.embeds = embeds;\n     }\n+    \n+    public Collection<Date> getCollectionDate() {\n+        return collectionDate;\n+    }\n+\n+    public void setCollectionDate(Collection<Date> collectionDate) {\n+        this.collectionDate = collectionDate;\n+    }\n+    \n }    \n    "},{"sha":"96d329e746fc5e0654616d6d5150ca2c2797a5e1","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java","status":"modified","additions":13,"deletions":3,"changes":16,"blob_url":"https://github.com/apache/openjpa/blob/8dff01769495aa4fd94c83b58f144dfdebdfc581/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java","raw_url":"https://github.com/apache/openjpa/raw/8dff01769495aa4fd94c83b58f144dfdebdfc581/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java?ref=8dff01769495aa4fd94c83b58f144dfdebdfc581","patch":"@@ -21,6 +21,7 @@\n import java.io.IOException;\n import java.sql.SQLException;\n import java.sql.Timestamp;\n+import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Calendar;\n import java.util.Collection;\n@@ -2975,8 +2976,11 @@ public void testDefaultNameForElementCollection() {\n         Set embeds = new HashSet();\n         embeds.add(embed);\n         a.setEmbeds(embeds);\n+        Collection<Date> dates = new ArrayList<Date>();\n+        dates.add(new Date());\n+        a.setCollectionDate(dates);\n+        em.persist(a);\n         tran.commit();\n-        em.close();\n         boolean found = false;\n         for (String sqlStr : sql) {\n             if (sqlStr.toUpperCase().indexOf(\"A_EMBEDS\") != -1) {\n@@ -2986,7 +2990,13 @@ public void testDefaultNameForElementCollection() {\n         }\n         assertTrue(found);\n         \n+        found = false;\n+        for (String sqlStr : sql) {\n+            if (sqlStr.toUpperCase().indexOf(\"VALUE\") != -1) {\n+                found = true;\n+                break;\n+            } \n+        }\n+        assertTrue(found);\n     }\n-    \n-    \n }"}]}

