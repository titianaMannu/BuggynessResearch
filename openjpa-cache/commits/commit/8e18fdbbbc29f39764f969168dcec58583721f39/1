{"sha":"8e18fdbbbc29f39764f969168dcec58583721f39","node_id":"MDY6Q29tbWl0MjA2MzY0OjhlMThmZGJiYmMyOWYzOTc2NGY5NjkxNjhkY2VjNTg1ODM3MjFmMzk=","commit":{"author":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2021-05-02T20:23:50Z"},"committer":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2021-05-02T21:14:33Z"},"message":"OPENJPA-2865 add compat check for WITH_TIMEZONE cols","tree":{"sha":"4280e0d2c687cc0d7669bcee427dd74ee9b0df28","url":"https://api.github.com/repos/apache/openjpa/git/trees/4280e0d2c687cc0d7669bcee427dd74ee9b0df28"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/8e18fdbbbc29f39764f969168dcec58583721f39","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/8e18fdbbbc29f39764f969168dcec58583721f39","html_url":"https://github.com/apache/openjpa/commit/8e18fdbbbc29f39764f969168dcec58583721f39","comments_url":"https://api.github.com/repos/apache/openjpa/commits/8e18fdbbbc29f39764f969168dcec58583721f39/comments","author":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"committer":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"parents":[{"sha":"c780084ccdec85c1e98a3cf144f9e0e7bdf117fb","url":"https://api.github.com/repos/apache/openjpa/commits/c780084ccdec85c1e98a3cf144f9e0e7bdf117fb","html_url":"https://github.com/apache/openjpa/commit/c780084ccdec85c1e98a3cf144f9e0e7bdf117fb"}],"stats":{"total":26,"additions":22,"deletions":4},"files":[{"sha":"c2ebe98fb157c40a795eee29d28c3360f69f01b4","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingInfo.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/8e18fdbbbc29f39764f969168dcec58583721f39/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingInfo.java","raw_url":"https://github.com/apache/openjpa/raw/8e18fdbbbc29f39764f969168dcec58583721f39/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingInfo.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingInfo.java?ref=8e18fdbbbc29f39764f969168dcec58583721f39","patch":"@@ -770,8 +770,8 @@ protected static Column mergeColumn(MetaDataContext context, String prefix,\n         if (col == null) {\n             col = table.addColumn(colName);\n             col.setType(type);\n-        } else if ((compat || !ttype) && !col.isCompatible(type, typeName,\n-            size, decimals)) {\n+        } else if ((compat || !ttype) &&\n+                !col.isCompatible(type, typeName, size, decimals)) {\n             // if existing column isn't compatible with desired type, die if\n             // can't adapt, else warn and change the existing column type\n             Message msg = _loc.get(prefix + \"-bad-col\", context,"},{"sha":"625380809e1566d7e4fcbbb98c78d1e5fe93b903","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/Column.java","status":"modified","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/apache/openjpa/blob/8e18fdbbbc29f39764f969168dcec58583721f39/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/Column.java","raw_url":"https://github.com/apache/openjpa/raw/8e18fdbbbc29f39764f969168dcec58583721f39/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/Column.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/Column.java?ref=8e18fdbbbc29f39764f969168dcec58583721f39","patch":"@@ -762,10 +762,29 @@ public boolean isCompatible(int type, String typeName, int size,\n                     case Types.DATE:\n                     case Types.TIME:\n                     case Types.TIMESTAMP:\n+                    case Types.TIMESTAMP_WITH_TIMEZONE:\n                         return true;\n                     default:\n                         return false;\n                 }\n+            case Types.TIMESTAMP_WITH_TIMEZONE:\n+                switch (type) {\n+                    case Types.DATE:\n+                    case Types.TIMESTAMP:\n+                        return true;\n+                    default:\n+                        return false;\n+                }\n+            case Types.TIME_WITH_TIMEZONE:\n+                switch (type) {\n+                    case Types.DATE:\n+                    case Types.TIME:\n+                    case Types.TIMESTAMP:\n+                        return true;\n+                    default:\n+                        return false;\n+                }\n+\n             case Types.SQLXML:  // All XML Types\n             case 2007:          // Oracle-defined opaque type code for XMLType treated the same way\n                 switch (type) {"},{"sha":"2a29eac2b2a40c10c84e76bbcdd379174cd9394d","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/DynamicSchemaFactory.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/8e18fdbbbc29f39764f969168dcec58583721f39/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/DynamicSchemaFactory.java","raw_url":"https://github.com/apache/openjpa/raw/8e18fdbbbc29f39764f969168dcec58583721f39/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/DynamicSchemaFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/DynamicSchemaFactory.java?ref=8e18fdbbbc29f39764f969168dcec58583721f39","patch":"@@ -240,8 +240,7 @@ public DynamicColumn(DBIdentifier name, Table table) {\n         }\n \n         @Override\n-        public boolean isCompatible(int type, String typeName, int size,\n-            int decimals) {\n+        public boolean isCompatible(int type, String typeName, int size, int decimals) {\n             if (getType() != Types.OTHER)\n                 return super.isCompatible(type, typeName, size, decimals);\n "}]}

