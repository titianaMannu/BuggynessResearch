{"sha":"8ef3f3db35c2d6464ee28721690ff0b6f5ba55e8","node_id":"MDY6Q29tbWl0MjA2MzY0OjhlZjNmM2RiMzVjMmQ2NDY0ZWUyODcyMTY5MGZmMGI2ZjViYTU1ZTg=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2011-06-09T14:49:11Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2011-06-09T14:49:11Z"},"message":"OPENJPA-2011: Optionally prevent reparsing annotations in in query mode. \n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1133900 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"5a5c1c33896e3e44b40dade49665773045c5ccb8","url":"https://api.github.com/repos/apache/openjpa/git/trees/5a5c1c33896e3e44b40dade49665773045c5ccb8"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/8ef3f3db35c2d6464ee28721690ff0b6f5ba55e8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/8ef3f3db35c2d6464ee28721690ff0b6f5ba55e8","html_url":"https://github.com/apache/openjpa/commit/8ef3f3db35c2d6464ee28721690ff0b6f5ba55e8","comments_url":"https://api.github.com/repos/apache/openjpa/commits/8ef3f3db35c2d6464ee28721690ff0b6f5ba55e8/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"0de12ed49202d2c8aa0f10ad81727d58f61d8d7d","url":"https://api.github.com/repos/apache/openjpa/commits/0de12ed49202d2c8aa0f10ad81727d58f61d8d7d","html_url":"https://github.com/apache/openjpa/commit/0de12ed49202d2c8aa0f10ad81727d58f61d8d7d"}],"stats":{"total":29,"additions":27,"deletions":2},"files":[{"sha":"0aa40184bd15f3f911c588c656f757d56c57dcbb","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/conf/Compatibility.java","status":"modified","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/apache/openjpa/blob/8ef3f3db35c2d6464ee28721690ff0b6f5ba55e8/openjpa-kernel/src/main/java/org/apache/openjpa/conf/Compatibility.java","raw_url":"https://github.com/apache/openjpa/raw/8ef3f3db35c2d6464ee28721690ff0b6f5ba55e8/openjpa-kernel/src/main/java/org/apache/openjpa/conf/Compatibility.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/conf/Compatibility.java?ref=8ef3f3db35c2d6464ee28721690ff0b6f5ba55e8","patch":"@@ -68,6 +68,7 @@\n     private boolean _ignoreDetachedStateFieldForProxySerialization = false;\n     private boolean _checkDatabaseForCascadePersistToDetachedEntity = false;\n     private boolean _overrideContextClassloader = true;\n+    private boolean _parseAnnotationsForQueryMode = true;\n     \n     /**\n      * Whether to require exact identity value types when creating object\n@@ -577,4 +578,25 @@ public boolean getOverrideContextClassloader() {\n     public void setOverrideContextClassloader(boolean overrideContextClassloader) {\n         _overrideContextClassloader = overrideContextClassloader;\n     }\n+    \n+    /**\n+     * Whether OpenJPA will scan every persistent class in an XML mapping file for annotations prior to executing a \n+     * query. In practice this scan is rarely needed, but the option to enable it is present for compatibility with \n+     * prior releases.\n+     * @since 2.0.2\n+     * @return true if the annotations should be re-parsed when resolving MetaData in MODE_QUERY.  \n+     */\n+    public boolean getParseAnnotationsForQueryMode() {\n+        return _parseAnnotationsForQueryMode;\n+    }\n+\n+    /**\n+     * Whether OpenJPA will scan every persistent class in an XML mapping file for annotations prior to executing a \n+     * query. In practice this scan is rarely needed, but the option to enable it is present for compatibility with \n+     * prior releases.\n+     * @since 2.0.2\n+     */\n+    public void setParseAnnotationsForQueryMode(boolean parseAnnotationsForQueryMode) {\n+        _parseAnnotationsForQueryMode = parseAnnotationsForQueryMode;\n+    }\n }"},{"sha":"d4ac347df99fcbc8331f4f30a91e98b545702674","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/8ef3f3db35c2d6464ee28721690ff0b6f5ba55e8/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","raw_url":"https://github.com/apache/openjpa/raw/8ef3f3db35c2d6464ee28721690ff0b6f5ba55e8/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java?ref=8ef3f3db35c2d6464ee28721690ff0b6f5ba55e8","patch":"@@ -864,8 +864,11 @@ protected boolean startClass(String elem, Attributes attrs)\n         }\n \n         if (_mode == MODE_QUERY) {\n-            if (_parser != null)\n-                _parser.parse(_cls);\n+            if(_conf.getCompatibilityInstance().getParseAnnotationsForQueryMode()){ \n+                if (_parser != null) {\n+                    _parser.parse(_cls);\n+                }\n+            }\n             return true;\n         }\n "}]}

