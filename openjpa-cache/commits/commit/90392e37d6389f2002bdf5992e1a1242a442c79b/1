{"sha":"90392e37d6389f2002bdf5992e1a1242a442c79b","node_id":"MDY6Q29tbWl0MjA2MzY0OjkwMzkyZTM3ZDYzODlmMjAwMmJkZjU5OTJlMWExMjQyYTQ0MmM3OWI=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-11-02T21:43:17Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-11-02T21:43:17Z"},"message":"OPENJPA-1369: Change Order.count column name to save HSQLDB keyword name clash\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@832117 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"04fe0756c2d811f5f406eadd9c31faaf8d97ef40","url":"https://api.github.com/repos/apache/openjpa/git/trees/04fe0756c2d811f5f406eadd9c31faaf8d97ef40"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/90392e37d6389f2002bdf5992e1a1242a442c79b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/90392e37d6389f2002bdf5992e1a1242a442c79b","html_url":"https://github.com/apache/openjpa/commit/90392e37d6389f2002bdf5992e1a1242a442c79b","comments_url":"https://api.github.com/repos/apache/openjpa/commits/90392e37d6389f2002bdf5992e1a1242a442c79b/comments","author":null,"committer":null,"parents":[{"sha":"760cf901ed485e7b3d0df316dc248b02c2c4cf24","url":"https://api.github.com/repos/apache/openjpa/commits/760cf901ed485e7b3d0df316dc248b02c2c4cf24","html_url":"https://github.com/apache/openjpa/commit/760cf901ed485e7b3d0df316dc248b02c2c4cf24"}],"stats":{"total":16,"additions":11,"deletions":5},"files":[{"sha":"c848c6db79e3578cd6f072174f9b53121552d700","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/AbstractCriteriaTestCase.java","status":"modified","additions":9,"deletions":5,"changes":14,"blob_url":"https://github.com/apache/openjpa/blob/90392e37d6389f2002bdf5992e1a1242a442c79b/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/AbstractCriteriaTestCase.java","raw_url":"https://github.com/apache/openjpa/raw/90392e37d6389f2002bdf5992e1a1242a442c79b/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/AbstractCriteriaTestCase.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/AbstractCriteriaTestCase.java?ref=90392e37d6389f2002bdf5992e1a1242a442c79b","patch":"@@ -36,6 +36,8 @@\n import org.apache.openjpa.jdbc.conf.JDBCConfiguration;\n import org.apache.openjpa.jdbc.sql.DBDictionary;\n import org.apache.openjpa.jdbc.sql.DerbyDictionary;\n+import org.apache.openjpa.jdbc.sql.HSQLDictionary;\n+import org.apache.openjpa.jdbc.sql.OracleDictionary;\n import org.apache.openjpa.lib.jdbc.AbstractJDBCListener;\n import org.apache.openjpa.lib.jdbc.JDBCEvent;\n import org.apache.openjpa.lib.jdbc.JDBCListener;\n@@ -90,10 +92,12 @@ protected OpenJPAEntityManagerFactorySPI createNamedEMF(Class<?>... types) {\n     void setDictionary() {\n         JDBCConfiguration conf = (JDBCConfiguration) getEntityManagerFactory().getConfiguration();\n         dict = conf.getDBDictionaryInstance();\n-        if (dict instanceof DerbyDictionary) {\n+        if (dict instanceof DerbyDictionary || dict instanceof HSQLDictionary) {\n             dict.requiresCastForComparisons = false;\n             dict.requiresCastForMathFunctions = false;\n-        }\n+        } else if (dict instanceof OracleDictionary) {\n+            dict.setJoinSyntax(\"sql92\");\n+        } \n     }\n \n     /**\n@@ -218,8 +222,8 @@ void executeAndCompareSQL(String jpql, String expectedSQL) {\n             if (!jSQL.get(i).equals(expectedSQL)) {\n                 printSQL(\"SQL for JPQL\", jSQL.get(i));\n                 printSQL(\"Expected SQL\", expectedSQL);\n-                assertEquals(i + \"-th Expected SQL and SQL for JPQL: \" + jpql + \" are different\", expectedSQL, jSQL\n-                    .get(i));\n+                assertTrue(i + \"-th Expected SQL and SQL for JPQL: \" + jpql + \" are different\", \n+                    expectedSQL.equalsIgnoreCase(jSQL.get(i)));\n             }\n         }\n     }\n@@ -241,7 +245,7 @@ void executeAndCompareSQL(Query jQ, String expectedSQL) {\n         if (jSql.indexOf(\"optimize for 1 row\") != -1)\n             jSql = jSql.substring(0, jSql.indexOf(\"optimize for 1 row\")).trim();\n \n-        if (!jSql.equals(expectedSQL)) {\n+        if (!jSql.equalsIgnoreCase(expectedSQL)) {\n             printSQL(\"SQL for JPQL\", jSql);\n             assertEquals(expectedSQL, jSql);\n         }"},{"sha":"fc63229f39a6791042c4f97dd2f5e3eb4af0b87e","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/TestTypeSafeCondExpression.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/90392e37d6389f2002bdf5992e1a1242a442c79b/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/TestTypeSafeCondExpression.java","raw_url":"https://github.com/apache/openjpa/raw/90392e37d6389f2002bdf5992e1a1242a442c79b/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/TestTypeSafeCondExpression.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/TestTypeSafeCondExpression.java?ref=90392e37d6389f2002bdf5992e1a1242a442c79b","patch":"@@ -44,6 +44,8 @@\n import javax.persistence.criteria.Root;\n import javax.persistence.criteria.Subquery;\n \n+import org.apache.openjpa.persistence.test.DatabasePlatform;\n+\n /**\n  * Tests type-strict version of Criteria API. The test scenarios are adapted\n  * from TestEJBQLCondExpression in"}]}

