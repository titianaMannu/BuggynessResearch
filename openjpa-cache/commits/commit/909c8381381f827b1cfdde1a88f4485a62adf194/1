{"sha":"909c8381381f827b1cfdde1a88f4485a62adf194","node_id":"MDY6Q29tbWl0MjA2MzY0OjkwOWM4MzgxMzgxZjgyN2IxY2ZkZGUxYTg4ZjQ0ODVhNjJhZGYxOTQ=","commit":{"author":{"name":"Jeremy Bauer","email":"jrbauer@apache.org","date":"2009-02-24T18:52:16Z"},"committer":{"name":"Jeremy Bauer","email":"jrbauer@apache.org","date":"2009-02-24T18:52:16Z"},"message":"OPENJPA-934 Fixed bugs in test code and added instructions to run in an Oracle environment.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@747496 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2ea3494a0405ab2574c0bf4ce58a86304e41f8d7","url":"https://api.github.com/repos/apache/openjpa/git/trees/2ea3494a0405ab2574c0bf4ce58a86304e41f8d7"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/909c8381381f827b1cfdde1a88f4485a62adf194","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/909c8381381f827b1cfdde1a88f4485a62adf194","html_url":"https://github.com/apache/openjpa/commit/909c8381381f827b1cfdde1a88f4485a62adf194","comments_url":"https://api.github.com/repos/apache/openjpa/commits/909c8381381f827b1cfdde1a88f4485a62adf194/comments","author":null,"committer":null,"parents":[{"sha":"22a0f837e110d422b945e80148e2c0f85412fef1","url":"https://api.github.com/repos/apache/openjpa/commits/22a0f837e110d422b945e80148e2c0f85412fef1","html_url":"https://github.com/apache/openjpa/commit/22a0f837e110d422b945e80148e2c0f85412fef1"}],"stats":{"total":21,"additions":15,"deletions":6},"files":[{"sha":"0af936b58c3ec6c0faebc68f5681286f6c18f9a3","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/annotations/TestSequenceGenerator.java","status":"modified","additions":15,"deletions":6,"changes":21,"blob_url":"https://github.com/apache/openjpa/blob/909c8381381f827b1cfdde1a88f4485a62adf194/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/annotations/TestSequenceGenerator.java","raw_url":"https://github.com/apache/openjpa/raw/909c8381381f827b1cfdde1a88f4485a62adf194/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/annotations/TestSequenceGenerator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/annotations/TestSequenceGenerator.java?ref=909c8381381f827b1cfdde1a88f4485a62adf194","patch":"@@ -30,10 +30,19 @@\n import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n \n /**\n- * Test for sequence generator. Some databases currently (Derby) do not support\n- * native sequences so this method is allowed to fail until such time when the\n- * test corpus can support database or dictionary support specific \n- * configuration.\n+ * Test for sequence generator. \n+ * \n+ * The test variations execute only when the target database dictionary has\n+ * a native sequence query defined. Even that condition is not sufficient for\n+ * exclusion, since some databases support sequences, but not named sequences.  \n+ * For that reason, and due to specific configuration needs for some databases \n+ * (Oracle) this test is allowed to fail.  \n+ * \n+ * To run these tests successfully on Oracle a ORMSCHEMA user and SEQSCHEMA \n+ * user need to exist.  In addition, the Oracle user profile used to run the \n+ * test must have SELECT object priviledge on the ORMSCHEMA.ORMSEQ and \n+ * SEQSCHEMA.SCHEMASEQ sequences and CREATE ANY SEQUENCE (or equivalent)\n+ * authority.\n  *\n  * @author Jeremy Bauer\n  */\n@@ -53,7 +62,7 @@ public void setUp()\n         try {\n             enabled =\n                 ((JDBCConfiguration) emf.getConfiguration())\n-                    .getDBDictionaryInstance().nextSequenceQuery == null;\n+                    .getDBDictionaryInstance().nextSequenceQuery != null;\n         } catch (Throwable t) {\n             enabled = false;\n         }\n@@ -122,7 +131,7 @@ private boolean sequenceExists(OpenJPAEntityManagerSPI em, String schema,\n         Connection conn = (Connection)em.getConnection();\n         try {\n             DatabaseMetaData dbmd = conn.getMetaData();\n-            Sequence[] seqs = dict.getSequences(dbmd, null, schema, \n+            Sequence[] seqs = dict.getSequences(dbmd, conn.getCatalog(), schema,\n                     sequence, conn);\n             if (seqs != null && seqs.length == 1 && \n                     seqs[0].getName().equalsIgnoreCase(sequence) &&"}]}

