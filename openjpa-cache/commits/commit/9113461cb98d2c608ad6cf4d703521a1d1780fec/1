{"sha":"9113461cb98d2c608ad6cf4d703521a1d1780fec","node_id":"C_kwDOAAMmHNoAKDkxMTM0NjFjYjk4ZDJjNjA4YWQ2Y2Y0ZDcwMzUyMWExZDE3ODBmZWM","commit":{"author":{"name":"Maxim Solodovnik","email":"solomax666@gmail.com","date":"2021-10-22T17:19:22Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2021-10-22T17:19:22Z"},"message":"[OPENJPA-2883] 'supportsAutoAssign' is turned OFF when 'useTriggersForAutoAssign' is ON (#84)\n\n* [OPENJPA-2883] test for the issue\r\n\r\n* [OPENJPA-2883] 'supportsAutoAssign' is turned OFF when 'useTriggersForAutoAssign' is ON\r\n\r\n* Assert is improved\r\n\r\n* Warning is logged when conflicting options are selected by user\r\n\r\n* Build should be fixed\r\n\r\n* EntityManager is properly closed","tree":{"sha":"aa9d06c6aa44c2cfec9cc950cc13b7ac12152dc2","url":"https://api.github.com/repos/apache/openjpa/git/trees/aa9d06c6aa44c2cfec9cc950cc13b7ac12152dc2"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/9113461cb98d2c608ad6cf4d703521a1d1780fec","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhcvKaCRBK7hj4Ov3rIwAAAlAIACcj90I90dxvPDOi2it+RtB3\nLIMWy/os2TueEANqgXXPInkYw7HXzH9YpKoaTXk41prMzygVk7JcM8JfnlbCdTp3\nwsodWVg48PUDobi2aj0BqqKFsvBSQ3NO6jNNkfPXUpohLya9HjA/LBj0grNGxZzx\naYJwa8HHvbL8X6cTLV0pe8JIvc6tbpUq/IH6jGDHgvZn0yt26WAgHyNkcGK9302Z\nrsETPBOjV0KZq2PiekWI7shi53QiFXU7w4/9iMHALgVhxpPS/67iwRKmSIvAedOQ\nu0YJTNQtJsZ8sR8uIe9SjKDMzj2A3+c4MCDbeEHcxaEnPJzhXodeDfdhFF8nWhk=\n=bhKy\n-----END PGP SIGNATURE-----\n","payload":"tree aa9d06c6aa44c2cfec9cc950cc13b7ac12152dc2\nparent 0fa0ee9790e1246934b9a553bf55e0a658b0e5c3\nauthor Maxim Solodovnik <solomax666@gmail.com> 1634923162 +0700\ncommitter GitHub <noreply@github.com> 1634923162 +0700\n\n[OPENJPA-2883] 'supportsAutoAssign' is turned OFF when 'useTriggersForAutoAssign' is ON (#84)\n\n* [OPENJPA-2883] test for the issue\r\n\r\n* [OPENJPA-2883] 'supportsAutoAssign' is turned OFF when 'useTriggersForAutoAssign' is ON\r\n\r\n* Assert is improved\r\n\r\n* Warning is logged when conflicting options are selected by user\r\n\r\n* Build should be fixed\r\n\r\n* EntityManager is properly closed"}},"url":"https://api.github.com/repos/apache/openjpa/commits/9113461cb98d2c608ad6cf4d703521a1d1780fec","html_url":"https://github.com/apache/openjpa/commit/9113461cb98d2c608ad6cf4d703521a1d1780fec","comments_url":"https://api.github.com/repos/apache/openjpa/commits/9113461cb98d2c608ad6cf4d703521a1d1780fec/comments","author":{"login":"solomax","id":3870591,"node_id":"MDQ6VXNlcjM4NzA1OTE=","avatar_url":"https://avatars.githubusercontent.com/u/3870591?v=4","gravatar_id":"","url":"https://api.github.com/users/solomax","html_url":"https://github.com/solomax","followers_url":"https://api.github.com/users/solomax/followers","following_url":"https://api.github.com/users/solomax/following{/other_user}","gists_url":"https://api.github.com/users/solomax/gists{/gist_id}","starred_url":"https://api.github.com/users/solomax/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/solomax/subscriptions","organizations_url":"https://api.github.com/users/solomax/orgs","repos_url":"https://api.github.com/users/solomax/repos","events_url":"https://api.github.com/users/solomax/events{/privacy}","received_events_url":"https://api.github.com/users/solomax/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"0fa0ee9790e1246934b9a553bf55e0a658b0e5c3","url":"https://api.github.com/repos/apache/openjpa/commits/0fa0ee9790e1246934b9a553bf55e0a658b0e5c3","html_url":"https://github.com/apache/openjpa/commit/0fa0ee9790e1246934b9a553bf55e0a658b0e5c3"}],"stats":{"total":110,"additions":105,"deletions":5},"files":[{"sha":"38e2d26a02172905604756cd29a796dab40761ec","filename":".gitignore","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/9113461cb98d2c608ad6cf4d703521a1d1780fec/.gitignore","raw_url":"https://github.com/apache/openjpa/raw/9113461cb98d2c608ad6cf4d703521a1d1780fec/.gitignore","contents_url":"https://api.github.com/repos/apache/openjpa/contents/.gitignore?ref=9113461cb98d2c608ad6cf4d703521a1d1780fec","patch":"@@ -8,4 +8,5 @@ dependency-reduced-pom.xml\n .idea\n nb-configuration.xml\n nbactions*.xml\n+.checkstyle\n "},{"sha":"7deaea7c914b89abc6dda078230695e9a91438b3","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/OracleDictionary.java","status":"modified","additions":10,"deletions":4,"changes":14,"blob_url":"https://github.com/apache/openjpa/blob/9113461cb98d2c608ad6cf4d703521a1d1780fec/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/OracleDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/9113461cb98d2c608ad6cf4d703521a1d1780fec/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/OracleDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/OracleDictionary.java?ref=9113461cb98d2c608ad6cf4d703521a1d1780fec","patch":"@@ -91,11 +91,13 @@\n      * using a trigger that inserts a sequence value into the\n      * primary key value when a row is inserted.\n      */\n+    @Deprecated\n     public boolean useTriggersForAutoAssign = false;\n \n     /**\n      * The global sequence name to use for autoassign simulation.\n      */\n+    @Deprecated\n     public String autoAssignSequenceName = null;\n \n     /**\n@@ -181,6 +183,10 @@ public OracleDictionary() {\n         maxEmbeddedClobSize = 4000;\n         inClauseLimit = 1000;\n \n+        if (supportsAutoAssign && useTriggersForAutoAssign) {\n+            log.warn(\"Both 'supportsAutoAssign' and 'useTriggersForAutoAssign' were specified, such configuration will never work,\"\n+                    + \" please use 'supportsAutoAssign'\");\n+        }\n         // support auto increment columns javax.persistence.GenerationType#IDENTITY\n         supportsAutoAssign = true;\n         autoAssignClause = \"GENERATED ALWAYS AS IDENTITY\";\n@@ -289,7 +295,7 @@ private Method getMethodByReflection(String className, String methodName, Class<\n     public void endConfiguration() {\n         super.endConfiguration();\n         if (useTriggersForAutoAssign)\n-            supportsAutoAssign = true;\n+            supportsAutoAssign = false;\n     }\n \n     @Override\n@@ -1045,7 +1051,7 @@ public int getPreferredType(int type) {\n \n             setTimeouts(stmnt, conf, false);\n             rs = stmnt.executeQuery();\n-            List idxList = new ArrayList();\n+            List<Index> idxList = new ArrayList<>();\n             while (rs != null && rs.next())\n                 idxList.add(newIndex(rs));\n             return (Index[]) idxList.toArray(new Index[idxList.size()]);\n@@ -1160,13 +1166,13 @@ public int getPreferredType(int type) {\n             return create;\n \n         Column[] cols = table.getColumns();\n-        List seqs = null;\n+        List<String> seqs = null;\n         String seq, trig;\n         for (int i = 0; cols != null && i < cols.length; i++) {\n             if (!cols[i].isAutoAssigned())\n                 continue;\n             if (seqs == null)\n-                seqs = new ArrayList(4);\n+                seqs = new ArrayList<String>(4);\n \n             seq = autoAssignSequenceName;\n             if (seq == null) {"},{"sha":"3f4eefccd415e90b74ac11fe3b80f821f8538d1d","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jira_2883/TestOracleGeneratedId.java","status":"added","additions":83,"deletions":0,"changes":83,"blob_url":"https://github.com/apache/openjpa/blob/9113461cb98d2c608ad6cf4d703521a1d1780fec/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jira_2883/TestOracleGeneratedId.java","raw_url":"https://github.com/apache/openjpa/raw/9113461cb98d2c608ad6cf4d703521a1d1780fec/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jira_2883/TestOracleGeneratedId.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jira_2883/TestOracleGeneratedId.java?ref=9113461cb98d2c608ad6cf4d703521a1d1780fec","patch":"@@ -0,0 +1,83 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.jira_2883;\n+\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.EntityManager;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.Table;\n+\n+import org.apache.openjpa.jdbc.conf.JDBCConfiguration;\n+import org.apache.openjpa.persistence.test.DatabasePlatform;\n+import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n+\n+/**\n+ * Tests that entity with generated id created as expected\n+ *\n+ *   <A HREF=\"https://issues.apache.org/jira/browse/OPENJPA-2883\">OPENJPA-2883</A>\n+ *\n+ */\n+@DatabasePlatform(\"oracle.jdbc.driver.OracleDriver\")\n+public class TestOracleGeneratedId extends SingleEMFTestCase {\n+    @Override\n+    public void setUp() {\n+        super.setUp(CLEAR_TABLES, OraGenIdData.class,\n+                \"openjpa.jdbc.DBDictionary\", \"oracle(UseTriggersForAutoAssign=true, MaxAutoAssignNameLength=28, BatchLimit=100)\");\n+    }\n+\n+    public void testGeneratedId() {\n+        EntityManager em = null;\n+        try {\n+            em = emf.createEntityManager();\n+            assertFalse(\"'supportsAutoAssign' should be turned OFF\", (((JDBCConfiguration) emf.getConfiguration()).\n+                    getDBDictionaryInstance().supportsAutoAssign));\n+        } finally {\n+            if (em != null) {\n+                em.close();\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Declares a Version field of unsupported type.\n+     *\n+     */\n+    @Entity\n+    @Table(name=\"GeneratedId\")\n+    public class OraGenIdData {\n+        @Id\n+        @GeneratedValue(strategy = GenerationType.IDENTITY)\n+        @Column(name = \"id\")\n+        private long id;\n+\n+        @Column(name = \"value\")\n+        private String value;\n+\n+        public long getId() {\n+            return id;\n+        }\n+\n+        public String getValue() {\n+            return value;\n+        }\n+    }\n+}"},{"sha":"ed73d81ea36a48eb04e67a0467d1f9ff8986faad","filename":"openjpa-tools/openjpa-maven-plugin/src/it/sqlActionRefresh/pom.xml","status":"modified","additions":11,"deletions":1,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/9113461cb98d2c608ad6cf4d703521a1d1780fec/openjpa-tools/openjpa-maven-plugin/src/it/sqlActionRefresh/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/9113461cb98d2c608ad6cf4d703521a1d1780fec/openjpa-tools/openjpa-maven-plugin/src/it/sqlActionRefresh/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-tools/openjpa-maven-plugin/src/it/sqlActionRefresh/pom.xml?ref=9113461cb98d2c608ad6cf4d703521a1d1780fec","patch":"@@ -39,7 +39,17 @@\n \n         <dependency>\n             <groupId>org.apache.openjpa</groupId>\n-            <artifactId>openjpa</artifactId>\n+            <artifactId>openjpa-kernel</artifactId>\n+            <version>@pom.version@</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.openjpa</groupId>\n+            <artifactId>openjpa-jdbc</artifactId>\n+            <version>@pom.version@</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.openjpa</groupId>\n+            <artifactId>openjpa-persistence</artifactId>\n             <version>@pom.version@</version>\n         </dependency>\n "}]}

