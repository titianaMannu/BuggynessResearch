{"sha":"913e54c93c2b03adadfb505ce4374c5de3f8818e","node_id":"MDY6Q29tbWl0MjA2MzY0OjkxM2U1NGM5M2MyYjAzYWRhZGZiNTA1Y2U0Mzc0YzVkZTNmODgxOGU=","commit":{"author":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-09-13T23:23:22Z"},"committer":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-09-13T23:23:22Z"},"message":"No need to beginOperation (and especially sync with trans) in\ninternal isTransactionEnding method.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@443164 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"08f317d75996828e49d6fa84c0ecce884f3ad5a4","url":"https://api.github.com/repos/apache/openjpa/git/trees/08f317d75996828e49d6fa84c0ecce884f3ad5a4"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/913e54c93c2b03adadfb505ce4374c5de3f8818e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/913e54c93c2b03adadfb505ce4374c5de3f8818e","html_url":"https://github.com/apache/openjpa/commit/913e54c93c2b03adadfb505ce4374c5de3f8818e","comments_url":"https://api.github.com/repos/apache/openjpa/commits/913e54c93c2b03adadfb505ce4374c5de3f8818e/comments","author":null,"committer":null,"parents":[{"sha":"cfcca495210ecd8e8656dccf8fb892b808707262","url":"https://api.github.com/repos/apache/openjpa/commits/cfcca495210ecd8e8656dccf8fb892b808707262","html_url":"https://github.com/apache/openjpa/commit/cfcca495210ecd8e8656dccf8fb892b808707262"}],"stats":{"total":13,"additions":3,"deletions":10},"files":[{"sha":"9b47499bf8c0108b4a373cd5a2843d9f1cc3ab9e","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","status":"modified","additions":2,"deletions":7,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/913e54c93c2b03adadfb505ce4374c5de3f8818e/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/913e54c93c2b03adadfb505ce4374c5de3f8818e/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java?ref=913e54c93c2b03adadfb505ce4374c5de3f8818e","patch":"@@ -1642,16 +1642,11 @@ public boolean isStoreActive() {\n     }\n \n     /**\n-     * Return whether the given transaction is ending, i.e. in the 2nd phase\n+     * Return whether the current transaction is ending, i.e. in the 2nd phase\n      * of a commit or rollback\n      */\n     boolean isTransactionEnding() {\n-        beginOperation(true);\n-        try {\n-            return (_flags & FLAG_TRANS_ENDING) != 0;\n-        } finally {\n-            endOperation();\n-        }\n+        return (_flags & FLAG_TRANS_ENDING) != 0;\n     }\n \n     public boolean beginOperation(boolean syncTrans) {"},{"sha":"270b724476c4cb88007253e2c845110ccc7c7e6d","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/913e54c93c2b03adadfb505ce4374c5de3f8818e/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/913e54c93c2b03adadfb505ce4374c5de3f8818e/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java?ref=913e54c93c2b03adadfb505ce4374c5de3f8818e","patch":"@@ -823,9 +823,7 @@ void beforeRead(int field) {\n         if (field != -1 && _meta.getField(field).isPrimaryKey())\n             return;\n \n-        boolean active = _broker.isActive();\n-        boolean ending = _broker.isTransactionEnding();\n-        if (active && !ending) {\n+        if (_broker.isActive() && !_broker.isTransactionEnding()) {\n             if (_broker.getOptimistic())\n                 setPCState(_state.beforeOptimisticRead(this, field));\n             else"}]}

