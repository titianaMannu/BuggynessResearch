{"sha":"9174b3f1742e0d17eeaa874690cf2dca2752b97d","node_id":"MDY6Q29tbWl0MjA2MzY0OjkxNzRiM2YxNzQyZTBkMTdlZWFhODc0NjkwY2YyZGNhMjc1MmI5N2Q=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2008-07-28T21:56:58Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2008-07-28T21:56:58Z"},"message":"OPENJPA-44: Support 'metadata-complete' attribute to ignore class-level annotations.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@680520 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"08d71f6e4cb8d7b59321f4f481afebfbf7dcb5ae","url":"https://api.github.com/repos/apache/openjpa/git/trees/08d71f6e4cb8d7b59321f4f481afebfbf7dcb5ae"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/9174b3f1742e0d17eeaa874690cf2dca2752b97d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/9174b3f1742e0d17eeaa874690cf2dca2752b97d","html_url":"https://github.com/apache/openjpa/commit/9174b3f1742e0d17eeaa874690cf2dca2752b97d","comments_url":"https://api.github.com/repos/apache/openjpa/commits/9174b3f1742e0d17eeaa874690cf2dca2752b97d/comments","author":null,"committer":null,"parents":[{"sha":"64dbe4c9241e0360819a7e6fa77ead4d35d9d295","url":"https://api.github.com/repos/apache/openjpa/commits/64dbe4c9241e0360819a7e6fa77ead4d35d9d295","html_url":"https://github.com/apache/openjpa/commit/64dbe4c9241e0360819a7e6fa77ead4d35d9d295"}],"stats":{"total":26,"additions":21,"deletions":5},"files":[{"sha":"5accd8db766e3262df71620b7f9d7f29fafc279b","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","status":"modified","additions":21,"deletions":5,"changes":26,"blob_url":"https://github.com/apache/openjpa/blob/9174b3f1742e0d17eeaa874690cf2dca2752b97d/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","raw_url":"https://github.com/apache/openjpa/raw/9174b3f1742e0d17eeaa874690cf2dca2752b97d/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java?ref=9174b3f1742e0d17eeaa874690cf2dca2752b97d","patch":"@@ -174,6 +174,7 @@\n     private Class _listener = null;\n     private Collection<LifecycleCallbacks>[] _callbacks = null;\n     private int[] _highs = null;\n+    private boolean _isXMLMappingMetaDataComplete = false;\n \n     /**\n      * Constructor; supply configuration.\n@@ -477,8 +478,10 @@ protected boolean startSystemElement(String name, Attributes attrs)\n             }\n         } else if (tag == ELEM_PU_META || tag == ELEM_PU_DEF)\n             ret = isMetaDataMode();\n-        else if (tag == ELEM_XML_MAP_META_COMPLETE)\n+        else if (tag == ELEM_XML_MAP_META_COMPLETE) {\n             setAnnotationParser(null);\n+            _isXMLMappingMetaDataComplete = true;\n+        }\n         else if (tag == ELEM_ACCESS)\n             ret = _mode != MODE_QUERY;\n         else if (tag == ELEM_LISTENER)\n@@ -718,16 +721,30 @@ protected void endClassMappingElement(String name)\n         throws SAXException {\n     }\n \n+    boolean isMetaDataComplete(Attributes attrs) {\n+    \treturn attrs != null \n+    \t    && \"true\".equals(attrs.getValue(\"metadata-complete\"));\n+    }\n+    \n+    void resetAnnotationParser() {\n+    \tsetAnnotationParser(((PersistenceMetaDataFactory)getRepository()\n+    \t\t\t.getMetaDataFactory()).getAnnotationParser());\n+    }\n+    \n     @Override\n     protected boolean startClass(String elem, Attributes attrs)\n         throws SAXException {\n         super.startClass(elem, attrs);\n+        if (isMetaDataComplete(attrs)) {\n+        \tsetAnnotationParser(null);\n+        } else if (!_isXMLMappingMetaDataComplete){\n+        \tresetAnnotationParser();\n+        }\n \n         // query mode only?\n         _cls = classForName(currentClassName());\n         if (_mode == MODE_QUERY) {\n-            if (_parser != null &&\n-                !\"true\".equals(attrs.getValue(\"metadata-complete\")))\n+            if (_parser != null)\n                 _parser.parse(_cls);\n             return true;\n         }\n@@ -765,8 +782,7 @@ protected boolean startClass(String elem, Attributes attrs)\n             meta.setSourceMode(MODE_NONE);\n \n             // parse annotations first so XML overrides them\n-            if (_parser != null &&\n-                !\"true\".equals(attrs.getValue(\"metadata-complete\")))\n+            if (_parser != null)\n                 _parser.parse(_cls);\n         }\n "}]}

