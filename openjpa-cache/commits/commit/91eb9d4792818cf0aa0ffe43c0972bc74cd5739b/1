{"sha":"91eb9d4792818cf0aa0ffe43c0972bc74cd5739b","node_id":"MDY6Q29tbWl0MjA2MzY0OjkxZWI5ZDQ3OTI4MThjZjBhYTBmZmU0M2MwOTcyYmM3NGNkNTczOWI=","commit":{"author":{"name":"Kevin W. Sutter","email":"kwsutter@apache.org","date":"2012-02-08T00:52:32Z"},"committer":{"name":"Kevin W. Sutter","email":"kwsutter@apache.org","date":"2012-02-08T00:52:32Z"},"message":"OPENJPA-2122.  The conditional to check for the proper Java 7 major version (51) was incorrect.  I also updated how we invoked the ASM hook so that the Trace message in the finally block would output the correct number of bytes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1241719 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"b117210256790c9b9c09602667f657aaa903e5f9","url":"https://api.github.com/repos/apache/openjpa/git/trees/b117210256790c9b9c09602667f657aaa903e5f9"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/91eb9d4792818cf0aa0ffe43c0972bc74cd5739b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/91eb9d4792818cf0aa0ffe43c0972bc74cd5739b","html_url":"https://github.com/apache/openjpa/commit/91eb9d4792818cf0aa0ffe43c0972bc74cd5739b","comments_url":"https://api.github.com/repos/apache/openjpa/commits/91eb9d4792818cf0aa0ffe43c0972bc74cd5739b/comments","author":null,"committer":null,"parents":[{"sha":"647ab63101243b0b4964f8334828e1acfa0b5019","url":"https://api.github.com/repos/apache/openjpa/commits/647ab63101243b0b4964f8334828e1acfa0b5019","html_url":"https://github.com/apache/openjpa/commit/647ab63101243b0b4964f8334828e1acfa0b5019"}],"stats":{"total":9,"additions":6,"deletions":3},"files":[{"sha":"9cc9df473d22dad68ad487f749c4c45e7ef77e24","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/enhance/AsmAdaptor.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/91eb9d4792818cf0aa0ffe43c0972bc74cd5739b/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/AsmAdaptor.java","raw_url":"https://github.com/apache/openjpa/raw/91eb9d4792818cf0aa0ffe43c0972bc74cd5739b/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/AsmAdaptor.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/AsmAdaptor.java?ref=91eb9d4792818cf0aa0ffe43c0972bc74cd5739b","patch":"@@ -74,7 +74,7 @@ public static void write(BCClass bc, File outFile) throws IOException {\n     }\n \n     public static byte[] toByteArray(BCClass bc, byte[] returnBytes) throws IOException {\n-        if (returnBytes.length >= 8 && (returnBytes[6] << 8 + returnBytes[7]) >= Java7_MajorVersion) {\n+        if (bc.getMajorVersion() >= Java7_MajorVersion) {\n             returnBytes = toJava7ByteArray(bc, returnBytes);\n         }\n         return returnBytes;"},{"sha":"c4f0e67ce65467ca7663a2a3fbd303037db80238","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCClassFileTransformer.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/91eb9d4792818cf0aa0ffe43c0972bc74cd5739b/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCClassFileTransformer.java","raw_url":"https://github.com/apache/openjpa/raw/91eb9d4792818cf0aa0ffe43c0972bc74cd5739b/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCClassFileTransformer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCClassFileTransformer.java?ref=91eb9d4792818cf0aa0ffe43c0972bc74cd5739b","patch":"@@ -30,6 +30,8 @@\n import org.apache.openjpa.lib.util.Options;\n import org.apache.openjpa.meta.MetaDataRepository;\n import org.apache.openjpa.util.GeneralException;\n+\n+import serp.bytecode.BCClass;\n import serp.bytecode.Project;\n import serp.bytecode.lowlevel.ConstantPoolTable;\n \n@@ -150,8 +152,9 @@ public PCClassFileTransformer(MetaDataRepository repos,\n \n             if (enhancer.run() == PCEnhancer.ENHANCE_NONE)\n                 return null;\n-            returnBytes = enhancer.getPCBytecode().toByteArray();\n-            return AsmAdaptor.toByteArray(enhancer.getPCBytecode(), returnBytes);\n+            BCClass pcb = enhancer.getPCBytecode();\n+            returnBytes = AsmAdaptor.toByteArray(pcb, pcb.toByteArray());\n+            return returnBytes;\n         } catch (Throwable t) {\n             _log.warn(_loc.get(\"cft-exception-thrown\", className), t);\n             if (t instanceof RuntimeException)"}]}

