{"sha":"92343313fbb0b935fbbc0cfb32bfc14df6b27aac","node_id":"MDY6Q29tbWl0MjA2MzY0OjkyMzQzMzEzZmJiMGI5MzVmYmJjMGNmYjMyYmZjMTRkZjZiMjdhYWM=","commit":{"author":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-11-07T18:37:33Z"},"committer":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-11-07T18:37:33Z"},"message":"Fix recently-introduced bugs in conversion between JPA facades and underlying\ncomponents.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@472193 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"9f55dae05cb7516c67b8b90e93bb3cc932954031","url":"https://api.github.com/repos/apache/openjpa/git/trees/9f55dae05cb7516c67b8b90e93bb3cc932954031"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/92343313fbb0b935fbbc0cfb32bfc14df6b27aac","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/92343313fbb0b935fbbc0cfb32bfc14df6b27aac","html_url":"https://github.com/apache/openjpa/commit/92343313fbb0b935fbbc0cfb32bfc14df6b27aac","comments_url":"https://api.github.com/repos/apache/openjpa/commits/92343313fbb0b935fbbc0cfb32bfc14df6b27aac/comments","author":null,"committer":null,"parents":[{"sha":"05f7fac8637ae3f5c524e1aaf35ebd4f09798db8","url":"https://api.github.com/repos/apache/openjpa/commits/05f7fac8637ae3f5c524e1aaf35ebd4f09798db8","html_url":"https://github.com/apache/openjpa/commit/05f7fac8637ae3f5c524e1aaf35ebd4f09798db8"}],"stats":{"total":40,"additions":32,"deletions":8},"files":[{"sha":"9208395c86dc24aeafce9b947a7214b006ddb42e","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/DiscriminatorMappingInfo.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/92343313fbb0b935fbbc0cfb32bfc14df6b27aac/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/DiscriminatorMappingInfo.java","raw_url":"https://github.com/apache/openjpa/raw/92343313fbb0b935fbbc0cfb32bfc14df6b27aac/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/DiscriminatorMappingInfo.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/DiscriminatorMappingInfo.java?ref=92343313fbb0b935fbbc0cfb32bfc14df6b27aac","patch":"@@ -79,7 +79,7 @@ public Object getValue(Discriminator discrim, boolean adapt) {\n             }\n         }\n         if (\"null\".equalsIgnoreCase(_value))\n-            return (Discriminator.NULL);\n+            return Discriminator.NULL;\n \n         // strip quotes\n         if (_value.length() > 0 && _value.charAt(0) == '\\'')"},{"sha":"c8c2eaa2c9877ef61715ce0149d0864cecdfa6cd","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/ValueMapDiscriminatorStrategy.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/92343313fbb0b935fbbc0cfb32bfc14df6b27aac/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/ValueMapDiscriminatorStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/92343313fbb0b935fbbc0cfb32bfc14df6b27aac/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/ValueMapDiscriminatorStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/ValueMapDiscriminatorStrategy.java?ref=92343313fbb0b935fbbc0cfb32bfc14df6b27aac","patch":"@@ -93,9 +93,8 @@ protected Class getClass(Object val, JDBCStore store)\n         if (cls != null)\n             return cls;\n         throw new ClassNotFoundException(_loc.get(\"unknown-discrim-value\",\n-            new Object[]{ str,\n-                disc.getClassMapping().getDescribedType().getName(),\n-                new TreeSet(_vals.keySet()) }).getMessage());\n+            new Object[]{ str, disc.getClassMapping().getDescribedType().\n+            getName(), new TreeSet(_vals.keySet()) }).getMessage());\n     }\n \n     /**\n@@ -123,6 +122,8 @@ public void map(boolean adapt) {\n             throw new MetaDataException(_loc.get(\"no-discrim-value\",\n                 disc.getClassMapping()));\n \n+        // we set the value before mapping to use to calculate the template\n+        // column's java type\n         disc.setValue(val);\n         super.map(adapt);\n     }"},{"sha":"ccf29bfe723f5162e1f9ea994dadc7624d70566f","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAPersistence.java","status":"modified","additions":23,"deletions":4,"changes":27,"blob_url":"https://github.com/apache/openjpa/blob/92343313fbb0b935fbbc0cfb32bfc14df6b27aac/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAPersistence.java","raw_url":"https://github.com/apache/openjpa/raw/92343313fbb0b935fbbc0cfb32bfc14df6b27aac/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAPersistence.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAPersistence.java?ref=92343313fbb0b935fbbc0cfb32bfc14df6b27aac","patch":"@@ -85,8 +85,17 @@\n     public static BrokerFactory toBrokerFactory(EntityManagerFactory emf) {\n         if (emf == null)\n             return null;\n-        emf = (EntityManagerFactory) \n-            ((OpenJPAEntityManagerFactory) emf).getUserObject(EMF_KEY);        \n+        if (!(emf instanceof EntityManagerFactoryImpl)) {\n+            Class c = emf.getClass();\n+            try {\n+                // either cast here may fail\n+                emf = (EntityManagerFactoryImpl) ((OpenJPAEntityManagerFactory)\n+                    emf).getUserObject(EMF_KEY);\n+            } catch (ClassCastException cce) {\n+                throw new ArgumentException(_loc.get\n+                    (\"cant-convert-brokerfactory\", c), null, null, false);\n+            }\n+        }\n         return ((EntityManagerFactoryImpl) emf).getBrokerFactory();\n     }\n \n@@ -122,8 +131,18 @@ public static OpenJPAEntityManager toEntityManager(Broker broker) {\n     public static Broker toBroker(EntityManager em) {\n         if (em == null)\n             return null;\n-        em = (EntityManager) ((OpenJPAEntityManager) em).getUserObject(EM_KEY);\n-        return (em == null) ? null : ((EntityManagerImpl) em).getBroker();\n+        if (!(em instanceof EntityManagerImpl)) {\n+            Class c = em.getClass();\n+            try {\n+                // either cast here may fail\n+                em = (EntityManagerImpl) ((OpenJPAEntityManager) em).\n+                    getUserObject(EM_KEY);\n+            } catch (ClassCastException cce) {\n+                throw new ArgumentException(_loc.get(\"cant-convert-broker\", c),\n+                    null, null, false);\n+            }\n+        }\n+        return ((EntityManagerImpl) em).getBroker();\n     }\n \n     /**"},{"sha":"46c688d54642af8d0860266ec166f309968089e1","filename":"openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/92343313fbb0b935fbbc0cfb32bfc14df6b27aac/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/92343313fbb0b935fbbc0cfb32bfc14df6b27aac/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties?ref=92343313fbb0b935fbbc0cfb32bfc14df6b27aac","patch":"@@ -90,6 +90,10 @@ unloadable-provider: WARNING: Unable to load persistence provider \"{0}\" due \\\n     to \"{1}\"\n unrecognized-provider: WARNING: Found unrecognized persistence provider \"{0}\" \\\n     in place of OpenJPA provider.  This provider's properties will not be used.\n+cant-convert-brokerfactory: Unable to convert EntityManagerFactory of type \\\n+    \"{0}\" into a BrokerFactory.\n+cant-convert-broker: Unable to convert EntityManager of type \"{0}\" into a \\\n+    Broker.\n EntityManagerFactory-name: EntityManagerFactory implementation\n EntityManagerFactory-desc: Allows extension of standard \\\n     org.apache.openjpa.persistence.EntityManagerFactoryImpl for custom behavior."}]}

