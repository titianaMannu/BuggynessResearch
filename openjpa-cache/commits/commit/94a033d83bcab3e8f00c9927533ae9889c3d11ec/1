{"sha":"94a033d83bcab3e8f00c9927533ae9889c3d11ec","node_id":"MDY6Q29tbWl0MjA2MzY0Ojk0YTAzM2Q4M2JjYWIzZThmMDBjOTkyNzUzM2FlOTg4OWMzZDExZWM=","commit":{"author":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2020-07-23T12:05:56Z"},"committer":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2020-07-23T12:06:52Z"},"message":"OPENJPA-2821 use AsmAdapter for subclassing\n\nto write proper java8 code","tree":{"sha":"7588b42fa498fc475b6913efa132cd8d7943f3b9","url":"https://api.github.com/repos/apache/openjpa/git/trees/7588b42fa498fc475b6913efa132cd8d7943f3b9"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/94a033d83bcab3e8f00c9927533ae9889c3d11ec","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/94a033d83bcab3e8f00c9927533ae9889c3d11ec","html_url":"https://github.com/apache/openjpa/commit/94a033d83bcab3e8f00c9927533ae9889c3d11ec","comments_url":"https://api.github.com/repos/apache/openjpa/commits/94a033d83bcab3e8f00c9927533ae9889c3d11ec/comments","author":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"committer":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"parents":[{"sha":"ab6e0ed4b46f7e3ef59c8ab74b3e9de4fdeff8b9","url":"https://api.github.com/repos/apache/openjpa/commits/ab6e0ed4b46f7e3ef59c8ab74b3e9de4fdeff8b9","html_url":"https://github.com/apache/openjpa/commit/ab6e0ed4b46f7e3ef59c8ab74b3e9de4fdeff8b9"}],"stats":{"total":21,"additions":20,"deletions":1},"files":[{"sha":"6bb26d928ec0c34de3b91f542bd8b5272b6f676c","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/enhance/AsmAdaptor.java","status":"modified","additions":14,"deletions":0,"changes":14,"blob_url":"https://github.com/apache/openjpa/blob/94a033d83bcab3e8f00c9927533ae9889c3d11ec/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/AsmAdaptor.java","raw_url":"https://github.com/apache/openjpa/raw/94a033d83bcab3e8f00c9927533ae9889c3d11ec/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/AsmAdaptor.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/AsmAdaptor.java?ref=94a033d83bcab3e8f00c9927533ae9889c3d11ec","patch":"@@ -81,6 +81,20 @@ public static void write(BCClass bc, File outFile) throws IOException {\n         }\n     }\n \n+    public static void write(BCClass bc, OutputStream os) throws IOException {\n+        if (bc.getMajorVersion() < Java7_MajorVersion) {\n+            bc.write(os);\n+        }\n+        else {\n+            try {\n+                writeJava7(bc, os);\n+            } finally {\n+                os.flush();\n+                os.close();\n+            }\n+        }\n+    }\n+\n     public static byte[] toByteArray(BCClass bc, byte[] returnBytes) throws IOException {\n         if (bc.getMajorVersion() >= Java7_MajorVersion) {\n             returnBytes = toJava7ByteArray(bc, returnBytes);"},{"sha":"0a7d3769c1257e49a54b0c056a4e5854348a0279","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/enhance/ManagedClassSubclasser.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/94a033d83bcab3e8f00c9927533ae9889c3d11ec/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/ManagedClassSubclasser.java","raw_url":"https://github.com/apache/openjpa/raw/94a033d83bcab3e8f00c9927533ae9889c3d11ec/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/ManagedClassSubclasser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/ManagedClassSubclasser.java?ref=94a033d83bcab3e8f00c9927533ae9889c3d11ec","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.openjpa.enhance;\n \n+import java.io.ByteArrayOutputStream;\n import java.io.File;\n import java.io.IOException;\n import java.util.ArrayList;\n@@ -142,6 +143,8 @@ public void write(BCClass bc) throws IOException {\n             if (redefine) {\n                 enhancer.setRedefine(true);\n             }\n+\n+            // we need to create subclasses because class retransform doesn't allow to change the interfaces of a previously loaded class\n             enhancer.setCreateSubclass(true);\n             enhancer.setAddDefaultConstructor(true);\n \n@@ -276,7 +279,9 @@ private static void write(BCClass bc, PCEnhancer enhancer,\n             if (enhancer.isAlreadyRedefined())\n                 ints.add(bc.getType());\n             else {\n-                map.put(bc.getType(), bc.toByteArray());\n+                ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+                AsmAdaptor.write(bc, baos);\n+                map.put(bc.getType(), baos.toByteArray());\n                 debugBytecodes(bc);\n             }\n         } else {"}]}

