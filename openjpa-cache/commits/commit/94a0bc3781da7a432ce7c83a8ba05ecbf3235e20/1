{"sha":"94a0bc3781da7a432ce7c83a8ba05ecbf3235e20","node_id":"MDY6Q29tbWl0MjA2MzY0Ojk0YTBiYzM3ODFkYTdhNDMyY2U3YzgzYThiYTA1ZWNiZjMyMzVlMjA=","commit":{"author":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-09-09T21:23:48Z"},"committer":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-09-09T21:23:48Z"},"message":"OPENJPA-1270: check in test case for this JIRA\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@813125 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"edb2c5db9682bd30c1518a51fe4a89e800b42ef3","url":"https://api.github.com/repos/apache/openjpa/git/trees/edb2c5db9682bd30c1518a51fe4a89e800b42ef3"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/94a0bc3781da7a432ce7c83a8ba05ecbf3235e20","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/94a0bc3781da7a432ce7c83a8ba05ecbf3235e20","html_url":"https://github.com/apache/openjpa/commit/94a0bc3781da7a432ce7c83a8ba05ecbf3235e20","comments_url":"https://api.github.com/repos/apache/openjpa/commits/94a0bc3781da7a432ce7c83a8ba05ecbf3235e20/comments","author":null,"committer":null,"parents":[{"sha":"ed40459a2a4f9bac6e449b5697c995d465d854a2","url":"https://api.github.com/repos/apache/openjpa/commits/ed40459a2a4f9bac6e449b5697c995d465d854a2","html_url":"https://github.com/apache/openjpa/commit/ed40459a2a4f9bac6e449b5697c995d465d854a2"}],"stats":{"total":234,"additions":233,"deletions":1},"files":[{"sha":"2253a8a4544fa845f3aa80b39f55bdb57edfa5d1","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/EntityA.java","status":"added","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/apache/openjpa/blob/94a0bc3781da7a432ce7c83a8ba05ecbf3235e20/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/EntityA.java","raw_url":"https://github.com/apache/openjpa/raw/94a0bc3781da7a432ce7c83a8ba05ecbf3235e20/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/EntityA.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/EntityA.java?ref=94a0bc3781da7a432ce7c83a8ba05ecbf3235e20","patch":"@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.compat;\n+\n+import javax.persistence.Basic;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.Table;\n+\n+@Entity\n+@Table(name=\"MPSP_A\")\n+public class EntityA extends MappedSuper {\n+\n+\t@Column(length=30)\n+    @Basic(fetch=FetchType.LAZY)\n+\tString name;\n+\t\n+\n+\tpublic String getName() {\n+\t\treturn name;\n+\t}\n+\t\n+\tpublic void setName(String name) {\n+\t\tthis.name = name;\n+\t}\n+\t\n+}\n+"},{"sha":"c9744c0bf6aaeb8644ed3982b58a3ece73505e4a","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/EntityB.java","status":"added","additions":69,"deletions":0,"changes":69,"blob_url":"https://github.com/apache/openjpa/blob/94a0bc3781da7a432ce7c83a8ba05ecbf3235e20/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/EntityB.java","raw_url":"https://github.com/apache/openjpa/raw/94a0bc3781da7a432ce7c83a8ba05ecbf3235e20/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/EntityB.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/EntityB.java?ref=94a0bc3781da7a432ce7c83a8ba05ecbf3235e20","patch":"@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.compat;\n+\n+import javax.persistence.Basic;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.Id;\n+import javax.persistence.OneToOne;\n+import javax.persistence.Table;\n+\n+@Entity\n+@Table(name=\"MPSP_B\")\n+public class EntityB {\n+\n+\t@Id\n+\tint id;\n+\t\n+\t@Column(length=30)\n+    @Basic(fetch=FetchType.LAZY)\n+\tString name;\n+\t\n+\t@OneToOne\n+\tEntityA entityA;\n+\t\n+\tpublic String getName() {\n+\t\treturn name;\n+\t}\n+\t\n+\tpublic void setName(String name) {\n+\t\tthis.name = name;\n+\t}\n+\t\n+\tpublic int getId() {\n+\t\treturn id;\n+\t}\n+\t\n+\tpublic void setId(int id) {\n+\t\tthis.id = id;\n+\t}\n+\n+    public EntityA getEntityA() {\n+        return entityA;\n+    }\n+    \n+    public void setEntityA(EntityA entityA) {\n+        this.entityA = entityA;\n+    }\n+    \n+\n+}\n+"},{"sha":"a93def424957da6bea0a74108c27850a9e50d319","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/MappedSuper.java","status":"added","additions":77,"deletions":0,"changes":77,"blob_url":"https://github.com/apache/openjpa/blob/94a0bc3781da7a432ce7c83a8ba05ecbf3235e20/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/MappedSuper.java","raw_url":"https://github.com/apache/openjpa/raw/94a0bc3781da7a432ce7c83a8ba05ecbf3235e20/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/MappedSuper.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/MappedSuper.java?ref=94a0bc3781da7a432ce7c83a8ba05ecbf3235e20","patch":"@@ -0,0 +1,77 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.compat;\n+\n+import java.util.Date;\n+\n+import javax.persistence.Id;\n+import javax.persistence.MappedSuperclass;\n+import javax.persistence.OneToOne;\n+import javax.persistence.Temporal;\n+import javax.persistence.TemporalType;\n+import javax.persistence.Version;\n+\n+@MappedSuperclass\n+public abstract class MappedSuper {\n+\tprivate static final long serialVersionUID = -3613354849799979342L;\n+    @Temporal(TemporalType.TIMESTAMP)\n+\tprivate Date lastUpdateDate;\n+\n+    @Version\n+\tprivate int version;\n+\t\n+    @Id\n+    private int id;\n+    \n+    @OneToOne(mappedBy=\"entityA\") \n+    EntityB entityB;\n+    \n+\tpublic int getVersion() {\n+\t\treturn version;\n+\t}\n+\n+\tpublic void setVersion(int version) {\n+\t\tthis.version = version;\n+\t}\n+\n+\tpublic Date getLastUpdateDate() {\n+\t\treturn lastUpdateDate;\n+\t}\n+\n+\tpublic void setLastUpdateDate(Date lastUpdateDate) {\n+\t\tthis.lastUpdateDate = lastUpdateDate;\n+\t}\n+\t\n+\tpublic int getId() {\n+\t    return id;\n+\t}\n+\n+\tpublic void setId(int id) {\n+\t    this.id = id;\n+\t}\n+\n+    public EntityB getEntityB() {\n+        return entityB;\n+    }\n+    \n+    public void setEntityB(EntityB entityB) {\n+        this.entityB = entityB;\n+    }\n+\n+}"},{"sha":"3dbff4b481a49348fc580fce7cd01b5de40af2f5","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/TestSpecCompatibilityOptions.java","status":"modified","additions":38,"deletions":1,"changes":39,"blob_url":"https://github.com/apache/openjpa/blob/94a0bc3781da7a432ce7c83a8ba05ecbf3235e20/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/TestSpecCompatibilityOptions.java","raw_url":"https://github.com/apache/openjpa/raw/94a0bc3781da7a432ce7c83a8ba05ecbf3235e20/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/TestSpecCompatibilityOptions.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/TestSpecCompatibilityOptions.java?ref=94a0bc3781da7a432ce7c83a8ba05ecbf3235e20","patch":"@@ -18,12 +18,13 @@\n  */\n package org.apache.openjpa.persistence.compat;\n \n+import javax.persistence.EntityManager;\n+\n import org.apache.openjpa.conf.Compatibility;\n import org.apache.openjpa.conf.Specification;\n import org.apache.openjpa.persistence.OpenJPAEntityManagerFactorySPI;\n import org.apache.openjpa.persistence.OpenJPAPersistence;\n import org.apache.openjpa.persistence.test.AbstractCachedEMFTestCase;\n-import org.apache.openjpa.persistence.test.PersistenceTestCase;\n \n public class TestSpecCompatibilityOptions \n extends AbstractCachedEMFTestCase {\n@@ -76,4 +77,40 @@ public void testJPA2CompatibilityOptions() {\n         \n         emf.close();\n     }\n+\n+    /*\n+     * Per JPA 2.0, Relationships in mapped superclass must be unidirectional.\n+     * An exceptioin will be thrown when a bi-directional relation is detected in\n+     * a mapped superclass. \n+     */\n+    public void testMappedSuperClass() {\n+        OpenJPAEntityManagerFactorySPI emf =\n+            (OpenJPAEntityManagerFactorySPI)OpenJPAPersistence.\n+                createEntityManagerFactory(\"persistence_2_0\",\n+                    \"org/apache/openjpa/persistence/compat/\" +\n+                    \"persistence_2_0.xml\");\n+        EntityManager em = null;\n+        try {\n+            em = emf.createEntityManager();\n+            EntityA a = new EntityA();\n+            a.setId(1);\n+            EntityB b = new EntityB();\n+            b.setId(1);\n+            a.setEntityB(b);\n+            b.setEntityA(a);\n+            em.getTransaction().begin();\n+            em.persist(a);\n+            em.persist(b);\n+            em.getTransaction().commit();\n+            em.close();\n+            fail(\"An exceptioin will be thrown for a bi-directional relation declared in mapped superclass\");\n+        } catch (org.apache.openjpa.persistence.ArgumentException e) {\n+            if (em != null) {\n+                em.getTransaction().rollback();\n+                em.close();\n+            }\n+        } finally {\n+            emf.close();\n+        }\n+    }\n }"},{"sha":"df277104acd11615780688924fa5b5e33a4e9ea9","filename":"openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/compat/persistence_2_0.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/94a0bc3781da7a432ce7c83a8ba05ecbf3235e20/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/compat/persistence_2_0.xml","raw_url":"https://github.com/apache/openjpa/raw/94a0bc3781da7a432ce7c83a8ba05ecbf3235e20/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/compat/persistence_2_0.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/compat/persistence_2_0.xml?ref=94a0bc3781da7a432ce7c83a8ba05ecbf3235e20","patch":"@@ -24,5 +24,9 @@\n         http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\"\n     version=\"2.0\" >\n     <persistence-unit name=\"persistence_2_0\" transaction-type=\"RESOURCE_LOCAL\">\n+\t<class>org.apache.openjpa.persistence.compat.EntityA</class>\n+\t<class>org.apache.openjpa.persistence.compat.EntityB</class>\n+\t<class>org.apache.openjpa.persistence.compat.MappedSuper</class>\n+    \n     </persistence-unit>\n </persistence>\n\\ No newline at end of file"}]}

