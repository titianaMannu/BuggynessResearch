{"sha":"94a1323dfb8852fb8bfcc7dcde9a029e579b0872","node_id":"MDY6Q29tbWl0MjA2MzY0Ojk0YTEzMjNkZmI4ODUyZmI4YmZjYzdkY2RlOWEwMjllNTc5YjA4NzI=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-03-22T17:03:17Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-03-22T17:03:17Z"},"message":"OPENJPA-1406 Replace tabs with spaces and fix identing\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@926190 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"7c1c9f05349605e1b4739c88c4f67ae8c690397f","url":"https://api.github.com/repos/apache/openjpa/git/trees/7c1c9f05349605e1b4739c88c4f67ae8c690397f"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/94a1323dfb8852fb8bfcc7dcde9a029e579b0872","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/94a1323dfb8852fb8bfcc7dcde9a029e579b0872","html_url":"https://github.com/apache/openjpa/commit/94a1323dfb8852fb8bfcc7dcde9a029e579b0872","comments_url":"https://api.github.com/repos/apache/openjpa/commits/94a1323dfb8852fb8bfcc7dcde9a029e579b0872/comments","author":null,"committer":null,"parents":[{"sha":"201d680a0db05dacef0c9d8635e9eb6cfe546c59","url":"https://api.github.com/repos/apache/openjpa/commits/201d680a0db05dacef0c9d8635e9eb6cfe546c59","html_url":"https://github.com/apache/openjpa/commit/201d680a0db05dacef0c9d8635e9eb6cfe546c59"}],"stats":{"total":423,"additions":215,"deletions":208},"files":[{"sha":"8fb70f6ce71716fa4a7b1f94a6c25c71c22d072f","filename":"openjpa-project/src/doc/manual/migration_considerations.xml","status":"modified","additions":215,"deletions":208,"changes":423,"blob_url":"https://github.com/apache/openjpa/blob/94a1323dfb8852fb8bfcc7dcde9a029e579b0872/openjpa-project/src/doc/manual/migration_considerations.xml","raw_url":"https://github.com/apache/openjpa/raw/94a1323dfb8852fb8bfcc7dcde9a029e579b0872/openjpa-project/src/doc/manual/migration_considerations.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/migration_considerations.xml?ref=94a1323dfb8852fb8bfcc7dcde9a029e579b0872","patch":"@@ -15,117 +15,118 @@\n  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  KIND, either express or implied.  See the License for the\n  specific language governing permissions and limitations\n- under the License.   \n+ under the License.\n -->\n <appendix id=\"migration_considerations\" role=\"non-normative\">\n     <title>\n         Migration Considerations\n     </title>\n     <section id=\"jpa_2.0\">\n-    \t<title>\n-    \t\tJPA 2.0\n-    \t</title>\n-    \t<section id=\"jpa_2.0_incompatibilities\">\n-    \t\t<title>\n-    \t\t\tIncompatibilities\n-    \t\t</title>\n-    \t\t<para>\n-    \t\tThe following sections indicate changes that are incompatible between\n-    \t\tOpenJPA 1.x.x releases and the 2.0 release. Some may\n-    \t\trequire application changes. Others can be remedied through the use\n-            of compatibility options.  If your application uses a version 1.0 persistence.xml,\n-            compatibility options will be set appropriately to maintain backward \n-            compatibility.  OpenJPA 2.0 applications using a version 2.0 persistence.xml\n-            and require OpenJPA 1.x.x compatibility may need to configure the appropriate\n-            compatibility options to get the desired behavior.\n-    \t\t</para>\n+        <title>\n+            JPA 2.0\n+        </title>\n+        <section id=\"jpa_2.0_incompatibilities\">\n+            <title>\n+                Incompatibilities\n+            </title>\n+            <para>\n+                The following sections indicate changes that are incompatible\n+                between OpenJPA 1.x.x releases and the 2.0 release. Some may\n+                require application changes. Others can be remedied through the\n+                use of compatibility options.  If your application uses a\n+                version 1.0 persistence.xml, compatibility options will be set\n+                appropriately to maintain backward compatibility.  OpenJPA 2.0\n+                applications using a version 2.0 persistence.xml and require\n+                OpenJPA 1.x.x compatibility may need to configure the\n+                appropriate compatibility options to get the desired behavior.\n+            </para>\n+            <para>\n+                See OPENJPA-1208 for test cases that\n+                demonstrate the behavioral differences.\n+            </para>\n+            <section id=\"getProperties\">\n+                <title>\n+                    getProperties()\n+                </title>\n                 <para>\n-                    See OPENJPA-1208 for test cases that\n-                    demonstrate the behavioral differences.\n+                    The OpenJPAEntityManagerFactory interface getProperties()\n+                    method was changed to return a Map instead of a\n+                    Properties object. This change was made in order to\n+                    support the getProperties() method defined in the 2.0\n+                    JPA specification.\n                 </para>\n-    \t\t<section id=\"getProperties\">\n-    \t\t\t<title>\n-    \t\t\t\tgetProperties()\n-    \t\t\t</title>\n-    \t\t\t<para>\n-    \t\t\t\tThe OpenJPAEntityManagerFactory interface getProperties()\n-    \t\t\t\tmethod was changed to return a Map instead of a\n-    \t\t\t\tProperties object. This change was made in order to\n-    \t\t\t\tsupport the getProperties() method defined in the 2.0\n-    \t\t\t\tJPA specification.\n-    \t\t\t</para>\n                     <para>\n                         See OPENJPA-849 for test cases that\n                         demonstrate the behavioral differences.\n                     </para>\n-    \t\t</section>\n-    \t\t<section id=\"migration_detach_behavior\">\n-    \t\t\t<title>\n-    \t\t\t\tDetach Behavior\n-    \t\t\t</title>\n-    \t\t\t<para>\n-    \t\t\tThe detach behavior has changed in several ways:\n-\t\t\t\t\t<itemizedlist>\n-\t\t\t\t\t\t<listitem>\n-\t\t\t\t\t\t\t<para>\n-\t\t\t\t\t\t\tIn the 1.x.x release, managed entities\n-\t\t\t\t\t\t\twere flushed to the database as part of the\n-\t\t\t\t\t\t\tdetach operation. This is no longer done in\n-\t\t\t\t\t\t\t2.0.\n-\t\t\t\t\t\t\t</para>\n-\t\t\t\t\t\t</listitem>\n-\t\t\t\t\t\t<listitem>\n-\t\t\t\t\t\t\t<para>\n-\t\t\t\t\t\t\tIn the 1.x.x release, entities were copied\n-\t\t\t\t\t\t\tand returned. In 2.0, for those methods\n-\t\t\t\t\t\t\tthat have return values, the original\n-\t\t\t\t\t\t\tentities are returned.\n-\t\t\t\t\t\t\t</para>\n-\t\t\t\t\t\t</listitem>\n-\t\t\t\t\t\t<listitem>\n-\t\t\t\t\t\t\t<para>\n-\t\t\t\t\t\t\tIn the 1.x.x release, managed entities still\n-\t\t\t\t\t\t\texist in the persistent context. In 2.0,\n-\t\t\t\t\t\t\tthey are removed.\n-\t\t\t\t\t\t\t</para>\n-\t\t\t\t\t\t</listitem>\n-\t\t\t\t\t\t<listitem>\n-\t\t\t\t\t\t\t<para>\n-\t\t\t\t\t\t\tIn the 1.x.x release, the detach operation\n-\t\t\t\t\t\t\tis recursively cascaded to all referenced\n-\t\t\t\t\t\t\tentities. In 2.0, the detach operation is\n-\t\t\t\t\t\t\tonly cascade to those entities for which\n-\t\t\t\t\t\t\tCascade=detach has been specified.\n-\t\t\t\t\t\t\t</para>\n-\t\t\t\t\t\t</listitem>\n-\t\t\t\t\t</itemizedlist>\n-    \t\t\t</para>\n-    \t\t\t<para>\n-    \t\t\t\tApplications that use a 1.0 persistence.xml will automatically \n-                    maintain OpenJPA 1.0 behavior.  It is possible for a version 2.0 \n-                    application to revert back to the 1.x.x behavior for\n-    \t\t\t\tsome of these items by setting the openjpa.Compatibility\n-    \t\t\t\tproperty as follows:\n-    \t\t\t\t<simplelist>\n-    \t\t\t\t\t<member>CopyOnDetach=true</member>\n-    \t\t\t\t\t<member>FlushBeforeDetach=true</member>\n-    \t\t\t\t\t<member>CascadeWithDetach=true</member>\n-    \t\t\t\t</simplelist>\n-    \t\t\t</para>\n-    \t\t\t<para>\n-    \t\t\t\tIn addition, a new method has been provided on the\n-    \t\t\t\t<ulink url=\"../javadoc/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n-\t\t\t\t\t<classname>OpenJPAEntityManager</classname></ulink>\n-    \t\t\t\tinterface to return a copy of the entity:\n-    \t\t\t\t<programlisting>\n-\t\t\t\t\tpublic &lt;T&gt; T detachCopy(T pc):\n-\t\t\t\t\t</programlisting>\n-\t\t\t</para>\n-                    <para>\n-                        See OPENJPA-1215 for test cases that\n-                        demonstrate the behavioral differences.\n-                    </para>\n-    \t\t</section>\n+            </section>\n+            <section id=\"migration_detach_behavior\">\n+                <title>\n+                    Detach Behavior\n+                </title>\n+                <para>\n+                    The detach behavior has changed in several ways:\n+                    <itemizedlist>\n+                        <listitem>\n+                            <para>\n+                                In the 1.x.x release, managed entities\n+                                were flushed to the database as part of the\n+                                detach operation. This is no longer done in\n+                                2.0.\n+                            </para>\n+                        </listitem>\n+                        <listitem>\n+                            <para>\n+                                In the 1.x.x release, entities were copied\n+                                and returned. In 2.0, for those methods\n+                                that have return values, the original\n+                                entities are returned.\n+                            </para>\n+                        </listitem>\n+                        <listitem>\n+                            <para>\n+                                In the 1.x.x release, managed entities still\n+                                exist in the persistent context. In 2.0,\n+                                they are removed.\n+                            </para>\n+                        </listitem>\n+                        <listitem>\n+                            <para>\n+                                In the 1.x.x release, the detach operation\n+                                is recursively cascaded to all referenced\n+                                entities. In 2.0, the detach operation is\n+                                only cascade to those entities for which\n+                                Cascade=detach has been specified.\n+                            </para>\n+                        </listitem>\n+                    </itemizedlist>\n+                </para>\n+                <para>\n+                    Applications that use a 1.0 persistence.xml will\n+                    automatically maintain OpenJPA 1.0 behavior.  It is\n+                    possible for a version 2.0 application to revert back to\n+                    the 1.x.x behavior for some of these items by setting the\n+                    openjpa.Compatibility property as follows:\n+                    <simplelist>\n+                        <member>CopyOnDetach=true</member>\n+                        <member>FlushBeforeDetach=true</member>\n+                        <member>CascadeWithDetach=true</member>\n+                    </simplelist>\n+                </para>\n+                <para>\n+                    In addition, a new method has been provided on the\n+                    <ulink url=\"../javadoc/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n+                    <classname>OpenJPAEntityManager</classname></ulink>\n+                    interface to return a copy of the entity:\n+                    <programlisting>\n+    public &lt;T&gt; T detachCopy(T pc):\n+                    </programlisting>\n+                </para>\n+                <para>\n+                    See OPENJPA-1215 for test cases that\n+                    demonstrate the behavioral differences.\n+                </para>\n+            </section>\n             <section id=\"private_persistent_properties\">\n                 <title>\n                     Use of private persistent properties\n@@ -139,10 +140,11 @@\n                     persistent by default.\n                 </para>\n                 <para>\n-                    Applications that use a 1.0 persistence.xml will automatically \n-                    maintain OpenJPA 1.x.x behavior. It is possible for a version 2.0 \n-                    application to revert back to the 1.x.x behavior by setting the \n-                    value of the <literal>openjpa.Compatibility</literal> \n+                    Applications that use a 1.0 persistence.xml will\n+                    automatically maintain OpenJPA 1.x.x behavior. It is\n+                    possible for a version 2.0 application to revert back to\n+                    the 1.x.x behavior by setting the value of the\n+                    <literal>openjpa.Compatibility</literal> \n                     property <literal>PrivatePersistentProperties</literal> to \n                     <literal>true</literal>.  If compile time enhancement is \n                     used, this property must be specified at the time of \n@@ -178,135 +180,140 @@\n                 Disabling AutoOff Collection Tracking\n             </title>\n             <para>\n-                The default behavior of openJPA in tracking collections is that if the number of\n-                modifications to the collection exceeds the current number of elements in\n-                collection then openJPA will disable tracking the collections.\n-                Added a Compatibility property to disable turning off the collection tracking.\n+                The default behavior of openJPA in tracking collections is that\n+                if the number of modifications to the collection exceeds the\n+                current number of elements in collection then openJPA will\n+                disable tracking the collections.  Added a Compatibility\n+                property to disable turning off the collection tracking.\n             </para>\n             <para>\n-                The behavior of Auto disabling of collection tracking can be avoided by setting\n-                the value of the <literal>openjpa.Compatibility</literal>\n-                property <literal>autoOff</literal> to  <literal>false</literal>.\n+                The behavior of Auto disabling of collection tracking can be\n+                avoided by setting the value of the\n+                <literal>openjpa.Compatibility</literal> property\n+                <literal>autoOff</literal> to  <literal>false</literal>.\n                 The default behavior of auto disabling the collection tracking\n-                is not changed. But when the above property is set then the collection tracking\n-                will not be disabled automatically.\n+                is not changed. But when the above property is set then the\n+                collection tracking will not be disabled automatically.\n             </para>\n             <para>\n                 See OPENJPA-1223 and OPENJPA-1163 for test cases that\n                 demonstrate the behavioral differences.\n             </para>\n         </section>\n-    \t<section id=\"internal_differences\">\n-    \t\t<title>\n-    \t\t\tInternal Behavioral Differences\n-    \t\t</title>\n-    \t\t<para>\n-    \t\tThe following sections indicate internal changes between\n-    \t\tOpenJPA 1.x.x releases and the 2.0 release. As these are\n+        <section id=\"internal_differences\">\n+            <title>\n+                Internal Behavioral Differences\n+            </title>\n+            <para>\n+                The following sections indicate internal changes between\n+                OpenJPA 1.x.x releases and the 2.0 release. As these are\n                 internal implementation specific behaviors not covered by\n                 the JPA specification, no changes should be required for\n                 applications that did not use or depend upon OpenJPA specific\n                 APIs or behavior.\n-    \t\t</para>\n-    \t\t<section id=\"getStrategy\">\n-    \t\t\t<title>\n-    \t\t\t\tFieldMapping.getStrategy()\n-    \t\t\t</title>\n-    \t\t\t<para>\n-    \t\t\t\tThe FieldMapping.getStrategy() in OpenJPA 1.x\n-\t\t\t\treturned an instance of RelationFieldStrategy\n-\t\t\t\tfor embded super classes, but will now return an\n-\t\t\t\tEmbedFieldStrategy.\n-\t\t\t</para>\n-\t\t\t<para>\n-                                See OPENJPA-1214 for an\n-\t\t\t\texample test case demonstrating the change.\n-\t\t\t</para>\n-\t\t</section>\n-    \t\t<section id=\"prePostUpdate\">\n-    \t\t\t<title>\n-    \t\t\t\tPreUpdate/PostUpdate Life Cycle Callbacks\n-    \t\t\t</title>\n-    \t\t\t<para>\n-    \t\t\t\tIf an entity was updated between the persist()\n-                                and commit() operations in OpenJPA 1.x, then \n-                                any PreUpdate and PostUpdate life cycle callback\n-                                methods would be executed.  Starting in OpenJPA\n-                                1.3 and 2.0, these callbacks will not get \n-                                executed.\n-\t\t\t</para>\n-\t\t\t<para>\n-                                The JPA 2.0 specification section on \"Semantics\n-                                of the Life Cycle Callback Methods for Entities\"\n-                                has been updated to include a Note that the\n-                                callback behavior for updating an entity after\n-                                the persist operation is implementation specific\n-                                and should not be relied upon.\n-\t\t\t</para>\n-\t\t\t<para>\n-                                See OPENJPA-1182 for an\n-\t\t\t\texample test case demonstrating the change.\n-\t\t\t</para>\n-\t\t</section>\n-    \t\t<section id=\"createemf\">\n-    \t\t\t<title>\n-    \t\t\tcreateEntityManagerFactory Exceptions\t\n-    \t\t\t</title>\n-    \t\t\t<para>\n-    \t\t\t\tThe JPA 2.0 specification section on\n-                                \"Bootstrapping in Java SE Environments\" states\n-                                that persistence providers must return null\n-                                if they are not a qualified provider for the \n-                                given persistence unit.\n-\t\t\t</para>\n-    \t\t\t<para>\n-                                However, OpenJPA may throw a RuntimeException\n-                                if an error occurs while trying to create a\n-                                qualified persistence unit, like for invalid\n-                                openjpa.* specific configuration settings or\n-                                for schema validation failures.\n-\t\t\t</para>\n-    \t\t\t<para>\n-                                If the Apache Geronimo JPA 2.0 Spec APIs are\n-                                used, then any exceptions returned by a\n-                                persistence provider will be wrapped within\n-                                a PersistenceException.  When the JPA 2.0 API\n-                                reference implementation is used, any\n-                                RuntimeExceptions will be returned to the\n-                                calling application without being wrapped.\n-                                Other JPA 2.0 API and implementation providers\n-                                or versions may behave differently.\n-\t\t\t</para>\n-\t\t\t<para>\n-                                See OPENJPA-1203 for more details.\n-\t\t\t</para>\n-\t\t</section>\n+            </para>\n+            <section id=\"getStrategy\">\n+                <title>\n+                    FieldMapping.getStrategy()\n+                </title>\n+                <para>\n+                    The FieldMapping.getStrategy() in OpenJPA 1.x\n+                    returned an instance of RelationFieldStrategy\n+                    for embded super classes, but will now return an\n+                    EmbedFieldStrategy.\n+            </para>\n+            <para>\n+                See OPENJPA-1214 for an\n+                example test case demonstrating the change.\n+            </para>\n+        </section>\n+            <section id=\"prePostUpdate\">\n+                <title>\n+                    PreUpdate/PostUpdate Life Cycle Callbacks\n+                </title>\n+                <para>\n+                    If an entity was updated between the persist()\n+                    and commit() operations in OpenJPA 1.x, then \n+                    any PreUpdate and PostUpdate life cycle callback\n+                    methods would be executed.  Starting in OpenJPA\n+                    1.3 and 2.0, these callbacks will not get executed.\n+                </para>\n+                <para>\n+                    The JPA 2.0 specification section on \"Semantics\n+                    of the Life Cycle Callback Methods for Entities\"\n+                    has been updated to include a Note that the\n+                    callback behavior for updating an entity after\n+                    the persist operation is implementation specific\n+                    and should not be relied upon.\n+                </para>\n+                <para>\n+                    See OPENJPA-1182 for an\n+                    example test case demonstrating the change.\n+                </para>\n+            </section>\n+            <section id=\"createemf\">\n+                <title>\n+                    createEntityManagerFactory Exceptions\n+                </title>\n+                <para>\n+                    The JPA 2.0 specification section on\n+                    \"Bootstrapping in Java SE Environments\" states\n+                    that persistence providers must return null\n+                    if they are not a qualified provider for the \n+                    given persistence unit.\n+                </para>\n+                <para>\n+                    However, OpenJPA may throw a RuntimeException\n+                    if an error occurs while trying to create a\n+                    qualified persistence unit, like for invalid\n+                    openjpa.* specific configuration settings or\n+                    for schema validation failures.\n+                </para>\n+                <para>\n+                    If the Apache Geronimo JPA 2.0 Spec APIs are\n+                    used, then any exceptions returned by a\n+                    persistence provider will be wrapped within\n+                    a PersistenceException.  When the JPA 2.0 API\n+                    reference implementation is used, any\n+                    RuntimeExceptions will be returned to the\n+                    calling application without being wrapped.\n+                    Other JPA 2.0 API and implementation providers\n+                    or versions may behave differently.\n+                </para>\n+                <para>\n+                    See OPENJPA-1203 for more details.\n+                </para>\n+            </section>\n             <section id=\"querycache\">\n                 <title>\n-                openjpa.QueryCache default   \n+                    openjpa.QueryCache default\n                 </title>\n                 <para>\n-                    In previous releases, the default value for the openjpa.QueryCache property was \n-                    <literal>true</literal> when the openjpa.DataCache was enabled.  Depending on application\n-                    characteristics, this default QueryCache enablement actually could negate much of the potential\n-                    gains achieved by using the DataCache.  Thus, the default value for the openjpa.QueryCache\n-                    property will now by <emphasis><literal>false</literal></emphasis>.\n+                    In previous releases, the default value for the\n+                    openjpa.QueryCache property was <literal>true</literal>\n+                    when the openjpa.DataCache was enabled.  Depending on\n+                    application characteristics, this default QueryCache\n+                    enablement actually could negate much of the potential\n+                    gains achieved by using the DataCache.  Thus, the default\n+                    value for the openjpa.QueryCache property will now by\n+                    <emphasis><literal>false</literal></emphasis>.\n                 </para>\n                 <para>\n-                    To re-enable the default QueryCache behavior, you just need to include the following property\n-                    into your persistence.xml configuration.\n-                    \n+                    To re-enable the default QueryCache behavior, you need to\n+                    include the following property in your persistence.xml\n+                    configuration.\n                     <programlisting>\n-                    &lt;property name=\"openjpa.QueryCache\" value=\"true\"/&gt;\n+    &lt;property name=\"openjpa.QueryCache\" value=\"true\"/&gt;\n                     </programlisting>\n                 </para>\n                 <para>\n-                    If your configuration had previously enabled the QueryCache explicitly, then you might have to \n-                    include the <literal>true</literal> value into your configuration (if you relied on the previous \n-                    default).  Otherwise, your current QueryCache enablement will continue to work.\n-                    \n+                    If your configuration had previously enabled the QueryCache\n+                    explicitly, then you might have to include the\n+                    <literal>true</literal> value into your configuration\n+                    (if you relied on the previous default).  Otherwise, your\n+                    current QueryCache enablement will continue to work.\n                     <programlisting>\n-                    &lt;property name=\"openjpa.QueryCache\" value=\"true(CacheSize=1000, SoftReferenceSize=100)\"/&gt;\n+    &lt;property name=\"openjpa.QueryCache\" value=\"true(CacheSize=1000, SoftReferenceSize=100)\"/&gt;\n                     </programlisting>\n                 </para>\n                 <para>"}]}

