{"sha":"963e541fd268a6bf0c64194cf917b5199600a9cb","node_id":"MDY6Q29tbWl0MjA2MzY0Ojk2M2U1NDFmZDI2OGE2YmYwYzY0MTk0Y2Y5MTdiNTE5OTYwMGE5Y2I=","commit":{"author":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-01-29T16:43:44Z"},"committer":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-01-29T16:43:44Z"},"message":"OPENJPA-838: check in testcase\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@738918 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"68cbb85e7a6214bea7f31157499838dedf62ebec","url":"https://api.github.com/repos/apache/openjpa/git/trees/68cbb85e7a6214bea7f31157499838dedf62ebec"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/963e541fd268a6bf0c64194cf917b5199600a9cb","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/963e541fd268a6bf0c64194cf917b5199600a9cb","html_url":"https://github.com/apache/openjpa/commit/963e541fd268a6bf0c64194cf917b5199600a9cb","comments_url":"https://api.github.com/repos/apache/openjpa/commits/963e541fd268a6bf0c64194cf917b5199600a9cb/comments","author":null,"committer":null,"parents":[{"sha":"30b7c05468a0b82d3c13856aec3316bf990e236a","url":"https://api.github.com/repos/apache/openjpa/commits/30b7c05468a0b82d3c13856aec3316bf990e236a","html_url":"https://github.com/apache/openjpa/commit/30b7c05468a0b82d3c13856aec3316bf990e236a"}],"stats":{"total":229,"additions":226,"deletions":3},"files":[{"sha":"e339b60021338e27b6e5c73419d9972fa1603570","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/Invoice.java","status":"added","additions":80,"deletions":0,"changes":80,"blob_url":"https://github.com/apache/openjpa/blob/963e541fd268a6bf0c64194cf917b5199600a9cb/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/Invoice.java","raw_url":"https://github.com/apache/openjpa/raw/963e541fd268a6bf0c64194cf917b5199600a9cb/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/Invoice.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/Invoice.java?ref=963e541fd268a6bf0c64194cf917b5199600a9cb","patch":"@@ -0,0 +1,80 @@\n+/**\r\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\r\n+ * contributor license agreements.  See the NOTICE file distributed with\r\n+ * this work for additional information regarding copyright ownership.\r\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\r\n+ * (the \"License\"); you may not use this file except in compliance with\r\n+ * the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *     http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ *  Unless required by applicable law or agreed to in writing, software\r\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+ *  See the License for the specific language governing permissions and\r\n+ *  limitations under the License.\r\n+ */\r\n+package org.apache.openjpa.persistence.jdbc.query.cache;\r\n+\r\n+import java.util.ArrayList;\r\n+import java.util.List;\r\n+\r\n+import javax.persistence.*;\r\n+/**\r\n+ * @version $Revision$ $Date$\r\n+ */\r\n+@Entity\r\n+@IdClass(InvoiceKey.class)\r\n+public class Invoice {\r\n+\r\n+    @Id\r\n+    private int id;\r\n+    @Id\r\n+    private String brandName;\r\n+    \r\n+    private double price;\r\n+\r\n+    @OneToMany(cascade={CascadeType.ALL})\r\n+    private List<LineItem> lineItems = new ArrayList<LineItem>();\r\n+\r\n+    public Invoice() {\r\n+    }\r\n+\r\n+    public Invoice(int id, String brandName, double price) {\r\n+        this.id = id;\r\n+        this.brandName = brandName;\r\n+        this.price = price;\r\n+    }\r\n+\r\n+    public int getId() {\r\n+        return id;\r\n+    }\r\n+\r\n+    public void setId(int id) {\r\n+        this.id = id;\r\n+    }\r\n+\r\n+    public String getBrandName() {\r\n+        return brandName;\r\n+    }\r\n+\r\n+    public void setBrandName(String brandName) {\r\n+        this.brandName = brandName;\r\n+    }\r\n+\r\n+    public double getPrice() {\r\n+        return price;\r\n+    }\r\n+\r\n+    public void setPrice(double price) {\r\n+        this.price = price;\r\n+    }\r\n+\r\n+    public List<LineItem> getLineItems() {\r\n+        return lineItems;\r\n+    }\r\n+\r\n+    public void setLineItems(List<LineItem> lineItems) {\r\n+        this.lineItems = lineItems;\r\n+    }\r\n+}\r"},{"sha":"578dbd5a06b29f1f98aec1d40c9a3798ef887f47","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/InvoiceKey.java","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/apache/openjpa/blob/963e541fd268a6bf0c64194cf917b5199600a9cb/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/InvoiceKey.java","raw_url":"https://github.com/apache/openjpa/raw/963e541fd268a6bf0c64194cf917b5199600a9cb/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/InvoiceKey.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/InvoiceKey.java?ref=963e541fd268a6bf0c64194cf917b5199600a9cb","patch":"@@ -0,0 +1,54 @@\n+/**\r\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\r\n+ * contributor license agreements.  See the NOTICE file distributed with\r\n+ * this work for additional information regarding copyright ownership.\r\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\r\n+ * (the \"License\"); you may not use this file except in compliance with\r\n+ * the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *     http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ *  Unless required by applicable law or agreed to in writing, software\r\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+ *  See the License for the specific language governing permissions and\r\n+ *  limitations under the License.\r\n+ */\r\n+package org.apache.openjpa.persistence.jdbc.query.cache;\r\n+\r\n+/**\r\n+ * @version $Revision$ $Date$\r\n+ */\r\n+public class InvoiceKey {\r\n+\r\n+    private int id;\r\n+    private String brandName;\r\n+\r\n+    public InvoiceKey() {\r\n+    }\r\n+\r\n+    public InvoiceKey(int id, String brandName) {\r\n+        this.id = id;\r\n+        this.brandName = brandName;\r\n+    }\r\n+\r\n+    @Override\r\n+    public boolean equals(Object o) {\r\n+        if (this == o) return true;\r\n+        if (o == null || getClass() != o.getClass()) return false;\r\n+\r\n+        InvoiceKey invoiceKey = (InvoiceKey) o;\r\n+\r\n+        if (id != invoiceKey.id) return false;\r\n+        if (!brandName.equals(invoiceKey.brandName)) return false;\r\n+\r\n+        return true;\r\n+    }\r\n+\r\n+    @Override\r\n+    public int hashCode() {\r\n+        int result = id;\r\n+        result = 31 * result + brandName.hashCode();\r\n+        return result;\r\n+    }\r\n+}\r"},{"sha":"10803f243ed0a9858bd7eb12b1342d2910eddf3e","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/LineItem.java","status":"added","additions":65,"deletions":0,"changes":65,"blob_url":"https://github.com/apache/openjpa/blob/963e541fd268a6bf0c64194cf917b5199600a9cb/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/LineItem.java","raw_url":"https://github.com/apache/openjpa/raw/963e541fd268a6bf0c64194cf917b5199600a9cb/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/LineItem.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/LineItem.java?ref=963e541fd268a6bf0c64194cf917b5199600a9cb","patch":"@@ -0,0 +1,65 @@\n+/**\r\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\r\n+ * contributor license agreements.  See the NOTICE file distributed with\r\n+ * this work for additional information regarding copyright ownership.\r\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\r\n+ * (the \"License\"); you may not use this file except in compliance with\r\n+ * the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *     http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ *  Unless required by applicable law or agreed to in writing, software\r\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+ *  See the License for the specific language governing permissions and\r\n+ *  limitations under the License.\r\n+ */\r\n+package org.apache.openjpa.persistence.jdbc.query.cache;\r\n+import javax.persistence.*;\r\n+\r\n+/**\r\n+ * @version $Revision$ $Date$\r\n+ */\r\n+@Entity\r\n+public class LineItem {\r\n+\r\n+    @Id\r\n+    private String id;\r\n+    private int quantity;\r\n+    \r\n+    @ManyToOne\r\n+    private Invoice invoice;\r\n+\r\n+    public LineItem() {\r\n+    }\r\n+\r\n+    public LineItem(String id, int quantity) {\r\n+        this.id = id;\r\n+        this.quantity = quantity;\r\n+    }\r\n+\r\n+    public String getId() {\r\n+        return id;\r\n+    }\r\n+\r\n+    public void setId(String id) {\r\n+        this.id = id;\r\n+    }\r\n+\r\n+    public int getQuantity() {\r\n+        return quantity;\r\n+    }\r\n+\r\n+    public void setQuantity(int quantity) {\r\n+        this.quantity = quantity;\r\n+    }\r\n+\r\n+    public Invoice getInvoice() {\r\n+        return invoice;\r\n+    }\r\n+\r\n+    public void setInvoice(Invoice invoice) {\r\n+        this.invoice = invoice;\r\n+    }\r\n+}\r\n+\r"},{"sha":"e38f6501752ec5ed7885df7c81833414d1ec8877","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/TestNonPrimaryKeyQueryParameters.java","status":"modified","additions":27,"deletions":3,"changes":30,"blob_url":"https://github.com/apache/openjpa/blob/963e541fd268a6bf0c64194cf917b5199600a9cb/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/TestNonPrimaryKeyQueryParameters.java","raw_url":"https://github.com/apache/openjpa/raw/963e541fd268a6bf0c64194cf917b5199600a9cb/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/TestNonPrimaryKeyQueryParameters.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/TestNonPrimaryKeyQueryParameters.java?ref=963e541fd268a6bf0c64194cf917b5199600a9cb","patch":"@@ -18,10 +18,10 @@\n  */\r\n package org.apache.openjpa.persistence.jdbc.query.cache;\r\n \r\n-import java.util.ArrayList;\r\n-import java.util.Collection;\r\n+import java.util.List;\r\n \r\n import javax.persistence.EntityManager;\r\n+import javax.persistence.EntityTransaction;\r\n import javax.persistence.Query;\r\n \r\n import org.apache.openjpa.persistence.test.SQLListenerTestCase;\r\n@@ -45,18 +45,21 @@\n  * \r\n  * @author Pinaki Poddar\r\n  * @author Vikram Bhatia\r\n- * \r\n+ * @author David Blevins\r\n  */\r\n public class TestNonPrimaryKeyQueryParameters extends SQLListenerTestCase {\r\n \tprivate static final int FULLTIME_EMPLOYEE_COUNT = 3;\r\n \tprivate static final int PARTTIME_EMPLOYEE_COUNT = 2;\r\n+    private static final int LINEITEM_PER_INVOICE = 1;\r\n \tprivate static final String DEPT_NAME = \"ENGINEERING\";\r\n \r\n \tpublic void setUp() {\r\n \t\tsuper.setUp(CLEAR_TABLES, Department.class, Employee.class,\r\n \t\t\t\tFullTimeEmployee.class, PartTimeEmployee.class,\r\n+\t\t\t\tInvoice.class, LineItem.class,\r\n \t\t\t\t\"openjpa.jdbc.QuerySQLCache\", \"true\");\r\n \t\tcreateDepartment(DEPT_NAME);\r\n+\t\tcreateInvoice();\r\n \t\tsql.clear();\r\n \t}\r\n \r\n@@ -80,6 +83,7 @@ public void testSelectQueryWithNoParameter() {\n \t\tEntityManager em = emf.createEntityManager();\r\n \r\n \t\tQuery query = em.createQuery(\"SELECT d from Department d\");\r\n+\r\n \t\tDepartment dept = (Department) query.getSingleResult();\r\n \r\n \t\tassertEquals(FULLTIME_EMPLOYEE_COUNT, dept.getFullTimeEmployees()\r\n@@ -102,6 +106,10 @@ public void testFind() {\n \t\t\t\t.size());\r\n \r\n \t\tassertSQL(\".* AND t0.TYPE = .*\");\r\n+\t\t\r\n+        Invoice invoice = em.find(Invoice.class, new InvoiceKey(1, \"Red\"));\r\n+        List<LineItem> list = invoice.getLineItems();\r\n+        assertEquals(LINEITEM_PER_INVOICE, list.size());\r\n \t\tem.close();\r\n \t}\r\n \r\n@@ -153,4 +161,20 @@ private void createDepartment(String deptName) {\n \t\tem.close();\r\n \r\n \t}\r\n+\t\r\n+    private void createInvoice() {\r\n+        EntityManager em = emf.createEntityManager();\r\n+        EntityTransaction tran = em.getTransaction();\r\n+        tran.begin();\r\n+        Invoice invoice = new Invoice(1, \"Red\", 1.30);\r\n+        for (int i = 1;  i <= LINEITEM_PER_INVOICE; i++) {\r\n+            LineItem item = new LineItem(String.valueOf(i), 10);\r\n+            item.setInvoice(invoice);\r\n+            invoice.getLineItems().add(item);\r\n+            em.persist(invoice);\r\n+        }\r\n+        em.flush();\r\n+        tran.commit();\r\n+        em.close();        \r\n+    }\t\r\n }\r"}]}

