{"sha":"97496b0bd6fe8d7471c3b3495ecab01614b8dfd9","node_id":"MDY6Q29tbWl0MjA2MzY0Ojk3NDk2YjBiZDZmZThkNzQ3MWMzYjM0OTVlY2FiMDE2MTRiOGRmZDk=","commit":{"author":{"name":"Milosz Tylenda","email":"mtylenda@apache.org","date":"2010-01-31T11:15:01Z"},"committer":{"name":"Milosz Tylenda","email":"mtylenda@apache.org","date":"2010-01-31T11:15:01Z"},"message":"OPENJPA-1367: Improvements for H2 database. Commit patch provided by Prashant Bhat with slight modifications. Information on CROSS JOIN provided by Thomas Mueller.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@905001 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"cdb3c0ab55ce9c1b83bd2d963b87babc6d7ecefe","url":"https://api.github.com/repos/apache/openjpa/git/trees/cdb3c0ab55ce9c1b83bd2d963b87babc6d7ecefe"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/97496b0bd6fe8d7471c3b3495ecab01614b8dfd9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/97496b0bd6fe8d7471c3b3495ecab01614b8dfd9","html_url":"https://github.com/apache/openjpa/commit/97496b0bd6fe8d7471c3b3495ecab01614b8dfd9","comments_url":"https://api.github.com/repos/apache/openjpa/commits/97496b0bd6fe8d7471c3b3495ecab01614b8dfd9/comments","author":null,"committer":null,"parents":[{"sha":"7aad95a75b06f5620fb4d9ac9b50e1a8149d0e19","url":"https://api.github.com/repos/apache/openjpa/commits/7aad95a75b06f5620fb4d9ac9b50e1a8149d0e19","html_url":"https://github.com/apache/openjpa/commit/7aad95a75b06f5620fb4d9ac9b50e1a8149d0e19"}],"stats":{"total":41,"additions":17,"deletions":24},"files":[{"sha":"5fb5414dae1b434453017059fafdbc2c9d9ddd44","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/H2Dictionary.java","status":"modified","additions":8,"deletions":16,"changes":24,"blob_url":"https://github.com/apache/openjpa/blob/97496b0bd6fe8d7471c3b3495ecab01614b8dfd9/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/H2Dictionary.java","raw_url":"https://github.com/apache/openjpa/raw/97496b0bd6fe8d7471c3b3495ecab01614b8dfd9/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/H2Dictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/H2Dictionary.java?ref=97496b0bd6fe8d7471c3b3495ecab01614b8dfd9","patch":"@@ -18,10 +18,8 @@\n  */\n package org.apache.openjpa.jdbc.sql;\n \n-import java.math.BigDecimal;\n import java.sql.Connection;\n import java.sql.DatabaseMetaData;\n-import java.sql.PreparedStatement;\n import java.sql.SQLException;\n import java.sql.Types;\n import java.util.Arrays;\n@@ -37,7 +35,7 @@\n import org.apache.openjpa.meta.JavaTypes;\n \n /**\n- * Support for the H2 database ({@link http://www.h2database.com}).\n+ * Dictionary for H2 ({@link http://www.h2database.com}).\n  *\n  * @since 0.9.7\n  */\n@@ -54,30 +52,19 @@ public H2Dictionary() {\n         autoAssignTypeName = \"INTEGER\";\n         nextSequenceQuery = \"CALL NEXT VALUE FOR {0}\";\n \n-        // CROSS JOIN is currently not supported\n-        crossJoinClause = \"JOIN\";\n-        requiresConditionForCrossJoin = true;\n         stringLengthFunction = \"LENGTH({0})\";\n         trimLeadingFunction = \"LTRIM({0})\";\n         trimTrailingFunction = \"RTRIM({0})\";\n         trimBothFunction = \"TRIM({0})\";\n \n-        useSchemaName = true;\n-        supportsSelectForUpdate = true;\n         supportsSelectStartIndex = true;\n         supportsSelectEndIndex = true;\n         rangePosition = RANGE_POST_LOCK;\n         supportsDeferredConstraints = false;\n \n-        blobTypeName = \"BLOB\";\n-        doubleTypeName = \"DOUBLE\";\n-\n         supportsNullTableForGetPrimaryKeys = true;\n         supportsNullTableForGetIndexInfo = true;\n \n-        requiresCastForMathFunctions = false;\n-        requiresCastForComparisons = false;\n-\n         reservedWordSet.addAll(Arrays.asList(new String[] {\n             \"CURRENT_TIMESTAMP\", \"CURRENT_TIME\", \"CURRENT_DATE\", \"CROSS\",\n             \"DISTINCT\", \"EXCEPT\", \"EXISTS\", \"FROM\", \"FOR\", \"FALSE\", \"FULL\",\n@@ -102,7 +89,9 @@ public int getJDBCType(int metaTypeCode, boolean lob) {\n \n     @Override\n     public int getPreferredType(int type) {\n-        return super.getPreferredType(type);\n+        if(type == Types.BIT)\n+            return Types.BOOLEAN;\n+        return type;\n     }\n \n     @Override\n@@ -219,8 +208,11 @@ protected void appendSelectRange(SQLBuffer buf, long start, long end,\n         boolean subselect) {\n         if (end != Long.MAX_VALUE)\n             buf.append(\" LIMIT \").appendValue(end - start);\n-        if (start != 0)\n+        if (start != 0) {\n+            if(end == Long.MAX_VALUE)\n+                buf.append(\" LIMIT 0\");\n             buf.append(\" OFFSET \").appendValue(start);\n+        }\n     }\n \n     @Override"},{"sha":"cae2617c9ac109bc113fae675a7de67776d75f92","filename":"openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/sql-error-state-codes.xml","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/97496b0bd6fe8d7471c3b3495ecab01614b8dfd9/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/sql-error-state-codes.xml","raw_url":"https://github.com/apache/openjpa/raw/97496b0bd6fe8d7471c3b3495ecab01614b8dfd9/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/sql-error-state-codes.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/sql-error-state-codes.xml?ref=97496b0bd6fe8d7471c3b3495ecab01614b8dfd9","patch":"@@ -101,12 +101,12 @@\n \t</dictionary>\n \t\n \t<dictionary class=\"org.apache.openjpa.jdbc.sql.H2Dictionary\">\n-\t\t<lock></lock>\n-\t\t<referential-integrity>22003,22012,22025,23000,23001</referential-integrity>\n-\t\t<object-exists></object-exists>\n-\t\t<object-not-found></object-not-found>\n+\t\t<lock>HYT00</lock>\n+\t\t<referential-integrity>22003,22012,22025,23000,23002,23003</referential-integrity>\n+\t\t<object-exists>23001</object-exists>\n+\t\t<object-not-found>02000</object-not-found>\n \t\t<optimistic></optimistic>\n-\t\t<query></query>\n+\t\t<query>90031</query>\n \t</dictionary>\n \t\n \t<dictionary class=\"org.apache.openjpa.jdbc.sql.HSQLDictionary\">"},{"sha":"74cd3538020477d170295ecef1a0705602adc979","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/generationtype/TestMultipleSchemaNames.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/97496b0bd6fe8d7471c3b3495ecab01614b8dfd9/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/generationtype/TestMultipleSchemaNames.java","raw_url":"https://github.com/apache/openjpa/raw/97496b0bd6fe8d7471c3b3495ecab01614b8dfd9/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/generationtype/TestMultipleSchemaNames.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/generationtype/TestMultipleSchemaNames.java?ref=97496b0bd6fe8d7471c3b3495ecab01614b8dfd9","patch":"@@ -26,6 +26,7 @@\n \n import org.apache.openjpa.jdbc.conf.JDBCConfiguration;\n import org.apache.openjpa.jdbc.sql.DBDictionary;\n+import org.apache.openjpa.jdbc.sql.H2Dictionary;\n import org.apache.openjpa.jdbc.sql.MySQLDictionary;\n import org.apache.openjpa.jdbc.sql.OracleDictionary;\n import org.apache.openjpa.jdbc.sql.PostgresDictionary;\n@@ -411,7 +412,7 @@ public void testGeneratedIDENTITY() {\n     }\n \n     /**\n-     * Create necessary schemas if running on PostgreSQL as it does\n+     * Create necessary schemas if running on PostgreSQL or H2 as they do\n      * not create them automatically.\n      * Oracle, MySQL and MSSQL also don't create schemas automatically but\n      * we give up as they treat schemas in special ways.\n@@ -420,7 +421,7 @@ private void createSchemas() {\n         OpenJPAEntityManagerFactorySPI tempEmf = createEMF();\n         DBDictionary dict = ((JDBCConfiguration) tempEmf.getConfiguration()).getDBDictionaryInstance();\n         \n-        if (!(dict instanceof PostgresDictionary)) {\n+        if (!(dict instanceof PostgresDictionary || dict instanceof H2Dictionary)) {\n             closeEMF(tempEmf);\n             return;\n         }"},{"sha":"687520e5227f552a0f74c104f775bf5156df3e27","filename":"openjpa-project/src/doc/manual/supported_databases.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/97496b0bd6fe8d7471c3b3495ecab01614b8dfd9/openjpa-project/src/doc/manual/supported_databases.xml","raw_url":"https://github.com/apache/openjpa/raw/97496b0bd6fe8d7471c3b3495ecab01614b8dfd9/openjpa-project/src/doc/manual/supported_databases.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/supported_databases.xml?ref=97496b0bd6fe8d7471c3b3495ecab01614b8dfd9","patch":"@@ -678,7 +678,7 @@ openjpa.ConnectionURL: jdbc:h2:DB_NAME\n             <itemizedlist>\n                 <listitem>\n                     <para>\n-H2 does not support cross joins\n+None\n                     </para>\n                 </listitem>\n             </itemizedlist>"}]}

