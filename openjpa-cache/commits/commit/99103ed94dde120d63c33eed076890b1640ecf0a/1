{"sha":"99103ed94dde120d63c33eed076890b1640ecf0a","node_id":"MDY6Q29tbWl0MjA2MzY0Ojk5MTAzZWQ5NGRkZTEyMGQ2M2MzM2VlZDA3Njg5MGIxNjQwZWNmMGE=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2008-10-03T15:16:41Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2008-10-03T15:16:41Z"},"message":"OPENJPA-731 merging revision 699156 to 1.2.x branch. \n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/1.2.x@701407 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a742a2daa0c5d62e639f24ba84f0ce38b116e84e","url":"https://api.github.com/repos/apache/openjpa/git/trees/a742a2daa0c5d62e639f24ba84f0ce38b116e84e"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/99103ed94dde120d63c33eed076890b1640ecf0a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/99103ed94dde120d63c33eed076890b1640ecf0a","html_url":"https://github.com/apache/openjpa/commit/99103ed94dde120d63c33eed076890b1640ecf0a","comments_url":"https://api.github.com/repos/apache/openjpa/commits/99103ed94dde120d63c33eed076890b1640ecf0a/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"c4b63bd4f8b90e6dc25866dc22789b6c3e5532b3","url":"https://api.github.com/repos/apache/openjpa/commits/c4b63bd4f8b90e6dc25866dc22789b6c3e5532b3","html_url":"https://github.com/apache/openjpa/commit/c4b63bd4f8b90e6dc25866dc22789b6c3e5532b3"}],"stats":{"total":319,"additions":314,"deletions":5},"files":[{"sha":"40b3ed301e1a578863cff07305d22776de7be3d7","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/99103ed94dde120d63c33eed076890b1640ecf0a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java","raw_url":"https://github.com/apache/openjpa/raw/99103ed94dde120d63c33eed076890b1640ecf0a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java?ref=99103ed94dde120d63c33eed076890b1640ecf0a","patch":"@@ -391,7 +391,7 @@ protected Result execute(StoreContext ctx, JDBCStore store,\n         }\n \n         return getEagerResult(conn, stmnt, rs, store, fetch, forUpdate, \n-            _sql.getSQL());\n+            _sql.getSQL(), params);\n     }\n     \n     private boolean isForUpdate(JDBCStore store, int lockLevel) {\n@@ -409,7 +409,7 @@ private boolean isForUpdate(JDBCStore store, int lockLevel) {\n      * to the given result.\n      */\n     private static void addEagerResults(SelectResult res, SelectImpl sel,\n-        JDBCStore store, JDBCFetchConfiguration fetch)\n+        JDBCStore store, JDBCFetchConfiguration fetch, List params)\n         throws SQLException {\n         if (sel._eager == null)\n             return;\n@@ -428,7 +428,7 @@ private static void addEagerResults(SelectResult res, SelectImpl sel,\n                 eres = res;\n             else\n                 eres = ((SelectExecutor) entry.getValue()).execute(store,\n-                    fetch);\n+                    fetch, params);\n \n             eager = res.getEagerMap(false);\n             if (eager == null) {\n@@ -511,14 +511,15 @@ protected int getCount(ResultSet rs) throws SQLException {\n      */\n     protected Result getEagerResult(Connection conn, \n         PreparedStatement stmnt, ResultSet rs, JDBCStore store, \n-        JDBCFetchConfiguration fetch, boolean forUpdate, String sqlStr) \n+        JDBCFetchConfiguration fetch, boolean forUpdate, String sqlStr,\n+        List params) \n         throws SQLException {\n         SelectResult res = new SelectResult(conn, stmnt, rs, _dict);\n         res.setSelect(this);\n         res.setStore(store);\n         res.setLocking(forUpdate);\n         try {\n-            addEagerResults(res, this, store, fetch);\n+            addEagerResults(res, this, store, fetch, params);\n         } catch (SQLException se) {\n             res.close();\n             throw se;"},{"sha":"093774627730694a835ceff1d686fdb731c93b4b","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/kernel/TestQuerySQLCache.java","status":"modified","additions":70,"deletions":0,"changes":70,"blob_url":"https://github.com/apache/openjpa/blob/99103ed94dde120d63c33eed076890b1640ecf0a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/kernel/TestQuerySQLCache.java","raw_url":"https://github.com/apache/openjpa/raw/99103ed94dde120d63c33eed076890b1640ecf0a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/kernel/TestQuerySQLCache.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/kernel/TestQuerySQLCache.java?ref=99103ed94dde120d63c33eed076890b1640ecf0a","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.openjpa.kernel;\n \n+import java.util.Collection;\n import java.util.HashMap;\n import java.util.Iterator;\n import java.util.Map;\n@@ -34,6 +35,9 @@\n import org.apache.openjpa.persistence.EntityManagerImpl;\n import org.apache.openjpa.persistence.OpenJPAEntityManagerFactorySPI;\n import org.apache.openjpa.persistence.OpenJPAPersistence;\n+import org.apache.openjpa.persistence.relations.TblChild;\n+import org.apache.openjpa.persistence.relations.TblGrandChild;\n+import org.apache.openjpa.persistence.relations.TblParent;\n import org.apache.openjpa.persistence.simple.Person;\n \n /*\n@@ -271,6 +275,72 @@ public void testMultiEMCachingTrue() {\n         runMultiEMCaching(props);\n     }\n \n+    /*\n+     * Verify QuerySQLCacheValue setting \"true\" uses the expected cache\n+     * implementation and is caching.\n+     */\n+    public void testEagerFetch() {\n+        Map props = new HashMap(System.getProperties());\n+        props.put(\"openjpa.MetaDataFactory\", \"jpa(Types=\"\n+            + TblChild.class.getName() + \";\"\n+            + TblGrandChild.class.getName() + \";\"\n+            + TblParent.class.getName() + \")\");\n+        props.put(\"openjpa.jdbc.QuerySQLCache\", \"true\");\n+        OpenJPAEntityManagerFactorySPI emf = (OpenJPAEntityManagerFactorySPI)\n+            OpenJPAPersistence.cast(\n+                Persistence.createEntityManagerFactory(\"test\", props));\n+        \n+        EntityManagerImpl em = (EntityManagerImpl)emf.createEntityManager();\n+        \n+        em.getTransaction().begin();\n+        for (int i = 0; i < 2; i++) {\n+        \tTblParent p = new TblParent();\n+        \tp.setParentId(i);\n+    \t\tTblChild c = new TblChild();\n+    \t\tc.setChildId(i);\n+            c.setTblParent(p);\n+            p.addTblChild(c);\n+     \t\tem.persist(p);\n+    \t\tem.persist(c);\n+\n+    \t\tTblGrandChild gc = new TblGrandChild();\n+    \t\tgc.setGrandChildId(i);\n+    \t\tgc.setTblChild(c);\n+    \t\tc.addTblGrandChild(gc);\n+    \t\t\n+    \t\tem.persist(p);\n+    \t\tem.persist(c);\n+    \t\tem.persist(gc);\n+        }\n+        em.flush();\n+        em.getTransaction().commit();\n+        em.clear();\n+        \n+        for (int i = 0; i < 2; i++) {\n+        \tTblParent p = em.find(TblParent.class, i);\n+        \tint pid = p.getParentId();\n+        \tassertEquals(pid, i);\n+        \tCollection<TblChild> children = p.getTblChildren();\n+        \tboolean hasChild = false;\n+        \tfor (TblChild c : children) {\n+        \t\thasChild = true;\n+        \t\tCollection<TblGrandChild> gchildren = c.getTblGrandChildren();\n+        \t\tint cid = c.getChildId();\n+        \t\tassertEquals(cid, i);\n+\t        \tboolean hasGrandChild = false;\n+        \t\tfor (TblGrandChild gc : gchildren) {\n+        \t\t\thasGrandChild = true;\n+        \t\t\tint gcId = gc.getGrandChildId();\n+        \t\t\tassertEquals(gcId, i);\n+        \t\t}\n+        \t\tassertTrue(hasGrandChild);\n+        \t}\n+        \tassertTrue(hasChild);\n+        }\n+        em.close();\n+        emf.close();\n+    }\n+\n     private void runMultiEMCaching(Map props) {\n \n         EntityManagerFactory emfac = "},{"sha":"7b8bced0530305804cbd934f1f770f585b18337a","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TblChild.java","status":"added","additions":102,"deletions":0,"changes":102,"blob_url":"https://github.com/apache/openjpa/blob/99103ed94dde120d63c33eed076890b1640ecf0a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TblChild.java","raw_url":"https://github.com/apache/openjpa/raw/99103ed94dde120d63c33eed076890b1640ecf0a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TblChild.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TblChild.java?ref=99103ed94dde120d63c33eed076890b1640ecf0a","patch":"@@ -0,0 +1,102 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.relations;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.JoinColumns;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.OneToMany;\n+import javax.persistence.Version;\n+\n+import org.apache.openjpa.persistence.jdbc.ForeignKey;\n+\n+@Entity\n+public class TblChild {\n+\n+\t@Id\n+\t@Column(name = \"CHILD_ID\",nullable=false)\n+\tprivate Integer childId;   \n+\n+\t@Version\n+\t@Column(name = \"VRS_NBR\")\n+\tprivate Integer vrsNbr;   \n+\n+\t@OneToMany(mappedBy=\"tblChild\",fetch = FetchType.EAGER,\n+\t\t\tcascade = {CascadeType.PERSIST,CascadeType.MERGE})\n+\tprivate Collection<TblGrandChild> tblGrandChildren = \n+        new ArrayList<TblGrandChild>();\n+\n+\t@ManyToOne(fetch = FetchType.LAZY,\n+\t\t\tcascade = {CascadeType.PERSIST,CascadeType.MERGE })\n+\t@JoinColumns({@JoinColumn(name =\n+\t\t\"PARENT_ID\",referencedColumnName=\"PARENT_ID\")})   \n+\t@ForeignKey\n+\tprivate TblParent tblParent;\n+\n+\tpublic Integer getChildId() {\n+\t\treturn childId;\n+\t}\n+\t\n+\tpublic void setChildId(Integer childId) {\n+\t\tthis.childId = childId;\n+\t}\n+\t\n+\tpublic Integer getVrsNbr() {\n+\t\treturn vrsNbr;\n+\t}\n+\t\n+\tpublic void setVrsNbr(Integer vrsNbr) {\n+\t\tthis.vrsNbr = vrsNbr;\n+\t}\n+\n+\tpublic Collection<TblGrandChild> getTblGrandChildren() {\n+\t\treturn tblGrandChildren;\n+\t}\n+\t\n+\tpublic void setTblGrandChildren(Collection<TblGrandChild>\n+        tblGrandChildren) {\n+\t\tthis.tblGrandChildren = tblGrandChildren;\n+\t}\n+\t\n+\tpublic void addTblGrandChild(TblGrandChild tblGrandChild) {\n+\t\ttblGrandChild.setTblChild(this);\n+\t\ttblGrandChildren.add(tblGrandChild);\n+\t}\n+\t\n+\tpublic void removeTblGrandChild(TblGrandChild tblGrandChild) {\n+\t\ttblGrandChild.setTblChild(null);\n+\t\ttblGrandChildren.remove(tblGrandChild);\n+\t}\n+\t\n+\tpublic TblParent getTblParent() {\n+\t\treturn tblParent;\n+\t}\n+\n+\tpublic void setTblParent(TblParent tblParent) {\n+\t\tthis.tblParent = tblParent;\n+\t}\n+}"},{"sha":"aa064f20483d31dadec4233cf5905cc0ed72a9e6","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TblGrandChild.java","status":"added","additions":76,"deletions":0,"changes":76,"blob_url":"https://github.com/apache/openjpa/blob/99103ed94dde120d63c33eed076890b1640ecf0a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TblGrandChild.java","raw_url":"https://github.com/apache/openjpa/raw/99103ed94dde120d63c33eed076890b1640ecf0a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TblGrandChild.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TblGrandChild.java?ref=99103ed94dde120d63c33eed076890b1640ecf0a","patch":"@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.relations;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.JoinColumns;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.Version;\n+\n+import org.apache.openjpa.persistence.jdbc.ForeignKey;\n+\n+@Entity\n+public class TblGrandChild {\n+\n+\t@Id\n+\t@Column(name = \"GC_ID\",nullable=false)\n+\tprivate Integer grandChildId;   \n+\n+\t@Version\n+\t@Column(name = \"VRS_NBR\")\n+\tprivate Integer vrsNbr;   \n+\n+\t@ManyToOne(fetch = FetchType.LAZY,\n+\t\tcascade = {CascadeType.PERSIST,CascadeType.MERGE })\n+\t@JoinColumns({@JoinColumn(name =\n+\t\t\"CHILD_ID\",referencedColumnName=\"CHILD_ID\")})   \n+\t@ForeignKey\n+\tprivate TblChild tblChild;\n+\t\n+\tpublic Integer getGrandChildId() {\n+\t\treturn grandChildId;\n+\t}\n+\t\n+\tpublic void setGrandChildId(Integer grandChildId) {\n+\t\tthis.grandChildId = grandChildId;\n+\t}\n+\t\n+\tpublic Integer getVrsNbr() {\n+\t\treturn vrsNbr;\n+\t}\n+\t\n+\tpublic void setVrsNbr(Integer vrsNbr) {\n+\t\tthis.vrsNbr = vrsNbr;\n+\t}\n+\n+\tpublic TblChild getTblChild() {\n+\t\treturn tblChild;\n+\t}\n+\t\n+\tpublic void setTblChild(TblChild tblChild) {\n+\t\tthis.tblChild = tblChild;\n+\t}\n+}\n+\n+"},{"sha":"f4f64ab64571ac9af82b26d1c732e7721b5a0290","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TblParent.java","status":"added","additions":60,"deletions":0,"changes":60,"blob_url":"https://github.com/apache/openjpa/blob/99103ed94dde120d63c33eed076890b1640ecf0a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TblParent.java","raw_url":"https://github.com/apache/openjpa/raw/99103ed94dde120d63c33eed076890b1640ecf0a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TblParent.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TblParent.java?ref=99103ed94dde120d63c33eed076890b1640ecf0a","patch":"@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.relations;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.Id;\n+import javax.persistence.OneToMany;\n+@Entity\n+public class TblParent {\n+\n+\t@Id\n+\t@Column(name = \"PARENT_ID\")\n+\tprivate Integer parentId;\n+\t\n+\t@OneToMany(mappedBy=\"tblParent\",fetch = FetchType.LAZY,cascade = {\n+\t\tCascadeType.PERSIST,CascadeType.MERGE })\n+\tprivate Collection<TblChild> tblChildren = new ArrayList<TblChild>();\t\n+\t\n+\tpublic Integer getParentId() {\n+\t\treturn parentId;\n+\t}\n+\t\n+\tpublic void setParentId(Integer parentId) {\n+\t\tthis.parentId = parentId;\n+\t}\n+\n+\tpublic Collection<TblChild> getTblChildren() {\n+\t\treturn tblChildren;\n+\t}\n+\t\n+\tpublic void setTblChildren(Collection<TblChild> tblChildren) {\n+\t\tthis.tblChildren = tblChildren;\n+\t}\n+\t\n+\tpublic void addTblChild(TblChild tblChild) {\n+\t\ttblChildren.add(tblChild);\n+\t} \n+}"}]}

