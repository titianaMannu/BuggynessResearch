{"sha":"99bb160daeec3c60b2fa1cbd4fb8fe7780fc3fdc","node_id":"MDY6Q29tbWl0MjA2MzY0Ojk5YmIxNjBkYWVlYzNjNjBiMmZhMWNiZDRmYjhmZTc3ODBmYzNmZGM=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-11-21T09:20:56Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-11-21T09:20:56Z"},"message":"While looking at dynamic class loading, I noticed that we create a separate MappingRepository when doing an in-process schema redefinion. This seems to lead to potentially-out-of-sync states in the main configuration MappingRepository; this change shares the Configuration's repository with the MappingTool.\n\nIt looks like the old behavior was somewhat implicit, so I'm hoping that it wasn't necessary, and that this change will be a step forward.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@597002 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0e550db2484a43e8fc317d7a84f996a60c32e03a","url":"https://api.github.com/repos/apache/openjpa/git/trees/0e550db2484a43e8fc317d7a84f996a60c32e03a"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/99bb160daeec3c60b2fa1cbd4fb8fe7780fc3fdc","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/99bb160daeec3c60b2fa1cbd4fb8fe7780fc3fdc","html_url":"https://github.com/apache/openjpa/commit/99bb160daeec3c60b2fa1cbd4fb8fe7780fc3fdc","comments_url":"https://api.github.com/repos/apache/openjpa/commits/99bb160daeec3c60b2fa1cbd4fb8fe7780fc3fdc/comments","author":null,"committer":null,"parents":[{"sha":"21ec1613390ffe25d4ab8ffcc0ce3e5155940eef","url":"https://api.github.com/repos/apache/openjpa/commits/21ec1613390ffe25d4ab8ffcc0ce3e5155940eef","html_url":"https://github.com/apache/openjpa/commit/21ec1613390ffe25d4ab8ffcc0ce3e5155940eef"}],"stats":{"total":7,"additions":5,"deletions":2},"files":[{"sha":"a64d63fba28153c4820f726bbf3b632d2284898b","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCBrokerFactory.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/99bb160daeec3c60b2fa1cbd4fb8fe7780fc3fdc/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCBrokerFactory.java","raw_url":"https://github.com/apache/openjpa/raw/99bb160daeec3c60b2fa1cbd4fb8fe7780fc3fdc/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCBrokerFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCBrokerFactory.java?ref=99bb160daeec3c60b2fa1cbd4fb8fe7780fc3fdc","patch":"@@ -26,6 +26,7 @@\n import org.apache.commons.lang.StringUtils;\n import org.apache.openjpa.jdbc.conf.JDBCConfiguration;\n import org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl;\n+import org.apache.openjpa.jdbc.meta.MappingRepository;\n import org.apache.openjpa.jdbc.meta.MappingTool;\n import org.apache.openjpa.kernel.AbstractBrokerFactory;\n import org.apache.openjpa.kernel.Bootstrap;\n@@ -145,14 +146,16 @@ private void synchronizeMappings(ClassLoader loader) {\n         if (StringUtils.isEmpty(action))\n             return;\n \n-        Collection classes = conf.getMetaDataRepositoryInstance().\n-            loadPersistentTypes(false, loader);\n+        MappingRepository repo = conf.getMappingRepositoryInstance();\n+        Collection classes = repo.loadPersistentTypes(false, loader);\n         if (classes.isEmpty())\n             return;\n \n         String props = Configurations.getProperties(action);\n         action = Configurations.getClassName(action);\n         MappingTool tool = new MappingTool(conf, action, false);\n+        tool.setRepository(repo);\n+        tool.setSchemaGroup(tool.getSchemaGroup());\n         Configurations.configureInstance(tool, conf, props,\n             \"SynchronizeMappings\");\n "}]}

