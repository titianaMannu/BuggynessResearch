{"sha":"99eb918da3e5dbf1253a57e2b0a2b41f666457a4","node_id":"MDY6Q29tbWl0MjA2MzY0Ojk5ZWI5MThkYTNlNWRiZjEyNTNhNTdlMmIwYTJiNDFmNjY2NDU3YTQ=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2006-07-18T18:10:59Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2006-07-18T18:10:59Z"},"message":"basic logic for converting simple JavaNames to xml-names; added some localization information about forgotten properties; removed spurious memory status printout from base test class; added 'target' to the svn:ignore for all the top-level maven dirs\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@423162 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"43dca10e1b6c2b5f15d994280d0aee74c3028335","url":"https://api.github.com/repos/apache/openjpa/git/trees/43dca10e1b6c2b5f15d994280d0aee74c3028335"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/99eb918da3e5dbf1253a57e2b0a2b41f666457a4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/99eb918da3e5dbf1253a57e2b0a2b41f666457a4","html_url":"https://github.com/apache/openjpa/commit/99eb918da3e5dbf1253a57e2b0a2b41f666457a4","comments_url":"https://api.github.com/repos/apache/openjpa/commits/99eb918da3e5dbf1253a57e2b0a2b41f666457a4/comments","author":null,"committer":null,"parents":[{"sha":"6936fc0d59ddfdbd903580572acd198cd53b86e5","url":"https://api.github.com/repos/apache/openjpa/commits/6936fc0d59ddfdbd903580572acd198cd53b86e5","html_url":"https://github.com/apache/openjpa/commit/6936fc0d59ddfdbd903580572acd198cd53b86e5"}],"stats":{"total":104,"additions":102,"deletions":2},"files":[{"sha":"fe3d2b48c4a28e2f8e2b0ae2ec3e7dfa4da5f695","filename":"openjpa-kernel/src/main/resources/org/apache/openjpa/conf/localizer.properties","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/99eb918da3e5dbf1253a57e2b0a2b41f666457a4/openjpa-kernel/src/main/resources/org/apache/openjpa/conf/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/99eb918da3e5dbf1253a57e2b0a2b41f666457a4/openjpa-kernel/src/main/resources/org/apache/openjpa/conf/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/resources/org/apache/openjpa/conf/localizer.properties?ref=99eb918da3e5dbf1253a57e2b0a2b41f666457a4","patch":"@@ -33,6 +33,14 @@ DataCache-displayorder: 50\n DataCache-expert: true\n DataCache-interface: org.apache.openjpa.datacache.DataCache\n \n+DataCacheManager-name: Data cache\n+DataCacheManager-desc: Plugin used to manage configuration''s cache instances.\n+DataCacheManager-type: General\n+DataCacheManager-cat: Cache\n+DataCacheManager-displayorder: 50\n+DataCacheManager-expert: true\n+DataCacheManager-interface: org.apache.openjpa.datacache.DataCacheManager\n+\n DataCacheTimeout-name: Default data cache timeout\n DataCacheTimeout-desc: The number of milliseconds that data in the data cache \\\n \tis valid for. A value of 0 or less means that by default, cached data does \\\n@@ -236,6 +244,7 @@ Connection2UserName-cat: Connecting.XA\n Connection2UserName-displayorder: 50\n Connection2UserName-expert: true\n \n+\n Connection2Password-name: Unmanaged connection password\n Connection2Password-desc: The password for the user specified in \\\n \tConnection2UserName"},{"sha":"f99fdd32031b91cbc4b046b5c8b0eb4d2ac04a29","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configuration.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/99eb918da3e5dbf1253a57e2b0a2b41f666457a4/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configuration.java","raw_url":"https://github.com/apache/openjpa/raw/99eb918da3e5dbf1253a57e2b0a2b41f666457a4/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configuration.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configuration.java?ref=99eb918da3e5dbf1253a57e2b0a2b41f666457a4","patch":"@@ -66,6 +66,12 @@\n      */\n     public static final String ATTRIBUTE_INTERFACE = \"propertyInterface\";\n \n+    /**\n+     * Attribute of the returned {@link Value} property descriptors naming\n+     * the property's name in XML format (i.e. two-words instead of TwoWords).\n+     */\n+    public static final String ATTRIBUTE_XML = \"xmlName\";\n+    \n     /**\n      * Return the product name. Defaults to <code>solarmetric</code>.\n      */"},{"sha":"ae4a65989dd0be5d0f96368d19d9fbe880212ec8","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationImpl.java","status":"modified","additions":41,"deletions":1,"changes":42,"blob_url":"https://github.com/apache/openjpa/blob/99eb918da3e5dbf1253a57e2b0a2b41f666457a4/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationImpl.java","raw_url":"https://github.com/apache/openjpa/raw/99eb918da3e5dbf1253a57e2b0a2b41f666457a4/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationImpl.java?ref=99eb918da3e5dbf1253a57e2b0a2b41f666457a4","patch":"@@ -131,7 +131,7 @@ public ConfigurationImpl() {\n      */\n     public ConfigurationImpl(boolean loadDefaults) {\n         _prefixes.add(\"openjpa\");\n-        \n+\n         logFactoryPlugin = addPlugin(\"Log\", true);\n         String[] aliases = new String[]{\n             \"true\", \"org.apache.openjpa.lib.log.LogFactoryImpl\",\n@@ -456,6 +456,8 @@ private PropertyDescriptor getPropertyDescriptor(Value val)\n         String cat = findLocalized(prop + \"-cat\", false, val.getScope());\n         if (cat != null)\n             pd.setValue(ATTRIBUTE_CATEGORY, cat);\n+        \n+        pd.setValue(ATTRIBUTE_XML, toXMLName(prop));\n \n         String order = findLocalized(prop + \"-displayorder\", false,\n             val.getScope());\n@@ -762,6 +764,44 @@ public int hashCode() {\n         return toProperties(false).hashCode();\n     }\n \n+    /**\n+     * Convert <code>propName</code> to a lowercase-with-hyphens-style string.\n+     * This algorithm is only designed for mixes of uppercase and lowercase \n+     * letters and lone digits. A more sophisticated conversion should probably \n+     * be handled by a proper parser generator or regular expressions.\n+     */\n+    static String toXMLName(String propName) {\n+        if (propName == null)\n+            return null;\n+        StringBuffer buf = new StringBuffer();\n+        char c;\n+        for (int i = 0; i < propName.length(); i++) {\n+            c = propName.charAt(i);\n+\n+            // convert sequences of all-caps to downcase with dashes around \n+            // them. put a trailing cap that is followed by downcase into the\n+            // downcase word.\n+            if (i != 0 && Character.isUpperCase(c) \n+                && (Character.isLowerCase(propName.charAt(i-1))\n+                    || (i > 1 && i < propName.length() - 1\n+                        && Character.isUpperCase(propName.charAt(i-1)) \n+                        && Character.isLowerCase(propName.charAt(i+1)))))\n+                buf.append('-');\n+            \n+            // surround sequences of digits with dashes.\n+            if (i != 0\n+                && ((!Character.isLetter(c) && Character.isLetter(propName\n+                    .charAt(i - 1))) \n+                    || \n+                    (Character.isLetter(c) && !Character.isLetter(propName\n+                        .charAt(i - 1)))))\n+                buf.append('-');\n+            \n+            buf.append(Character.toLowerCase(c));\n+        }\n+        return buf.toString();\n+    }\n+    \n     /**\n      * Implementation of the {@link Externalizable} interface to read from\n      * the properties written by {@link #writeExternal}."},{"sha":"3159e6033c97d24020ea9f7e80ec8ac7e3090157","filename":"openjpa-lib/src/test/java/org/apache/openjpa/lib/conf/TestXMLCaseConversions.java","status":"added","additions":45,"deletions":0,"changes":45,"blob_url":"https://github.com/apache/openjpa/blob/99eb918da3e5dbf1253a57e2b0a2b41f666457a4/openjpa-lib/src/test/java/org/apache/openjpa/lib/conf/TestXMLCaseConversions.java","raw_url":"https://github.com/apache/openjpa/raw/99eb918da3e5dbf1253a57e2b0a2b41f666457a4/openjpa-lib/src/test/java/org/apache/openjpa/lib/conf/TestXMLCaseConversions.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/test/java/org/apache/openjpa/lib/conf/TestXMLCaseConversions.java?ref=99eb918da3e5dbf1253a57e2b0a2b41f666457a4","patch":"@@ -0,0 +1,45 @@\n+package org.apache.openjpa.lib.conf;\r\n+\r\n+import java.io.BufferedReader;\r\n+import java.io.File;\r\n+import java.io.FileReader;\r\n+import java.io.IOException;\r\n+\r\n+import junit.framework.TestCase;\r\n+\r\n+\r\n+public class TestXMLCaseConversions extends TestCase {\r\n+\r\n+    public void testToXMLName() {\r\n+        assertEquals(\"easy-xml-conversion\", \r\n+            ConfigurationImpl.toXMLName(\"easyXmlConversion\"));\r\n+        assertEquals(\"initial-caps\", \r\n+            ConfigurationImpl.toXMLName(\"InitialCaps\"));\r\n+        assertEquals(\"nodash\", \r\n+            ConfigurationImpl.toXMLName(\"nodash\"));\r\n+        assertEquals(\"anothernodash\", \r\n+            ConfigurationImpl.toXMLName(\"Anothernodash\"));\r\n+        assertEquals(\"multiple-caps\", \r\n+            ConfigurationImpl.toXMLName(\"MUltipleCaps\"));\r\n+        assertEquals(\"trailing-multi-caps\", \r\n+            ConfigurationImpl.toXMLName(\"TrailingMultiCAPS\"));\r\n+        assertEquals(\"two-i-nner-caps\", \r\n+            ConfigurationImpl.toXMLName(\"TwoINnerCaps\"));\r\n+        assertEquals(\"four-inn-er-caps\", \r\n+            ConfigurationImpl.toXMLName(\"FourINNErCaps\"));\r\n+        assertEquals(\"inner-3-number\", \r\n+            ConfigurationImpl.toXMLName(\"Inner3Number\"));\r\n+        assertEquals(\"inner-03-number\", \r\n+            ConfigurationImpl.toXMLName(\"Inner03Number\"));\r\n+    }\r\n+    \r\n+    public static void main(String[] args) throws IOException {\r\n+        BufferedReader r = new BufferedReader (new FileReader(new File(args[0])));\r\n+        while (true) {\r\n+            String s = r.readLine();\r\n+            if (s == null)\r\n+                break;\r\n+            System.out.println(s + \": \" + ConfigurationImpl.toXMLName(s));\r\n+        }\r\n+    }\r\n+}\r"},{"sha":"8db5096eb36875e136f7fca82d17775b2a1e9313","filename":"openjpa-lib/src/test/java/org/apache/openjpa/lib/test/AbstractTestCase.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/99eb918da3e5dbf1253a57e2b0a2b41f666457a4/openjpa-lib/src/test/java/org/apache/openjpa/lib/test/AbstractTestCase.java","raw_url":"https://github.com/apache/openjpa/raw/99eb918da3e5dbf1253a57e2b0a2b41f666457a4/openjpa-lib/src/test/java/org/apache/openjpa/lib/test/AbstractTestCase.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/test/java/org/apache/openjpa/lib/test/AbstractTestCase.java?ref=99eb918da3e5dbf1253a57e2b0a2b41f666457a4","patch":"@@ -218,7 +218,7 @@ public void tearDownTestClass() throws Exception {\n     }\r\n \r\n     public void tearDown() throws Exception {\r\n-        if (\"true\".equals(System.getProperty(\"meminfo\", \"true\")))\r\n+        if (\"true\".equals(System.getProperty(\"meminfo\")))\r\n             printMemoryInfo();\r\n \r\n         super.tearDown();\r"}]}

