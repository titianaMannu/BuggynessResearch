{"sha":"99ecf9564bc9f260bde9f702b2a79b121414345a","node_id":"MDY6Q29tbWl0MjA2MzY0Ojk5ZWNmOTU2NGJjOWYyNjBiZGU5ZjcwMmIyYTc5YjEyMTQxNDM0NWE=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2007-08-10T17:33:08Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2007-08-10T17:33:08Z"},"message":"OPENJPA-311\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@564688 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"31ba5fda798b03481b077c19c7e55a6950e52d91","url":"https://api.github.com/repos/apache/openjpa/git/trees/31ba5fda798b03481b077c19c7e55a6950e52d91"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/99ecf9564bc9f260bde9f702b2a79b121414345a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/99ecf9564bc9f260bde9f702b2a79b121414345a","html_url":"https://github.com/apache/openjpa/commit/99ecf9564bc9f260bde9f702b2a79b121414345a","comments_url":"https://api.github.com/repos/apache/openjpa/commits/99ecf9564bc9f260bde9f702b2a79b121414345a/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"8ba0483bf7273d3e26d88a4ac39762861afc0869","url":"https://api.github.com/repos/apache/openjpa/commits/8ba0483bf7273d3e26d88a4ac39762861afc0869","html_url":"https://github.com/apache/openjpa/commit/8ba0483bf7273d3e26d88a4ac39762861afc0869"}],"stats":{"total":27,"additions":21,"deletions":6},"files":[{"sha":"4dd235aa638ebe8f7a721162e9ebdfea5a2e6438","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/GeneratedClasses.java","status":"modified","additions":21,"deletions":6,"changes":27,"blob_url":"https://github.com/apache/openjpa/blob/99ecf9564bc9f260bde9f702b2a79b121414345a/openjpa-kernel/src/main/java/org/apache/openjpa/util/GeneratedClasses.java","raw_url":"https://github.com/apache/openjpa/raw/99ecf9564bc9f260bde9f702b2a79b121414345a/openjpa-kernel/src/main/java/org/apache/openjpa/util/GeneratedClasses.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/GeneratedClasses.java?ref=99ecf9564bc9f260bde9f702b2a79b121414345a","patch":"@@ -50,12 +50,9 @@ public static ClassLoader getMostDerivedLoader(Class c1, Class c2) {\n         if (l2 == null)\r\n             return l1;\r\n \r\n-        for (ClassLoader p = (ClassLoader) AccessController.doPrivileged(\r\n-                J2DoPrivHelper.getParentAction(l1)); p != null;\r\n-                p = (ClassLoader) AccessController.doPrivileged(\r\n-                    J2DoPrivHelper.getParentAction(p)))\r\n-            if (p == l2)\r\n-                return l1;\r\n+        if(canLoad(l1, c2)) {\r\n+            return l1;\r\n+        }\r\n         return l2;\r\n     }\r\n \r\n@@ -74,4 +71,22 @@ public static Class loadBCClass(BCClass bc, ClassLoader loader) {\n             throw new GeneralException(bc.getName()).setCause(t);\r\n         }\r\n     }\r\n+    \r\n+    /**\r\n+     * Return true if the given loader will load the same version of a given \r\n+     * class.  \r\n+     * \r\n+     * @param loader Classloader to use.\r\n+     * @param clazz  Expected class. \r\n+     * @return true if loader.load(clazz.getName()) == clazz. Otherwise false.\r\n+     */\r\n+    private static boolean canLoad(ClassLoader loader, Class clazz) {\r\n+        Class loaded = null;\r\n+        try {\r\n+            loaded = loader.loadClass(clazz.getName());\r\n+        } catch (ClassNotFoundException e) {\r\n+            // Rely on caller to handle return value = false.\r\n+        }\r\n+        return clazz == loaded;\r\n+    }\r\n }\r"}]}

