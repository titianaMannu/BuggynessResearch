{"sha":"9c25f9bdf555dd57de22e5cbbc9b73cce7c0c000","node_id":"MDY6Q29tbWl0MjA2MzY0OjljMjVmOWJkZjU1NWRkNTdkZTIyZTVjYmJjOWI3M2NjZTdjMGMwMDA=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-04-03T17:20:01Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-04-03T17:20:01Z"},"message":"Minor formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@525213 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"b4c5068167ef3e2b36aa2cc2895ef6601247a82c","url":"https://api.github.com/repos/apache/openjpa/git/trees/b4c5068167ef3e2b36aa2cc2895ef6601247a82c"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/9c25f9bdf555dd57de22e5cbbc9b73cce7c0c000","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/9c25f9bdf555dd57de22e5cbbc9b73cce7c0c000","html_url":"https://github.com/apache/openjpa/commit/9c25f9bdf555dd57de22e5cbbc9b73cce7c0c000","comments_url":"https://api.github.com/repos/apache/openjpa/commits/9c25f9bdf555dd57de22e5cbbc9b73cce7c0c000/comments","author":null,"committer":null,"parents":[{"sha":"24538f54312528209b933e34f082447d85af60f6","url":"https://api.github.com/repos/apache/openjpa/commits/24538f54312528209b933e34f082447d85af60f6","html_url":"https://github.com/apache/openjpa/commit/24538f54312528209b933e34f082447d85af60f6"}],"stats":{"total":13,"additions":6,"deletions":7},"files":[{"sha":"7e6bdac4cc9456c6d53e965c2eee431475d72c8f","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingInfo.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/9c25f9bdf555dd57de22e5cbbc9b73cce7c0c000/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingInfo.java","raw_url":"https://github.com/apache/openjpa/raw/9c25f9bdf555dd57de22e5cbbc9b73cce7c0c000/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingInfo.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingInfo.java?ref=9c25f9bdf555dd57de22e5cbbc9b73cce7c0c000","patch":"@@ -441,7 +441,7 @@ public Table createTable(MetaDataContext context, TableDefaults def,\n             if (schema == null) {\n                 schemaName = Schemas.getNewTableSchema((JDBCConfiguration)\n                     repos.getConfiguration());\n-                if(StringUtils.isEmpty(schemaName)) { \n+                if (StringUtils.isEmpty(schemaName)) { \n                    schemaName = _defaultSchemaName;\n                 }\n                 schema = group.getSchema(schemaName);"},{"sha":"6ac9af3dcc1029a3933c7198f241bec0ad276fa4","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/PersistenceMappingDefaults.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/9c25f9bdf555dd57de22e5cbbc9b73cce7c0c000/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/PersistenceMappingDefaults.java","raw_url":"https://github.com/apache/openjpa/raw/9c25f9bdf555dd57de22e5cbbc9b73cce7c0c000/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/PersistenceMappingDefaults.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/PersistenceMappingDefaults.java?ref=9c25f9bdf555dd57de22e5cbbc9b73cce7c0c000","patch":"@@ -116,26 +116,25 @@ public Object getStrategy(Discriminator disc, boolean adapt) {\n     @Override\n     public String getTableName(ClassMapping cls, Schema schema) {\n         String name = \"\";\n-\n-        if(StringUtils.isNotEmpty(schema.getName())) { \n-            name +=schema.getName() + '.'; \n+        if (StringUtils.isNotEmpty(schema.getName())) {\n+            name += schema.getName() + '.';\n         }\n \n         if (cls.getTypeAlias() != null)\n             name += cls.getTypeAlias();\n         \n         else\n             name += Strings.getClassName(cls.getDescribedType()).replace('$',\n-                    '_');\n+                '_');\n         \n         return name;\n     }\n \n     @Override\n     public String getTableName(FieldMapping fm, Schema schema) {\n         String name = \"\"; \n-        if(StringUtils.isNotEmpty(schema.getName())) { \n-            name +=schema.getName() + '.'; \n+        if (StringUtils.isNotEmpty(schema.getName())) {\n+            name += schema.getName() + '.';\n         }\n         \n         // base name is table of defining type + '_'"}]}

