{"sha":"9c3a7117a83a2e0035cb7d73a14aa42663187a4b","node_id":"MDY6Q29tbWl0MjA2MzY0OjljM2E3MTE3YTgzYTJlMDAzNWNiN2Q3M2ExNGFhNDI2NjMxODdhNGI=","commit":{"author":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2009-09-25T17:45:49Z"},"committer":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2009-09-25T17:45:49Z"},"message":"OPENJPA-859: Handle having relational info in mapping file and annotations. Patch contributed by Rick Curtis. \n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@818928 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0ca48a134208414393dcb8fb1fc03fcf56f7a630","url":"https://api.github.com/repos/apache/openjpa/git/trees/0ca48a134208414393dcb8fb1fc03fcf56f7a630"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/9c3a7117a83a2e0035cb7d73a14aa42663187a4b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/9c3a7117a83a2e0035cb7d73a14aa42663187a4b","html_url":"https://github.com/apache/openjpa/commit/9c3a7117a83a2e0035cb7d73a14aa42663187a4b","comments_url":"https://api.github.com/repos/apache/openjpa/commits/9c3a7117a83a2e0035cb7d73a14aa42663187a4b/comments","author":null,"committer":null,"parents":[{"sha":"eb8abb81fc295e47521262bf7c297fda3540c4b5","url":"https://api.github.com/repos/apache/openjpa/commits/eb8abb81fc295e47521262bf7c297fda3540c4b5","html_url":"https://github.com/apache/openjpa/commit/eb8abb81fc295e47521262bf7c297fda3540c4b5"}],"stats":{"total":121,"additions":107,"deletions":14},"files":[{"sha":"ec08f874af50ddbed7e83c5a38bdb626f2bd1987","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java","status":"modified","additions":19,"deletions":14,"changes":33,"blob_url":"https://github.com/apache/openjpa/blob/9c3a7117a83a2e0035cb7d73a14aa42663187a4b/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java","raw_url":"https://github.com/apache/openjpa/raw/9c3a7117a83a2e0035cb7d73a14aa42663187a4b/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java?ref=9c3a7117a83a2e0035cb7d73a14aa42663187a4b","patch":"@@ -485,21 +485,26 @@ private void addSourceMode(Package pkg, int mode) {\n      * Read annotations for the current type.\n      */\n     private ClassMetaData parseClassAnnotations() {\n-        // check immediately whether the user is using any annotations,\n-        // regardless of mode.  this prevents adding non-entity classes to\n-        // repository if we're ignoring these annotations in mapping mode\n-        if (!(AccessController.doPrivileged(J2DoPrivHelper\n-            .isAnnotationPresentAction(_cls, Entity.class))).booleanValue()\n-            && !(AccessController.doPrivileged(J2DoPrivHelper\n-                .isAnnotationPresentAction(_cls, Embeddable.class)))\n-                .booleanValue()\n-            && !(AccessController.doPrivileged(J2DoPrivHelper\n-                .isAnnotationPresentAction(_cls, MappedSuperclass.class)))\n-                .booleanValue())\n-            return null;\n-\n+        // Check to see if there is cached metadata for the class that we are currently parsing. It is possible\n+        // that one of the annotations (Entity, Embeddable, MappedSuperclass) is in the orm.xml. We still need to look\n+        // at these files for other annotations and more importantly setup defaults (ie: Basic fields). \n+        ClassMetaData m = getRepository().getCachedMetaData(_cls);\n+        if(m == null) {\n+            // check immediately whether the user is using any annotations,\n+            // regardless of mode.  this prevents adding non-entity classes to\n+            // repository if we're ignoring these annotations in mapping mode\n+            if (!(AccessController.doPrivileged(J2DoPrivHelper\n+                .isAnnotationPresentAction(_cls, Entity.class))).booleanValue()\n+                && !(AccessController.doPrivileged(J2DoPrivHelper\n+                    .isAnnotationPresentAction(_cls, Embeddable.class)))\n+                    .booleanValue()\n+                && !(AccessController.doPrivileged(J2DoPrivHelper\n+                    .isAnnotationPresentAction(_cls, MappedSuperclass.class)))\n+                    .booleanValue())\n+                return null;\n+        }\n         // find / create metadata\n-        ClassMetaData meta = getMetaData();\n+        ClassMetaData meta = (m == null) ? getMetaData() : m;\n         if (meta == null)\n             return null;\n "},{"sha":"31f16e1dee6d53fa2ebce53ad9c1721bf183ac36","filename":"openjpa-persistence/src/test/java/org/apache/openjpa/persistence/TestParsing.java","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/apache/openjpa/blob/9c3a7117a83a2e0035cb7d73a14aa42663187a4b/openjpa-persistence/src/test/java/org/apache/openjpa/persistence/TestParsing.java","raw_url":"https://github.com/apache/openjpa/raw/9c3a7117a83a2e0035cb7d73a14aa42663187a4b/openjpa-persistence/src/test/java/org/apache/openjpa/persistence/TestParsing.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/test/java/org/apache/openjpa/persistence/TestParsing.java?ref=9c3a7117a83a2e0035cb7d73a14aa42663187a4b","patch":"@@ -0,0 +1,39 @@\n+package org.apache.openjpa.persistence;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import junit.framework.TestCase;\n+\n+import org.apache.openjpa.conf.OpenJPAConfigurationImpl;\n+import org.apache.openjpa.lib.conf.ConfigurationProvider;\n+import org.apache.openjpa.meta.MetaDataRepository;\n+\n+public class TestParsing extends TestCase {\n+\n+    /**\n+     * Testcase for added OPENJPA-859.\n+     * \n+     * This scenario is testing whether the default annotations are being generated for a class that\n+     * isn't annotated with a persistence class type (ie: @Entity, @Mapped-Superclass, @Embeddable),\n+     * but it is in a mapping file.\n+     * \n+     * @throws Exception\n+     */\n+    public void testMixedOrmAnno() throws Exception {\n+        PersistenceProductDerivation pd = new PersistenceProductDerivation();\n+        Map<String, String> m = new HashMap<String, String>();\n+\n+        ConfigurationProvider cp = pd.load(\"\", \"test_parsing\", m);\n+        OpenJPAConfigurationImpl conf = new OpenJPAConfigurationImpl(true, true);\n+        cp.setInto(conf);\n+\n+        MetaDataRepository mdr = conf.getMetaDataRepositoryInstance();\n+        Set<String> classes = mdr.getPersistentTypeNames(false, null);\n+        for (String c : classes) {\n+            Class cls = Class.forName(c);\n+            mdr.getMetaData(cls, null, true);\n+        }\n+    }\n+}"},{"sha":"50baaec5e2ec0fe9e11b4869619d963dcca05b1e","filename":"openjpa-persistence/src/test/java/org/apache/openjpa/persistence/entity/MixedMappingLocation.java","status":"added","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/apache/openjpa/blob/9c3a7117a83a2e0035cb7d73a14aa42663187a4b/openjpa-persistence/src/test/java/org/apache/openjpa/persistence/entity/MixedMappingLocation.java","raw_url":"https://github.com/apache/openjpa/raw/9c3a7117a83a2e0035cb7d73a14aa42663187a4b/openjpa-persistence/src/test/java/org/apache/openjpa/persistence/entity/MixedMappingLocation.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/test/java/org/apache/openjpa/persistence/entity/MixedMappingLocation.java?ref=9c3a7117a83a2e0035cb7d73a14aa42663187a4b","patch":"@@ -0,0 +1,17 @@\n+package org.apache.openjpa.persistence.entity;\n+\n+import javax.persistence.Basic;\n+import javax.persistence.Id;\n+\n+/**\n+ * This class doesn't have an @Entity and @Basic on purpose.\n+ */\n+public class MixedMappingLocation {\n+    @Id\n+    int id;\n+\n+    String basic1;\n+\n+    @Basic\n+    String basic2;\n+}"},{"sha":"75f24bf1e11cd6462634343e697528b6a72a3c78","filename":"openjpa-persistence/src/test/resources/META-INF/parsing-orm.xml","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/apache/openjpa/blob/9c3a7117a83a2e0035cb7d73a14aa42663187a4b/openjpa-persistence/src/test/resources/META-INF/parsing-orm.xml","raw_url":"https://github.com/apache/openjpa/raw/9c3a7117a83a2e0035cb7d73a14aa42663187a4b/openjpa-persistence/src/test/resources/META-INF/parsing-orm.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/test/resources/META-INF/parsing-orm.xml?ref=9c3a7117a83a2e0035cb7d73a14aa42663187a4b","patch":"@@ -0,0 +1,28 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+\n+ http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.\n+-->\n+<entity-mappings xmlns=\"http://java.sun.com/xml/ns/persistence/orm\" version=\"1.0\">\n+    <entity class=\"org.apache.openjpa.persistence.entity.MixedMappingLocation\">\n+\t\t<attributes>\n+\t\t\t<basic name=\"basic1\">\n+\t\t\t\t<column name=\"basic1_override\" length=\"100\"/>\n+\t\t\t</basic>         \n+\t\t</attributes>\n+    </entity>\n+</entity-mappings>"},{"sha":"17f2c016a9cbba10271583ffc308715d6291f2aa","filename":"openjpa-persistence/src/test/resources/META-INF/persistence.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/9c3a7117a83a2e0035cb7d73a14aa42663187a4b/openjpa-persistence/src/test/resources/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/9c3a7117a83a2e0035cb7d73a14aa42663187a4b/openjpa-persistence/src/test/resources/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/test/resources/META-INF/persistence.xml?ref=9c3a7117a83a2e0035cb7d73a14aa42663187a4b","patch":"@@ -43,4 +43,8 @@\n     <persistence-unit name=\"exclude_true\">\n         <exclude-unlisted-classes>true</exclude-unlisted-classes>\n     </persistence-unit>\n+    <persistence-unit name=\"test_parsing\">\n+    \t<mapping-file>META-INF/parsing-orm.xml</mapping-file>\n+\t\t<class>org.apache.openjpa.persistence.entity.MixedMappingLocation</class>\t\t\n+    </persistence-unit>\n </persistence>"}]}

