{"sha":"9d40841d48636bff9246b2ddc6fb3005dd8c9374","node_id":"MDY6Q29tbWl0MjA2MzY0OjlkNDA4NDFkNDg2MzZiZmY5MjQ2YjJkZGM2ZmIzMDA1ZGQ4YzkzNzQ=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2008-11-13T18:33:07Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2008-11-13T18:33:07Z"},"message":"OPENJPA-340: Let DBDictionary generate Unique Constraint names rather than Unique trying to auto-generate such names in lesser scope. Strengthen the tests to have exactly same named unique columns in two classes to verify that the unique constraint names are unique across tables.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@713778 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"d426cfd856c5329ae1d8b40f9aa9c4fdb6116a6c","url":"https://api.github.com/repos/apache/openjpa/git/trees/d426cfd856c5329ae1d8b40f9aa9c4fdb6116a6c"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/9d40841d48636bff9246b2ddc6fb3005dd8c9374","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/9d40841d48636bff9246b2ddc6fb3005dd8c9374","html_url":"https://github.com/apache/openjpa/commit/9d40841d48636bff9246b2ddc6fb3005dd8c9374","comments_url":"https://api.github.com/repos/apache/openjpa/commits/9d40841d48636bff9246b2ddc6fb3005dd8c9374/comments","author":null,"committer":null,"parents":[{"sha":"25c31398f15b5bf6a9bac71f4891e818791c4ffd","url":"https://api.github.com/repos/apache/openjpa/commits/25c31398f15b5bf6a9bac71f4891e818791c4ffd","html_url":"https://github.com/apache/openjpa/commit/25c31398f15b5bf6a9bac71f4891e818791c4ffd"}],"stats":{"total":202,"additions":76,"deletions":126},"files":[{"sha":"b6ecfa5d22379bfb9fc9dcc8eef3c29455917689","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/Unique.java","status":"modified","additions":5,"deletions":58,"changes":63,"blob_url":"https://github.com/apache/openjpa/blob/9d40841d48636bff9246b2ddc6fb3005dd8c9374/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/Unique.java","raw_url":"https://github.com/apache/openjpa/raw/9d40841d48636bff9246b2ddc6fb3005dd8c9374/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/Unique.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/Unique.java?ref=9d40841d48636bff9246b2ddc6fb3005dd8c9374","patch":"@@ -18,8 +18,6 @@\n  */\n package org.apache.openjpa.jdbc.schema;\n \n-import org.apache.commons.lang.StringUtils;\n-\n /**\n  * Represents a unique constraint. It can also represent a partial constraint.\n  *\n@@ -28,28 +26,19 @@\n  */\n public class Unique\n     extends LocalConstraint {\n-    private boolean _autoNaming = false;\n-    private static int _counter = 1;\n+\t\n+\tpublic Unique() {\n+\t\tsuper();\n+\t}\n     \n-\t/**\n-     * Default constructor without a name.\n-     * Implies that this constraint will auto-generate its name from the names \n-     * of its columns, unless later the name is set explicitly.\n-     */\n-    public Unique() {\n-    \t_autoNaming = true;\n-    }\n-\n     /**\n      * Construct with given name.\n-     * Implies that this constraint will not auto-generate its name.\n      * \n      * @param name the name of the constraint, if any\n      * @param table the table of the constraint\n      */\n     public Unique(String name, Table table) {\n         super(name, table);\n-    \t_autoNaming = false;\n     }\n \n     public boolean isLogical() {\n@@ -69,59 +58,17 @@ public void addColumn(Column col) {\n     \n     /**\n      * Set the name of the constraint. This method cannot be called if the\n-     * constraint already belongs to a table. Calling this method also has the\n-     * side-effect of implying that the instance will not auto-generate its\n-     * name.\n+     * constraint already belongs to a table. \n      */\n     public void setName(String name) {\n         super.setName(name);\n-        _autoNaming = false;\n     }\n     \n-    /**\n-     * Gets the name of the constraint. If no name has been set by the user\n-     * then this method has the side-effect of auto-generating a name from\n-     * the name of its columns.\n-     */\n-    public String getName() {\n-    \tif (getTable() == null && _autoNaming) {\n-    \t\tsetName(createAutoName());\n-    \t\t_autoNaming = true;\n-    \t}\n-    \treturn super.getName();\n-    }\n-\n     /**\n      * Return true if the structure of this primary key matches that of\n      * the given one (same table, same columns).\n      */\n     public boolean equalsUnique(Unique unq) {\n         return equalsLocalConstraint(unq);\n     }\n-\n-    /*\n-     * Affirms if this instance is currently generating its own name. No \n-     * mutator because auto-naming is switched off as side-effect of user \n-     * calling setName() directly. \n-     */\n-\tpublic boolean isAutoNaming() {\n-\t\treturn _autoNaming;\n-\t}\n-\t\n-\tprivate String createAutoName() {\n-\t\tColumn[] columns = getColumns();\n-\t\tint l = 32/Math.max(columns.length,1);\n-\t\tStringBuffer autoName = new StringBuffer(\"UNQ_\"); \n-\t\tif (columns.length == 0) \n-\t\t\tautoName.append(_counter++);\n-\t\tfor (Column column : columns)\n-\t\t\tautoName.append(chop(column.getName(),l));\n-\t\treturn autoName.toString();\n-\t}\n-\t\n-    private String chop(String name, int head) {\n-    \tif (StringUtils.isEmpty(name))\n-    \t\treturn name;\n-    \treturn name.substring(0, Math.min(Math.max(1,head), name.length()));\n-    }\n }"},{"sha":"5329d0bacd474d4ab2de6339fa5217d72d73e9df","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/unique/TestUniqueConstraint.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/9d40841d48636bff9246b2ddc6fb3005dd8c9374/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/unique/TestUniqueConstraint.java","raw_url":"https://github.com/apache/openjpa/raw/9d40841d48636bff9246b2ddc6fb3005dd8c9374/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/unique/TestUniqueConstraint.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/unique/TestUniqueConstraint.java?ref=9d40841d48636bff9246b2ddc6fb3005dd8c9374","patch":"@@ -53,20 +53,20 @@ public void testMapping() {\n \t\tList<String> sqls = super.sql;\r\n \t\t\r\n \t\tassertSQLFragnments(sqls, \"CREATE TABLE UNIQUE_A\",\r\n-\t\t\t\t\"UNIQUE .*\\\\(a1, a2\\\\)\", \r\n-\t\t\t\t\"UNIQUE .*\\\\(a3, a4\\\\).*\");\r\n+\t\t\t\t\"UNIQUE .*\\\\(f1, f2\\\\)\", \r\n+\t\t\t\t\"UNIQUE .*\\\\(f3, f4\\\\).*\");\r\n \t\tassertSQLFragnments(sqls, \"CREATE TABLE UNIQUE_B\",\r\n-\t\t\t\t\"UNIQUE .*\\\\(b1, b2\\\\).*\");\r\n+\t\t\t\t\"UNIQUE .*\\\\(f1, f2\\\\).*\");\r\n \t\tassertSQLFragnments(sqls, \"CREATE TABLE UNIQUE_SECONDARY\",\r\n-\t\t\t\t\"UNIQUE .*\\\\(sa1\\\\)\");\r\n+\t\t\t\t\"UNIQUE .*\\\\(sf1\\\\)\");\r\n \t\tassertSQLFragnments(sqls, \"CREATE TABLE UNIQUE_GENERATOR\",\r\n \t\t\t\t\"UNIQUE .*\\\\(GEN1, GEN2\\\\)\");\r\n \t\tassertSQLFragnments(sqls, \"CREATE TABLE UNIQUE_JOINTABLE\",\r\n \t\t\t\t\"UNIQUE .*\\\\(FK_A, FK_B\\\\)\");\r\n \t\tassertSQLFragnments(sqls, \"CREATE TABLE UNIQUE_A\",\r\n-\t\t\t    \"UNIQUE .*\\\\(SAME\\\\)\");\r\n+\t\t\t    \"UNIQUE .*\\\\(f1\\\\)\");\r\n \t\tassertSQLFragnments(sqls, \"CREATE TABLE UNIQUE_B\",\r\n-\t\t\t    \"UNIQUE .*\\\\(SAME\\\\)\");\r\n+\t\t\t    \"UNIQUE .*\\\\(f1\\\\)\");\r\n \t}\r\n \t\t\r\n \tvoid assertSQLFragnments(List<String> list, String... keys) {\r"},{"sha":"dfe1c1b1887a1aef0991ac81ff2d0899a07900e1","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/unique/TestUniqueConstraintWithXMLDescriptor.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/9d40841d48636bff9246b2ddc6fb3005dd8c9374/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/unique/TestUniqueConstraintWithXMLDescriptor.java","raw_url":"https://github.com/apache/openjpa/raw/9d40841d48636bff9246b2ddc6fb3005dd8c9374/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/unique/TestUniqueConstraintWithXMLDescriptor.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/unique/TestUniqueConstraintWithXMLDescriptor.java?ref=9d40841d48636bff9246b2ddc6fb3005dd8c9374","patch":"@@ -60,12 +60,12 @@ public void testMapping() {\n \t\t// Following verification techniques is fragile as databases DDL\r\n \t\t// syntax vary greatly on UNIQUE CONSTRAINT\r\n \t\tassertSQLFragnments(sqls, \"CREATE TABLE UNIQUE_A_XML\",\r\n-\t\t\t\t\"UNIQUE .*\\\\(a1x, a2x\\\\)\", \r\n-\t\t\t\t\"UNIQUE .*\\\\(a3x, a4x\\\\)\");\r\n+\t\t\t\t\"UNIQUE .*\\\\(f1x, f2x\\\\)\", \r\n+\t\t\t\t\"UNIQUE .*\\\\(f3x, f4x\\\\)\");\r\n \t\tassertSQLFragnments(sqls, \"CREATE TABLE UNIQUE_B_XML\",\r\n-\t\t\t\t\"UNIQUE .*\\\\(b1x, b2x\\\\)\");\r\n+\t\t\t\t\"UNIQUE .*\\\\(f1x, f2x\\\\)\");\r\n \t\tassertSQLFragnments(sqls, \"CREATE TABLE UNIQUE_SECONDARY_XML\",\r\n-\t\t\t\t\"UNIQUE .*\\\\(sa1x\\\\)\");\r\n+\t\t\t\t\"UNIQUE .*\\\\(sf1x\\\\)\");\r\n \t\tassertSQLFragnments(sqls, \"CREATE TABLE UNIQUE_GENERATOR_XML\",\r\n \t\t\t\t\"UNIQUE .*\\\\(GEN1_XML, GEN2_XML\\\\)\");\r\n \t\tassertSQLFragnments(sqls, \"CREATE TABLE UNIQUE_JOINTABLE_XML\",\r"},{"sha":"3abb2434dac2b2f08b40a4902a9b6f10c28f9b87","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/unique/UniqueA.java","status":"modified","additions":27,"deletions":18,"changes":45,"blob_url":"https://github.com/apache/openjpa/blob/9d40841d48636bff9246b2ddc6fb3005dd8c9374/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/unique/UniqueA.java","raw_url":"https://github.com/apache/openjpa/raw/9d40841d48636bff9246b2ddc6fb3005dd8c9374/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/unique/UniqueA.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/unique/UniqueA.java?ref=9d40841d48636bff9246b2ddc6fb3005dd8c9374","patch":"@@ -31,52 +31,61 @@\n import javax.persistence.UniqueConstraint;\r\n \r\n /**\r\n- * Data structures for testing unique constraint settings\r\n- * on ORM Annotations.\r\n- * @UniqueConstraint annotation is declared at class-level with @Table, \r\n- * @SecondaryTable annotations and at field-level with @JoinTable annotation.\r\n+ * Data structures for testing unique constraint settings on ORM Annotations.\r\n+ * @UniqueConstraint annotation is declared at class-level with \r\n+ *    @Table, \r\n+ *    @SecondaryTable annotations \r\n+ * and at field-level with \r\n+ *    @JoinTable annotation.\r\n+ * also with\r\n+ *    @Column(unique=true) on single column.\r\n  * \r\n  * The columns included in unique constraint must be non-nullable. This is \r\n  * recommended that the non-nullability of the column is explictly set by the\r\n  * user, though the implementation forces a column to non-nullable as a column\r\n  * is included in a unique constraint.\r\n  * \r\n+ * The name of the constraint is generated by the implementation as JPA ORM\r\n+ * specification has not allowed to specify a name for the constraint via the\r\n+ * annotation or XML descriptor. Some databases allow two constraints having the\r\n+ * same name but applied to different tables, while some other databases do not.\r\n+ *   \r\n+ * \r\n  * @author Pinaki Poddar\r\n  *\r\n  */\r\n @Entity\r\n @Table(name=\"UNIQUE_A\",\r\n-\t   uniqueConstraints={@UniqueConstraint(columnNames={\"a1\",\"a2\"}),\r\n-\t\t                  @UniqueConstraint(columnNames={\"a3\",\"a4\"})})\r\n+\t   uniqueConstraints={@UniqueConstraint(columnNames={\"f1\",\"f2\"}),\r\n+\t\t                  @UniqueConstraint(columnNames={\"f3\",\"f4\"})})\r\n @SecondaryTable(name=\"UNIQUE_SECONDARY\",\r\n-\t\tuniqueConstraints=@UniqueConstraint(columnNames={\"sa1\"}))\r\n+\t\tuniqueConstraints=@UniqueConstraint(columnNames={\"sf1\"}))\r\n \r\n public class UniqueA {\r\n \t@Id\r\n \tprivate int aid;\r\n \r\n+\t// Same named field in UniqueB also is defined as unique\r\n \t@Column(unique=true, nullable=false)\r\n-\tprivate int a1;\r\n+\tprivate int f1;\r\n \t\r\n \t@Column(nullable=false)\r\n-\tprivate int a2;\r\n+\tprivate int f2;\r\n \t\r\n \t@Column(nullable=false)\r\n-\tprivate int a3;\r\n+\tprivate int f3;\r\n \t\r\n \t@Column(nullable=false)\r\n-\tprivate int a4;\r\n-\t\r\n-\t@Column(name=\"SAME\", unique=true)\r\n-\tprivate int same;\r\n+\tprivate int f4;\r\n \t\r\n-\tprivate int a5;\r\n-\tprivate int a6;\r\n+\tprivate int f5;\r\n+\tprivate int f6;\r\n \t\r\n \t@Column(table=\"UNIQUE_SECONDARY\", nullable=false)\r\n-\tprivate short sa1;\r\n+\tprivate short sf1;\r\n+\t\r\n \t@Column(table=\"UNIQUE_SECONDARY\")\r\n-\tprivate short sa2;\r\n+\tprivate short sf2;\r\n \t\r\n \t@ManyToMany\r\n \t@JoinTable(name=\"UNIQUE_JOINTABLE\",\r"},{"sha":"e00297036ff29ad81c12f2f5a1bc9cefac87e410","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/unique/UniqueB.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/9d40841d48636bff9246b2ddc6fb3005dd8c9374/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/unique/UniqueB.java","raw_url":"https://github.com/apache/openjpa/raw/9d40841d48636bff9246b2ddc6fb3005dd8c9374/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/unique/UniqueB.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/unique/UniqueB.java?ref=9d40841d48636bff9246b2ddc6fb3005dd8c9374","patch":"@@ -22,7 +22,7 @@\n \r\n @Entity\r\n @Table(name=\"UNIQUE_B\",\r\n-\t   uniqueConstraints={@UniqueConstraint(columnNames={\"b1\",\"b2\"})})\r\n+\t   uniqueConstraints={@UniqueConstraint(columnNames={\"f1\",\"f2\"})})\r\n public class UniqueB {\r\n \t@Id\r\n \t@GeneratedValue(strategy=GenerationType.TABLE, generator=\"testGenerator\")\r\n@@ -31,10 +31,10 @@\n \t\t\tuniqueConstraints={@UniqueConstraint(columnNames={\"GEN1\",\"GEN2\"})})\r\n \tprivate int bid;\r\n \t\r\n+\t// Same named field in UniqueA also is defined as unique\r\n+\t@Column(unique=true, nullable=false)\r\n+\tprivate int f1;\r\n+\t\r\n \t@Column(nullable=false)\r\n-\tprivate int b1;\r\n-\t@Column(nullable=false)\r\n-\tprivate int b2;\r\n-\t@Column(name=\"SAME\", unique=true)\r\n-\tprivate int same;\r\n+\tprivate int f2;\r\n }\r"},{"sha":"bdaefd3d8cf97f9dce1a762079734781f24d1794","filename":"openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/jdbc/unique/orm.xml","status":"modified","additions":28,"deletions":34,"changes":62,"blob_url":"https://github.com/apache/openjpa/blob/9d40841d48636bff9246b2ddc6fb3005dd8c9374/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/jdbc/unique/orm.xml","raw_url":"https://github.com/apache/openjpa/raw/9d40841d48636bff9246b2ddc6fb3005dd8c9374/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/jdbc/unique/orm.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/jdbc/unique/orm.xml?ref=9d40841d48636bff9246b2ddc6fb3005dd8c9374","patch":"@@ -19,7 +19,7 @@\n -->\r\n <entity-mappings xmlns=\"http://java.sun.com/xml/ns/persistence/orm\"\r\n \txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n-\txsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence/orm orm_1_0.xsd\"\r\n+\txsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence orm_1_0.xsd\"\r\n \tversion=\"1.0\">\r\n \t\r\n \t<persistence-unit-metadata>\r\n@@ -31,48 +31,45 @@\n \t<entity name=\"UniqueA\" class=\"UniqueA\">\r\n \t\t<table name=\"UNIQUE_A_XML\">\r\n \t\t\t<unique-constraint>\r\n-\t\t\t\t<column-name>a1x</column-name>\r\n-\t\t\t\t<column-name>a2x</column-name>\r\n+\t\t\t\t<column-name>f1x</column-name>\r\n+\t\t\t\t<column-name>f2x</column-name>\r\n \t\t\t</unique-constraint>\r\n \t\t\t<unique-constraint>\r\n-\t\t\t\t<column-name>a3x</column-name>\r\n-\t\t\t\t<column-name>a4x</column-name>\r\n+\t\t\t\t<column-name>f3x</column-name>\r\n+\t\t\t\t<column-name>f4x</column-name>\r\n \t\t\t</unique-constraint>\r\n \t\t</table>\r\n \t\t<secondary-table name=\"UNIQUE_SECONDARY_XML\">\r\n \t\t\t<unique-constraint>\r\n-\t\t\t\t<column-name>sa1x</column-name>\r\n+\t\t\t\t<column-name>sf1x</column-name>\r\n \t\t\t</unique-constraint>\r\n \t\t</secondary-table>\r\n \t\t<attributes>\r\n \t\t\t<id name=\"aid\">\r\n \t\t\t</id>\r\n-\t\t\t<basic name=\"a1\">\r\n-\t\t\t\t<column name=\"a1x\"/>\r\n+\t\t\t<basic name=\"f1\">\r\n+\t\t\t\t<column name=\"f1x\" unique=\"true\"/>\r\n \t\t\t</basic>\r\n-\t\t\t<basic name=\"a2\">\r\n-\t\t\t\t<column name=\"a2x\"/>\r\n+\t\t\t<basic name=\"f2\">\r\n+\t\t\t\t<column name=\"f2x\"/>\r\n \t\t\t</basic>\r\n-\t\t\t<basic name=\"a3\">\r\n-\t\t\t\t<column name=\"a3x\"/>\r\n+\t\t\t<basic name=\"f3\">\r\n+\t\t\t\t<column name=\"f3x\"/>\r\n \t\t\t</basic>\r\n-\t\t\t<basic name=\"a4\">\r\n-\t\t\t\t<column name=\"a4x\"/>\r\n+\t\t\t<basic name=\"f4\">\r\n+\t\t\t\t<column name=\"f4x\"/>\r\n \t\t\t</basic>\r\n-\t\t\t<basic name=\"a5\">\r\n-\t\t\t\t<column name=\"a5x\"/>\r\n+\t\t\t<basic name=\"f5\">\r\n+\t\t\t\t<column name=\"f5x\"/>\r\n \t\t\t</basic>\r\n-\t\t\t<basic name=\"a6\">\r\n-\t\t\t\t<column name=\"a6x\"/>\r\n+\t\t\t<basic name=\"f6\">\r\n+\t\t\t\t<column name=\"f6x\"/>\r\n \t\t\t</basic>\r\n-\t\t\t<basic name=\"same\">\r\n-\t\t\t\t<column name=\"SAME\" unique=\"true\"/>\r\n+\t\t\t<basic name=\"sf1\">\r\n+\t\t\t\t<column name=\"sf1x\" table=\"UNIQUE_SECONDARY_XML\" />\r\n \t\t\t</basic>\r\n-\t\t\t<basic name=\"sa1\">\r\n-\t\t\t\t<column name=\"sa1x\" table=\"UNIQUE_SECONDARY_XML\" />\r\n-\t\t\t</basic>\r\n-\t\t\t<basic name=\"sa2\">\r\n-\t\t\t\t<column name=\"sa2x\" table=\"UNIQUE_SECONDARY_XML\" />\r\n+\t\t\t<basic name=\"sf2\">\r\n+\t\t\t\t<column name=\"sf2x\" table=\"UNIQUE_SECONDARY_XML\" />\r\n \t\t\t</basic>\r\n \r\n \t\t\t<many-to-many name=\"bs\">\r\n@@ -91,8 +88,8 @@\n \t<entity name=\"UniqueB\" class=\"UniqueB\">\r\n \t\t<table name=\"UNIQUE_B_XML\">\r\n \t\t\t<unique-constraint>\r\n-\t\t\t\t<column-name>b1x</column-name>\r\n-\t\t\t\t<column-name>b2x</column-name>\r\n+\t\t\t\t<column-name>f1x</column-name>\r\n+\t\t\t\t<column-name>f2x</column-name>\r\n \t\t\t</unique-constraint>\r\n \t\t</table>\r\n \t\t<attributes>\r\n@@ -108,15 +105,12 @@\n \t\t\t\t\t</unique-constraint>\r\n \t\t\t\t</table-generator>\r\n \t\t\t</id>\r\n-\t\t\t<basic name=\"b1\">\r\n-\t\t\t\t<column name=\"b1x\"/>\r\n+\t\t\t<basic name=\"f1\">\r\n+\t\t\t\t<column name=\"f1x\" unique=\"true\"/>\r\n \t\t\t</basic>\r\n-\t\t\t<basic name=\"b2\">\r\n-\t\t\t\t<column name=\"b2x\"/>\r\n+\t\t\t<basic name=\"f2\">\r\n+\t\t\t\t<column name=\"f2x\"/>\r\n \t\t\t</basic>\r\n-            <basic name=\"same\">\r\n-                <column name=\"SAME\" unique=\"true\"/>\r\n-            </basic>\r\n \t\t</attributes>\r\n \t</entity>\r\n </entity-mappings>\r"}]}

