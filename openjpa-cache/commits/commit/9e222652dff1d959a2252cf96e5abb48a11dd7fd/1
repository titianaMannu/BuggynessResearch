{"sha":"9e222652dff1d959a2252cf96e5abb48a11dd7fd","node_id":"MDY6Q29tbWl0MjA2MzY0OjllMjIyNjUyZGZmMWQ5NTlhMjI1MmNmOTZlNWFiYjQ4YTExZGQ3ZmQ=","commit":{"author":{"name":"Romain Manni-Bucau","email":"rmannibucau@gmail.com","date":"2019-01-23T09:21:53Z"},"committer":{"name":"Romain Manni-Bucau","email":"rmannibucau@gmail.com","date":"2019-01-23T09:21:53Z"},"message":"OPENJPA-2770 ensure equal(xxx, literal(boolean)) works in criteria builder","tree":{"sha":"f2ba2be3f2983ccc827fee3a9608cea9d5af8c49","url":"https://api.github.com/repos/apache/openjpa/git/trees/f2ba2be3f2983ccc827fee3a9608cea9d5af8c49"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/9e222652dff1d959a2252cf96e5abb48a11dd7fd","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/9e222652dff1d959a2252cf96e5abb48a11dd7fd","html_url":"https://github.com/apache/openjpa/commit/9e222652dff1d959a2252cf96e5abb48a11dd7fd","comments_url":"https://api.github.com/repos/apache/openjpa/commits/9e222652dff1d959a2252cf96e5abb48a11dd7fd/comments","author":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","site_admin":false},"committer":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","site_admin":false},"parents":[{"sha":"61b48040db743ee46cae6940445baeb57a9f3d80","url":"https://api.github.com/repos/apache/openjpa/commits/61b48040db743ee46cae6940445baeb57a9f3d80","html_url":"https://github.com/apache/openjpa/commit/61b48040db743ee46cae6940445baeb57a9f3d80"}],"stats":{"total":31,"additions":27,"deletions":4},"files":[{"sha":"5f2f8e5db5b2ae0d22e12da33cdf68c6c7fad14e","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/TestTypesafeCriteria.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/9e222652dff1d959a2252cf96e5abb48a11dd7fd/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/TestTypesafeCriteria.java","raw_url":"https://github.com/apache/openjpa/raw/9e222652dff1d959a2252cf96e5abb48a11dd7fd/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/TestTypesafeCriteria.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/TestTypesafeCriteria.java?ref=9e222652dff1d959a2252cf96e5abb48a11dd7fd","patch":"@@ -76,6 +76,16 @@ public void testFalseLiteral() {\n         assertEquivalence(q.where(cb.literal(Boolean.FALSE)), FALSE_JPQL);\n     }\n \n+    public void testBooleanLiteralInEquals() {\n+        CriteriaQuery<Order> q = cb.createQuery(Order.class);\n+        Root<Order> root = q.from(Order.class);\n+        Path<Object> path = root.get(\"delivered\");\n+        Expression<Boolean> literal = cb.literal(Boolean.FALSE);\n+        assertEquals( // we don't want o.delivered = 1 <> 1 but o.delivered = false\n+                \"SELECT o FROM Order o WHERE o.delivered = false\",\n+                ((OpenJPACriteriaQuery<?>) q.select(root).where(cb.equal(path, literal))).toCQL());\n+    }\n+\n     public void testDefaultAndIsTrue() {\n         CriteriaQuery<Person> q = cb.createQuery(Person.class);\n         q.from(Person.class);"},{"sha":"a3e54edd17f4df74a6767f38d0af3a3d9bf7ffed","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/CriteriaBuilderImpl.java","status":"modified","additions":14,"deletions":4,"changes":18,"blob_url":"https://github.com/apache/openjpa/blob/9e222652dff1d959a2252cf96e5abb48a11dd7fd/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/CriteriaBuilderImpl.java","raw_url":"https://github.com/apache/openjpa/raw/9e222652dff1d959a2252cf96e5abb48a11dd7fd/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/CriteriaBuilderImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/CriteriaBuilderImpl.java?ref=9e222652dff1d959a2252cf96e5abb48a11dd7fd","patch":"@@ -264,19 +264,19 @@ public Order desc(Expression<?> x) {\n     @Override\n     public <N extends Number> Expression<N> diff(Expression<? extends N> x,\n         Expression<? extends N> y) {\n-        return new Expressions.Diff<>(x, y);\n+        return new Expressions.Diff<>(replaceExpressionForBinaryOperator(x), replaceExpressionForBinaryOperator(y));\n     }\n \n     @Override\n     public <N extends Number> Expression<N> diff(\n         Expression<? extends N> x, N y) {\n-        return new Expressions.Diff<>(x, y);\n+        return new Expressions.Diff<>(replaceExpressionForBinaryOperator(x), y);\n     }\n \n     @Override\n     public <N extends Number> Expression<N> diff(N x,\n         Expression<? extends N> y) {\n-        return new Expressions.Diff<>(x, y);\n+        return new Expressions.Diff<>(x, replaceExpressionForBinaryOperator(y));\n     }\n \n     @Override\n@@ -288,7 +288,17 @@ public Predicate disjunction() {\n     public Predicate equal(Expression<?> x, Expression<?> y) {\n         if (y == null)\n             return new Expressions.IsNull((ExpressionImpl<?> )x);\n-        return new Expressions.Equal(x, y);\n+        return new Expressions.Equal(replaceExpressionForBinaryOperator(x), replaceExpressionForBinaryOperator(y));\n+    }\n+\n+    private <T> Expression<T> replaceExpressionForBinaryOperator(final Expression<T> expression) {\n+        if (expression == PredicateImpl.TRUE()) {\n+            return (Expression<T>) PredicateImpl.TRUE_CONSTANT;\n+        }\n+        if (expression == PredicateImpl.FALSE()) {\n+            return (Expression<T>) PredicateImpl.FALSE_CONSTANT;\n+        }\n+        return expression;\n     }\n \n     @Override"},{"sha":"ea79d7503069b8bf59cc0a27fbe8acedce2ab2ea","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/PredicateImpl.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/9e222652dff1d959a2252cf96e5abb48a11dd7fd/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/PredicateImpl.java","raw_url":"https://github.com/apache/openjpa/raw/9e222652dff1d959a2252cf96e5abb48a11dd7fd/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/PredicateImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/PredicateImpl.java?ref=9e222652dff1d959a2252cf96e5abb48a11dd7fd","patch":"@@ -45,6 +45,9 @@\n  * @since 2.0.0\n  */\n abstract class PredicateImpl extends ExpressionImpl<Boolean> implements Predicate {\n+    static final Expression<?> TRUE_CONSTANT = new Expressions.Constant<>(true);\n+    static final Expression<?> FALSE_CONSTANT = new Expressions.Constant<>(false);\n+\n     private static Predicate TRUE;\n     private static Predicate FALSE;\n "}]}

