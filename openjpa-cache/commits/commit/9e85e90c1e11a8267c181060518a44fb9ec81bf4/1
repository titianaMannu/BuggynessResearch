{"sha":"9e85e90c1e11a8267c181060518a44fb9ec81bf4","node_id":"MDY6Q29tbWl0MjA2MzY0OjllODVlOTBjMWUxMWE4MjY3YzE4MTA2MDUxOGE0NGZiOWVjODFiZjQ=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2006-11-05T19:25:16Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2006-11-05T19:25:16Z"},"message":"correct configuration property name\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@471499 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"46bd6422cbe924f4bcef82be650abb9938a44d77","url":"https://api.github.com/repos/apache/openjpa/git/trees/46bd6422cbe924f4bcef82be650abb9938a44d77"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/9e85e90c1e11a8267c181060518a44fb9ec81bf4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/9e85e90c1e11a8267c181060518a44fb9ec81bf4","html_url":"https://github.com/apache/openjpa/commit/9e85e90c1e11a8267c181060518a44fb9ec81bf4","comments_url":"https://api.github.com/repos/apache/openjpa/commits/9e85e90c1e11a8267c181060518a44fb9ec81bf4/comments","author":null,"committer":null,"parents":[{"sha":"346f6a0d0c9206778358f4d51869a85fa27a44e0","url":"https://api.github.com/repos/apache/openjpa/commits/346f6a0d0c9206778358f4d51869a85fa27a44e0","html_url":"https://github.com/apache/openjpa/commit/346f6a0d0c9206778358f4d51869a85fa27a44e0"}],"stats":{"total":26,"additions":13,"deletions":13},"files":[{"sha":"a4fc7b78f77d0c7aba64d2e648705de55ab8eb4a","filename":"openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/conf/localizer.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/9e85e90c1e11a8267c181060518a44fb9ec81bf4/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/conf/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/9e85e90c1e11a8267c181060518a44fb9ec81bf4/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/conf/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/conf/localizer.properties?ref=9e85e90c1e11a8267c181060518a44fb9ec81bf4","patch":"@@ -221,7 +221,7 @@ ConnectionURL-values: jdbc:JSQLConnect://<hostname>/database=<database>,\\\n \n connecting-for-dictionary: OpenJPA will now connect to the database to attempt \\\n     to determine what type of database dictionary to use.  To prevent this \\\n-\tconnection in the future, set your org.apache.openjpa.jdbc.DBDictionary \\\n+\tconnection in the future, set your openjpa.jdbc.DBDictionary \\\n     configuration property to the appropriate value for your database (see \\\n     the documentation for available values).\n map-factory: Using mapping factory \"{0}\"."},{"sha":"31b82cb1b4d8246db40929b766b1f6b1e84d16ff","filename":"openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/localizer.properties","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/9e85e90c1e11a8267c181060518a44fb9ec81bf4/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/9e85e90c1e11a8267c181060518a44fb9ec81bf4/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/localizer.properties?ref=9e85e90c1e11a8267c181060518a44fb9ec81bf4","patch":"@@ -81,7 +81,7 @@ generic-unique-exists: \"{0}\" marks its columns as explicitly not unique, but \\\n \ta unique constraint exists.\n generic-unique-support: \"{0}\" marks its columns as having a unique constraint, \\\n \tbut your database does not support unique constraints.  Include \\\n-\t\"SupportsUniqueConstraints=true\" in the org.apache.openjpa.jdbc.DBDictionary \\\n+\t\"SupportsUniqueConstraints=true\" in the openjpa.jdbc.DBDictionary \\\n \tconfiguration property to override this default.\n generic-defer-unique: \"{0}\" marks its columns as having a deferred unique \\\n \tconstraint, but the existing constraint on these columns is not deferred. \\\n@@ -187,7 +187,7 @@ join-unique-exists: \"{0}\" marks its join columns as explicitly not unique, but \\\n \ta unique constraint exists.\n join-unique-support: \"{0}\" marks its join columns as having a unique \\\n \tconstraint, but your database does not support unique constraints.  \\\n-\tInclude \"SupportsUniqueConstraints=true\" in the org.apache.openjpa.jdbc.DBDictionary \\\n+\tInclude \"SupportsUniqueConstraints=true\" in the openjpa.jdbc.DBDictionary \\\n \tconfiguration property to override this default.\n join-defer-unique: \"{0}\" marks its join columns as having a deferred unique \\\n \tconstraint, but the existing constraint on these columns is not deferred. \\\n@@ -331,7 +331,7 @@ cant-use-char: Column \"{0}\" is type CHAR(1), but OpenJPA cannot \\\n \treverse map it into a Java char because OpenJPA is currently configured to \\\n \tstore Java chars into numeric database columns.  To configure OpenJPA to \\\n \tstore Java chars into CHAR(1) columns, set the following property:\\n\\\n-\torg.apache.openjpa.jdbc.DBDictionary: StoreCharsAsNumbers=false\n+\topenjpa.jdbc.DBDictionary: StoreCharsAsNumbers=false\n revtool-running: The reverse mapping tool will run on the database.  The tool \\\n \tis gathering schema information; this process may take some time.  Enable \\\n \tthe org.apache.openjpa.jdbc.Schema logging category to see messages about schema data."},{"sha":"7226d3c8ac9c790bd6653a602899f633c0c408a6","filename":"openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/strats/localizer.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/9e85e90c1e11a8267c181060518a44fb9ec81bf4/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/strats/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/9e85e90c1e11a8267c181060518a44fb9ec81bf4/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/strats/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/strats/localizer.properties?ref=9e85e90c1e11a8267c181060518a44fb9ec81bf4","patch":"@@ -110,7 +110,7 @@ outer-join-support: The subclass-join class indicator mapped to \"{0}\" requires \\\n \touter joins to function.  Your database dictionary is configured to use \\\n \t\"traditional\" join syntax, which does not support outer joins.  To \\\n \tuse SQL 92 joins instead, set the following property:\\n\\\n-\torg.apache.openjpa.jdbc.DBDictionary: JoinSyntax=sql92\n+\topenjpa.jdbc.DBDictionary: JoinSyntax=sql92\n unknown-discrim-value: Could not map disciminator value \"{0}\" to any \\\n \tknown subclasses of the requested class \"{1}\" (known discriminator \\\n \tvalues: {2})."},{"sha":"03d0643bfc43a04436249ff9b6b682910d060a28","filename":"openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/localizer.properties","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/apache/openjpa/blob/9e85e90c1e11a8267c181060518a44fb9ec81bf4/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/9e85e90c1e11a8267c181060518a44fb9ec81bf4/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/localizer.properties?ref=9e85e90c1e11a8267c181060518a44fb9ec81bf4","patch":"@@ -28,7 +28,7 @@ feature-not-supported: The database dictionary in use (\"{0}\") reports that it \\\n \tdoes not have feature \"{1}\".  This feature is needed to complete the \\\n \tcurrent operation.  To force OpenJPA to try to use the feature anyway, set \\\n \tthe following property:\\n\\\n-\torg.apache.openjpa.jdbc.DBDictionary: {1}=<value>\n+\topenjpa.jdbc.DBDictionary: {1}=<value>\n cant-outer-fk: Could not outer join the given foreign key \"{0}\" due to syntax \\\n \tand foreign key limitations.  The join was converted to an inner join.\n no-auto-assign: This database dictionary does not support auto-assigned column \\\n@@ -47,7 +47,7 @@ sqlserver-cachedstmnts: The Microsoft JDBC driver has bugs that manifest \\\n sqlserver-netdirect-batch: The JNetDirect JDBC driver has problems when using \\\n \tbatch statements. Please disable prepared \\\n \tstatement pooling when using the this JDBC driver by including \\\n-\t\"BatchLimit=0\" in your org.apache.openjpa.jdbc.DBDictionary \\\n+\t\"BatchLimit=0\" in your openjpa.jdbc.DBDictionary \\\n \tconfiguration property.\n sqlserver-cursor: The SQLServer connection URL \"{0}\" may be invalid: \\\n \tit does not contain the parameter \"SelectMethod=cursor\", which is \\\n@@ -56,7 +56,7 @@ oracle-syntax: Oracle 8 does not support SQL92 syntax.  You can avoid \\\n \tthis message by setting the \"JoinSyntax\" DBDictionary property \\\n \tto \"database\".\\\n \tFor example:\\n\\\n-\torg.apache.openjpa.jdbc.DBDictionary: oracle(JoinSyntax=database)\n+\topenjpa.jdbc.DBDictionary: oracle(JoinSyntax=database)\n oracle-batch-lob: LOB operations not allowed for batched statement: {0}\n oracle-batch-bug: The Oracle 9.2 JDBC driver has problems with \\\n \tbatch statements and has been disabled by default.  You can \\\n@@ -71,17 +71,17 @@ oracle-batch-override: The BatchLimit property was set even though \\\n oracle-connecting-for-driver: OpenJPA is now connecting to the database in order \\\n \tto figure out what JDBC driver you are using, as OpenJPA must alter its \\\n \tbehavior for this database depending on the driver vendor.  To avoid this \\\n-\tconnection, set the DriverVendor value in your org.apache.openjpa.jdbc.DBDictionary \\\n+\tconnection, set the DriverVendor value in your openjpa.jdbc.DBDictionary \\\n \tconfiguration property to one of the following values:\\n\\\n \toracle, oracle92 (for the 9.2 driver), datadirect, datadirect61 \\\n \t(for driver versions <= 3.1), other \\n\\\n \tFor example:\\n\\\n-\torg.apache.openjpa.jdbc.DBDictionary: oracle(DriverVendor=oracle92)\n+\topenjpa.jdbc.DBDictionary: oracle(DriverVendor=oracle92)\n oracle-constant: Cannot outer join tables \"{0}\" and \"{1}\" using native \\\n \tjoin syntax and constant joins.  If you are using Oracle 9 or higher, \\\n \tyou should instead use SQL92 joins by specifying the JoinSyntax \\\n-\tvalue in the org.apache.openjpa.jdbc.DBDictionary configuration property:\\n\\\n-\torg.apache.openjpa.jdbc.DBDictionary: oracle(JoinSyntax=sql92).\n+\tvalue in the openjpa.jdbc.DBDictionary configuration property:\\n\\\n+\topenjpa.jdbc.DBDictionary: oracle(JoinSyntax=sql92).\n oracle-savepoint: An error occurred when attempting to set an Oracle \\\n \tsavepoint \"{0}\".  You must use Oracle driver and database 9.2 or higher.\n oracle-rollback: An error occurred when attempting to rollback to an Oracle \\\n@@ -103,7 +103,7 @@ bad-param: The specified parameter of type \"{0}\" is not a valid query parameter.\n warn-generic: Your database configuration was not recognized as a supported \\\n \tOpenJPA database. The generic dictionary will be used, which may result in \\\n \tlimited functionality. This behavior can be overridden by specifying the \\\n-\tappropriate dictionary class in the \"org.apache.openjpa.jdbc.DBDictionary\" \\\n+\tappropriate dictionary class in the \"openjpa.jdbc.DBDictionary\" \\\n \tproperty of the OpenJPA configuration.\n using-dict: Using dictionary class \"{0}\"{1}.\n no-pessimistic: This dictionary ({0}) does not support locking, so \\"}]}

