{"sha":"9eb8af5a727b21f201a4930c955cdcd11a38aaaf","node_id":"MDY6Q29tbWl0MjA2MzY0OjllYjhhZjVhNzI3YjIxZjIwMWE0OTMwYzk1NWNkY2QxMWEzOGFhYWY=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2009-08-14T15:29:35Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2009-08-14T15:29:35Z"},"message":"OPENJPA-948:\nAdding support for Ingress database (new dictionary, build config etc.).\nSubmitted by : Alan Raison\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@804261 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"9893ca2b6a45b38a436e504032350c882c07d71b","url":"https://api.github.com/repos/apache/openjpa/git/trees/9893ca2b6a45b38a436e504032350c882c07d71b"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/9eb8af5a727b21f201a4930c955cdcd11a38aaaf","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/9eb8af5a727b21f201a4930c955cdcd11a38aaaf","html_url":"https://github.com/apache/openjpa/commit/9eb8af5a727b21f201a4930c955cdcd11a38aaaf","comments_url":"https://api.github.com/repos/apache/openjpa/commits/9eb8af5a727b21f201a4930c955cdcd11a38aaaf/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"a1e2f57eb9c485235c74ae883f006e2cd05692e2","url":"https://api.github.com/repos/apache/openjpa/commits/a1e2f57eb9c485235c74ae883f006e2cd05692e2","html_url":"https://github.com/apache/openjpa/commit/a1e2f57eb9c485235c74ae883f006e2cd05692e2"}],"stats":{"total":394,"additions":394,"deletions":0},"files":[{"sha":"f2b369e4a10cd190e13a25c3cf6c70c266366c54","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/JDBCConfigurationImpl.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/9eb8af5a727b21f201a4930c955cdcd11a38aaaf/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/JDBCConfigurationImpl.java","raw_url":"https://github.com/apache/openjpa/raw/9eb8af5a727b21f201a4930c955cdcd11a38aaaf/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/JDBCConfigurationImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/JDBCConfigurationImpl.java?ref=9eb8af5a727b21f201a4930c955cdcd11a38aaaf","patch":"@@ -205,6 +205,7 @@ public JDBCConfigurationImpl(boolean derivations, boolean loadGlobals) {\n             \"h2\", \"org.apache.openjpa.jdbc.sql.H2Dictionary\",\n             \"hsql\", \"org.apache.openjpa.jdbc.sql.HSQLDictionary\",\n             \"informix\", \"org.apache.openjpa.jdbc.sql.InformixDictionary\",\n+            \"ingres\", \"org.apache.openjpa.jdbc.sql.IngresDictionary\",\n             \"jdatastore\", \"org.apache.openjpa.jdbc.sql.JDataStoreDictionary\",\n             \"mysql\", \"org.apache.openjpa.jdbc.sql.MySQLDictionary\",\n             \"oracle\", \"org.apache.openjpa.jdbc.sql.OracleDictionary\","},{"sha":"3b2810fea4ee9e154559e10b6fde0630e77e96e0","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionaryFactory.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/9eb8af5a727b21f201a4930c955cdcd11a38aaaf/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionaryFactory.java","raw_url":"https://github.com/apache/openjpa/raw/9eb8af5a727b21f201a4930c955cdcd11a38aaaf/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionaryFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionaryFactory.java?ref=9eb8af5a727b21f201a4930c955cdcd11a38aaaf","patch":"@@ -223,6 +223,8 @@ private static String dictionaryClassForString(String prod\n             return dbdictionaryPlugin.unalias(\"sybase\");\n         if (prod.indexOf(\"informix\") != -1 || prod.indexOf(\"ids\") != -1)\n             return dbdictionaryPlugin.unalias(\"informix\");\n+        if (prod.indexOf(\"ingres\") != -1)\n+            return dbdictionaryPlugin.unalias(\"ingres\");\n         if (prod.indexOf(\"hsql\") != -1)\n             return dbdictionaryPlugin.unalias(\"hsql\");\n         if (prod.indexOf(\"foxpro\") != -1)"},{"sha":"d557aadd2156ad1a599f60c8191d6c4ebeb3409e","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/IngresDictionary.java","status":"added","additions":317,"deletions":0,"changes":317,"blob_url":"https://github.com/apache/openjpa/blob/9eb8af5a727b21f201a4930c955cdcd11a38aaaf/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/IngresDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/9eb8af5a727b21f201a4930c955cdcd11a38aaaf/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/IngresDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/IngresDictionary.java?ref=9eb8af5a727b21f201a4930c955cdcd11a38aaaf","patch":"@@ -0,0 +1,317 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.jdbc.sql;\n+\n+import java.sql.Connection;\n+import java.sql.DatabaseMetaData;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+\n+import org.apache.openjpa.jdbc.kernel.exps.FilterValue;\n+import org.apache.openjpa.jdbc.schema.Sequence;\n+\n+public class IngresDictionary extends DBDictionary {\n+    \n+    public IngresDictionary() {\n+        // Schema Data\n+        platform = \"Ingres\";\n+        driverVendor = \"Ingres Corporation\";\n+        maxColumnNameLength = 32;\n+        maxConstraintNameLength = 32;\n+        maxIndexNameLength = 32;\n+        maxTableNameLength = 32;\n+        supportsDeferredConstraints = false;\n+        schemaCase = DBDictionary.SCHEMA_CASE_LOWER;\n+        systemSchemas = \"$ingres\";\n+        supportsDefaultDeleteAction = false;\n+        supportsDefaultUpdateAction = false;\n+\n+        // SQL\n+        validationSQL = \"SELECT DATE('now')\";\n+        rangePosition = DBDictionary.RANGE_POST_SELECT;\n+        supportsLockingWithDistinctClause = false;\n+        supportsLockingWithInnerJoin = false;\n+        supportsLockingWithMultipleTables = false;\n+        supportsLockingWithOuterJoin = false;\n+        supportsSelectEndIndex = true;\n+        supportsMultipleNontransactionalResultSets = false;\n+        allowsAliasInBulkClause = false;\n+        requiresCastForMathFunctions = true;\n+        requiresAliasForSubselect = true;\n+\n+        // Functions\n+        stringLengthFunction = \"LENGTH({0})\";\n+\n+        // Types\n+        binaryTypeName = \"BYTE\";\n+        bitTypeName = \"TINYINT\";\n+        blobTypeName = \"LONG BYTE\";\n+        booleanTypeName = \"TINYINT\";\n+        charTypeName = \"CHAR\";\n+        clobTypeName = \"LONG NVARCHAR\";\n+        javaObjectTypeName = \"LONG BYTE\";\n+        numericTypeName = \"DECIMAL\";\n+        doubleTypeName = \"FLOAT\";\n+        longVarcharTypeName = \"LONG NVARCHAR\";\n+        longVarbinaryTypeName = \"LONG BYTE\";\n+        varbinaryTypeName = \"LONG BYTE\";\n+        datePrecision = DBDictionary.NANO;\n+\n+        // Schema Metadata\n+        supportsNullTableForGetImportedKeys = true;\n+        supportsNullTableForGetImportedKeys = true;\n+        supportsNullTableForGetIndexInfo = true;\n+        supportsNullTableForGetPrimaryKeys = true;\n+        tableTypes = \"TABLE,VIEW,SYSTEM TABLE\";\n+        requiresAutoCommitForMetaData = true;\n+\n+        // Auto Increment\n+        maxAutoAssignNameLength = 32;\n+        supportsAutoAssign = false;\n+        autoAssignClause = null;\n+        autoAssignTypeName = null;\n+        sequenceSQL = \"SELECT seq_name AS SEQUENCE_NAME, seq_owner AS SEQUENCE_SCHEMA FROM iisequences\";\n+        sequenceNameSQL = \"seq_name = ?\";\n+        sequenceSchemaSQL = \"seq_owner = ?\";\n+        nextSequenceQuery = \"SELECT NEXT VALUE FOR {0}\";\n+\n+        systemTables =\n+            \"iiaccess, iialt_columns, iiattribute, iiaudit, iiaudittables, \"\n+                + \"iicdbid_idx, iicolumns, iiconstraint_indexes, \" \n+                + \"iiconstraints, iidatabase, iidatabase_info, iidb_comments, \" \n+                + \"iidb_subcomments, iidbcapabilities, iidbconstants, \" \n+                + \"iidbdepends, iidbid_idx, iidbms_comment, iidbpriv, \" \n+                + \"iidbprivileges, iiddb_netcost, iiddb_nodecosts, iidefault, \" \n+                + \"iidefaultidx, iidevices, iidistcol, iidistcols, \" \n+                + \"iidistscheme, iidistschemes, iidistval, \"\n+                + \"iievent, iievents, iiextend, iiextend_info, \"\n+                + \"iiextended_relation, iifile_info, iigw06_attribute, \"\n+                + \"iigw06_relation, iigw07_attribute, iigw07_index, \"\n+                + \"iigw07_relation, iihistogram, iihistograms, iiindex, \"\n+                + \"iiindex_columns, iiindexes, iiingres_tables, iiintegrities, \"\n+                + \"iiintegrity, iiintegrityidx, iikey, iikey_columns, iikeys, \"\n+                + \"iilocation_info, iilocations, iilog_help, iilpartitions, \"\n+                + \"iimulti_locations, iiocolumns, iiotables, iipartname, \"\n+                + \"iipermits, iiphysical_columns, iiphysical_tables, iipriv, \"\n+                + \"iiprivlist, iiproc_access, iiproc_params, iiprocedure, \"\n+                + \"iiprocedure_parameter, iiprocedures, iiprofile, iiprofiles, \"\n+                + \"iiprotect, iiqrytext, iirange, iiref_constraints, \"\n+                + \"iiregistrations, iirel_idx, iirelation, iirole, \"\n+                + \"iirolegrant, iirolegrants, iiroles, iirule, iiruleidx, \"\n+                + \"iiruleidx1, iirules, iischema, iischemaidx, iisecalarm, \"\n+                + \"iisectype, iisecurity_alarms, iisecurity_state, \"\n+                + \"iisecuritystate, iisequence, iisequences, \"\n+                + \"iisession_privileges, iistar_cdbinfo, iistar_cdbs, \"\n+                + \"iistatistics, iistats, iisynonym, iisynonyms, iitables, \"\n+                + \"iitree, iiuser, iiusergroup, iiusers, iiviews, \"\n+                + \"iixdbdepends, iixevent, iixpriv, iixprocedure, \"\n+                + \"iixsynonym, ii_abfclasses, ii_abfdependencies, \"\n+                + \"ii_abfobjects, ii_app_cntns_comp, ii_app_cntns_comp_index, \"\n+                + \"ii_applications, ii_atttype, ii_client_dep_mod, \"\n+                + \"ii_components, ii_databases, ii_dbd_acl, \"\n+                + \"ii_dbd_identifiers, ii_dbd_locations, ii_dbd_rightslist, \"\n+                + \"ii_dbd_table_char, ii_defaults, ii_dependencies, \"\n+                + \"ii_dependencies_index, ii_dependencies_index2, \"\n+                + \"ii_dict_modules, ii_domains, ii_encoded_forms, \"\n+                + \"ii_encodings, ii_entities, ii_entities_index, ii_enttype, \"\n+                + \"ii_fields, \" + \"ii_forms, ii_framevars, ii_gropts, \"\n+                + \"ii_id, ii_incl_apps, ii_joindefs, ii_joinspecs, \"\n+                + \"ii_key_info, ii_key_map, ii_limits, ii_locks, \"\n+                + \"ii_longremarks, ii_menuargs, ii_objects, \"\n+                + \"ii_objects_index, ii_qbfnames, ii_rcommands, \"\n+                + \"ii_rel_cncts_ent, ii_reltype, ii_reports, \"\n+                + \"ii_sequence_values, ii_sqlatts, ii_sqltables, \"\n+                + \"ii_srcobj_encoded, ii_stored_bitmaps, ii_stored_strings, \"\n+                + \"ii_trim, ii_vqjoins, ii_vqtabcols, ii_vqtables\";\n+        fixedSizeTypeNames =\n+            \"INTEGER,INTEGER1,INTEGER2,INTEGER4,INTEGER8,TINYINT,SMALLINT,\"\n+                + \"BIGINT,FLOAT,FLOAT4,FLOAT8,REAL,DATE,INGRESDATE,ANSIDATE\";\n+        reservedWords =\n+            \"ABORT,BYREF,CALLPROC,COMMENT,COPY,DEFINE,DISABLE,DO,ELSEIF,\"\n+                + \"ENABLE,ENDIF,ENDLOOP,ENDWHILE,EXCLUDING,IF,IMPORT,INDEX,\"\n+                + \"INTEGRITY,MESSAGE,MODIFY,PERMIT,RAISE,REFERENCING,REGISTER,\"\n+                + \"RELOCATE,REMOVE,REPEAT,RETURN,SAVE,SAVEPOINT,UNTIL,WHILE\";\n+        \n+        /* Don't allow \"tid\" as a column name; this is an internal column */\n+        invalidColumnWordSet.add(\"tid\");\n+    }\n+\n+    /* (non-Javadoc)\n+     * @see org.apache.openjpa.jdbc.sql.DBDictionary#connectedConfiguration(java.sql.Connection)\n+     */\n+    public void connectedConfiguration(Connection conn) throws SQLException {\n+        super.connectedConfiguration(conn);\n+        \n+        if (isVersion9_2orLater(conn))\n+            supportsSelectStartIndex = true;\n+    }\n+    \n+    boolean isVersion9_2orLater(Connection conn) throws SQLException\n+    {\n+        DatabaseMetaData meta = conn.getMetaData();\n+        \n+        int dbMajorVersion = meta.getDatabaseMajorVersion();\n+        int dbMinorVersion = meta.getDatabaseMinorVersion();\n+        \n+        if ((dbMajorVersion == 9 && dbMinorVersion >= 2) ||\n+                dbMajorVersion > 9)\n+            return true;\n+        else\n+            return false;\n+    }\n+\n+    /**\n+     * Implementation of appendSelectRange for Ingres - uses \"SELECT FIRST n\"\n+     * syntax. Not implemented in superclass.\n+     * \n+     * @see org.apache.openjpa.jdbc.sql.DBDictionary#appendSelectRange(\n+     *      org.apache.openjpa.jdbc.sql.SQLBuffer, long, long, boolean)\n+     * \n+     * @param buf\n+     *            - SQL building buffer.\n+     * @param start\n+     *            - Ignored, not supported by Ingres. Throws an\n+     * @param end\n+     *            - The number of records to return.\n+     * @param subselect\n+     *            - Is the SQL query part of a subselect statement?\n+     */\n+    protected void appendSelectRange(SQLBuffer buf, long start, long end,\n+        boolean subselect) {\n+        if (!supportsSelectStartIndex && start > 0) \n+            throw new IllegalArgumentException(\n+                \"Ingres does not support start indexes for Select Ranges\");\n+        \n+        if (start > 0 && start != Long.MAX_VALUE && !subselect)\n+            buf.append(\" OFFSET \").append(Long.toString(start));\n+        \n+        if (end > 0 && end != Long.MAX_VALUE && !subselect) \n+            buf.append(\" FETCH NEXT \").append(Long.toString(end)).append(\" ROWS ONLY\");\n+    }\n+    \n+    /**\n+     * Implementation of empty method in DBDictionary.  Returns SQL to find the sequences defined in the database.\n+     */\n+    @Override\n+    protected String getSequencesSQL(String schemaName, String sequenceName) {\n+        StringBuffer buf = new StringBuffer();\n+        buf.append(sequenceSQL);\n+        if (schemaName != null || sequenceName != null)\n+            buf.append(\" WHERE \");\n+        if (schemaName != null) {\n+            buf.append(sequenceSchemaSQL);\n+            if (sequenceName != null)\n+                buf.append(\" AND \");\n+        }\n+        if (sequenceName != null)\n+            buf.append(sequenceNameSQL);\n+        return buf.toString();\n+    }\n+    \n+    /**\n+     * Overrides DBDictionary's newSequence method; trims the sequence name.\n+     * \n+     * @see org.apache.openjpa.jdbc.sql.DBDictionary#newSequence(ResultSet)\n+     */\n+    @Override\n+    protected Sequence newSequence(ResultSet sequenceMeta) throws SQLException {\n+        Sequence seq = super.newSequence(sequenceMeta);\n+        seq.setName(seq.getName().trim());\n+        return seq;\n+    }\n+    \n+    /**\n+     * Invoke Ingres' IndexOf Function (Find the first index of a string in\n+     * another string, starting at a given index).\n+     * \n+     * @see org.apache.openjpa.jdbc.sql.DBDictionary#indexOf(\n+     *      org.apache.openjpa.jdbc.sql.SQLBuffer,\n+     *      org.apache.openjpa.jdbc.kernel.exps.FilterValue,\n+     *      org.apache.openjpa.jdbc.kernel.exps.FilterValue,\n+     *      org.apache.openjpa.jdbc.kernel.exps.FilterValue)\n+     * \n+     * @param buf\n+     *            - the SQL Buffer to write the indexOf invocation to\n+     * @param str\n+     *            - a query value representing the target string\n+     * @param find\n+     *            - a query value representing the search string\n+     * @param start\n+     *            - a query value representing the start index, or null to \n+     *            start at the beginning\n+     */\n+\n+    public void indexOf(SQLBuffer buf, FilterValue str, FilterValue find,\n+        FilterValue start) {\n+        buf.append(\"(POSITION((\");\n+        find.appendTo(buf);\n+        buf.append(\") IN (\");\n+\n+        if (start != null)\n+            substring(buf, str, start, null);\n+        else\n+            str.appendTo(buf);\n+        \n+        buf.append(\")) - 1\");\n+\n+        if (start != null) {\n+            buf.append(\" + \");\n+            start.appendTo(buf);\n+        }\n+        buf.append(\")\");\n+    }\n+\n+    /**\n+     * @see org.apache.openjpa.jdbc.sql.DBDictionary#substring(\n+     *  org.apache.openjpa.jdbc.sql.SQLBuffer, \n+     *  org.apache.openjpa.jdbc.kernel.exps.FilterValue, \n+     *  org.apache.openjpa.jdbc.kernel.exps.FilterValue, \n+     *  org.apache.openjpa.jdbc.kernel.exps.FilterValue)\n+     */\n+    public void substring(SQLBuffer buf, FilterValue str, FilterValue start,\n+        FilterValue end) {\n+        buf.append(substringFunctionName).append(\"(\");\n+        str.appendTo(buf);\n+        buf.append(\", \");\n+        if (start.getValue() instanceof Number) {\n+            long startLong = toLong(start);\n+            buf.append(Long.toString(startLong + 1));\n+        } else {\n+            buf.append(\"(CAST ((\");\n+            start.appendTo(buf);\n+            buf.append(\" + 1) AS INTEGER))\");\n+        }\n+        if (end != null) {\n+            buf.append(\", \");\n+            if (start.getValue() instanceof Number\n+                && end.getValue() instanceof Number) {\n+                long startLong = toLong(start);\n+                long endLong = toLong(end);\n+                buf.append(Long.toString(endLong - startLong));\n+            } else {\n+                buf.append(\"(CAST (\");\n+                end.appendTo(buf);\n+                buf.append(\" - (\");\n+                start.appendTo(buf);\n+                buf.append(\") AS INTEGER))\");\n+            }\n+        }\n+        buf.append(\")\");\n+    }  \n+}"},{"sha":"f93a38d32ed0028f8f1b151f9cdc549d00d534ae","filename":"openjpa-persistence-jdbc/pom.xml","status":"modified","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/apache/openjpa/blob/9eb8af5a727b21f201a4930c955cdcd11a38aaaf/openjpa-persistence-jdbc/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/9eb8af5a727b21f201a4930c955cdcd11a38aaaf/openjpa-persistence-jdbc/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/pom.xml?ref=9eb8af5a727b21f201a4930c955cdcd11a38aaaf","patch":"@@ -279,6 +279,25 @@\n                 <connection.password>${openjpa.sybase.password}</connection.password>\n             </properties>\n         </profile>\n+        \n+        <profile>\n+            <id>test-ingres</id>\n+            <activation><property><name>test-ingres</name></property></activation>\n+            <dependencies>\n+                <dependency>\n+                    <groupId>com.ingres.jdbc</groupId>\n+                    <artifactId>iijdbc</artifactId>\n+                    <version>9.2-3.4.8</version>\n+                    <scope>test</scope>\n+                </dependency>\n+            </dependencies>\n+            <properties>\n+                <connection.driver.name>com.ingres.jdbc.IngresDriver</connection.driver.name>\n+                <connection.url>${openjpa.ingres.url}</connection.url>\n+                <connection.username>${openjpa.ingres.username}</connection.username>\n+                <connection.password>${openjpa.ingres.password}</connection.password>\n+            </properties>\n+        </profile>\n \n         <!-- Profile for testing with a custom DB using a system jar -->\n         <!--"},{"sha":"88903ff2f3345475652e4d42e75e8a64d23b4019","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/common/utils/AbstractTestCase.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/9eb8af5a727b21f201a4930c955cdcd11a38aaaf/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/common/utils/AbstractTestCase.java","raw_url":"https://github.com/apache/openjpa/raw/9eb8af5a727b21f201a4930c955cdcd11a38aaaf/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/common/utils/AbstractTestCase.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/common/utils/AbstractTestCase.java?ref=9eb8af5a727b21f201a4930c955cdcd11a38aaaf","patch":"@@ -105,6 +105,7 @@\n         INFORMIX,\n         POINTBASE,\n         SYBASE,\n+        INGRES,\n     }\n \n     protected String multiThreadExecuting = null;"},{"sha":"a7208ddc7bdfc625ae5d7b602c518c119d14f5f3","filename":"openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","status":"modified","additions":13,"deletions":0,"changes":13,"blob_url":"https://github.com/apache/openjpa/blob/9eb8af5a727b21f201a4930c955cdcd11a38aaaf/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","raw_url":"https://github.com/apache/openjpa/raw/9eb8af5a727b21f201a4930c955cdcd11a38aaaf/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml?ref=9eb8af5a727b21f201a4930c955cdcd11a38aaaf","patch":"@@ -671,6 +671,19 @@ class.\n <literal>sybase</literal>: Dictionary for Sybase. This is an alias for the\n <ulink url=\"../javadoc/org/apache/openjpa/jdbc/sql/SybaseDictionary.html\">\n <classname>org.apache.openjpa.jdbc.sql.SybaseDictionary</classname></ulink>\n+class.\n+                </para>\n+            </listitem>\n+            <listitem>\n+                <para>\n+                <indexterm>\n+                    <primary>\n+                        Ingres\n+                    </primary>\n+                </indexterm>\n+<literal>ingres</literal>: Dictionary for Ingres. This is an alias for the\n+<ulink url=\"../javadoc/org/apache/openjpa/jdbc/sql/IngresDictionary.html\">\n+<classname>org.apache.openjpa.jdbc.sql.IngresDictionary</classname></ulink>\n class.\n                 </para>\n             </listitem>"},{"sha":"f3f8c5814a45692ee3aecf06116fd1136cb4c3e6","filename":"openjpa-project/src/doc/manual/supported_databases.xml","status":"modified","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/9eb8af5a727b21f201a4930c955cdcd11a38aaaf/openjpa-project/src/doc/manual/supported_databases.xml","raw_url":"https://github.com/apache/openjpa/raw/9eb8af5a727b21f201a4930c955cdcd11a38aaaf/openjpa-project/src/doc/manual/supported_databases.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/supported_databases.xml?ref=9eb8af5a727b21f201a4930c955cdcd11a38aaaf","patch":"@@ -321,6 +321,20 @@ by OpenJPA.\n                         5.5 (5.5)\n                     </entry>\n                 </row>\n+                <row>\n+                    <entry colname=\"dbname\">\n+                        <link linkend=\"dbsupport_ingres\">Ingres Database</link>\n+                    </entry>\n+                    <entry colname=\"dbversion\">\n+                        9.2\n+                    </entry>\n+                    <entry colname=\"drivname\">\n+                        iijdbc\n+                    </entry>\n+                    <entry colname=\"drivversion\">\n+                        9.2-3.4.8\n+                    </entry>\n+                </row>\n             </tbody>\n         </tgroup>\n     </table>\n@@ -1067,4 +1081,31 @@ the standard <classname>Column</classname> annotation, described in\n             </itemizedlist>\n         </section>\n     </section>\n+    <section id=\"dbsupport_ingres\">\n+        <title>\n+            Ingres Database\n+        </title>\n+<!--        <example id=\"example_props_ingres\">-->\n+<!--            <title>-->\n+<!--                Example properties for Sybase-->\n+<!--            </title>-->\n+<!--<programlisting>-->\n+<!--openjpa.ConnectionDriverName: com.sybase.jdbc2.jdbc.SybDriver-->\n+<!--openjpa.ConnectionURL: \\-->\n+<!--    jdbc:sybase:Tds:SERVER_NAME:4100/DB_NAME?ServiceName=DB_NAME&amp;BE_AS_JDBC_COMPLIANT_AS_POSSIBLE=true-->\n+<!--</programlisting>-->\n+<!--        </example>-->\n+        <section id=\"dbsupport_ingres_issues\">\n+            <title>\n+                Known issues with Ingres\n+            </title>\n+            <itemizedlist>\n+                <listitem>\n+                    <para> \n+                        None.\n+                    </para>\n+                </listitem>\n+            </itemizedlist>\n+        </section>\n+    </section>\n </appendix>"}]}

