{"sha":"9ece24ade3a94b1227bfd40ae9b37b9def386291","node_id":"MDY6Q29tbWl0MjA2MzY0OjllY2UyNGFkZTNhOTRiMTIyN2JmZDQwYWU5YjM3YjlkZWYzODYyOTE=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2008-02-29T19:16:27Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2008-02-29T19:16:27Z"},"message":"Better error message.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@632412 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"aca762ca57e30a1dd8b8a2b836d92355e7e1744b","url":"https://api.github.com/repos/apache/openjpa/git/trees/aca762ca57e30a1dd8b8a2b836d92355e7e1744b"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/9ece24ade3a94b1227bfd40ae9b37b9def386291","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/9ece24ade3a94b1227bfd40ae9b37b9def386291","html_url":"https://github.com/apache/openjpa/commit/9ece24ade3a94b1227bfd40ae9b37b9def386291","comments_url":"https://api.github.com/repos/apache/openjpa/commits/9ece24ade3a94b1227bfd40ae9b37b9def386291/comments","author":null,"committer":null,"parents":[{"sha":"66d6230a417972e229a60375201f788e8085dde2","url":"https://api.github.com/repos/apache/openjpa/commits/66d6230a417972e229a60375201f788e8085dde2","html_url":"https://github.com/apache/openjpa/commit/66d6230a417972e229a60375201f788e8085dde2"}],"stats":{"total":47,"additions":45,"deletions":2},"files":[{"sha":"40394b0eac6f7fcd467e99e90d11502a6b5fcf6a","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/jpql/JPQLExpressionBuilder.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/9ece24ade3a94b1227bfd40ae9b37b9def386291/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/jpql/JPQLExpressionBuilder.java","raw_url":"https://github.com/apache/openjpa/raw/9ece24ade3a94b1227bfd40ae9b37b9def386291/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/jpql/JPQLExpressionBuilder.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/jpql/JPQLExpressionBuilder.java?ref=9ece24ade3a94b1227bfd40ae9b37b9def386291","patch":"@@ -1355,8 +1355,8 @@ else if (val instanceof Path)\n         else if (val.getMetaData() != null)\n             path = newPath(val, val.getMetaData());\n         else\n-            throw parseException(EX_USER, \"path-no-meta\",\n-                new Object[]{ assemble(node), null }, null);\n+            throw parseException(EX_USER, \"path-invalid\",\n+                new Object[]{ assemble(node), name }, null);\n \n         // walk through the children and assemble the path\n         boolean allowNull = !inner;"},{"sha":"f1da81f100e6b64fa336150a05f8b54ef2cd8188","filename":"openjpa-kernel/src/main/resources/org/apache/openjpa/kernel/jpql/localizer.properties","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/9ece24ade3a94b1227bfd40ae9b37b9def386291/openjpa-kernel/src/main/resources/org/apache/openjpa/kernel/jpql/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/9ece24ade3a94b1227bfd40ae9b37b9def386291/openjpa-kernel/src/main/resources/org/apache/openjpa/kernel/jpql/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/resources/org/apache/openjpa/kernel/jpql/localizer.properties?ref=9ece24ade3a94b1227bfd40ae9b37b9def386291","patch":"@@ -45,6 +45,9 @@ unknown-type: Cannot determine the type of field \"{0}\".\n unexpected-var: The variable \"{0}\" was found where a constant or \\\n \tfield value was expected.\n path-no-meta: Attempt to query field \"{0}\" from non-entity class \"{1}\".\n+path-invalid: Attempt to query field \"{0}\" from non-entity variable \"{1}\". \\\n+    Perhaps you forgot to prefix the path in question with an identification \\\n+    variable from your FROM clause?\n not-yet-supported: Expressions of type \"{0}\" are not yet supported.\n bad-positional-parameter: The positional parameter \"{0}\" is invalid. \\\n \tPositional parameters must be integers greater than zero."},{"sha":"ff3f3064bc8e8786f05c9b68859f59755e1332b5","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestJPQLWithoutIdentificationVariable.java","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/apache/openjpa/blob/9ece24ade3a94b1227bfd40ae9b37b9def386291/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestJPQLWithoutIdentificationVariable.java","raw_url":"https://github.com/apache/openjpa/raw/9ece24ade3a94b1227bfd40ae9b37b9def386291/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestJPQLWithoutIdentificationVariable.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestJPQLWithoutIdentificationVariable.java?ref=9ece24ade3a94b1227bfd40ae9b37b9def386291","patch":"@@ -0,0 +1,40 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.openjpa.persistence.query;\r\n+\r\n+import javax.persistence.Query;\r\n+\r\n+import org.apache.openjpa.persistence.test.SingleEMTestCase;\r\n+\r\n+public class TestJPQLWithoutIdentificationVariable extends SingleEMTestCase {\r\n+\r\n+    public void setUp() {\r\n+        setUp(ManyOneEntity.class, ManyOneEntitySub.class);\r\n+    }\r\n+\r\n+    public void testJPQLWithoutIdentificationVariable() {\r\n+        try {\r\n+            em.createQuery(\"select o from ManyOneEntity o \" +\r\n+                \"where rel.name = :name\").compile();\r\n+        } catch (RuntimeException e) {\r\n+            assertTrue(e.getMessage().contains(\r\n+                \"Perhaps you forgot to prefix the path\"));\r\n+        }\r\n+    }\r\n+}\r"}]}

