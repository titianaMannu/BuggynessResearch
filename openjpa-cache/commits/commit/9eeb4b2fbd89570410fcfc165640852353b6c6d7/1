{"sha":"9eeb4b2fbd89570410fcfc165640852353b6c6d7","node_id":"MDY6Q29tbWl0MjA2MzY0OjllZWI0YjJmYmQ4OTU3MDQxMGZjZmMxNjU2NDA4NTIzNTNiNmM2ZDc=","commit":{"author":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-09-26T16:16:32Z"},"committer":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-09-26T16:16:32Z"},"message":"OPENJPA-1253: check in test case of join table strategy for bi-directional one-to-many using Map with entity as map key\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@819162 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"73ae4e60fc56372d8dc3add159eab02a31c1caed","url":"https://api.github.com/repos/apache/openjpa/git/trees/73ae4e60fc56372d8dc3add159eab02a31c1caed"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/9eeb4b2fbd89570410fcfc165640852353b6c6d7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/9eeb4b2fbd89570410fcfc165640852353b6c6d7","html_url":"https://github.com/apache/openjpa/commit/9eeb4b2fbd89570410fcfc165640852353b6c6d7","comments_url":"https://api.github.com/repos/apache/openjpa/commits/9eeb4b2fbd89570410fcfc165640852353b6c6d7/comments","author":null,"committer":null,"parents":[{"sha":"9f29552e858bceac4e69e11547db9118d228461d","url":"https://api.github.com/repos/apache/openjpa/commits/9f29552e858bceac4e69e11547db9118d228461d","html_url":"https://github.com/apache/openjpa/commit/9f29552e858bceac4e69e11547db9118d228461d"}],"stats":{"total":61,"additions":61,"deletions":0},"files":[{"sha":"f3c412419ced125fa3cf0b98751b9edd38340181","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/TestSpecCompatibilityOptions.java","status":"modified","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/apache/openjpa/blob/9eeb4b2fbd89570410fcfc165640852353b6c6d7/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/TestSpecCompatibilityOptions.java","raw_url":"https://github.com/apache/openjpa/raw/9eeb4b2fbd89570410fcfc165640852353b6c6d7/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/TestSpecCompatibilityOptions.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/TestSpecCompatibilityOptions.java?ref=9eeb4b2fbd89570410fcfc165640852353b6c6d7","patch":"@@ -400,6 +400,8 @@ public void testOneToManyMapRelation() {\n         types.add(EntityC_U1M_Map_RelKey_FK.class);\n         types.add(Uni_1ToM_Map_RelKey_FK.class);\n         types.add(EntityC.class);\n+        types.add(EntityC_B1M_Map_RelKey_JT.class);\n+        types.add(Bi_1ToM_Map_RelKey_JT.class);\n         OpenJPAEntityManagerFactorySPI emf = createEMF2_0(types);\n         EntityManager em = emf.createEntityManager();\n         \n@@ -408,9 +410,13 @@ public void testOneToManyMapRelation() {\n             em.getTransaction().begin();\n             em.getTransaction().commit();\n             assertSQLFragnments(sql, \"CREATE TABLE EntityC_U1M_Map_FK\", \"Uni1MFK_ID\", \"KEY0\");\n+            assertSQLFragnments(sql, \"CREATE TABLE Bi1M_Map_JT_C\", \"B_ID\", \"C_ID\");\n+            assertSQLFragnments(sql, \"CREATE TABLE EntityC_U1M_Map_RelKey_FK\", \"Uni1MFK_ID\");\n+            assertSQLFragnments(sql, \"CREATE TABLE Bi1M_Map_RelKey_JT_C\", \"B_ID\", \"C_ID\");\n             crudUni1MMapFK(em);\n             crudBi1MMapJT(em);\n             crudUni1MMapRelKeyFK(em);\n+            crudBi1MMapRelKeyJT(em);\n         } catch (Exception e) {\n             e.printStackTrace();\n             fail(\"OneToMany mapping failed with exception message: \" + e.getMessage());\n@@ -597,6 +603,61 @@ public void crudUni1MMapRelKeyFK(EntityManager em) {\n         em.getTransaction().commit();\n     }\n \n+    public void crudBi1MMapRelKeyJT(EntityManager em) {\n+        Bi_1ToM_Map_RelKey_JT b = new Bi_1ToM_Map_RelKey_JT();\n+        b.setName(\"bi1mfk\");\n+        Map<EntityC, EntityC_B1M_Map_RelKey_JT> cs = new HashMap<EntityC, EntityC_B1M_Map_RelKey_JT>();\n+        EntityC_B1M_Map_RelKey_JT c = new EntityC_B1M_Map_RelKey_JT();\n+        c.setName(\"c\");\n+        c.setBi1mjt(b);\n+        EntityC cKey = new EntityC();\n+        cKey.setName(\"cKey\");\n+        cs.put(cKey, c);\n+        b.setEntityCs(cs);\n+        em.persist(b);\n+        em.persist(c);\n+        em.persist(cKey);\n+        em.getTransaction().begin();\n+        em.getTransaction().commit();\n+\n+        //update\n+        em.getTransaction().begin();\n+        cs = b.getEntityCs();\n+        b.setName(\"newName\");\n+        EntityC_B1M_Map_RelKey_JT c1 = new EntityC_B1M_Map_RelKey_JT();\n+        c1.setName(\"c1\");\n+        EntityC cKey1 = new EntityC();\n+        cKey1.setName(\"cKey1\");\n+        cs.put(cKey1, c1);\n+        c1.setBi1mjt(b);\n+        em.persist(c1);\n+        em.persist(cKey1);\n+        em.getTransaction().commit();\n+        em.clear();\n+        \n+        //query\n+        Query q = em.createQuery(\"SELECT u FROM Bi_1ToM_Map_RelKey_JT u\");\n+        Bi_1ToM_Map_RelKey_JT b1 = (Bi_1ToM_Map_RelKey_JT)q.getSingleResult();\n+        assertEquals(b, b1);\n+        em.clear();\n+\n+        // query the owner\n+        q = em.createQuery(\"SELECT c FROM EntityC_B1M_Map_RelKey_JT c where c.name = 'c'\");\n+        EntityC_B1M_Map_RelKey_JT newC = (EntityC_B1M_Map_RelKey_JT)q.getSingleResult();\n+        assertEquals(newC, c);\n+        em.clear();\n+        \n+        //find\n+        long id = b1.getId();\n+        Bi_1ToM_Map_RelKey_JT b2 = em.find(Bi_1ToM_Map_RelKey_JT.class, id);\n+        assertEquals(b, b2);\n+        \n+        //remove\n+        em.getTransaction().begin();\n+        em.remove(b2);\n+        em.getTransaction().commit();\n+    }\n+\n     private OpenJPAEntityManagerFactorySPI createEMF2_0(List<Class<?>> types) {\n         Map<Object,Object> map = new HashMap<Object,Object>();\n         map.put(\"openjpa.jdbc.JDBCListeners\", "}]}

