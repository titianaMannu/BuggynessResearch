{"sha":"9f0a7ff545b581cb39a11e27787ff5e792793daa","node_id":"MDY6Q29tbWl0MjA2MzY0OjlmMGE3ZmY1NDViNTgxY2IzOWExMWUyNzc4N2ZmNWU3OTI3OTNkYWE=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-06-16T06:54:12Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-06-16T06:54:12Z"},"message":"OPENJPA-259. Applied Craig's patch (minus the ACK char; maybe Craig meant ^L instead?), and added a test case. The test uses dynamic JPQL, but the parser change should work for XML-based named queries also, and it seems fair to allow newlines in dynamic strings as well.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@547872 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"1a0dcdcf2125203312d36ddf83cb10db0b746251","url":"https://api.github.com/repos/apache/openjpa/git/trees/1a0dcdcf2125203312d36ddf83cb10db0b746251"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/9f0a7ff545b581cb39a11e27787ff5e792793daa","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/9f0a7ff545b581cb39a11e27787ff5e792793daa","html_url":"https://github.com/apache/openjpa/commit/9f0a7ff545b581cb39a11e27787ff5e792793daa","comments_url":"https://api.github.com/repos/apache/openjpa/commits/9f0a7ff545b581cb39a11e27787ff5e792793daa/comments","author":null,"committer":null,"parents":[{"sha":"e0e176ab83beed65cd9e21c9cfed8628f80553ca","url":"https://api.github.com/repos/apache/openjpa/commits/e0e176ab83beed65cd9e21c9cfed8628f80553ca","html_url":"https://github.com/apache/openjpa/commit/e0e176ab83beed65cd9e21c9cfed8628f80553ca"}],"stats":{"total":50,"additions":50,"deletions":0},"files":[{"sha":"4bb55439b1641d812298a208a0080326c9c7851c","filename":"openjpa-kernel/src/main/jjtree/org/apache/openjpa/kernel/jpql/JPQL.jjt","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/9f0a7ff545b581cb39a11e27787ff5e792793daa/openjpa-kernel/src/main/jjtree/org/apache/openjpa/kernel/jpql/JPQL.jjt","raw_url":"https://github.com/apache/openjpa/raw/9f0a7ff545b581cb39a11e27787ff5e792793daa/openjpa-kernel/src/main/jjtree/org/apache/openjpa/kernel/jpql/JPQL.jjt","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/jjtree/org/apache/openjpa/kernel/jpql/JPQL.jjt?ref=9f0a7ff545b581cb39a11e27787ff5e792793daa","patch":"@@ -117,6 +117,7 @@ PARSER_END(JPQL)\n SKIP :\n {\n  \t\" \"\n+    | \"\\n\"\n \t| \"\\r\"\n \t| \"\\t\"\n }"},{"sha":"435ace1b8f2c87900c88713c9c0dd5b3b589bba2","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestNewlinesInQueries.java","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/apache/openjpa/blob/9f0a7ff545b581cb39a11e27787ff5e792793daa/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestNewlinesInQueries.java","raw_url":"https://github.com/apache/openjpa/raw/9f0a7ff545b581cb39a11e27787ff5e792793daa/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestNewlinesInQueries.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestNewlinesInQueries.java?ref=9f0a7ff545b581cb39a11e27787ff5e792793daa","patch":"@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.query;\n+\n+import javax.persistence.EntityManager;\n+import javax.persistence.Query;\n+\n+import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n+\n+/**\n+ * Test that our parser handles newlines in queries\n+ */\n+public class TestNewlinesInQueries\n+    extends SingleEMFTestCase {\n+\n+    public void setUp() {\n+        setUp(SimpleEntity.class, CLEAR_TABLES);\n+\n+        EntityManager em = emf.createEntityManager();\n+        em.getTransaction().begin();\n+        em.persist(new SimpleEntity(\"foo\", \"bar\"));\n+        em.getTransaction().commit();\n+        em.close();\n+    }\n+\n+    public void testQuery() {\n+        EntityManager em = emf.createEntityManager();\n+        Query q = em.createQuery(\"select e \\n from simple e\");\n+        SimpleEntity e = (SimpleEntity) q.getSingleResult();\n+        assertEquals(\"foo\", e.getName());\n+        em.close();\n+    }\n+}\n\\ No newline at end of file"}]}

