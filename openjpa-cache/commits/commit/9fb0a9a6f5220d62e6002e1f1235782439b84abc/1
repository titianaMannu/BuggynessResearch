{"sha":"9fb0a9a6f5220d62e6002e1f1235782439b84abc","node_id":"MDY6Q29tbWl0MjA2MzY0OjlmYjBhOWE2ZjUyMjBkNjJlNjAwMmUxZjEyMzU3ODI0MzliODRhYmM=","commit":{"author":{"name":"Stephen Kim","email":"skim@apache.org","date":"2006-09-30T22:34:55Z"},"committer":{"name":"Stephen Kim","email":"skim@apache.org","date":"2006-09-30T22:34:55Z"},"message":"fix deletion of PNewProvisional\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@451691 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2f39fe9b4dc63099e79b4f224fff1cfbdc0aef98","url":"https://api.github.com/repos/apache/openjpa/git/trees/2f39fe9b4dc63099e79b4f224fff1cfbdc0aef98"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/9fb0a9a6f5220d62e6002e1f1235782439b84abc","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/9fb0a9a6f5220d62e6002e1f1235782439b84abc","html_url":"https://github.com/apache/openjpa/commit/9fb0a9a6f5220d62e6002e1f1235782439b84abc","comments_url":"https://api.github.com/repos/apache/openjpa/commits/9fb0a9a6f5220d62e6002e1f1235782439b84abc/comments","author":null,"committer":null,"parents":[{"sha":"923eb32d31d08edc9526a6f6ce9c4ca30357e738","url":"https://api.github.com/repos/apache/openjpa/commits/923eb32d31d08edc9526a6f6ce9c4ca30357e738","html_url":"https://github.com/apache/openjpa/commit/923eb32d31d08edc9526a6f6ce9c4ca30357e738"}],"stats":{"total":11,"additions":8,"deletions":3},"files":[{"sha":"91e8a388dfd06666ee2bf001fa399a11bd7d101b","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/PNewProvisionalState.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/9fb0a9a6f5220d62e6002e1f1235782439b84abc/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/PNewProvisionalState.java","raw_url":"https://github.com/apache/openjpa/raw/9fb0a9a6f5220d62e6002e1f1235782439b84abc/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/PNewProvisionalState.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/PNewProvisionalState.java?ref=9fb0a9a6f5220d62e6002e1f1235782439b84abc","patch":"@@ -59,6 +59,11 @@ PCState rollbackRestore(StateManagerImpl context) {\n         return TRANSIENT;\n     }\n \n+    PCState delete(StateManagerImpl context) {\n+        context.preDelete();\n+        return TRANSIENT;\n+    }\n+\n     PCState release(StateManagerImpl context) {\n         return TRANSIENT;\n     }"},{"sha":"b1a07b770ea83711c6b57f82f95462fb0ca2702d","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SingleFieldManager.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/9fb0a9a6f5220d62e6002e1f1235782439b84abc/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SingleFieldManager.java","raw_url":"https://github.com/apache/openjpa/raw/9fb0a9a6f5220d62e6002e1f1235782439b84abc/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SingleFieldManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SingleFieldManager.java?ref=9fb0a9a6f5220d62e6002e1f1235782439b84abc","patch":"@@ -750,9 +750,7 @@ private void preFlushPC(ValueMetaData vmd, Object obj, boolean logical,\n                     setFailedObject(obj);\n         } else {\n             sm = _broker.getStateManager(obj);\n-            if (sm != null && sm.isProvisional())\n-                ((StateManagerImpl) sm).nonprovisional(logical, call);\n-            else\n+            if (sm == null || !sm.isProvisional())\n                 sm = _broker.persist(obj, null, true, call);\n         }\n \n@@ -764,6 +762,8 @@ private void preFlushPC(ValueMetaData vmd, Object obj, boolean logical,\n                     Exceptions.toString(obj), vmd,\n                     Exceptions.toString(_sm.getManagedInstance()))).\n                     setFailedObject(obj);\n+\n+            ((StateManagerImpl) sm).nonprovisional(logical, call);\n             ((StateManagerImpl) sm).setDereferencedDependent(false, true);\n         }\n     }"}]}

