{"sha":"a0e001e40ad600372f16d5708f580fc101fec3c3","node_id":"MDY6Q29tbWl0MjA2MzY0OmEwZTAwMWU0MGFkNjAwMzcyZjE2ZDU3MDhmNTgwZmMxMDFmZWMzYzM=","commit":{"author":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2009-12-23T22:33:57Z"},"committer":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2009-12-23T22:33:57Z"},"message":"OPENJPA-1442 JPA2 java.sql.Date, java.math.BigDecimal, or java.math.BigInteger types as derived primary keys are not Enhanced correctly \n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@893642 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"01598895d0a7086da2b11a27b958e6b694a62f02","url":"https://api.github.com/repos/apache/openjpa/git/trees/01598895d0a7086da2b11a27b958e6b694a62f02"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/a0e001e40ad600372f16d5708f580fc101fec3c3","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/a0e001e40ad600372f16d5708f580fc101fec3c3","html_url":"https://github.com/apache/openjpa/commit/a0e001e40ad600372f16d5708f580fc101fec3c3","comments_url":"https://api.github.com/repos/apache/openjpa/commits/a0e001e40ad600372f16d5708f580fc101fec3c3/comments","author":null,"committer":null,"parents":[{"sha":"775c627b8038f03a86bb1a0bd1cd03e3caf07070","url":"https://api.github.com/repos/apache/openjpa/commits/775c627b8038f03a86bb1a0bd1cd03e3caf07070","html_url":"https://github.com/apache/openjpa/commit/775c627b8038f03a86bb1a0bd1cd03e3caf07070"}],"stats":{"total":571,"additions":569,"deletions":2},"files":[{"sha":"e204868b477c0f813c9051119ca091d6cba22aed","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java","status":"modified","additions":8,"deletions":2,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/a0e001e40ad600372f16d5708f580fc101fec3c3/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java","raw_url":"https://github.com/apache/openjpa/raw/a0e001e40ad600372f16d5708f580fc101fec3c3/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java?ref=a0e001e40ad600372f16d5708f580fc101fec3c3","patch":"@@ -31,6 +31,8 @@\n import java.lang.reflect.Field;\n import java.lang.reflect.Method;\n import java.lang.reflect.Modifier;\n+import java.math.BigDecimal;\n+import java.math.BigInteger;\n import java.security.AccessController;\n import java.security.PrivilegedActionException;\n import java.util.ArrayList;\n@@ -2207,6 +2209,10 @@ private void addExtractObjectIdFieldValueCode(Code code, FieldMetaData pk) {\n                     code.checkcast().setType(DateId.class);\n                     code.invokevirtual().setMethod(DateId.class, \"getId\",\n                         Date.class, null);\n+                    if (pktype != Date.class) {\n+                        // java.sql.Date.class\n+                        code.checkcast().setType(pktype);\n+                    }\n                     break;\n                 case JavaTypes.STRING:\n                     code.aload().setLocal(oid);\n@@ -2218,13 +2224,13 @@ private void addExtractObjectIdFieldValueCode(Code code, FieldMetaData pk) {\n                     code.aload().setLocal(oid);\n                     code.checkcast().setType(BigDecimalId.class);\n                     code.invokevirtual().setMethod(BigDecimalId.class, \"getId\",\n-                        BigDecimalId.class, null);\n+                        BigDecimal.class, null);\n                     break;\n                 case JavaTypes.BIGINTEGER:\n                     code.aload().setLocal(oid);\n                     code.checkcast().setType(BigIntegerId.class);\n                     code.invokevirtual().setMethod(BigIntegerId.class, \"getId\",\n-                        BigIntegerId.class, null);\n+                        BigInteger.class, null);\n                     break;\n                 default:\n                     code.aload().setLocal(oid);"},{"sha":"762486c55d5c3ab3adcd141e965a88b5a60de01e","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EBigDecimalID.java","status":"added","additions":56,"deletions":0,"changes":56,"blob_url":"https://github.com/apache/openjpa/blob/a0e001e40ad600372f16d5708f580fc101fec3c3/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EBigDecimalID.java","raw_url":"https://github.com/apache/openjpa/raw/a0e001e40ad600372f16d5708f580fc101fec3c3/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EBigDecimalID.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EBigDecimalID.java?ref=a0e001e40ad600372f16d5708f580fc101fec3c3","patch":"@@ -0,0 +1,56 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.    \r\n+ */\r\n+package org.apache.openjpa.persistence.derivedid;\r\n+\r\n+import java.math.BigDecimal;\r\n+\r\n+import javax.persistence.Column;\r\n+import javax.persistence.Entity;\r\n+import javax.persistence.Id;\r\n+@Entity\r\n+public class EBigDecimalID {\r\n+    @Id\r\n+    @Column(precision=20,scale=5)\r\n+    private BigDecimal  id;\r\n+\r\n+    private String name;\r\n+    \r\n+    public EBigDecimalID() {}\r\n+\r\n+    public EBigDecimalID(BigDecimal id) {\r\n+        this.id = id;\r\n+        this.name = \"BigDecimalID \"+id;\r\n+    }\r\n+\r\n+    public BigDecimal getId() {\r\n+        return id;\r\n+    }\r\n+\r\n+    public void setId(BigDecimal id) {\r\n+        this.id = id;\r\n+    }\r\n+\r\n+    public String getName() {\r\n+        return name;\r\n+    }\r\n+\r\n+    public void setName(String name) {\r\n+        this.name = name;\r\n+    }   \r\n+}\r"},{"sha":"f29119125e9878b251510e6b1bb3380daac5f2ba","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EBigIntegerID.java","status":"added","additions":55,"deletions":0,"changes":55,"blob_url":"https://github.com/apache/openjpa/blob/a0e001e40ad600372f16d5708f580fc101fec3c3/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EBigIntegerID.java","raw_url":"https://github.com/apache/openjpa/raw/a0e001e40ad600372f16d5708f580fc101fec3c3/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EBigIntegerID.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EBigIntegerID.java?ref=a0e001e40ad600372f16d5708f580fc101fec3c3","patch":"@@ -0,0 +1,55 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.    \r\n+ */\r\n+package org.apache.openjpa.persistence.derivedid;\r\n+\r\n+import java.math.BigInteger;\r\n+\r\n+import javax.persistence.Entity;\r\n+import javax.persistence.Id;\r\n+@Entity\r\n+public class EBigIntegerID {\r\n+    @Id\r\n+    private BigInteger  id;\r\n+\r\n+    private String name;\r\n+    \r\n+    public EBigIntegerID() {}\r\n+\r\n+\r\n+    public EBigIntegerID(BigInteger id) {\r\n+        this.id = id;\r\n+        this.name = \"BigIntegerID \"+id;\r\n+    }\r\n+\r\n+    public BigInteger getId() {\r\n+        return id;\r\n+    }\r\n+\r\n+    public void setId(BigInteger id) {\r\n+        this.id = id;\r\n+    }\r\n+\r\n+    public String getName() {\r\n+        return name;\r\n+    }\r\n+    public void setName(String name) {\r\n+        this.name = name;\r\n+    }\r\n+    \r\n+}\r"},{"sha":"9f892ffa812a4d9bfa4ecb214b17e05db53616bd","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDBigDecimalID.java","status":"added","additions":55,"deletions":0,"changes":55,"blob_url":"https://github.com/apache/openjpa/blob/a0e001e40ad600372f16d5708f580fc101fec3c3/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDBigDecimalID.java","raw_url":"https://github.com/apache/openjpa/raw/a0e001e40ad600372f16d5708f580fc101fec3c3/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDBigDecimalID.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDBigDecimalID.java?ref=a0e001e40ad600372f16d5708f580fc101fec3c3","patch":"@@ -0,0 +1,55 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.    \r\n+ */\r\n+package org.apache.openjpa.persistence.derivedid;\r\n+\r\n+import javax.persistence.Entity;\r\n+import javax.persistence.Id;\r\n+import javax.persistence.OneToOne;\r\n+\r\n+@Entity\r\n+public class EDBigDecimalID {\r\n+    @Id\r\n+    @OneToOne\r\n+    private EBigDecimalID rid;    \r\n+\r\n+    private String name;\r\n+    \r\n+    public EDBigDecimalID() {}\r\n+    \r\n+    public EDBigDecimalID(EBigDecimalID rid) {\r\n+        this.rid = rid;\r\n+        this.name = \"Rel BigDecimalID \"+rid.getId();\r\n+    }\r\n+\r\n+    public EBigDecimalID getRid() {\r\n+        return rid;\r\n+    }\r\n+\r\n+    public void setRid(EBigDecimalID rid) {\r\n+        this.rid = rid;\r\n+    }\r\n+\r\n+    public String getName() {\r\n+        return name;\r\n+    }\r\n+\r\n+    public void setName(String name) {\r\n+        this.name = name;\r\n+    }\r\n+}\r"},{"sha":"0760af780ed775cbaaa267d86faff1ee42975f90","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDBigIntegerID.java","status":"added","additions":55,"deletions":0,"changes":55,"blob_url":"https://github.com/apache/openjpa/blob/a0e001e40ad600372f16d5708f580fc101fec3c3/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDBigIntegerID.java","raw_url":"https://github.com/apache/openjpa/raw/a0e001e40ad600372f16d5708f580fc101fec3c3/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDBigIntegerID.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDBigIntegerID.java?ref=a0e001e40ad600372f16d5708f580fc101fec3c3","patch":"@@ -0,0 +1,55 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.    \r\n+ */\r\n+package org.apache.openjpa.persistence.derivedid;\r\n+\r\n+import javax.persistence.Entity;\r\n+import javax.persistence.Id;\r\n+import javax.persistence.OneToOne;\r\n+\r\n+@Entity\r\n+public class EDBigIntegerID {\r\n+    @Id\r\n+    @OneToOne\r\n+    private EBigIntegerID rid;    \r\n+\r\n+    private String name;\r\n+    \r\n+    public EDBigIntegerID() {}\r\n+    \r\n+    public EDBigIntegerID(EBigIntegerID rid) {\r\n+        this.rid = rid;\r\n+        this.name = \"Rel BigIntegerID \"+rid.getId();\r\n+    }\r\n+\r\n+    public EBigIntegerID getRid() {\r\n+        return rid;\r\n+    }\r\n+\r\n+    public void setRid(EBigIntegerID rid) {\r\n+        this.rid = rid;\r\n+    }\r\n+\r\n+    public String getName() {\r\n+        return name;\r\n+    }\r\n+\r\n+    public void setName(String name) {\r\n+        this.name = name;\r\n+    }\r\n+}\r"},{"sha":"ef5116a5a0127411dcd3e1985f6738e410d6c04b","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDDateID.java","status":"added","additions":55,"deletions":0,"changes":55,"blob_url":"https://github.com/apache/openjpa/blob/a0e001e40ad600372f16d5708f580fc101fec3c3/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDDateID.java","raw_url":"https://github.com/apache/openjpa/raw/a0e001e40ad600372f16d5708f580fc101fec3c3/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDDateID.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDDateID.java?ref=a0e001e40ad600372f16d5708f580fc101fec3c3","patch":"@@ -0,0 +1,55 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.    \r\n+ */\r\n+package org.apache.openjpa.persistence.derivedid;\r\n+\r\n+import javax.persistence.Entity;\r\n+import javax.persistence.Id;\r\n+import javax.persistence.OneToOne;\r\n+\r\n+@Entity\r\n+public class EDDateID {\r\n+    @Id\r\n+    @OneToOne\r\n+    private EDateID rid;    \r\n+\r\n+    private String name;\r\n+    \r\n+    public EDDateID() {}\r\n+    \r\n+    public EDDateID(EDateID rid) {\r\n+        this.rid = rid;\r\n+        this.name = \"Rel DateID \"+rid.getId();\r\n+    }\r\n+\r\n+    public EDateID getRid() {\r\n+        return rid;\r\n+    }\r\n+\r\n+    public void setRid(EDateID rid) {\r\n+        this.rid = rid;\r\n+    }\r\n+\r\n+    public String getName() {\r\n+        return name;\r\n+    }\r\n+\r\n+    public void setName(String name) {\r\n+        this.name = name;\r\n+    }\r\n+}\r"},{"sha":"d427d5a988bd8122ccf98599b96077a31a7f75f7","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDSQLDateID.java","status":"added","additions":55,"deletions":0,"changes":55,"blob_url":"https://github.com/apache/openjpa/blob/a0e001e40ad600372f16d5708f580fc101fec3c3/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDSQLDateID.java","raw_url":"https://github.com/apache/openjpa/raw/a0e001e40ad600372f16d5708f580fc101fec3c3/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDSQLDateID.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDSQLDateID.java?ref=a0e001e40ad600372f16d5708f580fc101fec3c3","patch":"@@ -0,0 +1,55 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.    \r\n+ */\r\n+package org.apache.openjpa.persistence.derivedid;\r\n+\r\n+import javax.persistence.Entity;\r\n+import javax.persistence.Id;\r\n+import javax.persistence.OneToOne;\r\n+\r\n+@Entity\r\n+public class EDSQLDateID {\r\n+    @Id\r\n+    @OneToOne\r\n+    private ESQLDateID rid;    \r\n+\r\n+    private String name;\r\n+    \r\n+    public EDSQLDateID() {}\r\n+    \r\n+    public EDSQLDateID(ESQLDateID rid) {\r\n+        this.rid = rid;\r\n+        this.name = \"Rel SQLDateID \"+rid.getId();\r\n+    }\r\n+\r\n+    public ESQLDateID getRid() {\r\n+        return rid;\r\n+    }\r\n+\r\n+    public void setRid(ESQLDateID rid) {\r\n+        this.rid = rid;\r\n+    }\r\n+\r\n+    public String getName() {\r\n+        return name;\r\n+    }\r\n+\r\n+    public void setName(String name) {\r\n+        this.name = name;\r\n+    }\r\n+}\r"},{"sha":"2bffe32f92f79e11d4c15bf770b545ea84651d17","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDateID.java","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/apache/openjpa/blob/a0e001e40ad600372f16d5708f580fc101fec3c3/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDateID.java","raw_url":"https://github.com/apache/openjpa/raw/a0e001e40ad600372f16d5708f580fc101fec3c3/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDateID.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/EDateID.java?ref=a0e001e40ad600372f16d5708f580fc101fec3c3","patch":"@@ -0,0 +1,54 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.    \r\n+ */\r\n+package org.apache.openjpa.persistence.derivedid;\r\n+\r\n+import java.util.Date;\r\n+\r\n+import javax.persistence.Entity;\r\n+import javax.persistence.Id;\r\n+\r\n+@Entity\r\n+public class EDateID {\r\n+    @Id\r\n+    private Date  id; \r\n+    private String name;\r\n+    \r\n+    public EDateID() {}\r\n+\r\n+    public EDateID(Date id) {\r\n+        this.id = id;\r\n+        this.name = \"DateID \"+id;\r\n+    }\r\n+\r\n+    public Date getId() {\r\n+        return id;\r\n+    }\r\n+\r\n+    public void setId(Date id) {\r\n+        this.id = id;\r\n+    }\r\n+\r\n+    public String getName() {\r\n+        return name;\r\n+    }\r\n+\r\n+    public void setName(String name) {\r\n+        this.name = name;\r\n+    }\r\n+}\r"},{"sha":"74daf00cbbe62fbeed5225b196d33c8f6ec7d8bf","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/ESQLDateID.java","status":"added","additions":53,"deletions":0,"changes":53,"blob_url":"https://github.com/apache/openjpa/blob/a0e001e40ad600372f16d5708f580fc101fec3c3/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/ESQLDateID.java","raw_url":"https://github.com/apache/openjpa/raw/a0e001e40ad600372f16d5708f580fc101fec3c3/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/ESQLDateID.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/ESQLDateID.java?ref=a0e001e40ad600372f16d5708f580fc101fec3c3","patch":"@@ -0,0 +1,53 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.    \r\n+ */\r\n+package org.apache.openjpa.persistence.derivedid;\r\n+\r\n+import java.sql.Date;\r\n+\r\n+import javax.persistence.Entity;\r\n+import javax.persistence.Id;\r\n+@Entity\r\n+public class ESQLDateID {\r\n+    @Id\r\n+    private Date  id;\r\n+    private String name;\r\n+    \r\n+    public ESQLDateID() {}\r\n+\r\n+    public ESQLDateID(Date id) {\r\n+        this.id = id;\r\n+        this.name = \"SQLDateID \"+id;\r\n+    }\r\n+\r\n+    public Date getId() {\r\n+        return id;\r\n+    }\r\n+\r\n+    public void setId(Date id) {\r\n+        this.id = id;\r\n+    }\r\n+\r\n+    public String getName() {\r\n+        return name;\r\n+    }\r\n+\r\n+    public void setName(String name) {\r\n+        this.name = name;\r\n+    }\r\n+}\r"},{"sha":"472344e3686aa009ebe2a9cc1b079427adbd741a","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/TestDerivedIdentity.java","status":"added","additions":123,"deletions":0,"changes":123,"blob_url":"https://github.com/apache/openjpa/blob/a0e001e40ad600372f16d5708f580fc101fec3c3/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/TestDerivedIdentity.java","raw_url":"https://github.com/apache/openjpa/raw/a0e001e40ad600372f16d5708f580fc101fec3c3/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/TestDerivedIdentity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/derivedid/TestDerivedIdentity.java?ref=a0e001e40ad600372f16d5708f580fc101fec3c3","patch":"@@ -0,0 +1,123 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.    \r\n+ */\r\n+package org.apache.openjpa.persistence.derivedid;\r\n+\r\n+import java.math.BigDecimal;\r\n+import java.math.BigInteger;\r\n+import java.util.Date;\r\n+import java.util.List;\r\n+\r\n+import javax.persistence.EntityManager;\r\n+import javax.persistence.Query;\r\n+\r\n+import org.apache.openjpa.persistence.test.SQLListenerTestCase;\r\n+\r\n+public class TestDerivedIdentity  extends SQLListenerTestCase {\r\n+\r\n+    public void setUp() {\r\n+        setUp(EBigDecimalID.class, EDBigDecimalID.class,\r\n+            EBigIntegerID.class, EDBigIntegerID.class,\r\n+            EDateID.class, EDDateID.class,\r\n+            ESQLDateID.class, EDSQLDateID.class,\r\n+            CLEAR_TABLES);\r\n+        populate();\r\n+    }\r\n+\r\n+    public void populate() {\r\n+        EntityManager em = emf.createEntityManager();\r\n+        \r\n+        for (int i = 0; i < 2; i++) {\r\n+            long time = (long) (System.currentTimeMillis() / 1000)+i;\r\n+            BigDecimal did = new BigDecimal(time);            \r\n+            EBigDecimalID e1 = new EBigDecimalID(did);\r\n+            EDBigDecimalID e2 = new EDBigDecimalID(e1);\r\n+            em.persist(e1);\r\n+            em.persist(e2);\r\n+\r\n+            int time2 = (int) (System.currentTimeMillis() / 1000)+i;\r\n+            BigInteger iid = new BigInteger(Integer.toString(time2));\r\n+            EBigIntegerID e3 = new EBigIntegerID(iid);\r\n+            EDBigIntegerID e4 = new EDBigIntegerID(e3);\r\n+            em.persist(e3);\r\n+            em.persist(e4);\r\n+\r\n+            Date id = new Date(time);\r\n+            EDateID e5 = new EDateID(id);\r\n+            EDDateID e6 = new EDDateID(e5);\r\n+            em.persist(e5);\r\n+            em.persist(e6);\r\n+            \r\n+            if (i == 0) {\r\n+                java.sql.Date sid = new java.sql.Date(time);\r\n+                ESQLDateID e7 = new ESQLDateID(sid);\r\n+                EDSQLDateID e8 = new EDSQLDateID(e7);\r\n+                em.persist(e7);\r\n+                em.persist(e8);\r\n+            }\r\n+        }\r\n+        \r\n+        em.getTransaction().begin();\r\n+        em.getTransaction().commit();\r\n+        em.close();\r\n+    }\r\n+\r\n+    public void testDerivedIdentity() {\r\n+        EntityManager em = emf.createEntityManager();\r\n+        Query query = null;\r\n+        String str[] = {\r\n+            \"select e from EDDateID e\",\r\n+            \"select e from EDBigDecimalID e\",\r\n+            \"select e from EDBigIntegerID e\",\r\n+            \"select e from EDSQLDateID e\",\r\n+            \"select e from EDDateID e join fetch e.rid\",\r\n+            \"select e from EDBigDecimalID e join fetch e.rid\",\r\n+            \"select e from EDBigIntegerID e join fetch e.rid\",\r\n+            \"select e from EDSQLDateID e join fetch e.rid\",\r\n+        };\r\n+        for (int i = 0; i < str.length; i++) {\r\n+            query = em.createQuery(str[i]);\r\n+            List rs = query.getResultList();\r\n+            assertTrue(rs.size() > 0);\r\n+            for (int j = 0; j < rs.size(); j++) {\r\n+                Object e = rs.get(j);\r\n+                String name = null;\r\n+                Object oid = null;\r\n+                if (e instanceof EDDateID) {\r\n+                    name = ((EDDateID)e).getName();\r\n+                    oid = ((EDDateID)e).getRid().getId();\r\n+                } else if (e instanceof EDBigDecimalID) {\r\n+                    name = ((EDBigDecimalID)e).getName();\r\n+                    oid = ((EDBigDecimalID)e).getRid().getId();\r\n+                } else if (e instanceof EDBigIntegerID) {\r\n+                    name = ((EDBigIntegerID)e).getName();\r\n+                    oid = ((EDBigIntegerID)e).getRid().getId();\r\n+                } else if (e instanceof EDSQLDateID) {\r\n+                    name = ((EDSQLDateID)e).getName();\r\n+                    oid = ((EDSQLDateID)e).getRid().getId();\r\n+                }\r\n+                //System.out.println(name);\r\n+                //System.out.println(oid.toString());\r\n+                assertTrue(name.startsWith(\"Rel\"));\r\n+            }\r\n+        }\r\n+        \r\n+        em.close();\r\n+    }\r\n+}\r\n+\r"}]}

