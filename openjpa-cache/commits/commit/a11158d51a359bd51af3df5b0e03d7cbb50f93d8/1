{"sha":"a11158d51a359bd51af3df5b0e03d7cbb50f93d8","node_id":"MDY6Q29tbWl0MjA2MzY0OmExMTE1OGQ1MWEzNTliZDUxYWYzZGY1YjBlMDNkN2NiYjUwZjkzZDg=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2007-02-01T19:36:21Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2007-02-01T19:36:21Z"},"message":"Classloader used to generate dynamic implementaion of managed interface uses interfaces' classloader as parent\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@502326 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a0648d5367326ec9a9a0be8da5b107fdde8e3445","url":"https://api.github.com/repos/apache/openjpa/git/trees/a0648d5367326ec9a9a0be8da5b107fdde8e3445"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/a11158d51a359bd51af3df5b0e03d7cbb50f93d8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/a11158d51a359bd51af3df5b0e03d7cbb50f93d8","html_url":"https://github.com/apache/openjpa/commit/a11158d51a359bd51af3df5b0e03d7cbb50f93d8","comments_url":"https://api.github.com/repos/apache/openjpa/commits/a11158d51a359bd51af3df5b0e03d7cbb50f93d8/comments","author":null,"committer":null,"parents":[{"sha":"862cd158ed5acee7361881860548c03444d01dd6","url":"https://api.github.com/repos/apache/openjpa/commits/862cd158ed5acee7361881860548c03444d01dd6","html_url":"https://github.com/apache/openjpa/commit/862cd158ed5acee7361881860548c03444d01dd6"}],"stats":{"total":26,"additions":16,"deletions":10},"files":[{"sha":"9021268751af77d8900c26cfcb74be7f2b5cb633","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/InterfaceImplGenerator.java","status":"modified","additions":11,"deletions":10,"changes":21,"blob_url":"https://github.com/apache/openjpa/blob/a11158d51a359bd51af3df5b0e03d7cbb50f93d8/openjpa-kernel/src/main/java/org/apache/openjpa/meta/InterfaceImplGenerator.java","raw_url":"https://github.com/apache/openjpa/raw/a11158d51a359bd51af3df5b0e03d7cbb50f93d8/openjpa-kernel/src/main/java/org/apache/openjpa/meta/InterfaceImplGenerator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/InterfaceImplGenerator.java?ref=a11158d51a359bd51af3df5b0e03d7cbb50f93d8","patch":"@@ -48,11 +48,9 @@\n     private final MetaDataRepository _repos;\n     private final Map _impls = new WeakHashMap();\n     private final Project _project = new Project();\n-    private final BCClassLoader _loader = new BCClassLoader(_project);\n-\n+ \n     // distinct project / loader for enhanced version of class\n     private final Project _enhProject = new Project();\n-    private final BCClassLoader _enhLoader = new BCClassLoader(_enhProject);\n \n     /**\n      * Constructor.  Supply repository.\n@@ -73,6 +71,8 @@ public synchronized Class createImpl(ClassMetaData meta) {\n         if (impl != null)\n             return impl;\n \n+        ClassLoader parentLoader = iface.getClassLoader();\n+        BCClassLoader loader = new BCClassLoader(_project, parentLoader);\n         BCClass bc = _project.loadClass(getClassName(meta));\n         bc.declareInterface(iface);\n         ClassMetaData sup = meta.getPCSuperclassMetaData();\n@@ -88,27 +88,28 @@ public synchronized Class createImpl(ClassMetaData meta) {\n         // first load the base class as the enhancer requires the class\n         // to be available\n         try {\n-            meta.setInterfaceImpl(Class.forName(bc.getName(), true, _loader));\n+            meta.setInterfaceImpl(Class.forName(bc.getName(), true, loader));\n         } catch (Throwable t) {\n-            throw new InternalException(_loc.get(\"interface-load\"), t).\n-                setFatal(true);\n+            throw new InternalException(_loc.get(\"interface-load\", iface, \n+                loader), t).setFatal(true);\n         }\n         // copy the BCClass into the enhancer project.\n         bc = _enhProject.loadClass(new ByteArrayInputStream(bc.toByteArray()), \n-            _loader);\n+            loader);\n         PCEnhancer enhancer = new PCEnhancer(_repos.getConfiguration(), bc, \n             meta);\n \n         int result = enhancer.run();\n         if (result != PCEnhancer.ENHANCE_PC)\n             throw new InternalException(_loc.get(\"interface-badenhance\", \n                 iface)).setFatal(true);\n+        BCClassLoader enhLoader = new BCClassLoader(_enhProject, parentLoader);\n         try{\n             // load the class for real.\n-            impl = Class.forName(bc.getName(), true, _enhLoader);\n+            impl = Class.forName(bc.getName(), true, enhLoader);\n         } catch (Throwable t) {\n-            throw new InternalException(_loc.get(\"interface-load2\"), t).\n-                setFatal(true);\n+            throw new InternalException(_loc.get(\"interface-load2\", iface, \n+                enhLoader), t).setFatal(true);\n         }\n         // cache the generated impl.\n         _impls.put(iface, impl);"},{"sha":"5319045609aedd03b8c6918da33a9de6b298d4e8","filename":"openjpa-kernel/src/main/resources/org/apache/openjpa/meta/localizer.properties","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/a11158d51a359bd51af3df5b0e03d7cbb50f93d8/openjpa-kernel/src/main/resources/org/apache/openjpa/meta/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/a11158d51a359bd51af3df5b0e03d7cbb50f93d8/openjpa-kernel/src/main/resources/org/apache/openjpa/meta/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/resources/org/apache/openjpa/meta/localizer.properties?ref=a11158d51a359bd51af3df5b0e03d7cbb50f93d8","patch":"@@ -294,3 +294,8 @@ scanning-zip-stream-url: Scanning jar in stream from URL \"{0}\" for persistent \\\n scanning-resource: Scanning resource \"{0}\" for persistent types.\n scan-found-names: Scan of \"{1}\" found persistent types {0}.\n parse-found-names: parsePersistentTypeNames() found {0}.\n+interface-load: Dynamic implementation of managed \"{0}\" can not be defined \\\n+\tusing classloader \"{1}\". See nested exception for details.\n+interface-load2: Enhanced dynamic implementaion of managed \"{0}\" can not be \\\n+\tdefined using classloader \"{1}\". See nested exception for details.\n+interface-badenhance: Dynamic implementaion of \"{0}\" can not be enhanced.\n\\ No newline at end of file"}]}

