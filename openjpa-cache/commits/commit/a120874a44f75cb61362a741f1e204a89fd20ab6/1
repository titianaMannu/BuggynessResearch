{"sha":"a120874a44f75cb61362a741f1e204a89fd20ab6","node_id":"MDY6Q29tbWl0MjA2MzY0OmExMjA4NzRhNDRmNzVjYjYxMzYyYTc0MWYxZTIwNGE4OWZkMjBhYjY=","commit":{"author":{"name":"Stephen Kim","email":"skim@apache.org","date":"2006-08-08T20:23:35Z"},"committer":{"name":"Stephen Kim","email":"skim@apache.org","date":"2006-08-08T20:23:35Z"},"message":"Include unpinAll/pinAll by class methods\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@429797 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"5ed1045db0d9fcf830ab6b44d8472ef59a90b7e7","url":"https://api.github.com/repos/apache/openjpa/git/trees/5ed1045db0d9fcf830ab6b44d8472ef59a90b7e7"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/a120874a44f75cb61362a741f1e204a89fd20ab6","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/a120874a44f75cb61362a741f1e204a89fd20ab6","html_url":"https://github.com/apache/openjpa/commit/a120874a44f75cb61362a741f1e204a89fd20ab6","comments_url":"https://api.github.com/repos/apache/openjpa/commits/a120874a44f75cb61362a741f1e204a89fd20ab6/comments","author":null,"committer":null,"parents":[{"sha":"6234f8d3da7d38864cf7c8460a23113a51313f01","url":"https://api.github.com/repos/apache/openjpa/commits/6234f8d3da7d38864cf7c8460a23113a51313f01","html_url":"https://github.com/apache/openjpa/commit/6234f8d3da7d38864cf7c8460a23113a51313f01"}],"stats":{"total":58,"additions":57,"deletions":1},"files":[{"sha":"48e425e3090065b66c33d8aebd9cfa10962322c1","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/datacache/AbstractDataCache.java","status":"modified","additions":11,"deletions":1,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/a120874a44f75cb61362a741f1e204a89fd20ab6/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/AbstractDataCache.java","raw_url":"https://github.com/apache/openjpa/raw/a120874a44f75cb61362a741f1e204a89fd20ab6/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/AbstractDataCache.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/AbstractDataCache.java?ref=a120874a44f75cb61362a741f1e204a89fd20ab6","patch":"@@ -224,6 +224,11 @@ public BitSet pinAll(Collection keys) {\n         return set;\n     }\n \n+    public void pinAll(Class cls, boolean subs) {\n+        if (log.isWarnEnabled())\n+            log.warn(s_loc.get(\"cache-class-pin\", getName()));\n+    }\n+\n     public boolean unpin(Object key) {\n         boolean bool = unpinInternal(key);\n         if (log.isTraceEnabled()) {\n@@ -247,6 +252,11 @@ public BitSet unpinAll(Collection keys) {\n         return set;\n     }\n \n+    public void unpinAll(Class cls, boolean subs) {\n+        if (log.isWarnEnabled())\n+            log.warn(s_loc.get(\"cache-class-unpin\", getName()));\n+    }\n+\n     public void clear() {\n         clearInternal();\n         if (log.isTraceEnabled())\n@@ -423,7 +433,7 @@ protected void fireEvent(Object event, Object listener) {\n             listen.onExpire(ev);\n         } catch (Exception e) {\n             if (log.isWarnEnabled())\n-                log.warn(s_loc.get (\"exp-listener-ex\"), e);\n+                log.warn(s_loc.get(\"exp-listener-ex\"), e);\n \t\t}\n \t}\n }"},{"sha":"2471c133e60e9440ac3606d7d5756a7902302478","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/datacache/ConcurrentDataCache.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/a120874a44f75cb61362a741f1e204a89fd20ab6/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/ConcurrentDataCache.java","raw_url":"https://github.com/apache/openjpa/raw/a120874a44f75cb61362a741f1e204a89fd20ab6/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/ConcurrentDataCache.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/ConcurrentDataCache.java?ref=a120874a44f75cb61362a741f1e204a89fd20ab6","patch":"@@ -16,6 +16,7 @@\n package org.apache.openjpa.datacache;\n \n import org.apache.openjpa.event.RemoteCommitListener;\n+import org.apache.openjpa.lib.util.Localizer;\n import org.apache.openjpa.util.CacheMap;\n \n /**\n@@ -31,6 +32,9 @@\n     extends AbstractDataCache\n     implements RemoteCommitListener {\n \n+    private static final Localizer _loc = Localizer.forPackage\n+        (ConcurrentDataCache.class);\n+\n     private final CacheMap _cache = newCacheMap();\n \n     /**\n@@ -85,6 +89,12 @@ public void initialize(DataCacheManager mgr) {\n         conf.getRemoteCommitEventManager().addListener(this);\n     }\n \n+    public void unpinAll(Class cls, boolean subs) {\n+        if (log.isWarnEnabled())\n+            log.warn(_loc.get(\"cache-class-unpin-all\", getName()));\n+        unpinAll(_cache.getPinnedKeys());\n+    }\n+\n     public void writeLock() {\n         _cache.writeLock();\n     }"},{"sha":"6ecbb795bf6f38a6400f0609aef969e3e29dc5dd","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCache.java","status":"modified","additions":12,"deletions":0,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/a120874a44f75cb61362a741f1e204a89fd20ab6/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCache.java","raw_url":"https://github.com/apache/openjpa/raw/a120874a44f75cb61362a741f1e204a89fd20ab6/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCache.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCache.java?ref=a120874a44f75cb61362a741f1e204a89fd20ab6","patch":"@@ -195,6 +195,12 @@ public void commit(Collection additions, Collection newUpdates,\n      */\n     public BitSet pinAll(Collection oids);\n \n+    /**\n+     * Pin all oids for the given type.\n+     * @param subs Whether to include subclasses.\n+     */\n+    public void pinAll(Class cls, boolean subs);\n+\n     /**\n      * Unpin the value stored under <code>oid</code> from the cache.\n      * This method reverses a previous invocation of {@link #pin}.\n@@ -215,6 +221,12 @@ public void commit(Collection additions, Collection newUpdates,\n      */\n     public BitSet unpinAll(Collection oids);\n \n+    /**\n+     * Unpin all oids associaed with the given type from the cache.\n+     * @param subs Whether to include subclasses.\n+     */\n+    public void unpinAll(Class cls, boolean subs);\n+\n     /**\n      * Obtain a write lock on the cache.\n      */"},{"sha":"180a4ca3a38fada993cc3277394dbb4144e7cfc1","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DelegatingDataCache.java","status":"modified","additions":20,"deletions":0,"changes":20,"blob_url":"https://github.com/apache/openjpa/blob/a120874a44f75cb61362a741f1e204a89fd20ab6/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DelegatingDataCache.java","raw_url":"https://github.com/apache/openjpa/raw/a120874a44f75cb61362a741f1e204a89fd20ab6/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DelegatingDataCache.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DelegatingDataCache.java?ref=a120874a44f75cb61362a741f1e204a89fd20ab6","patch":"@@ -241,6 +241,16 @@ public BitSet pinAll(Collection oids) {\n         }\n     }\n \n+    public void pinAll(Class cls, boolean subs) {\n+        if (_cache == null)\n+            return;\n+        try {\n+            _cache.pinAll(cls, subs);\n+        } catch (RuntimeException re) {\n+            throw translate(re);\n+        }\n+    }\n+\n     public boolean unpin(Object oid) {\n         if (_cache == null)\n             return false;\n@@ -261,6 +271,16 @@ public BitSet unpinAll(Collection oids) {\n         }\n     }\n \n+    public void unpinAll(Class cls, boolean subs) {\n+        if (_cache == null)\n+            return;\n+        try {\n+            _cache.unpinAll(cls, subs);\n+        } catch (RuntimeException re) {\n+            throw translate(re);\n+        }\n+    }\n+\n     public void writeLock() {\n         if (_cache == null)\n             return;"},{"sha":"a280d4308774003205d3d0569a4b2688051016a4","filename":"openjpa-kernel/src/main/resources/org/apache/openjpa/datacache/localizer.properties","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/a120874a44f75cb61362a741f1e204a89fd20ab6/openjpa-kernel/src/main/resources/org/apache/openjpa/datacache/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/a120874a44f75cb61362a741f1e204a89fd20ab6/openjpa-kernel/src/main/resources/org/apache/openjpa/datacache/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/resources/org/apache/openjpa/datacache/localizer.properties?ref=a120874a44f75cb61362a741f1e204a89fd20ab6","patch":"@@ -27,6 +27,10 @@ cache-commit: Performing a commit on the cache. Adding {0}, \\\n \tupdating {1} and {2}, and removing {3}.\n cache-stats: Usage statistics for cache {0}: hits: {1}; misses: {2}; hit \\\n \tratio: {3}\n+cache-class-pin: The cache \"{0}\" does not support per-class pinning.\n+cache-class-unpin: The cache \"{0}\" does not support per-class pinning.\n+cache-class-unpin-all: The cache \"{0}\" does not supper per-class pinning.  \\\n+    All pinned keys will be un-pinned.\n list-closed: This operation cannot be performed on this list, as the list has \\\n \tbeen closed.\n query-cache-miss-evict: Query cache miss while looking up key \"{0}\". The \\"}]}

