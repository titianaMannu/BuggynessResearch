{"sha":"a1221ea36d7bb701ef0777478ea805856516b39a","node_id":"MDY6Q29tbWl0MjA2MzY0OmExMjIxZWEzNmQ3YmI3MDFlZjA3Nzc0NzhlYTgwNTg1NjUxNmIzOWE=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-11-25T20:52:36Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-11-25T20:52:36Z"},"message":"Special comparison for two boolean constants\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@884265 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"b785bb67216f2738ab818f86e2b311849192df73","url":"https://api.github.com/repos/apache/openjpa/git/trees/b785bb67216f2738ab818f86e2b311849192df73"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/a1221ea36d7bb701ef0777478ea805856516b39a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/a1221ea36d7bb701ef0777478ea805856516b39a","html_url":"https://github.com/apache/openjpa/commit/a1221ea36d7bb701ef0777478ea805856516b39a","comments_url":"https://api.github.com/repos/apache/openjpa/commits/a1221ea36d7bb701ef0777478ea805856516b39a/comments","author":null,"committer":null,"parents":[{"sha":"3d07bcd372581c08ce74bd80c11db1d55178ec8c","url":"https://api.github.com/repos/apache/openjpa/commits/3d07bcd372581c08ce74bd80c11db1d55178ec8c","html_url":"https://github.com/apache/openjpa/commit/3d07bcd372581c08ce74bd80c11db1d55178ec8c"}],"stats":{"total":21,"additions":21,"deletions":0},"files":[{"sha":"2e607d92f493ee3decf5b7a67e58c47d27248a6e","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/TestTypesafeCriteria.java","status":"modified","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/apache/openjpa/blob/a1221ea36d7bb701ef0777478ea805856516b39a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/TestTypesafeCriteria.java","raw_url":"https://github.com/apache/openjpa/raw/a1221ea36d7bb701ef0777478ea805856516b39a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/TestTypesafeCriteria.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/TestTypesafeCriteria.java?ref=a1221ea36d7bb701ef0777478ea805856516b39a","patch":"@@ -40,6 +40,7 @@\n import javax.persistence.criteria.SetJoin;\n import javax.persistence.criteria.Subquery;\n import javax.persistence.metamodel.EntityType;\n+import javax.persistence.metamodel.Metamodel;\n \n import org.apache.openjpa.persistence.test.AllowFailure;\n \n@@ -1435,4 +1436,24 @@ public void testSizeReturnsInteger() {\n         assertEquivalence(c, jpql);\n         \n     }\n+    \n+    public void testDisjunctionAsFalse() {\n+        Metamodel mm = em.getMetamodel();\n+\n+        CriteriaQuery<Order> cquery = cb.createQuery(Order.class);\n+        Root<Order> order = cquery.from(Order.class);\n+        \n+       EntityType<Order> Order_ = order.getModel();\n+       EntityType<Customer> Customer_ = mm.entity(Customer.class);\n+       cquery.where(cb.and(cb.equal(\n+         order.get(Order_.getSingularAttribute(\"customer\", Customer.class))\n+                  .get(Customer_.getSingularAttribute(\"name\", String.class)), \"Robert E. Bissett\"),\n+         cb.isFalse(cb.disjunction())));\n+\n+       cquery.distinct(true);\n+\n+       Query q = em.createQuery(cquery);\n+\n+       List result = q.getResultList();        \n+    }\n }"}]}

