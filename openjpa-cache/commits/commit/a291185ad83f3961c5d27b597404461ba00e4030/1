{"sha":"a291185ad83f3961c5d27b597404461ba00e4030","node_id":"MDY6Q29tbWl0MjA2MzY0OmEyOTExODVhZDgzZjM5NjFjNWQyN2I1OTc0MDQ0NjFiYTAwZTQwMzA=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-09-01T21:07:19Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-09-01T21:07:19Z"},"message":"OPENJPA-1278: missing file\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@810240 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"8cbe8c4136a509b41f2dd7fde2821260e9e942d4","url":"https://api.github.com/repos/apache/openjpa/git/trees/8cbe8c4136a509b41f2dd7fde2821260e9e942d4"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/a291185ad83f3961c5d27b597404461ba00e4030","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/a291185ad83f3961c5d27b597404461ba00e4030","html_url":"https://github.com/apache/openjpa/commit/a291185ad83f3961c5d27b597404461ba00e4030","comments_url":"https://api.github.com/repos/apache/openjpa/commits/a291185ad83f3961c5d27b597404461ba00e4030/comments","author":null,"committer":null,"parents":[{"sha":"82cda8b8d5838fd1a431afda464dc0cb3518eb9f","url":"https://api.github.com/repos/apache/openjpa/commits/82cda8b8d5838fd1a431afda464dc0cb3518eb9f","html_url":"https://github.com/apache/openjpa/commit/82cda8b8d5838fd1a431afda464dc0cb3518eb9f"}],"stats":{"total":61,"additions":61,"deletions":0},"files":[{"sha":"bed4e21782f00835fa6b6930022e13c31fda828d","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/OpenJPACriteriaBuilder.java","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/apache/openjpa/blob/a291185ad83f3961c5d27b597404461ba00e4030/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/OpenJPACriteriaBuilder.java","raw_url":"https://github.com/apache/openjpa/raw/a291185ad83f3961c5d27b597404461ba00e4030/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/OpenJPACriteriaBuilder.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/criteria/OpenJPACriteriaBuilder.java?ref=a291185ad83f3961c5d27b597404461ba00e4030","patch":"@@ -0,0 +1,61 @@\n+package org.apache.openjpa.persistence.criteria;\n+\n+import javax.persistence.criteria.From;\n+import javax.persistence.criteria.Predicate;\n+import javax.persistence.criteria.QueryBuilder;\n+import javax.persistence.metamodel.Attribute;\n+\n+/**\n+ * OpenJPA-specific extension to JPA 2.0 Criteria Query Builder API.\n+ * \n+ * \n+ * @author Pinaki Poddar\n+ * @since 2.0.0\n+ */\n+public interface OpenJPACriteriaBuilder extends QueryBuilder {\n+    /**\n+     * Create a predicate based upon the attribute values of a given\n+     * \"example\" entity instance. The predicate is the conjunction \n+     * or disjunction of predicates for subset of attribute of the entity.\n+     * <br>\n+     * All the singular entity attributes (the basic, embedded\n+     * and uni-cardinality relations) that have a non-null or non-default\n+     * value for the example instance and are not an identity or version\n+     * attribute are included. The comparable attributes can be further\n+     * pruned by specifying variable list of attributes for exclusion.\n+     * \n+     * @param example a non-null instance of a persistent entity.\n+     * \n+     * @param style specifies various aspects of comparison such as whether\n+     * non-null attribute values be included, how string-valued attribute be \n+     * compared, whether the individual attribute based predicates are ANDed\n+     * or ORed etc. Can be null to designate default comparison style.\n+     * \n+     * @param excludes list of attributes that are excluded from comparison.\n+     * Can be null.\n+     *  \n+     * @return a predicate \n+     */\n+    public <T> Predicate qbe(From<?, T> from, T example, ComparisonStyle style, Attribute<?,?>... excludes);\n+    \n+    /**\n+     * Overloaded with no extra attribute to exclude.\n+     */\n+    public <T> Predicate qbe(From<?, T> from, T example, ComparisonStyle style);\n+    \n+    /**\n+     * Overloaded with default comparison style.\n+     */\n+    public <T> Predicate qbe(From<?, T> from, T example, Attribute<?,?>... excludes);\n+    \n+    /**\n+     * Overloaded with default comparison style and no extra attribute to exclude.\n+     */\n+    public <T> Predicate qbe(From<?, T> from, T example);\n+    \n+    /**\n+     * Create a mutable style to apply on query-by-example.\n+     */\n+    public ComparisonStyle qbeStyle();\n+\n+}"}]}

