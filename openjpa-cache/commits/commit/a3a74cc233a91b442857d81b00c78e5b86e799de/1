{"sha":"a3a74cc233a91b442857d81b00c78e5b86e799de","node_id":"MDY6Q29tbWl0MjA2MzY0OmEzYTc0Y2MyMzNhOTFiNDQyODU3ZDgxYjAwYzc4ZTViODZlNzk5ZGU=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-09-07T19:27:13Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-09-07T19:27:13Z"},"message":"OPENJPA-356\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@573676 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"5717ccec0131452f52bb920f63d7892f84b0fcd9","url":"https://api.github.com/repos/apache/openjpa/git/trees/5717ccec0131452f52bb920f63d7892f84b0fcd9"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/a3a74cc233a91b442857d81b00c78e5b86e799de","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/a3a74cc233a91b442857d81b00c78e5b86e799de","html_url":"https://github.com/apache/openjpa/commit/a3a74cc233a91b442857d81b00c78e5b86e799de","comments_url":"https://api.github.com/repos/apache/openjpa/commits/a3a74cc233a91b442857d81b00c78e5b86e799de/comments","author":null,"committer":null,"parents":[{"sha":"7d9724ac004489042af95932629ecb152033c34a","url":"https://api.github.com/repos/apache/openjpa/commits/7d9724ac004489042af95932629ecb152033c34a","html_url":"https://github.com/apache/openjpa/commit/7d9724ac004489042af95932629ecb152033c34a"}],"stats":{"total":78,"additions":69,"deletions":9},"files":[{"sha":"c365709bce718940ebaed1b6e7d510eeb257efcc","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java","status":"modified","additions":34,"deletions":2,"changes":36,"blob_url":"https://github.com/apache/openjpa/blob/a3a74cc233a91b442857d81b00c78e5b86e799de/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java","raw_url":"https://github.com/apache/openjpa/raw/a3a74cc233a91b442857d81b00c78e5b86e799de/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java?ref=a3a74cc233a91b442857d81b00c78e5b86e799de","patch":"@@ -154,6 +154,33 @@ protected void appendSelectRange(SQLBuffer buf, long start, long end) {\n             append(\" ROWS ONLY\");\r\n     }\r\n \r\n+    protected void appendSelect(SQLBuffer selectSQL, Object alias, Select sel,\r\n+        int idx) {\r\n+        // if this is a literal value, add a cast...\r\n+        Object val = sel.getSelects().get(idx);\r\n+        if (val instanceof Lit)\r\n+            selectSQL.append(\"CAST(\");\r\n+\r\n+        // ... and add the select per super's behavior...\r\n+        super.appendSelect(selectSQL, alias, sel, idx);\r\n+\r\n+        // ... and finish the cast\r\n+        if (val instanceof Lit) {\r\n+            Class c = ((Lit) val).getType();\r\n+            int javaTypeCode = JavaTypes.getTypeCode(c);\r\n+            int jdbcTypeCode = getJDBCType(javaTypeCode, false);\r\n+            String typeName = getTypeName(jdbcTypeCode);\r\n+            selectSQL.append(\" AS \" + typeName);\r\n+\r\n+            // if the literal is a string, use the default char col size\r\n+            // in the cast statement.\r\n+            if (String.class.equals(c))\r\n+                selectSQL.append(\"(\" + characterColumnSize + \")\");\r\n+\r\n+            selectSQL.append(\")\");\r\n+        }\r\n+    }\r\n+\r\n     public String[] getCreateSequenceSQL(Sequence seq) {\r\n         String[] sql = super.getCreateSequenceSQL(seq);\r\n         if (seq.getAllocate() > 1)\r\n@@ -646,7 +673,9 @@ private String addCastAsString(String func, String target,\n     public String addCastAsType(String func, Val val) {\r\n         String fstring = null;\r\n         String type = getTypeName(getJDBCType(JavaTypes.getTypeCode(val\r\n-                .getType()), false));\r\n+            .getType()), false));\r\n+        if (String.class.equals(val.getType()))\r\n+            type = type + \"(\" + characterColumnSize + \")\";\r\n         fstring = \"CAST(? AS \" + type + \")\";\r\n         return fstring;\r\n     }\r\n@@ -731,7 +760,10 @@ public void appendCast(SQLBuffer buf, FilterValue val, int type) {\n             String sqlString = buf.getSQL(false);\r\n             if (sqlString.endsWith(\"?\")) {\r\n                 // case \"(?\" - convert to \"CAST(? AS type\"\r\n-                String str = \"CAST(? AS \" + getTypeName(type) + \")\";\r\n+                String typeName = getTypeName(type);\r\n+                if (String.class.equals(val.getType()))\r\n+                    typeName = typeName + \"(\" + characterColumnSize + \")\";\r\n+                String str = \"CAST(? AS \" + typeName + \")\";\r\n                 buf.replaceSqlString(sqlString.length() - 1,\r\n                         sqlString.length(), str);\r\n             }\r"},{"sha":"6699d5bc2c86ccdf4417f61313699ba29cec396f","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","status":"modified","additions":19,"deletions":7,"changes":26,"blob_url":"https://github.com/apache/openjpa/blob/a3a74cc233a91b442857d81b00c78e5b86e799de/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/a3a74cc233a91b442857d81b00c78e5b86e799de/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java?ref=a3a74cc233a91b442857d81b00c78e5b86e799de","patch":"@@ -2272,18 +2272,30 @@ protected SQLBuffer getSelects(Select sel, boolean distinctIdentifiers,\n             aliases = sel.getSelectAliases();\n \n         Object alias;\n-        for (Iterator itr = aliases.iterator(); itr.hasNext();) {\n-            alias = itr.next();\n-            if (alias instanceof SQLBuffer)\n-                selectSQL.append((SQLBuffer) alias);\n-            else\n-                selectSQL.append(alias.toString());\n-            if (itr.hasNext())\n+        for (int i = 0; i < aliases.size(); i++) {\n+            alias = aliases.get(i);\n+            appendSelect(selectSQL, alias, sel, i);\n+            if (i < aliases.size() - 1)\n                 selectSQL.append(\", \");\n         }\n         return selectSQL;\n     }\n \n+    /**\n+     * Append <code>elem</code> to <code>selectSQL</code>.\n+     * @param selectSQL The SQLBuffer to append to.\n+     * @param alias A {@link SQLBuffer} or a {@link String} to append.\n+     *\n+     * @since 1.1.0\n+     */\n+    protected void appendSelect(SQLBuffer selectSQL, Object elem, Select sel,\n+        int idx) {\n+        if (elem instanceof SQLBuffer)\n+            selectSQL.append((SQLBuffer) elem);\n+        else\n+            selectSQL.append(elem.toString());\n+    }\n+\n     /**\n      * Returns true if a \"FOR UPDATE\" clause can be used for the specified\n      * Select object."},{"sha":"680f5dd24651d8b9e4bc4bb400258725365e3c90","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/LogicalUnion.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/a3a74cc233a91b442857d81b00c78e5b86e799de/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/LogicalUnion.java","raw_url":"https://github.com/apache/openjpa/raw/a3a74cc233a91b442857d81b00c78e5b86e799de/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/LogicalUnion.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/LogicalUnion.java?ref=a3a74cc233a91b442857d81b00c78e5b86e799de","patch":"@@ -447,6 +447,10 @@ public Collection getTableAliases() {\n             return sel.getTableAliases();\n         }\n \n+        public List getSelects() {\n+            return sel.getSelects();\n+        }\n+\n         public List getSelectAliases() {\n             return sel.getSelectAliases();\n         }"},{"sha":"599a34f86a11936268b5d57fcd15baf8e1804717","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/Select.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/a3a74cc233a91b442857d81b00c78e5b86e799de/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/Select.java","raw_url":"https://github.com/apache/openjpa/raw/a3a74cc233a91b442857d81b00c78e5b86e799de/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/Select.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/Select.java?ref=a3a74cc233a91b442857d81b00c78e5b86e799de","patch":"@@ -149,6 +149,14 @@\n      */\n     public Collection getTableAliases();\n \n+    /**\n+     * Return the actual {@link Val}s and {@link Column}s that were\n+     * selected, in the order that they were selected.\n+     *\n+     * @since 1.1.0\n+     */\n+    public List getSelects();\n+\n     /**\n      * Return the aliases of all selected columns and all selected buffers,\n      * in the order they were selected. Each alias may be either a string"},{"sha":"d9cf928de6fce0d3f0a6ce7563b6f16eba464ccc","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/a3a74cc233a91b442857d81b00c78e5b86e799de/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java","raw_url":"https://github.com/apache/openjpa/raw/a3a74cc233a91b442857d81b00c78e5b86e799de/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java?ref=a3a74cc233a91b442857d81b00c78e5b86e799de","patch":"@@ -505,6 +505,10 @@ public Collection getTableAliases() {\n         return (_tables == null) ? Collections.EMPTY_SET : _tables.values();\n     }\n \n+    public List getSelects() {\n+        return Collections.unmodifiableList(_selects);\n+    }\n+\n     public List getSelectAliases() {\n         return _selects.getAliases(false, _outer != null);\n     }"}]}

