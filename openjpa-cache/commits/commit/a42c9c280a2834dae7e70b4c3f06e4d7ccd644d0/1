{"sha":"a42c9c280a2834dae7e70b4c3f06e4d7ccd644d0","node_id":"MDY6Q29tbWl0MjA2MzY0OmE0MmM5YzI4MGEyODM0ZGFlN2U3MGI0YzNmMDZlNGQ3Y2NkNjQ0ZDA=","commit":{"author":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2012-07-14T17:17:54Z"},"committer":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2012-07-14T17:17:54Z"},"message":"OPENJPA-2229: Add support for JBoss vfs when process Entities.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1361564 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"49b1e4f29a304707370931c5d2ab599aaaa12290","url":"https://api.github.com/repos/apache/openjpa/git/trees/49b1e4f29a304707370931c5d2ab599aaaa12290"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/a42c9c280a2834dae7e70b4c3f06e4d7ccd644d0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/a42c9c280a2834dae7e70b4c3f06e4d7ccd644d0","html_url":"https://github.com/apache/openjpa/commit/a42c9c280a2834dae7e70b4c3f06e4d7ccd644d0","comments_url":"https://api.github.com/repos/apache/openjpa/commits/a42c9c280a2834dae7e70b4c3f06e4d7ccd644d0/comments","author":null,"committer":null,"parents":[{"sha":"90032dc954223e3fb5600afa8b59a67a665ffb24","url":"https://api.github.com/repos/apache/openjpa/commits/90032dc954223e3fb5600afa8b59a67a665ffb24","html_url":"https://github.com/apache/openjpa/commit/90032dc954223e3fb5600afa8b59a67a665ffb24"}],"stats":{"total":31,"additions":31,"deletions":0},"files":[{"sha":"9eabeaf154784a5db241bb012b95bc4fcd979f92","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/AbstractCFMetaDataFactory.java","status":"modified","additions":29,"deletions":0,"changes":29,"blob_url":"https://github.com/apache/openjpa/blob/a42c9c280a2834dae7e70b4c3f06e4d7ccd644d0/openjpa-kernel/src/main/java/org/apache/openjpa/meta/AbstractCFMetaDataFactory.java","raw_url":"https://github.com/apache/openjpa/raw/a42c9c280a2834dae7e70b4c3f06e4d7ccd644d0/openjpa-kernel/src/main/java/org/apache/openjpa/meta/AbstractCFMetaDataFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/AbstractCFMetaDataFactory.java?ref=a42c9c280a2834dae7e70b4c3f06e4d7ccd644d0","patch":"@@ -22,9 +22,12 @@\n import java.io.FileNotFoundException;\n import java.io.IOException;\n import java.io.InputStream;\n+import java.lang.reflect.Method;\n import java.net.MalformedURLException;\n import java.net.URL;\n+import java.net.URLConnection;\n import java.security.AccessController;\n+import java.security.PrivilegedAction;\n import java.security.PrivilegedActionException;\n import java.util.ArrayList;\n import java.util.Arrays;\n@@ -704,6 +707,32 @@ protected ClassMetaData getDefiningMetaData(QueryMetaData query,\n                         continue;\n                     }\n                 }\n+                if (\"vfs\".equals(url.getProtocol())) {\n+                    if (log.isTraceEnabled()) {\n+                        log.trace(_loc.get(\"scanning-vfs-url\", url));\n+                    }\n+\n+                    final URLConnection conn = url.openConnection();\n+                    final Object vfsContent = conn.getContent();\n+                    final URL finalUrl = url;\n+                    File file = AccessController.doPrivileged(new PrivilegedAction<File>() {\n+                        @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n+                        public File run() {\n+                            try {\n+                                Class virtualFileClass = Class.forName(\"org.jboss.vfs.VirtualFile\");\n+                                Method getPhysicalFile = virtualFileClass.getDeclaredMethod(\"getPhysicalFile\");\n+                                return (File) getPhysicalFile.invoke(vfsContent);\n+                            } catch (Exception e) {\n+                                log.error(_loc.get(\"while-scanning-vfs-url\", finalUrl), e);\n+                            }\n+                            return null;\n+                        }\n+                    });\n+                    if (file != null)\n+                        scan(new FileMetaDataIterator(file, newMetaDataFilter()), cparser, names, true, file);\n+\n+                    continue;\n+                }\n                 if (\"jar\".equals(url.getProtocol())) {\n                     if (url.getPath().endsWith(\"!/\")) {\n                         if (log.isTraceEnabled())"},{"sha":"49f9444a5a6a98d4a0c13b59ba6d8e3627abb1ec","filename":"openjpa-kernel/src/main/resources/org/apache/openjpa/meta/localizer.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/a42c9c280a2834dae7e70b4c3f06e4d7ccd644d0/openjpa-kernel/src/main/resources/org/apache/openjpa/meta/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/a42c9c280a2834dae7e70b4c3f06e4d7ccd644d0/openjpa-kernel/src/main/resources/org/apache/openjpa/meta/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/resources/org/apache/openjpa/meta/localizer.properties?ref=a42c9c280a2834dae7e70b4c3f06e4d7ccd644d0","patch":"@@ -311,6 +311,7 @@ scanning-directory: Scanning directory \"{0}\" for persistent types.\n scanning-jar: Scanning jar \"{0}\" for persistent types.\n scanning-file: Scanning file \"{0}\" for persistent types.\n scanning-jar-url: Scanning jar: URL \"{0}\" for persistent types.\n+scanning-vfs-url: Scanning JBoss vfs: URL \"{0}\" for persistent types.\n scanning-jar-at-url: Scanning jar file from URL \"{0}\" for persistent types.\n scanning-url: Scanning URL \"{0}\" for persistent types.\n scanning-zip-stream-url: Scanning jar in stream from URL \"{0}\" for persistent \\\n@@ -358,3 +359,4 @@ resource-url: The resource url is \"{0}\"\n mapping-file-name: Mapping file name is \"{0}\"\n jar-file-url: Jar file url is \"{0}\"\n down-level-entity: A down level Entity was detected and logged. Please enable RUNTIME trace to see all down level Entities.\n+while-scanning-vfs-url: Error while scanning JBoss vfs: URL \"{0}\" for persistent types"}]}

