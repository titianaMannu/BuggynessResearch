{"sha":"a5ed9f701dcb37ffd020e5333bcd0c28b26d650d","node_id":"MDY6Q29tbWl0MjA2MzY0OmE1ZWQ5ZjcwMWRjYjM3ZmZkMDIwZTUzMzNiY2QwYzI4YjI2ZDY1MGQ=","commit":{"author":{"name":"David J. Wisneski","email":"wisneskid@apache.org","date":"2007-07-21T01:25:48Z"},"committer":{"name":"David J. Wisneski","email":"wisneskid@apache.org","date":"2007-07-21T01:25:48Z"},"message":"OPENJPA-240 XMLMapping Query support,  fix eol delimiters to unix style\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@558221 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"8dabb15caad1618c1eb83423e4aef04f60da1f8c","url":"https://api.github.com/repos/apache/openjpa/git/trees/8dabb15caad1618c1eb83423e4aef04f60da1f8c"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d","html_url":"https://github.com/apache/openjpa/commit/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d","comments_url":"https://api.github.com/repos/apache/openjpa/commits/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d/comments","author":null,"committer":null,"parents":[{"sha":"e2556dd6b2567ac13f838ebf796d40c228eb6dd5","url":"https://api.github.com/repos/apache/openjpa/commits/e2556dd6b2567ac13f838ebf796d40c228eb6dd5","html_url":"https://github.com/apache/openjpa/commit/e2556dd6b2567ac13f838ebf796d40c228eb6dd5"}],"stats":{"total":3542,"additions":1771,"deletions":1771},"files":[{"sha":"f2cadb8b6b392688f44f2f20dffcecf09327bd9f","filename":"openjpa-jdbc-5/src/main/java/org/apache/openjpa/jdbc/meta/XMLMappingRepository.java","status":"modified","additions":82,"deletions":82,"changes":164,"blob_url":"https://github.com/apache/openjpa/blob/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d/openjpa-jdbc-5/src/main/java/org/apache/openjpa/jdbc/meta/XMLMappingRepository.java","raw_url":"https://github.com/apache/openjpa/raw/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d/openjpa-jdbc-5/src/main/java/org/apache/openjpa/jdbc/meta/XMLMappingRepository.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc-5/src/main/java/org/apache/openjpa/jdbc/meta/XMLMappingRepository.java?ref=a5ed9f701dcb37ffd020e5333bcd0c28b26d650d","patch":"@@ -1,82 +1,82 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one\r\n- * or more contributor license agreements.  See the NOTICE file\r\n- * distributed with this work for additional information\r\n- * regarding copyright ownership.  The ASF licenses this file\r\n- * to you under the Apache License, Version 2.0 (the\r\n- * \"License\"); you may not use this file except in compliance\r\n- * with the License.  You may obtain a copy of the License at\r\n- *\r\n- * http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing,\r\n- * software distributed under the License is distributed on an\r\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- * KIND, either express or implied.  See the License for the\r\n- * specific language governing permissions and limitations\r\n- * under the License.    \r\n- */\r\n-package org.apache.openjpa.jdbc.meta;\r\n-\r\n-import java.util.HashMap;\r\n-import java.util.Map;\r\n-\r\n-import org.apache.openjpa.meta.FieldMetaData;\r\n-import org.apache.openjpa.meta.XMLClassMetaData;\r\n-import org.apache.openjpa.meta.XMLMapping;\r\n-\r\n-/**\r\n- * Repository of object/relational mapping information.\r\n- *  (extended to include XML mapping metadata for XML columns)\r\n- *  \r\n- * @author Catalina Wei\r\n- * @since 1.0.0\r\n- */\r\n-public class XMLMappingRepository extends MappingRepository {\r\n-    // xml mapping\r\n-    protected final XMLMapping[] EMPTY_XMLMETAS;\r\n-    private final Map _xmlmetas = new HashMap();\r\n-\r\n-    public XMLMappingRepository() {\r\n-        super();\r\n-        EMPTY_XMLMETAS = newXMLClassMetaDataArray(0);\r\n-    }\r\n-    \r\n-    public synchronized XMLClassMetaData addXMLClassMetaData(FieldMetaData fmd, \r\n-        String name) {        \r\n-        XMLClassMetaData meta = newXMLClassMetaData(fmd, name);\r\n-        addXMLClassMetaData(fmd.getDeclaredType(), meta);\r\n-        return meta;\r\n-    }\r\n-    \r\n-    public XMLMapping getXMLClassMetaData(Class cls) {\r\n-        synchronized(_xmlmetas) {\r\n-            if (_xmlmetas.isEmpty())\r\n-                return null;\r\n-            else\r\n-                return (XMLClassMetaData) _xmlmetas.get(cls);\r\n-        }\r\n-    }\r\n-    \r\n-    public XMLMapping getXMLMetaData(FieldMetaData fmd) {\r\n-        XMLMapping xmlmeta = null;\r\n-        if (XMLClassMetaData.isXMLMapping(fmd.getDeclaredType())) {\r\n-            xmlmeta = getXMLClassMetaData(fmd.getDeclaredType());\r\n-            if (xmlmeta == null)\r\n-                xmlmeta = addXMLClassMetaData(fmd, fmd.getName());\r\n-        }\r\n-        return xmlmeta;\r\n-    }\r\n-    \r\n-    public synchronized void addXMLClassMetaData(Class cls, XMLMapping meta) {\r\n-        _xmlmetas.put(cls, meta);\r\n-    }    \r\n-    \r\n-    protected XMLClassMetaData newXMLClassMetaData(FieldMetaData fmd, String name) {\r\n-        return new XMLClassMetaData(fmd.getDeclaredType(), name, this);\r\n-    }\r\n-        \r\n-    protected XMLMapping[] newXMLClassMetaDataArray(int length) {\r\n-        return new XMLClassMetaData[length];\r\n-    }\r\n-}\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.jdbc.meta;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.apache.openjpa.meta.FieldMetaData;\n+import org.apache.openjpa.meta.XMLClassMetaData;\n+import org.apache.openjpa.meta.XMLMapping;\n+\n+/**\n+ * Repository of object/relational mapping information.\n+ *  (extended to include XML mapping metadata for XML columns)\n+ *  \n+ * @author Catalina Wei\n+ * @since 1.0.0\n+ */\n+public class XMLMappingRepository extends MappingRepository {\n+    // xml mapping\n+    protected final XMLMapping[] EMPTY_XMLMETAS;\n+    private final Map _xmlmetas = new HashMap();\n+\n+    public XMLMappingRepository() {\n+        super();\n+        EMPTY_XMLMETAS = newXMLClassMetaDataArray(0);\n+    }\n+    \n+    public synchronized XMLClassMetaData addXMLClassMetaData(FieldMetaData fmd, \n+        String name) {        \n+        XMLClassMetaData meta = newXMLClassMetaData(fmd, name);\n+        addXMLClassMetaData(fmd.getDeclaredType(), meta);\n+        return meta;\n+    }\n+    \n+    public XMLMapping getXMLClassMetaData(Class cls) {\n+        synchronized(_xmlmetas) {\n+            if (_xmlmetas.isEmpty())\n+                return null;\n+            else\n+                return (XMLClassMetaData) _xmlmetas.get(cls);\n+        }\n+    }\n+    \n+    public XMLMapping getXMLMetaData(FieldMetaData fmd) {\n+        XMLMapping xmlmeta = null;\n+        if (XMLClassMetaData.isXMLMapping(fmd.getDeclaredType())) {\n+            xmlmeta = getXMLClassMetaData(fmd.getDeclaredType());\n+            if (xmlmeta == null)\n+                xmlmeta = addXMLClassMetaData(fmd, fmd.getName());\n+        }\n+        return xmlmeta;\n+    }\n+    \n+    public synchronized void addXMLClassMetaData(Class cls, XMLMapping meta) {\n+        _xmlmetas.put(cls, meta);\n+    }    \n+    \n+    protected XMLClassMetaData newXMLClassMetaData(FieldMetaData fmd, String name) {\n+        return new XMLClassMetaData(fmd.getDeclaredType(), name, this);\n+    }\n+        \n+    protected XMLMapping[] newXMLClassMetaDataArray(int length) {\n+        return new XMLClassMetaData[length];\n+    }\n+}"},{"sha":"5e6d9256b354eef3982de7cea5a0500f9f791859","filename":"openjpa-jdbc-5/src/main/java/org/apache/openjpa/meta/XMLClassMetaData.java","status":"modified","additions":227,"deletions":227,"changes":454,"blob_url":"https://github.com/apache/openjpa/blob/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d/openjpa-jdbc-5/src/main/java/org/apache/openjpa/meta/XMLClassMetaData.java","raw_url":"https://github.com/apache/openjpa/raw/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d/openjpa-jdbc-5/src/main/java/org/apache/openjpa/meta/XMLClassMetaData.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc-5/src/main/java/org/apache/openjpa/meta/XMLClassMetaData.java?ref=a5ed9f701dcb37ffd020e5333bcd0c28b26d650d","patch":"@@ -1,227 +1,227 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one\r\n- * or more contributor license agreements.  See the NOTICE file\r\n- * distributed with this work for additional information\r\n- * regarding copyright ownership.  The ASF licenses this file\r\n- * to you under the Apache License, Version 2.0 (the\r\n- * \"License\"); you may not use this file except in compliance\r\n- * with the License.  You may obtain a copy of the License at\r\n- *\r\n- * http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing,\r\n- * software distributed under the License is distributed on an\r\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- * KIND, either express or implied.  See the License for the\r\n- * specific language governing permissions and limitations\r\n- * under the License.    \r\n- */\r\n-package org.apache.openjpa.meta;\r\n-\r\n-import java.lang.reflect.AnnotatedElement;\r\n-import java.lang.reflect.Member;\r\n-import java.lang.reflect.Field;\r\n-import java.util.HashMap;\r\n-\r\n-import javax.xml.bind.annotation.XmlAccessType;\r\n-import javax.xml.bind.annotation.XmlAccessorType;\r\n-import javax.xml.bind.annotation.XmlAttribute;\r\n-import javax.xml.bind.annotation.XmlElement;\r\n-import javax.xml.bind.annotation.XmlRootElement;\r\n-import javax.xml.bind.annotation.XmlType;\r\n-\r\n-import org.apache.openjpa.jdbc.meta.XMLMappingRepository;\r\n-import org.apache.openjpa.meta.JavaTypes;\r\n-import org.apache.openjpa.meta.XMLMapping;\r\n-import org.apache.openjpa.meta.XMLMetaData;\r\n-import org.apache.commons.lang.StringUtils;\r\n-\r\n-/**\r\n- * Contains metadata about a persistent field that maps to an xml column.\r\n- * This metadata is loaded at runtime when query involves predicates\r\n- * that navigate through xpath.\r\n- *\r\n- * @author Catalina Wei\r\n- * @since 1.0.0\r\n- */\r\n-public class XMLClassMetaData implements XMLMapping     \r\n-{\r\n-    private Class _type;\r\n-    private int _code = JavaTypes.OBJECT;\r\n-    private int _xmltype = XMLTYPE;\r\n-    private String _name = null;\r\n-    private String _xmlname = null;\r\n-    private String _xmlnamespace = null;\r\n-    private boolean _isXMLRootElement = false;\r\n-    private HashMap _fieldMap = new HashMap();\r\n-    \r\n-    /**\r\n-     * Constructor.\r\n-     * \r\n-     * @param type the class that contains XmlType annotation.\r\n-     * @name  the persistent field name that maps to xml column\r\n-     * @param repo the meta repository.\r\n-     */\r\n-    public XMLClassMetaData(Class type, String name, XMLMappingRepository repos) {\r\n-       _type = type;\r\n-       _isXMLRootElement = _type.getAnnotation(XmlRootElement.class) != null;\r\n-       if (_isXMLRootElement) {\r\n-           _xmlname = ((XmlRootElement) _type.getAnnotation\r\n-                   (XmlRootElement.class)).name();\r\n-           _xmlnamespace = ((XmlRootElement) _type.getAnnotation\r\n-                   (XmlRootElement.class)).namespace();\r\n-       }\r\n-       else {\r\n-           _xmlname = ((XmlType) _type.getAnnotation\r\n-                   (XmlType.class)).name();\r\n-           _xmlnamespace = ((XmlType) _type.getAnnotation\r\n-                   (XmlType.class)).namespace();\r\n-           _name = name;\r\n-       }\r\n-       populateFromReflection(_type, repos);\r\n-    }\r\n-    \r\n-    /**\r\n-     * Constructor. Supply described type and repository.\r\n-     * \r\n-     * @param type the class that contains XmlType annotation.\r\n-     * @param repo the meta repository.\r\n-     */\r\n-    protected XMLClassMetaData(Class type, XMLMappingRepository repos) {\r\n-        _type = type;\r\n-        _isXMLRootElement = _type.getAnnotation(XmlRootElement.class) != null;\r\n-        if (_isXMLRootElement) {\r\n-            _xmlname = ((XmlRootElement) _type.getAnnotation\r\n-                    (XmlRootElement.class)).name();\r\n-            _xmlnamespace = ((XmlRootElement) _type.getAnnotation\r\n-                    (XmlRootElement.class)).namespace();\r\n-        }\r\n-        else {\r\n-            _xmlname = ((XmlType) _type.getAnnotation\r\n-                    (XmlType.class)).name();\r\n-            _xmlnamespace = ((XmlType) _type.getAnnotation\r\n-                    (XmlType.class)).namespace();           \r\n-        }\r\n-        populateFromReflection(_type, repos);\r\n-        repos.addXMLClassMetaData(type, this);\r\n-    }\r\n-\r\n-    /**\r\n-     * Given a class type return true if XmlType annotation exists\r\n-     * @param type\r\n-     * @return true if XmlType annotation is present else false.\r\n-     */\r\n-    public static boolean isXMLMapping(Class type) {\r\n-        return type.isAnnotationPresent(XmlType.class);\r\n-    }\r\n-    \r\n-    public void setName(String name) {\r\n-        _name = name;\r\n-    }\r\n-    \r\n-    public String getName() {\r\n-        return _name;\r\n-    }    \r\n-    \r\n-    public void setXmlname(String name) {\r\n-        _xmlname = name;\r\n-    }\r\n-    \r\n-    public String getXmlname() {\r\n-        return _isXMLRootElement ? null : _xmlname;\r\n-    }\r\n-\r\n-    public void setXmlnamespace(String name) {\r\n-        // avoid JAXB XML bind default name\r\n-        if (!StringUtils.equals(defaultName, name))\r\n-            _xmlnamespace = name;\r\n-    }\r\n-    \r\n-    public String getXmlnamespace() {\r\n-        return _xmlnamespace;\r\n-    }\r\n-\r\n-    public boolean isXmlRootElement() {\r\n-        return _isXMLRootElement;\r\n-    }\r\n-    \r\n-    public boolean isXmlElement() {\r\n-        return false;\r\n-    }\r\n-    \r\n-    public boolean isXmlAttribute() {\r\n-        return false;\r\n-    }\r\n-    \r\n-    public XMLMapping getFieldMapping(String name) {\r\n-        return (XMLMapping) _fieldMap.get(name);\r\n-    }\r\n-    \r\n-    public void setType(Class type) {\r\n-        _type = type;\r\n-    }\r\n-    \r\n-    public Class getType() {\r\n-        return _type;\r\n-    }\r\n-    \r\n-    public int getTypeCode() {\r\n-        return _code;\r\n-    }\r\n-\r\n-    public void setXmltype(int type) {\r\n-        _xmltype = type;\r\n-    }\r\n-    public int getXmltype() {\r\n-        return _xmltype;\r\n-    }\r\n-\r\n-    private synchronized void populateFromReflection(Class cls, \r\n-        XMLMappingRepository repos) {\r\n-        Member[] members;\r\n-        if (((XmlAccessorType)cls.getAnnotation(XmlAccessorType.class)).value()\r\n-                == XmlAccessType.FIELD)\r\n-            members = cls.getDeclaredFields();\r\n-        else\r\n-            members = cls.getDeclaredMethods();\r\n-        for (int i = 0; i < members.length; i++) {\r\n-            Member member = members[i];\r\n-            AnnotatedElement el = (AnnotatedElement) member;\r\n-            XMLMapping field = null;\r\n-            if (el.getAnnotation(XmlElement.class) != null) {\r\n-                String xmlname = el.getAnnotation(XmlElement.class).name();\r\n-                // avoid JAXB XML bind default name\r\n-                if (StringUtils.equals(defaultName, xmlname))\r\n-                    xmlname = member.getName();\r\n-                if (((Field) member).getType().\r\n-                        isAnnotationPresent(XmlType.class)) {\r\n-                    field = new XMLClassMetaData(((Field) member).getType(),\r\n-                            repos);\r\n-                    field.setXmltype(XMLTYPE);\r\n-                    field.setXmlname(xmlname);\r\n-                }\r\n-                else {\r\n-                    field = new XMLMetaData();\r\n-                    field.setXmltype(ELEMENT);\r\n-                    field.setXmlname(xmlname);\r\n-                    field.setXmlnamespace(el.getAnnotation(XmlElement.class)\r\n-                            .namespace());                    \r\n-                }\r\n-            }\r\n-            else if (el.getAnnotation(XmlAttribute.class) != null) {\r\n-                field = new XMLMetaData();\r\n-                field.setXmltype(XMLMetaData.ATTRIBUTE);\r\n-                String xmlname = el.getAnnotation(XmlAttribute.class).name();\r\n-                // avoid JAXB XML bind default name\r\n-                if (StringUtils.equals(defaultName, xmlname))\r\n-                    xmlname = member.getName();\r\n-                field.setXmlname(\"@\"+xmlname);\r\n-                field.setXmlnamespace(el.getAnnotation(XmlAttribute.class)\r\n-                        .namespace());                \r\n-            }\r\n-            field.setName(member.getName());\r\n-            field.setType(((Field) member).getType());                \r\n-            _fieldMap.put(member.getName(), field);\r\n-        }        \r\n-    }\r\n-}\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.meta;\n+\n+import java.lang.reflect.AnnotatedElement;\n+import java.lang.reflect.Member;\n+import java.lang.reflect.Field;\n+import java.util.HashMap;\n+\n+import javax.xml.bind.annotation.XmlAccessType;\n+import javax.xml.bind.annotation.XmlAccessorType;\n+import javax.xml.bind.annotation.XmlAttribute;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+\n+import org.apache.openjpa.jdbc.meta.XMLMappingRepository;\n+import org.apache.openjpa.meta.JavaTypes;\n+import org.apache.openjpa.meta.XMLMapping;\n+import org.apache.openjpa.meta.XMLMetaData;\n+import org.apache.commons.lang.StringUtils;\n+\n+/**\n+ * Contains metadata about a persistent field that maps to an xml column.\n+ * This metadata is loaded at runtime when query involves predicates\n+ * that navigate through xpath.\n+ *\n+ * @author Catalina Wei\n+ * @since 1.0.0\n+ */\n+public class XMLClassMetaData implements XMLMapping     \n+{\n+    private Class _type;\n+    private int _code = JavaTypes.OBJECT;\n+    private int _xmltype = XMLTYPE;\n+    private String _name = null;\n+    private String _xmlname = null;\n+    private String _xmlnamespace = null;\n+    private boolean _isXMLRootElement = false;\n+    private HashMap _fieldMap = new HashMap();\n+    \n+    /**\n+     * Constructor.\n+     * \n+     * @param type the class that contains XmlType annotation.\n+     * @name  the persistent field name that maps to xml column\n+     * @param repo the meta repository.\n+     */\n+    public XMLClassMetaData(Class type, String name, XMLMappingRepository repos) {\n+       _type = type;\n+       _isXMLRootElement = _type.getAnnotation(XmlRootElement.class) != null;\n+       if (_isXMLRootElement) {\n+           _xmlname = ((XmlRootElement) _type.getAnnotation\n+                   (XmlRootElement.class)).name();\n+           _xmlnamespace = ((XmlRootElement) _type.getAnnotation\n+                   (XmlRootElement.class)).namespace();\n+       }\n+       else {\n+           _xmlname = ((XmlType) _type.getAnnotation\n+                   (XmlType.class)).name();\n+           _xmlnamespace = ((XmlType) _type.getAnnotation\n+                   (XmlType.class)).namespace();\n+           _name = name;\n+       }\n+       populateFromReflection(_type, repos);\n+    }\n+    \n+    /**\n+     * Constructor. Supply described type and repository.\n+     * \n+     * @param type the class that contains XmlType annotation.\n+     * @param repo the meta repository.\n+     */\n+    protected XMLClassMetaData(Class type, XMLMappingRepository repos) {\n+        _type = type;\n+        _isXMLRootElement = _type.getAnnotation(XmlRootElement.class) != null;\n+        if (_isXMLRootElement) {\n+            _xmlname = ((XmlRootElement) _type.getAnnotation\n+                    (XmlRootElement.class)).name();\n+            _xmlnamespace = ((XmlRootElement) _type.getAnnotation\n+                    (XmlRootElement.class)).namespace();\n+        }\n+        else {\n+            _xmlname = ((XmlType) _type.getAnnotation\n+                    (XmlType.class)).name();\n+            _xmlnamespace = ((XmlType) _type.getAnnotation\n+                    (XmlType.class)).namespace();           \n+        }\n+        populateFromReflection(_type, repos);\n+        repos.addXMLClassMetaData(type, this);\n+    }\n+\n+    /**\n+     * Given a class type return true if XmlType annotation exists\n+     * @param type\n+     * @return true if XmlType annotation is present else false.\n+     */\n+    public static boolean isXMLMapping(Class type) {\n+        return type.isAnnotationPresent(XmlType.class);\n+    }\n+    \n+    public void setName(String name) {\n+        _name = name;\n+    }\n+    \n+    public String getName() {\n+        return _name;\n+    }    \n+    \n+    public void setXmlname(String name) {\n+        _xmlname = name;\n+    }\n+    \n+    public String getXmlname() {\n+        return _isXMLRootElement ? null : _xmlname;\n+    }\n+\n+    public void setXmlnamespace(String name) {\n+        // avoid JAXB XML bind default name\n+        if (!StringUtils.equals(defaultName, name))\n+            _xmlnamespace = name;\n+    }\n+    \n+    public String getXmlnamespace() {\n+        return _xmlnamespace;\n+    }\n+\n+    public boolean isXmlRootElement() {\n+        return _isXMLRootElement;\n+    }\n+    \n+    public boolean isXmlElement() {\n+        return false;\n+    }\n+    \n+    public boolean isXmlAttribute() {\n+        return false;\n+    }\n+    \n+    public XMLMapping getFieldMapping(String name) {\n+        return (XMLMapping) _fieldMap.get(name);\n+    }\n+    \n+    public void setType(Class type) {\n+        _type = type;\n+    }\n+    \n+    public Class getType() {\n+        return _type;\n+    }\n+    \n+    public int getTypeCode() {\n+        return _code;\n+    }\n+\n+    public void setXmltype(int type) {\n+        _xmltype = type;\n+    }\n+    public int getXmltype() {\n+        return _xmltype;\n+    }\n+\n+    private synchronized void populateFromReflection(Class cls, \n+        XMLMappingRepository repos) {\n+        Member[] members;\n+        if (((XmlAccessorType)cls.getAnnotation(XmlAccessorType.class)).value()\n+                == XmlAccessType.FIELD)\n+            members = cls.getDeclaredFields();\n+        else\n+            members = cls.getDeclaredMethods();\n+        for (int i = 0; i < members.length; i++) {\n+            Member member = members[i];\n+            AnnotatedElement el = (AnnotatedElement) member;\n+            XMLMapping field = null;\n+            if (el.getAnnotation(XmlElement.class) != null) {\n+                String xmlname = el.getAnnotation(XmlElement.class).name();\n+                // avoid JAXB XML bind default name\n+                if (StringUtils.equals(defaultName, xmlname))\n+                    xmlname = member.getName();\n+                if (((Field) member).getType().\n+                        isAnnotationPresent(XmlType.class)) {\n+                    field = new XMLClassMetaData(((Field) member).getType(),\n+                            repos);\n+                    field.setXmltype(XMLTYPE);\n+                    field.setXmlname(xmlname);\n+                }\n+                else {\n+                    field = new XMLMetaData();\n+                    field.setXmltype(ELEMENT);\n+                    field.setXmlname(xmlname);\n+                    field.setXmlnamespace(el.getAnnotation(XmlElement.class)\n+                            .namespace());                    \n+                }\n+            }\n+            else if (el.getAnnotation(XmlAttribute.class) != null) {\n+                field = new XMLMetaData();\n+                field.setXmltype(XMLMetaData.ATTRIBUTE);\n+                String xmlname = el.getAnnotation(XmlAttribute.class).name();\n+                // avoid JAXB XML bind default name\n+                if (StringUtils.equals(defaultName, xmlname))\n+                    xmlname = member.getName();\n+                field.setXmlname(\"@\"+xmlname);\n+                field.setXmlnamespace(el.getAnnotation(XmlAttribute.class)\n+                        .namespace());                \n+            }\n+            field.setName(member.getName());\n+            field.setType(((Field) member).getType());                \n+            _fieldMap.put(member.getName(), field);\n+        }        \n+    }\n+}"},{"sha":"7f2c744c6f016efc51ff6946ecb6aa01fb509034","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/XMLMapping.java","status":"modified","additions":119,"deletions":119,"changes":238,"blob_url":"https://github.com/apache/openjpa/blob/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d/openjpa-kernel/src/main/java/org/apache/openjpa/meta/XMLMapping.java","raw_url":"https://github.com/apache/openjpa/raw/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d/openjpa-kernel/src/main/java/org/apache/openjpa/meta/XMLMapping.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/XMLMapping.java?ref=a5ed9f701dcb37ffd020e5333bcd0c28b26d650d","patch":"@@ -1,119 +1,119 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one\r\n- * or more contributor license agreements.  See the NOTICE file\r\n- * distributed with this work for additional information\r\n- * regarding copyright ownership.  The ASF licenses this file\r\n- * to you under the Apache License, Version 2.0 (the\r\n- * \"License\"); you may not use this file except in compliance\r\n- * with the License.  You may obtain a copy of the License at\r\n- *\r\n- * http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing,\r\n- * software distributed under the License is distributed on an\r\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- * KIND, either express or implied.  See the License for the\r\n- * specific language governing permissions and limitations\r\n- * under the License.    \r\n- */\r\n-package org.apache.openjpa.meta;\r\n-\r\n-import java.io.Serializable;\r\n-\r\n-/**\r\n- * Describe metadata about an xml type.\r\n- * \r\n- * @author Catalina Wei\r\n- * @since 1.0.0\r\n- */\r\n-public interface XMLMapping extends Serializable {\r\n-    /**\r\n-     * JAXB XML binding default name\r\n-     */\r\n-    public static final String defaultName = \"##default\";\r\n-    public static final int XMLTYPE = 0;\r\n-    public static final int ELEMENT = 1;\r\n-    public static final int ATTRIBUTE = 2;\r\n-\r\n-    /**\r\n-     * Return true if mapping on an XmlRootElement.\r\n-     */\r\n-    public boolean isXmlRootElement();\r\n-\r\n-    /**\r\n-     * Return true if mapping on an XmlElement.\r\n-     */\r\n-    public boolean isXmlElement();\r\n-\r\n-    /**\r\n-     * Return true if mapping on an XmlAttribute.\r\n-     */\r\n-    public boolean isXmlAttribute();\r\n-    \r\n-    /**\r\n-     * Return XMLMapping for a given field.\r\n-     * @param name the field name.\r\n-     * @return XMLMapping.\r\n-     */\r\n-    public XMLMapping getFieldMapping(String name); \r\n-    \r\n-    /**\r\n-     * Set type.\r\n-     */\r\n-    public void setType(Class type);\r\n-\r\n-    /**\r\n-     * Return type.\r\n-     */\r\n-    public Class getType();\r\n-\r\n-    /**\r\n-     * Return type code.\r\n-     */\r\n-    public int getTypeCode();\r\n-\r\n-    /**\r\n-     * Return the mapping name.\r\n-     */\r\n-    public String getName();\r\n-\r\n-    /**\r\n-     * Return xml element tag name or xml attribute name.\r\n-     */\r\n-    public String getXmlname();\r\n-\r\n-    /**\r\n-     * Return xml namespace.\r\n-     */\r\n-    public String getXmlnamespace();\r\n-\r\n-    /**\r\n-     * Set field name.\r\n-     * @param name the field name.\r\n-     */\r\n-    public void setName(String name);\r\n-\r\n-    /**\r\n-     * Set xml element or attribute name.\r\n-     * @param name the element name or attribute name\r\n-     */\r\n-    public void setXmlname(String name);\r\n-\r\n-    /**\r\n-     * Set namespace.\r\n-     * @param namespace\r\n-     */\r\n-    public void setXmlnamespace(String namespace);\r\n-\r\n-    /**\r\n-     * Set xmltype\r\n-     * @param type XMLTYPE, ELEMENT, or ATTRIBUTE\r\n-     */\r\n-    public void setXmltype(int type);\r\n-\r\n-    /**\r\n-     * Return xmltype\r\n-     * @return xmltype\r\n-     */\r\n-    public int getXmltype();\r\n-}\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.meta;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * Describe metadata about an xml type.\n+ * \n+ * @author Catalina Wei\n+ * @since 1.0.0\n+ */\n+public interface XMLMapping extends Serializable {\n+    /**\n+     * JAXB XML binding default name\n+     */\n+    public static final String defaultName = \"##default\";\n+    public static final int XMLTYPE = 0;\n+    public static final int ELEMENT = 1;\n+    public static final int ATTRIBUTE = 2;\n+\n+    /**\n+     * Return true if mapping on an XmlRootElement.\n+     */\n+    public boolean isXmlRootElement();\n+\n+    /**\n+     * Return true if mapping on an XmlElement.\n+     */\n+    public boolean isXmlElement();\n+\n+    /**\n+     * Return true if mapping on an XmlAttribute.\n+     */\n+    public boolean isXmlAttribute();\n+    \n+    /**\n+     * Return XMLMapping for a given field.\n+     * @param name the field name.\n+     * @return XMLMapping.\n+     */\n+    public XMLMapping getFieldMapping(String name); \n+    \n+    /**\n+     * Set type.\n+     */\n+    public void setType(Class type);\n+\n+    /**\n+     * Return type.\n+     */\n+    public Class getType();\n+\n+    /**\n+     * Return type code.\n+     */\n+    public int getTypeCode();\n+\n+    /**\n+     * Return the mapping name.\n+     */\n+    public String getName();\n+\n+    /**\n+     * Return xml element tag name or xml attribute name.\n+     */\n+    public String getXmlname();\n+\n+    /**\n+     * Return xml namespace.\n+     */\n+    public String getXmlnamespace();\n+\n+    /**\n+     * Set field name.\n+     * @param name the field name.\n+     */\n+    public void setName(String name);\n+\n+    /**\n+     * Set xml element or attribute name.\n+     * @param name the element name or attribute name\n+     */\n+    public void setXmlname(String name);\n+\n+    /**\n+     * Set namespace.\n+     * @param namespace\n+     */\n+    public void setXmlnamespace(String namespace);\n+\n+    /**\n+     * Set xmltype\n+     * @param type XMLTYPE, ELEMENT, or ATTRIBUTE\n+     */\n+    public void setXmltype(int type);\n+\n+    /**\n+     * Return xmltype\n+     * @return xmltype\n+     */\n+    public int getXmltype();\n+}"},{"sha":"ea9e63b9e9c968c342937ce35d6e0fd4b873f30b","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/XMLMetaData.java","status":"modified","additions":111,"deletions":111,"changes":222,"blob_url":"https://github.com/apache/openjpa/blob/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d/openjpa-kernel/src/main/java/org/apache/openjpa/meta/XMLMetaData.java","raw_url":"https://github.com/apache/openjpa/raw/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d/openjpa-kernel/src/main/java/org/apache/openjpa/meta/XMLMetaData.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/XMLMetaData.java?ref=a5ed9f701dcb37ffd020e5333bcd0c28b26d650d","patch":"@@ -1,111 +1,111 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one\r\n- * or more contributor license agreements.  See the NOTICE file\r\n- * distributed with this work for additional information\r\n- * regarding copyright ownership.  The ASF licenses this file\r\n- * to you under the Apache License, Version 2.0 (the\r\n- * \"License\"); you may not use this file except in compliance\r\n- * with the License.  You may obtain a copy of the License at\r\n- *\r\n- * http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing,\r\n- * software distributed under the License is distributed on an\r\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- * KIND, either express or implied.  See the License for the\r\n- * specific language governing permissions and limitations\r\n- * under the License.    \r\n- */\r\n-package org.apache.openjpa.meta;\r\n-\r\n-import org.apache.commons.lang.StringUtils;\r\n-\r\n-/**\r\n- * Contains metadata about an xml element or attribute\r\n- *\r\n- * @author Catalina Wei\r\n- * @since 1.0.0\r\n- */\r\n-public class XMLMetaData implements XMLMapping {\r\n-\r\n-    private String _name;\r\n-    private String _xmlname = null;\r\n-    private String _xmlnamespace = null;\r\n-    private Class _decType = Object.class;\r\n-    private int _decCode = JavaTypes.OBJECT;\r\n-    private Class _type = Object.class;\r\n-    private int _code = JavaTypes.OBJECT;\r\n-    private int _xmltype;    \r\n-\r\n-    public XMLMetaData() {        \r\n-    }\r\n-    \r\n-    public Class getType() {\r\n-        return (_type == null) ? _decType : _type;\r\n-    }\r\n-\r\n-    public void setType(Class type) {\r\n-        _type = type;\r\n-        if (type != null)\r\n-            setTypeCode(JavaTypes.getTypeCode(type));\r\n-    }\r\n-\r\n-    public int getTypeCode() {\r\n-        return (_type == null) ? _decCode : _code;\r\n-    }\r\n-\r\n-    // set JavaTypes code\r\n-    public void setTypeCode(int code) {\r\n-        _code = code;\r\n-    }\r\n-    \r\n-    public void setName(String name) {\r\n-        _name = name;\r\n-    }\r\n-    \r\n-    public String getName() {\r\n-        return _name;\r\n-    }\r\n-    \r\n-    public void setXmlname(String name) {\r\n-        _xmlname = name;\r\n-    }\r\n-    \r\n-    public String getXmlname() {\r\n-        return _xmlname;\r\n-    }\r\n-    \r\n-    public void setXmlnamespace(String name) {\r\n-        // avoid JAXB XML bind default name\r\n-        if (!StringUtils.equals(defaultName, name))\r\n-            _xmlnamespace = name;\r\n-    }\r\n-    \r\n-    public String getXmlnamespace() {\r\n-        return _xmlnamespace;\r\n-    }\r\n-    \r\n-    public void setXmltype(int type) {\r\n-        _xmltype = type;\r\n-    }\r\n-    \r\n-    public int getXmltype() {\r\n-        return _xmltype;\r\n-    }\r\n-    \r\n-    public boolean isXmlRootElement() {\r\n-        return false;\r\n-    }\r\n-    \r\n-    public boolean isXmlElement() {\r\n-        return _xmltype == ELEMENT;\r\n-    }\r\n-    \r\n-    public boolean isXmlAttribute() {\r\n-        return _xmltype == ATTRIBUTE;\r\n-    }\r\n-    \r\n-    public XMLMapping getFieldMapping(String name) {\r\n-        return null;\r\n-    }\r\n-}\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.meta;\n+\n+import org.apache.commons.lang.StringUtils;\n+\n+/**\n+ * Contains metadata about an xml element or attribute\n+ *\n+ * @author Catalina Wei\n+ * @since 1.0.0\n+ */\n+public class XMLMetaData implements XMLMapping {\n+\n+    private String _name;\n+    private String _xmlname = null;\n+    private String _xmlnamespace = null;\n+    private Class _decType = Object.class;\n+    private int _decCode = JavaTypes.OBJECT;\n+    private Class _type = Object.class;\n+    private int _code = JavaTypes.OBJECT;\n+    private int _xmltype;    \n+\n+    public XMLMetaData() {        \n+    }\n+    \n+    public Class getType() {\n+        return (_type == null) ? _decType : _type;\n+    }\n+\n+    public void setType(Class type) {\n+        _type = type;\n+        if (type != null)\n+            setTypeCode(JavaTypes.getTypeCode(type));\n+    }\n+\n+    public int getTypeCode() {\n+        return (_type == null) ? _decCode : _code;\n+    }\n+\n+    // set JavaTypes code\n+    public void setTypeCode(int code) {\n+        _code = code;\n+    }\n+    \n+    public void setName(String name) {\n+        _name = name;\n+    }\n+    \n+    public String getName() {\n+        return _name;\n+    }\n+    \n+    public void setXmlname(String name) {\n+        _xmlname = name;\n+    }\n+    \n+    public String getXmlname() {\n+        return _xmlname;\n+    }\n+    \n+    public void setXmlnamespace(String name) {\n+        // avoid JAXB XML bind default name\n+        if (!StringUtils.equals(defaultName, name))\n+            _xmlnamespace = name;\n+    }\n+    \n+    public String getXmlnamespace() {\n+        return _xmlnamespace;\n+    }\n+    \n+    public void setXmltype(int type) {\n+        _xmltype = type;\n+    }\n+    \n+    public int getXmltype() {\n+        return _xmltype;\n+    }\n+    \n+    public boolean isXmlRootElement() {\n+        return false;\n+    }\n+    \n+    public boolean isXmlElement() {\n+        return _xmltype == ELEMENT;\n+    }\n+    \n+    public boolean isXmlAttribute() {\n+        return _xmltype == ATTRIBUTE;\n+    }\n+    \n+    public XMLMapping getFieldMapping(String name) {\n+        return null;\n+    }\n+}"},{"sha":"e3f4e0e73fbe9812b2976e2ce8814fc9b79b00cf","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/entities/Customer.java","status":"modified","additions":131,"deletions":131,"changes":262,"blob_url":"https://github.com/apache/openjpa/blob/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/entities/Customer.java","raw_url":"https://github.com/apache/openjpa/raw/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/entities/Customer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/entities/Customer.java?ref=a5ed9f701dcb37ffd020e5333bcd0c28b26d650d","patch":"@@ -1,131 +1,131 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one\r\n- * or more contributor license agreements.  See the NOTICE file\r\n- * distributed with this work for additional information\r\n- * regarding copyright ownership.  The ASF licenses this file\r\n- * to you under the Apache License, Version 2.0 (the\r\n- * \"License\"); you may not use this file except in compliance\r\n- * with the License.  You may obtain a copy of the License at\r\n- *\r\n- * http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing,\r\n- * software distributed under the License is distributed on an\r\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- * KIND, either express or implied.  See the License for the\r\n- * specific language governing permissions and limitations\r\n- * under the License.    \r\n- */\r\n-package org.apache.openjpa.persistence.xmlmapping.entities;\r\n-\r\n-import javax.persistence.*;\r\n-import java.util.Collection;\r\n-import java.util.ArrayList;\r\n-\r\n-@Entity\r\n-@Table(name=\"TCUSTOMER\")\r\n-public class Customer {\r\n-\t\r\n-\t@Embeddable\r\n-\tpublic static class CustomerKey {\r\n-\t\tpublic String countryCode;\r\n-\t\tpublic int id;\r\n-\t\t\r\n-\t\tpublic CustomerKey(){}\r\n-\t\t\r\n-\t\tpublic  CustomerKey(String cc, int id){\r\n-\t\t\tcountryCode=cc;\r\n-\t\t\tthis.id=id;\r\n-\t\t}\r\n-\t\t\r\n-\t\tpublic String toString() {\r\n-\t\t\treturn countryCode+\"/\"+id;\r\n-\t\t}\r\n-\t\t@Override\r\n-\t\tpublic boolean equals(Object obj){\r\n-\t\t\tif (obj == this)\r\n-                return true;\r\n-\t\t\tif (! (obj instanceof CustomerKey))\r\n-                return false;\r\n-\t\t\tCustomerKey key = (CustomerKey)obj;\r\n-\t\t\tif (key.countryCode.equals(this.countryCode)\r\n-                && key.id==this.id)\r\n-                return true;\r\n-\t\t\treturn false;\r\n-\t\t}\r\n-\t\t\r\n-\t\t@Override\r\n-\t\tpublic int hashCode() {\r\n-\t\t\treturn this.countryCode.hashCode()\r\n-\t\t\t\t^ this.id;\r\n-\t\t}\r\n-\t}\r\n-\t\r\n-\tpublic enum CreditRating { POOR, GOOD, EXCELLENT };\r\n-\r\n-\t@EmbeddedId\r\n-\tCustomerKey cid;\r\n-\t@Column(length=30)\r\n-\tString name;\r\n-\t@Enumerated\r\n-\tCreditRating creditRating;\r\n-\t@Embedded\r\n-\tEAddress address;\r\n-\t@Version\r\n-\tlong version;\r\n-\t\r\n-\t@OneToMany(fetch=FetchType.LAZY, mappedBy=\"customer\")\r\n-\tprivate Collection<Order> orders = new ArrayList<Order>();\r\n-\t\t\r\n-\tpublic Customer() {   \r\n-    }\r\n-\t\r\n-\tpublic Customer(CustomerKey cid, String name, CreditRating rating) {\r\n-\t\tthis.cid=cid;\r\n-\t\tthis.name=name;\r\n-\t\tthis.creditRating=rating;\r\n-\t}\t\r\n-\r\n-\tpublic String getName() {\r\n-\t\treturn name;\r\n-\t}\r\n-\r\n-    public void setName(String name) {\r\n-\t\tthis.name = name;\r\n-\t}\r\n-\r\n-    public CreditRating getRating() {\r\n-\t\treturn creditRating;\r\n-\t}\r\n-\r\n-    public void setRating(CreditRating rating) {\r\n-\t\tthis.creditRating = rating;\r\n-\t}\r\n-\r\n-\tpublic Collection<Order> getOrders() {\r\n-\t\treturn orders;\r\n-\t}\r\n-\tpublic void setOrders(Collection<Order> orders) {\r\n-\t\tthis.orders = orders;\r\n-\t}\r\n-\t\r\n-\tpublic String toString() {\r\n-\t\treturn \"Customer:\" + cid + \" name:\" + name; \r\n-\t}\r\n-\r\n-\tpublic CustomerKey getCid() {\r\n-\t\treturn cid;\r\n-\t}\r\n-\r\n-\tpublic void setCid(CustomerKey cid) {\r\n-\t\tthis.cid = cid;\r\n-\t}\r\n-\r\n-\tpublic EAddress getAddress() {\r\n-\t\treturn address;\r\n-\t}\r\n-\r\n-\tpublic void setAddress(EAddress address) {\r\n-\t\tthis.address = address;\r\n-\t}\r\n-}\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.xmlmapping.entities;\n+\n+import javax.persistence.*;\n+import java.util.Collection;\n+import java.util.ArrayList;\n+\n+@Entity\n+@Table(name=\"TCUSTOMER\")\n+public class Customer {\n+\t\n+\t@Embeddable\n+\tpublic static class CustomerKey {\n+\t\tpublic String countryCode;\n+\t\tpublic int id;\n+\t\t\n+\t\tpublic CustomerKey(){}\n+\t\t\n+\t\tpublic  CustomerKey(String cc, int id){\n+\t\t\tcountryCode=cc;\n+\t\t\tthis.id=id;\n+\t\t}\n+\t\t\n+\t\tpublic String toString() {\n+\t\t\treturn countryCode+\"/\"+id;\n+\t\t}\n+\t\t@Override\n+\t\tpublic boolean equals(Object obj){\n+\t\t\tif (obj == this)\n+                return true;\n+\t\t\tif (! (obj instanceof CustomerKey))\n+                return false;\n+\t\t\tCustomerKey key = (CustomerKey)obj;\n+\t\t\tif (key.countryCode.equals(this.countryCode)\n+                && key.id==this.id)\n+                return true;\n+\t\t\treturn false;\n+\t\t}\n+\t\t\n+\t\t@Override\n+\t\tpublic int hashCode() {\n+\t\t\treturn this.countryCode.hashCode()\n+\t\t\t\t^ this.id;\n+\t\t}\n+\t}\n+\t\n+\tpublic enum CreditRating { POOR, GOOD, EXCELLENT };\n+\n+\t@EmbeddedId\n+\tCustomerKey cid;\n+\t@Column(length=30)\n+\tString name;\n+\t@Enumerated\n+\tCreditRating creditRating;\n+\t@Embedded\n+\tEAddress address;\n+\t@Version\n+\tlong version;\n+\t\n+\t@OneToMany(fetch=FetchType.LAZY, mappedBy=\"customer\")\n+\tprivate Collection<Order> orders = new ArrayList<Order>();\n+\t\t\n+\tpublic Customer() {   \n+    }\n+\t\n+\tpublic Customer(CustomerKey cid, String name, CreditRating rating) {\n+\t\tthis.cid=cid;\n+\t\tthis.name=name;\n+\t\tthis.creditRating=rating;\n+\t}\t\n+\n+\tpublic String getName() {\n+\t\treturn name;\n+\t}\n+\n+    public void setName(String name) {\n+\t\tthis.name = name;\n+\t}\n+\n+    public CreditRating getRating() {\n+\t\treturn creditRating;\n+\t}\n+\n+    public void setRating(CreditRating rating) {\n+\t\tthis.creditRating = rating;\n+\t}\n+\n+\tpublic Collection<Order> getOrders() {\n+\t\treturn orders;\n+\t}\n+\tpublic void setOrders(Collection<Order> orders) {\n+\t\tthis.orders = orders;\n+\t}\n+\t\n+\tpublic String toString() {\n+\t\treturn \"Customer:\" + cid + \" name:\" + name; \n+\t}\n+\n+\tpublic CustomerKey getCid() {\n+\t\treturn cid;\n+\t}\n+\n+\tpublic void setCid(CustomerKey cid) {\n+\t\tthis.cid = cid;\n+\t}\n+\n+\tpublic EAddress getAddress() {\n+\t\treturn address;\n+\t}\n+\n+\tpublic void setAddress(EAddress address) {\n+\t\tthis.address = address;\n+\t}\n+}"},{"sha":"23878beb0714d6486ab276548ad2ad9f184d5572","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/entities/EAddress.java","status":"modified","additions":75,"deletions":75,"changes":150,"blob_url":"https://github.com/apache/openjpa/blob/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/entities/EAddress.java","raw_url":"https://github.com/apache/openjpa/raw/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/entities/EAddress.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/entities/EAddress.java?ref=a5ed9f701dcb37ffd020e5333bcd0c28b26d650d","patch":"@@ -1,75 +1,75 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one\r\n- * or more contributor license agreements.  See the NOTICE file\r\n- * distributed with this work for additional information\r\n- * regarding copyright ownership.  The ASF licenses this file\r\n- * to you under the Apache License, Version 2.0 (the\r\n- * \"License\"); you may not use this file except in compliance\r\n- * with the License.  You may obtain a copy of the License at\r\n- *\r\n- * http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing,\r\n- * software distributed under the License is distributed on an\r\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- * KIND, either express or implied.  See the License for the\r\n- * specific language governing permissions and limitations\r\n- * under the License.    \r\n- */\r\n-package org.apache.openjpa.persistence.xmlmapping.entities;\r\n-import javax.persistence.*;\r\n-\r\n-/* \r\n- * example of an JPA embeddable class.\r\n- * This class is used in Customer Entity.\r\n- */\r\n-\r\n-@Embeddable\r\n-public class EAddress {\r\n-\t@Column(columnDefinition=\"varchar(30)\")\r\n-\tString street;\r\n-\t@Column(columnDefinition=\"varchar(20)\")\r\n-\tString city;\r\n-\t@Column(columnDefinition=\"char(2)\")\r\n-\tString state;\r\n-\t@Column(columnDefinition=\"char(9)\")\r\n-\tString zip;\r\n-\t\r\n-\tpublic EAddress() {}\r\n-\t\r\n-\tpublic EAddress(String street, String city, String state, String zip){\r\n-\t\tthis.street = street;\r\n-\t\tthis.city = city;\r\n-\t\tthis.state = state;\r\n-\t\tthis.zip = zip;\r\n-\t}\r\n-\tpublic String getCity() {\r\n-\t\treturn city;\r\n-\t}\r\n-\tpublic void setCity(String city) {\r\n-\t\tthis.city = city;\r\n-\t}\r\n-\tpublic String getState() {\r\n-\t\treturn state;\r\n-\t}\r\n-\tpublic void setState(String state) {\r\n-\t\tthis.state = state;\r\n-\t}\r\n-\tpublic String getStreet() {\r\n-\t\treturn street;\r\n-\t}\r\n-\tpublic void setStreet(String street) {\r\n-\t\tthis.street = street;\r\n-\t}\r\n-\tpublic String getZip() {\r\n-\t\treturn zip;\r\n-\t}\r\n-\tpublic void setZip(String zip) {\r\n-\t\tthis.zip = zip;\r\n-\t}\r\n-\t\r\n-\tpublic void modifyCity(String value){\r\n-\t\tcity=value;\r\n-\t}\r\n-\r\n-}\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.xmlmapping.entities;\n+import javax.persistence.*;\n+\n+/* \n+ * example of an JPA embeddable class.\n+ * This class is used in Customer Entity.\n+ */\n+\n+@Embeddable\n+public class EAddress {\n+\t@Column(columnDefinition=\"varchar(30)\")\n+\tString street;\n+\t@Column(columnDefinition=\"varchar(20)\")\n+\tString city;\n+\t@Column(columnDefinition=\"char(2)\")\n+\tString state;\n+\t@Column(columnDefinition=\"char(9)\")\n+\tString zip;\n+\t\n+\tpublic EAddress() {}\n+\t\n+\tpublic EAddress(String street, String city, String state, String zip){\n+\t\tthis.street = street;\n+\t\tthis.city = city;\n+\t\tthis.state = state;\n+\t\tthis.zip = zip;\n+\t}\n+\tpublic String getCity() {\n+\t\treturn city;\n+\t}\n+\tpublic void setCity(String city) {\n+\t\tthis.city = city;\n+\t}\n+\tpublic String getState() {\n+\t\treturn state;\n+\t}\n+\tpublic void setState(String state) {\n+\t\tthis.state = state;\n+\t}\n+\tpublic String getStreet() {\n+\t\treturn street;\n+\t}\n+\tpublic void setStreet(String street) {\n+\t\tthis.street = street;\n+\t}\n+\tpublic String getZip() {\n+\t\treturn zip;\n+\t}\n+\tpublic void setZip(String zip) {\n+\t\tthis.zip = zip;\n+\t}\n+\t\n+\tpublic void modifyCity(String value){\n+\t\tcity=value;\n+\t}\n+\n+}"},{"sha":"f4c64063042b7b391d9dd91fcba4b154323f5bc7","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/entities/Order.java","status":"modified","additions":98,"deletions":98,"changes":196,"blob_url":"https://github.com/apache/openjpa/blob/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/entities/Order.java","raw_url":"https://github.com/apache/openjpa/raw/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/entities/Order.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/entities/Order.java?ref=a5ed9f701dcb37ffd020e5333bcd0c28b26d650d","patch":"@@ -1,98 +1,98 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one\r\n- * or more contributor license agreements.  See the NOTICE file\r\n- * distributed with this work for additional information\r\n- * regarding copyright ownership.  The ASF licenses this file\r\n- * to you under the Apache License, Version 2.0 (the\r\n- * \"License\"); you may not use this file except in compliance\r\n- * with the License.  You may obtain a copy of the License at\r\n- *\r\n- * http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing,\r\n- * software distributed under the License is distributed on an\r\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- * KIND, either express or implied.  See the License for the\r\n- * specific language governing permissions and limitations\r\n- * under the License.    \r\n- */\r\n-package org.apache.openjpa.persistence.xmlmapping.entities;\r\n-\r\n-import org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.Address;\r\n-\r\n-import javax.persistence.*;\r\n-\r\n-import org.apache.openjpa.persistence.Persistent;\r\n-import org.apache.openjpa.persistence.jdbc.Strategy;\r\n-\r\n-@Entity\r\n-@Table(name=\"TORDER\")\r\n-public class Order {\r\n-    @Id \r\n-    int oid;\r\n-\r\n-    double amount;\r\n-    boolean delivered;\r\n-\r\n-    @ManyToOne(fetch=FetchType.LAZY)\r\n-    Customer customer;\r\n-\r\n-    @Persistent\r\n-    @Strategy(\"org.apache.openjpa.jdbc.meta.strats.XMLValueHandler\")\r\n-    Address shipAddress;\r\n-\r\n-    @Version\r\n-    long version;\r\n-\r\n-    public Order(){}\r\n-\r\n-    public Order(int id,  double amt, boolean delivered, Customer c) {\r\n-        oid = id;\r\n-        amount = amt;\r\n-        this.delivered = delivered;\r\n-        customer = c;\r\n-        if (c != null)\r\n-            c.getOrders().add(this);\r\n-    }\r\n-\r\n-    public double getAmount() {\r\n-        return amount;\r\n-    }\r\n-\r\n-    public void setAmount(double amount) {\r\n-        this.amount = amount;\r\n-    }\r\n-\r\n-    public Customer getCustomer() {\r\n-        return customer;\r\n-    }\r\n-\r\n-    public void setCustomer(Customer customer) {\r\n-        this.customer = customer;\r\n-    }\r\n-\r\n-    public boolean isDelivered() {\r\n-        return delivered;\r\n-    }\r\n-\r\n-    public void setDelivered(boolean delivered) {\r\n-        this.delivered = delivered;\r\n-    }\r\n-\r\n-    public int getOid() {\r\n-        return oid;\r\n-    }\r\n-\r\n-    public String toString(){\r\n-        return \"Order:\" + oid + \" amount:\" + amount + \" delivered:\" + delivered\r\n-        + \" customer:\" + ((customer != null) ? customer.getCid() : -1);\r\n-    }\r\n-\r\n-    public Address getShipAddress() {\r\n-        return shipAddress;\r\n-    }\r\n-\r\n-    public void setShipAddress(Address shipAddress) {\r\n-        this.shipAddress = shipAddress;\r\n-    }\r\n-}\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.xmlmapping.entities;\n+\n+import org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.Address;\n+\n+import javax.persistence.*;\n+\n+import org.apache.openjpa.persistence.Persistent;\n+import org.apache.openjpa.persistence.jdbc.Strategy;\n+\n+@Entity\n+@Table(name=\"TORDER\")\n+public class Order {\n+    @Id \n+    int oid;\n+\n+    double amount;\n+    boolean delivered;\n+\n+    @ManyToOne(fetch=FetchType.LAZY)\n+    Customer customer;\n+\n+    @Persistent\n+    @Strategy(\"org.apache.openjpa.jdbc.meta.strats.XMLValueHandler\")\n+    Address shipAddress;\n+\n+    @Version\n+    long version;\n+\n+    public Order(){}\n+\n+    public Order(int id,  double amt, boolean delivered, Customer c) {\n+        oid = id;\n+        amount = amt;\n+        this.delivered = delivered;\n+        customer = c;\n+        if (c != null)\n+            c.getOrders().add(this);\n+    }\n+\n+    public double getAmount() {\n+        return amount;\n+    }\n+\n+    public void setAmount(double amount) {\n+        this.amount = amount;\n+    }\n+\n+    public Customer getCustomer() {\n+        return customer;\n+    }\n+\n+    public void setCustomer(Customer customer) {\n+        this.customer = customer;\n+    }\n+\n+    public boolean isDelivered() {\n+        return delivered;\n+    }\n+\n+    public void setDelivered(boolean delivered) {\n+        this.delivered = delivered;\n+    }\n+\n+    public int getOid() {\n+        return oid;\n+    }\n+\n+    public String toString(){\n+        return \"Order:\" + oid + \" amount:\" + amount + \" delivered:\" + delivered\n+        + \" customer:\" + ((customer != null) ? customer.getCid() : -1);\n+    }\n+\n+    public Address getShipAddress() {\n+        return shipAddress;\n+    }\n+\n+    public void setShipAddress(Address shipAddress) {\n+        this.shipAddress = shipAddress;\n+    }\n+}"},{"sha":"7df58d4efe1a456232988c821124a5b39d73c50f","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/query/TestXMLCustomerOrder.java","status":"modified","additions":293,"deletions":293,"changes":586,"blob_url":"https://github.com/apache/openjpa/blob/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/query/TestXMLCustomerOrder.java","raw_url":"https://github.com/apache/openjpa/raw/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/query/TestXMLCustomerOrder.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/query/TestXMLCustomerOrder.java?ref=a5ed9f701dcb37ffd020e5333bcd0c28b26d650d","patch":"@@ -1,293 +1,293 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one\r\n- * or more contributor license agreements.  See the NOTICE file\r\n- * distributed with this work for additional information\r\n- * regarding copyright ownership.  The ASF licenses this file\r\n- * to you under the Apache License, Version 2.0 (the\r\n- * \"License\"); you may not use this file except in compliance\r\n- * with the License.  You may obtain a copy of the License at\r\n- *\r\n- * http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing,\r\n- * software distributed under the License is distributed on an\r\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- * KIND, either express or implied.  See the License for the\r\n- * specific language governing permissions and limitations\r\n- * under the License.    \r\n- */\r\n-package org.apache.openjpa.persistence.xmlmapping.query;\r\n-\r\n-import java.io.FileWriter;\r\n-import java.util.List;\r\n-\r\n-import javax.persistence.EntityManager;\r\n-import javax.persistence.EntityTransaction;\r\n-import javax.persistence.Query;\r\n-\r\n-import junit.textui.TestRunner;\r\n-\r\n-import org.apache.openjpa.jdbc.conf.JDBCConfiguration;\r\n-import org.apache.openjpa.jdbc.sql.DB2Dictionary;\r\n-import org.apache.openjpa.jdbc.sql.DBDictionary;\r\n-import org.apache.openjpa.jdbc.sql.OracleDictionary;\r\n-import org.apache.openjpa.jdbc.sql.SQLServerDictionary;\r\n-import org.apache.openjpa.persistence.OpenJPAEntityManager;\r\n-import org.apache.openjpa.persistence.OpenJPAPersistence;\r\n-import org.apache.openjpa.persistence.test.SQLListenerTestCase;\r\n-import org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.*;\r\n-import org.apache.openjpa.persistence.xmlmapping.entities.*;\r\n-import org.apache.openjpa.persistence.xmlmapping.entities.Customer.CreditRating;\r\n-\r\n-/**\r\n- * Test query with predicates on persistent field mapped to XML column.\r\n- * \r\n- * @author Catalina Wei\r\n- * @since 1.0.0\r\n- */\r\n-public class TestXMLCustomerOrder\r\n-    extends SQLListenerTestCase {\r\n-\r\n-    public void setUp() {\r\n-        setUp(org.apache.openjpa.persistence.xmlmapping.entities.Customer.class\r\n-            , org.apache.openjpa.persistence.xmlmapping.entities.Customer\r\n-                .CustomerKey.class\r\n-            , org.apache.openjpa.persistence.xmlmapping.entities.Order.class\r\n-            , org.apache.openjpa.persistence.xmlmapping.entities.EAddress.class\r\n-            ,  \"openjpa.MetaDataRepository\"\r\n-            ,  \"org.apache.openjpa.jdbc.meta.XMLMappingRepository\"\r\n-//            ,  \"openjpa.ConnectionDriverName\"\r\n-//            ,  \"org.apache.commons.dbcp.BasicDataSource\"\r\n-//            ,  \"openjpa.ConnectionProperties\"\r\n-//            ,  \"DriverClassName=com.ibm.db2.jcc.DB2Driver,Url=jdbc:db2:testdb\"\r\n-            );\r\n-    }\r\n-\r\n-    public static void main(String[] args) {\r\n-        TestRunner.run(TestXMLCustomerOrder.class);\r\n-    }\r\n-\r\n-    public void testXMLCustomerOrder() {\t\r\n-        OpenJPAEntityManager em =\r\n-            OpenJPAPersistence.cast(emf.createEntityManager());\r\n-        DBDictionary dict = ((JDBCConfiguration) em.getConfiguration())\r\n-            .getDBDictionaryInstance();\r\n-\r\n-        // skip if dictionary has no support for XML column type \r\n-        if (!dict.supportsXMLColumn)\r\n-            return;\r\n-\r\n-        String sqllog = TestXMLCustomerOrder.class.getName();\r\n-        sqllog = sqllog.replace('.', '/');\r\n-        sqllog = \"./\" + sqllog;\r\n-        if (dict instanceof DB2Dictionary)\r\n-            sqllog += \".db2\";\r\n-        else if (dict instanceof OracleDictionary)\r\n-            sqllog += \".oracle\";\r\n-        else if (dict instanceof SQLServerDictionary)\r\n-            sqllog += \".sqlserver\";\r\n-\r\n-        // For platform specific expected sqls are under resources.\r\n-        // The generated sql of the test is captured and written to file:\r\n-        //     ./TestXMLCustomerOrder.log\r\n-        // This output file contents should match with the platform specfic \r\n-        // sqls.        \r\n-        System.out.println(\"Expected pushdown SQL log file is in: \" + sqllog);\r\n-        \r\n-        sql.clear();\r\n-\r\n-        try {\r\n-            em.getTransaction().begin();\r\n-            deleteAllData(em );\r\n-            em.getTransaction().commit();\r\n-\r\n-            em.getTransaction().begin();\r\n-            loadData(em);\r\n-            em.getTransaction().commit();\r\n-\r\n-            em.close();\r\n-\r\n-            // By closing and recreating the EntityManager, \r\n-            // this guarantees that data will be retrieved from \r\n-            // the database rather than just reused from the \r\n-            // persistence context created by the load methods above.\r\n-\r\n-            em = emf.createEntityManager();\r\n-\r\n-            System.err.println(\"Main started.\");\r\n-            int test=1;\r\n-            List<Address> addrs = em.createQuery(\r\n-                \"select o.shipAddress from Order o\")\r\n-                .getResultList();\r\n-            for (Address addr : addrs) {\r\n-                System.out.println(\"addr= \" + addr.toString());\r\n-            }\r\n-            String qstrings[] = {\r\n-                \"select o from Order o\",\r\n-                \"select o from Order o, Order o2 where o.shipAddress.city \" +\r\n-                    \"= o2.shipAddress.city\",\r\n-                \"select o from Order o, Customer c where o.shipAddress.city \" +\r\n-                    \"= c.address.city\",\r\n-                \"select o from Order o where o.shipAddress.city = 'San Jose'\"\r\n-            };\r\n-            String qstring = null;\r\n-            for (int i = 0;i < qstrings.length; i++) {\r\n-                qstring = qstrings[i];\r\n-                List orders = em.createQuery(qstring).getResultList();\r\n-                printOrders(orders, test++);\r\n-            }\r\n-\r\n-            // query passing parameters\r\n-            qstring = \"select o from Order o where o.shipAddress.city = ?1\";\r\n-            Query q5 = em.createQuery(qstring);\r\n-            q5.setParameter(1, \"San Jose\");\r\n-            List orders =q5.getResultList();\r\n-            printOrders(orders, test++);\r\n-\r\n-            qstring = \"select o from Order o where ?1 = o.shipAddress.city\";\r\n-            Query q6 = em.createQuery(qstring);\r\n-            q6.setParameter(1, \"San Jose\");\r\n-            orders = q6.getResultList();\r\n-            printOrders(orders, test++);\r\n-\r\n-            em.close();\r\n-\r\n-            // test updates\r\n-            em = emf.createEntityManager();\r\n-            testUpdateShipaddress(em, test++);\r\n-\r\n-            em.close();\r\n-            em = emf.createEntityManager();\r\n-\r\n-            // query after updates \r\n-            orders = em.createQuery(\"select o from Order o\").getResultList();\r\n-            System.out.println(\"After Update:\");\r\n-            printOrders(orders, test++);\r\n-\r\n-            // queries expecting exceptions\r\n-            String[] badqstrings = {\r\n-                \"select o from Order o where o.shipAddress.city = 95141\",\r\n-                \"select o from Order o where o.shipAddress.street \" +\r\n-                    \"= '555 Bailey'\",\r\n-                \"select o from Order o where o.shipAddress.zip = 95141\"\r\n-            };\r\n-            for (int i = 0; i < badqstrings.length; i++) {\r\n-                qstring = badqstrings[i];\r\n-                try {\r\n-                    System.out.println(\"\\n>> Query \"+test+\": \"+qstring);\r\n-                    test++;\r\n-                    orders = em.createQuery(qstring).getResultList();\r\n-                }\r\n-                catch (Exception e){\r\n-                    System.out.println(\"Exception: \"+e);\r\n-                }  \r\n-            }\r\n-\r\n-            dumpSql();\r\n-            em.close();\r\n-            emf.close();\r\n-            System.out.println(\"Main ended normally.\");\r\n-        } catch (Exception e){\r\n-            System.out.println(\"Exception: \"+e);\r\n-            e.printStackTrace();\r\n-        }       \r\n-    }\r\n-\r\n-    private void dumpSql() {\r\n-        String out = \"./TestXMLCustomerOrder.log\";\r\n-        try {\r\n-            FileWriter fw = new FileWriter(out);\r\n-            for (int i = 0; i < sql.size(); i++) {\r\n-                System.out.println(sql.get(i));\r\n-                fw.write(sql.get(i)+\"\\n\");\r\n-            }\r\n-            fw.close();\r\n-        } catch (Exception e) {            \r\n-        }\r\n-    }\r\n-\r\n-    private void printOrders(List orders, int test) {\r\n-        System.out.println(\"\\n>> Query \"+test);\r\n-        System.out.println(\"result size = \"+orders.size());\r\n-        for (int i = 0; i < orders.size(); i++) {\r\n-            printOrder((Order) orders.get(i));\r\n-        }\r\n-    }\r\n-\r\n-    private void loadData(EntityManager em) {\r\n-\r\n-        ObjectFactory addressFactory = new ObjectFactory();\r\n-\r\n-        Customer c2 = new Customer();\r\n-        c2.setCid( new Customer.CustomerKey(\"USA\", 2) );\r\n-        c2.setName(\"A&J Auto\");\r\n-        c2.setRating( CreditRating.GOOD );\r\n-        c2.setAddress(new EAddress(\"2480 Campbell Ave\", \"Campbell\", \"CA\"\r\n-                , \"95123\"));\r\n-        em.persist(c2);\r\n-\r\n-        Customer c1 = new Customer();\r\n-        c1.setCid( new Customer.CustomerKey(\"USA\", 1) );\r\n-        c1.setName(\"Harry's Auto\");\r\n-        c1.setRating( CreditRating.GOOD );\r\n-        c1.setAddress( new EAddress(\"12500 Monterey\", \"San Jose\", \"CA\"\r\n-                , \"95141\"));\r\n-        em.persist(c1);\r\n-\r\n-        Order o1 = new Order(10, 850, false, c1);\r\n-        USAAddress addr1 = addressFactory.createUSAAddress();\r\n-        addr1.setCity(\"San Jose\");\r\n-        addr1.setState(\"CA\");\r\n-        addr1.setZIP(new Integer(\"95141\"));\r\n-        addr1.getStreet().add(\"12500 Monterey\");\r\n-        addr1.setName( c1.getName());\r\n-        o1.setShipAddress(addr1);\r\n-        em.persist(o1);\r\n-\r\n-        Order o2 = new Order(20, 1000, false, c1);\r\n-        CANAddress addr2 = addressFactory.createCANAddress();\r\n-        addr2.setName(c2.getName());\r\n-        addr2.getStreet().add(\"123 Warden Road\");\r\n-        addr2.setCity(\"Markham\");\r\n-        addr2.setPostalCode(\"L6G 1C7\");\r\n-        addr2.setProvince(\"ON\");\r\n-        o2.setShipAddress(addr2);\r\n-        em.persist(o2);\r\n-    }\r\n-\r\n-    private void testUpdateShipaddress(EntityManager em, int test)\r\n-        throws Exception {\r\n-        em.getTransaction().begin();\r\n-        String query = \"select o from Order o where o.shipAddress.city \" +\r\n-        \"= 'San Jose'\";\r\n-        List orders = em.createQuery(query).getResultList(); \r\n-        System.out.println(\"Before Update: \");\r\n-        printOrders(orders, test);\r\n-        em.getTransaction().commit();\r\n-\r\n-        // update in separate transaction                    \r\n-        Order o = (Order) orders.get(0);\r\n-        EntityTransaction et = em.getTransaction();\r\n-        et.begin();\r\n-        Address addr = o.getShipAddress();\r\n-        addr.setCity(\"Cupertino\");\r\n-        if (addr instanceof USAAddress)\r\n-            ((USAAddress) addr).setZIP(95014);\r\n-\r\n-        // update shipAddress\r\n-        o.setShipAddress(addr);\r\n-        et.commit();\r\n-    }\r\n-\r\n-    private void deleteAllData(EntityManager em) {\r\n-        em.createQuery(\"delete from Order o\").executeUpdate();\r\n-        em.createQuery(\"delete from Customer c\").executeUpdate();\r\n-    }\r\n-\r\n-    private void printOrder(Order o){\r\n-        System.out.println(\" Customer ID:\"+o.getCustomer().getCid());\r\n-        System.out.println(\" Order Number:\"+o.getOid());\r\n-        System.out.println(\"Ship to: \"+o.getShipAddress().toString());\r\n-        System.out.println();\t\t\r\n-    }\r\n-}\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.xmlmapping.query;\n+\n+import java.io.FileWriter;\n+import java.util.List;\n+\n+import javax.persistence.EntityManager;\n+import javax.persistence.EntityTransaction;\n+import javax.persistence.Query;\n+\n+import junit.textui.TestRunner;\n+\n+import org.apache.openjpa.jdbc.conf.JDBCConfiguration;\n+import org.apache.openjpa.jdbc.sql.DB2Dictionary;\n+import org.apache.openjpa.jdbc.sql.DBDictionary;\n+import org.apache.openjpa.jdbc.sql.OracleDictionary;\n+import org.apache.openjpa.jdbc.sql.SQLServerDictionary;\n+import org.apache.openjpa.persistence.OpenJPAEntityManager;\n+import org.apache.openjpa.persistence.OpenJPAPersistence;\n+import org.apache.openjpa.persistence.test.SQLListenerTestCase;\n+import org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress.*;\n+import org.apache.openjpa.persistence.xmlmapping.entities.*;\n+import org.apache.openjpa.persistence.xmlmapping.entities.Customer.CreditRating;\n+\n+/**\n+ * Test query with predicates on persistent field mapped to XML column.\n+ * \n+ * @author Catalina Wei\n+ * @since 1.0.0\n+ */\n+public class TestXMLCustomerOrder\n+    extends SQLListenerTestCase {\n+\n+    public void setUp() {\n+        setUp(org.apache.openjpa.persistence.xmlmapping.entities.Customer.class\n+            , org.apache.openjpa.persistence.xmlmapping.entities.Customer\n+                .CustomerKey.class\n+            , org.apache.openjpa.persistence.xmlmapping.entities.Order.class\n+            , org.apache.openjpa.persistence.xmlmapping.entities.EAddress.class\n+            ,  \"openjpa.MetaDataRepository\"\n+            ,  \"org.apache.openjpa.jdbc.meta.XMLMappingRepository\"\n+//            ,  \"openjpa.ConnectionDriverName\"\n+//            ,  \"org.apache.commons.dbcp.BasicDataSource\"\n+//            ,  \"openjpa.ConnectionProperties\"\n+//            ,  \"DriverClassName=com.ibm.db2.jcc.DB2Driver,Url=jdbc:db2:testdb\"\n+            );\n+    }\n+\n+    public static void main(String[] args) {\n+        TestRunner.run(TestXMLCustomerOrder.class);\n+    }\n+\n+    public void testXMLCustomerOrder() {\t\n+        OpenJPAEntityManager em =\n+            OpenJPAPersistence.cast(emf.createEntityManager());\n+        DBDictionary dict = ((JDBCConfiguration) em.getConfiguration())\n+            .getDBDictionaryInstance();\n+\n+        // skip if dictionary has no support for XML column type \n+        if (!dict.supportsXMLColumn)\n+            return;\n+\n+        String sqllog = TestXMLCustomerOrder.class.getName();\n+        sqllog = sqllog.replace('.', '/');\n+        sqllog = \"./\" + sqllog;\n+        if (dict instanceof DB2Dictionary)\n+            sqllog += \".db2\";\n+        else if (dict instanceof OracleDictionary)\n+            sqllog += \".oracle\";\n+        else if (dict instanceof SQLServerDictionary)\n+            sqllog += \".sqlserver\";\n+\n+        // For platform specific expected sqls are under resources.\n+        // The generated sql of the test is captured and written to file:\n+        //     ./TestXMLCustomerOrder.log\n+        // This output file contents should match with the platform specfic \n+        // sqls.        \n+        System.out.println(\"Expected pushdown SQL log file is in: \" + sqllog);\n+        \n+        sql.clear();\n+\n+        try {\n+            em.getTransaction().begin();\n+            deleteAllData(em );\n+            em.getTransaction().commit();\n+\n+            em.getTransaction().begin();\n+            loadData(em);\n+            em.getTransaction().commit();\n+\n+            em.close();\n+\n+            // By closing and recreating the EntityManager, \n+            // this guarantees that data will be retrieved from \n+            // the database rather than just reused from the \n+            // persistence context created by the load methods above.\n+\n+            em = emf.createEntityManager();\n+\n+            System.err.println(\"Main started.\");\n+            int test=1;\n+            List<Address> addrs = em.createQuery(\n+                \"select o.shipAddress from Order o\")\n+                .getResultList();\n+            for (Address addr : addrs) {\n+                System.out.println(\"addr= \" + addr.toString());\n+            }\n+            String qstrings[] = {\n+                \"select o from Order o\",\n+                \"select o from Order o, Order o2 where o.shipAddress.city \" +\n+                    \"= o2.shipAddress.city\",\n+                \"select o from Order o, Customer c where o.shipAddress.city \" +\n+                    \"= c.address.city\",\n+                \"select o from Order o where o.shipAddress.city = 'San Jose'\"\n+            };\n+            String qstring = null;\n+            for (int i = 0;i < qstrings.length; i++) {\n+                qstring = qstrings[i];\n+                List orders = em.createQuery(qstring).getResultList();\n+                printOrders(orders, test++);\n+            }\n+\n+            // query passing parameters\n+            qstring = \"select o from Order o where o.shipAddress.city = ?1\";\n+            Query q5 = em.createQuery(qstring);\n+            q5.setParameter(1, \"San Jose\");\n+            List orders =q5.getResultList();\n+            printOrders(orders, test++);\n+\n+            qstring = \"select o from Order o where ?1 = o.shipAddress.city\";\n+            Query q6 = em.createQuery(qstring);\n+            q6.setParameter(1, \"San Jose\");\n+            orders = q6.getResultList();\n+            printOrders(orders, test++);\n+\n+            em.close();\n+\n+            // test updates\n+            em = emf.createEntityManager();\n+            testUpdateShipaddress(em, test++);\n+\n+            em.close();\n+            em = emf.createEntityManager();\n+\n+            // query after updates \n+            orders = em.createQuery(\"select o from Order o\").getResultList();\n+            System.out.println(\"After Update:\");\n+            printOrders(orders, test++);\n+\n+            // queries expecting exceptions\n+            String[] badqstrings = {\n+                \"select o from Order o where o.shipAddress.city = 95141\",\n+                \"select o from Order o where o.shipAddress.street \" +\n+                    \"= '555 Bailey'\",\n+                \"select o from Order o where o.shipAddress.zip = 95141\"\n+            };\n+            for (int i = 0; i < badqstrings.length; i++) {\n+                qstring = badqstrings[i];\n+                try {\n+                    System.out.println(\"\\n>> Query \"+test+\": \"+qstring);\n+                    test++;\n+                    orders = em.createQuery(qstring).getResultList();\n+                }\n+                catch (Exception e){\n+                    System.out.println(\"Exception: \"+e);\n+                }  \n+            }\n+\n+            dumpSql();\n+            em.close();\n+            emf.close();\n+            System.out.println(\"Main ended normally.\");\n+        } catch (Exception e){\n+            System.out.println(\"Exception: \"+e);\n+            e.printStackTrace();\n+        }       \n+    }\n+\n+    private void dumpSql() {\n+        String out = \"./TestXMLCustomerOrder.log\";\n+        try {\n+            FileWriter fw = new FileWriter(out);\n+            for (int i = 0; i < sql.size(); i++) {\n+                System.out.println(sql.get(i));\n+                fw.write(sql.get(i)+\"\\n\");\n+            }\n+            fw.close();\n+        } catch (Exception e) {            \n+        }\n+    }\n+\n+    private void printOrders(List orders, int test) {\n+        System.out.println(\"\\n>> Query \"+test);\n+        System.out.println(\"result size = \"+orders.size());\n+        for (int i = 0; i < orders.size(); i++) {\n+            printOrder((Order) orders.get(i));\n+        }\n+    }\n+\n+    private void loadData(EntityManager em) {\n+\n+        ObjectFactory addressFactory = new ObjectFactory();\n+\n+        Customer c2 = new Customer();\n+        c2.setCid( new Customer.CustomerKey(\"USA\", 2) );\n+        c2.setName(\"A&J Auto\");\n+        c2.setRating( CreditRating.GOOD );\n+        c2.setAddress(new EAddress(\"2480 Campbell Ave\", \"Campbell\", \"CA\"\n+                , \"95123\"));\n+        em.persist(c2);\n+\n+        Customer c1 = new Customer();\n+        c1.setCid( new Customer.CustomerKey(\"USA\", 1) );\n+        c1.setName(\"Harry's Auto\");\n+        c1.setRating( CreditRating.GOOD );\n+        c1.setAddress( new EAddress(\"12500 Monterey\", \"San Jose\", \"CA\"\n+                , \"95141\"));\n+        em.persist(c1);\n+\n+        Order o1 = new Order(10, 850, false, c1);\n+        USAAddress addr1 = addressFactory.createUSAAddress();\n+        addr1.setCity(\"San Jose\");\n+        addr1.setState(\"CA\");\n+        addr1.setZIP(new Integer(\"95141\"));\n+        addr1.getStreet().add(\"12500 Monterey\");\n+        addr1.setName( c1.getName());\n+        o1.setShipAddress(addr1);\n+        em.persist(o1);\n+\n+        Order o2 = new Order(20, 1000, false, c1);\n+        CANAddress addr2 = addressFactory.createCANAddress();\n+        addr2.setName(c2.getName());\n+        addr2.getStreet().add(\"123 Warden Road\");\n+        addr2.setCity(\"Markham\");\n+        addr2.setPostalCode(\"L6G 1C7\");\n+        addr2.setProvince(\"ON\");\n+        o2.setShipAddress(addr2);\n+        em.persist(o2);\n+    }\n+\n+    private void testUpdateShipaddress(EntityManager em, int test)\n+        throws Exception {\n+        em.getTransaction().begin();\n+        String query = \"select o from Order o where o.shipAddress.city \" +\n+        \"= 'San Jose'\";\n+        List orders = em.createQuery(query).getResultList(); \n+        System.out.println(\"Before Update: \");\n+        printOrders(orders, test);\n+        em.getTransaction().commit();\n+\n+        // update in separate transaction                    \n+        Order o = (Order) orders.get(0);\n+        EntityTransaction et = em.getTransaction();\n+        et.begin();\n+        Address addr = o.getShipAddress();\n+        addr.setCity(\"Cupertino\");\n+        if (addr instanceof USAAddress)\n+            ((USAAddress) addr).setZIP(95014);\n+\n+        // update shipAddress\n+        o.setShipAddress(addr);\n+        et.commit();\n+    }\n+\n+    private void deleteAllData(EntityManager em) {\n+        em.createQuery(\"delete from Order o\").executeUpdate();\n+        em.createQuery(\"delete from Customer c\").executeUpdate();\n+    }\n+\n+    private void printOrder(Order o){\n+        System.out.println(\" Customer ID:\"+o.getCustomer().getCid());\n+        System.out.println(\" Order Number:\"+o.getOid());\n+        System.out.println(\"Ship to: \"+o.getShipAddress().toString());\n+        System.out.println();\t\t\n+    }\n+}"},{"sha":"cfd53c7f910ef8e88c60730aaa4ddf7e530f3bb4","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/xmlbindings/myaddress/Address.java","status":"modified","additions":142,"deletions":142,"changes":284,"blob_url":"https://github.com/apache/openjpa/blob/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/xmlbindings/myaddress/Address.java","raw_url":"https://github.com/apache/openjpa/raw/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/xmlbindings/myaddress/Address.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/xmlbindings/myaddress/Address.java?ref=a5ed9f701dcb37ffd020e5333bcd0c28b26d650d","patch":"@@ -1,142 +1,142 @@\n-//\r\n-// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.2-b01-fcs \r\n-// See <a href=\"http://java.sun.com/xml/jaxb\">http://java.sun.com/xml/jaxb</a> \r\n-// Any modifications to this file will be lost upon recompilation of the source schema. \r\n-// Generated on: 2006.10.04 at 03:08:16 PM PDT \r\n-//\r\n-\r\n-\r\n-package org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress;\r\n-\r\n-import java.util.ArrayList;\r\n-import java.util.List;\r\n-import javax.xml.bind.annotation.XmlAccessType;\r\n-import javax.xml.bind.annotation.XmlAccessorType;\r\n-import javax.xml.bind.annotation.XmlElement;\r\n-import javax.xml.bind.annotation.XmlRootElement;\r\n-import javax.xml.bind.annotation.XmlType;\r\n-\r\n-/**\r\n- * <p>Java class for Address complex type.\r\n- * \r\n- * <p>The following schema fragment specifies the expected content contained within this class.\r\n- * \r\n- * <pre>\r\n- * &lt;complexType name=\"Address\">\r\n- *   &lt;complexContent>\r\n- *     &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\">\r\n- *       &lt;sequence>\r\n- *         &lt;element name=\"Name\" type=\"{http://www.w3.org/2001/XMLSchema}string\"/>\r\n- *         &lt;element name=\"Street\" type=\"{http://www.w3.org/2001/XMLSchema}string\" maxOccurs=\"3\"/>\r\n- *         &lt;element name=\"City\" type=\"{http://www.w3.org/2001/XMLSchema}string\"/>\r\n- *       &lt;/sequence>\r\n- *     &lt;/restriction>\r\n- *   &lt;/complexContent>\r\n- * &lt;/complexType>\r\n- * </pre>\r\n- * \r\n- * \r\n- */\r\n-\r\n-@XmlRootElement\r\n-@XmlAccessorType(XmlAccessType.FIELD)\r\n-@XmlType(name = \"Address\", propOrder = {\r\n-    \"name\",\r\n-    \"street\",\r\n-    \"city\"\r\n-})\r\n-public class Address {\r\n-\r\n-    @XmlElement(name = \"Name\")\r\n-    protected String name;\r\n-    @XmlElement(name = \"Street\")\r\n-    protected List<String> street;\r\n-    @XmlElement(name = \"City\")\r\n-    protected String city;\r\n-\r\n-    /**\r\n-     * Gets the value of the name property.\r\n-     * \r\n-     * @return\r\n-     *     possible object is\r\n-     *     {@link String }\r\n-     *     \r\n-     */\r\n-    public String getName() {\r\n-        return name;\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the value of the name property.\r\n-     * \r\n-     * @param value\r\n-     *     allowed object is\r\n-     *     {@link String }\r\n-     *     \r\n-     */\r\n-    public void setName(String value) {\r\n-        this.name = value;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the value of the street property.\r\n-     * \r\n-     * <p>\r\n-     * This accessor method returns a reference to the live list,\r\n-     * not a snapshot. Therefore any modification you make to the\r\n-     * returned list will be present inside the JAXB object.\r\n-     * This is why there is not a <CODE>set</CODE> method for the street property.\r\n-     * \r\n-     * <p>\r\n-     * For example, to add a new item, do as follows:\r\n-     * <pre>\r\n-     *    getStreet().add(newItem);\r\n-     * </pre>\r\n-     * \r\n-     * \r\n-     * <p>\r\n-     * Objects of the following type(s) are allowed in the list\r\n-     * {@link String }\r\n-     * \r\n-     * \r\n-     */\r\n-    public List<String> getStreet() {\r\n-        if (street == null) {\r\n-            street = new ArrayList<String>();\r\n-        }\r\n-        return this.street;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the value of the city property.\r\n-     * \r\n-     * @return\r\n-     *     possible object is\r\n-     *     {@link String }\r\n-     *     \r\n-     */\r\n-    public String getCity() {\r\n-        return city;\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the value of the city property.\r\n-     * \r\n-     * @param value\r\n-     *     allowed object is\r\n-     *     {@link String }\r\n-     *     \r\n-     */\r\n-    public void setCity(String value) {\r\n-        this.city = value;\r\n-    }\r\n-\r\n-    public String toString() {\r\n-        StringBuffer sb = new StringBuffer();\r\n-        sb.append(this.name);\r\n-        for (int i=0; i< this.getStreet().size(); i++)\r\n-               sb.append(\"\\n         \"+this.getStreet().get(i));\r\n-        sb.append(\"\\n         \"+this.getCity());\r\n-        return sb.toString();\r\n-    }\r\n-}\r\n+//\n+// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.2-b01-fcs \n+// See <a href=\"http://java.sun.com/xml/jaxb\">http://java.sun.com/xml/jaxb</a> \n+// Any modifications to this file will be lost upon recompilation of the source schema. \n+// Generated on: 2006.10.04 at 03:08:16 PM PDT \n+//\n+\n+\n+package org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import javax.xml.bind.annotation.XmlAccessType;\n+import javax.xml.bind.annotation.XmlAccessorType;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+\n+/**\n+ * <p>Java class for Address complex type.\n+ * \n+ * <p>The following schema fragment specifies the expected content contained within this class.\n+ * \n+ * <pre>\n+ * &lt;complexType name=\"Address\">\n+ *   &lt;complexContent>\n+ *     &lt;restriction base=\"{http://www.w3.org/2001/XMLSchema}anyType\">\n+ *       &lt;sequence>\n+ *         &lt;element name=\"Name\" type=\"{http://www.w3.org/2001/XMLSchema}string\"/>\n+ *         &lt;element name=\"Street\" type=\"{http://www.w3.org/2001/XMLSchema}string\" maxOccurs=\"3\"/>\n+ *         &lt;element name=\"City\" type=\"{http://www.w3.org/2001/XMLSchema}string\"/>\n+ *       &lt;/sequence>\n+ *     &lt;/restriction>\n+ *   &lt;/complexContent>\n+ * &lt;/complexType>\n+ * </pre>\n+ * \n+ * \n+ */\n+\n+@XmlRootElement\n+@XmlAccessorType(XmlAccessType.FIELD)\n+@XmlType(name = \"Address\", propOrder = {\n+    \"name\",\n+    \"street\",\n+    \"city\"\n+})\n+public class Address {\n+\n+    @XmlElement(name = \"Name\")\n+    protected String name;\n+    @XmlElement(name = \"Street\")\n+    protected List<String> street;\n+    @XmlElement(name = \"City\")\n+    protected String city;\n+\n+    /**\n+     * Gets the value of the name property.\n+     * \n+     * @return\n+     *     possible object is\n+     *     {@link String }\n+     *     \n+     */\n+    public String getName() {\n+        return name;\n+    }\n+\n+    /**\n+     * Sets the value of the name property.\n+     * \n+     * @param value\n+     *     allowed object is\n+     *     {@link String }\n+     *     \n+     */\n+    public void setName(String value) {\n+        this.name = value;\n+    }\n+\n+    /**\n+     * Gets the value of the street property.\n+     * \n+     * <p>\n+     * This accessor method returns a reference to the live list,\n+     * not a snapshot. Therefore any modification you make to the\n+     * returned list will be present inside the JAXB object.\n+     * This is why there is not a <CODE>set</CODE> method for the street property.\n+     * \n+     * <p>\n+     * For example, to add a new item, do as follows:\n+     * <pre>\n+     *    getStreet().add(newItem);\n+     * </pre>\n+     * \n+     * \n+     * <p>\n+     * Objects of the following type(s) are allowed in the list\n+     * {@link String }\n+     * \n+     * \n+     */\n+    public List<String> getStreet() {\n+        if (street == null) {\n+            street = new ArrayList<String>();\n+        }\n+        return this.street;\n+    }\n+\n+    /**\n+     * Gets the value of the city property.\n+     * \n+     * @return\n+     *     possible object is\n+     *     {@link String }\n+     *     \n+     */\n+    public String getCity() {\n+        return city;\n+    }\n+\n+    /**\n+     * Sets the value of the city property.\n+     * \n+     * @param value\n+     *     allowed object is\n+     *     {@link String }\n+     *     \n+     */\n+    public void setCity(String value) {\n+        this.city = value;\n+    }\n+\n+    public String toString() {\n+        StringBuffer sb = new StringBuffer();\n+        sb.append(this.name);\n+        for (int i=0; i< this.getStreet().size(); i++)\n+               sb.append(\"\\n         \"+this.getStreet().get(i));\n+        sb.append(\"\\n         \"+this.getCity());\n+        return sb.toString();\n+    }\n+}"},{"sha":"2ce606776e530fd1c92a625d9acd875114b95bc5","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/xmlbindings/myaddress/CANAddress.java","status":"modified","additions":111,"deletions":111,"changes":222,"blob_url":"https://github.com/apache/openjpa/blob/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/xmlbindings/myaddress/CANAddress.java","raw_url":"https://github.com/apache/openjpa/raw/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/xmlbindings/myaddress/CANAddress.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/xmlbindings/myaddress/CANAddress.java?ref=a5ed9f701dcb37ffd020e5333bcd0c28b26d650d","patch":"@@ -1,111 +1,111 @@\n-//\r\n-// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.2-b01-fcs \r\n-// See <a href=\"http://java.sun.com/xml/jaxb\">http://java.sun.com/xml/jaxb</a> \r\n-// Any modifications to this file will be lost upon recompilation of the source schema. \r\n-// Generated on: 2006.10.04 at 03:08:16 PM PDT \r\n-//\r\n-\r\n-\r\n-package org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress;\r\n-\r\n-import javax.xml.bind.JAXBElement;\r\n-import javax.xml.bind.annotation.XmlAccessType;\r\n-import javax.xml.bind.annotation.XmlAccessorType;\r\n-import javax.xml.bind.annotation.XmlElement;\r\n-import javax.xml.bind.annotation.XmlRootElement;\r\n-import javax.xml.bind.annotation.XmlType;\r\n-\r\n-\r\n-/**\r\n- * <p>Java class for CAN_Address complex type.\r\n- * \r\n- * <p>The following schema fragment specifies the expected content contained within this class.\r\n- * \r\n- * <pre>\r\n- * &lt;complexType name=\"CAN_Address\">\r\n- *   &lt;complexContent>\r\n- *     &lt;extension base=\"{}Address\">\r\n- *       &lt;sequence>\r\n- *         &lt;element name=\"Province\" type=\"{http://www.w3.org/2001/XMLSchema}string\"/>\r\n- *         &lt;element name=\"PostalCode\" type=\"{http://www.w3.org/2001/XMLSchema}string\"/>\r\n- *       &lt;/sequence>\r\n- *     &lt;/extension>\r\n- *   &lt;/complexContent>\r\n- * &lt;/complexType>\r\n- * </pre>\r\n- * \r\n- * \r\n- */\r\n-@XmlRootElement\r\n-@XmlAccessorType(XmlAccessType.FIELD)\r\n-@XmlType(name = \"CAN_Address\", propOrder = {\r\n-    \"province\",\r\n-    \"postalCode\"\r\n-})\r\n-public class CANAddress\r\n-    extends Address\r\n-{\r\n-\r\n-    @XmlElement(name = \"Province\")\r\n-    protected String province;\r\n-    @XmlElement(name = \"PostalCode\")\r\n-    protected String postalCode;\r\n-\r\n-    /**\r\n-     * Gets the value of the province property.\r\n-     * \r\n-     * @return\r\n-     *     possible object is\r\n-     *     {@link String }\r\n-     *     \r\n-     */\r\n-    public String getProvince() {\r\n-        return province;\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the value of the province property.\r\n-     * \r\n-     * @param value\r\n-     *     allowed object is\r\n-     *     {@link String }\r\n-     *     \r\n-     */\r\n-    public void setProvince(String value) {\r\n-        this.province = value;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the value of the postalCode property.\r\n-     * \r\n-     * @return\r\n-     *     possible object is\r\n-     *     {@link String }\r\n-     *     \r\n-     */\r\n-    public String getPostalCode() {\r\n-        return postalCode;\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the value of the postalCode property.\r\n-     * \r\n-     * @param value\r\n-     *     allowed object is\r\n-     *     {@link String }\r\n-     *     \r\n-     */\r\n-    public void setPostalCode(String value) {\r\n-        this.postalCode = value;\r\n-    }\r\n-\r\n-    public String toString() {\r\n-        StringBuffer sb = new StringBuffer();\r\n-        sb.append(super.toString())\r\n-            .append(\"\\n         \")\r\n-            .append(this.province)\r\n-            .append(\" \")\r\n-            .append(this.postalCode);\r\n-        return sb.toString();\r\n-    }\r\n-}\r\n+//\n+// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.2-b01-fcs \n+// See <a href=\"http://java.sun.com/xml/jaxb\">http://java.sun.com/xml/jaxb</a> \n+// Any modifications to this file will be lost upon recompilation of the source schema. \n+// Generated on: 2006.10.04 at 03:08:16 PM PDT \n+//\n+\n+\n+package org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress;\n+\n+import javax.xml.bind.JAXBElement;\n+import javax.xml.bind.annotation.XmlAccessType;\n+import javax.xml.bind.annotation.XmlAccessorType;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+\n+\n+/**\n+ * <p>Java class for CAN_Address complex type.\n+ * \n+ * <p>The following schema fragment specifies the expected content contained within this class.\n+ * \n+ * <pre>\n+ * &lt;complexType name=\"CAN_Address\">\n+ *   &lt;complexContent>\n+ *     &lt;extension base=\"{}Address\">\n+ *       &lt;sequence>\n+ *         &lt;element name=\"Province\" type=\"{http://www.w3.org/2001/XMLSchema}string\"/>\n+ *         &lt;element name=\"PostalCode\" type=\"{http://www.w3.org/2001/XMLSchema}string\"/>\n+ *       &lt;/sequence>\n+ *     &lt;/extension>\n+ *   &lt;/complexContent>\n+ * &lt;/complexType>\n+ * </pre>\n+ * \n+ * \n+ */\n+@XmlRootElement\n+@XmlAccessorType(XmlAccessType.FIELD)\n+@XmlType(name = \"CAN_Address\", propOrder = {\n+    \"province\",\n+    \"postalCode\"\n+})\n+public class CANAddress\n+    extends Address\n+{\n+\n+    @XmlElement(name = \"Province\")\n+    protected String province;\n+    @XmlElement(name = \"PostalCode\")\n+    protected String postalCode;\n+\n+    /**\n+     * Gets the value of the province property.\n+     * \n+     * @return\n+     *     possible object is\n+     *     {@link String }\n+     *     \n+     */\n+    public String getProvince() {\n+        return province;\n+    }\n+\n+    /**\n+     * Sets the value of the province property.\n+     * \n+     * @param value\n+     *     allowed object is\n+     *     {@link String }\n+     *     \n+     */\n+    public void setProvince(String value) {\n+        this.province = value;\n+    }\n+\n+    /**\n+     * Gets the value of the postalCode property.\n+     * \n+     * @return\n+     *     possible object is\n+     *     {@link String }\n+     *     \n+     */\n+    public String getPostalCode() {\n+        return postalCode;\n+    }\n+\n+    /**\n+     * Sets the value of the postalCode property.\n+     * \n+     * @param value\n+     *     allowed object is\n+     *     {@link String }\n+     *     \n+     */\n+    public void setPostalCode(String value) {\n+        this.postalCode = value;\n+    }\n+\n+    public String toString() {\n+        StringBuffer sb = new StringBuffer();\n+        sb.append(super.toString())\n+            .append(\"\\n         \")\n+            .append(this.province)\n+            .append(\" \")\n+            .append(this.postalCode);\n+        return sb.toString();\n+    }\n+}"},{"sha":"e735f5d0161f44d8271d000e15008c1a4a21fa6d","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/xmlbindings/myaddress/GBRAddress.java","status":"modified","additions":111,"deletions":111,"changes":222,"blob_url":"https://github.com/apache/openjpa/blob/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/xmlbindings/myaddress/GBRAddress.java","raw_url":"https://github.com/apache/openjpa/raw/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/xmlbindings/myaddress/GBRAddress.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/xmlbindings/myaddress/GBRAddress.java?ref=a5ed9f701dcb37ffd020e5333bcd0c28b26d650d","patch":"@@ -1,111 +1,111 @@\n-//\r\n-// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.2-b01-fcs \r\n-// See <a href=\"http://java.sun.com/xml/jaxb\">http://java.sun.com/xml/jaxb</a> \r\n-// Any modifications to this file will be lost upon recompilation of the source schema. \r\n-// Generated on: 2006.10.04 at 03:08:16 PM PDT \r\n-//\r\n-\r\n-\r\n-package org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress;\r\n-\r\n-import javax.xml.bind.JAXBElement;\r\n-import javax.xml.bind.annotation.XmlAccessType;\r\n-import javax.xml.bind.annotation.XmlAccessorType;\r\n-import javax.xml.bind.annotation.XmlElement;\r\n-import javax.xml.bind.annotation.XmlRootElement;\r\n-import javax.xml.bind.annotation.XmlType;\r\n-\r\n-\r\n-/**\r\n- * <p>Java class for GBR_Address complex type.\r\n- * \r\n- * <p>The following schema fragment specifies the expected content contained within this class.\r\n- * \r\n- * <pre>\r\n- * &lt;complexType name=\"GBR_Address\">\r\n- *   &lt;complexContent>\r\n- *     &lt;extension base=\"{}Address\">\r\n- *       &lt;sequence>\r\n- *         &lt;element name=\"County\" type=\"{http://www.w3.org/2001/XMLSchema}string\"/>\r\n- *         &lt;element name=\"Postcode\" type=\"{http://www.w3.org/2001/XMLSchema}string\"/>\r\n- *       &lt;/sequence>\r\n- *     &lt;/extension>\r\n- *   &lt;/complexContent>\r\n- * &lt;/complexType>\r\n- * </pre>\r\n- * \r\n- * \r\n- */\r\n-@XmlRootElement(name = \"GBR_Address\")\r\n-@XmlAccessorType(XmlAccessType.FIELD)\r\n-@XmlType(name = \"GBR_Address\", propOrder = {\r\n-    \"county\",\r\n-    \"postcode\"\r\n-})\r\n-public class GBRAddress\r\n-    extends Address\r\n-{\r\n-\r\n-    @XmlElement(name = \"County\")\r\n-    protected String county;\r\n-    @XmlElement(name = \"Postcode\")\r\n-    protected String postcode;\r\n-\r\n-    /**\r\n-     * Gets the value of the county property.\r\n-     * \r\n-     * @return\r\n-     *     possible object is\r\n-     *     {@link String }\r\n-     *     \r\n-     */\r\n-    public String getCounty() {\r\n-        return county;\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the value of the county property.\r\n-     * \r\n-     * @param value\r\n-     *     allowed object is\r\n-     *     {@link String }\r\n-     *     \r\n-     */\r\n-    public void setCounty(String value) {\r\n-        this.county = value;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the value of the postcode property.\r\n-     * \r\n-     * @return\r\n-     *     possible object is\r\n-     *     {@link String }\r\n-     *     \r\n-     */\r\n-    public String getPostcode() {\r\n-        return postcode;\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the value of the postcode property.\r\n-     * \r\n-     * @param value\r\n-     *     allowed object is\r\n-     *     {@link String }\r\n-     *     \r\n-     */\r\n-    public void setPostcode(String value) {\r\n-        this.postcode = value;\r\n-    }\r\n-\r\n-    public String toString() {\r\n-        StringBuffer sb = new StringBuffer();\r\n-        sb.append(super.toString())\r\n-            .append(\"\\n         \")\r\n-            .append(this.county)\r\n-            .append(\" \")\r\n-            .append(this.postcode);\r\n-        return sb.toString();\r\n-    }\r\n-}\r\n+//\n+// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.2-b01-fcs \n+// See <a href=\"http://java.sun.com/xml/jaxb\">http://java.sun.com/xml/jaxb</a> \n+// Any modifications to this file will be lost upon recompilation of the source schema. \n+// Generated on: 2006.10.04 at 03:08:16 PM PDT \n+//\n+\n+\n+package org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress;\n+\n+import javax.xml.bind.JAXBElement;\n+import javax.xml.bind.annotation.XmlAccessType;\n+import javax.xml.bind.annotation.XmlAccessorType;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+\n+\n+/**\n+ * <p>Java class for GBR_Address complex type.\n+ * \n+ * <p>The following schema fragment specifies the expected content contained within this class.\n+ * \n+ * <pre>\n+ * &lt;complexType name=\"GBR_Address\">\n+ *   &lt;complexContent>\n+ *     &lt;extension base=\"{}Address\">\n+ *       &lt;sequence>\n+ *         &lt;element name=\"County\" type=\"{http://www.w3.org/2001/XMLSchema}string\"/>\n+ *         &lt;element name=\"Postcode\" type=\"{http://www.w3.org/2001/XMLSchema}string\"/>\n+ *       &lt;/sequence>\n+ *     &lt;/extension>\n+ *   &lt;/complexContent>\n+ * &lt;/complexType>\n+ * </pre>\n+ * \n+ * \n+ */\n+@XmlRootElement(name = \"GBR_Address\")\n+@XmlAccessorType(XmlAccessType.FIELD)\n+@XmlType(name = \"GBR_Address\", propOrder = {\n+    \"county\",\n+    \"postcode\"\n+})\n+public class GBRAddress\n+    extends Address\n+{\n+\n+    @XmlElement(name = \"County\")\n+    protected String county;\n+    @XmlElement(name = \"Postcode\")\n+    protected String postcode;\n+\n+    /**\n+     * Gets the value of the county property.\n+     * \n+     * @return\n+     *     possible object is\n+     *     {@link String }\n+     *     \n+     */\n+    public String getCounty() {\n+        return county;\n+    }\n+\n+    /**\n+     * Sets the value of the county property.\n+     * \n+     * @param value\n+     *     allowed object is\n+     *     {@link String }\n+     *     \n+     */\n+    public void setCounty(String value) {\n+        this.county = value;\n+    }\n+\n+    /**\n+     * Gets the value of the postcode property.\n+     * \n+     * @return\n+     *     possible object is\n+     *     {@link String }\n+     *     \n+     */\n+    public String getPostcode() {\n+        return postcode;\n+    }\n+\n+    /**\n+     * Sets the value of the postcode property.\n+     * \n+     * @param value\n+     *     allowed object is\n+     *     {@link String }\n+     *     \n+     */\n+    public void setPostcode(String value) {\n+        this.postcode = value;\n+    }\n+\n+    public String toString() {\n+        StringBuffer sb = new StringBuffer();\n+        sb.append(super.toString())\n+            .append(\"\\n         \")\n+            .append(this.county)\n+            .append(\" \")\n+            .append(this.postcode);\n+        return sb.toString();\n+    }\n+}"},{"sha":"d05429213602eedb00bb222878f5c0e6e45ac6cd","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/xmlbindings/myaddress/ObjectFactory.java","status":"modified","additions":122,"deletions":122,"changes":244,"blob_url":"https://github.com/apache/openjpa/blob/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/xmlbindings/myaddress/ObjectFactory.java","raw_url":"https://github.com/apache/openjpa/raw/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/xmlbindings/myaddress/ObjectFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/xmlbindings/myaddress/ObjectFactory.java?ref=a5ed9f701dcb37ffd020e5333bcd0c28b26d650d","patch":"@@ -1,122 +1,122 @@\n-//\r\n-// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.2-b01-fcs \r\n-// See <a href=\"http://java.sun.com/xml/jaxb\">http://java.sun.com/xml/jaxb</a> \r\n-// Any modifications to this file will be lost upon recompilation of the source schema. \r\n-// Generated on: 2006.10.04 at 03:08:16 PM PDT \r\n-//\r\n-\r\n-\r\n-package org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress;\r\n-\r\n-import javax.xml.bind.JAXBElement;\r\n-import javax.xml.bind.annotation.XmlElementDecl;\r\n-import javax.xml.bind.annotation.XmlRegistry;\r\n-import javax.xml.namespace.QName;\r\n-\r\n-\r\n-/**\r\n- * This object contains factory methods for each \r\n- * Java content interface and Java element interface \r\n- * generated in the myaddress package. \r\n- * <p>An ObjectFactory allows you to programatically \r\n- * construct new instances of the Java representation \r\n- * for XML content. The Java representation of XML \r\n- * content can consist of schema derived interfaces \r\n- * and classes representing the binding of schema \r\n- * type definitions, element declarations and featureSelection \r\n- * groups.  Factory methods for each of these are \r\n- * provided in this class.\r\n- * \r\n- */\r\n-@XmlRegistry\r\n-public class ObjectFactory {\r\n-\r\n-    private final static QName _AddrUSA_QNAME = new QName(\"\", \"AddrUSA\");\r\n-    private final static QName _AddrCAN_QNAME = new QName(\"\", \"AddrCAN\");\r\n-    private final static QName _MailAddress_QNAME = new QName(\"\", \"MailAddress\");\r\n-    private final static QName _AddrGBR_QNAME = new QName(\"\", \"AddrGBR\");\r\n-\r\n-    /**\r\n-     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: myaddress\r\n-     * \r\n-     */\r\n-    public ObjectFactory() {\r\n-    }\r\n-\r\n-    /**\r\n-     * Create an instance of {@link Address }\r\n-     * \r\n-     */\r\n-    public Address createAddress() {\r\n-        return new Address();\r\n-    }\r\n-\r\n-    /**\r\n-     * Create an instance of {@link ShortAddress }\r\n-     * \r\n-     */\r\n-    public ShortAddress createShortAddress() {\r\n-        return new ShortAddress();\r\n-    }\r\n-\r\n-    /**\r\n-     * Create an instance of {@link USAAddress }\r\n-     * \r\n-     */\r\n-    public USAAddress createUSAAddress() {\r\n-        return new USAAddress();\r\n-    }\r\n-\r\n-    /**\r\n-     * Create an instance of {@link GBRAddress }\r\n-     * \r\n-     */\r\n-    public GBRAddress createGBRAddress() {\r\n-        return new GBRAddress();\r\n-    }\r\n-\r\n-    /**\r\n-     * Create an instance of {@link CANAddress }\r\n-     * \r\n-     */\r\n-    public CANAddress createCANAddress() {\r\n-        return new CANAddress();\r\n-    }\r\n-\r\n-    /**\r\n-     * Create an instance of {@link JAXBElement }{@code <}{@link USAAddress }{@code >}}\r\n-     * \r\n-     */\r\n-    @XmlElementDecl(namespace = \"\", name = \"AddrUSA\", substitutionHeadNamespace = \"\", substitutionHeadName = \"MailAddress\")\r\n-    public JAXBElement<USAAddress> createAddrUSA(USAAddress value) {\r\n-        return new JAXBElement<USAAddress>(_AddrUSA_QNAME, USAAddress.class, null, value);\r\n-    }\r\n-\r\n-    /**\r\n-     * Create an instance of {@link JAXBElement }{@code <}{@link CANAddress }{@code >}}\r\n-     * \r\n-     */\r\n-    @XmlElementDecl(namespace = \"\", name = \"AddrCAN\", substitutionHeadNamespace = \"\", substitutionHeadName = \"MailAddress\")\r\n-    public JAXBElement<CANAddress> createAddrCAN(CANAddress value) {\r\n-        return new JAXBElement<CANAddress>(_AddrCAN_QNAME, CANAddress.class, null, value);\r\n-    }\r\n-\r\n-    /**\r\n-     * Create an instance of {@link JAXBElement }{@code <}{@link Address }{@code >}}\r\n-     * \r\n-     */\r\n-    @XmlElementDecl(namespace = \"\", name = \"MailAddress\")\r\n-    public JAXBElement<Address> createMailAddress(Address value) {\r\n-        return new JAXBElement<Address>(_MailAddress_QNAME, Address.class, null, value);\r\n-    }\r\n-\r\n-    /**\r\n-     * Create an instance of {@link JAXBElement }{@code <}{@link GBRAddress }{@code >}}\r\n-     * \r\n-     */\r\n-    @XmlElementDecl(namespace = \"\", name = \"AddrGBR\", substitutionHeadNamespace = \"\", substitutionHeadName = \"MailAddress\")\r\n-    public JAXBElement<GBRAddress> createAddrGBR(GBRAddress value) {\r\n-        return new JAXBElement<GBRAddress>(_AddrGBR_QNAME, GBRAddress.class, null, value);\r\n-    }\r\n-\r\n-}\r\n+//\n+// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.2-b01-fcs \n+// See <a href=\"http://java.sun.com/xml/jaxb\">http://java.sun.com/xml/jaxb</a> \n+// Any modifications to this file will be lost upon recompilation of the source schema. \n+// Generated on: 2006.10.04 at 03:08:16 PM PDT \n+//\n+\n+\n+package org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress;\n+\n+import javax.xml.bind.JAXBElement;\n+import javax.xml.bind.annotation.XmlElementDecl;\n+import javax.xml.bind.annotation.XmlRegistry;\n+import javax.xml.namespace.QName;\n+\n+\n+/**\n+ * This object contains factory methods for each \n+ * Java content interface and Java element interface \n+ * generated in the myaddress package. \n+ * <p>An ObjectFactory allows you to programatically \n+ * construct new instances of the Java representation \n+ * for XML content. The Java representation of XML \n+ * content can consist of schema derived interfaces \n+ * and classes representing the binding of schema \n+ * type definitions, element declarations and featureSelection \n+ * groups.  Factory methods for each of these are \n+ * provided in this class.\n+ * \n+ */\n+@XmlRegistry\n+public class ObjectFactory {\n+\n+    private final static QName _AddrUSA_QNAME = new QName(\"\", \"AddrUSA\");\n+    private final static QName _AddrCAN_QNAME = new QName(\"\", \"AddrCAN\");\n+    private final static QName _MailAddress_QNAME = new QName(\"\", \"MailAddress\");\n+    private final static QName _AddrGBR_QNAME = new QName(\"\", \"AddrGBR\");\n+\n+    /**\n+     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: myaddress\n+     * \n+     */\n+    public ObjectFactory() {\n+    }\n+\n+    /**\n+     * Create an instance of {@link Address }\n+     * \n+     */\n+    public Address createAddress() {\n+        return new Address();\n+    }\n+\n+    /**\n+     * Create an instance of {@link ShortAddress }\n+     * \n+     */\n+    public ShortAddress createShortAddress() {\n+        return new ShortAddress();\n+    }\n+\n+    /**\n+     * Create an instance of {@link USAAddress }\n+     * \n+     */\n+    public USAAddress createUSAAddress() {\n+        return new USAAddress();\n+    }\n+\n+    /**\n+     * Create an instance of {@link GBRAddress }\n+     * \n+     */\n+    public GBRAddress createGBRAddress() {\n+        return new GBRAddress();\n+    }\n+\n+    /**\n+     * Create an instance of {@link CANAddress }\n+     * \n+     */\n+    public CANAddress createCANAddress() {\n+        return new CANAddress();\n+    }\n+\n+    /**\n+     * Create an instance of {@link JAXBElement }{@code <}{@link USAAddress }{@code >}}\n+     * \n+     */\n+    @XmlElementDecl(namespace = \"\", name = \"AddrUSA\", substitutionHeadNamespace = \"\", substitutionHeadName = \"MailAddress\")\n+    public JAXBElement<USAAddress> createAddrUSA(USAAddress value) {\n+        return new JAXBElement<USAAddress>(_AddrUSA_QNAME, USAAddress.class, null, value);\n+    }\n+\n+    /**\n+     * Create an instance of {@link JAXBElement }{@code <}{@link CANAddress }{@code >}}\n+     * \n+     */\n+    @XmlElementDecl(namespace = \"\", name = \"AddrCAN\", substitutionHeadNamespace = \"\", substitutionHeadName = \"MailAddress\")\n+    public JAXBElement<CANAddress> createAddrCAN(CANAddress value) {\n+        return new JAXBElement<CANAddress>(_AddrCAN_QNAME, CANAddress.class, null, value);\n+    }\n+\n+    /**\n+     * Create an instance of {@link JAXBElement }{@code <}{@link Address }{@code >}}\n+     * \n+     */\n+    @XmlElementDecl(namespace = \"\", name = \"MailAddress\")\n+    public JAXBElement<Address> createMailAddress(Address value) {\n+        return new JAXBElement<Address>(_MailAddress_QNAME, Address.class, null, value);\n+    }\n+\n+    /**\n+     * Create an instance of {@link JAXBElement }{@code <}{@link GBRAddress }{@code >}}\n+     * \n+     */\n+    @XmlElementDecl(namespace = \"\", name = \"AddrGBR\", substitutionHeadNamespace = \"\", substitutionHeadName = \"MailAddress\")\n+    public JAXBElement<GBRAddress> createAddrGBR(GBRAddress value) {\n+        return new JAXBElement<GBRAddress>(_AddrGBR_QNAME, GBRAddress.class, null, value);\n+    }\n+\n+}"},{"sha":"3b3f540d798edf737d4c2616eeb97bdd6cbefeef","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/xmlbindings/myaddress/ShortAddress.java","status":"modified","additions":46,"deletions":46,"changes":92,"blob_url":"https://github.com/apache/openjpa/blob/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/xmlbindings/myaddress/ShortAddress.java","raw_url":"https://github.com/apache/openjpa/raw/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/xmlbindings/myaddress/ShortAddress.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/xmlbindings/myaddress/ShortAddress.java?ref=a5ed9f701dcb37ffd020e5333bcd0c28b26d650d","patch":"@@ -1,46 +1,46 @@\n-//\r\n-// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.2-b01-fcs \r\n-// See <a href=\"http://java.sun.com/xml/jaxb\">http://java.sun.com/xml/jaxb</a> \r\n-// Any modifications to this file will be lost upon recompilation of the source schema. \r\n-// Generated on: 2006.10.04 at 03:08:16 PM PDT \r\n-//\r\n-\r\n-\r\n-package org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress;\r\n-\r\n-import javax.xml.bind.annotation.XmlAccessType;\r\n-import javax.xml.bind.annotation.XmlAccessorType;\r\n-import javax.xml.bind.annotation.XmlRootElement;\r\n-import javax.xml.bind.annotation.XmlType;\r\n-\r\n-\r\n-/**\r\n- * <p>Java class for ShortAddress complex type.\r\n- * \r\n- * <p>The following schema fragment specifies the expected content contained within this class.\r\n- * \r\n- * <pre>\r\n- * &lt;complexType name=\"ShortAddress\">\r\n- *   &lt;complexContent>\r\n- *     &lt;restriction base=\"{}Address\">\r\n- *       &lt;sequence>\r\n- *         &lt;element name=\"Name\" type=\"{http://www.w3.org/2001/XMLSchema}string\"/>\r\n- *         &lt;element name=\"Street\" type=\"{http://www.w3.org/2001/XMLSchema}string\"/>\r\n- *         &lt;element name=\"City\" type=\"{http://www.w3.org/2001/XMLSchema}string\"/>\r\n- *       &lt;/sequence>\r\n- *     &lt;/restriction>\r\n- *   &lt;/complexContent>\r\n- * &lt;/complexType>\r\n- * </pre>\r\n- * \r\n- * \r\n- */\r\n-@XmlRootElement\r\n-@XmlAccessorType(XmlAccessType.FIELD)\r\n-@XmlType(name = \"ShortAddress\")\r\n-public class ShortAddress\r\n-    extends Address\r\n-{\r\n-\r\n-\r\n-}\r\n+//\n+// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.2-b01-fcs \n+// See <a href=\"http://java.sun.com/xml/jaxb\">http://java.sun.com/xml/jaxb</a> \n+// Any modifications to this file will be lost upon recompilation of the source schema. \n+// Generated on: 2006.10.04 at 03:08:16 PM PDT \n+//\n+\n+\n+package org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress;\n+\n+import javax.xml.bind.annotation.XmlAccessType;\n+import javax.xml.bind.annotation.XmlAccessorType;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+\n+\n+/**\n+ * <p>Java class for ShortAddress complex type.\n+ * \n+ * <p>The following schema fragment specifies the expected content contained within this class.\n+ * \n+ * <pre>\n+ * &lt;complexType name=\"ShortAddress\">\n+ *   &lt;complexContent>\n+ *     &lt;restriction base=\"{}Address\">\n+ *       &lt;sequence>\n+ *         &lt;element name=\"Name\" type=\"{http://www.w3.org/2001/XMLSchema}string\"/>\n+ *         &lt;element name=\"Street\" type=\"{http://www.w3.org/2001/XMLSchema}string\"/>\n+ *         &lt;element name=\"City\" type=\"{http://www.w3.org/2001/XMLSchema}string\"/>\n+ *       &lt;/sequence>\n+ *     &lt;/restriction>\n+ *   &lt;/complexContent>\n+ * &lt;/complexType>\n+ * </pre>\n+ * \n+ * \n+ */\n+@XmlRootElement\n+@XmlAccessorType(XmlAccessType.FIELD)\n+@XmlType(name = \"ShortAddress\")\n+public class ShortAddress\n+    extends Address\n+{\n+\n+\n+}"},{"sha":"23604ee38c4054e83ce74ced13209f92e2f00aaf","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/xmlbindings/myaddress/USAAddress.java","status":"modified","additions":103,"deletions":103,"changes":206,"blob_url":"https://github.com/apache/openjpa/blob/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/xmlbindings/myaddress/USAAddress.java","raw_url":"https://github.com/apache/openjpa/raw/a5ed9f701dcb37ffd020e5333bcd0c28b26d650d/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/xmlbindings/myaddress/USAAddress.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xmlmapping/xmlbindings/myaddress/USAAddress.java?ref=a5ed9f701dcb37ffd020e5333bcd0c28b26d650d","patch":"@@ -1,103 +1,103 @@\n-//\r\n-// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.2-b01-fcs \r\n-// See <a href=\"http://java.sun.com/xml/jaxb\">http://java.sun.com/xml/jaxb</a> \r\n-// Any modifications to this file will be lost upon recompilation of the source schema. \r\n-// Generated on: 2006.10.04 at 03:08:16 PM PDT \r\n-//\r\n-\r\n-\r\n-package org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress;\r\n-\r\n-import javax.xml.bind.annotation.XmlAccessType;\r\n-import javax.xml.bind.annotation.XmlAccessorType;\r\n-import javax.xml.bind.annotation.XmlElement;\r\n-import javax.xml.bind.annotation.XmlElementDecl;\r\n-import javax.xml.bind.annotation.XmlRootElement;\r\n-import javax.xml.bind.annotation.XmlType;\r\n-\r\n-\r\n-/**\r\n- * <p>Java class for USA_Address complex type.\r\n- * \r\n- * <p>The following schema fragment specifies the expected content contained within this class.\r\n- * \r\n- * <pre>\r\n- * &lt;complexType name=\"USA_Address\">\r\n- *   &lt;complexContent>\r\n- *     &lt;extension base=\"{}Address\">\r\n- *       &lt;sequence>\r\n- *         &lt;element name=\"State\" type=\"{http://www.w3.org/2001/XMLSchema}string\"/>\r\n- *         &lt;element name=\"ZIP\" type=\"{}USPS_ZIP\"/>\r\n- *       &lt;/sequence>\r\n- *     &lt;/extension>\r\n- *   &lt;/complexContent>\r\n- * &lt;/complexType>\r\n- * </pre>\r\n- * \r\n- * \r\n- */\r\n-@XmlRootElement\r\n-@XmlAccessorType(XmlAccessType.FIELD)\r\n-@XmlType(name = \"USA_Address\", propOrder = {\r\n-    \"state\",\r\n-    \"zip\"\r\n-})\r\n-public class USAAddress\r\n-    extends Address\r\n-{\r\n-\r\n-    @XmlElement(name = \"State\")\r\n-    protected String state;\r\n-    @XmlElement(name = \"ZIP\")\r\n-    protected int zip;\r\n-\r\n-    /**\r\n-     * Gets the value of the state property.\r\n-     * \r\n-     * @return\r\n-     *     possible object is\r\n-     *     {@link String }\r\n-     *     \r\n-     */\r\n-    public String getState() {\r\n-        return state;\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the value of the state property.\r\n-     * \r\n-     * @param value\r\n-     *     allowed object is\r\n-     *     {@link String }\r\n-     *     \r\n-     */\r\n-    public void setState(String value) {\r\n-        this.state = value;\r\n-    }\r\n-\r\n-    /**\r\n-     * Gets the value of the zip property.\r\n-     * \r\n-     */\r\n-    public int getZIP() {\r\n-        return zip;\r\n-    }\r\n-\r\n-    /**\r\n-     * Sets the value of the zip property.\r\n-     * \r\n-     */\r\n-    public void setZIP(int value) {\r\n-        this.zip = value;\r\n-    }\r\n-\r\n-    public String toString() {\r\n-        StringBuffer sb = new StringBuffer();\r\n-        sb.append(super.toString())\r\n-            .append(\"\\n         \")\r\n-            .append(this.state)\r\n-            .append(\" \")\r\n-            .append(this.zip);\r\n-        return sb.toString();\r\n-    }\r\n-}\r\n+//\n+// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.0.2-b01-fcs \n+// See <a href=\"http://java.sun.com/xml/jaxb\">http://java.sun.com/xml/jaxb</a> \n+// Any modifications to this file will be lost upon recompilation of the source schema. \n+// Generated on: 2006.10.04 at 03:08:16 PM PDT \n+//\n+\n+\n+package org.apache.openjpa.persistence.xmlmapping.xmlbindings.myaddress;\n+\n+import javax.xml.bind.annotation.XmlAccessType;\n+import javax.xml.bind.annotation.XmlAccessorType;\n+import javax.xml.bind.annotation.XmlElement;\n+import javax.xml.bind.annotation.XmlElementDecl;\n+import javax.xml.bind.annotation.XmlRootElement;\n+import javax.xml.bind.annotation.XmlType;\n+\n+\n+/**\n+ * <p>Java class for USA_Address complex type.\n+ * \n+ * <p>The following schema fragment specifies the expected content contained within this class.\n+ * \n+ * <pre>\n+ * &lt;complexType name=\"USA_Address\">\n+ *   &lt;complexContent>\n+ *     &lt;extension base=\"{}Address\">\n+ *       &lt;sequence>\n+ *         &lt;element name=\"State\" type=\"{http://www.w3.org/2001/XMLSchema}string\"/>\n+ *         &lt;element name=\"ZIP\" type=\"{}USPS_ZIP\"/>\n+ *       &lt;/sequence>\n+ *     &lt;/extension>\n+ *   &lt;/complexContent>\n+ * &lt;/complexType>\n+ * </pre>\n+ * \n+ * \n+ */\n+@XmlRootElement\n+@XmlAccessorType(XmlAccessType.FIELD)\n+@XmlType(name = \"USA_Address\", propOrder = {\n+    \"state\",\n+    \"zip\"\n+})\n+public class USAAddress\n+    extends Address\n+{\n+\n+    @XmlElement(name = \"State\")\n+    protected String state;\n+    @XmlElement(name = \"ZIP\")\n+    protected int zip;\n+\n+    /**\n+     * Gets the value of the state property.\n+     * \n+     * @return\n+     *     possible object is\n+     *     {@link String }\n+     *     \n+     */\n+    public String getState() {\n+        return state;\n+    }\n+\n+    /**\n+     * Sets the value of the state property.\n+     * \n+     * @param value\n+     *     allowed object is\n+     *     {@link String }\n+     *     \n+     */\n+    public void setState(String value) {\n+        this.state = value;\n+    }\n+\n+    /**\n+     * Gets the value of the zip property.\n+     * \n+     */\n+    public int getZIP() {\n+        return zip;\n+    }\n+\n+    /**\n+     * Sets the value of the zip property.\n+     * \n+     */\n+    public void setZIP(int value) {\n+        this.zip = value;\n+    }\n+\n+    public String toString() {\n+        StringBuffer sb = new StringBuffer();\n+        sb.append(super.toString())\n+            .append(\"\\n         \")\n+            .append(this.state)\n+            .append(\" \")\n+            .append(this.zip);\n+        return sb.toString();\n+    }\n+}"}]}

