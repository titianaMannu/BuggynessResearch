{"sha":"a68835381e0975aa1c75cd381e5e37d63b1d0db1","node_id":"MDY6Q29tbWl0MjA2MzY0OmE2ODgzNTM4MWUwOTc1YWExYzc1Y2QzODFlNWUzN2Q2M2IxZDBkYjE=","commit":{"author":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2021-04-08T12:54:22Z"},"committer":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2021-04-08T12:54:22Z"},"message":"OPENJPA-2864 use Timestamp precision from Column if set","tree":{"sha":"de779e8112c2b78233f01ce389faec64a81ea3f1","url":"https://api.github.com/repos/apache/openjpa/git/trees/de779e8112c2b78233f01ce389faec64a81ea3f1"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/a68835381e0975aa1c75cd381e5e37d63b1d0db1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/a68835381e0975aa1c75cd381e5e37d63b1d0db1","html_url":"https://github.com/apache/openjpa/commit/a68835381e0975aa1c75cd381e5e37d63b1d0db1","comments_url":"https://api.github.com/repos/apache/openjpa/commits/a68835381e0975aa1c75cd381e5e37d63b1d0db1/comments","author":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"committer":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"parents":[{"sha":"0fc957a02be3c4ad2f862f1424e56717b0887917","url":"https://api.github.com/repos/apache/openjpa/commits/0fc957a02be3c4ad2f862f1424e56717b0887917","html_url":"https://github.com/apache/openjpa/commit/0fc957a02be3c4ad2f862f1424e56717b0887917"}],"stats":{"total":27,"additions":26,"deletions":1},"files":[{"sha":"a9a10300be871357b61a370e10490f688b14030e","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","status":"modified","additions":26,"deletions":1,"changes":27,"blob_url":"https://github.com/apache/openjpa/blob/a68835381e0975aa1c75cd381e5e37d63b1d0db1/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/a68835381e0975aa1c75cd381e5e37d63b1d0db1/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java?ref=a68835381e0975aa1c75cd381e5e37d63b1d0db1","patch":"@@ -313,6 +313,11 @@\n     public int maxEmbeddedBlobSize = -1;\n     public int maxEmbeddedClobSize = -1;\n     public int inClauseLimit = -1;\n+\n+    /**\n+     * Attention, while this is named datePrecision it actually only get used for Timestamp handling!\n+     * @see StateManagerImpl#roundTimestamp(Timestamp, int)\n+     */\n     public int datePrecision = MILLI;\n \n     /**\n@@ -1441,7 +1446,27 @@ public void setTime(PreparedStatement stmnt, int idx, Time val, Calendar cal, Co\n     public void setTimestamp(PreparedStatement stmnt, int idx, Timestamp val, Calendar cal, Column col)\n         throws SQLException {\n \n-        val = StateManagerImpl.roundTimestamp(val, datePrecision);\n+        int usePrecision = datePrecision;\n+        if (col != null) {\n+            int columnPrecision = col.getPrecision();\n+            if (columnPrecision >= 0) { // negative value means we don't know\n+                if (columnPrecision == 0) {\n+                    usePrecision = SEC;\n+                }\n+                else if (columnPrecision == 3) {\n+                    usePrecision = MILLI;\n+                }\n+                else if (columnPrecision == 6) {\n+                    usePrecision = MICRO;\n+                }\n+                else if (columnPrecision == 9) {\n+                    usePrecision = NANO;\n+                }\n+                // rest defaults to datePrecision\n+            }\n+        }\n+\n+        val = StateManagerImpl.roundTimestamp(val, usePrecision);\n \n         if (cal == null)\n             stmnt.setTimestamp(idx, val);"}]}

