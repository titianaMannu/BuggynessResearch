{"sha":"a7969c120bfba06b883f319788fc50ca0ef06b69","node_id":"MDY6Q29tbWl0MjA2MzY0OmE3OTY5YzEyMGJmYmEwNmI4ODNmMzE5Nzg4ZmM1MGNhMGVmMDZiNjk=","commit":{"author":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2019-04-05T11:58:05Z"},"committer":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2019-04-05T11:58:05Z"},"message":"OPENJPA-2555 rename DBDictionary property to dateFractionDigits\n\ndateFractionDigits is more self-explaning than defaultFractionDigits.\nIt also fits better into the already existing date* config settings.","tree":{"sha":"a3d94eb98e0b8f3b0e694dee91bef37c08a2358b","url":"https://api.github.com/repos/apache/openjpa/git/trees/a3d94eb98e0b8f3b0e694dee91bef37c08a2358b"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/a7969c120bfba06b883f319788fc50ca0ef06b69","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/a7969c120bfba06b883f319788fc50ca0ef06b69","html_url":"https://github.com/apache/openjpa/commit/a7969c120bfba06b883f319788fc50ca0ef06b69","comments_url":"https://api.github.com/repos/apache/openjpa/commits/a7969c120bfba06b883f319788fc50ca0ef06b69/comments","author":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"committer":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"parents":[{"sha":"dc31b800b8831d606c9621be2935282b666ecf64","url":"https://api.github.com/repos/apache/openjpa/commits/dc31b800b8831d606c9621be2935282b666ecf64","html_url":"https://github.com/apache/openjpa/commit/dc31b800b8831d606c9621be2935282b666ecf64"}],"stats":{"total":30,"additions":15,"deletions":15},"files":[{"sha":"22ac05ce60b3b3b195fa3bf4daa53743e2b76363","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/a7969c120bfba06b883f319788fc50ca0ef06b69/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/a7969c120bfba06b883f319788fc50ca0ef06b69/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java?ref=a7969c120bfba06b883f319788fc50ca0ef06b69","patch":"@@ -451,9 +451,9 @@\n      * This value is only being used if no explicit {@code @Column(scale=n)} is set or n is zero.\n      * Use {@code @Column(scale=-1)} to disable the explicit fraction part in the SQL generator.\n      * @see #fractionalTypeNameSet\n-     * @see #getFractionLength(Column, String)\n+     * @see #getDateFractionDigits(Column, String)\n      */\n-    public int defaultFractionLength = 6;\n+    public int dateFractionDigits = 6;\n \n \n     protected final Set<String> typeModifierSet = new HashSet<>();\n@@ -2009,7 +2009,7 @@ protected String appendSize(Column col, String typeName) {\n                 colSize = col.getDecimalDigits() == -1 ? 0 : col.getDecimalDigits();\n             }\n             else {\n-                colSize = getFractionLength(col, typeName);\n+                colSize = getDateFractionDigits(col, typeName);\n             }\n             size = \"(\" + colSize + \")\";\n         } else if (colSize > 0) {\n@@ -2030,8 +2030,8 @@ protected String appendSize(Column col, String typeName) {\n      * @return the fraction length of types which have a fraction\n      * @see #fractionalTypeNameSet\n      */\n-    protected int getFractionLength(Column col, String typeName) {\n-        return defaultFractionLength;\n+    protected int getDateFractionDigits(Column col, String typeName) {\n+        return dateFractionDigits;\n     }\n \n     /**"},{"sha":"c377954fc8ba6aeed473640e658d3cdf73dbf85a","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/MariaDBDictionary.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/a7969c120bfba06b883f319788fc50ca0ef06b69/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/MariaDBDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/a7969c120bfba06b883f319788fc50ca0ef06b69/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/MariaDBDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/MariaDBDictionary.java?ref=a7969c120bfba06b883f319788fc50ca0ef06b69","patch":"@@ -166,7 +166,7 @@ public MariaDBDictionary() {\n \n         fixedSizeTypeNameSet.remove(\"NUMERIC\");\n \n-        defaultFractionLength = 0;\n+        dateFractionDigits = 0;\n     }\n \n     @Override"},{"sha":"31aa326810abffda77181cb1eb9caf0bb3031335","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/MySQLDictionary.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/a7969c120bfba06b883f319788fc50ca0ef06b69/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/MySQLDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/a7969c120bfba06b883f319788fc50ca0ef06b69/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/MySQLDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/MySQLDictionary.java?ref=a7969c120bfba06b883f319788fc50ca0ef06b69","patch":"@@ -167,7 +167,7 @@ public MySQLDictionary() {\n \n         fixedSizeTypeNameSet.remove(\"NUMERIC\");\n \n-        defaultFractionLength = 0;\n+        dateFractionDigits = 0;\n     }\n \n     @Override"},{"sha":"27ebac7e25e21392abe48c15ded58b2348a87166","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/TestMixedMappingLocation.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/a7969c120bfba06b883f319788fc50ca0ef06b69/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/TestMixedMappingLocation.java","raw_url":"https://github.com/apache/openjpa/raw/a7969c120bfba06b883f319788fc50ca0ef06b69/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/TestMixedMappingLocation.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/TestMixedMappingLocation.java?ref=a7969c120bfba06b883f319788fc50ca0ef06b69","patch":"@@ -33,7 +33,7 @@ protected String getPersistenceUnitName() {\n     @Override\n     public void setUp() {\n         setUp(DROP_TABLES,\n-                \"openjpa.jdbc.DBDictionary\", \"(defaultFractionLength=6)\",\n+                \"openjpa.jdbc.DBDictionary\", \"(dateFractionDigits=6)\",\n                 MixedMappingLocationEmbeddedId.class, MixedMappingLocation.class);\n     }\n     /**"},{"sha":"7d18673278eb8d7e751a7f94fc4a5fbea1dbaf6b","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/TestExplicitAccess.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/a7969c120bfba06b883f319788fc50ca0ef06b69/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/TestExplicitAccess.java","raw_url":"https://github.com/apache/openjpa/raw/a7969c120bfba06b883f319788fc50ca0ef06b69/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/TestExplicitAccess.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/TestExplicitAccess.java?ref=a7969c120bfba06b883f319788fc50ca0ef06b69","patch":"@@ -41,7 +41,7 @@\n     @Override\n     public void setUp() {\n         setUp(CLEAR_TABLES,\n-            \"openjpa.jdbc.DBDictionary\", \"(defaultFractionLength=6)\",\n+            \"openjpa.jdbc.DBDictionary\", \"(dateFractionDigits=6)\",\n             PropAccess.class, FieldAccess.class,\n             DefFieldMixedPropAccess.class , DefPropMixedFieldAccess.class,\n             AbstractMappedSuperField.class, PropertySub.class,"},{"sha":"7d047b087f03dea7dfb19f04e37a329c6ee7ea84","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/TestXMLExplicitAccess.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/a7969c120bfba06b883f319788fc50ca0ef06b69/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/TestXMLExplicitAccess.java","raw_url":"https://github.com/apache/openjpa/raw/a7969c120bfba06b883f319788fc50ca0ef06b69/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/TestXMLExplicitAccess.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/TestXMLExplicitAccess.java?ref=a7969c120bfba06b883f319788fc50ca0ef06b69","patch":"@@ -34,7 +34,7 @@\n     @Override\n     public void setUp() throws Exception {\n         super.setUp(CLEAR_TABLES,\n-                \"openjpa.jdbc.DBDictionary\", \"(defaultFractionLength=6)\");\n+                \"openjpa.jdbc.DBDictionary\", \"(dateFractionDigits=6)\");\n     }\n \n "},{"sha":"636ccec7a7bd6be2bae7f5224374c3a06e2b0c2d","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/maps/m2mmapex10/TestMany2ManyMapEx10.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/a7969c120bfba06b883f319788fc50ca0ef06b69/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/maps/m2mmapex10/TestMany2ManyMapEx10.java","raw_url":"https://github.com/apache/openjpa/raw/a7969c120bfba06b883f319788fc50ca0ef06b69/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/maps/m2mmapex10/TestMany2ManyMapEx10.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/maps/m2mmapex10/TestMany2ManyMapEx10.java?ref=a7969c120bfba06b883f319788fc50ca0ef06b69","patch":"@@ -60,7 +60,7 @@\n     @Override\n     public void setUp() {\n         super.setUp(DROP_TABLES,\n-                \"openjpa.jdbc.DBDictionary\", \"(defaultFractionLength=6)\",\n+                \"openjpa.jdbc.DBDictionary\", \"(dateFractionDigits=6)\",\n                 EmployeePK.class, PhonePK.class,\n                 Employee.class, PhoneNumber.class);\n         createObj();"},{"sha":"4fc7b6c0970ec4e66cdfd6224158c9fab0590d6f","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestHintedQuery.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/a7969c120bfba06b883f319788fc50ca0ef06b69/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestHintedQuery.java","raw_url":"https://github.com/apache/openjpa/raw/a7969c120bfba06b883f319788fc50ca0ef06b69/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestHintedQuery.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestHintedQuery.java?ref=a7969c120bfba06b883f319788fc50ca0ef06b69","patch":"@@ -39,7 +39,7 @@\n     @Override\n     public void setUp() {\n         super.setUp(CLEAR_TABLES,\n-                \"openjpa.jdbc.DBDictionary\", \"(defaultFractionLength=6)\",\n+                \"openjpa.jdbc.DBDictionary\", \"(dateFractionDigits=6)\",\n                 TimeKeeper.class);\n     }\n "},{"sha":"90c9cbd1f38eb7101c4ac62dc2bd8390db68eb21","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestTemporalTypeQueryParameterBinding.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/a7969c120bfba06b883f319788fc50ca0ef06b69/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestTemporalTypeQueryParameterBinding.java","raw_url":"https://github.com/apache/openjpa/raw/a7969c120bfba06b883f319788fc50ca0ef06b69/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestTemporalTypeQueryParameterBinding.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestTemporalTypeQueryParameterBinding.java?ref=a7969c120bfba06b883f319788fc50ca0ef06b69","patch":"@@ -64,7 +64,7 @@\n     @Override\n     public void setUp() throws Exception {\n         super.setUp(CLEAR_TABLES,\n-                \"openjpa.jdbc.DBDictionary\", \"(defaultFractionLength=6)\",\n+                \"openjpa.jdbc.DBDictionary\", \"(dateFractionDigits=6)\",\n                 TimeKeeper.class, TimeEntity.class);\n         em = emf.createEntityManager();\n "},{"sha":"60bdc1639bf7c6469cd651d921b399c9866a95e8","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/TestSimpleXmlEntity.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/a7969c120bfba06b883f319788fc50ca0ef06b69/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/TestSimpleXmlEntity.java","raw_url":"https://github.com/apache/openjpa/raw/a7969c120bfba06b883f319788fc50ca0ef06b69/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/TestSimpleXmlEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/TestSimpleXmlEntity.java?ref=a7969c120bfba06b883f319788fc50ca0ef06b69","patch":"@@ -27,7 +27,7 @@\n     @Override\n     public void setUp() {\n         setUp(CLEAR_TABLES,\n-                \"openjpa.jdbc.DBDictionary\", \"(defaultFractionLength=6)\",\n+                \"openjpa.jdbc.DBDictionary\", \"(dateFractionDigits=6)\",\n                 org.apache.openjpa.persistence.embed.attrOverrides.AnnoOverEmbed.class);\n     }\n "},{"sha":"9c29a77ca6b7d254ac2c27878ac502613e8a8f17","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/TestXmlOverrideEntity.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/a7969c120bfba06b883f319788fc50ca0ef06b69/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/TestXmlOverrideEntity.java","raw_url":"https://github.com/apache/openjpa/raw/a7969c120bfba06b883f319788fc50ca0ef06b69/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/TestXmlOverrideEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/TestXmlOverrideEntity.java?ref=a7969c120bfba06b883f319788fc50ca0ef06b69","patch":"@@ -36,7 +36,7 @@\n     @Override\n     public void setUp() throws ClassNotFoundException {\n         setUp(CLEAR_TABLES,\n-                \"openjpa.jdbc.DBDictionary\", \"(defaultFractionLength=6)\",\n+                \"openjpa.jdbc.DBDictionary\", \"(dateFractionDigits=6)\",\n                 org.apache.openjpa.persistence.embed.attrOverrides.AnnoOverEmbed.class);\n \n         // make sure that XmlOverrideEntity is registered for our metadata tests"}]}

