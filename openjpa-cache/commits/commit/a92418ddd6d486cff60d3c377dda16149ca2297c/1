{"sha":"a92418ddd6d486cff60d3c377dda16149ca2297c","node_id":"MDY6Q29tbWl0MjA2MzY0OmE5MjQxOGRkZDZkNDg2Y2ZmNjBkM2MzNzdkZGExNjE0OWNhMjI5N2M=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2007-09-28T17:13:41Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2007-09-28T17:13:41Z"},"message":"OPENJPA-388\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@580426 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"528f3e6d38d6c788c9225ab0bea07806334c5988","url":"https://api.github.com/repos/apache/openjpa/git/trees/528f3e6d38d6c788c9225ab0bea07806334c5988"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/a92418ddd6d486cff60d3c377dda16149ca2297c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/a92418ddd6d486cff60d3c377dda16149ca2297c","html_url":"https://github.com/apache/openjpa/commit/a92418ddd6d486cff60d3c377dda16149ca2297c","comments_url":"https://api.github.com/repos/apache/openjpa/commits/a92418ddd6d486cff60d3c377dda16149ca2297c/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"6f43ce7d40f545a2fd88f0feb752aab16985157c","url":"https://api.github.com/repos/apache/openjpa/commits/6f43ce7d40f545a2fd88f0feb752aab16985157c","html_url":"https://github.com/apache/openjpa/commit/6f43ce7d40f545a2fd88f0feb752aab16985157c"}],"stats":{"total":7,"additions":5,"deletions":2},"files":[{"sha":"196033656b3700f571c571ea89857d74df1726d1","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/ant/MappingToolTask.java","status":"modified","additions":5,"deletions":2,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/a92418ddd6d486cff60d3c377dda16149ca2297c/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/ant/MappingToolTask.java","raw_url":"https://github.com/apache/openjpa/raw/a92418ddd6d486cff60d3c377dda16149ca2297c/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/ant/MappingToolTask.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/ant/MappingToolTask.java?ref=a92418ddd6d486cff60d3c377dda16149ca2297c","patch":"@@ -176,7 +176,10 @@ protected void executeOn(String[] files)\n         if (MappingTool.ACTION_IMPORT.equals(flags.action))\n             assertFiles(files);\n \n-        ClassLoader loader = getClassLoader();\n+        ClassLoader loader =\n+            (ClassLoader) AccessController.doPrivileged(J2DoPrivHelper\n+                    .newTemporaryClassLoaderAction(getClassLoader()));\n+        \n         if (flags.meta && MappingTool.ACTION_ADD.equals(flags.action))\n             flags.metaDataFile = Files.getFile(file, loader);\n         else\n@@ -190,7 +193,7 @@ protected void executeOn(String[] files)\n             J2DoPrivHelper.getClassLoaderAction(MappingTool.class)));\n         JDBCConfiguration conf = (JDBCConfiguration) getConfiguration();\n         conf.setClassResolver(resolver);\n-\n+        \n         if (!MappingTool.run(conf, files, flags, loader))\n             throw new BuildException(_loc.get(\"bad-conf\", \"MappingToolTask\")\n                 .getMessage());"}]}

