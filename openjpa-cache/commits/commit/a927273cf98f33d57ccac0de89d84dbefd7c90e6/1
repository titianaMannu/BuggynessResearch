{"sha":"a927273cf98f33d57ccac0de89d84dbefd7c90e6","node_id":"MDY6Q29tbWl0MjA2MzY0OmE5MjcyNzNjZjk4ZjMzZDU3Y2NhYzBkZTg5ZDg0ZGJlZmQ3YzkwZTY=","commit":{"author":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-12-16T21:29:51Z"},"committer":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-12-16T21:29:51Z"},"message":"OPENJPA-1900: Fix ClassCastException when serializing a proxy for an Entity that exists in an active persistence context. Patch contributed by Mark Struberg.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1050169 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"6b232506182aeb429dc77f5a2959440b6eb54e1b","url":"https://api.github.com/repos/apache/openjpa/git/trees/6b232506182aeb429dc77f5a2959440b6eb54e1b"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/a927273cf98f33d57ccac0de89d84dbefd7c90e6","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/a927273cf98f33d57ccac0de89d84dbefd7c90e6","html_url":"https://github.com/apache/openjpa/commit/a927273cf98f33d57ccac0de89d84dbefd7c90e6","comments_url":"https://api.github.com/repos/apache/openjpa/commits/a927273cf98f33d57ccac0de89d84dbefd7c90e6/comments","author":null,"committer":null,"parents":[{"sha":"b6024187bad23df193afcfdb1fcdf0e247641642","url":"https://api.github.com/repos/apache/openjpa/commits/b6024187bad23df193afcfdb1fcdf0e247641642","html_url":"https://github.com/apache/openjpa/commit/b6024187bad23df193afcfdb1fcdf0e247641642"}],"stats":{"total":14,"additions":9,"deletions":5},"files":[{"sha":"bcbe973fa5a96ba9be8166e6cb1c0bcb5425c150","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/Proxies.java","status":"modified","additions":9,"deletions":5,"changes":14,"blob_url":"https://github.com/apache/openjpa/blob/a927273cf98f33d57ccac0de89d84dbefd7c90e6/openjpa-kernel/src/main/java/org/apache/openjpa/util/Proxies.java","raw_url":"https://github.com/apache/openjpa/raw/a927273cf98f33d57ccac0de89d84dbefd7c90e6/openjpa-kernel/src/main/java/org/apache/openjpa/util/Proxies.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/Proxies.java?ref=a927273cf98f33d57ccac0de89d84dbefd7c90e6","patch":"@@ -127,8 +127,15 @@ public static Object writeReplace(Proxy proxy, boolean detachable) {\n             ClassMetaData meta = null;          // if null, no proxies?\n             boolean useDSFForUnproxy = false;   // default to false for old 1.0 behavior\n \n-            // DetachedStateMnager has no context or metadata, so we can't get configuration settings\n-            if (!proxy.getOwner().isDetached()) {\n+            // Don't rely on sm.isDetached() method because if we are serializing an attached Entity\n+            // the sm will still be a StateManagerImpl, but isDetached() will return true.\n+\n+            // Using a DetachedStateManager, so use the new flag since there is no context or\n+            // metadata\n+            if (sm instanceof DetachedStateManager) {\n+                useDSFForUnproxy = ((DetachedStateManager) sm).getUseDSFForUnproxy();\n+            } else{\n+                // DetachedStateManager has no context or metadata, so we can't get configuration settings\n                 Compatibility compat = null;\n                 meta = sm.getMetaData();\n                 if (meta != null) {\n@@ -142,9 +149,6 @@ public static Object writeReplace(Proxy proxy, boolean detachable) {\n                     // new 2.0 behavior of using DetachedStateField to determine unproxy during serialization\n                     useDSFForUnproxy = !compat.getIgnoreDetachedStateFieldForProxySerialization();\n                 }\n-            } else {\n-                // Using a DetachedStateManager, so use the new flag since there is no context or metadata\n-                useDSFForUnproxy = ((DetachedStateManager)sm).getUseDSFForUnproxy();\n             }\n             \n             if (useDSFForUnproxy) {"}]}

