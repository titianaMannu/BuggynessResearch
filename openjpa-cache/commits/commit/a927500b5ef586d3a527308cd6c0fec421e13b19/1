{"sha":"a927500b5ef586d3a527308cd6c0fec421e13b19","node_id":"MDY6Q29tbWl0MjA2MzY0OmE5Mjc1MDBiNWVmNTg2ZDNhNTI3MzA4Y2Q2YzBmZWM0MjFlMTNiMTk=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2008-05-12T19:43:57Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2008-05-12T19:43:57Z"},"message":"OPENJPA-589. Porting patch from trunk.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/1.1.x@655617 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"b431f3b54830a2d0a2cf59d335a3150913999b3c","url":"https://api.github.com/repos/apache/openjpa/git/trees/b431f3b54830a2d0a2cf59d335a3150913999b3c"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/a927500b5ef586d3a527308cd6c0fec421e13b19","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/a927500b5ef586d3a527308cd6c0fec421e13b19","html_url":"https://github.com/apache/openjpa/commit/a927500b5ef586d3a527308cd6c0fec421e13b19","comments_url":"https://api.github.com/repos/apache/openjpa/commits/a927500b5ef586d3a527308cd6c0fec421e13b19/comments","author":null,"committer":null,"parents":[{"sha":"194f59f02f524211a514bed41882fef9297357d0","url":"https://api.github.com/repos/apache/openjpa/commits/194f59f02f524211a514bed41882fef9297357d0","html_url":"https://github.com/apache/openjpa/commit/194f59f02f524211a514bed41882fef9297357d0"}],"stats":{"total":175,"additions":167,"deletions":8},"files":[{"sha":"12f98b6484a006416b7332bfa9a8b339daf5d8f1","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractPCData.java","status":"modified","additions":11,"deletions":8,"changes":19,"blob_url":"https://github.com/apache/openjpa/blob/a927500b5ef586d3a527308cd6c0fec421e13b19/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractPCData.java","raw_url":"https://github.com/apache/openjpa/raw/a927500b5ef586d3a527308cd6c0fec421e13b19/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractPCData.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractPCData.java?ref=a927500b5ef586d3a527308cd6c0fec421e13b19","patch":"@@ -87,16 +87,19 @@ protected Object toField(OpenJPAStateManager sm, FieldMetaData fmd,\n                 Map m = (Map) data;\n                 Map m2 = (Map) sm.newFieldProxy(fmd.getIndex());\n                 Collection keys = new ArrayList (m.size());\n+                Collection values = new ArrayList(m.size());\n+                Map.Entry e;\n \n-                for (Iterator mi = m.entrySet().iterator(); mi.hasNext();)\n-                    keys.add(mi.next());\n-\n+                for (Iterator<Map.Entry> mi = m.entrySet().iterator(); mi.hasNext();) {\n+                    e = mi.next();\n+                    keys.add(e.getKey());\n+                    values.add(e.getValue());\n+                }\n                 Object[] keyArray = keys.toArray();\n-                Object[] values = toNestedFields(sm, fmd.getElement(),\n-                    keys, fetch, context).toArray();\n-                int idx = 0;\n-                for (Iterator mi = m.entrySet().iterator(); mi.hasNext(); idx++)\n-                    m2.put(keyArray[idx], values[idx]);\n+                Object[] valueArray = toNestedFields(sm, fmd.getElement(),\n+                    values, fetch, context).toArray();\n+                for (int idx = 0; idx < keyArray.length; idx++)    \n+                    m2.put(keyArray[idx], valueArray[idx]);\n \n                 return m2;\n             case JavaTypes.ARRAY:"},{"sha":"21b97149162305f0e90893fc8fbfb3fcb80cfd32","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestM2MInDataCache.java","status":"added","additions":80,"deletions":0,"changes":80,"blob_url":"https://github.com/apache/openjpa/blob/a927500b5ef586d3a527308cd6c0fec421e13b19/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestM2MInDataCache.java","raw_url":"https://github.com/apache/openjpa/raw/a927500b5ef586d3a527308cd6c0fec421e13b19/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestM2MInDataCache.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestM2MInDataCache.java?ref=a927500b5ef586d3a527308cd6c0fec421e13b19","patch":"@@ -0,0 +1,80 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.datacache;\n+\n+import javax.persistence.EntityManager;\n+import org.apache.openjpa.persistence.datacache.common.apps.M2MEntityE;\n+import org.apache.openjpa.persistence.datacache.common.apps.M2MEntityF;\n+import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n+\n+public class TestM2MInDataCache extends SingleEMFTestCase {\n+    public void setUp() {\n+        setUp(\"openjpa.DataCache\", \"true\", \n+            \"openjpa.RemoteCommitProvider\", \"sjvm\", \n+            M2MEntityE.class,\n+            M2MEntityF.class, CLEAR_TABLES);\n+    }\n+\n+    /**\n+     * Test if child list is in order after new child list is added in setup().\n+     *\n+     */\n+    public void testM2MDataCache(){\n+    \tEntityManager em = emf.createEntityManager();\n+        em.getTransaction().begin();\n+\n+        M2MEntityE e1 = new M2MEntityE();\n+        e1.setId(1);\n+        e1.setName(\"ABC\");\n+        em.persist(e1);\n+        M2MEntityE e2 = new M2MEntityE();\n+        e2.setId(2);\n+        e2.setName(\"DEF\");\n+        em.persist(e2);\n+        \n+        M2MEntityF f1 = new M2MEntityF();\n+        f1.setId(10);\n+        em.persist(f1);\n+        M2MEntityF f2 = new M2MEntityF();\n+        f2.setId(20);\n+        em.persist(f2);\n+        \n+        e1.getEntityF().put(f1.getId(), f1);\n+        e1.getEntityF().put(f2.getId(), f2);\n+        e2.getEntityF().put(f1.getId(), f1);\n+        e2.getEntityF().put(f2.getId(), f2);\n+        \n+        f1.getEntityE().put(e1.getName(), e1);\n+        f1.getEntityE().put(e2.getName(), e2);\n+        f2.getEntityE().put(e1.getName(), e1);\n+        f2.getEntityE().put(e2.getName(), e2);\n+        e1.print();\n+        e2.print();\n+        f1.print();\n+        f2.print();\n+        em.getTransaction().commit();\n+        em.close();\n+\n+        em = emf.createEntityManager();\n+        M2MEntityE e1a = em.find(M2MEntityE.class, 1);\n+        M2MEntityE e2a = em.find(M2MEntityE.class, 2);\n+        M2MEntityF f1a = em.find(M2MEntityF.class, 10);\n+        M2MEntityF f2a = em.find(M2MEntityF.class, 20);\n+    }\n+}"},{"sha":"284150ce6d3b17ff9f3beb93e6d82f6896cf0a59","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/common/apps/M2MEntityE.java","status":"added","additions":43,"deletions":0,"changes":43,"blob_url":"https://github.com/apache/openjpa/blob/a927500b5ef586d3a527308cd6c0fec421e13b19/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/common/apps/M2MEntityE.java","raw_url":"https://github.com/apache/openjpa/raw/a927500b5ef586d3a527308cd6c0fec421e13b19/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/common/apps/M2MEntityE.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/common/apps/M2MEntityE.java?ref=a927500b5ef586d3a527308cd6c0fec421e13b19","patch":"@@ -0,0 +1,43 @@\n+package org.apache.openjpa.persistence.datacache.common.apps;\n+import javax.persistence.*;\n+import java.util.*;\n+\n+@Entity\n+public class M2MEntityE  {\n+\t@Id private int id;\n+\tprivate String name;\n+\n+\t@ManyToMany\n+\t@MapKey(name=\"id\")\n+\tprivate Map<Integer,M2MEntityF> entityf;\n+\t\n+\tpublic M2MEntityE() {\n+\t\tentityf = new HashMap<Integer,M2MEntityF>();\n+\t\tname=\"entitye\";\n+\t}\n+\t\t\n+\tpublic Map<Integer,M2MEntityF> getEntityF() {\n+\t\treturn entityf;\n+\t}\n+\tpublic int getId() {\n+\t\treturn id;\n+\t}\n+\tpublic void setId(int id) {\n+\t\tthis.id = id;\n+\t}\n+\tpublic String toString(){\n+\t\treturn \"EntityE:\"+id;\n+\t}\n+\tpublic void print(){\n+\t\tSystem.out.println(\"EntityD id=\"+id+\" entityc=\"+ entityf);\n+\t}\n+\n+\tpublic String getName() {\n+\t\treturn name;\n+\t}\n+\n+\tpublic void setName(String name) {\n+\t\tthis.name = name;\n+\t}\n+\n+}"},{"sha":"4b139e2a285eca93d6f476a700a845ae5b5f3257","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/common/apps/M2MEntityF.java","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/apache/openjpa/blob/a927500b5ef586d3a527308cd6c0fec421e13b19/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/common/apps/M2MEntityF.java","raw_url":"https://github.com/apache/openjpa/raw/a927500b5ef586d3a527308cd6c0fec421e13b19/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/common/apps/M2MEntityF.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/common/apps/M2MEntityF.java?ref=a927500b5ef586d3a527308cd6c0fec421e13b19","patch":"@@ -0,0 +1,33 @@\n+package org.apache.openjpa.persistence.datacache.common.apps;\n+\n+import javax.persistence.*;\n+import java.util.*;\n+\n+@Entity\n+public class M2MEntityF  {\n+\t@Id private int id;\n+\n+\t@ManyToMany(mappedBy=\"entityf\")\n+\t@MapKey(name=\"name\")\n+\tprivate Map<String, M2MEntityE> entitye;\n+\t\n+\tpublic M2MEntityF() {\n+\t\tentitye = new HashMap<String,M2MEntityE>();\n+\t}\n+\tpublic Map<String, M2MEntityE> getEntityE() {\n+\t\treturn entitye;\n+\t}\n+\tpublic int getId() {\n+\t\treturn id;\n+\t}\n+\tpublic void setId(int id) {\n+\t\tthis.id = id;\n+\t}\n+\tpublic String toString(){\n+\t\treturn \"EntityF:\"+id;\n+\t}\n+\tpublic void print(){\n+\t\tSystem.out.println(\"EntityF id=\"+id+\" entitye=\"+ entitye);\n+\t}\n+\n+}"}]}

