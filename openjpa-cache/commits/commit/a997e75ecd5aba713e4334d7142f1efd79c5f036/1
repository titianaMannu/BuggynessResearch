{"sha":"a997e75ecd5aba713e4334d7142f1efd79c5f036","node_id":"MDY6Q29tbWl0MjA2MzY0OmE5OTdlNzVlY2Q1YWJhNzEzZTQzMzRkNzE0MmYxZWZkNzljNWYwMzY=","commit":{"author":{"name":"Milosz Tylenda","email":"mtylenda@apache.org","date":"2011-04-16T11:48:01Z"},"committer":{"name":"Milosz Tylenda","email":"mtylenda@apache.org","date":"2011-04-16T11:48:01Z"},"message":"OPENJPA-1932: Documentation update: Change JSE 6 Javadoc base URL from http://java.sun.com/javase/6/docs/api/ to http://download.oracle.com/javase/6/docs/api/.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1093971 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"b63966dbf888b04155986f1e216fb1abedd2359b","url":"https://api.github.com/repos/apache/openjpa/git/trees/b63966dbf888b04155986f1e216fb1abedd2359b"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/a997e75ecd5aba713e4334d7142f1efd79c5f036","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/a997e75ecd5aba713e4334d7142f1efd79c5f036","html_url":"https://github.com/apache/openjpa/commit/a997e75ecd5aba713e4334d7142f1efd79c5f036","comments_url":"https://api.github.com/repos/apache/openjpa/commits/a997e75ecd5aba713e4334d7142f1efd79c5f036/comments","author":null,"committer":null,"parents":[{"sha":"9223144782ea6369c611645e667a2149b1bd170d","url":"https://api.github.com/repos/apache/openjpa/commits/9223144782ea6369c611645e667a2149b1bd170d","html_url":"https://github.com/apache/openjpa/commit/9223144782ea6369c611645e667a2149b1bd170d"}],"stats":{"total":16,"additions":8,"deletions":8},"files":[{"sha":"e22b075366ea5dec1cf93f7041839ab1f12e82de","filename":"openjpa-project/src/doc/manual/ref_guide_logging.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/a997e75ecd5aba713e4334d7142f1efd79c5f036/openjpa-project/src/doc/manual/ref_guide_logging.xml","raw_url":"https://github.com/apache/openjpa/raw/a997e75ecd5aba713e4334d7142f1efd79c5f036/openjpa-project/src/doc/manual/ref_guide_logging.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_logging.xml?ref=a997e75ecd5aba713e4334d7142f1efd79c5f036","patch":"@@ -429,7 +429,7 @@ Commons Logging library act as a wrapper around a number of popular logging\n APIs, including the\n <ulink url=\"http://logging.apache.org/log4j/1.2/index.html\"> Jakarta Log4J\n </ulink> project, and the native\n-<ulink url=\"http://java.sun.com/javase/6/docs/api/java/util/logging/package-summary.html\">\n+<ulink url=\"http://download.oracle.com/javase/6/docs/api/java/util/logging/package-summary.html\">\n java.util.logging</ulink> package in JDK.\n         </para>\n         <para>\n@@ -451,7 +451,7 @@ configuration will be the same as was discussed in the Log4J section above.\n             <para>\n When using JDK logging in conjunction with OpenJPA's Commons Logging\n support, logging will proceed through Java's built-in logging provided by the\n-<ulink url=\"http://java.sun.com/javase/6/docs/api/java/util/logging/package-summary.html\">\n+<ulink url=\"http://download.oracle.com/javase/6/docs/api/java/util/logging/package-summary.html\">\n java.util.logging</ulink> package. For details on configuring the built-in\n logging system, please see the\n <ulink url=\"http://java.sun.com/javase/6/docs/technotes/guides/logging/overview.html\">"},{"sha":"fddddfe04f956058e2c5ba281d1f169c32013f1d","filename":"openjpa-project/src/doc/manual/ref_guide_slice.xml","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/a997e75ecd5aba713e4334d7142f1efd79c5f036/openjpa-project/src/doc/manual/ref_guide_slice.xml","raw_url":"https://github.com/apache/openjpa/raw/a997e75ecd5aba713e4334d7142f1efd79c5f036/openjpa-project/src/doc/manual/ref_guide_slice.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_slice.xml?ref=a997e75ecd5aba713e4334d7142f1efd79c5f036","patch":"@@ -555,15 +555,15 @@ the JDBC connection URL of a slice.\n         for database operations such as query or flush on individual slices. \n         The value of the property is a \n         fully-qualified class name that implements \n-        <ulink url=\"http://java.sun.com/javase/6/docs/api/java/util/concurrent/ExecutorService.html\">\n+        <ulink url=\"http://download.oracle.com/javase/6/docs/api/java/util/concurrent/ExecutorService.html\">\n         <classname>java.util.concurrent.ExecutorService</classname>\n         </ulink> interface.  \n         Two pre-defined pools can be chosen via their aliases namely \n         <classname>fixed</classname> or <classname>cached</classname>.\n         </para>\n         <para>\n         The pre-defined alias <classname>cached</classname> activates a \n-        <ulink url=\"http://java.sun.com/javase/6/docs/api/java/util/concurrent/Executors.html#newCachedThreadPool()\">cached thread pool</ulink>. \n+        <ulink url=\"http://download.oracle.com/javase/6/docs/api/java/util/concurrent/Executors.html#newCachedThreadPool()\">cached thread pool</ulink>. \n         A cached thread pool creates new threads as needed, but will reuse \n         previously constructed threads when they are available. This pool \n         is suitable in scenarios that execute many short-lived asynchronous tasks.\n@@ -573,23 +573,23 @@ the JDBC connection URL of a slice.\n         </para>\n         <para>\n         The <classname>fixed</classname> alias activates a \n-        <ulink url=\"http://java.sun.com/javase/6/docs/api/java/util/concurrent/Executors.html#newFixedThreadPool(int)\">fixed thread pool</ulink>.\n+        <ulink url=\"http://download.oracle.com/javase/6/docs/api/java/util/concurrent/Executors.html#newFixedThreadPool(int)\">fixed thread pool</ulink>.\n         The fixed thread pool can be further parameterized with \n         <classname>CorePoolSize</classname>, <classname>MaximumPoolSize</classname>, \n         <classname>KeepAliveTime</classname> and <classname>RejectedExecutionHandler</classname>. \n         The meaning of these parameters are described in \n-        <ulink url=\"http://java.sun.com/javase/6/docs/api/java/util/concurrent/ThreadPoolExecutor.html\">JavaDoc</ulink>.\n+        <ulink url=\"http://download.oracle.com/javase/6/docs/api/java/util/concurrent/ThreadPoolExecutor.html\">JavaDoc</ulink>.\n         The users can exercise finer control on thread pool behavior via these\n         parameters.\n         By default, the core pool size is <classname>10</classname>, maximum pool size is\n         also <classname>10</classname>, keep alive time is <classname>60</classname> seconds and \n         rejected execution is \n-        <ulink url=\"http://java.sun.com/javase/6/docs/api/java/util/concurrent/ThreadPoolExecutor.AbortPolicy.html\">aborted</ulink>.\n+        <ulink url=\"http://download.oracle.com/javase/6/docs/api/java/util/concurrent/ThreadPoolExecutor.AbortPolicy.html\">aborted</ulink>.\n         </para>\n         <para>\n         Both of the pre-defined aliases can be parameterized with a fully-qualified\n         class name that implements \n-        <ulink url=\"http://java.sun.com/javase/6/docs/api/java/util/concurrent/ThreadFactory.html\">\n+        <ulink url=\"http://download.oracle.com/javase/6/docs/api/java/util/concurrent/ThreadFactory.html\">\n         <classname>java.util.concurrent.ThreadFactory</classname>\n         </ulink> interface.\n         </para>"}]}

