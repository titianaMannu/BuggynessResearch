{"sha":"a9ea5c1817ff24274446213e6969f97eae0e7373","node_id":"MDY6Q29tbWl0MjA2MzY0OmE5ZWE1YzE4MTdmZjI0Mjc0NDQ2MjEzZTY5NjlmOTdlYWUwZTczNzM=","commit":{"author":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-09-15T15:38:12Z"},"committer":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-09-15T15:38:12Z"},"message":"OPENJPA-1151: fix test case error for MySQL. DB object in MySQL is case-sensitive.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@815369 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"33fcfbbfae44eabce3990680583e5f6faafd925b","url":"https://api.github.com/repos/apache/openjpa/git/trees/33fcfbbfae44eabce3990680583e5f6faafd925b"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/a9ea5c1817ff24274446213e6969f97eae0e7373","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/a9ea5c1817ff24274446213e6969f97eae0e7373","html_url":"https://github.com/apache/openjpa/commit/a9ea5c1817ff24274446213e6969f97eae0e7373","comments_url":"https://api.github.com/repos/apache/openjpa/commits/a9ea5c1817ff24274446213e6969f97eae0e7373/comments","author":null,"committer":null,"parents":[{"sha":"c353d0541e8b246dbd1b584d5228603506216880","url":"https://api.github.com/repos/apache/openjpa/commits/c353d0541e8b246dbd1b584d5228603506216880","html_url":"https://github.com/apache/openjpa/commit/c353d0541e8b246dbd1b584d5228603506216880"}],"stats":{"total":6,"additions":3,"deletions":3},"files":[{"sha":"c539fa3e10de729a1dc878b77ccea07af336a714","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/AbstractQueryCacheTest.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/a9ea5c1817ff24274446213e6969f97eae0e7373/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/AbstractQueryCacheTest.java","raw_url":"https://github.com/apache/openjpa/raw/a9ea5c1817ff24274446213e6969f97eae0e7373/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/AbstractQueryCacheTest.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/cache/AbstractQueryCacheTest.java?ref=a9ea5c1817ff24274446213e6969f97eae0e7373","patch":"@@ -234,11 +234,11 @@ public void testEviction() {\n         em.getTransaction().begin();\n \n         String insert1 = \n-            \"insert into part(partno,parttype,name,cost,mass)\" +\n+            \"insert into Part(partno,parttype,name,cost,mass)\" +\n             \" values(13,'PartBase','breakes',1000.0,100.0)\";\n         em.createNativeQuery(insert1).executeUpdate();\n         String insert2 = \n-            \"insert into supplier_part(suppliers_sid,supplies_partno)\" + \n+            \"insert into Supplier_Part(suppliers_sid,supplies_partno)\" + \n             \" values(1,13)\";\n         em.createNativeQuery(insert2).executeUpdate();\n \n@@ -248,7 +248,7 @@ public void testEviction() {\n         em = emf.createEntityManager();\n         em.getTransaction().begin();\n \n-        String sql = \"select partno from part where cost > 120 \";\n+        String sql = \"select partno from Part where cost > 120 \";\n         Query nativeq = em.createNativeQuery(sql);\n         int nativelistSize = nativeq.getResultList().size();\n "}]}

