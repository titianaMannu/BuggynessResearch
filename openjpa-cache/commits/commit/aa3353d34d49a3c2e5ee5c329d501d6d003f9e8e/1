{"sha":"aa3353d34d49a3c2e5ee5c329d501d6d003f9e8e","node_id":"MDY6Q29tbWl0MjA2MzY0OmFhMzM1M2QzNGQ0OWEzYzJlNWVlNWMzMjlkNTAxZDZkMDAzZjllOGU=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-06-08T01:18:40Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-06-08T01:18:40Z"},"message":"Reece's test case from OPENJPA-235. I was a bit nervous about the changes to EntityB and EntityC's relationships, but all the existing OpenJPA tests pass, so evidently we did not rely on the particular settings as they were.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@545360 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"e8859f4f6c04a82b5ac41bad866c6c83724a028f","url":"https://api.github.com/repos/apache/openjpa/git/trees/e8859f4f6c04a82b5ac41bad866c6c83724a028f"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/aa3353d34d49a3c2e5ee5c329d501d6d003f9e8e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/aa3353d34d49a3c2e5ee5c329d501d6d003f9e8e","html_url":"https://github.com/apache/openjpa/commit/aa3353d34d49a3c2e5ee5c329d501d6d003f9e8e","comments_url":"https://api.github.com/repos/apache/openjpa/commits/aa3353d34d49a3c2e5ee5c329d501d6d003f9e8e/comments","author":null,"committer":null,"parents":[{"sha":"aea920d171c315bdc8944cce7fb2ba069b82c0f1","url":"https://api.github.com/repos/apache/openjpa/commits/aea920d171c315bdc8944cce7fb2ba069b82c0f1","html_url":"https://github.com/apache/openjpa/commit/aea920d171c315bdc8944cce7fb2ba069b82c0f1"}],"stats":{"total":91,"additions":89,"deletions":2},"files":[{"sha":"c978a027836314550dd7c449f73ca4cb9566e1b1","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/kernel/EntityB.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/aa3353d34d49a3c2e5ee5c329d501d6d003f9e8e/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/kernel/EntityB.java","raw_url":"https://github.com/apache/openjpa/raw/aa3353d34d49a3c2e5ee5c329d501d6d003f9e8e/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/kernel/EntityB.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/kernel/EntityB.java?ref=aa3353d34d49a3c2e5ee5c329d501d6d003f9e8e","patch":"@@ -40,7 +40,7 @@\n \r\n     private String name;\r\n \r\n-    @OneToOne(cascade = CascadeType.ALL, optional = false)\r\n+    @OneToOne(cascade = CascadeType.ALL)\r\n     @JoinColumn(name = \"entityc_id\", referencedColumnName = \"entityc_id\",\r\n         nullable = false)\r\n     @ForeignKey\r"},{"sha":"3c1a9cfbe04e2459e1370baebdb9685ff55c17bb","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/kernel/EntityC.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/aa3353d34d49a3c2e5ee5c329d501d6d003f9e8e/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/kernel/EntityC.java","raw_url":"https://github.com/apache/openjpa/raw/aa3353d34d49a3c2e5ee5c329d501d6d003f9e8e/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/kernel/EntityC.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/kernel/EntityC.java?ref=aa3353d34d49a3c2e5ee5c329d501d6d003f9e8e","patch":"@@ -41,7 +41,7 @@\n \r\n     private String name;\r\n \r\n-    @OneToOne(cascade = CascadeType.ALL, optional = false)\r\n+    @OneToOne(cascade = CascadeType.ALL)\r\n     @JoinColumn(name = \"entityd_id\", referencedColumnName = \"entityd_id\",\r\n         nullable = false)\r\n     @ForeignKey\r"},{"sha":"7d2a5574a3afd1b87932880d10e884752f5c5695","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/kernel/TestNoForeignKeyViolation.java","status":"added","additions":87,"deletions":0,"changes":87,"blob_url":"https://github.com/apache/openjpa/blob/aa3353d34d49a3c2e5ee5c329d501d6d003f9e8e/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/kernel/TestNoForeignKeyViolation.java","raw_url":"https://github.com/apache/openjpa/raw/aa3353d34d49a3c2e5ee5c329d501d6d003f9e8e/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/kernel/TestNoForeignKeyViolation.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/kernel/TestNoForeignKeyViolation.java?ref=aa3353d34d49a3c2e5ee5c329d501d6d003f9e8e","patch":"@@ -0,0 +1,87 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.openjpa.jdbc.kernel;\r\n+\r\n+import javax.persistence.EntityManager;\r\n+\r\n+import org.apache.openjpa.persistence.test.SingleEMFTestCase;\r\n+\r\n+/**\r\n+ * Test that sql statements get flushed in an order which does not violate\r\n+ * non-nullable foreign key constraints on inserts and deletes.\r\n+ *\r\n+ * @author Reece Garrett\r\n+ */\r\n+public class TestNoForeignKeyViolation\r\n+    extends SingleEMFTestCase {\r\n+\r\n+    private EntityA entityA;\r\n+    private EntityB entityB;\r\n+    private EntityC entityC;\r\n+\r\n+    public void setUp() {\r\n+        setUp(EntityA.class, EntityB.class, EntityC.class, EntityD.class);\r\n+\r\n+        entityA = new EntityA();\r\n+        entityC = new EntityC();\r\n+        EntityD entityD = new EntityD();\r\n+        entityA.setName(\"entityA\");\r\n+        entityB = new EntityB();\r\n+        entityB.setName(\"entityB\");\r\n+        entityC.setName(\"entityC\");\r\n+        entityD.setName(\"entityD\");\r\n+        entityA.setEntityB(entityB);\r\n+        entityB.setEntityC(entityC);\r\n+        entityC.setEntityD(entityD);\r\n+    }\r\n+\r\n+    public void testSqlOrder() {\r\n+\r\n+        EntityManager em = emf.createEntityManager();\r\n+        try {\r\n+            em.getTransaction().begin();\r\n+            em.persist(entityA);\r\n+            em.getTransaction().commit();\r\n+\r\n+            EntityD newEntityD = new EntityD();\r\n+            newEntityD.setName(\"newEntityD\");\r\n+            entityC.setEntityD(newEntityD);\r\n+\r\n+            em.getTransaction().begin();\r\n+            em.merge(entityC);\r\n+            em.getTransaction().commit();\r\n+\r\n+            EntityC newEntityC = new EntityC();\r\n+            newEntityC.setName(\"newEntityC\");\r\n+            newEntityD = new EntityD();\r\n+            newEntityD.setName(\"newEntityD\");\r\n+            newEntityC.setEntityD(newEntityD);\r\n+            entityB.setEntityC(newEntityC);\r\n+\r\n+            em.getTransaction().begin();\r\n+            em.merge(entityB);\r\n+            em.getTransaction().commit();\r\n+        }\r\n+        finally {\r\n+            if (em.getTransaction().isActive())\r\n+                em.getTransaction().rollback();\r\n+            em.close();\r\n+        }\r\n+    }\r\n+}\r"}]}

