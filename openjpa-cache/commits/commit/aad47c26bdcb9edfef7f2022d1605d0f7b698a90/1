{"sha":"aad47c26bdcb9edfef7f2022d1605d0f7b698a90","node_id":"MDY6Q29tbWl0MjA2MzY0OmFhZDQ3YzI2YmRjYjllZGZlZjdmMjAyMmQxNjA1ZDBmN2I2OThhOTA=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2006-07-19T21:56:52Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2006-07-19T21:56:52Z"},"message":"cleaned up some dead code\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@423627 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"ea7531151ed85beb07d8a3a0187710a70656b3ae","url":"https://api.github.com/repos/apache/openjpa/git/trees/ea7531151ed85beb07d8a3a0187710a70656b3ae"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/aad47c26bdcb9edfef7f2022d1605d0f7b698a90","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/aad47c26bdcb9edfef7f2022d1605d0f7b698a90","html_url":"https://github.com/apache/openjpa/commit/aad47c26bdcb9edfef7f2022d1605d0f7b698a90","comments_url":"https://api.github.com/repos/apache/openjpa/commits/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/comments","author":null,"committer":null,"parents":[{"sha":"7d1c8fccafcd31919a79edf46969c5662e2704b5","url":"https://api.github.com/repos/apache/openjpa/commits/7d1c8fccafcd31919a79edf46969c5662e2704b5","html_url":"https://github.com/apache/openjpa/commit/7d1c8fccafcd31919a79edf46969c5662e2704b5"}],"stats":{"total":62,"additions":3,"deletions":59},"files":[{"sha":"52139d8fb7537175e3ce44791c4dc98d699bfa1d","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/MappingRepositoryValue.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/MappingRepositoryValue.java","raw_url":"https://github.com/apache/openjpa/raw/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/MappingRepositoryValue.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/MappingRepositoryValue.java?ref=aad47c26bdcb9edfef7f2022d1605d0f7b698a90","patch":"@@ -20,7 +20,6 @@\n import org.apache.openjpa.jdbc.meta.MappingRepository;\n import org.apache.openjpa.lib.conf.Configuration;\n import org.apache.openjpa.lib.conf.PluginValue;\n-import org.apache.openjpa.lib.util.Localizer;\n import serp.util.Strings;\n \n /**\n@@ -33,9 +32,6 @@\n public class MappingRepositoryValue\n     extends PluginValue {\n \n-    private static final Localizer _loc = Localizer.forPackage\n-        (MappingRepositoryValue.class);\n-\n     public MappingRepositoryValue(String prop) {\n         super(prop, true);\n     }"},{"sha":"b0821120e80072ac84c60a4c85c0f6a4432e9b5d","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCFetchConfigurationImpl.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCFetchConfigurationImpl.java","raw_url":"https://github.com/apache/openjpa/raw/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCFetchConfigurationImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCFetchConfigurationImpl.java?ref=aad47c26bdcb9edfef7f2022d1605d0f7b698a90","patch":"@@ -35,7 +35,6 @@\n import org.apache.openjpa.lib.rop.SimpleResultList;\n import org.apache.openjpa.lib.rop.SoftRandomAccessResultList;\n import org.apache.openjpa.lib.rop.WindowResultList;\n-import org.apache.openjpa.lib.util.Localizer;\n \n /**\n  * JDBC extensions to OpenJPA's {@link FetchConfiguration}.\n@@ -49,9 +48,6 @@\n \n     private static final String[] EMPTY_STRINGS = new String[0];\n \n-    private static final Localizer _loc = Localizer.forPackage\n-        (JDBCFetchConfigurationImpl.class);\n-\n     private int _eagerMode = 0;\n     private int _subclassMode = 0;\n     private int _type = 0;"},{"sha":"cdefa992bc2b7ade5719de8de5e68f8a6859ada1","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStoreQuery.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStoreQuery.java","raw_url":"https://github.com/apache/openjpa/raw/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStoreQuery.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStoreQuery.java?ref=aad47c26bdcb9edfef7f2022d1605d0f7b698a90","patch":"@@ -440,7 +440,6 @@ private Number executeBulkOperation(Executor ex, ClassMetaData base,\n         JDBCFetchConfiguration fetch = (JDBCFetchConfiguration)\n             ctx.getFetchConfiguration();\n         DBDictionary dict = _store.getDBDictionary();\n-        int subs = (subclasses) ? Select.SUBS_JOINABLE : Select.SUBS_NONE;\n \n         SQLBuffer[] sql = new SQLBuffer[mappings.length];\n         JDBCExpressionFactory jdbcFactory;"},{"sha":"070f19ef2bf4e21de60eaa45722624a0ed2335d2","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/SQLProjectionResultObjectProvider.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/SQLProjectionResultObjectProvider.java","raw_url":"https://github.com/apache/openjpa/raw/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/SQLProjectionResultObjectProvider.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/SQLProjectionResultObjectProvider.java?ref=aad47c26bdcb9edfef7f2022d1605d0f7b698a90","patch":"@@ -87,7 +87,6 @@ public Object getResultObject()\n         }\n \n         Object[] vals = new Object[_cols];\n-        Integer index;\n         for (int i = 0; i < vals.length; i++)\n             vals[i] = _res.getObject(Numbers.valueOf(i + 1),\n                 JavaSQLTypes.JDBC_DEFAULT, null);"},{"sha":"beb19969b7e093d7b9795bf96b1dbddca11410fa","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/InExpression.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/InExpression.java","raw_url":"https://github.com/apache/openjpa/raw/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/InExpression.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/InExpression.java?ref=aad47c26bdcb9edfef7f2022d1605d0f7b698a90","patch":"@@ -121,7 +121,6 @@ private void orContains(SQLBuffer buf, Select sel, JDBCStore store,\n             buf.append(\"(\");\n \n         Object[] vals;\n-        int len;\n         Column col;\n         for (Iterator itr = coll.iterator(); itr.hasNext();) {\n             vals = (Object[]) itr.next();"},{"sha":"52e5e7047ae3f260befd71bdb2ab717d79c2a26f","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/JDBCExpressionFactory.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/JDBCExpressionFactory.java","raw_url":"https://github.com/apache/openjpa/raw/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/JDBCExpressionFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/JDBCExpressionFactory.java?ref=aad47c26bdcb9edfef7f2022d1605d0f7b698a90","patch":"@@ -47,10 +47,6 @@\n public class JDBCExpressionFactory\n     implements ExpressionFactory {\n \n-    private static final int CACHE_NULL = 0;\n-    private static final int CACHE_JOINS = 1;\n-    private static final int CACHE_FULL = 2;\n-\n     private static final Val NULL = new Null();\n     private static final Val CURRENT_DATE =\n         new CurrentDate(CurrentDate.DATE);"},{"sha":"74cc49c3cf114903b2c9f0b05105c76829cb6fbc","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/SelectConstructor.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/SelectConstructor.java","raw_url":"https://github.com/apache/openjpa/raw/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/SelectConstructor.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/SelectConstructor.java?ref=aad47c26bdcb9edfef7f2022d1605d0f7b698a90","patch":"@@ -290,7 +290,7 @@ public void select(JDBCStore store, ClassMapping mapping,\n         Joins joins = null;\n         if (sel.getSubselectPath() != null)\n             joins = sel.newJoins().setSubselect(sel.getSubselectPath());\n-        JDBCFetchConfiguration fetch = fetchState.getJDBCFetchConfiguration();\n+\n         // build ordering clauses before select so that any eager join\n         // ordering gets applied after query ordering\n         for (int i = 0; i < exps.ordering.length; i++)"},{"sha":"b579dc2fd8301110fc3f807f952944c4b734642f","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingInfo.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingInfo.java","raw_url":"https://github.com/apache/openjpa/raw/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingInfo.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingInfo.java?ref=aad47c26bdcb9edfef7f2022d1605d0f7b698a90","patch":"@@ -1103,7 +1103,6 @@ private void setIOFromJoins(ForeignKey fk, Object[][] joins) {\n \n         int constIdx = 0;\n         int idx;\n-        Column col;\n         for (int i = 0; i < joins.length; i++) {\n             // const columns are indexed after std join columns in fk IO\n             if (joins[i][1]instanceof Column)"},{"sha":"e0bed6671858ae8917e5c680cab995d6c0d85b5b","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/QueryResultMapping.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/QueryResultMapping.java","raw_url":"https://github.com/apache/openjpa/raw/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/QueryResultMapping.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/QueryResultMapping.java?ref=aad47c26bdcb9edfef7f2022d1605d0f7b698a90","patch":"@@ -24,7 +24,6 @@\n import java.util.Iterator;\n import java.util.List;\n import java.util.Map;\n-import java.util.Set;\n \n import org.apache.openjpa.jdbc.schema.Column;\n import org.apache.openjpa.jdbc.sql.Joins;\n@@ -381,7 +380,6 @@ private void resolveMapping(String path, Object id) {\n             List rpath = new ArrayList(tokens.length);\n             ClassMapping candidate = getCandidateTypeMapping();\n             FieldMapping fm = null;\n-            Set eagers;\n             for (int i = 0; i < tokens.length - 1; i++) {\n                 fm = candidate.getFieldMapping(tokens[i]);\n                 if (fm == null)"},{"sha":"5df170b5f0299ac5192026bc3be967fb4cedc735","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ValueMappingImpl.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ValueMappingImpl.java","raw_url":"https://github.com/apache/openjpa/raw/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ValueMappingImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/ValueMappingImpl.java?ref=aad47c26bdcb9edfef7f2022d1605d0f7b698a90","patch":"@@ -476,15 +476,13 @@ public boolean resolve(int mode) {\n     private void resolveMapping() {\n         // mark mapped columns\n         Column[] cols;\n-        int insertFlag, updateFlag;\n+        int insertFlag;\n         if (_fk != null) {\n             cols = _fk.getColumns();\n             insertFlag = Column.FLAG_FK_INSERT;\n-            updateFlag = Column.FLAG_FK_UPDATE;\n         } else {\n             cols = getColumns();\n             insertFlag = Column.FLAG_DIRECT_INSERT;\n-            updateFlag = Column.FLAG_DIRECT_UPDATE;\n         }\n         ColumnIO io = getColumnIO();\n         for (int i = 0; i < cols.length; i++) {"},{"sha":"c464e07a5f9975ff3b35b8e02f0944175184264b","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/VersionMappingInfo.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/VersionMappingInfo.java","raw_url":"https://github.com/apache/openjpa/raw/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/VersionMappingInfo.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/VersionMappingInfo.java?ref=aad47c26bdcb9edfef7f2022d1605d0f7b698a90","patch":"@@ -21,7 +21,6 @@\n import org.apache.openjpa.jdbc.schema.Index;\n import org.apache.openjpa.jdbc.schema.SchemaGroup;\n import org.apache.openjpa.jdbc.schema.Table;\n-import org.apache.openjpa.lib.util.Localizer;\n \n /**\n  * Information about the mapping from a version indicator to the schema, in\n@@ -34,9 +33,6 @@\n public class VersionMappingInfo\n     extends MappingInfo {\n \n-    private static final Localizer _loc = Localizer.forPackage\n-        (VersionMappingInfo.class);\n-\n     /**\n      * Return the columns set for this version, based on the given templates.\n      */"},{"sha":"1f364535ebedc52a7ee1db84f09202c9ad230269","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationToManyTableFieldStrategy.java","status":"modified","additions":0,"deletions":11,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationToManyTableFieldStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationToManyTableFieldStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/RelationToManyTableFieldStrategy.java?ref=aad47c26bdcb9edfef7f2022d1605d0f7b698a90","patch":"@@ -53,8 +53,6 @@\n     private static final Localizer _loc = Localizer.forPackage\n         (RelationToManyTableFieldStrategy.class);\n \n-    private Boolean _fkOid = null;\n-\n     protected ClassMapping[] getIndependentElementMappings(boolean traverse) {\n         return (traverse)\n             ? field.getElementMapping().getIndependentTypeMappings()\n@@ -140,15 +138,6 @@ public void map(boolean adapt) {\n         field.mapPrimaryKey(adapt);\n     }\n \n-    public void initialize() {\n-        ValueMapping elem = field.getElementMapping();\n-        ForeignKey fk = elem.getForeignKey();\n-        if (fk == null)\n-            _fkOid = Boolean.TRUE;\n-        else\n-            _fkOid = elem.getTypeMapping().isForeignKeyObjectId(fk);\n-    }\n-\n     public void insert(OpenJPAStateManager sm, JDBCStore store, RowManager rm)\n         throws SQLException {\n         if (field.getMappedBy() == null)"},{"sha":"90ba0c5393e67c6e2f1fe2692879c6ec8b84b493","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/DataSourceFactory.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/DataSourceFactory.java","raw_url":"https://github.com/apache/openjpa/raw/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/DataSourceFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/DataSourceFactory.java?ref=aad47c26bdcb9edfef7f2022d1605d0f7b698a90","patch":"@@ -130,9 +130,6 @@ public static DataSource newDataSource(JDBCConfiguration conf,\n      */\n     public static DecoratingDataSource decorateDataSource(DataSource ds,\n         JDBCConfiguration conf, boolean factory2) {\n-        String driver = (factory2)\n-            ? conf.getConnection2DriverName()\n-            : conf.getConnectionDriverName();\n         Options opts = Configurations.parseProperties((factory2)\n             ? conf.getConnectionFactory2Properties()\n             : conf.getConnectionFactoryProperties());"},{"sha":"ea4949bab336e95d711d3abfab74c78f792dba9a","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaGroup.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaGroup.java","raw_url":"https://github.com/apache/openjpa/raw/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaGroup.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaGroup.java?ref=aad47c26bdcb9edfef7f2022d1605d0f7b698a90","patch":"@@ -331,7 +331,6 @@ protected void copy(SchemaGroup group) {\n         // have to do fks after all schemas are imported\n         Table[] tabs;\n         ForeignKey[] fks;\n-        Schema clone;\n         for (int i = 0; i < schemas.length; i++) {\n             tabs = schemas[i].getTables();\n             for (int j = 0; j < tabs.length; j++) {"},{"sha":"b5e2d5b19a9e83779c5b33c79b6982782fae9b21","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/Sequence.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/Sequence.java","raw_url":"https://github.com/apache/openjpa/raw/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/Sequence.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/Sequence.java?ref=aad47c26bdcb9edfef7f2022d1605d0f7b698a90","patch":"@@ -18,7 +18,6 @@\n import java.io.File;\n \n import org.apache.openjpa.lib.meta.SourceTracker;\n-import org.apache.openjpa.lib.util.Localizer;\n \n /**\n  * Represents a database sequence.\n@@ -29,8 +28,6 @@\n     extends ReferenceCounter\n     implements Comparable, SourceTracker {\n \n-    private static final Localizer _loc = Localizer.forPackage(Sequence.class);\n-\n     private String _name = null;\n     private String _fullName = null;\n     private Schema _schema = null;"},{"sha":"fe1ba285209354cb71cfdbe78afa0b48251d8d72","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/Table.java","status":"modified","additions":0,"deletions":3,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/Table.java","raw_url":"https://github.com/apache/openjpa/raw/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/Table.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/Table.java?ref=aad47c26bdcb9edfef7f2022d1605d0f7b698a90","patch":"@@ -25,7 +25,6 @@\n import org.apache.commons.collections.map.LinkedMap;\n import org.apache.commons.lang.StringUtils;\n import org.apache.openjpa.lib.meta.SourceTracker;\n-import org.apache.openjpa.lib.util.Localizer;\n \n /**\n  * Represents a database table.\n@@ -37,8 +36,6 @@\n     extends NameSet\n     implements Comparable, SourceTracker {\n \n-    private static final Localizer _loc = Localizer.forPackage(Table.class);\n-\n     private String _name = null;\n     private String _schemaName = null;\n     private Map _colMap = null;"},{"sha":"6ee5a9c53e1ebe79eef7718a5b6a051510ee8cc3","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/XMLSchemaSerializer.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/XMLSchemaSerializer.java","raw_url":"https://github.com/apache/openjpa/raw/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/XMLSchemaSerializer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/XMLSchemaSerializer.java?ref=aad47c26bdcb9edfef7f2022d1605d0f7b698a90","patch":"@@ -46,7 +46,6 @@\n     private static final Localizer _loc = Localizer.forPackage\n         (XMLSchemaSerializer.class);\n \n-    private final JDBCConfiguration _conf;\n     private final Collection _tables = new TreeSet();\n     private final Collection _seqs = new TreeSet();\n \n@@ -55,7 +54,6 @@\n      */\n     public XMLSchemaSerializer(JDBCConfiguration conf) {\n         setLog(conf.getLog(JDBCConfiguration.LOG_SCHEMA));\n-        _conf = conf;\n     }\n \n     public Table[] getTables() {"},{"sha":"6b99245925dc1e7abb9d69fb915e7345ce1ede8b","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/MergedResult.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/MergedResult.java","raw_url":"https://github.com/apache/openjpa/raw/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/MergedResult.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/MergedResult.java?ref=aad47c26bdcb9edfef7f2022d1605d0f7b698a90","patch":"@@ -150,7 +150,6 @@ public boolean next()\n         // the comparator\n         int least = -1;\n         Object orderVal = null;\n-        int cmp;\n         for (int i = 0; i < _order.length; i++) {\n             if (_status[i] != CURRENT)\n                 continue;"},{"sha":"dda80366968afa3a22be4bd0d5f86bfdb56a6e48","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/PrimaryRow.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/PrimaryRow.java","raw_url":"https://github.com/apache/openjpa/raw/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/PrimaryRow.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/PrimaryRow.java?ref=aad47c26bdcb9edfef7f2022d1605d0f7b698a90","patch":"@@ -40,7 +40,6 @@\n     // VALID flag in superclass uses 2 << 0\n     private static final byte PK_SET = 2 << 1;\n     private static final byte PK_WHERE = 2 << 2;\n-    private static final byte PK_FLUSHED = 2 << 3;\n     private static final byte DEPENDENT = 2 << 4;\n \n     private static final Localizer _loc = Localizer.forPackage\n@@ -214,7 +213,6 @@ private boolean delayForeignKey(ForeignKey fk, OpenJPAStateManager sm,\n      */\n     private void recordForeignKey(ForeignKey fk, ColumnIO io,\n         OpenJPAStateManager sm, boolean set) {\n-        OpenJPAStateManager[] arr = null;\n         if (set) {\n             // force valid\n             if (canSetAny(io, fk.getColumns().length"},{"sha":"22746bfad4567f8f1d758f69c9e59a60bbad7bab","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/RowManagerImpl.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/RowManagerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/RowManagerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/RowManagerImpl.java?ref=aad47c26bdcb9edfef7f2022d1605d0f7b698a90","patch":"@@ -25,7 +25,6 @@\n \n import org.apache.openjpa.jdbc.schema.Table;\n import org.apache.openjpa.kernel.OpenJPAStateManager;\n-import org.apache.openjpa.lib.util.Localizer;\n import org.apache.openjpa.util.InternalException;\n \n /**\n@@ -37,9 +36,6 @@\n public class RowManagerImpl\n     implements RowManager {\n \n-    private static final Localizer _loc = Localizer.forPackage\n-        (RowManagerImpl.class);\n-\n     private Map _inserts = null;\n     private Map _updates = null;\n     private Map _deletes = null;"},{"sha":"de90ffe01d0751db90f1d56a0550595e1bd4b2b3","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java","raw_url":"https://github.com/apache/openjpa/raw/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java?ref=aad47c26bdcb9edfef7f2022d1605d0f7b698a90","patch":"@@ -818,7 +818,7 @@ private int primaryKeyOperation(ClassMapping mapping, boolean sel,\n         PathJoins pj = getJoins(joins, false);\n         Column[] cols = mapping.getPrimaryKeyColumns();\n         int seld = 0;\n-        for (int i = 0, idx; i < cols.length; i++)\n+        for (int i = 0; i < cols.length; i++)\n             if (columnOperation(cols[i], sel, asc, pj, aliasOrder))\n                 seld |= 2 << i;\n "},{"sha":"8f6fbcc391849b5bd1583b080963fe8795b86752","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Options.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Options.java","raw_url":"https://github.com/apache/openjpa/raw/aad47c26bdcb9edfef7f2022d1605d0f7b698a90/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Options.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Options.java?ref=aad47c26bdcb9edfef7f2022d1605d0f7b698a90","patch":"@@ -20,8 +20,6 @@\n import java.lang.reflect.Member;\n import java.lang.reflect.Method;\n import java.util.Collection;\n-import java.util.Collections;\n-import java.util.HashMap;\n import java.util.Iterator;\n import java.util.LinkedList;\n import java.util.List;"}]}

