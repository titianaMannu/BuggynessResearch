{"sha":"aafabcf1694d1627c0b48db51b26f409e4c1700a","node_id":"MDY6Q29tbWl0MjA2MzY0OmFhZmFiY2YxNjk0ZDE2MjdjMGI0OGRiNTFiMjZmNDA5ZTRjMTcwMGE=","commit":{"author":{"name":"Marc Prud'hommeaux","email":"mprudhom@apache.org","date":"2006-07-23T22:01:46Z"},"committer":{"name":"Marc Prud'hommeaux","email":"mprudhom@apache.org","date":"2006-07-23T22:01:46Z"},"message":"Cleaned up version parsing and made it more robust\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@424834 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"3cf6dbd3af9ca6381d68be0d045b4fe47d433cb4","url":"https://api.github.com/repos/apache/openjpa/git/trees/3cf6dbd3af9ca6381d68be0d045b4fe47d433cb4"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/aafabcf1694d1627c0b48db51b26f409e4c1700a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/aafabcf1694d1627c0b48db51b26f409e4c1700a","html_url":"https://github.com/apache/openjpa/commit/aafabcf1694d1627c0b48db51b26f409e4c1700a","comments_url":"https://api.github.com/repos/apache/openjpa/commits/aafabcf1694d1627c0b48db51b26f409e4c1700a/comments","author":null,"committer":null,"parents":[{"sha":"775c33d4fc177c010f40400bd3e2085d787cfac8","url":"https://api.github.com/repos/apache/openjpa/commits/775c33d4fc177c010f40400bd3e2085d787cfac8","html_url":"https://github.com/apache/openjpa/commit/775c33d4fc177c010f40400bd3e2085d787cfac8"}],"stats":{"total":49,"additions":35,"deletions":14},"files":[{"sha":"54974f44dedaed3fe123d851ee99be8a9207572b","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAVersion.java","status":"modified","additions":35,"deletions":14,"changes":49,"blob_url":"https://github.com/apache/openjpa/blob/aafabcf1694d1627c0b48db51b26f409e4c1700a/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAVersion.java","raw_url":"https://github.com/apache/openjpa/raw/aafabcf1694d1627c0b48db51b26f409e4c1700a/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAVersion.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAVersion.java?ref=aafabcf1694d1627c0b48db51b26f409e4c1700a","patch":"@@ -28,32 +28,53 @@\n  */\n public class OpenJPAVersion {\n \n-    public static final String VERSION_NUMBER = OpenJPAVersion.class\n-        .getPackage().getImplementationVersion() == null ? \"0.0.0\" :\n-        OpenJPAVersion.class.getPackage().getImplementationVersion();\n+    public static final String VERSION_NUMBER;\n     private static final long RELEASE_SECONDS = 1147454303;\n \n     public static final Date RELEASE_DATE = new Date(RELEASE_SECONDS * 1000);\n \n-    public static final String VERSION_ID = VERSION_NUMBER;\n+    public static final String VERSION_ID;\n     public static final String VENDOR_NAME = \"OpenJPA\";\n     public static final int MAJOR_RELEASE;\n     public static final int MINOR_RELEASE;\n     public static final int PATCH_RELEASE;\n     public static final String RELEASE_STATUS;\n \n     static {\n+        Package pack = OpenJPAVersion.class.getPackage();\n+        String vers = pack == null ? null : pack.getImplementationVersion();\n+        if (vers == null || vers.length() == 0)\n+            vers = \"0.0.0\";\n \n-        java.util.StringTokenizer tok =\n-            new java.util.StringTokenizer(VERSION_NUMBER,\n-                \".ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\");\n-        MAJOR_RELEASE =\n-            tok.hasMoreTokens() ? Integer.parseInt(tok.nextToken()) : 0;\n-        MINOR_RELEASE =\n-            tok.hasMoreTokens() ? Integer.parseInt(tok.nextToken()) : 0;\n-        PATCH_RELEASE =\n-            tok.hasMoreTokens() ? Integer.parseInt(tok.nextToken()) : 0;\n-        RELEASE_STATUS = tok.hasMoreTokens() ? tok.nextToken(\".\") : \"\";\n+        VERSION_NUMBER = vers;\n+        VERSION_ID = VERSION_NUMBER;\n+\n+        StringTokenizer tok = new StringTokenizer(VERSION_NUMBER, \".-\");\n+\n+        int major, minor, patch;\n+\n+        try {\n+            major = tok.hasMoreTokens() ? Integer.parseInt(tok.nextToken()) : 0;\n+        } catch (Exception e) {\n+            major = 0;\n+        }\n+\n+        try {\n+            minor = tok.hasMoreTokens() ? Integer.parseInt(tok.nextToken()) : 0;\n+        } catch (Exception e) {\n+            minor = 0;\n+        }\n+\n+        try {\n+            patch = tok.hasMoreTokens() ? Integer.parseInt(tok.nextToken()) : 0;\n+        } catch (Exception e) {\n+            patch = 0;\n+        }\n+\n+        MAJOR_RELEASE = major;\n+        MINOR_RELEASE = minor;\n+        PATCH_RELEASE = patch;\n+        RELEASE_STATUS = tok.hasMoreTokens() ? tok.nextToken(\"!\") : \"\";\n     }\n \n     public static void main(String [] args) {"}]}

