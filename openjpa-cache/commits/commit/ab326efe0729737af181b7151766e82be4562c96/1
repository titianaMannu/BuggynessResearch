{"sha":"ab326efe0729737af181b7151766e82be4562c96","node_id":"MDY6Q29tbWl0MjA2MzY0OmFiMzI2ZWZlMDcyOTczN2FmMTgxYjcxNTE3NjZlODJiZTQ1NjJjOTY=","commit":{"author":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2010-11-01T20:19:32Z"},"committer":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2010-11-01T20:19:32Z"},"message":"OPENJPA-1793 - New test case testEntityA_Embed_Single_Coll caused \"ORA-01861: literal does not match format string\" when run against Oracle due to default DATE column format differences. (See http://download.oracle.com/docs/cd/B19306_01/server.102/b14200/sql_elements004.htm)\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1029821 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"31406c29e9b59acf6b5212b26e2b644f00d5e93b","url":"https://api.github.com/repos/apache/openjpa/git/trees/31406c29e9b59acf6b5212b26e2b644f00d5e93b"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/ab326efe0729737af181b7151766e82be4562c96","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/ab326efe0729737af181b7151766e82be4562c96","html_url":"https://github.com/apache/openjpa/commit/ab326efe0729737af181b7151766e82be4562c96","comments_url":"https://api.github.com/repos/apache/openjpa/commits/ab326efe0729737af181b7151766e82be4562c96/comments","author":null,"committer":null,"parents":[{"sha":"c4d891525d7fc2535f7f0516cc3c5db1189a46c9","url":"https://api.github.com/repos/apache/openjpa/commits/c4d891525d7fc2535f7f0516cc3c5db1189a46c9","html_url":"https://github.com/apache/openjpa/commit/c4d891525d7fc2535f7f0516cc3c5db1189a46c9"}],"stats":{"total":13,"additions":6,"deletions":7},"files":[{"sha":"5eead858bf4ff015db05b4b9754f6624b3a5de0c","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/Department2.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/ab326efe0729737af181b7151766e82be4562c96/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/Department2.java","raw_url":"https://github.com/apache/openjpa/raw/ab326efe0729737af181b7151766e82be4562c96/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/Department2.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/Department2.java?ref=ab326efe0729737af181b7151766e82be4562c96","patch":"@@ -49,6 +49,6 @@ public void setEmpMap(Map<EmployeePK2, Employee2> empMap) {\n     }\n     \n     public void addEmployee(Employee2 emp) {\n-        empMap.put(emp.getEmpPK(), emp);\n+        getEmpMap().put(emp.getEmpPK(), emp);\n     }\n }"},{"sha":"963b4f55e8414ac98609e72172f9e94b0616ce0f","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java","status":"modified","additions":5,"deletions":6,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/ab326efe0729737af181b7151766e82be4562c96/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java","raw_url":"https://github.com/apache/openjpa/raw/ab326efe0729737af181b7151766e82be4562c96/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java?ref=ab326efe0729737af181b7151766e82be4562c96","patch":"@@ -60,8 +60,7 @@\n     public int numEmployeesPerPhoneNumber = 1;\n     public int numPhoneNumbersPerEmployee = 2;\n     public int numEmployeesPerProgramManager = 2;\n-    public int numEmployees = numProgramManagers\n-        * numEmployeesPerProgramManager;\n+    public int numEmployees = numProgramManagers * numEmployeesPerProgramManager;\n     public int numPhoneNumbers = numEmployees * numPhoneNumbersPerEmployee;\n     public int numDepartments = 2;\n     public int numEmployeesPerDept = 2;\n@@ -79,8 +78,7 @@\n     public int phoneId = 1;\n     public int pmId = 1;\n     public int parkingSpotId = 1;\n-    public Map<Integer, PhoneNumber> phones =\n-        new HashMap<Integer, PhoneNumber>();\n+    public Map<Integer, PhoneNumber> phones = new HashMap<Integer, PhoneNumber>();\n     public Map<Integer, Employee> employees = new HashMap<Integer, Employee>();\n \n     public void setUp() {\n@@ -108,7 +106,7 @@ public void setUp() {\n             EntityA_Embed_Complex.class, A.class, CLEAR_TABLES);\n             sql.clear();\n             DBDictionary dict = ((JDBCConfiguration)emf.getConfiguration()).getDBDictionaryInstance();\n-            if (dict.getClass().getName().indexOf(\"oracle\") != -1) {\n+            if (dict.getClass().getName().toLowerCase().indexOf(\"oracle\") != -1) {\n                 ((OracleDictionary)dict).useTriggersForAutoAssign = true;\n             }\n     }\n@@ -188,7 +186,8 @@ public void testEntityA_Embed_Single_Coll() {\n         //string (even the simplest string will do).\n         em = emf.createEntityManager();\n         Query query1 = em.createQuery(\"SELECT e FROM EntityA_Embed_Single_Coll e \"\n-            + \"where e.embed.date = '\" + date + \"'\");\n+            + \"where e.embed.date = :wheredate\");\n+        query1.setParameter(\"wheredate\", date);\n         eesc = (EntityA_Embed_Single_Coll) query1.getSingleResult();\n         assertEquals(eesc.getEmbed().getDate().toString(), date.toString());\n         em.close();"}]}

