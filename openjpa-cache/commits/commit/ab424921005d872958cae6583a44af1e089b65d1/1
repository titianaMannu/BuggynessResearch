{"sha":"ab424921005d872958cae6583a44af1e089b65d1","node_id":"MDY6Q29tbWl0MjA2MzY0OmFiNDI0OTIxMDA1ZDg3Mjk1OGNhZTY1ODNhNDRhZjFlMDg5YjY1ZDE=","commit":{"author":{"name":"Jeremy Bauer","email":"jrbauer@apache.org","date":"2008-09-30T19:42:11Z"},"committer":{"name":"Jeremy Bauer","email":"jrbauer@apache.org","date":"2008-09-30T19:42:11Z"},"message":"OPENJPA-733: Updated state manager to use actual oid instead of owner oid.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@700563 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"06e8cd26aae7b1f2f2fd73ae9b2f5b23b3960a34","url":"https://api.github.com/repos/apache/openjpa/git/trees/06e8cd26aae7b1f2f2fd73ae9b2f5b23b3960a34"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/ab424921005d872958cae6583a44af1e089b65d1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/ab424921005d872958cae6583a44af1e089b65d1","html_url":"https://github.com/apache/openjpa/commit/ab424921005d872958cae6583a44af1e089b65d1","comments_url":"https://api.github.com/repos/apache/openjpa/commits/ab424921005d872958cae6583a44af1e089b65d1/comments","author":null,"committer":null,"parents":[{"sha":"022688859011ee2df4d6b29f0501d9833e65d9f1","url":"https://api.github.com/repos/apache/openjpa/commits/022688859011ee2df4d6b29f0501d9833e65d9f1","html_url":"https://github.com/apache/openjpa/commit/022688859011ee2df4d6b29f0501d9833e65d9f1"}],"stats":{"total":6589,"additions":3330,"deletions":3259},"files":[{"sha":"b3f424c71904496938e71fd5929065ab63e210e5","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java","status":"modified","additions":3259,"deletions":3258,"changes":6517,"blob_url":"https://github.com/apache/openjpa/blob/ab424921005d872958cae6583a44af1e089b65d1/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/ab424921005d872958cae6583a44af1e089b65d1/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java?ref=ab424921005d872958cae6583a44af1e089b65d1"},{"sha":"af14a52452fab22ed23795a88dbd0ce364cdde5c","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbedded.java","status":"modified","additions":71,"deletions":1,"changes":72,"blob_url":"https://github.com/apache/openjpa/blob/ab424921005d872958cae6583a44af1e089b65d1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbedded.java","raw_url":"https://github.com/apache/openjpa/raw/ab424921005d872958cae6583a44af1e089b65d1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbedded.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbedded.java?ref=ab424921005d872958cae6583a44af1e089b65d1","patch":"@@ -18,7 +18,11 @@\n  */\r\n package org.apache.openjpa.persistence.embed;\r\n \r\n+import java.util.List;\r\n+\r\n import javax.persistence.EntityManager;\r\n+import javax.persistence.EntityTransaction;\r\n+\r\n import org.apache.openjpa.persistence.test.SingleEMFTestCase;\r\n \r\n public class TestEmbedded extends SingleEMFTestCase {\r\n@@ -42,5 +46,71 @@ public void testInsertEmbedded() {\n         em.persist(a);\r\n         em.getTransaction().commit();\r\n     }\r\n+    \r\n+    /*\r\n+     * This variation verifies that an embedded entity can be accessed after\r\n+     * being detached.  An entity /w embedded is persisted and then queried.\r\n+     * The em is closed, detaching the entities, and then a getter is called\r\n+     * on the embeddeded.  If the embedded is still attached (it should not be)\r\n+     * an IllegalStateException will be thrown.    \r\n+     * \r\n+     * JIRA Ref: OPENJPA-733\r\n+     * Authors: Chris Tillman, Jeremy Bauer\r\n+     */    \r\n+    public void testDetachedQueryEmbedded() {\r\n+        Address a = new Address();\r\n+        a.setStreetAddress(\"456 Main St\");\r\n+        a.setCity(\"New York\");\r\n+        a.setState(\"NY\");\r\n+        a.setZip(12955);\r\n+        Geocode g = new Geocode();\r\n+        g.setLatitude(1.0f);\r\n+        g.setLongtitude(2.0f);\r\n+        a.setGeocode(g);\r\n+        \r\n+        persistAddress(a);\r\n+        \r\n+        Address a2 = queryAddresses(\r\n+                \"select address from Address address\" +\r\n+                \" where address.streetAddress = '456 Main St'\").get(0);\r\n+        \r\n+        assertEquals(a2.getGeocode().getLatitude(),1.0f);\r\n+    }\r\n \r\n-}\n\\ No newline at end of file\n+    private void persistAddress(Address address) {\r\n+        final EntityManager em = emf.createEntityManager();\r\n+        final EntityTransaction tx = em.getTransaction();\r\n+\r\n+        tx.begin();\r\n+\r\n+        try {\r\n+            em.persist(address);\r\n+            tx.commit();\r\n+        } finally {\r\n+            if (tx.isActive()) {\r\n+                tx.rollback();\r\n+            }\r\n+            em.close();\r\n+        }\r\n+        assertEquals(address.getGeocode().getLatitude(),1.0f);\r\n+    }\r\n+\r\n+    private List<Address> queryAddresses(String query) {\r\n+        final EntityManager em = emf.createEntityManager();\r\n+        final EntityTransaction tx = em.getTransaction();\r\n+\r\n+        tx.begin();\r\n+\r\n+        try {\r\n+            final List<Address> list = (List<Address>) em.createQuery(query)\r\n+                            .getResultList();\r\n+            tx.commit();\r\n+            return list;\r\n+        } finally {\r\n+            if (tx.isActive()) {\r\n+                tx.rollback();\r\n+            }\r\n+            em.close();\r\n+        }\r\n+    }\r\n+}\r"}]}

