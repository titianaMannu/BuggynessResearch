{"sha":"ac12bb4ade57471e9eefa6f66ca9521c867d9adf","node_id":"MDY6Q29tbWl0MjA2MzY0OmFjMTJiYjRhZGU1NzQ3MWU5ZWVmYTZmNjZjYTk1MjFjODY3ZDlhZGY=","commit":{"author":{"name":"Jeremy Bauer","email":"jrbauer@apache.org","date":"2009-07-01T12:53:39Z"},"committer":{"name":"Jeremy Bauer","email":"jrbauer@apache.org","date":"2009-07-01T12:53:39Z"},"message":"OPENJPA-1135 Correct access type related issue with multi-level parsing\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@790151 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"8c8641917959aa493de3bf38232bab2b2310a016","url":"https://api.github.com/repos/apache/openjpa/git/trees/8c8641917959aa493de3bf38232bab2b2310a016"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/ac12bb4ade57471e9eefa6f66ca9521c867d9adf","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/ac12bb4ade57471e9eefa6f66ca9521c867d9adf","html_url":"https://github.com/apache/openjpa/commit/ac12bb4ade57471e9eefa6f66ca9521c867d9adf","comments_url":"https://api.github.com/repos/apache/openjpa/commits/ac12bb4ade57471e9eefa6f66ca9521c867d9adf/comments","author":null,"committer":null,"parents":[{"sha":"0f45f13fc297d6b73c12e3e0a0b0b155112d4457","url":"https://api.github.com/repos/apache/openjpa/commits/0f45f13fc297d6b73c12e3e0a0b0b155112d4457","html_url":"https://github.com/apache/openjpa/commit/0f45f13fc297d6b73c12e3e0a0b0b155112d4457"}],"stats":{"total":20,"additions":19,"deletions":1},"files":[{"sha":"de83ad37803fad945eed40b75c48b7840383820a","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/XMLMetaDataParser.java","status":"modified","additions":19,"deletions":1,"changes":20,"blob_url":"https://github.com/apache/openjpa/blob/ac12bb4ade57471e9eefa6f66ca9521c867d9adf/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/XMLMetaDataParser.java","raw_url":"https://github.com/apache/openjpa/raw/ac12bb4ade57471e9eefa6f66ca9521c867d9adf/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/XMLMetaDataParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/XMLMetaDataParser.java?ref=ac12bb4ade57471e9eefa6f66ca9521c867d9adf","patch":"@@ -106,6 +106,22 @@\n     private int _depth = -1;\n     private int _ignore = Integer.MAX_VALUE;\n \n+    private boolean _parsing = false;\n+\n+    /*\n+     * Whether the parser is currently parsing.\n+     */\n+    public boolean isParsing() {\n+        return _parsing;\n+    }\n+\n+    /*\n+     * Whether the parser is currently parsing.\n+     */\n+    public void setParsing(boolean parsing) {\n+        this._parsing = parsing;\n+    }\n+\n     /**\n      * Whether to parse element text.\n      */\n@@ -348,6 +364,7 @@ protected void parseNewResource(Reader xml, String sourceName)\n \n         // parse the metadata with a SAX parser\n         try {\n+            setParsing(true);\n             _sourceName = sourceName;\n             SAXParser parser = XMLFactory.getSAXParser(validating, true);\n             Object schema = null;\n@@ -525,7 +542,6 @@ protected void finish() {\n         if (_log != null && _log.isTraceEnabled())\n             _log.trace(_loc.get(\"end-parse\", getSourceName()));\n         _results = new ArrayList(_curResults);\n-        clearDeferredMetaData();\n     }\n \n     /**\n@@ -542,6 +558,8 @@ protected void reset() {\n         _ignore = Integer.MAX_VALUE;\n         if (_comments != null)\n             _comments.clear();\n+        clearDeferredMetaData();\n+        setParsing(false);\n     }\n \n     /**"}]}

