{"sha":"ac939f7b5f23e8ef73e37c8baa1b0b23c5c4edce","node_id":"MDY6Q29tbWl0MjA2MzY0OmFjOTM5ZjdiNWYyM2U4ZWY3M2UzN2M4YmFhMWIwYjIzYzVjNGVkY2U=","commit":{"author":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-09-02T01:46:54Z"},"committer":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-09-02T01:46:54Z"},"message":"OPENJPA-1281: fix reparameter when PreparedQueryCache is on\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@810331 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"4eb25014cf4d3d5fe1eb1ad5ace20b911d46560d","url":"https://api.github.com/repos/apache/openjpa/git/trees/4eb25014cf4d3d5fe1eb1ad5ace20b911d46560d"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/ac939f7b5f23e8ef73e37c8baa1b0b23c5c4edce","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/ac939f7b5f23e8ef73e37c8baa1b0b23c5c4edce","html_url":"https://github.com/apache/openjpa/commit/ac939f7b5f23e8ef73e37c8baa1b0b23c5c4edce","comments_url":"https://api.github.com/repos/apache/openjpa/commits/ac939f7b5f23e8ef73e37c8baa1b0b23c5c4edce/comments","author":null,"committer":null,"parents":[{"sha":"8c929e6e10fe6c846f0dd8b862b24d5df2c3c887","url":"https://api.github.com/repos/apache/openjpa/commits/8c929e6e10fe6c846f0dd8b862b24d5df2c3c887","html_url":"https://github.com/apache/openjpa/commit/8c929e6e10fe6c846f0dd8b862b24d5df2c3c887"}],"stats":{"total":61,"additions":61,"deletions":0},"files":[{"sha":"df3d458703ee049ee5168d9c337c0409ab6bced4","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SQLBuffer.java","status":"modified","additions":14,"deletions":0,"changes":14,"blob_url":"https://github.com/apache/openjpa/blob/ac939f7b5f23e8ef73e37c8baa1b0b23c5c4edce/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SQLBuffer.java","raw_url":"https://github.com/apache/openjpa/raw/ac939f7b5f23e8ef73e37c8baa1b0b23c5c4edce/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SQLBuffer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SQLBuffer.java?ref=ac939f7b5f23e8ef73e37c8baa1b0b23c5c4edce","patch":"@@ -166,6 +166,20 @@ else if (_cols != null)\n                 _userIndex.add(newIndex);\n                 _userIndex.add(userParam);\n             }\n+        } else { \n+            if (_userIndex != null) {\n+                List userIndex = new ArrayList();\n+                for (int i = 0; i < _userIndex.size(); i+=2) {\n+                    int oldIndex = ((Integer)_userIndex.get(i)).intValue();\n+                    Object userParam = _userIndex.get(i+1);\n+                    if (oldIndex >= paramIndex) \n+                        userIndex.add(oldIndex + paramIndex);\n+                    else \n+                        userIndex.add(oldIndex);\n+                    userIndex.add(userParam);\n+                }\n+                _userIndex = userIndex;\n+            }\n         }\n     }\n "},{"sha":"06c16e75875883f50ac53c3757e5d475906cdc8d","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/sqlcache/CD.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/ac939f7b5f23e8ef73e37c8baa1b0b23c5c4edce/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/sqlcache/CD.java","raw_url":"https://github.com/apache/openjpa/raw/ac939f7b5f23e8ef73e37c8baa1b0b23c5c4edce/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/sqlcache/CD.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/sqlcache/CD.java?ref=ac939f7b5f23e8ef73e37c8baa1b0b23c5c4edce","patch":"@@ -28,6 +28,8 @@\n public class CD extends Merchandise {\n     private String label;\n     \n+    private int status; \n+    \n     @ManyToOne\n     private Singer singer;\n \n@@ -55,4 +57,12 @@ public void setSinger(Singer singer) {\n         this.singer = singer;\n         singer.addCd(this);\n     }\n+    \n+    public int getStatus() {\n+        return status;\n+    }\n+    \n+    public void setStatus(int status) {\n+        this.status = status;\n+    }     \n }"},{"sha":"5a4184addcdad41008f3f6de3e14df5a59982543","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/sqlcache/TestPreparedQueryCache.java","status":"modified","additions":37,"deletions":0,"changes":37,"blob_url":"https://github.com/apache/openjpa/blob/ac939f7b5f23e8ef73e37c8baa1b0b23c5c4edce/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/sqlcache/TestPreparedQueryCache.java","raw_url":"https://github.com/apache/openjpa/raw/ac939f7b5f23e8ef73e37c8baa1b0b23c5c4edce/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/sqlcache/TestPreparedQueryCache.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/sqlcache/TestPreparedQueryCache.java?ref=ac939f7b5f23e8ef73e37c8baa1b0b23c5c4edce","patch":"@@ -702,6 +702,43 @@ public void testQueryWithEagerRelationIsNotCached() {\n         assertNotNull(book2.getAuthors());\n         assertFalse(book2.getAuthors().isEmpty());\n     }\n+\n+    public void testQueryWithUserDefinedAndInternalParamtersInSubquery() {\n+        String jpql = \"Select a From Address a Where Not Exists (\"\n+            + \"     Select s.id From Singer As s Where \"\n+            + \"        s.address = a  And \"\n+            + \"        Not (\"\n+            + \"              (s.firstName = :firstName) \"\n+            + \"              Or \"\n+            + \"              (\"\n+            + \"                  (\"\n+            + \"                      exists (select c.id from CD c where c.singer = s and c.status = 1) And \"\n+            + \"                      s.lastName = :lastName\"\n+            + \"                  ) \"\n+            + \"                  Or \"\n+            + \"                  (\"\n+            + \"                      not exists (Select c.id from CD c where c.singer = s and c.status = 2)\"\n+            + \"                  )\"\n+            + \"              )\"\n+            + \"            )\"\n+            + \"     )\";\n+        \n+        Query jQ = em.createQuery(jpql);\n+        jQ.setParameter(\"lastName\", \"LastName\");\n+        jQ.setParameter(\"firstName\", \"FirstName\");\n+        List jList = jQ.getResultList();\n+        \n+        Query jQ1 = em.createQuery(jpql);\n+        jQ1.setParameter(\"lastName\", \"LastName1\");\n+        jQ1.setParameter(\"firstName\", \"FirstName1\");\n+        try {\n+            List jList1 = jQ1.getResultList();\n+        } catch (Exception e) {\n+            fail(\"Fail to execute again - Parameters are messed up:\" + e.getMessage());\n+        }\n+    }\n+    \n+    \n     PreparedQueryCache getPreparedQueryCache() {\n         return emf.getConfiguration().getQuerySQLCacheInstance();\n     }"}]}

