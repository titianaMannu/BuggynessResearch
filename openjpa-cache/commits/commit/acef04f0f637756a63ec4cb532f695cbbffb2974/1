{"sha":"acef04f0f637756a63ec4cb532f695cbbffb2974","node_id":"MDY6Q29tbWl0MjA2MzY0OmFjZWYwNGYwZjYzNzc1NmE2M2VjNGNiNTMyZjY5NWNiYmZmYjI5NzQ=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-08-23T17:31:42Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-08-23T17:31:42Z"},"message":"OPENJPA-526: setting svn eol-stle on new file\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@988221 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c01619fd4974622c0d5daf94c890ae2f19355bba","url":"https://api.github.com/repos/apache/openjpa/git/trees/c01619fd4974622c0d5daf94c890ae2f19355bba"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/acef04f0f637756a63ec4cb532f695cbbffb2974","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/acef04f0f637756a63ec4cb532f695cbbffb2974","html_url":"https://github.com/apache/openjpa/commit/acef04f0f637756a63ec4cb532f695cbbffb2974","comments_url":"https://api.github.com/repos/apache/openjpa/commits/acef04f0f637756a63ec4cb532f695cbbffb2974/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"b3c9553f5902ef8eec6a6891bc80fdc87e908167","url":"https://api.github.com/repos/apache/openjpa/commits/b3c9553f5902ef8eec6a6891bc80fdc87e908167","html_url":"https://github.com/apache/openjpa/commit/b3c9553f5902ef8eec6a6891bc80fdc87e908167"}],"stats":{"total":150,"additions":75,"deletions":75},"files":[{"sha":"971f6cea8a22899a87ae5200d11a7a9e3744f29a","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/common/apps/Blobs.java","status":"modified","additions":75,"deletions":75,"changes":150,"blob_url":"https://github.com/apache/openjpa/blob/acef04f0f637756a63ec4cb532f695cbbffb2974/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/common/apps/Blobs.java","raw_url":"https://github.com/apache/openjpa/raw/acef04f0f637756a63ec4cb532f695cbbffb2974/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/common/apps/Blobs.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/kernel/common/apps/Blobs.java?ref=acef04f0f637756a63ec4cb532f695cbbffb2974","patch":"@@ -1,75 +1,75 @@\n-/*\r\n- * Licensed to the Apache Software Foundation (ASF) under one\r\n- * or more contributor license agreements.  See the NOTICE file\r\n- * distributed with this work for additional information\r\n- * regarding copyright ownership.  The ASF licenses this file\r\n- * to you under the Apache License, Version 2.0 (the\r\n- * \"License\"); you may not use this file except in compliance\r\n- * with the License.  You may obtain a copy of the License at\r\n- *\r\n- * http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n- * Unless required by applicable law or agreed to in writing,\r\n- * software distributed under the License is distributed on an\r\n- * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n- * KIND, either express or implied.  See the License for the\r\n- * specific language governing permissions and limitations\r\n- * under the License.    \r\n- */\r\n-package org.apache.openjpa.persistence.kernel.common.apps;\r\n-\r\n-import java.io.Serializable;\r\n-import javax.persistence.Column;\r\n-import javax.persistence.Entity;\r\n-import javax.persistence.Id;\r\n-import javax.persistence.Lob;\r\n-import javax.persistence.Table;\r\n-\r\n-@Entity\r\n-@Table(name = \"blobs\")\r\n-public class Blobs implements Serializable {\r\n-\r\n-    private static final long serialVersionUID = 1L;\r\n-\r\n-    @Lob\r\n-    @Column(name = \"lobNullable\", nullable = true)\r\n-    protected byte[] lobNullable = null;\r\n-\r\n-    @Lob\r\n-    @Column(name = \"lobNotNullable\", nullable = false)\r\n-    protected byte[] lobNotNullable;;\r\n-\r\n-    @Id\r\n-    public int id;\r\n-\r\n-    public Blobs() {\r\n-    }\r\n-\r\n-    public Blobs(int key) {\r\n-        id = key;\r\n-    }\r\n-\r\n-    public int getId() {\r\n-        return id;\r\n-    }\r\n-\r\n-    public void setId(int id) {\r\n-        this.id = id;\r\n-    }\r\n-\r\n-    public byte[] getLobNullable() {\r\n-        return (byte[]) lobNullable;\r\n-    }\r\n-\r\n-    public void setLobNullable(byte[] lob) {\r\n-        this.lobNullable = lob;\r\n-    }\r\n-\r\n-    public byte[] getLobNotNullable() {\r\n-        return (byte[])lobNotNullable;\r\n-    }\r\n-\r\n-    public void setLobNotNullable(byte[] lob) {\r\n-        this.lobNotNullable = lob;\r\n-    }\r\n-}\r\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.kernel.common.apps;\n+\n+import java.io.Serializable;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+import javax.persistence.Lob;\n+import javax.persistence.Table;\n+\n+@Entity\n+@Table(name = \"blobs\")\n+public class Blobs implements Serializable {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    @Lob\n+    @Column(name = \"lobNullable\", nullable = true)\n+    protected byte[] lobNullable = null;\n+\n+    @Lob\n+    @Column(name = \"lobNotNullable\", nullable = false)\n+    protected byte[] lobNotNullable;;\n+\n+    @Id\n+    public int id;\n+\n+    public Blobs() {\n+    }\n+\n+    public Blobs(int key) {\n+        id = key;\n+    }\n+\n+    public int getId() {\n+        return id;\n+    }\n+\n+    public void setId(int id) {\n+        this.id = id;\n+    }\n+\n+    public byte[] getLobNullable() {\n+        return (byte[]) lobNullable;\n+    }\n+\n+    public void setLobNullable(byte[] lob) {\n+        this.lobNullable = lob;\n+    }\n+\n+    public byte[] getLobNotNullable() {\n+        return (byte[])lobNotNullable;\n+    }\n+\n+    public void setLobNotNullable(byte[] lob) {\n+        this.lobNotNullable = lob;\n+    }\n+}"}]}

