{"sha":"ad1029fde49253d5e97f880c57665b6ce8dcab44","node_id":"MDY6Q29tbWl0MjA2MzY0OmFkMTAyOWZkZTQ5MjUzZDVlOTdmODgwYzU3NjY1YjZjZThkY2FiNDQ=","commit":{"author":{"name":"Jeremy Bauer","email":"jrbauer@apache.org","date":"2009-10-27T21:02:34Z"},"committer":{"name":"Jeremy Bauer","email":"jrbauer@apache.org","date":"2009-10-27T21:02:34Z"},"message":"OPENJPA-1115 Wrap non-null sequence property values so they are processed as a single property value.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@830338 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"be053bf3d08c85412147b92f557cde9c772e834d","url":"https://api.github.com/repos/apache/openjpa/git/trees/be053bf3d08c85412147b92f557cde9c772e834d"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/ad1029fde49253d5e97f880c57665b6ce8dcab44","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/ad1029fde49253d5e97f880c57665b6ce8dcab44","html_url":"https://github.com/apache/openjpa/commit/ad1029fde49253d5e97f880c57665b6ce8dcab44","comments_url":"https://api.github.com/repos/apache/openjpa/commits/ad1029fde49253d5e97f880c57665b6ce8dcab44/comments","author":null,"committer":null,"parents":[{"sha":"71f9f409c00855e26cb1de51536ff73475ecf4d7","url":"https://api.github.com/repos/apache/openjpa/commits/71f9f409c00855e26cb1de51536ff73475ecf4d7","html_url":"https://github.com/apache/openjpa/commit/71f9f409c00855e26cb1de51536ff73475ecf4d7"}],"stats":{"total":17,"additions":14,"deletions":3},"files":[{"sha":"dbf0f20e0d51ab7aae6dbeea8bfba0a89f229dd4","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/SequenceMetaData.java","status":"modified","additions":14,"deletions":3,"changes":17,"blob_url":"https://github.com/apache/openjpa/blob/ad1029fde49253d5e97f880c57665b6ce8dcab44/openjpa-kernel/src/main/java/org/apache/openjpa/meta/SequenceMetaData.java","raw_url":"https://github.com/apache/openjpa/raw/ad1029fde49253d5e97f880c57665b6ce8dcab44/openjpa-kernel/src/main/java/org/apache/openjpa/meta/SequenceMetaData.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/SequenceMetaData.java?ref=ad1029fde49253d5e97f880c57665b6ce8dcab44","patch":"@@ -344,12 +344,23 @@ protected PluginValue newPluginValue(String property) {\n      * Add standard properties to the given properties buffer.\n      */\n     protected void addStandardProperties(StringBuffer props) {\n-        appendProperty(props, PROP_SEQUENCE, \"\\\"\" + _sequence + \"\\\"\");\n+        appendProperty(props, PROP_SEQUENCE, wrapValue(_sequence));\n         appendProperty(props, PROP_INITIAL_VALUE, _initial);\n         appendProperty(props, PROP_ALLOCATE, _allocate);\n         appendProperty(props, PROP_INCREMENT, _increment);\n-        appendProperty(props, PROP_SCHEMA, \"\\\"\" + _schema + \"\\\"\");\n-        appendProperty(props, PROP_CATALOG, \"\\\"\" + _catalog + \"\\\"\");\n+        appendProperty(props, PROP_SCHEMA, wrapValue(_schema));\n+        appendProperty(props, PROP_CATALOG, wrapValue(_catalog));\n+    }\n+    \n+    /**\n+     * Wraps property values that may contain spaces or other special characters\n+     * in double quotes so they are processed as a single valued argument.\n+     */\n+    protected String wrapValue(String value) {\n+        if (value != null) {\n+            return \"\\\"\" + value + \"\\\"\";\n+        }\n+        return value;\n     }\n \n     /**"}]}

