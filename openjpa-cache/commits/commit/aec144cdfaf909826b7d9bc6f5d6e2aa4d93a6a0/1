{"sha":"aec144cdfaf909826b7d9bc6f5d6e2aa4d93a6a0","node_id":"MDY6Q29tbWl0MjA2MzY0OmFlYzE0NGNkZmFmOTA5ODI2YjdkOWJjNmY1ZDZlMmFhNGQ5M2E2YTA=","commit":{"author":{"name":"Dianne E. Richards","email":"dianner@apache.org","date":"2010-07-16T17:29:08Z"},"committer":{"name":"Dianne E. Richards","email":"dianner@apache.org","date":"2010-07-16T17:29:08Z"},"message":"OPENJPA-1722 Test case for DistinctResultList serialization fix\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@964865 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"43ec405767433167a6ebd64cb7bd90119e1a6b63","url":"https://api.github.com/repos/apache/openjpa/git/trees/43ec405767433167a6ebd64cb7bd90119e1a6b63"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/aec144cdfaf909826b7d9bc6f5d6e2aa4d93a6a0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/aec144cdfaf909826b7d9bc6f5d6e2aa4d93a6a0","html_url":"https://github.com/apache/openjpa/commit/aec144cdfaf909826b7d9bc6f5d6e2aa4d93a6a0","comments_url":"https://api.github.com/repos/apache/openjpa/commits/aec144cdfaf909826b7d9bc6f5d6e2aa4d93a6a0/comments","author":null,"committer":null,"parents":[{"sha":"84812bb21150b08b9ff4e5064917e92d5e364542","url":"https://api.github.com/repos/apache/openjpa/commits/84812bb21150b08b9ff4e5064917e92d5e364542","html_url":"https://github.com/apache/openjpa/commit/84812bb21150b08b9ff4e5064917e92d5e364542"}],"stats":{"total":60,"additions":60,"deletions":0},"files":[{"sha":"e189d2ce4b836a96bee65012a2f98096cf18c3bd","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/results/TestListResultSerialization.java","status":"added","additions":60,"deletions":0,"changes":60,"blob_url":"https://github.com/apache/openjpa/blob/aec144cdfaf909826b7d9bc6f5d6e2aa4d93a6a0/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/results/TestListResultSerialization.java","raw_url":"https://github.com/apache/openjpa/raw/aec144cdfaf909826b7d9bc6f5d6e2aa4d93a6a0/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/results/TestListResultSerialization.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/results/TestListResultSerialization.java?ref=aec144cdfaf909826b7d9bc6f5d6e2aa4d93a6a0","patch":"@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.query.results;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.openjpa.lib.rop.ListResultList;\n+import org.apache.openjpa.lib.rop.ResultList;\n+\n+import org.apache.openjpa.kernel.DistinctResultList;\n+import org.apache.openjpa.persistence.EntityManagerImpl;\n+import org.apache.openjpa.persistence.PersistenceExceptions;\n+import org.apache.openjpa.persistence.test.SQLListenerTestCase;\n+import org.apache.openjpa.util.RuntimeExceptionTranslator;\n+\n+/**\n+ * Test that the DistinctResultList serializes correctly and without error.\n+ *\n+ * @author Dianne Richards\n+ * @since 2.1.0\n+ */\n+public class TestListResultSerialization extends SQLListenerTestCase {\n+    public void setUp() throws Exception {\n+        super.setUp();\n+        assertNotNull(emf);\n+    }\n+    \n+    public void testRoundtrip() {\n+        List<String> list = new ArrayList<String>();\n+        list.add(\"xxx\");\n+        list.add(\"yyy\");\n+        ResultList resultList = new ListResultList(list);\n+        EntityManagerImpl em = (EntityManagerImpl)emf.createEntityManager();\n+        em.close();\n+        RuntimeExceptionTranslator trans = PersistenceExceptions.getRollbackTranslator(em);\n+        DistinctResultList distinctResultList = new DistinctResultList(resultList, trans);\n+        try {\n+            roundtrip(distinctResultList);\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+            fail(\"unexpected exception - see stack trace in output\");\n+        }\n+    }\n+}"}]}

