{"sha":"af2550bb054bc9ec79aa02d9fa1953765b930da0","node_id":"MDY6Q29tbWl0MjA2MzY0OmFmMjU1MGJiMDU0YmM5ZWM3OWFhMDJkOWZhMTk1Mzc2NWI5MzBkYTA=","commit":{"author":{"name":"Marc Prud'hommeaux","email":"mprudhom@apache.org","date":"2007-04-06T23:52:03Z"},"committer":{"name":"Marc Prud'hommeaux","email":"mprudhom@apache.org","date":"2007-04-06T23:52:03Z"},"message":"OPENJPA-208 Throw NoResultException and NonUniqueResultException when expected\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@526322 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"940ba787fca9753abd5e5aab107f43b7e5c00bcd","url":"https://api.github.com/repos/apache/openjpa/git/trees/940ba787fca9753abd5e5aab107f43b7e5c00bcd"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/af2550bb054bc9ec79aa02d9fa1953765b930da0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/af2550bb054bc9ec79aa02d9fa1953765b930da0","html_url":"https://github.com/apache/openjpa/commit/af2550bb054bc9ec79aa02d9fa1953765b930da0","comments_url":"https://api.github.com/repos/apache/openjpa/commits/af2550bb054bc9ec79aa02d9fa1953765b930da0/comments","author":null,"committer":null,"parents":[{"sha":"840644fcc5332740c9c5f466b968c1cd8afab6b3","url":"https://api.github.com/repos/apache/openjpa/commits/840644fcc5332740c9c5f466b968c1cd8afab6b3","html_url":"https://github.com/apache/openjpa/commit/840644fcc5332740c9c5f466b968c1cd8afab6b3"}],"stats":{"total":24,"additions":18,"deletions":6},"files":[{"sha":"18ce2987a65e77fbc98560cd675bdd140b444131","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryImpl.java","status":"modified","additions":18,"deletions":6,"changes":24,"blob_url":"https://github.com/apache/openjpa/blob/af2550bb054bc9ec79aa02d9fa1953765b930da0/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryImpl.java","raw_url":"https://github.com/apache/openjpa/raw/af2550bb054bc9ec79aa02d9fa1953765b930da0/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryImpl.java?ref=af2550bb054bc9ec79aa02d9fa1953765b930da0","patch":"@@ -281,14 +281,26 @@ public List getResultList() {\n      */\n     public Object getSingleResult() {\n         _em.assertNotCloseInvoked();\n-        // temporarily set query to unique so that a single result is validated\n-        // and returned; unset again in case the user executes query again\n-        // via getResultList\n-        _query.setUnique(true);\n+        Object ob = execute();\n+        if (!(ob instanceof List))\n+            return ob;\n+\n+        List res = (List) ob;\n         try {\n-            return execute();\n+            // don't use size() b/c can be inefficient under some LRS settings\n+            Iterator itr = res.iterator();\n+            if (!itr.hasNext())\n+                throw new NoResultException(_loc.get(\"no-results\",\n+                    _query.getQueryString()).getMessage(), null, null, false);\n+\n+            Object ret = itr.next();\n+            if (itr.hasNext())\n+                throw new NonUniqueResultException(_loc.get(\"mult-results\",\n+                    _query.getQueryString()).getMessage(), null, null, false);\n+\n+            return ret;\n         } finally {\n-            _query.setUnique(false);\n+            OpenJPAPersistence.close(res);\n         }\n     }\n "}]}

