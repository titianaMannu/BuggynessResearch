{"sha":"afa1e44f81246425dfe9caee7fe7f4027f171b6f","node_id":"MDY6Q29tbWl0MjA2MzY0OmFmYTFlNDRmODEyNDY0MjVkZmU5Y2FlZTdmZTdmNDAyN2YxNzFiNmY=","commit":{"author":{"name":"Fay Wang","email":"faywang@apache.org","date":"2010-04-07T17:39:26Z"},"committer":{"name":"Fay Wang","email":"faywang@apache.org","date":"2010-04-07T17:39:26Z"},"message":"OPENJPA-1602: check in test case\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@931628 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"eb707276ac5cd6fa4c51a58d31039600ec9b1186","url":"https://api.github.com/repos/apache/openjpa/git/trees/eb707276ac5cd6fa4c51a58d31039600ec9b1186"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/afa1e44f81246425dfe9caee7fe7f4027f171b6f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/afa1e44f81246425dfe9caee7fe7f4027f171b6f","html_url":"https://github.com/apache/openjpa/commit/afa1e44f81246425dfe9caee7fe7f4027f171b6f","comments_url":"https://api.github.com/repos/apache/openjpa/commits/afa1e44f81246425dfe9caee7fe7f4027f171b6f/comments","author":null,"committer":null,"parents":[{"sha":"b2b922e1c80440c404d32454f05b8b871ca28ead","url":"https://api.github.com/repos/apache/openjpa/commits/b2b922e1c80440c404d32454f05b8b871ca28ead","html_url":"https://github.com/apache/openjpa/commit/b2b922e1c80440c404d32454f05b8b871ca28ead"}],"stats":{"total":25,"additions":25,"deletions":0},"files":[{"sha":"6d2a75548c2fd1829f9795357be5723c7eb363d3","filename":"openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestPessimisticLocks.java","status":"modified","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/apache/openjpa/blob/afa1e44f81246425dfe9caee7fe7f4027f171b6f/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestPessimisticLocks.java","raw_url":"https://github.com/apache/openjpa/raw/afa1e44f81246425dfe9caee7fe7f4027f171b6f/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestPessimisticLocks.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestPessimisticLocks.java?ref=afa1e44f81246425dfe9caee7fe7f4027f171b6f","patch":"@@ -334,6 +334,31 @@ public void testQueryOrderByAfterFindWithPessimisticLocks() {\n         em2.close();\n     }\n \n+    /*\n+     * Test multiple execution of the same query with pessimistic lock.\n+     */\n+    public void testRepeatedQueryWithPessimisticLocks() {\n+        EntityManager em = emf.createEntityManager();\n+        resetSQL();\n+        em.getTransaction().begin();\n+        String jpql = \"select e.firstName from Employee e where e.id = 1\";\n+        Query q1 = em.createQuery(jpql);\n+        q1.setLockMode(LockModeType.PESSIMISTIC_WRITE);\n+        String firstName1 = (String) q1.getSingleResult();\n+        //Expected sql for Derby is:\n+        //SELECT t0.firstName FROM Employee t0 WHERE (t0.id = CAST(? AS BIGINT)) FOR UPDATE WITH RR\n+        String SQL1 = toString(sql);\n+        \n+        // run the second time\n+        resetSQL();\n+        Query q2 = em.createQuery(jpql);\n+        q2.setLockMode(LockModeType.PESSIMISTIC_WRITE);\n+        String firstName2 = (String) q2.getSingleResult();\n+        String SQL2 = toString(sql);\n+        assertEquals(SQL1, SQL2);\n+        em.getTransaction().commit();\n+    }\n+    \n     /**\n      * Assert that an exception of proper type has been thrown. Also checks that\n      * that the exception has populated the failed object."}]}

