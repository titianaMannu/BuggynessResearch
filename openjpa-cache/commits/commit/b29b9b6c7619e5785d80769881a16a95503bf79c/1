{"sha":"b29b9b6c7619e5785d80769881a16a95503bf79c","node_id":"MDY6Q29tbWl0MjA2MzY0OmIyOWI5YjZjNzYxOWU1Nzg1ZDgwNzY5ODgxYTE2YTk1NTAzYmY3OWM=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2008-08-01T20:05:18Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2008-08-01T20:05:18Z"},"message":"OPENJPA-75: Error message for missing identification variable shows nearest Levensthien choice and all avaialble choices\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@681807 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a10231f9a28344d81054cb1a7aed188b783525de","url":"https://api.github.com/repos/apache/openjpa/git/trees/a10231f9a28344d81054cb1a7aed188b783525de"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/b29b9b6c7619e5785d80769881a16a95503bf79c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/b29b9b6c7619e5785d80769881a16a95503bf79c","html_url":"https://github.com/apache/openjpa/commit/b29b9b6c7619e5785d80769881a16a95503bf79c","comments_url":"https://api.github.com/repos/apache/openjpa/commits/b29b9b6c7619e5785d80769881a16a95503bf79c/comments","author":null,"committer":null,"parents":[{"sha":"8cb82a6f330d3fb6032750fc94236ffaa43ad01a","url":"https://api.github.com/repos/apache/openjpa/commits/8cb82a6f330d3fb6032750fc94236ffaa43ad01a","html_url":"https://github.com/apache/openjpa/commit/8cb82a6f330d3fb6032750fc94236ffaa43ad01a"}],"stats":{"total":42,"additions":38,"deletions":4},"files":[{"sha":"5aa10ca363a3c6f9ba4eb7d7a9efab4a7eadf1d2","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/AbstractExpressionBuilder.java","status":"modified","additions":9,"deletions":2,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/b29b9b6c7619e5785d80769881a16a95503bf79c/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/AbstractExpressionBuilder.java","raw_url":"https://github.com/apache/openjpa/raw/b29b9b6c7619e5785d80769881a16a95503bf79c/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/AbstractExpressionBuilder.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/AbstractExpressionBuilder.java?ref=b29b9b6c7619e5785d80769881a16a95503bf79c","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.openjpa.kernel.exps;\n \n+import java.util.Arrays;\n import java.util.Collection;\n import java.util.HashMap;\n import java.util.HashSet;\n@@ -27,6 +28,7 @@\n \n import org.apache.openjpa.kernel.Filters;\n import org.apache.openjpa.lib.util.Localizer;\n+import org.apache.openjpa.lib.util.StringDistance;\n import org.apache.openjpa.lib.util.Localizer.Message;\n import org.apache.openjpa.meta.ClassMetaData;\n import org.apache.openjpa.meta.FieldMetaData;\n@@ -280,9 +282,14 @@ protected Value traversePath(Path path, String field, boolean pcOnly,\n         FieldMetaData fmd = meta.getField(field);\n         if (fmd == null) {\n             Object val = traverseStaticField(meta.getDescribedType(), field);\n-            if (val == null)\n+            if (val == null) {\n+            \tString[] all = meta.getFieldNames();\n+            \tClass cls = meta.getDescribedType();\n                 throw parseException(EX_USER, \"no-field\",\n-                    new Object[]{ meta.getDescribedType(), field }, null);\n+                    new Object[] {field, cls.getSimpleName(), \n+                \tStringDistance.getClosestLevenshteinDistance(field, all), \n+                \tcls.getName(), Arrays.toString(all)}, null);\n+            }\n \n             return factory.newLiteral(val, Literal.TYPE_UNKNOWN);\n         }"},{"sha":"89c26192db4a7375708fb758308622bd19c9fa79","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/ClassMetaData.java","status":"modified","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/apache/openjpa/blob/b29b9b6c7619e5785d80769881a16a95503bf79c/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ClassMetaData.java","raw_url":"https://github.com/apache/openjpa/raw/b29b9b6c7619e5785d80769881a16a95503bf79c/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ClassMetaData.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ClassMetaData.java?ref=b29b9b6c7619e5785d80769881a16a95503bf79c","patch":"@@ -26,6 +26,7 @@\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.Collection;\n+import java.util.Collections;\n import java.util.Comparator;\n import java.util.HashMap;\n import java.util.HashSet;\n@@ -2375,4 +2376,29 @@ public void valueChanged(Value val) {\n     \t\t_cacheTimeout = Integer.MIN_VALUE;\n     \t}\n     }\n+    \n+    /**\n+     * Utility method to get names of all fields including the superclasses'\n+     * sorted in lexical order.\n+     */\n+    public String[] getFieldNames() {\n+    \treturn toNames(getFields());\n+    }\n+    \n+    /**\n+     * Utility method to get names of all declared fields excluding the \n+     * superclasses' sorted in lexical order.\n+     */\n+    public String[] getDeclaredFieldNames() {\n+    \treturn toNames(getDeclaredFields());\n+    }\n+    \n+    String[] toNames(FieldMetaData[] fields) {\n+    \tList<String> result = new ArrayList<String>();\n+    \tfor (FieldMetaData fmd : fields) {\n+    \t\tresult.add(fmd.getName());\n+    \t}\n+    \tCollections.sort(result);\n+    \treturn result.toArray(new String[result.size()]);\n+    }\n }"},{"sha":"4dd1b3e61631e4ec01fac80e71a68aa2df61e9f9","filename":"openjpa-kernel/src/main/resources/org/apache/openjpa/kernel/jpql/localizer.properties","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/b29b9b6c7619e5785d80769881a16a95503bf79c/openjpa-kernel/src/main/resources/org/apache/openjpa/kernel/jpql/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/b29b9b6c7619e5785d80769881a16a95503bf79c/openjpa-kernel/src/main/resources/org/apache/openjpa/kernel/jpql/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/resources/org/apache/openjpa/kernel/jpql/localizer.properties?ref=b29b9b6c7619e5785d80769881a16a95503bf79c","patch":"@@ -28,9 +28,10 @@ no-alias: The alias \"{0}\" was not declared in the statement (declared \\\n cant-resolve-type: The entity \"{0}\" cannot be resolved; please ensure that \\\n \tthe entity name has been declared for the class.\n not-identifer: The specified node (\"{0}\") is not a valid identifier.\n-no-field: No field named \"{1}\" in class \"{0}\".\n+no-field: No field named \"{0}\" in \"{1}\". Did you mean \"{2}\"? Expected one of \\\n+\tthe available field names in \"{3}\": \"{4}\".\n unaccessible-field: The field named \"{1}\" in class \"{0}\" could not be accessed.\n-multi-children: Expression \"{0}\" does not allow mutliple children (\"{1}\").\n+multi-children: Expression \"{0}\" does not allow multiple children (\"{1}\").\n no-children: Expression \"{0}\" requires at least one child.\n unknown-comp: Unknown comparison operator \"{0}\".\n wrong-child-count: Wrong number of arguments to expression \\"}]}

