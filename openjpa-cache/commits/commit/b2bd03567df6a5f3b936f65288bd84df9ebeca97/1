{"sha":"b2bd03567df6a5f3b936f65288bd84df9ebeca97","node_id":"MDY6Q29tbWl0MjA2MzY0OmIyYmQwMzU2N2RmNmE1ZjNiOTM2ZjY1Mjg4YmQ4NGRmOWViZWNhOTc=","commit":{"author":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2008-05-21T07:42:38Z"},"committer":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2008-05-21T07:42:38Z"},"message":"OPENJPA-605 Informix will throw an exception when a unique index is explictily created on the primary key columns\nHelp committing new patch provided by Fay Wang\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@658576 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c9aa192417dd29219090ea1abcf9401113bbbdf3","url":"https://api.github.com/repos/apache/openjpa/git/trees/c9aa192417dd29219090ea1abcf9401113bbbdf3"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/b2bd03567df6a5f3b936f65288bd84df9ebeca97","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/b2bd03567df6a5f3b936f65288bd84df9ebeca97","html_url":"https://github.com/apache/openjpa/commit/b2bd03567df6a5f3b936f65288bd84df9ebeca97","comments_url":"https://api.github.com/repos/apache/openjpa/commits/b2bd03567df6a5f3b936f65288bd84df9ebeca97/comments","author":null,"committer":null,"parents":[{"sha":"689eec175b9b0743785fec5db31cada6bd1fea59","url":"https://api.github.com/repos/apache/openjpa/commits/689eec175b9b0743785fec5db31cada6bd1fea59","html_url":"https://github.com/apache/openjpa/commit/689eec175b9b0743785fec5db31cada6bd1fea59"}],"stats":{"total":32,"additions":17,"deletions":15},"files":[{"sha":"e500de0977fbc8df1612135fe648fc2d77a0fa6b","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaTool.java","status":"modified","additions":3,"deletions":14,"changes":17,"blob_url":"https://github.com/apache/openjpa/blob/b2bd03567df6a5f3b936f65288bd84df9ebeca97/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaTool.java","raw_url":"https://github.com/apache/openjpa/raw/b2bd03567df6a5f3b936f65288bd84df9ebeca97/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaTool.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaTool.java?ref=b2bd03567df6a5f3b936f65288bd84df9ebeca97","patch":"@@ -988,20 +988,9 @@ public boolean createIndex(Index idx, Table table)\n         throws SQLException {\n         // Informix will automatically create a unique index for the \n         // primary key, so don't create another index again\n-        if (_dict.platform.indexOf(\"Informix\") > -1) {\n-            Column[] cols = idx.getColumns();\n-            Column[] pkCols = table.getPrimaryKey().getColumns();\n-            if (cols.length == pkCols.length) {\n-                String[] colNames = new String[cols.length];\n-                String[] pkColNames = new String[cols.length];\n-                for (int i = 0; i < cols.length; i++) \n-                    colNames[i] = cols[i].getName();\n-                for (int i = 0; i < pkCols.length; i++) \n-                    pkColNames[i] = pkCols[i].getName();\n-                if (java.util.Arrays.equals(colNames, pkColNames))\n-                    return true;\n-            }\n-        }\n+\n+        if (!_dict.needsToCreateIndex(idx,table))\n+            return false;\n \n         int max = _dict.maxIndexesPerTable;\n "},{"sha":"07b5ed4c9d7071ae0b634311e34d5b453e990d5f","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/b2bd03567df6a5f3b936f65288bd84df9ebeca97/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/b2bd03567df6a5f3b936f65288bd84df9ebeca97/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java?ref=b2bd03567df6a5f3b936f65288bd84df9ebeca97","patch":"@@ -4407,4 +4407,8 @@ public boolean isSelect(String sql) {\n         }\n         return false;\n     }\n+\n+    public boolean needsToCreateIndex(Index idx, Table table) {\n+        return true;\n+    }\n }"},{"sha":"2010de9b7000ee1f74070cedbbbed6498beb8f21","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/InformixDictionary.java","status":"modified","additions":10,"deletions":1,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/b2bd03567df6a5f3b936f65288bd84df9ebeca97/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/InformixDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/b2bd03567df6a5f3b936f65288bd84df9ebeca97/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/InformixDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/InformixDictionary.java?ref=b2bd03567df6a5f3b936f65288bd84df9ebeca97","patch":"@@ -268,4 +268,13 @@ public void indexOf(SQLBuffer buf, FilterValue str, FilterValue find,\n             FilterValue start) {\n         throw new UnsupportedException();\n     }\n-}\n+\n+    public boolean needsToCreateIndex(Index idx, Table table) {\n+       // Informix will automatically create a unique index for the \n+       // primary key, so don't create another index again\n+       PrimaryKey pk = table.getPrimaryKey();\n+       if (pk != null && idx.columnsMatch(pk.getColumns()))\n+           return false;\n+       return true;\n+    }\n+}\n\\ No newline at end of file"}]}

