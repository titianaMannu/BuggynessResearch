{"sha":"b3d7fe8829df05bf836b207ca62856c6e6e8fa82","node_id":"MDY6Q29tbWl0MjA2MzY0OmIzZDdmZTg4MjlkZjA1YmY4MzZiMjA3Y2E2Mjg1NmM2ZTZlOGZhODI=","commit":{"author":{"name":"Kevin W. Sutter","email":"kwsutter@apache.org","date":"2014-04-11T13:33:05Z"},"committer":{"name":"Kevin W. Sutter","email":"kwsutter@apache.org","date":"2014-04-11T13:33:05Z"},"message":"OPENJPA-2442.  Just using ProxyConcurrentMaps for proxying the Map methods.  Since this extends ProxyMaps anyway, this is pretty safe change.  This change resolves the TestProxyManager errors in openjpa-kernel when testing with Java 8 runtime.  And, it doesn't affect Java 7 runtime at all.  Refer to the Comments section for more details.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1586651 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"5093c0f9f276d6eb28403589a7181811dc1d2c1d","url":"https://api.github.com/repos/apache/openjpa/git/trees/5093c0f9f276d6eb28403589a7181811dc1d2c1d"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/b3d7fe8829df05bf836b207ca62856c6e6e8fa82","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/b3d7fe8829df05bf836b207ca62856c6e6e8fa82","html_url":"https://github.com/apache/openjpa/commit/b3d7fe8829df05bf836b207ca62856c6e6e8fa82","comments_url":"https://api.github.com/repos/apache/openjpa/commits/b3d7fe8829df05bf836b207ca62856c6e6e8fa82/comments","author":null,"committer":null,"parents":[{"sha":"c0b6d882853a8878a03914f9f9be6fe802f1a77c","url":"https://api.github.com/repos/apache/openjpa/commits/c0b6d882853a8878a03914f9f9be6fe802f1a77c","html_url":"https://github.com/apache/openjpa/commit/c0b6d882853a8878a03914f9f9be6fe802f1a77c"}],"stats":{"total":10,"additions":4,"deletions":6},"files":[{"sha":"0ad216518ad7871bd5e944dbcefd0b9d910d9c58","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyConcurrentMaps.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/b3d7fe8829df05bf836b207ca62856c6e6e8fa82/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyConcurrentMaps.java","raw_url":"https://github.com/apache/openjpa/raw/b3d7fe8829df05bf836b207ca62856c6e6e8fa82/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyConcurrentMaps.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyConcurrentMaps.java?ref=b3d7fe8829df05bf836b207ca62856c6e6e8fa82","patch":"@@ -26,15 +26,15 @@\n  */\n public class ProxyConcurrentMaps extends ProxyMaps {\n \t/**\n-     * Call before invoking {@link Map#remove} on super.\n+     * Call before invoking {@link Map#remove(key, value) } on super.\n      */\n     public static boolean beforeRemove(ProxyMap map, Object key, Object value) {\n         dirty(map, false);\n         return map.containsKey(key);\n     }\n     \n     /**\n-     * Call after invoking {@link Map#remove} on super.\n+     * Call after invoking {@link Map#remove(key, value) } on super.\n      *\n      * @param ret the return value from the super's method\n      * @param before the return value from {@link #beforeRemove}"},{"sha":"b84028134b36bf45c64389496b08ac7692b41232","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyManagerImpl.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/b3d7fe8829df05bf836b207ca62856c6e6e8fa82/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyManagerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/b3d7fe8829df05bf836b207ca62856c6e6e8fa82/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyManagerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ProxyManagerImpl.java?ref=b3d7fe8829df05bf836b207ca62856c6e6e8fa82","patch":"@@ -58,7 +58,6 @@\n import org.apache.openjpa.lib.util.Options;\n \n import java.util.concurrent.ConcurrentHashMap;\n-import java.util.concurrent.ConcurrentMap;\n \n import serp.bytecode.BCClass;\n import serp.bytecode.BCField;\n@@ -632,8 +631,7 @@ protected BCClass generateProxyMapBytecode(Class type, boolean runtime) {\n         delegateConstructors(bc, type);\n         addProxyMethods(bc, false);\n         addProxyMapMethods(bc, type);\n-        Class<? extends ProxyMaps> mapProxyClassType =\n-            ConcurrentMap.class.isAssignableFrom(type) ? ProxyConcurrentMaps.class : ProxyMaps.class;\n+        Class<? extends ProxyMaps> mapProxyClassType = ProxyConcurrentMaps.class;\n         proxyRecognizedMethods(bc, type, mapProxyClassType, ProxyMap.class);\n         proxySetters(bc, type);\n         addWriteReplaceMethod(bc, runtime);\n@@ -1338,7 +1336,7 @@ private void proxyRecognizedMethods(BCClass bc, Class type, Class helper,\n \n             // first check for overriding method \n             try {\n-                match = helper.getMethod(meths[i].getName(), params); \n+                match = helper.getMethod(meths[i].getName(), params);\n                 proxyOverrideMethod(bc, meths[i], match, params);\n                 continue;\n             } catch (NoSuchMethodException nsme) {"}]}

