{"sha":"b5fabd88dd4c4f49b33b312fab9eece38418c8b6","node_id":"MDY6Q29tbWl0MjA2MzY0OmI1ZmFiZDg4ZGQ0YzRmNDliMzNiMzEyZmFiOWVlY2UzODQxOGM4YjY=","commit":{"author":{"name":"Jeremy Bauer","email":"jrbauer@apache.org","date":"2009-09-10T19:31:01Z"},"committer":{"name":"Jeremy Bauer","email":"jrbauer@apache.org","date":"2009-09-10T19:31:01Z"},"message":"OPENJPA-869 Fixup order column test variations failing on Oracle.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@813556 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"47e317f5e62a900fbb9bacbe7ee8979b26a8c726","url":"https://api.github.com/repos/apache/openjpa/git/trees/47e317f5e62a900fbb9bacbe7ee8979b26a8c726"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/b5fabd88dd4c4f49b33b312fab9eece38418c8b6","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/b5fabd88dd4c4f49b33b312fab9eece38418c8b6","html_url":"https://github.com/apache/openjpa/commit/b5fabd88dd4c4f49b33b312fab9eece38418c8b6","comments_url":"https://api.github.com/repos/apache/openjpa/commits/b5fabd88dd4c4f49b33b312fab9eece38418c8b6/comments","author":null,"committer":null,"parents":[{"sha":"0d3179cef9e7efb820cafda6a94ca141edcf32f5","url":"https://api.github.com/repos/apache/openjpa/commits/0d3179cef9e7efb820cafda6a94ca141edcf32f5","html_url":"https://github.com/apache/openjpa/commit/0d3179cef9e7efb820cafda6a94ca141edcf32f5"}],"stats":{"total":48,"additions":21,"deletions":27},"files":[{"sha":"b14b71e71127bd8c1a901c0516bd9153d4536bb6","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/order/ColDefTestEntity.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/b5fabd88dd4c4f49b33b312fab9eece38418c8b6/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/order/ColDefTestEntity.java","raw_url":"https://github.com/apache/openjpa/raw/b5fabd88dd4c4f49b33b312fab9eece38418c8b6/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/order/ColDefTestEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/order/ColDefTestEntity.java?ref=b5fabd88dd4c4f49b33b312fab9eece38418c8b6","patch":"@@ -43,15 +43,15 @@\n     private int id;\n     \n     @OneToMany(cascade=CascadeType.PERSIST)\n-    @OrderColumn(name=\"one2McoldefOrder\", columnDefinition=\"BIGINT\")\n+    @OrderColumn(name=\"one2McoldefOrder\", columnDefinition=\"INTEGER\")\n     private List<ColDefTestElement> one2Mcoldef;\n \n     @ElementCollection\n-    @OrderColumn(name=\"colcoldefOrder\", columnDefinition=\"BIGINT\")\n+    @OrderColumn(name=\"colcoldefOrder\", columnDefinition=\"INTEGER\")\n     private Set<ColDefTestElement> collcoldef;\n     \n     @ManyToMany(cascade=CascadeType.PERSIST)\n-    @OrderColumn(name=\"m2McoldefOrder\", columnDefinition=\"BIGINT\")\n+    @OrderColumn(name=\"m2McoldefOrder\", columnDefinition=\"INTEGER\")\n     private List<ColDefTestElement> m2mcoldef;\n \n     public void setOne2Mcoldef(List<ColDefTestElement> one2Mcoldef) {"},{"sha":"962f3c5bc73c9dfee36d9424582974b17dc032b3","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/order/Inning.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/apache/openjpa/blob/b5fabd88dd4c4f49b33b312fab9eece38418c8b6/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/order/Inning.java","raw_url":"https://github.com/apache/openjpa/raw/b5fabd88dd4c4f49b33b312fab9eece38418c8b6/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/order/Inning.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/order/Inning.java?ref=b5fabd88dd4c4f49b33b312fab9eece38418c8b6","patch":"@@ -23,7 +23,7 @@\n @Embeddable\n public class Inning {\n \n-    private int number;\n+    private int inningNumber;\n     \n     private int hitsHome;\n     \n@@ -33,17 +33,17 @@ public Inning() {\n     }\n \n     public Inning(int num, int hh, int ha) {        \n-        number = num;\n+        inningNumber = num;\n         hitsHome = hh;\n         hitsAway = ha;\n     }\n \n-    public void setNumber(int number) {\n-        this.number = number;\n+    public void setInningNumber(int number) {\n+        this.inningNumber = number;\n     }\n \n-    public int getNumber() {\n-        return number;\n+    public int getInningNumber() {\n+        return inningNumber;\n     }\n \n     public void setHitsHome(int hitsHome) {\n@@ -65,7 +65,7 @@ public int getHitsAway() {\n     public boolean equals(Object obj) {\n         if (obj instanceof Inning) {\n             Inning in = (Inning)obj;\n-            return getNumber() == in.getNumber() &&\n+            return getInningNumber() == in.getInningNumber() &&\n                 getHitsHome() == in.getHitsHome() &&\n                 getHitsAway() == in.getHitsAway();\n         }"},{"sha":"fb6373c5f9967ff51437f329c6650b201f3c0990","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/order/Player.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/apache/openjpa/blob/b5fabd88dd4c4f49b33b312fab9eece38418c8b6/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/order/Player.java","raw_url":"https://github.com/apache/openjpa/raw/b5fabd88dd4c4f49b33b312fab9eece38418c8b6/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/order/Player.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/order/Player.java?ref=b5fabd88dd4c4f49b33b312fab9eece38418c8b6","patch":"@@ -27,7 +27,7 @@\n @Entity\n public class Player extends Person {\n     \n-    private int number;\n+    private int playerNumber;\n \n     @ManyToMany(mappedBy=\"playersTrained\")\n     private List<Trainer> trainers;\n@@ -41,15 +41,15 @@ public Player() {\n     \n     public Player(String name, int number) {\n         setName(name);\n-        this.number = number;\n+        this.playerNumber = number;\n     }\n \n-    public void setNumber(int number) {\n-        this.number = number;\n+    public void setPlayerNumber(int number) {\n+        this.playerNumber = number;\n     }\n \n-    public int getNumber() {\n-        return number;\n+    public int getPlayerNumber() {\n+        return playerNumber;\n     }    \n \n     public void setTrainers(List<Trainer> trainers) {\n@@ -64,7 +64,7 @@ public boolean equals(Object obj) {\n         if (obj instanceof Player) {\n             Player player = (Player)obj;\n             return super.equals(obj) &&\n-                player.getNumber() == number;\n+                player.getPlayerNumber() == playerNumber;\n         }\n         return false;\n     }"},{"sha":"b0e24264daf159da2233d3e75d2844adaca0de61","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/order/TestOrderColumnXML.java","status":"modified","additions":4,"deletions":10,"changes":14,"blob_url":"https://github.com/apache/openjpa/blob/b5fabd88dd4c4f49b33b312fab9eece38418c8b6/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/order/TestOrderColumnXML.java","raw_url":"https://github.com/apache/openjpa/raw/b5fabd88dd4c4f49b33b312fab9eece38418c8b6/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/order/TestOrderColumnXML.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/order/TestOrderColumnXML.java?ref=b5fabd88dd4c4f49b33b312fab9eece38418c8b6","patch":"@@ -89,15 +89,9 @@ public void testOrderColumnNullableFalse() {\n     }\n     \n     /*\n-     * Validates the use of the columnDefinition attribute on OrderColumn. This\n-     * test will be skipped unless the database in use is Derby since the \n-     * annotation column definition attribute value is hard coded and all \n-     * databases may not support the supplied column definition. \n+     * Validates the use of the columnDefinition attribute on OrderColumn.\n      */\n     public void testOrderColumnColumnDefinition() {\n-        if (!isTargetPlatform(\"derby\")) {\n-            return;\n-        }\n \n         OpenJPAEntityManagerFactorySPI emf1 = \n             (OpenJPAEntityManagerFactorySPI)OpenJPAPersistence.\n@@ -110,13 +104,13 @@ public void testOrderColumnColumnDefinition() {\n         // \n         // Create a collection using a custom column definition\n         validateOrderColumnDef(emf1, ColDefTestEntity.class, \n-            \"one2Mcoldef\", \"BIGINT\");\n+            \"one2Mcoldef\", \"INTEGER\");\n \n         validateOrderColumnDef(emf1, ColDefTestEntity.class, \n-            \"collcoldef\", \"BIGINT\");\n+            \"collcoldef\", \"INTEGER\");\n \n         validateOrderColumnDef(emf1, ColDefTestEntity.class, \n-            \"m2mcoldef\", \"BIGINT\");\n+            \"m2mcoldef\", \"INTEGER\");\n \n         // Add and query some values\n         ColDefTestEntity cdent = new ColDefTestEntity();"}]}

