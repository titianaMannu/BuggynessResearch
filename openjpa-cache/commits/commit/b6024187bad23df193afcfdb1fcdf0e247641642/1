{"sha":"b6024187bad23df193afcfdb1fcdf0e247641642","node_id":"MDY6Q29tbWl0MjA2MzY0OmI2MDI0MTg3YmFkMjNkZjE5M2FmY2ZkYjFmY2RmMGUyNDc2NDE2NDI=","commit":{"author":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-12-16T21:26:39Z"},"committer":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-12-16T21:26:39Z"},"message":"OPENJPA-1900: Fix ClassCastException when serializing a proxy for an Entity that exists in an active persistence context. Patch contributed by Mark Struberg.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1050168 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"1bc6715128b9eea31d787363a99b35ef1005e8d5","url":"https://api.github.com/repos/apache/openjpa/git/trees/1bc6715128b9eea31d787363a99b35ef1005e8d5"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/b6024187bad23df193afcfdb1fcdf0e247641642","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/b6024187bad23df193afcfdb1fcdf0e247641642","html_url":"https://github.com/apache/openjpa/commit/b6024187bad23df193afcfdb1fcdf0e247641642","comments_url":"https://api.github.com/repos/apache/openjpa/commits/b6024187bad23df193afcfdb1fcdf0e247641642/comments","author":null,"committer":null,"parents":[{"sha":"aedc8d9dd08dd35f6a2a8e8bfb9b5dc5ce4c332c","url":"https://api.github.com/repos/apache/openjpa/commits/aedc8d9dd08dd35f6a2a8e8bfb9b5dc5ce4c332c","html_url":"https://github.com/apache/openjpa/commit/aedc8d9dd08dd35f6a2a8e8bfb9b5dc5ce4c332c"}],"stats":{"total":168,"additions":157,"deletions":11},"files":[{"sha":"8b59cf58ce0d8ea41ffe983fc337c3a3dcd8fb80","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/proxy/TestEntitySerialize.java","status":"added","additions":98,"deletions":0,"changes":98,"blob_url":"https://github.com/apache/openjpa/blob/b6024187bad23df193afcfdb1fcdf0e247641642/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/proxy/TestEntitySerialize.java","raw_url":"https://github.com/apache/openjpa/raw/b6024187bad23df193afcfdb1fcdf0e247641642/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/proxy/TestEntitySerialize.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/proxy/TestEntitySerialize.java?ref=b6024187bad23df193afcfdb1fcdf0e247641642","patch":"@@ -0,0 +1,98 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.proxy;\n+\n+import java.util.Date;\n+import java.util.UUID;\n+\n+import javax.persistence.EntityManager;\n+\n+import org.apache.openjpa.lib.log.Log;\n+import org.apache.openjpa.persistence.OpenJPAEntityManagerFactorySPI;\n+import org.apache.openjpa.persistence.OpenJPAPersistence;\n+import org.apache.openjpa.persistence.proxy.entities.Address;\n+import org.apache.openjpa.persistence.proxy.entities.Annuity;\n+import org.apache.openjpa.persistence.proxy.entities.AnnuityHolder;\n+import org.apache.openjpa.persistence.proxy.entities.AnnuityPersistebleObject;\n+import org.apache.openjpa.persistence.proxy.entities.Contact;\n+import org.apache.openjpa.persistence.proxy.entities.EquityAnnuity;\n+import org.apache.openjpa.persistence.proxy.entities.FixedAnnuity;\n+import org.apache.openjpa.persistence.proxy.entities.Payor;\n+import org.apache.openjpa.persistence.proxy.entities.Payout;\n+import org.apache.openjpa.persistence.proxy.entities.Person;\n+import org.apache.openjpa.persistence.proxy.entities.Rider;\n+import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n+\n+/**\n+ * Test for showing OPENJPA-1900\n+ */\n+public class TestEntitySerialize extends SingleEMFTestCase {\n+\n+    public void setUp() {\n+        setUp(DROP_TABLES, Address.class, Annuity.class, AnnuityHolder.class, AnnuityPersistebleObject.class,\n+            Contact.class, EquityAnnuity.class, FixedAnnuity.class, Payor.class, Payout.class, Person.class,\n+            Rider.class);\n+    }\n+\n+    public void testSerialization() throws Exception {\n+        OpenJPAEntityManagerFactorySPI emf =\n+            (OpenJPAEntityManagerFactorySPI) OpenJPAPersistence.createEntityManagerFactory(\"Annuity1Compat\",\n+                \"org/apache/openjpa/persistence/proxy/persistence1.xml\");\n+        assertNotNull(emf);\n+\n+        EntityManager em = emf.createEntityManager();\n+        try {\n+            em.getTransaction().begin();\n+            Annuity ann = createAnnuity(em);\n+\n+            // Make sure that we can detach an Entity via serialization that is currently associated\n+            // with a persistence context\n+            assertNotNull(roundtrip(ann));\n+            em.getTransaction().commit();\n+        } finally {\n+            closeEM(em);\n+        }\n+    }\n+\n+    private Annuity createAnnuity(EntityManager em) {\n+        FixedAnnuity fixedAnn = new FixedAnnuity();\n+        ((FixedAnnuity) fixedAnn).setRate(10.0);\n+        fixedAnn.setId(getId());\n+        fixedAnn.setAmount(500.00);\n+        fixedAnn.setAccountNumber(\"123456\");\n+        em.persist(fixedAnn);\n+\n+        EquityAnnuity equityAnn = new EquityAnnuity();\n+        equityAnn.setId(getId());\n+        equityAnn.setAmount(500.00);\n+        equityAnn.setAccountNumber(\"123456\");\n+        equityAnn.setFundNames(\"Something nothing wrong\");\n+        equityAnn.setIndexRate(10.99);\n+        equityAnn.setLastPaidAmt(100.00);\n+        equityAnn.setPreviousAnnuity(fixedAnn);\n+        em.persist(equityAnn);\n+\n+        return equityAnn;\n+    }\n+\n+    private String getId() {\n+        UUID uid = UUID.randomUUID();\n+        return uid.toString();\n+    }\n+}"},{"sha":"62a508f98a4a3bbf20f9f2f38ee6bc87639ca85b","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/proxy/entities/Annuity.java","status":"modified","additions":31,"deletions":3,"changes":34,"blob_url":"https://github.com/apache/openjpa/blob/b6024187bad23df193afcfdb1fcdf0e247641642/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/proxy/entities/Annuity.java","raw_url":"https://github.com/apache/openjpa/raw/b6024187bad23df193afcfdb1fcdf0e247641642/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/proxy/entities/Annuity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/proxy/entities/Annuity.java?ref=b6024187bad23df193afcfdb1fcdf0e247641642","patch":"@@ -20,6 +20,7 @@\n \n import java.text.DecimalFormat;\n import java.util.ArrayList;\n+import java.util.Date;\n import java.util.List;\n \n import javax.persistence.AttributeOverride;\n@@ -28,6 +29,7 @@\n import javax.persistence.DiscriminatorColumn;\n import javax.persistence.DiscriminatorType;\n import javax.persistence.DiscriminatorValue;\n+import javax.persistence.ElementCollection;\n import javax.persistence.Entity;\n import javax.persistence.FetchType;\n import javax.persistence.Inheritance;\n@@ -36,6 +38,9 @@\n import javax.persistence.JoinTable;\n import javax.persistence.ManyToMany;\n import javax.persistence.OneToMany;\n+import javax.persistence.OneToOne;\n+import javax.persistence.Temporal;\n+import javax.persistence.TemporalType;\n \n \n @SuppressWarnings(\"serial\")\n@@ -53,7 +58,10 @@\n     private List<IPayout> payouts = new ArrayList<IPayout>();\n     private List<IRider> riders = new ArrayList<IRider>();\n     private List<IPayor> payors = new ArrayList<IPayor>();\n+    private List<String> comments;\n+    private Date approvedAt;\n     \n+    private Annuity previousAnnuity;\n     public Annuity(){\n     }\n \n@@ -134,7 +142,27 @@ public void setRiders(List<IRider> riders) {\n         this.riders = riders;\n     }\n \n-    \n-    \n-    \n+    @ElementCollection\n+    public List<String> getComments() {\n+        return comments;\n+    }\n+    public void setComments(List<String> comments) {\n+        this.comments = comments;\n+    }\n+\n+    @Temporal(TemporalType.DATE)\n+    public Date getApprovedAt() {\n+        return approvedAt;\n+    }\n+    public void setApprovedAt(Date approvedAt) {\n+        this.approvedAt = approvedAt;\n+    }\n+\n+    @OneToOne\n+    public Annuity getPreviousAnnuity() {\n+        return previousAnnuity;\n+    }\n+    public void setPreviousAnnuity(Annuity previousAnnuity) {\n+        this.previousAnnuity = previousAnnuity;\n+    }\n }"},{"sha":"e54e3eb3882b570aeb2114b940c32c80dcf49bca","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/proxy/entities/EquityAnnuity.java","status":"modified","additions":18,"deletions":7,"changes":25,"blob_url":"https://github.com/apache/openjpa/blob/b6024187bad23df193afcfdb1fcdf0e247641642/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/proxy/entities/EquityAnnuity.java","raw_url":"https://github.com/apache/openjpa/raw/b6024187bad23df193afcfdb1fcdf0e247641642/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/proxy/entities/EquityAnnuity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/proxy/entities/EquityAnnuity.java?ref=b6024187bad23df193afcfdb1fcdf0e247641642","patch":"@@ -19,6 +19,7 @@\n package org.apache.openjpa.persistence.proxy.entities;\n \n import java.text.DecimalFormat;\n+import java.text.ParseException;\n \n import javax.persistence.Column;\n import javax.persistence.DiscriminatorValue;\n@@ -48,12 +49,22 @@ public Double getIndexRate() {\n \t\treturn indexRate;\n \t}\n \n-\tpublic void setIndexRate(Double indexRate) {\n-\t\tthis.indexRate = indexRate;\n-\t\tif (this.indexRate != null) {\n-\t\t\tDecimalFormat df = new DecimalFormat(\"#.##\");\n-\t\t\tthis.indexRate= new Double(df.format(indexRate));\n-\t\t}\n-\t}\n+    public void setIndexRate(Double indexRate) {\n+        if (indexRate != null) {\n+            DecimalFormat df = new DecimalFormat(\"#.##\");\n+            try\n+            {\n+                // parse back via the DateFormat because countries might use ',' as comma separator\n+                this.indexRate= df.parse(df.format(indexRate)).doubleValue();\n+            }\n+            catch (ParseException e)\n+            {\n+                throw new RuntimeException(e);\n+            }\n+        }\n+        else {\n+            this.indexRate = null;\n+        }\n+    }\n \n }"},{"sha":"d8aec6b954e74367a320dfd000d45c99cbb6612f","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/proxy/entities/IAnnuity.java","status":"modified","additions":10,"deletions":1,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/b6024187bad23df193afcfdb1fcdf0e247641642/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/proxy/entities/IAnnuity.java","raw_url":"https://github.com/apache/openjpa/raw/b6024187bad23df193afcfdb1fcdf0e247641642/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/proxy/entities/IAnnuity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/proxy/entities/IAnnuity.java?ref=b6024187bad23df193afcfdb1fcdf0e247641642","patch":"@@ -18,6 +18,7 @@\n  */\n package org.apache.openjpa.persistence.proxy.entities;\n \n+import java.util.Date;\n import java.util.List;\n \n public interface IAnnuity extends IAnnuityObject {\n@@ -45,5 +46,13 @@\n \t\n \tpublic abstract List<IPayor> getPayors();\n \tpublic abstract void setPayors(List<IPayor> payors);\n-\t\n+\n+    public abstract List<String> getComments();\n+    public abstract void setComments(List<String> comments);\n+\n+    public abstract Date getApprovedAt();\n+    public void setApprovedAt(Date approvedAt);\n+\n+    public Annuity getPreviousAnnuity();\n+    public void setPreviousAnnuity(Annuity previousAnnuity);\n }"}]}

