{"sha":"b67e3d83ac9e15d019fca58e577d1226ff89a388","node_id":"MDY6Q29tbWl0MjA2MzY0OmI2N2UzZDgzYWM5ZTE1ZDAxOWZjYTU4ZTU3N2QxMjI2ZmY4OWEzODg=","commit":{"author":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-10-06T14:02:06Z"},"committer":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-10-06T14:02:06Z"},"message":"OPENJPA-1801: Add missing test Entity.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1005044 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"fd8d9d834b2b52043d97390048aaef0efd07d70b","url":"https://api.github.com/repos/apache/openjpa/git/trees/fd8d9d834b2b52043d97390048aaef0efd07d70b"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/b67e3d83ac9e15d019fca58e577d1226ff89a388","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/b67e3d83ac9e15d019fca58e577d1226ff89a388","html_url":"https://github.com/apache/openjpa/commit/b67e3d83ac9e15d019fca58e577d1226ff89a388","comments_url":"https://api.github.com/repos/apache/openjpa/commits/b67e3d83ac9e15d019fca58e577d1226ff89a388/comments","author":null,"committer":null,"parents":[{"sha":"426dce38672b3d6c117e3cba912d83bc1b69ec9a","url":"https://api.github.com/repos/apache/openjpa/commits/426dce38672b3d6c117e3cba912d83bc1b69ec9a","html_url":"https://github.com/apache/openjpa/commit/426dce38672b3d6c117e3cba912d83bc1b69ec9a"}],"stats":{"total":122,"additions":122,"deletions":0},"files":[{"sha":"e1f730f6fbbcd4a9223ce94f99ff44e3f5d2d296","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/CachedEntityStatistics.java","status":"added","additions":122,"deletions":0,"changes":122,"blob_url":"https://github.com/apache/openjpa/blob/b67e3d83ac9e15d019fca58e577d1226ff89a388/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/CachedEntityStatistics.java","raw_url":"https://github.com/apache/openjpa/raw/b67e3d83ac9e15d019fca58e577d1226ff89a388/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/CachedEntityStatistics.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/CachedEntityStatistics.java?ref=b67e3d83ac9e15d019fca58e577d1226ff89a388","patch":"@@ -0,0 +1,122 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.datacache;\n+\n+import java.util.Collection;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.OneToMany;\n+import javax.persistence.Version;\n+\n+@Entity\n+public class CachedEntityStatistics {\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    protected int id;\n+\n+    @Version\n+    protected int version;\n+\n+    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER)\n+    Set<CachedEntityStatistics> eagerList = new HashSet<CachedEntityStatistics>();\n+\n+    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY)\n+    Set<CachedEntityStatistics> lazyList = new HashSet<CachedEntityStatistics>();\n+\n+    public CachedEntityStatistics() {\n+\n+    }\n+\n+    private String firstName, lastName;\n+\n+    public int getId() {\n+        return id;\n+    }\n+\n+    public void setId(int id) {\n+        this.id = id;\n+    }\n+\n+    public String getFirstName() {\n+        return firstName;\n+    }\n+\n+    public void setVersion(int v) {\n+        version = v;\n+    }\n+\n+    public void setFirstName(String firstName) {\n+        this.firstName = firstName;\n+    }\n+\n+    public String getLastName() {\n+        return lastName;\n+    }\n+\n+    public void setLastName(String lastName) {\n+        this.lastName = lastName;\n+    }\n+\n+    public int getVersion() {\n+        return version;\n+    }\n+\n+    public Collection<CachedEntityStatistics> getEagerList() {\n+        return eagerList;\n+    }\n+\n+    public void addEager(CachedEntityStatistics p) {\n+        eagerList.add(p);\n+    }\n+\n+    public Set<CachedEntityStatistics> getLazyList() {\n+        return lazyList;\n+    }\n+\n+    public void setLazyList(Set<CachedEntityStatistics> p) {\n+        lazyList = p;\n+    }\n+\n+    public void addLazy(CachedEntityStatistics p) {\n+        lazyList.add(p);\n+    }\n+\n+    public int hashCode() {\n+        int res = id * 31;\n+        for (CachedEntityStatistics m : eagerList) {\n+            res = res * 31 + m.hashCode();\n+        }\n+\n+        return res;\n+\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return id + \"->\" + getEagerList();\n+    }\n+\n+}"}]}

