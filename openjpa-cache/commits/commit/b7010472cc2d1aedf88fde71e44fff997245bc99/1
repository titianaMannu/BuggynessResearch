{"sha":"b7010472cc2d1aedf88fde71e44fff997245bc99","node_id":"MDY6Q29tbWl0MjA2MzY0OmI3MDEwNDcyY2MyZDFhZWRmODhmZGU3MWU0NGZmZjk5NzI0NWJjOTk=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-04-08T20:54:59Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-04-08T20:54:59Z"},"message":"OPENJPA-1620 Fix TestJDBCEscapeDate test for MSSQL\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@932111 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"ff8664136961d244bc4c0e835873eecff151b349","url":"https://api.github.com/repos/apache/openjpa/git/trees/ff8664136961d244bc4c0e835873eecff151b349"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/b7010472cc2d1aedf88fde71e44fff997245bc99","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/b7010472cc2d1aedf88fde71e44fff997245bc99","html_url":"https://github.com/apache/openjpa/commit/b7010472cc2d1aedf88fde71e44fff997245bc99","comments_url":"https://api.github.com/repos/apache/openjpa/commits/b7010472cc2d1aedf88fde71e44fff997245bc99/comments","author":null,"committer":null,"parents":[{"sha":"cf752cbc09cf5e09160ff18648f4c25b2735aac8","url":"https://api.github.com/repos/apache/openjpa/commits/cf752cbc09cf5e09160ff18648f4c25b2735aac8","html_url":"https://github.com/apache/openjpa/commit/cf752cbc09cf5e09160ff18648f4c25b2735aac8"}],"stats":{"total":62,"additions":45,"deletions":17},"files":[{"sha":"325c70d0a1536aebed1f10e2e72edcef6db4a193","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestJDBCEscapeDate.java","status":"modified","additions":45,"deletions":17,"changes":62,"blob_url":"https://github.com/apache/openjpa/blob/b7010472cc2d1aedf88fde71e44fff997245bc99/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestJDBCEscapeDate.java","raw_url":"https://github.com/apache/openjpa/raw/b7010472cc2d1aedf88fde71e44fff997245bc99/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestJDBCEscapeDate.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestJDBCEscapeDate.java?ref=b7010472cc2d1aedf88fde71e44fff997245bc99","patch":"@@ -27,6 +27,8 @@\n \n import junit.framework.Assert;\n \n+import org.apache.openjpa.jdbc.conf.JDBCConfiguration;\n+import org.apache.openjpa.jdbc.sql.SQLServerDictionary;\n import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n \n /**\n@@ -52,26 +54,46 @@ public void testJDBCEscape() {\n         em.flush();\n         tran.commit();\n         em.clear();\n+\n+        String[] jpql;\n+        if (((JDBCConfiguration)emf.getConfiguration()).getDBDictionaryInstance() instanceof SQLServerDictionary){\n+            jpql = new String[] {\n+                // some changes to the jpql strings had to be made for MSSQL\n+                \"select a from Employee a where a.hireDate >= {d '2009-08-25'}\",\n+                \"select a from Employee a where a.hireDate >= {d '2009-08-05'}\",    // requires yyyy-mm-dd\n+                // \"select a from Employee a where a.hireTime >= {t '00:00:00'}\",   // fails ?\n+                \"select a from Employee a where a.hireTimestamp >= {ts '2009-08-25 00:00:00'}\",\n+                \"select a from Employee a where a.hireTimestamp >= {ts '2009-08-25 00:00:00.'}\",\n+                \"select a from Employee a where a.hireTimestamp >= {ts '2009-08-25 00:00:00.1'}\",\n+                \"select a from Employee a where a.hireTimestamp >= {ts '2009-08-25 00:00:00.12'}\",\n+                \"select a from Employee a where a.hireTimestamp >= {ts '2009-08-25 00:00:00.123'}\",\n+                // \"select a from Employee a where a.hireTimestamp >= {ts '2009-08-25 00:00:00.1234'}\", // more than 3\n+                // \"select a from Employee a where a.hireTimestamp >= {ts '2009-08-25 00:00:00.12345'}\", // fails\n+                // \"select a from Employee a where a.hireTimestamp >= {ts '2009-08-25 00:00:00.123456'}\",\n+                \"select {t '00:00:00'}, a.empId from Employee a\",\n+            };\n+        } else {\n+            jpql = new String[] {\n+                \"select a from Employee a where a.hireDate >= {d '2009-08-25'}\",\n+                \"select a from Employee a where a.hireDate >= {d '2009-8-5'}\",\n+                \"select a from Employee a where a.hireTime >= {t '00:00:00'}\",\n+                \"select a from Employee a where a.hireTimestamp >= {ts '2009-08-25 00:00:00'}\",\n+                \"select a from Employee a where a.hireTimestamp >= {ts '2009-08-25 00:00:00.'}\",\n+                \"select a from Employee a where a.hireTimestamp >= {ts '2009-08-25 00:00:00.1'}\",\n+                \"select a from Employee a where a.hireTimestamp >= {ts '2009-08-25 00:00:00.12'}\",\n+                \"select a from Employee a where a.hireTimestamp >= {ts '2009-08-25 00:00:00.123'}\",\n+                \"select a from Employee a where a.hireTimestamp >= {ts '2009-08-25 00:00:00.1234'}\",\n+                \"select a from Employee a where a.hireTimestamp >= {ts '2009-08-25 00:00:00.12345'}\",\n+                \"select a from Employee a where a.hireTimestamp >= {ts '2009-08-25 00:00:00.123456'}\",\n+                \"select {t '00:00:00'}, a.empId from Employee a\",\n+            };\n+        }\n         \n-        String[] jpql = {\n-            \"select a from Employee a where a.hireDate >= {d '2009-08-25'}\",\n-            \"select a from Employee a where a.hireDate >= {d '2009-8-5'}\",\n-            \"select a from Employee a where a.hireTime >= {t '00:00:00'}\",\n-            \"select a from Employee a where a.hireTimestamp >= {ts '2009-08-25 00:00:00'}\",\n-            \"select a from Employee a where a.hireTimestamp >= {ts '2009-08-25 00:00:00.'}\",\n-            \"select a from Employee a where a.hireTimestamp >= {ts '2009-08-25 00:00:00.1'}\",\n-            \"select a from Employee a where a.hireTimestamp >= {ts '2009-08-25 00:00:00.12'}\",\n-            \"select a from Employee a where a.hireTimestamp >= {ts '2009-08-25 00:00:00.123'}\",\n-            \"select a from Employee a where a.hireTimestamp >= {ts '2009-08-25 00:00:00.1234'}\",\n-            \"select a from Employee a where a.hireTimestamp >= {ts '2009-08-25 00:00:00.12345'}\",\n-            \"select a from Employee a where a.hireTimestamp >= {ts '2009-08-25 00:00:00.123456'}\",\n-            \"select {t '00:00:00'}, a.empId from Employee a\",\n-        };\n \n         for (int i = 0; i < jpql.length; i++) {\n             Query q = em.createQuery(jpql[i]);\n             List results = q.getResultList();\n-            Assert.assertEquals(1, results.size());\n+            Assert.assertEquals(\"For jpql[\"+i+\"]\", 1, results.size());\n         }\n         \n         // Test support in HAVING clause.\n@@ -84,10 +106,16 @@ public void testJDBCEscape() {\n         for (int j = 0; j < havingJpql.length; j++) {\n             Query q = em.createQuery(havingJpql[j]);\n             List results = q.getResultList();\n-            Assert.assertEquals(1, results.size());\n+            Assert.assertEquals(\"For havingJpql[\"+j+\"]\", 1, results.size());\n         }\n         em.getTransaction().begin();\n-        String update = \"update Employee a set a.hireTimestamp = {ts '2009-08-25 00:00:00.123456'} where a.empId = 1\";\n+        String update;\n+        if (((JDBCConfiguration)emf.getConfiguration()).getDBDictionaryInstance() instanceof SQLServerDictionary) {\n+            // more than 3 digits after 00:00:00. fails on MSSQL\n+            update = \"update Employee a set a.hireTimestamp = {ts '2009-08-25 00:00:00.123'} where a.empId = 1\";\n+        } else {\n+            update = \"update Employee a set a.hireTimestamp = {ts '2009-08-25 00:00:00.123456'} where a.empId = 1\";\n+        }\n         Query q = em.createQuery(update);\n         int updateCnt = q.executeUpdate();\n         em.getTransaction().commit();"}]}

