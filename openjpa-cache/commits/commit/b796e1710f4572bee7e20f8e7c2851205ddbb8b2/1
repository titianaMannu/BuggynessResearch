{"sha":"b796e1710f4572bee7e20f8e7c2851205ddbb8b2","node_id":"MDY6Q29tbWl0MjA2MzY0OmI3OTZlMTcxMGY0NTcyYmVlN2UyMGY4ZTdjMjg1MTIwNWRkYmI4YjI=","commit":{"author":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2008-05-08T00:18:11Z"},"committer":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2008-05-08T00:18:11Z"},"message":"OPENJPA-574 DataCache entries not evicted when multiple OptimisticLockExceptions reported from backend DB.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@654337 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"3a130c361697ae727962a4e6042794c56a3f77d0","url":"https://api.github.com/repos/apache/openjpa/git/trees/3a130c361697ae727962a4e6042794c56a3f77d0"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/b796e1710f4572bee7e20f8e7c2851205ddbb8b2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/b796e1710f4572bee7e20f8e7c2851205ddbb8b2","html_url":"https://github.com/apache/openjpa/commit/b796e1710f4572bee7e20f8e7c2851205ddbb8b2","comments_url":"https://api.github.com/repos/apache/openjpa/commits/b796e1710f4572bee7e20f8e7c2851205ddbb8b2/comments","author":null,"committer":null,"parents":[{"sha":"63850bed0bf56ae1a6527cdf8efc8890cbeadbef","url":"https://api.github.com/repos/apache/openjpa/commits/63850bed0bf56ae1a6527cdf8efc8890cbeadbef","html_url":"https://github.com/apache/openjpa/commit/63850bed0bf56ae1a6527cdf8efc8890cbeadbef"}],"stats":{"total":11,"additions":7,"deletions":4},"files":[{"sha":"28c1ea51b28dc2f47f4ec873b4cd8be98f71a481","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/BatchingPreparedStatementManagerImpl.java","status":"modified","additions":7,"deletions":4,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/b796e1710f4572bee7e20f8e7c2851205ddbb8b2/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/BatchingPreparedStatementManagerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/b796e1710f4572bee7e20f8e7c2851205ddbb8b2/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/BatchingPreparedStatementManagerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/BatchingPreparedStatementManagerImpl.java?ref=b796e1710f4572bee7e20f8e7c2851205ddbb8b2","patch":"@@ -222,9 +222,9 @@ private void checkUpdateCount(int[] count, int batchedRowsBaseIndex)\n         for (int i = 0; i < count.length; i++) {\n             cnt = count[i];\n             RowImpl row = (RowImpl) _batchedRows.get(batchedRowsBaseIndex + i);\n+            failed = row.getFailedObject();\n             switch (cnt) {\n             case Statement.EXECUTE_FAILED: // -3\n-                failed = row.getFailedObject();\n                 if (failed != null || row.getAction() == Row.ACTION_UPDATE)\n                     _exceptions.add(new OptimisticException(failed));\n                 else if (row.getAction() == Row.ACTION_INSERT)\n@@ -233,14 +233,17 @@ else if (row.getAction() == Row.ACTION_INSERT)\n                         String.valueOf(count[i]), _batchedSql).getMessage());\n                 break;\n             case Statement.SUCCESS_NO_INFO: // -2\n-                if (_log.isTraceEnabled())\n+                if (failed != null || row.getAction() == Row.ACTION_UPDATE)\n+                    _exceptions.add(new OptimisticException(failed));\n+                else if (_log.isTraceEnabled())\n                     _log.trace(_loc.get(\"batch_update_info\",\n                         String.valueOf(cnt), _batchedSql).getMessage());\n                 break;\n             case 0: // no row is inserted, treats it as failed\n                 // case\n-                failed = row.getFailedObject();\n-                if ((failed != null || row.getAction() == Row.ACTION_INSERT))\n+                if (failed != null || row.getAction() == Row.ACTION_UPDATE)\n+                    _exceptions.add(new OptimisticException(failed));\n+                else\n                     throw new SQLException(_loc.get(\n                         \"update-failed-no-failed-obj\",\n                         String.valueOf(count[i]), _batchedSql).getMessage());"}]}

