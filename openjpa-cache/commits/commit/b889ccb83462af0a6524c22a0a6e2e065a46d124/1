{"sha":"b889ccb83462af0a6524c22a0a6e2e065a46d124","node_id":"MDY6Q29tbWl0MjA2MzY0OmI4ODljY2I4MzQ2MmFmMGE2NTI0YzIyYTBhNmUyZTA2NWE0NmQxMjQ=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2009-09-14T13:54:59Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2009-09-14T13:54:59Z"},"message":"OPENJPA-1247  WriteBehindCallback sleepTime interval of one EMF datacache adversely impacting other EMF datacache (testcase for OPENJPA-1296).  Contributed by Tim McConnell.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@814644 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"d5e4661a13a51fdd8f707c665ed65399486c504b","url":"https://api.github.com/repos/apache/openjpa/git/trees/d5e4661a13a51fdd8f707c665ed65399486c504b"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/b889ccb83462af0a6524c22a0a6e2e065a46d124","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/b889ccb83462af0a6524c22a0a6e2e065a46d124","html_url":"https://github.com/apache/openjpa/commit/b889ccb83462af0a6524c22a0a6e2e065a46d124","comments_url":"https://api.github.com/repos/apache/openjpa/commits/b889ccb83462af0a6524c22a0a6e2e065a46d124/comments","author":null,"committer":null,"parents":[{"sha":"e9b5c53fd00be984157e131b94a7d5efee720a3c","url":"https://api.github.com/repos/apache/openjpa/commits/e9b5c53fd00be984157e131b94a7d5efee720a3c","html_url":"https://github.com/apache/openjpa/commit/e9b5c53fd00be984157e131b94a7d5efee720a3c"}],"stats":{"total":24,"additions":21,"deletions":3},"files":[{"sha":"a25ab86563506b5c1048f111fecd0977769402ed","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/writebehind/TestWriteBehindConfigurations.java","status":"modified","additions":21,"deletions":3,"changes":24,"blob_url":"https://github.com/apache/openjpa/blob/b889ccb83462af0a6524c22a0a6e2e065a46d124/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/writebehind/TestWriteBehindConfigurations.java","raw_url":"https://github.com/apache/openjpa/raw/b889ccb83462af0a6524c22a0a6e2e065a46d124/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/writebehind/TestWriteBehindConfigurations.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/writebehind/TestWriteBehindConfigurations.java?ref=b889ccb83462af0a6524c22a0a6e2e065a46d124","patch":"@@ -26,6 +26,8 @@\n import junit.framework.TestCase;\n \n import org.apache.openjpa.persistence.ArgumentException;\n+import org.apache.openjpa.persistence.PersistenceException;\n+import org.apache.openjpa.writebehind.WriteBehindConfigurationException;\n \n \n /** \n@@ -51,6 +53,10 @@ public void testInvalidConfiguration01() {\n         }\n         catch (ArgumentException ae) {\n         }\n+        catch (PersistenceException pe) {\n+        }\n+        catch (WriteBehindConfigurationException wbce) {\n+        }\n         catch (Exception e) {\n             fail(\"testInvalidConfiguration01: Caught unexpected exception: \" + e);\n             e.printStackTrace();\n@@ -72,14 +78,18 @@ public void testInvalidConfiguration02() {\n         Map map = new HashMap();\n         map.put( \"openjpa.DataCache\", \"true\" );\n         map.put( \"openjpa.WriteBehindCache\", \"true\");\n-        map.put( \"openjpa.WriteBehindCallback\", \"true(sleepTime=1000)\" );\n+        map.put( \"openjpa.WriteBehindCallback\", \"true(sleepTime=30000)\" );\n         map.put( \"openjpa.RuntimeUnenhancedClasses\", \"unsupported\" );\n         try {\n             emf02 = Persistence.createEntityManagerFactory(\"empty-pu\", map);\n             fail(\"testInvalidConfiguration02: Exception expected but not thrown\");\n         }\n         catch (ArgumentException ae) {\n         }\n+        catch (PersistenceException pe) {\n+        }\n+        catch (WriteBehindConfigurationException wbce) {\n+        }\n         catch (Exception e) {\n             fail(\"testInvalidConfiguration02: Caught unexpected exception: \" + e);\n             e.printStackTrace();\n@@ -109,6 +119,10 @@ public void testInvalidConfiguration03() {\n         }\n         catch (ArgumentException ae) {\n         }\n+        catch (PersistenceException pe) {\n+        }\n+        catch (WriteBehindConfigurationException wbce) {\n+        }\n         catch (Exception e) {\n             fail(\"testInvalidConfiguration03: Caught unexpected exception: \" + e);\n             e.printStackTrace();\n@@ -137,6 +151,10 @@ public void testInvalidConfiguration04() {\n         }\n         catch (ArgumentException ae) {\n         }\n+        catch (PersistenceException pe) {\n+        }\n+        catch (WriteBehindConfigurationException wbce) {\n+        }\n         catch (Exception e) {\n             fail(\"testInvalidConfiguration04: Caught unexpected exception: \" + e);\n             e.printStackTrace();\n@@ -186,7 +204,7 @@ public void testValidConfiguration02() {\n         map.put( \"openjpa.DataCache\", \"true\" );\n         map.put( \"openjpa.RemoteCommitProvider\", \"sjvm\");\n         map.put( \"openjpa.WriteBehindCache\", \"true\");\n-        map.put( \"openjpa.WriteBehindCallback\", \"true(sleepTime=1000)\" );\n+        map.put( \"openjpa.WriteBehindCallback\", \"true(sleepTime=30000)\" );\n         map.put( \"openjpa.RuntimeUnenhancedClasses\", \"supported\" );\n         try {\n             emf06 = Persistence.createEntityManagerFactory(\"empty-pu\", map);\n@@ -213,7 +231,7 @@ public void testValidConfiguration03() {\n         map.put( \"openjpa.DataCache\", \"true\" );\n         map.put( \"openjpa.RemoteCommitProvider\", \"sjvm\");\n         map.put( \"openjpa.WriteBehindCache\", \"true\");\n-        map.put( \"openjpa.WriteBehindCallback\", \"true(sleepTime=1000)\" );\n+        map.put( \"openjpa.WriteBehindCallback\", \"true(sleepTime=30000)\" );\n         map.put( \"openjpa.RuntimeUnenhancedClasses\", \"warn\" );\n         try {\n             emf07 = Persistence.createEntityManagerFactory(\"empty-pu\", map);"}]}

