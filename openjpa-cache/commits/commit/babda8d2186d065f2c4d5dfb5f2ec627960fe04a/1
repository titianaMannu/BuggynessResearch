{"sha":"babda8d2186d065f2c4d5dfb5f2ec627960fe04a","node_id":"MDY6Q29tbWl0MjA2MzY0OmJhYmRhOGQyMTg2ZDA2NWYyYzRkNWRmYjVmMmVjNjI3OTYwZmUwNGE=","commit":{"author":{"name":"Kevin W. Sutter","email":"kwsutter@apache.org","date":"2010-02-18T21:47:37Z"},"committer":{"name":"Kevin W. Sutter","email":"kwsutter@apache.org","date":"2010-02-18T21:47:37Z"},"message":"OPENJPA-1520.  Doc updates to point at appropriate javase 6 and javaee 6 api urls (instead of javase/ee 5 urls).\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@911608 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"e80e9478d780606b815c77f178d58d7d58951e11","url":"https://api.github.com/repos/apache/openjpa/git/trees/e80e9478d780606b815c77f178d58d7d58951e11"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/babda8d2186d065f2c4d5dfb5f2ec627960fe04a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/babda8d2186d065f2c4d5dfb5f2ec627960fe04a","html_url":"https://github.com/apache/openjpa/commit/babda8d2186d065f2c4d5dfb5f2ec627960fe04a","comments_url":"https://api.github.com/repos/apache/openjpa/commits/babda8d2186d065f2c4d5dfb5f2ec627960fe04a/comments","author":null,"committer":null,"parents":[{"sha":"88e32fb2ee1eaea6fa4a5a3bccc51f41d10d3b06","url":"https://api.github.com/repos/apache/openjpa/commits/88e32fb2ee1eaea6fa4a5a3bccc51f41d10d3b06","html_url":"https://github.com/apache/openjpa/commit/88e32fb2ee1eaea6fa4a5a3bccc51f41d10d3b06"}],"stats":{"total":52,"additions":26,"deletions":26},"files":[{"sha":"47fe558e39a1a4ee39ea8fb96724e5fcd7c26441","filename":"openjpa-project/src/doc/manual/jpa_overview_arch.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/babda8d2186d065f2c4d5dfb5f2ec627960fe04a/openjpa-project/src/doc/manual/jpa_overview_arch.xml","raw_url":"https://github.com/apache/openjpa/raw/babda8d2186d065f2c4d5dfb5f2ec627960fe04a/openjpa-project/src/doc/manual/jpa_overview_arch.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_arch.xml?ref=babda8d2186d065f2c4d5dfb5f2ec627960fe04a","patch":"@@ -299,7 +299,7 @@ appropriate, most notably <classname>IllegalArgumentException</classname>s and\n <classname>IllegalStateException</classname>s. The specification also provides\n a few JPA-specific exceptions in the <literal>javax.persistence</literal>\n package. These exceptions should be self-explanatory. See the\n-<ulink url=\"http://java.sun.com/javaee/5/docs/api\">Javadoc</ulink> for\n+<ulink url=\"http://java.sun.com/javaee/6/docs/api\">Javadoc</ulink> for\n additional details on JPA exceptions.\n         </para>\n         <note>"},{"sha":"a2444e29d45381a54e20b9678ba4bddd94f13eb0","filename":"openjpa-project/src/doc/manual/jpa_overview_em.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/babda8d2186d065f2c4d5dfb5f2ec627960fe04a/openjpa-project/src/doc/manual/jpa_overview_em.xml","raw_url":"https://github.com/apache/openjpa/raw/babda8d2186d065f2c4d5dfb5f2ec627960fe04a/openjpa-project/src/doc/manual/jpa_overview_em.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_em.xml?ref=babda8d2186d065f2c4d5dfb5f2ec627960fe04a","patch":"@@ -37,7 +37,7 @@\n The diagram above presents an overview of the <classname>EntityManager\n </classname> interface. For a complete treatment of the <classname>\n EntityManager</classname> API, see the\n-<ulink url=\"http://java.sun.com/javaee/5/docs/api/javax/persistence/EntityManager.html\">\n+<ulink url=\"http://java.sun.com/javaee/6/docs/api/javax/persistence/EntityManager.html\">\n Javadoc</ulink> documentation. Methods whose parameter signatures consist of \n an ellipsis (...) are overloaded to take multiple parameter types.\n     </para>\n@@ -515,7 +515,7 @@ public void lock(Object entity, LockModeType mode);\n             </seealso>\n         </indexterm>\n This method locks the given entity using the named mode. The\n-<ulink url=\"http://java.sun.com/javaee/5/docs/api/javax/persistence/LockmodeType.html\">\n+<ulink url=\"http://java.sun.com/javaee/6/docs/api/javax/persistence/LockmodeType.html\">\n <classname>javax.persistence.LockModeType</classname></ulink> enum defines two\n modes:\n         </para>\n@@ -916,7 +916,7 @@ The <classname>EntityManager</classname>'s <literal>FlushMode</literal> property\n controls whether to flush transactional changes before executing queries. This\n allows the query results to take into account changes you have made during the\n current transaction. Available\n-<ulink url=\"http://java.sun.com/javaee/5/docs/api/javax/persistence/FlushModeType.html\">\n+<ulink url=\"http://java.sun.com/javaee/6/docs/api/javax/persistence/FlushModeType.html\">\n <classname>javax.persistence.FlushModeType</classname></ulink> constants are:\n         </para>\n         <itemizedlist>"},{"sha":"b311f09f300a26d9450789f3f2d282acc2c3b65c","filename":"openjpa-project/src/doc/manual/jpa_overview_pc.xml","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/apache/openjpa/blob/babda8d2186d065f2c4d5dfb5f2ec627960fe04a/openjpa-project/src/doc/manual/jpa_overview_pc.xml","raw_url":"https://github.com/apache/openjpa/raw/babda8d2186d065f2c4d5dfb5f2ec627960fe04a/openjpa-project/src/doc/manual/jpa_overview_pc.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_pc.xml?ref=babda8d2186d065f2c4d5dfb5f2ec627960fe04a","patch":"@@ -1069,7 +1069,7 @@ lifecycle events and their corresponding method markers are:\n                             lifecycle callbacks\n                         </seealso>\n                     </indexterm>\n-<ulink url=\"http://java.sun.com/javaee/5/docs/api/javax/persistence/PrePersist.html\">\n+<ulink url=\"http://java.sun.com/javaee/6/docs/api/javax/persistence/PrePersist.html\">\n <classname>PrePersist</classname></ulink>: Methods marked with this annotation\n will be invoked before an object is persisted. This could be used for assigning\n primary key values to persistent objects. This is equivalent to the XML element\n@@ -1086,7 +1086,7 @@ tag <literal>pre-persist</literal>.\n                             lifecycle callbacks\n                         </seealso>\n                     </indexterm>\n-<ulink url=\"http://java.sun.com/javaee/5/docs/api/javax/persistence/PostPersist.html\">\n+<ulink url=\"http://java.sun.com/javaee/6/docs/api/javax/persistence/PostPersist.html\">\n <classname>PostPersist</classname></ulink>: Methods marked with this annotation\n will be invoked after an object has transitioned to the persistent state. You\n might want to use such methods to update a screen after a new row is added. This\n@@ -1103,7 +1103,7 @@ is equivalent to the XML element tag <literal>post-persist</literal>.\n                             lifecycle callbacks\n                         </seealso>\n                     </indexterm>\n-<ulink url=\"http://java.sun.com/javaee/5/docs/api/javax/persistence/PostLoad.html\">\n+<ulink url=\"http://java.sun.com/javaee/6/docs/api/javax/persistence/PostLoad.html\">\n <classname>PostLoad</classname></ulink>: Methods marked with this annotation\n will be invoked after all eagerly fetched fields of your class have been loaded\n from the datastore. No other persistent fields can be accessed in this method.\n@@ -1125,7 +1125,7 @@ data structure.\n                             lifecycle callbacks\n                         </seealso>\n                     </indexterm>\n-<ulink url=\"http://java.sun.com/javaee/5/docs/api/javax/persistence/PreUpdate.html\">\n+<ulink url=\"http://java.sun.com/javaee/6/docs/api/javax/persistence/PreUpdate.html\">\n <classname>PreUpdate</classname></ulink>: Methods marked with this annotation\n will be invoked just the persistent values in your objects are flushed to the\n datastore. This is equivalent to the XML element tag <literal>\n@@ -1149,7 +1149,7 @@ persistent fields with information cached in non-persistent data.\n                             lifecycle callbacks\n                         </seealso>\n                     </indexterm>\n-<ulink url=\"http://java.sun.com/javaee/5/docs/api/javax/persistence/PostUpdate.html\">\n+<ulink url=\"http://java.sun.com/javaee/6/docs/api/javax/persistence/PostUpdate.html\">\n <classname>PostUpdate</classname></ulink>: Methods marked with this annotation\n will be invoked after changes to a given instance have been stored to the\n datastore. This is useful for clearing stale data cached at the application\n@@ -1166,7 +1166,7 @@ layer. This is equivalent to the XML element tag <literal>post-update</literal>.\n                             lifecycle callbacks\n                         </seealso>\n                     </indexterm>\n-<ulink url=\"http://java.sun.com/javaee/5/docs/api/javax/persistence/PreRemove.html\">\n+<ulink url=\"http://java.sun.com/javaee/6/docs/api/javax/persistence/PreRemove.html\">\n <classname>PreRemove</classname></ulink>: Methods marked with this annotation\n will be invoked before an object transactions to the deleted state. Access to\n persistent fields is valid within this method. You might use this method to\n@@ -1185,7 +1185,7 @@ pre-remove</literal>.\n                             lifecycle callbacks\n                         </seealso>\n                     </indexterm>\n-<ulink url=\"http://java.sun.com/javaee/5/docs/api/javax/persistence/PostRemove.html\">\n+<ulink url=\"http://java.sun.com/javaee/6/docs/api/javax/persistence/PostRemove.html\">\n <classname>PostRemove</classname></ulink>: Methods marked with this annotation\n will be invoked after an object has been marked as to be deleted. This is\n equivalent to the XML element tag <literal>post-remove</literal>."},{"sha":"bfa9abfe33343f4f77499e9cc11294e35a91162a","filename":"openjpa-project/src/doc/manual/jpa_overview_persistence.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/babda8d2186d065f2c4d5dfb5f2ec627960fe04a/openjpa-project/src/doc/manual/jpa_overview_persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/babda8d2186d065f2c4d5dfb5f2ec627960fe04a/openjpa-project/src/doc/manual/jpa_overview_persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_persistence.xml?ref=babda8d2186d065f2c4d5dfb5f2ec627960fe04a","patch":"@@ -68,7 +68,7 @@ additional utility methods.\n Within a container, you will typically use <emphasis>injection</emphasis> to\n access an <classname>EntityManagerFactory</classname>. Applications operating\n outside of a container, however, can use the\n-<ulink url=\"http://java.sun.com/javaee/5/docs/api/javax/persistence/Persistence.html\">\n+<ulink url=\"http://java.sun.com/javaee/6/docs/api/javax/persistence/Persistence.html\">\n <classname>Persistence</classname></ulink> class to obtain <classname>\n EntityManagerFactory</classname> objects in a vendor-neutral fashion.\n     </para>\n@@ -456,7 +456,7 @@ transaction management.\n                 <para>\n <literal>provider</literal>: If you are using a third-party JPA vendor, this\n element names its implementation of the\n-<ulink url=\"http://java.sun.com/javaee/5/docs/api/javax/persistence/spi/PersistenceProvider.html\">\n+<ulink url=\"http://java.sun.com/javaee/6/docs/api/javax/persistence/spi/PersistenceProvider.html\">\n <classname>PersistenceProvider</classname></ulink> bootstrapping interface.\n                 </para>\n                 <note>"},{"sha":"3844831ec4463e98c762b48f4b13ae8c995edf5a","filename":"openjpa-project/src/doc/manual/jpa_overview_query.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/babda8d2186d065f2c4d5dfb5f2ec627960fe04a/openjpa-project/src/doc/manual/jpa_overview_query.xml","raw_url":"https://github.com/apache/openjpa/raw/babda8d2186d065f2c4d5dfb5f2ec627960fe04a/openjpa-project/src/doc/manual/jpa_overview_query.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_query.xml?ref=babda8d2186d065f2c4d5dfb5f2ec627960fe04a","patch":"@@ -74,7 +74,7 @@ public Query createQuery(String jpql);\n </programlisting>\n             <para>\n The\n-<ulink url=\"http://java.sun.com/javaee/5/docs/api/javax/persistence/EntityManager.html\">\n+<ulink url=\"http://java.sun.com/javaee/6/docs/api/javax/persistence/EntityManager.html\">\n <methodname>EntityManager.createQuery</methodname></ulink> method creates a\n <classname>Query</classname> instance from a given JPQL string.\n             </para>\n@@ -83,7 +83,7 @@ public List getResultList();\n </programlisting>\n             <para>\n Invoking\n-<ulink url=\"http://java.sun.com/javaee/5/docs/api/javax/persistence/Query.html#getResultList()\">\n+<ulink url=\"http://java.sun.com/javaee/6/docs/api/javax/persistence/Query.html#getResultList()\">\n <methodname>Query.getResultList</methodname></ulink> executes the query and\n returns a <classname>List</classname> containing the matching objects. The\n following example executes our <classname>Magazine</classname> query above:"},{"sha":"992164f2c18bbd5258f14195a36d46cb1b4c9c7d","filename":"openjpa-project/src/doc/manual/jpa_resources.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/babda8d2186d065f2c4d5dfb5f2ec627960fe04a/openjpa-project/src/doc/manual/jpa_resources.xml","raw_url":"https://github.com/apache/openjpa/raw/babda8d2186d065f2c4d5dfb5f2ec627960fe04a/openjpa-project/src/doc/manual/jpa_resources.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_resources.xml?ref=babda8d2186d065f2c4d5dfb5f2ec627960fe04a","patch":"@@ -35,7 +35,7 @@ EJB 3 JSR page</ulink>\n         </listitem>\n         <listitem>\n             <para>\n-<ulink url=\"http://java.sun.com/javaee/5/docs/api/index.html\">\n+<ulink url=\"http://java.sun.com/javaee/6/docs/api/index.html\">\n javax.persistence Javadoc</ulink>\n             </para>\n         </listitem>"},{"sha":"740f6038d9499f20badd491b1db98b6b22ede0a6","filename":"openjpa-project/src/doc/manual/ref_guide_caching.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/babda8d2186d065f2c4d5dfb5f2ec627960fe04a/openjpa-project/src/doc/manual/ref_guide_caching.xml","raw_url":"https://github.com/apache/openjpa/raw/babda8d2186d065f2c4d5dfb5f2ec627960fe04a/openjpa-project/src/doc/manual/ref_guide_caching.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_caching.xml?ref=babda8d2186d065f2c4d5dfb5f2ec627960fe04a","patch":"@@ -785,7 +785,7 @@ public void evictAll();\n </programlisting>\n             <para>\n For JPA queries with parameters, set the desired parameter values into the\n-<ulink url=\"http://java.sun.com/javaee/5/docs/api/javax/persistence/Query.html\">\n+<ulink url=\"http://java.sun.com/javaee/6/docs/api/javax/persistence/Query.html\">\n <classname>Query</classname></ulink> instance before calling the above methods.\n             </para>\n             <example id=\"ref_guide_cache_query_classchange\">\n@@ -829,7 +829,7 @@ public void unpin(Query q);\n </programlisting>\n             <para>\n For JPA queries with parameters, set the desired parameter values into the\n-<ulink url=\"http://java.sun.com/javaee/5/docs/api/javax/persistence/Query.html\">\n+<ulink url=\"http://java.sun.com/javaee/6/docs/api/javax/persistence/Query.html\">\n <classname>Query</classname></ulink> instance before calling the above methods.\n             </para>\n             <para>"},{"sha":"e9a0dd18bcb5032d17af9e38b4a5101faaf82262","filename":"openjpa-project/src/doc/manual/ref_guide_deploy.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/babda8d2186d065f2c4d5dfb5f2ec627960fe04a/openjpa-project/src/doc/manual/ref_guide_deploy.xml","raw_url":"https://github.com/apache/openjpa/raw/babda8d2186d065f2c4d5dfb5f2ec627960fe04a/openjpa-project/src/doc/manual/ref_guide_deploy.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_deploy.xml?ref=babda8d2186d065f2c4d5dfb5f2ec627960fe04a","patch":"@@ -139,7 +139,7 @@ global transactions.\n         <para>\n You can override the global transaction mode setting when you obtain an\n <classname>EntityManager</classname> using the \n-<ulink url=\"http://java.sun.com/javaee/5/docs/api/javax/persistence/EntityManagerFactory.html\">\n+<ulink url=\"http://java.sun.com/javaee/6/docs/api/javax/persistence/EntityManagerFactory.html\">\n <classname>EntityManagerFactory</classname></ulink>'s\n <methodname>createEntityManager(Map props)</methodname> method.  Simply set the\n <literal>openjpa.TransactionMode</literal> key of the given <classname>Map"},{"sha":"cb8f5b7a99fcef71ee593450d104c09228be4cb8","filename":"openjpa-project/src/doc/manual/ref_guide_runtime.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/babda8d2186d065f2c4d5dfb5f2ec627960fe04a/openjpa-project/src/doc/manual/ref_guide_runtime.xml","raw_url":"https://github.com/apache/openjpa/raw/babda8d2186d065f2c4d5dfb5f2ec627960fe04a/openjpa-project/src/doc/manual/ref_guide_runtime.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_runtime.xml?ref=babda8d2186d065f2c4d5dfb5f2ec627960fe04a","patch":"@@ -658,7 +658,7 @@ Returns the level at which the given object is currently locked.\n             </para>\n             <para>\n In addition to the standard\n-<ulink url=\"http://java.sun.com/javaee/5/docs/api/javax/persistence/EntityManager.html\">\n+<ulink url=\"http://java.sun.com/javaee/6/docs/api/javax/persistence/EntityManager.html\">\n <methodname>EntityManager.lock(Object, LockModeType)</methodname></ulink>\n method, the\n <ulink url=\"../javadoc/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">"},{"sha":"80031ce9ea243558cecfe1f5f97a0bc20ef33bdb","filename":"openjpa-project/src/doc/manual/ref_guide_slice.xml","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/babda8d2186d065f2c4d5dfb5f2ec627960fe04a/openjpa-project/src/doc/manual/ref_guide_slice.xml","raw_url":"https://github.com/apache/openjpa/raw/babda8d2186d065f2c4d5dfb5f2ec627960fe04a/openjpa-project/src/doc/manual/ref_guide_slice.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_slice.xml?ref=babda8d2186d065f2c4d5dfb5f2ec627960fe04a","patch":"@@ -534,15 +534,15 @@ the JDBC connection URL of a slice.\n         for database operations such as query or flush on individual slices. \n         The value of the property is a \n         fully-qualified class name that implements \n-        <ulink url=\"http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/ExecutorService.html\">\n+        <ulink url=\"http://java.sun.com/javase/6/docs/api/java/util/concurrent/ExecutorService.html\">\n         <classname>java.util.concurrent.ExecutorService</classname>\n         </ulink> interface.  \n         Two pre-defined pools can be chosen via their aliases namely \n         <classname>fixed</classname> or <classname>cached</classname>.\n         </para>\n         <para>\n         The pre-defined alias <classname>cached</classname> activates a \n-        <ulink url=\"http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/Executors.html#newCachedThreadPool()\">cached thread pool</ulink>. \n+        <ulink url=\"http://java.sun.com/javase/6/docs/api/java/util/concurrent/Executors.html#newCachedThreadPool()\">cached thread pool</ulink>. \n         A cached thread pool creates new threads as needed, but will reuse \n         previously constructed threads when they are available. This pool \n         is suitable in scenarios that execute many short-lived asynchronous tasks.\n@@ -552,23 +552,23 @@ the JDBC connection URL of a slice.\n         </para>\n         <para>\n         The <classname>fixed</classname> alias activates a \n-        <ulink url=\"http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/Executors.html#newFixedThreadPool(int)\">fixed thread pool</ulink>.\n+        <ulink url=\"http://java.sun.com/javase/6/docs/api/java/util/concurrent/Executors.html#newFixedThreadPool(int)\">fixed thread pool</ulink>.\n         The fixed thread pool can be further parameterized with \n         <classname>CorePoolSize</classname>, <classname>MaximumPoolSize</classname>, \n         <classname>KeepAliveTime</classname> and <classname>RejectedExecutionHandler</classname>. \n         The meaning of these parameters are described in \n-        <ulink url=\"http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/ThreadPoolExecutor.html\">JavaDoc</ulink>.\n+        <ulink url=\"http://java.sun.com/javase/6/docs/api/java/util/concurrent/ThreadPoolExecutor.html\">JavaDoc</ulink>.\n         The users can exercise finer control on thread pool behavior via these\n         parameters.\n         By default, the core pool size is <classname>10</classname>, maximum pool size is\n         also <classname>10</classname>, keep alive time is <classname>60</classname> seconds and \n         rejected execution is \n-        <ulink url=\"http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/ThreadPoolExecutor.AbortPolicy.html\">aborted</ulink>.\n+        <ulink url=\"http://java.sun.com/javase/6/docs/api/java/util/concurrent/ThreadPoolExecutor.AbortPolicy.html\">aborted</ulink>.\n         </para>\n         <para>\n         Both of the pre-defined aliases can be parameterized with a fully-qualified\n         class name that implements \n-        <ulink url=\"http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/ThreadFactory.html\">\n+        <ulink url=\"http://java.sun.com/javase/6/docs/api/java/util/concurrent/ThreadFactory.html\">\n         <classname>java.util.concurrent.ThreadFactory</classname>\n         </ulink> interface.\n         </para>"}]}

