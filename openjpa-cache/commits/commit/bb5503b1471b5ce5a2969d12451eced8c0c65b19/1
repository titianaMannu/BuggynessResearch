{"sha":"bb5503b1471b5ce5a2969d12451eced8c0c65b19","node_id":"MDY6Q29tbWl0MjA2MzY0OmJiNTUwM2IxNDcxYjVjZTVhMjk2OWQxMjQ1MWVjZWQ4YzBjNjViMTk=","commit":{"author":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2021-04-06T18:01:59Z"},"committer":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2021-04-06T18:01:59Z"},"message":"OPENJPA-2861 add unit tests for select sum(case..)","tree":{"sha":"e39387edebfd62cbacb6ddee4c190c4fbf3cd914","url":"https://api.github.com/repos/apache/openjpa/git/trees/e39387edebfd62cbacb6ddee4c190c4fbf3cd914"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/bb5503b1471b5ce5a2969d12451eced8c0c65b19","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/bb5503b1471b5ce5a2969d12451eced8c0c65b19","html_url":"https://github.com/apache/openjpa/commit/bb5503b1471b5ce5a2969d12451eced8c0c65b19","comments_url":"https://api.github.com/repos/apache/openjpa/commits/bb5503b1471b5ce5a2969d12451eced8c0c65b19/comments","author":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"committer":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"parents":[{"sha":"3647e4e2574fc1ea37bb1b0b2e1c535b9818e23f","url":"https://api.github.com/repos/apache/openjpa/commits/3647e4e2574fc1ea37bb1b0b2e1c535b9818e23f","html_url":"https://github.com/apache/openjpa/commit/3647e4e2574fc1ea37bb1b0b2e1c535b9818e23f"}],"stats":{"total":43,"additions":39,"deletions":4},"files":[{"sha":"b1cb054c9ba6f1d92e81504503a891eec0c8ffd4","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jira1794/TestAggregateFunctions.java","status":"modified","additions":35,"deletions":0,"changes":35,"blob_url":"https://github.com/apache/openjpa/blob/bb5503b1471b5ce5a2969d12451eced8c0c65b19/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jira1794/TestAggregateFunctions.java","raw_url":"https://github.com/apache/openjpa/raw/bb5503b1471b5ce5a2969d12451eced8c0c65b19/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jira1794/TestAggregateFunctions.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jira1794/TestAggregateFunctions.java?ref=bb5503b1471b5ce5a2969d12451eced8c0c65b19","patch":"@@ -22,6 +22,7 @@\n \r\n import javax.persistence.EntityManager;\r\n import javax.persistence.Query;\r\n+import javax.persistence.TypedQuery;\r\n import javax.persistence.criteria.CriteriaBuilder;\r\n import javax.persistence.criteria.CriteriaQuery;\r\n import javax.persistence.criteria.Expression;\r\n@@ -92,6 +93,40 @@ public void testAggregateJPQL() {\n         em.close();\r\n     }\r\n \r\n+    /**\r\n+     * if a SUM(CASE statement is used, then the effective type might be different\r\n+     */\r\n+    public void testAggregateWithCase() {\r\n+        EntityManager em = emf.createEntityManager();\r\n+\r\n+        // Add a row to the table and re-test\r\n+        em.getTransaction().begin();\r\n+        AggEntity ae = new AggEntity();\r\n+        ae.init();\r\n+        ae.setStringVal(\"bare\");\r\n+        em.persist(ae);\r\n+        AggEntity ae2 = new AggEntity();\r\n+        ae2.init();\r\n+        ae2.setStringVal(\"foot\");\r\n+        em.persist(ae2);\r\n+        em.getTransaction().commit();\r\n+\r\n+/*X\r\n+        em.getTransaction().begin();\r\n+        final TypedQuery<Long> q2 = em.createQuery(\"select SUM(ae.intVal) from AggEntity AS ae\", Long.class);\r\n+        final Long sum = q2.getSingleResult();\r\n+        assertEquals(2L, (long) sum);\r\n+*/\r\n+\r\n+        final TypedQuery<Long> q = em.createQuery(\"select SUM(CASE ae.stringVal WHEN 'bare' THEN 1 ELSE 0 END) from AggEntity AS ae\", Long.class);\r\n+        final Long sumC = q.getSingleResult();\r\n+        assertEquals(1L, (long) sumC);\r\n+\r\n+        em.getTransaction().commit();\r\n+\r\n+        em.close();\r\n+    }\r\n+\r\n     public void testAggregateCriteria() {\r\n         EntityManager em = emf.createEntityManager();\r\n         Metamodel mm = emf.getMetamodel();\r"},{"sha":"febefb0edb5d12d32f65561022526b4421b9aaa2","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestAggregateQueryWithNoResult.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/bb5503b1471b5ce5a2969d12451eced8c0c65b19/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestAggregateQueryWithNoResult.java","raw_url":"https://github.com/apache/openjpa/raw/bb5503b1471b5ce5a2969d12451eced8c0c65b19/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestAggregateQueryWithNoResult.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestAggregateQueryWithNoResult.java?ref=bb5503b1471b5ce5a2969d12451eced8c0c65b19","patch":"@@ -37,15 +37,15 @@\n  */\n public class TestAggregateQueryWithNoResult extends SingleEMFTestCase {\n     EntityManager em;\n-\t@Override\n+\n+    @Override\n     public void setUp() {\n         super.setUp(CLEAR_TABLES,\n                 \"openjpa.Compatibility\", \"ReturnNullOnAggregateResult=false\",  //OPENJPA-1794\n-                Game.class, IndoorGame.class, Scrabble.class,\n-\t\t\t\tChess.class);\n+                Game.class, IndoorGame.class, Scrabble.class, Chess.class);\n         em = emf.createEntityManager();\n         assertTrue(em.createQuery(\"select p from Scrabble p\").getResultList().isEmpty());\n-\t}\n+    }\n \n \n     public void testSumWithNoResult() {"}]}

