{"sha":"bc7da9765803de2193c5dbb26184981952faf5d5","node_id":"MDY6Q29tbWl0MjA2MzY0OmJjN2RhOTc2NTgwM2RlMjE5M2M1ZGJiMjYxODQ5ODE5NTJmYWY1ZDU=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-12-01T21:46:29Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-12-01T21:46:29Z"},"message":"Print class loader when metadata processing fails.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@885955 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2b2551e7654eec1b1a09f928abf81473c8e5d814","url":"https://api.github.com/repos/apache/openjpa/git/trees/2b2551e7654eec1b1a09f928abf81473c8e5d814"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/bc7da9765803de2193c5dbb26184981952faf5d5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/bc7da9765803de2193c5dbb26184981952faf5d5","html_url":"https://github.com/apache/openjpa/commit/bc7da9765803de2193c5dbb26184981952faf5d5","comments_url":"https://api.github.com/repos/apache/openjpa/commits/bc7da9765803de2193c5dbb26184981952faf5d5/comments","author":null,"committer":null,"parents":[{"sha":"eea93c8346dde9ca5b5bbbddfe94b233c32ace47","url":"https://api.github.com/repos/apache/openjpa/commits/eea93c8346dde9ca5b5bbbddfe94b233c32ace47","html_url":"https://github.com/apache/openjpa/commit/eea93c8346dde9ca5b5bbbddfe94b233c32ace47"}],"stats":{"total":16,"additions":8,"deletions":8},"files":[{"sha":"db47db0d7a63eb2f89d23134869700f2a8f08fce","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingTool.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/bc7da9765803de2193c5dbb26184981952faf5d5/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingTool.java","raw_url":"https://github.com/apache/openjpa/raw/bc7da9765803de2193c5dbb26184981952faf5d5/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingTool.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingTool.java?ref=bc7da9765803de2193c5dbb26184981952faf5d5","patch":"@@ -679,7 +679,7 @@ private static ClassMapping getMapping(MappingRepository repos, Class cls,\n         if (!validate || cls.isInterface() \n             || repos.getPersistenceAware(cls) != null)\n             return null;\n-        throw new MetaDataException(_loc.get(\"no-meta\", cls));\n+        throw new MetaDataException(_loc.get(\"no-meta\", cls, cls.getClassLoader()));\n     }\n \n     /**"},{"sha":"d74dfca8246742e914f838f7aab4de5c5999cb02","filename":"openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/localizer.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/bc7da9765803de2193c5dbb26184981952faf5d5/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/bc7da9765803de2193c5dbb26184981952faf5d5/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/localizer.properties?ref=bc7da9765803de2193c5dbb26184981952faf5d5","patch":"@@ -305,7 +305,7 @@ bad-drop: Some of the following mappings may not have been dropped: {0}. \\\n \tUndropped mappings will not affect the system.\n no-drop-meta: The schema for type \"{0}\" may not be dropped, because its \\\n \tmapping could not be parsed.\n-no-meta: Type \"{0}\" does not have persistence metadata.\n+no-meta: Type \"{0}\" loaded by {1} does not have persistence metadata.\n bad-bk-file: Could not create a backup file for \"{0}\".\n running-all-classes: No targets were given.  Running on all classes listed in \\\n \tyour configuration, or all persistent classes in the classpath if no \\"},{"sha":"845be63caf6f32c55ddfa37f9b650c4fdb6cfe8b","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/bc7da9765803de2193c5dbb26184981952faf5d5/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java","raw_url":"https://github.com/apache/openjpa/raw/bc7da9765803de2193c5dbb26184981952faf5d5/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java?ref=bc7da9765803de2193c5dbb26184981952faf5d5","patch":"@@ -503,12 +503,12 @@ public int run() {\n             for (int i = 0; i < interfaces.length; i++) {\n                 if (interfaces[i].getName().equals(PCTYPE.getName())) {\n                     if (_log.isInfoEnabled())\n-                        _log.info(_loc.get(\"pc-type\", _managedType.getType()));\n+                        _log.info(_loc.get(\"pc-type\", _managedType.getType(), _managedType.getType().getClassLoader()));\n                     return ENHANCE_NONE;\n                 }\n             }\n             if (_log.isInfoEnabled())\n-                _log.info(_loc.get(\"enhance-start\", _managedType.getType()));\n+                _log.info(_loc.get(\"enhance-start\", _managedType.getType(), _managedType.getType().getClassLoader()));\n \n \n             configureBCs();\n@@ -537,7 +537,7 @@ public int run() {\n             }\n \n             if (_log.isWarnEnabled())\n-                _log.warn(_loc.get(\"pers-aware\", _managedType.getType()));\n+                _log.warn(_loc.get(\"pers-aware\", _managedType.getType(), _managedType.getType().getClassLoader()));\n             return ENHANCE_AWARE;\n         } catch (OpenJPAException ke) {\n             throw ke;"},{"sha":"1c73518e9e6840a118a6835b1081f768b1325f80","filename":"openjpa-kernel/src/main/resources/org/apache/openjpa/enhance/localizer.properties","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/bc7da9765803de2193c5dbb26184981952faf5d5/openjpa-kernel/src/main/resources/org/apache/openjpa/enhance/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/bc7da9765803de2193c5dbb26184981952faf5d5/openjpa-kernel/src/main/resources/org/apache/openjpa/enhance/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/resources/org/apache/openjpa/enhance/localizer.properties?ref=bc7da9765803de2193c5dbb26184981952faf5d5","patch":"@@ -39,7 +39,7 @@ detach-custom-ser: Type \"{0}\" is set to detach on serialize, but implements \\\n detach-custom-extern: Type \"{0}\" is set to detach on serialize, but implements \\\n \ta custom readExternal and/or writeExternal method.  You cannot use custom \\\n \tserialization with detachment. \n-enhance-start: Enhancing type \"{0}\".\n+enhance-start: Enhancing type \"{0}\" loaded by {1}.\n runtime-optimization-disabled: This configuration disallows runtime \\\n     optimization, but the following listed types were not enhanced at build \\\n     time or at class load time with a javaagent: \"{0}\".\n@@ -54,8 +54,8 @@ enhance-and-subclass-no-redef-start: Creating subclass for \"{0}\". \\\n     eagerly instead.\n redefine-types: Redefining {0} using Java 5 type redefinition.\n retransform-types: Redefining {0} using Java 6 type retransformation.\n-pc-type: Type \"{0}\" is already persistence capable; skipping.\n-pers-aware: Type \"{0}\" has no metadata; enhancing as persistence aware. \\\n+pc-type: Type \"{0}\" loaded by {1} is already persistence capable; skipping.\n+pers-aware: Type \"{0}\" loaded by {1} has no metadata; enhancing as persistence aware. \\\n \tIf you intended for \"{0}\" to be persistence-capable, then this means that \\\n \tOpenJPA could not find any metadata for \"{0}\". This can happen if the \\\n \tdirectory containing your metadata is not in your CLASSPATH, or if your \\"}]}

