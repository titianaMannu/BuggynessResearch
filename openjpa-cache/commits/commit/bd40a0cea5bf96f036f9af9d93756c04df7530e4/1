{"sha":"bd40a0cea5bf96f036f9af9d93756c04df7530e4","node_id":"MDY6Q29tbWl0MjA2MzY0OmJkNDBhMGNlYTViZjk2ZjAzNmY5YWY5ZDkzNzU2YzA0ZGY3NTMwZTQ=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2007-09-20T03:29:06Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2007-09-20T03:29:06Z"},"message":"Undo OPENJPA_356 in 1.0.x branch\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/1.0.x@577522 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"571c32997f9bbe68c2c98373e4d3f9e0376a44b6","url":"https://api.github.com/repos/apache/openjpa/git/trees/571c32997f9bbe68c2c98373e4d3f9e0376a44b6"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/bd40a0cea5bf96f036f9af9d93756c04df7530e4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/bd40a0cea5bf96f036f9af9d93756c04df7530e4","html_url":"https://github.com/apache/openjpa/commit/bd40a0cea5bf96f036f9af9d93756c04df7530e4","comments_url":"https://api.github.com/repos/apache/openjpa/commits/bd40a0cea5bf96f036f9af9d93756c04df7530e4/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"972e71f970c1dbe2f7c4d6ea6e21c6a0e9e973d6","url":"https://api.github.com/repos/apache/openjpa/commits/972e71f970c1dbe2f7c4d6ea6e21c6a0e9e973d6","html_url":"https://github.com/apache/openjpa/commit/972e71f970c1dbe2f7c4d6ea6e21c6a0e9e973d6"}],"stats":{"total":76,"additions":8,"deletions":68},"files":[{"sha":"c8e57628302b193deda62b6721fa6c7e4fbf7788","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java","status":"modified","additions":1,"deletions":33,"changes":34,"blob_url":"https://github.com/apache/openjpa/blob/bd40a0cea5bf96f036f9af9d93756c04df7530e4/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java","raw_url":"https://github.com/apache/openjpa/raw/bd40a0cea5bf96f036f9af9d93756c04df7530e4/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java?ref=bd40a0cea5bf96f036f9af9d93756c04df7530e4","patch":"@@ -155,33 +155,6 @@ protected void appendSelectRange(SQLBuffer buf, long start, long end) {\n             append(\" ROWS ONLY\");\r\n     }\r\n \r\n-    protected void appendSelect(SQLBuffer selectSQL, Object alias, Select sel,\r\n-        int idx) {\r\n-        // if this is a literal value, add a cast...\r\n-        Object val = sel.getSelects().get(idx);\r\n-        if (val instanceof Lit)\r\n-            selectSQL.append(\"CAST(\");\r\n-\r\n-        // ... and add the select per super's behavior...\r\n-        super.appendSelect(selectSQL, alias, sel, idx);\r\n-\r\n-        // ... and finish the cast\r\n-        if (val instanceof Lit) {\r\n-            Class c = ((Lit) val).getType();\r\n-            int javaTypeCode = JavaTypes.getTypeCode(c);\r\n-            int jdbcTypeCode = getJDBCType(javaTypeCode, false);\r\n-            String typeName = getTypeName(jdbcTypeCode);\r\n-            selectSQL.append(\" AS \" + typeName);\r\n-\r\n-            // if the literal is a string, use the default char col size\r\n-            // in the cast statement.\r\n-            if (String.class.equals(c))\r\n-                selectSQL.append(\"(\" + characterColumnSize + \")\");\r\n-\r\n-            selectSQL.append(\")\");\r\n-        }\r\n-    }\r\n-\r\n     public String[] getCreateSequenceSQL(Sequence seq) {\r\n         String[] sql = super.getCreateSequenceSQL(seq);\r\n         if (seq.getAllocate() > 1)\r\n@@ -673,8 +646,6 @@ public String addCastAsType(String func, Val val) {\n         String fstring = null;\r\n         String type = getTypeName(getJDBCType(JavaTypes.getTypeCode(val\r\n             .getType()), false));\r\n-        if (String.class.equals(val.getType()))\r\n-            type = type + \"(\" + characterColumnSize + \")\";\r\n         fstring = \"CAST(? AS \" + type + \")\";\r\n         return fstring;\r\n     }\r\n@@ -759,10 +730,7 @@ public void appendCast(SQLBuffer buf, FilterValue val, int type) {\n             String sqlString = buf.getSQL(false);\r\n             if (sqlString.endsWith(\"?\")) {\r\n                 // case \"(?\" - convert to \"CAST(? AS type\"\r\n-                String typeName = getTypeName(type);\r\n-                if (String.class.equals(val.getType()))\r\n-                    typeName = typeName + \"(\" + characterColumnSize + \")\";\r\n-                String str = \"CAST(? AS \" + typeName + \")\";\r\n+                String str = \"CAST(? AS \" + getTypeName(type) + \")\";\r\n                 buf.replaceSqlString(sqlString.length() - 1,\r\n                         sqlString.length(), str);\r\n             }\r"},{"sha":"4b72458ab8257dc0bed40be3cb58b04dec232a2f","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","status":"modified","additions":7,"deletions":19,"changes":26,"blob_url":"https://github.com/apache/openjpa/blob/bd40a0cea5bf96f036f9af9d93756c04df7530e4/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/bd40a0cea5bf96f036f9af9d93756c04df7530e4/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java?ref=bd40a0cea5bf96f036f9af9d93756c04df7530e4","patch":"@@ -2281,30 +2281,18 @@ protected SQLBuffer getSelects(Select sel, boolean distinctIdentifiers,\n             aliases = sel.getSelectAliases();\n \n         Object alias;\n-        for (int i = 0; i < aliases.size(); i++) {\n-            alias = aliases.get(i);\n-            appendSelect(selectSQL, alias, sel, i);\n-            if (i < aliases.size() - 1)\n+        for (Iterator itr = aliases.iterator(); itr.hasNext();) {\n+            alias = itr.next();\n+            if (alias instanceof SQLBuffer)\n+                selectSQL.append((SQLBuffer) alias);\n+            else\n+                selectSQL.append(alias.toString());\n+            if (itr.hasNext())\n                 selectSQL.append(\", \");\n         }\n         return selectSQL;\n     }\n \n-    /**\n-     * Append <code>elem</code> to <code>selectSQL</code>.\n-     * @param selectSQL The SQLBuffer to append to.\n-     * @param alias A {@link SQLBuffer} or a {@link String} to append.\n-     *\n-     * @since 1.1.0\n-     */\n-    protected void appendSelect(SQLBuffer selectSQL, Object elem, Select sel,\n-        int idx) {\n-        if (elem instanceof SQLBuffer)\n-            selectSQL.append((SQLBuffer) elem);\n-        else\n-            selectSQL.append(elem.toString());\n-    }\n-\n     /**\n      * Returns true if a \"FOR UPDATE\" clause can be used for the specified\n      * Select object."},{"sha":"dcb4ce76acf58654024e084e6e5074ca7f96035e","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/LogicalUnion.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/bd40a0cea5bf96f036f9af9d93756c04df7530e4/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/LogicalUnion.java","raw_url":"https://github.com/apache/openjpa/raw/bd40a0cea5bf96f036f9af9d93756c04df7530e4/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/LogicalUnion.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/LogicalUnion.java?ref=bd40a0cea5bf96f036f9af9d93756c04df7530e4","patch":"@@ -447,10 +447,6 @@ public Collection getTableAliases() {\n             return sel.getTableAliases();\n         }\n \n-        public List getSelects() {\n-            return sel.getSelects();\n-        }\n-\n         public List getSelectAliases() {\n             return sel.getSelectAliases();\n         }"},{"sha":"8139f508999b89487a7f1eee3d37b2662013f254","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/Select.java","status":"modified","additions":0,"deletions":8,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/bd40a0cea5bf96f036f9af9d93756c04df7530e4/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/Select.java","raw_url":"https://github.com/apache/openjpa/raw/bd40a0cea5bf96f036f9af9d93756c04df7530e4/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/Select.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/Select.java?ref=bd40a0cea5bf96f036f9af9d93756c04df7530e4","patch":"@@ -149,14 +149,6 @@\n      */\n     public Collection getTableAliases();\n \n-    /**\n-     * Return the actual {@link Val}s and {@link Column}s that were\n-     * selected, in the order that they were selected.\n-     *\n-     * @since 1.1.0\n-     */\n-    public List getSelects();\n-\n     /**\n      * Return the aliases of all selected columns and all selected buffers,\n      * in the order they were selected. Each alias may be either a string"},{"sha":"b55b6f7c67b5904768f1a65579037947edf4999a","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java","status":"modified","additions":0,"deletions":4,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/bd40a0cea5bf96f036f9af9d93756c04df7530e4/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java","raw_url":"https://github.com/apache/openjpa/raw/bd40a0cea5bf96f036f9af9d93756c04df7530e4/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java?ref=bd40a0cea5bf96f036f9af9d93756c04df7530e4","patch":"@@ -505,10 +505,6 @@ public Collection getTableAliases() {\n         return (_tables == null) ? Collections.EMPTY_SET : _tables.values();\n     }\n \n-    public List getSelects() {\n-        return Collections.unmodifiableList(_selects);\n-    }\n-\n     public List getSelectAliases() {\n         return _selects.getAliases(false, _outer != null);\n     }"}]}

