{"sha":"bd9b59c90f575b71a7167b48fadfb35ffa61449a","node_id":"MDY6Q29tbWl0MjA2MzY0OmJkOWI1OWM5MGY1NzViNzFhNzE2N2I0OGZhZGZiMzVmZmE2MTQ0OWE=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-03-18T15:44:25Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-03-18T15:44:25Z"},"message":"OPENJPA-1581:\nmake assertOpen public and call assertOpen before returning JPA cache\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@924868 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"3ea791c4ac83c178e303f4bf9de7c9843026c4ef","url":"https://api.github.com/repos/apache/openjpa/git/trees/3ea791c4ac83c178e303f4bf9de7c9843026c4ef"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/bd9b59c90f575b71a7167b48fadfb35ffa61449a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/bd9b59c90f575b71a7167b48fadfb35ffa61449a","html_url":"https://github.com/apache/openjpa/commit/bd9b59c90f575b71a7167b48fadfb35ffa61449a","comments_url":"https://api.github.com/repos/apache/openjpa/commits/bd9b59c90f575b71a7167b48fadfb35ffa61449a/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"081baaa8568eb6a3514bcb7fbc87cab21be5be23","url":"https://api.github.com/repos/apache/openjpa/commits/081baaa8568eb6a3514bcb7fbc87cab21be5be23","html_url":"https://github.com/apache/openjpa/commit/081baaa8568eb6a3514bcb7fbc87cab21be5be23"}],"stats":{"total":39,"additions":38,"deletions":1},"files":[{"sha":"9622ce67321aaa32e762c0e3ee18c690e0d8e6c2","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractBrokerFactory.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/bd9b59c90f575b71a7167b48fadfb35ffa61449a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractBrokerFactory.java","raw_url":"https://github.com/apache/openjpa/raw/bd9b59c90f575b71a7167b48fadfb35ffa61449a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractBrokerFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractBrokerFactory.java?ref=bd9b59c90f575b71a7167b48fadfb35ffa61449a","patch":"@@ -656,7 +656,7 @@ protected Object getFactoryInitializationBanner() {\n      * Throw an exception if the factory is closed.  The exact message and\n      * content of the exception varies whether TRACE is enabled or not.\n      */\n-    private void assertOpen() {\n+    public void assertOpen() {\n         if (_closed) {\n             if (_closedException == null)  // TRACE not enabled\n                 throw new InvalidStateException(_loc"},{"sha":"ceb44a1bccc3018bc09a310a2682195a0d35af67","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerFactory.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/bd9b59c90f575b71a7167b48fadfb35ffa61449a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerFactory.java","raw_url":"https://github.com/apache/openjpa/raw/bd9b59c90f575b71a7167b48fadfb35ffa61449a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerFactory.java?ref=bd9b59c90f575b71a7167b48fadfb35ffa61449a","patch":"@@ -150,4 +150,10 @@ public Broker newBroker(String user, String pass, boolean managed,\n      * Release the internal lock.\n      */\n     public void unlock ();\n+    \n+    /**\n+     * assert that this broker is open. If the broker has been closed an IllegalStateException will be thrown\n+     * with information on when the broker was closed. \n+     */\n+    public void assertOpen(); \n }"},{"sha":"a0f18466797989b15a3191134c540603024c7b73","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DelegatingBrokerFactory.java","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/bd9b59c90f575b71a7167b48fadfb35ffa61449a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DelegatingBrokerFactory.java","raw_url":"https://github.com/apache/openjpa/raw/bd9b59c90f575b71a7167b48fadfb35ffa61449a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DelegatingBrokerFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DelegatingBrokerFactory.java?ref=bd9b59c90f575b71a7167b48fadfb35ffa61449a","patch":"@@ -223,4 +223,12 @@ public void unlock() {\n             throw translate(re);\n \t\t}\n \t}\n+    \n+    public void assertOpen() {\n+        try {\n+            _factory.assertOpen();\n+        } catch (RuntimeException re) {\n+            throw translate(re);\n+        }\n+    }\n }"},{"sha":"5d79d02506d6dbd217d95d524a24a8901cdf0fd2","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestJPACache.java","status":"modified","additions":22,"deletions":0,"changes":22,"blob_url":"https://github.com/apache/openjpa/blob/bd9b59c90f575b71a7167b48fadfb35ffa61449a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestJPACache.java","raw_url":"https://github.com/apache/openjpa/raw/bd9b59c90f575b71a7167b48fadfb35ffa61449a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestJPACache.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestJPACache.java?ref=bd9b59c90f575b71a7167b48fadfb35ffa61449a","patch":"@@ -271,6 +271,28 @@ public void testEvictNonEntity() {\n             // expected exception\n         }\n     }\n+    \n+    public void testIllegalStateExceptionAfterClose() { \n+        emf.close();\n+        try {\n+            emf.getCache();\n+            fail(\"Expected IllegalStateException\");\n+        }\n+        catch(IllegalStateException ise) {\n+            // expected\n+        }\n+    }\n+    public void testIllegalStateExceptionGetAfterClose() {\n+        emf.getCache();  // populate the EntityManagerFactoryImpl's wrapper for the StoreCache.\n+        emf.close();\n+        try {\n+            emf.getCache();\n+            fail(\"Expected IllegalStateException\");\n+        }\n+        catch(IllegalStateException ise) {\n+            // expected\n+        }\n+    }\n \n     /**\n      * Convenience method. Asserts that the class & primary key do exist in the cache"},{"sha":"396c0e9ca85baad5aa907c89f7baa4af8e531c44","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerFactoryImpl.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/bd9b59c90f575b71a7167b48fadfb35ffa61449a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerFactoryImpl.java","raw_url":"https://github.com/apache/openjpa/raw/bd9b59c90f575b71a7167b48fadfb35ffa61449a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerFactoryImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerFactoryImpl.java?ref=bd9b59c90f575b71a7167b48fadfb35ffa61449a","patch":"@@ -303,6 +303,7 @@ FetchPlan toFetchPlan(Broker broker, FetchConfiguration fetch) {\n \t}\n \n     public Cache getCache() {\n+        _factory.assertOpen();\n         return getStoreCache();\n     }\n "}]}

