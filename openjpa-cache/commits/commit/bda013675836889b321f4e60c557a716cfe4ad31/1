{"sha":"bda013675836889b321f4e60c557a716cfe4ad31","node_id":"MDY6Q29tbWl0MjA2MzY0OmJkYTAxMzY3NTgzNjg4OWIzMjFmNGU2MGM1NTdhNzE2Y2ZlNGFkMzE=","commit":{"author":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-09-14T23:39:02Z"},"committer":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-09-14T23:39:02Z"},"message":"update document on derived identity\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@814937 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"69581ff65c0b017dc8aa06a618afca1a6c0c6354","url":"https://api.github.com/repos/apache/openjpa/git/trees/69581ff65c0b017dc8aa06a618afca1a6c0c6354"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/bda013675836889b321f4e60c557a716cfe4ad31","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/bda013675836889b321f4e60c557a716cfe4ad31","html_url":"https://github.com/apache/openjpa/commit/bda013675836889b321f4e60c557a716cfe4ad31","comments_url":"https://api.github.com/repos/apache/openjpa/commits/bda013675836889b321f4e60c557a716cfe4ad31/comments","author":null,"committer":null,"parents":[{"sha":"492a19573c98f9e933c3e5c66d191ef92c371c86","url":"https://api.github.com/repos/apache/openjpa/commits/492a19573c98f9e933c3e5c66d191ef92c371c86","html_url":"https://github.com/apache/openjpa/commit/492a19573c98f9e933c3e5c66d191ef92c371c86"}],"stats":{"total":72,"additions":66,"deletions":6},"files":[{"sha":"050adab9ad70d54adb27bf6547fcd1d393b348fd","filename":"openjpa-project/src/doc/manual/ref_guide_pc.xml","status":"modified","additions":66,"deletions":6,"changes":72,"blob_url":"https://github.com/apache/openjpa/blob/bda013675836889b321f4e60c557a716cfe4ad31/openjpa-project/src/doc/manual/ref_guide_pc.xml","raw_url":"https://github.com/apache/openjpa/raw/bda013675836889b321f4e60c557a716cfe4ad31/openjpa-project/src/doc/manual/ref_guide_pc.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_pc.xml?ref=bda013675836889b321f4e60c557a716cfe4ad31","patch":"@@ -686,8 +686,7 @@ record.\n                 </tertiary>\n             </indexterm>\n             <para>\n-The JPA specification limits identity fields to simple types.  OpenJPA, however,\n-also allows <literal>ManyToOne</literal> and <literal>OneToOne</literal> \n+OpenJPA allows <literal>ManyToOne</literal> and <literal>OneToOne</literal> \n relations to be identity fields.  To identify a relation field as an identity\n field, simply annotate it with both the <literal>@ManyToOne</literal> or\n <literal>@OneToOne</literal> relation annotation and the <literal>@Id</literal>\n@@ -718,12 +717,17 @@ public Delivery findDelivery(EntityManager em, Order order) {\n             </example>\n             <para>\n When your entity has multiple identity fields, at least one of which is a \n-relation to another entity, you must use an identity class (see \n-<xref linkend=\"jpa_overview_pc_identitycls\"/> in the JPA Overview).  You cannot\n-use an embedded identity object.  Identity class fields corresponding to\n+relation to another entity, you can use an identity class (see \n+<xref linkend=\"jpa_overview_pc_identitycls\"/> in the JPA Overview), or \n+an embedded identity object.  Identity class fields corresponding to\n entity identity fields should be of the same type as the related entity's \n-identity.  \n+identity. If an embedded identity object is used, you must annotate the \n+relation field with both the <literal>@ManyToOne</literal> or\n+<literal>@OneToOne</literal> relation annotation and the \n+<literal>@MappedById</literal> annotation.\n+\n             </para>\n+            \n             <example id=\"ref_guide_pc_oid_entitypk_idcls\">\n                 <title>\n                     Id Class for Entity Identity Fields\n@@ -771,7 +775,63 @@ class <classname>OrderId</classname> in place of a simple <classname>long\n </classname> value, then the <literal>LineItemId.order</literal> field would\n have been of type <classname>OrderId</classname>.\n             </para>\n+            \n+            <example id=\"ref_guide_pc_oid_entitypk_embeded_id\">\n+                <title>\n+                    Embedded Id for Entity Identity Fields\n+                </title>\n+<programlisting>\n+@Entity\n+public class Order {\n+\n+    @Id\n+    private long id;\n+\n+    ... \n+}\n+\n+\t/**\n+\t * LineItem uses a compound primary key. Part of the compound key \n+\t * LineItemId is relation or reference to Order instance.\n+\t**/   \n+@Entity\n+public class LineItem {\n+    \n+    @EmbeddedId LineItemId id;\n+\n+    @ManyToOne\n+    @MappedById(\"orderId\") // The value element of the MappedById annotation \n+                           // must be used to specify the name of the primary\n+                           // key attribute to which the relationship  \n+                           // corresponds. If the primary key referenced by  \n+                           // the relationship attribute is of the same Java  \n+                           // type as the dependent's primary key, then the \n+                           // value element is not specified.\n+    private Order order;\n+\n+    ...\n+}\n+\n+@Embeddable\n+public class LineItemId {\n+\n+    public int index;\n+    public long orderId; \n+}\n+</programlisting>    \n+            </example>\n+\n+            <para>\n+In the example above, the <classname>LineItem</classname> uses an embedded id to  \n+represent its primary key. The primary key attribute corresponding to the \n+relationship in the <classname>LineItemId</classname> must be of the same \n+type as the primary key of the <classname>Order</classname>. The \n+<literal>MappedById</literal> annotation must be applied to the relationship \n+field <literal>LineItem.order</literal>.\n+            </para>\n+            \n         </section>\n+        \n         <section id=\"ref_guide_pc_oid_application\">\n             <title>\n                 Application Identity Tool"}]}

