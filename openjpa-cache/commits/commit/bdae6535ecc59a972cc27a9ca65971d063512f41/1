{"sha":"bdae6535ecc59a972cc27a9ca65971d063512f41","node_id":"MDY6Q29tbWl0MjA2MzY0OmJkYWU2NTM1ZWNjNTlhOTcyY2MyN2E5Y2E2NTk3MWQwNjM1MTJmNDE=","commit":{"author":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-10-02T22:22:18Z"},"committer":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-10-02T22:22:18Z"},"message":"Miscellaneous cleanup and fixes.  Some documentation review.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@452243 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"cb30dae866bfb8ef19f7ee482d00b28df8a016bd","url":"https://api.github.com/repos/apache/openjpa/git/trees/cb30dae866bfb8ef19f7ee482d00b28df8a016bd"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/bdae6535ecc59a972cc27a9ca65971d063512f41","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/bdae6535ecc59a972cc27a9ca65971d063512f41","html_url":"https://github.com/apache/openjpa/commit/bdae6535ecc59a972cc27a9ca65971d063512f41","comments_url":"https://api.github.com/repos/apache/openjpa/commits/bdae6535ecc59a972cc27a9ca65971d063512f41/comments","author":null,"committer":null,"parents":[{"sha":"e30632b60b26430fe4f95dd3f5a3bd79c4a36f9f","url":"https://api.github.com/repos/apache/openjpa/commits/e30632b60b26430fe4f95dd3f5a3bd79c4a36f9f","html_url":"https://github.com/apache/openjpa/commit/e30632b60b26430fe4f95dd3f5a3bd79c4a36f9f"}],"stats":{"total":4932,"additions":1860,"deletions":3072},"files":[{"sha":"06ab0b9274449b63fc55b95f3273acb53ac852fb","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/PreparedStatementManagerImpl.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/PreparedStatementManagerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/PreparedStatementManagerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/PreparedStatementManagerImpl.java?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -102,10 +102,7 @@ else if (row.getAction() == Row.ACTION_INSERT)\n         } catch (SQLException se) {\n             throw SQLExceptions.getStore(se, row.getFailedObject(), _dict);\n         } finally {\n-            try {\n-                stmnt.close();\n-            } catch (SQLException se) {\n-            }\n+            try { stmnt.close(); } catch (SQLException se) {}\n         }\n \n         // set auto assign values"},{"sha":"5ccdf2b97e075e03f3869c9314f5a5e935f59f66","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/DataSourceFactory.java","status":"modified","additions":10,"deletions":18,"changes":28,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/DataSourceFactory.java","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/DataSourceFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/DataSourceFactory.java?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -60,21 +60,18 @@\n      */\n     public static DataSource newDataSource(JDBCConfiguration conf,\n         boolean factory2) {\n-        String driver = (factory2)\n-            ? conf.getConnection2DriverName()\n+        String driver = (factory2) ? conf.getConnection2DriverName()\n             : conf.getConnectionDriverName();\n         if (driver == null || driver.length() == 0)\n             throw new UserException(_loc.get(\"no-driver\", driver)).\n                 setFatal(true);\n \n         ClassLoader loader = conf.getClassResolverInstance().\n             getClassLoader(DataSourceFactory.class, null);\n-        String props = (factory2)\n-            ? conf.getConnection2Properties()\n+        String props = (factory2) ? conf.getConnection2Properties()\n             : conf.getConnectionProperties();\n         try {\n             Class driverClass;\n-\n             try {\n                 driverClass = Class.forName(driver, true, loader);\n             } catch (ClassNotFoundException cnfe) {\n@@ -86,25 +83,23 @@ public static DataSource newDataSource(JDBCConfiguration conf,\n                 DriverDataSource ds = conf.newDriverDataSourceInstance();\n                 ds.setClassLoader(loader);\n                 ds.setConnectionDriverName(driver);\n-                ds.setConnectionProperties\n-                    (Configurations.parseProperties(props));\n+                ds.setConnectionProperties(Configurations.\n+                    parseProperties(props));\n \n                 if (!factory2) {\n-                    ds.setConnectionFactoryProperties\n-                        (Configurations.parseProperties\n-                            (conf.getConnectionFactoryProperties()));\n+                    ds.setConnectionFactoryProperties(Configurations.\n+                        parseProperties(conf.getConnectionFactoryProperties()));\n                     ds.setConnectionURL(conf.getConnectionURL());\n                     ds.setConnectionUserName(conf.getConnectionUserName());\n                     ds.setConnectionPassword(conf.getConnectionPassword());\n                 } else {\n                     ds.setConnectionFactoryProperties\n-                        (Configurations.parseProperties\n-                            (conf.getConnectionFactory2Properties()));\n+                        (Configurations.parseProperties(conf.\n+                        getConnectionFactory2Properties()));\n                     ds.setConnectionURL(conf.getConnection2URL());\n                     ds.setConnectionUserName(conf.getConnection2UserName());\n                     ds.setConnectionPassword(conf.getConnection2Password());\n                 }\n-\n                 return ds;\n             }\n \n@@ -121,8 +116,7 @@ public static DataSource newDataSource(JDBCConfiguration conf,\n         }\n \n         // not a driver or a data source; die\n-        throw new UserException(_loc.get(\"bad-driver\", driver)).\n-            setFatal(true);\n+        throw new UserException(_loc.get(\"bad-driver\", driver)).setFatal(true);\n     }\n \n     /**\n@@ -186,7 +180,6 @@ public static DecoratingDataSource installDBDictionary(DBDictionary dict,\n         DecoratingDataSource ds, final JDBCConfiguration conf,\n         boolean factory2) {\n         DataSource inner = ds.getInnermostDelegate();\n-\n         if (inner instanceof DriverDataSource)\n             ((DriverDataSource) inner).initDBDictionary(dict);\n \n@@ -204,8 +197,7 @@ public static DecoratingDataSource installDBDictionary(DBDictionary dict,\n             // transaction isolation, etc)\n             ConfiguringConnectionDecorator ccd =\n                 new ConfiguringConnectionDecorator();\n-            ccd.setTransactionIsolation\n-                (conf.getTransactionIsolationConstant());\n+            ccd.setTransactionIsolation(conf.getTransactionIsolationConstant());\n             if (factory2 || !conf.isConnectionFactoryModeManaged()) {\n                 if (!dict.supportsMultipleNontransactionalResultSets)\n                     ccd.setAutoCommit(Boolean.FALSE);"},{"sha":"b6719e82267f747b0e328a0698f6b88a0acc4add","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/DriverDataSource.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/DriverDataSource.java","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/DriverDataSource.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/DriverDataSource.java?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -20,7 +20,6 @@\n import javax.sql.DataSource;\n \n import org.apache.openjpa.jdbc.sql.DBDictionary;\n-import org.apache.openjpa.lib.conf.Configurable;\n \n /**\n  * A DataSource that allows additional configuration options to be set\n@@ -29,7 +28,7 @@\n  * @author Marc Prud'hommeaux\n  */\n public interface DriverDataSource\n-    extends DataSource, Configurable {\n+    extends DataSource {\n \n     public void setConnectionURL(String connectionURL);\n "},{"sha":"dde074676e8f3f95e6dad32f548945f7b9fa1c35","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SimpleDriverDataSource.java","status":"modified","additions":28,"deletions":41,"changes":69,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SimpleDriverDataSource.java","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SimpleDriverDataSource.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SimpleDriverDataSource.java?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -25,10 +25,15 @@\n \n import org.apache.openjpa.jdbc.conf.JDBCConfiguration;\n import org.apache.openjpa.jdbc.sql.DBDictionary;\n+import org.apache.openjpa.lib.conf.Configurable;\n import org.apache.openjpa.lib.conf.Configuration;\n+import org.apache.openjpa.util.StoreException;\n \n+/**\n+ * Non-pooling driver data source.\n+ */\n public class SimpleDriverDataSource\n-    implements DriverDataSource {\n+    implements DriverDataSource, Configurable {\n \n     private String _connectionDriverName;\n     private String _connectionURL;\n@@ -40,38 +45,6 @@\n     private Driver _driver;\n     private ClassLoader _classLoader;\n \n-    private synchronized Driver getDriver()\n-        throws SQLException {\n-        if (_driver == null)\n-            _driver = DriverManager.getDriver(_connectionURL);\n-\n-        if (_driver == null) {\n-            try {\n-                Class.forName(_connectionDriverName, true, _classLoader);\n-            } catch (Exception e) {\n-            }\n-\n-            _driver = DriverManager.getDriver(_connectionURL);\n-        }\n-\n-        if (_driver == null) {\n-            try {\n-                _driver = (Driver) Class.forName(_connectionDriverName,\n-                    true, _classLoader).newInstance();\n-            } catch (Exception e) {\n-                if (e instanceof SQLException)\n-                    throw(SQLException) e;\n-\n-                if (e instanceof RuntimeException)\n-                    throw(RuntimeException) e;\n-\n-                throw new SQLException(e.getClass() + \": \" + e.getMessage());\n-            }\n-        }\n-\n-        return _driver;\n-    }\n-\n     public Connection getConnection()\n         throws SQLException {\n         return getConnection(null);\n@@ -80,16 +53,13 @@ public Connection getConnection()\n     public Connection getConnection(String username, String password)\n         throws SQLException {\n         Properties props = new Properties();\n-\n         if (username == null)\n             username = _connectionUserName;\n-\n         if (username != null)\n             props.put(\"user\", username);\n \n         if (password == null)\n             password = _connectionPassword;\n-\n         if (password != null)\n             props.put(\"password\", password);\n \n@@ -98,7 +68,7 @@ public Connection getConnection(String username, String password)\n \n     public Connection getConnection(Properties props)\n         throws SQLException {\n-        return getDriver().connect(_conf.getConnectionURL(), props);\n+        return _driver.connect(_conf.getConnectionURL(), props);\n     }\n \n     public int getLoginTimeout() {\n@@ -115,14 +85,31 @@ public PrintWriter getLogWriter() {\n     public void setLogWriter(PrintWriter out) {\n     }\n \n-    public void startConfiguration() {\n+    public void setConfiguration(Configuration conf) {\n+        _conf = (JDBCConfiguration) conf;\n     }\n \n-    public void endConfiguration() {\n+    public void startConfiguration() {\n     }\n \n-    public void setConfiguration(Configuration conf) {\n-        _conf = (JDBCConfiguration) conf;\n+    public void endConfiguration() {\n+        try {\n+            _driver = DriverManager.getDriver(_connectionURL);\n+            if (_driver == null) {\n+                try {\n+                    Class.forName(_connectionDriverName, true, _classLoader);\n+                } catch (Exception e) {\n+                }\n+                _driver = DriverManager.getDriver(_connectionURL);\n+            }\n+            if (_driver == null)\n+                _driver = (Driver) Class.forName(_connectionDriverName,\n+                    true, _classLoader).newInstance();\n+        } catch (Exception e) {\n+            if (e instanceof RuntimeException)\n+                throw(RuntimeException) e;\n+            throw new StoreException(e);\n+        }\n     }\n \n     public void initDBDictionary(DBDictionary dict) {"},{"sha":"26a9b0986aa55711235e5cdae48064ceecbf650e","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AttachStrategy.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AttachStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AttachStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AttachStrategy.java?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -202,8 +202,6 @@ protected boolean attachField(AttachManager manager, Object toAttach,\n                 break;\n             case JavaTypes.COLLECTION:\n                 Collection frmc = (Collection) fetchObjectField(i);\n-                System.out.println(\"Fetch:\" + fmd + \":\" + frmc\n-                    + \":\" + nullLoaded);\n                 if (frmc == null && !nullLoaded)\n                     return false;\n                 Collection toc = (Collection) sm.fetchObjectField(i);"},{"sha":"6a3322d517d02364b6fc6037862bcd8e5b69d761","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","status":"modified","additions":2,"deletions":6,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -1233,10 +1233,7 @@ private RuntimeException endStoreManagerTransaction(boolean rollback) {\n         catch (RuntimeException re) {\n             if (!rollback) {\n                 forcedRollback = true;\n-                try {\n-                    _store.rollback();\n-                } catch (RuntimeException re2) {\n-                }\n+                try { _store.rollback(); } catch (RuntimeException re2) {}\n             }\n             err = re;\n         } finally {\n@@ -3794,8 +3791,7 @@ void setDirty(StateManagerImpl sm, boolean firstDirty) {\n                         _transAdditions = new HashSet();\n                     _transAdditions.add(sm);\n                 }\n-            }\n-            finally {\n+            } finally {\n                 unlock();\n             }\n         }"},{"sha":"cb2fb1e6f935be1dd3fc7d0f54ea317e4f4e211c","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SingleFieldManager.java","status":"modified","additions":17,"deletions":17,"changes":34,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SingleFieldManager.java","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SingleFieldManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SingleFieldManager.java?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -250,22 +250,22 @@ public void persist(OpCallbacks call) {\n             case JavaTypes.PC_UNTYPED:\n                 if (!_broker.isDetachedNew() && _broker.isDetached(objval))\n                     return; // allow but ignore\n-                _broker.persist(objval, false, call);\n+                _broker.persist(objval, true, call);\n                 break;\n             case JavaTypes.ARRAY:\n-                _broker.persistAll(Arrays.asList((Object[]) objval), false, \n+                _broker.persistAll(Arrays.asList((Object[]) objval), true, \n                     call);\n                 break;\n             case JavaTypes.COLLECTION:\n-                _broker.persistAll((Collection) objval, false, call);\n+                _broker.persistAll((Collection) objval, true, call);\n                 break;\n             case JavaTypes.MAP:\n                 if (fmd.getKey().getCascadePersist()\n                     == ValueMetaData.CASCADE_IMMEDIATE)\n-                    _broker.persistAll(((Map) objval).keySet(), false, call);\n+                    _broker.persistAll(((Map) objval).keySet(), true, call);\n                 if (fmd.getElement().getCascadePersist()\n                     == ValueMetaData.CASCADE_IMMEDIATE)\n-                    _broker.persistAll(((Map) objval).values(), false, call);\n+                    _broker.persistAll(((Map) objval).values(), true, call);\n                 break;\n         }\n     }\n@@ -615,8 +615,8 @@ else if (elemType == JavaTypes.PC\n                     if (external)\n                         val = fmd.getExternalValue(val, _broker);\n                     else if (val instanceof Proxy) {\n-                        // shortcut change trackers; also ensures we don't iterate\n-                        // lrs fields\n+                        // shortcut change trackers; also ensures we don't \n+                        // iterate lrs fields\n                         ChangeTracker ct = ((Proxy) val).getChangeTracker();\n                         if (ct != null && ct.isTracking()) {\n                             preFlushPCs(fmd.getElement(), ct.getAdded(), \n@@ -646,8 +646,8 @@ else if (val instanceof Proxy) {\n                         val = fmd.getExternalValue(val, _broker);\n                         external = false;\n                     } else if (val instanceof Proxy) {\n-                        // shortcut change trackers; also ensures we don't iterate\n-                        // lrs fields\n+                        // shortcut change trackers; also ensures we don't \n+                        // iterate lrs fields\n                         MapChangeTracker ct = (MapChangeTracker) ((Proxy) val).\n                             getChangeTracker();\n                         if (ct != null && ct.isTracking() && ct.getTrackKeys())\n@@ -670,8 +670,8 @@ else if (val instanceof Proxy) {\n                     if (external)\n                         val = fmd.getExternalValue(val, _broker);\n                     else if (val instanceof Proxy) {\n-                        // shortcut change trackers; also ensures we don't iterate\n-                        // lrs fields\n+                        // shortcut change trackers; also ensures we don't \n+                        // iterate lrs fields\n                         MapChangeTracker ct = (MapChangeTracker) ((Proxy) val).\n                             getChangeTracker();\n                         if (ct != null && ct.isTracking()) {\n@@ -743,10 +743,9 @@ private void preFlushPC(ValueMetaData vmd, Object obj, boolean logical,\n \n             sm = _broker.getStateManager(obj);\n             if (sm == null || !sm.isPersistent())\n-                throw new InvalidStateException\n-                    (_loc.get(\"cant-cascade-persist\",\n-                        Exceptions.toString(obj), vmd,\n-                        Exceptions.toString(_sm.getManagedInstance()))).\n+                throw new InvalidStateException(_loc.get(\"cant-cascade-persist\",\n+                    Exceptions.toString(obj), vmd,\n+                    Exceptions.toString(_sm.getManagedInstance()))).\n                     setFailedObject(obj);\n         } else {\n             sm = _broker.getStateManager(obj);\n@@ -763,8 +762,9 @@ private void preFlushPC(ValueMetaData vmd, Object obj, boolean logical,\n                     Exceptions.toString(_sm.getManagedInstance()))).\n                     setFailedObject(obj);\n \n-            ((StateManagerImpl) sm).nonprovisional(logical, call);\n-            ((StateManagerImpl) sm).setDereferencedDependent(false, true);\n+            StateManagerImpl smimpl = (StateManagerImpl) sm;\n+            smimpl.nonprovisional(logical, call);\n+            smimpl.setDereferencedDependent(false, true);\n         }\n     }\n "},{"sha":"d44495b7e522b77fb7e1e347dcb5ddbe192fd103","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -486,8 +486,8 @@ private boolean assignObjectId(boolean flush, boolean preFlushing) {\n      * @param recache whether to recache ourself on the new oid\n      */\n     private void assertObjectIdAssigned(boolean recache) {\n-        if (!isNew() || isDeleted() || isProvisional() || \n-            (_flags & FLAG_OID_ASSIGNED) > 0)\n+        if (!isNew() || isDeleted() || isProvisional() \n+            || (_flags & FLAG_OID_ASSIGNED) != 0)\n             return;\n         if (_oid == null) {\n             if (_meta.getIdentityType() == ClassMetaData.ID_DATASTORE)"},{"sha":"d0245f7b6cc49721bbf899184ec5046b82bdf2db","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataRepository.java","status":"modified","additions":3,"deletions":6,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataRepository.java","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataRepository.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataRepository.java?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -340,8 +340,7 @@ public ClassMetaData getMetaData(String alias, ClassLoader envLoader,\n                         classList.add(cls);\n                     break;\n                 }\n-            }\n-            catch (Throwable t) {\n+            } catch (Throwable t) {\n                 // this happens when the class is not loadable by\n                 // the environment class loader, so it was probably\n                 // listed elsewhere; also ignore linkage failures and\n@@ -364,8 +363,7 @@ public ClassMetaData getMetaData(String alias, ClassLoader envLoader,\n \n         if (!mustExist)\n             return null;\n-        throw new MetaDataException(_loc.get(\"no-alias-meta\", alias,\n-            _aliases));\n+        throw new MetaDataException(_loc.get(\"no-alias-meta\", alias, _aliases));\n     }\n \n     /**\n@@ -408,8 +406,7 @@ private ClassMetaData getMetaDataInternal(Class cls,\n             // class never registers itself with the system\n             if ((_validate & VALIDATE_RUNTIME) != 0) {\n                 try {\n-                    Class.forName(cls.getName(), true,\n-                        cls.getClassLoader());\n+                    Class.forName(cls.getName(), true, cls.getClassLoader());\n                 } catch (Throwable t) {\n                 }\n             }"},{"sha":"0984a46336a6fb996062688a9f54bd897f0ae424","filename":"openjpa-kernel/src/main/resources/org/apache/openjpa/event/localizer.properties","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-kernel/src/main/resources/org/apache/openjpa/event/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-kernel/src/main/resources/org/apache/openjpa/event/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/resources/org/apache/openjpa/event/localizer.properties?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -74,6 +74,7 @@ tcp-close-sending-socket: Closing transmission connection to \"{0}\" that was \\\n tcp-close-pool-error: Exception thrown while closing connection pool.\n tcp-wrong-version-error: Received packet from \"{0}\" with invalid version \\\n \tnumber. Check if a prior release of OpenJPA is being used on this host.\n-bean-constructor: Could not instantiate class {0}.\n+bean-constructor: Could not instantiate class {0}.  Make sure it has an \\\n+    accessible no-args constructor.\n method-notfound: Method \"{1}\" with arguments of type: {2} \\\n     not found in class \"{0}\"."},{"sha":"9160923e5d81a2cd7088c3f818eb2cbdf05ffeab","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java","status":"modified","additions":14,"deletions":72,"changes":86,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -84,7 +84,6 @@\n import org.apache.openjpa.lib.conf.Configurations;\n import org.apache.openjpa.lib.log.Log;\n import org.apache.openjpa.lib.util.Localizer;\n-import org.apache.openjpa.lib.util.Localizer.Message;\n import org.apache.openjpa.meta.ClassMetaData;\n import org.apache.openjpa.meta.DelegatingMetaDataFactory;\n import org.apache.openjpa.meta.FieldMetaData;\n@@ -580,14 +579,14 @@ private ClassMetaData parseClassAnnotations() {\n                         highs[i] = listeners[i].size();\n             }\n             recordCallbacks(meta, parseCallbackMethods(_cls, listeners, false,\n-                false), highs, false);\n+                false, getRepository()), highs, false);\n \n             // scan possibly non-PC hierarchy for callbacks.\n             // redundant for PC superclass but we don't know that yet\n             // so let LifecycleMetaData determine that\n             if (!Object.class.equals(_cls.getSuperclass())) {\n-                recordCallbacks(meta, parseCallbackMethods(_cls.\n-                    getSuperclass(), null, true, false), null, true);\n+                recordCallbacks(meta, parseCallbackMethods(_cls.getSuperclass(),\n+                    null, true, false, getRepository()), null, true);\n             }\n         }\n \n@@ -759,7 +758,8 @@ else if (!StringUtils.isEmpty(detached.fieldName()))\n         Class[] classes = listeners.value();\n         Collection<LifecycleCallbacks>[] parsed = null;\n         for (Class cls : classes)\n-            parsed = parseCallbackMethods(cls, parsed, true, true);\n+            parsed = parseCallbackMethods(cls, parsed, true, true, \n+                getRepository());\n         return parsed;\n     }\n \n@@ -771,9 +771,9 @@ else if (!StringUtils.isEmpty(detached.fieldName()))\n      * @param sups whether to scan superclasses\n      * @param listener whether this is a listener or not\n      */\n-    public Collection<LifecycleCallbacks>[] parseCallbackMethods\n+    public static Collection<LifecycleCallbacks>[] parseCallbackMethods\n         (Class cls, Collection<LifecycleCallbacks>[] callbacks, boolean sups,\n-            boolean listener) {\n+        boolean listener, MetaDataRepository repos) {\n         // first sort / filter based on inheritance\n         Set<Method> methods = new TreeSet<Method>(MethodComparator.\n             getInstance());\n@@ -796,35 +796,29 @@ else if (!StringUtils.isEmpty(detached.fieldName()))\n                 }\n             }\n             sup = sup.getSuperclass();\n-        }\n-        while (sups && !Object.class.equals(sup));\n+        } while (sups && !Object.class.equals(sup));\n \n+        MetaDataDefaults def = repos.getMetaDataFactory().getDefaults();\n         for (Method m : methods) {\n             for (Annotation anno : m.getDeclaredAnnotations()) {\n                 MetaDataTag tag = _tags.get(anno.annotationType());\n                 if (tag == null)\n                     continue;\n-\n-                int[] events = XMLPersistenceMetaDataParser.getEventTypes(tag);\n+                int[] events = MetaDataParsers.getEventTypes(tag);\n                 if (events == null)\n                     continue;\n \n                 if (callbacks == null)\n                     callbacks = (Collection<LifecycleCallbacks>[])\n                         new Collection[LifecycleEvent.ALL_EVENTS.length];\n \n-                for (int i = 0; events != null && i < events.length; i++) {\n+                for (int i = 0; i < events.length; i++) {\n                     int e = events[i];\n-                    if (!verifyHasNoArgConstructor(cls))\n-                        continue; \n-                    if (!verifyMultipleMethodsOnSameEvent(cls, callbacks[e], m, \n-                        tag))\n-                        continue;\n-\n                     if (callbacks[e] == null)\n-                        callbacks[e] = new ArrayList(3);                   \n-                    \n+                        callbacks[e] = new ArrayList(3);\n                     if (listener) {\n+                        MetaDataParsers.validateMethodsForSameCallback(cls, \n+                            callbacks[e], m, tag, def, repos.getLog());\n                         callbacks[e].add(new BeanLifecycleCallbacks(cls, m,\n                             false));\n                     } else {\n@@ -836,58 +830,6 @@ else if (!StringUtils.isEmpty(detached.fieldName()))\n         }\n         return callbacks;\n     }\n-\n-    private boolean verifyMultipleMethodsOnSameEvent(Class cls, \n-            Collection<LifecycleCallbacks> callbacks, Method method, \n-            MetaDataTag tag) {\n-        boolean result = true;\n-        if (callbacks == null || callbacks.isEmpty())\n-            return true;\n-        for (LifecycleCallbacks lc: callbacks) {\n-            if (!(lc instanceof MethodLifecycleCallbacks))\n-                continue;\n-            Method exists = ((MethodLifecycleCallbacks)lc).getCallbackMethod();\n-            if (exists.getDeclaringClass().equals(method.getDeclaringClass())) {\n-                result = false;\n-                Object[] args = new Object[]{method.getDeclaringClass()\n-                    .getName(), method.getName(), exists.getName(), \n-                    tag.toString()};\n-                PersistenceMetaDataDefaults defaults = getDefaults();\n-                if (defaults == null || \n-                    defaults.getAllowsMultipleMethodsOnSameCallback()) {\n-                    _log.warn(_loc.get(\"multiple-methods-on-callback\", args));\n-                 } else {\n-                    throw new UserException(\n-                        _loc.get(\"multiple-methods-on-callback-error\", args));\n-                 }\n-             }\n-        }\n-        return result;\n-    }\n-    \n-    private boolean verifyHasNoArgConstructor(Class cls) {\n-        try {\n-            cls.getConstructor(new Class[]{});\n-            return true;\n-        } catch (Throwable t) {\n-            PersistenceMetaDataDefaults defaults = getDefaults();\n-            Message msg = _loc.get(\"missing-no-arg-constructor\", cls.getName());\n-            if (defaults == null || \n-                defaults.getAllowsMissingCallbackConstructor())\n-                _log.warn(msg);\n-            else\n-                throw new UserException(msg, t);\n-        } \n-        return false;\n-    }\n-    \n-    private PersistenceMetaDataDefaults getDefaults() {\n-        MetaDataDefaults defaults = getRepository().getMetaDataFactory().\n-            getDefaults();\n-        if (defaults instanceof PersistenceMetaDataDefaults)\n-            return (PersistenceMetaDataDefaults)defaults;\n-        return null;\n-    }\n     \n     /**\n      * Store lifecycle metadata."},{"sha":"3477b6f6ea33647b24bbcc7c7a95dcc6b38dfc9d","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/MetaDataParsers.java","status":"added","additions":88,"deletions":0,"changes":88,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/MetaDataParsers.java","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/MetaDataParsers.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/MetaDataParsers.java?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -0,0 +1,88 @@\n+package org.apache.openjpa.persistence;\n+\n+import java.lang.reflect.Method;\n+import java.util.Collection;\n+\n+import org.apache.openjpa.event.LifecycleCallbacks;\n+import org.apache.openjpa.event.LifecycleEvent;\n+import org.apache.openjpa.event.MethodLifecycleCallbacks;\n+import org.apache.openjpa.lib.log.Log;\n+import org.apache.openjpa.lib.util.Localizer;\n+import org.apache.openjpa.meta.MetaDataDefaults;\n+import org.apache.openjpa.util.UserException;\n+\n+/**\n+ * Common utilities for persistence metadata parsers.\n+ *\n+ * @author Abe White\n+ */\n+class MetaDataParsers {\n+\n+    private static final Localizer _loc = Localizer.forPackage\n+        (MetaDataParsers.class);\n+\n+    /**\n+     * Return the event type constants for the given tag, or null if none.\n+     */\n+    public static int[] getEventTypes(MetaDataTag tag) {\n+        switch (tag) {\n+            case PRE_PERSIST:\n+                return new int[]{ LifecycleEvent.BEFORE_PERSIST };\n+            case POST_PERSIST:\n+                return new int[]{ LifecycleEvent.AFTER_PERSIST };\n+            case PRE_REMOVE:\n+                return new int[]{ LifecycleEvent.BEFORE_DELETE };\n+            case POST_REMOVE:\n+                return new int[]{ LifecycleEvent.AFTER_DELETE };\n+            case PRE_UPDATE:\n+                return new int[]{ LifecycleEvent.BEFORE_STORE };\n+            case POST_UPDATE:\n+                return new int[]{ LifecycleEvent.AFTER_STORE };\n+            case POST_LOAD:\n+                return new int[]{ LifecycleEvent.AFTER_LOAD,\n+                    LifecycleEvent.AFTER_REFRESH };\n+            default:\n+                return null;\n+        }\n+    }\n+\n+    /**\n+     * Validate that the given listener class does not have multiple methods\n+     * listening for the same lifecycle event, which is forbidden by the spec.  \n+     */\n+    public static void validateMethodsForSameCallback(Class cls, \n+        Collection<LifecycleCallbacks> callbacks, Method method, \n+        MetaDataTag tag, MetaDataDefaults def, Log log) {\n+        if (callbacks == null || callbacks.isEmpty())\n+            return;\n+\n+        for (LifecycleCallbacks lc: callbacks) {\n+            if (!(lc instanceof MethodLifecycleCallbacks))\n+                continue;\n+            Method exists = ((MethodLifecycleCallbacks)lc).getCallbackMethod();\n+            if (!exists.getDeclaringClass().equals(method.getDeclaringClass()))\n+                continue;\n+\n+            PersistenceMetaDataDefaults defaults = getPersistenceDefaults(def);\n+            Localizer.Message msg = _loc.get(\"multiple-methods-on-callback\", \n+                new Object[] { method.getDeclaringClass().getName(), \n+                method.getName(), exists.getName(), tag.toString() });\n+            if (defaults == null \n+                || defaults.getAllowsMultipleMethodsForSameCallback())\n+                log.warn(msg);\n+            else\n+                throw new UserException(msg);\n+        }\n+    }\n+    \n+    /**\n+     * Return the {@link PersistenceMetaDataDefaults} in use, or null if not\n+     * using JPA defaults.\n+     */\n+    private static PersistenceMetaDataDefaults getPersistenceDefaults\n+        (MetaDataDefaults def) {\n+        if (def instanceof PersistenceMetaDataDefaults)\n+            return (PersistenceMetaDataDefaults) def;\n+        return null;\n+    }\n+}"},{"sha":"f64aefb038cb02a3aabb07fcce19eed3187b5351","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAEntityManagerFactory.java","status":"modified","additions":6,"deletions":5,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAEntityManagerFactory.java","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAEntityManagerFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAEntityManagerFactory.java?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -78,10 +78,10 @@\n      * settings. OpenJPA recognizes the following configuration settings in this\n      * method:\n      * <ul>\n-     * <li>org.apache.openjpa.ConnectionUsername</li>\n-     * <li>org.apache.openjpa.ConnectionPassword</li>\n-     * <li>org.apache.openjpa.ConnectionRetainMode</li>\n-     * <li>org.apache.openjpa.TransactionMode</li>\n+     * <li>openjpa.ConnectionUsername</li>\n+     * <li>openjpa.ConnectionPassword</li>\n+     * <li>openjpa.ConnectionRetainMode</li>\n+     * <li>openjpa.TransactionMode</li>\n      * </ul>\n      */\n     public OpenJPAEntityManager createEntityManager(Map props);\n@@ -90,7 +90,8 @@\n      * Register a listener for lifecycle-related events on the specified\n      * classes. If the classes are null, all events will be propagated to\n      * the listener. The listener will be passed on to all new entity\n-     * managers. See the <code>org.apache.openjpa.event</code> package for listener types.\n+     * managers. See the <code>org.apache.openjpa.event</code> package for \n+     * listener types.\n      *\n      * @since 0.3.3\n      */"},{"sha":"e9f6a600927f40c675765289ca04ddace906f434","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceMetaDataDefaults.java","status":"modified","additions":31,"deletions":33,"changes":64,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceMetaDataDefaults.java","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceMetaDataDefaults.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceMetaDataDefaults.java?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -53,17 +53,15 @@\n import org.apache.openjpa.util.MetaDataException;\n \n /**\n- * Javax persistence-based metadata defaults.\n+ * JPA-based metadata defaults.\n  *\n  * @author Patrick Linskey\n  * @author Abe White\n- * @nojavadoc\n  */\n public class PersistenceMetaDataDefaults\n     extends AbstractMetaDataDefaults {\n \n-    private boolean _allowsMultipleMethodsOnSameCallback;\n-    private boolean _allowsMissingCallbackConstructor;\n+    private boolean _allowsMultipleMethodsForSameCallback = true;\n \n     private static Localizer _loc = Localizer.forPackage\n         (PersistenceMetaDataDefaults.class);\n@@ -97,8 +95,6 @@\n     public PersistenceMetaDataDefaults() {\n         setCallbackMode(CALLBACK_RETHROW | CALLBACK_ROLLBACK |\n             CALLBACK_FAIL_FAST);\n-        _allowsMultipleMethodsOnSameCallback = true;\n-        _allowsMissingCallbackConstructor = true;\n     }\n \n     /**\n@@ -182,6 +178,35 @@ public PersistenceMetaDataDefaults() {\n             return BASIC;\n         return null;\n     }\n+    \n+    /** \n+     * Flags if multiple methods of the same class can handle the same \n+     * callback event.\n+     */\n+    public boolean getAllowsMultipleMethodsForSameCallback() {\n+        return _allowsMultipleMethodsForSameCallback;\n+    }\n+    \n+    /** \n+     * Flags if multiple methods of the same class can handle the same \n+     * callback event.\n+     */\n+    public void setAllowsMultipleMethodsForSameCallback(boolean flag) {\n+        _allowsMultipleMethodsForSameCallback = flag;\n+    }\n+\n+    /**\n+     * Auto-configuration method for the default access type of base classes \n+     * with ACCESS_UNKNOWN\n+     */\n+    public void setDefaultAccessType(String type) {\n+        if (type == null)\n+            return;\n+        if (\"PROPERTY\".equals(type.toUpperCase()))\n+            setDefaultAccessType(ClassMetaData.ACCESS_PROPERTY);\n+        else\n+            setDefaultAccessType(ClassMetaData.ACCESS_FIELD);\n+    }\n \n     @Override\n     public void populate(ClassMetaData meta, int access) {\n@@ -271,31 +296,4 @@ protected boolean isDefaultPersistent(ClassMetaData meta, Member member,\n             return false;\n         return true;\n \t}\n-    \n-    /** \n-     * Flags if multiple methods of the same class can handle the same \n-     * callback event.\n-     */\n-    public boolean getAllowsMultipleMethodsOnSameCallback() {\n-        return _allowsMultipleMethodsOnSameCallback;\n-    }\n-    \n-    public void setAllowsMultipleMethodsOnSameCallback(boolean flag) {\n-        _allowsMultipleMethodsOnSameCallback = flag;\n-    }\n-\n-    /** \n-     * Flags if it allowed for the callback listener class not to have a no-arg \n-     * constructor.\n-     */\n-    \n-    public boolean getAllowsMissingCallbackConstructor() {\n-        return _allowsMissingCallbackConstructor;\n-    }\n-    \n-    public void setAllowsMissingCallbackConstructor(boolean flag) {\n-        _allowsMissingCallbackConstructor = flag;\n-    }\n-    \n-    \n }"},{"sha":"eedfbbd02c6ab40daa639694e52a1a60a42a54d9","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceMetaDataFactory.java","status":"modified","additions":9,"deletions":19,"changes":28,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceMetaDataFactory.java","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceMetaDataFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceMetaDataFactory.java?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -35,11 +35,13 @@\n \n import org.apache.openjpa.lib.conf.Configurable;\n import org.apache.openjpa.lib.conf.Configuration;\n+import org.apache.openjpa.lib.conf.GenericConfigurable;\n import org.apache.openjpa.lib.meta.ClassAnnotationMetaDataFilter;\n import org.apache.openjpa.lib.meta.ClassArgParser;\n import org.apache.openjpa.lib.meta.MetaDataFilter;\n import org.apache.openjpa.lib.meta.MetaDataParser;\n import org.apache.openjpa.lib.util.Localizer;\n+import org.apache.openjpa.lib.util.Options;\n import org.apache.openjpa.meta.AbstractCFMetaDataFactory;\n import org.apache.openjpa.meta.ClassMetaData;\n import org.apache.openjpa.meta.FieldMetaData;\n@@ -58,18 +60,18 @@\n  */\n public class PersistenceMetaDataFactory\n     extends AbstractCFMetaDataFactory\n-    implements Configurable {\n+    implements Configurable, GenericConfigurable {\n \n     private static final Localizer _loc = Localizer.forPackage\n         (PersistenceMetaDataFactory.class);\n \n+    private final PersistenceMetaDataDefaults _def = \n+        new PersistenceMetaDataDefaults();\n     private AnnotationPersistenceMetaDataParser _annoParser = null;\n     private XMLPersistenceMetaDataParser _xmlParser = null;\n-    private PersistenceMetaDataDefaults _def = null;\n     private Map<URL, Set> _xml = null; // xml rsrc -> class names\n     private Set<URL> _unparsed = null; // xml rsrc\n     private boolean _fieldOverride = true;\n-    private int _access = ClassMetaData.ACCESS_FIELD;\n \n     /**\n      * Whether to use field-level override or class-level override.\n@@ -87,18 +89,6 @@ public boolean getFieldOverride() {\n         return _fieldOverride;\n     }\n \n-    /**\n-     * The default access type for base classes with ACCESS_UNKNOWN\n-     */\n-    public void setDefaultAccessType(String type) {\n-        if (type == null)\n-            return;\n-        if (\"PROPERTY\".equals(type.toUpperCase()))\n-            _access = ClassMetaData.ACCESS_PROPERTY;\n-        else\n-            _access = ClassMetaData.ACCESS_FIELD;\n-    }\n-\n     /**\n      * Return metadata parser, creating it if it does not already exist.\n      */\n@@ -333,10 +323,6 @@ private void validateStrategies(ClassMetaData meta) {\n     }\n \n     public MetaDataDefaults getDefaults() {\n-        if (_def == null) {\n-            _def = new PersistenceMetaDataDefaults();\n-            _def.setDefaultAccessType(_access);\n-        }\n         return _def;\n     }\n \n@@ -415,4 +401,8 @@ public void endConfiguration() {\n         else\n \t\t\trsrcs.add (\"META-INF/orm.xml\");\n \t}\n+\n+    public void setInto(Options opts) {\n+        opts.keySet().retainAll(opts.setInto(_def).keySet());\n+    }\n }"},{"sha":"fd4908dea41101972bf80159de2ba40261d21d4c","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java","status":"modified","additions":25,"deletions":10,"changes":35,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -113,9 +113,10 @@ public ConfigurationProvider load(PersistenceUnitInfo pinfo, Map m)\n         throws IOException {\n         if (pinfo == null)\n             return null;\n-\n-        if (!isOpenJPAPersistenceProvider(pinfo, null))\n+        if (!isOpenJPAPersistenceProvider(pinfo, null)) {\n+            warnUnknownProvider(pinfo);\n             return null;\n+        }\n \n         ConfigurationProviderImpl cp = new ConfigurationProviderImpl();\n         cp.addProperties(PersistenceUnitInfoImpl.toOpenJPAProperties(pinfo));\n@@ -148,8 +149,10 @@ public ConfigurationProvider load(String rsrc, String name, Map m)\n         // persistence.xml does not exist; just load map\n         PersistenceUnitInfoImpl pinfo = new PersistenceUnitInfoImpl();\n         pinfo.fromUserProperties(m);\n-        if (!isOpenJPAPersistenceProvider(pinfo, null))\n+        if (!isOpenJPAPersistenceProvider(pinfo, null)) {\n+            warnUnknownProvider(pinfo);\n             return null;\n+        }\n         cp.addProperties(pinfo.toOpenJPAProperties());\n         return cp;\n     }\n@@ -248,8 +251,10 @@ private Boolean load(ConfigurationProviderImpl cp, String rsrc,\n                 rsrc, String.valueOf(name)).getMessage(), getClass().getName(), \n                 rsrc);\n         } else if (!isOpenJPAPersistenceProvider(pinfo, loader)) {\n-            if (!explicit)\n+            if (!explicit) {\n+                warnUnknownProvider(pinfo);\n                 return Boolean.FALSE;\n+            }\n             throw new MissingResourceException(_loc.get(\"unknown-provider\", \n                 rsrc, name, pinfo.getPersistenceProviderClassName()).\n                 getMessage(), getClass().getName(), rsrc);\n@@ -319,20 +324,30 @@ private PersistenceUnitInfoImpl findUnit(List<PersistenceUnitInfoImpl>\n         try {\n             if (PersistenceProviderImpl.class.isAssignableFrom\n                 (Class.forName(provider, false, loader))) {\n-                // log not configured yet\n-                warn(_loc.get(\"extended-provider\", provider).getMessage());\n+                log(_loc.get(\"extended-provider\", provider).getMessage());\n                 return true;\n             }\n         } catch (Throwable t) {\n-            warn(_loc.get(\"unloadable-provider\", provider, t).\n-                getMessage());\n+            log(_loc.get(\"unloadable-provider\", provider, t).getMessage());\n             return false;\n         }\n-        warn(_loc.get(\"unrecognized-provider\", provider).getMessage());\n         return false;\n     }\n+\n+    /**\n+     * Warn the user that we could only find an unrecognized persistence \n+     * provider.\n+     */\n+    private static void warnUnknownProvider(PersistenceUnitInfo pinfo) {\n+        log(_loc.get(\"unrecognized-provider\", \n+            pinfo.getPersistenceProviderClassName()).getMessage());\n+    }\n     \n-    private static void warn(String msg) {\n+    /**\n+     * Log a message.   \n+     */\n+    private static void log(String msg) {\n+        // at this point logging isn't configured yet\n         System.err.println(msg);\n     }\n "},{"sha":"01ca9be5a488e9b5295c4e0b96a901d451058430","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","status":"modified","additions":28,"deletions":50,"changes":78,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -48,6 +48,7 @@\n import org.apache.openjpa.meta.FieldMetaData;\n import org.apache.openjpa.meta.JavaTypes;\n import org.apache.openjpa.meta.LifecycleMetaData;\n+import org.apache.openjpa.meta.MetaDataDefaults;\n import org.apache.openjpa.meta.MetaDataFactory;\n import static org.apache.openjpa.meta.MetaDataModes.*;\n import org.apache.openjpa.meta.MetaDataRepository;\n@@ -196,8 +197,7 @@ public AnnotationPersistenceMetaDataParser getAnnotationParser() {\n      * The annotation parser. When class is discovered in an XML file,\n      * we first parse any annotations present, then override with the XML.\n      */\n-    public void setAnnotationParser(\n-        AnnotationPersistenceMetaDataParser parser) {\n+    public void setAnnotationParser(AnnotationPersistenceMetaDataParser parser){\n         _parser = parser;\n     }\n \n@@ -588,9 +588,10 @@ protected boolean startClassElement(String name, Attributes attrs)\n                     warnUnsupportedTag(name);\n             }\n         } else if (tag instanceof PersistenceStrategy) {\n-            ret = startStrategy((PersistenceStrategy) tag, attrs);\n+            PersistenceStrategy ps = (PersistenceStrategy) tag;\n+            ret = startStrategy(ps, attrs);\n             if (ret)\n-                _strategy = (PersistenceStrategy) tag;\n+                _strategy = ps;\n         } else if (tag == ELEM_LISTENER)\n             ret = startEntityListener(attrs);\n         else if (tag == ELEM_ATTRS)\n@@ -819,8 +820,7 @@ protected boolean startSequenceGenerator(Attributes attrs) {\n         if (log.isInfoEnabled())\n             log.info(_loc.get(\"parse-sequence\", name));\n \n-        SequenceMetaData meta = getRepository().getCachedSequenceMetaData\n-            (name);\n+        SequenceMetaData meta = getRepository().getCachedSequenceMetaData(name);\n         if (meta != null && log.isWarnEnabled())\n             log.warn(_loc.get(\"override-sequence\", name));\n \n@@ -835,8 +835,7 @@ protected boolean startSequenceGenerator(Attributes attrs) {\n         if (seq == null || seq.indexOf('(') == -1) {\n             clsName = SequenceMetaData.IMPL_NATIVE;\n             props = null;\n-        } else // plugin\n-        {\n+        } else { // plugin\n             clsName = Configurations.getClassName(seq);\n             props = Configurations.getProperties(seq);\n             seq = null;\n@@ -1075,8 +1074,7 @@ private FieldMetaData parseField(Attributes attrs)\n                 field = meta.addDeclaredField(name, type);\n                 PersistenceMetaDataDefaults.setCascadeNone(field);\n                 PersistenceMetaDataDefaults.setCascadeNone(field.getKey());\n-                PersistenceMetaDataDefaults.setCascadeNone\n-                    (field.getElement());\n+                PersistenceMetaDataDefaults.setCascadeNone(field.getElement());\n             }\n             field.backingMember(member);\n         } else if (field == null) {\n@@ -1342,8 +1340,7 @@ protected boolean startNamedQuery(Attributes attrs)\n         if (log.isInfoEnabled())\n             log.info(_loc.get(\"parse-query\", name));\n \n-        QueryMetaData meta = getRepository().getCachedQueryMetaData\n-            (null, name);\n+        QueryMetaData meta = getRepository().getCachedQueryMetaData(null, name);\n         if (meta != null && log.isWarnEnabled())\n             log.warn(_loc.get(\"override-query\", name, currentLocation()));\n \n@@ -1398,8 +1395,7 @@ protected boolean startNamedNativeQuery(Attributes attrs)\n         if (log.isInfoEnabled())\n             log.info(_loc.get(\"parse-native-query\", name));\n \n-        QueryMetaData meta = getRepository().getCachedQueryMetaData\n-            (null, name);\n+        QueryMetaData meta = getRepository().getCachedQueryMetaData(null, name);\n         if (meta != null && log.isWarnEnabled())\n             log.warn(_loc.get(\"override-query\", name, currentLocation()));\n \n@@ -1486,8 +1482,8 @@ private boolean startEntityListener(Attributes attrs)\n         _listener = classForName(attrs.getValue(\"class\"));\n         boolean system = currentElement() == null;\n         Collection<LifecycleCallbacks>[] parsed = \n-            new AnnotationPersistenceMetaDataParser(_conf).parseCallbackMethods\n-            (_listener, null, true, true);\n+            AnnotationPersistenceMetaDataParser.parseCallbackMethods(_listener,\n+                null, true, true, _repos);\n         if (parsed == null)\n             return true;\n \n@@ -1526,8 +1522,11 @@ private boolean startCallback(MetaDataTag callback, Attributes attrs)\n         throws SAXException {\n         if (!isMetaDataMode())\n             return false;\n-        boolean system = currentElement() == null;\n+        int[] events = MetaDataParsers.getEventTypes(callback);\n+        if (events == null)\n+            return false;\n \n+        boolean system = currentElement() == null;\n         Class type = currentElement() == null ? null :\n             ((ClassMetaData) currentElement()).getDescribedType();\n         if (type == null)\n@@ -1540,6 +1539,7 @@ private boolean startCallback(MetaDataTag callback, Attributes attrs)\n                 _highs = new int[LifecycleEvent.ALL_EVENTS.length];\n         }\n \n+        MetaDataDefaults def = _repos.getMetaDataFactory().getDefaults();\n         LifecycleCallbacks adapter;\n         if (_listener != null)\n             adapter = new BeanLifecycleCallbacks(_listener,\n@@ -1548,12 +1548,13 @@ private boolean startCallback(MetaDataTag callback, Attributes attrs)\n             adapter = new MethodLifecycleCallbacks(_cls,\n                 attrs.getValue(\"method-name\"), false);\n \n-        int[] events = getEventTypes(callback);\n-        if (events == null)\n-            return true;\n-\n         for (int i = 0; i < events.length; i++) {\n             int event = events[i];\n+            if (_listener != null) {\n+                MetaDataParsers.validateMethodsForSameCallback(_listener, \n+                    _callbacks[event], ((BeanLifecycleCallbacks) adapter).\n+                    getCallbackMethod(), callback, def, getLog());\n+            }\n             if (_callbacks[event] == null)\n                 _callbacks[event] = new ArrayList<LifecycleCallbacks>(3);\n             _callbacks[event].add(adapter);\n@@ -1563,28 +1564,6 @@ private boolean startCallback(MetaDataTag callback, Attributes attrs)\n         return true;\n     }\n \n-    static int[] getEventTypes(MetaDataTag tag) {\n-        switch (tag) {\n-            case PRE_PERSIST:\n-                return new int[]{ LifecycleEvent.BEFORE_PERSIST };\n-            case POST_PERSIST:\n-                return new int[]{ LifecycleEvent.AFTER_PERSIST };\n-            case PRE_REMOVE:\n-                return new int[]{ LifecycleEvent.BEFORE_DELETE };\n-            case POST_REMOVE:\n-                return new int[]{ LifecycleEvent.AFTER_DELETE };\n-            case PRE_UPDATE:\n-                return new int[]{ LifecycleEvent.BEFORE_STORE };\n-            case POST_UPDATE:\n-                return new int[]{ LifecycleEvent.AFTER_STORE };\n-            case POST_LOAD:\n-                return new int[]{ LifecycleEvent.AFTER_LOAD,\n-                    LifecycleEvent.AFTER_REFRESH };\n-            default:\n-                return null;\n-        }\n-    }\n-\n     /**\n      * Store lifecycle metadata.\n      */\n@@ -1593,8 +1572,8 @@ private void storeCallbacks(ClassMetaData cls) {\n         Class supCls = cls.getDescribedType().getSuperclass();\n         Collection<LifecycleCallbacks>[] supCalls = null;\n         if (!Object.class.equals(supCls)) {\n-            supCalls = new AnnotationPersistenceMetaDataParser(_conf).\n-                parseCallbackMethods(supCls, null, true, false);\n+            supCalls = AnnotationPersistenceMetaDataParser.parseCallbackMethods\n+                (supCls, null, true, false, _repos);\n         }\n         if (supCalls != null) {\n             for (int event : LifecycleEvent.ALL_EVENTS) {\n@@ -1622,11 +1601,10 @@ private void storeCallbacks(ClassMetaData cls) {\n     /**\n      * Instantiate the given class, taking into account the default package.\n \t */\n-\tprotected Class classForName (String name)\n-\t\tthrows SAXException\n-\t{\n-\t\tif (\"Entity\".equals (name))\n+\tprotected Class classForName(String name)\n+\t\tthrows SAXException {\n+\t\tif (\"Entity\".equals(name))\n \t\t\treturn PersistenceCapable.class;\n-\t\treturn super.classForName (name, isRuntime ());\n+\t\treturn super.classForName(name, isRuntime());\n \t}\n }"},{"sha":"51e4e3828338fd744dde8857eaf7230bf4584996","filename":"openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties","status":"modified","additions":6,"deletions":14,"changes":20,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -60,7 +60,7 @@ missing-xml-config: The specified XML resource \"{0}\" for persistence unit \\\n \t\"{1}\" can''t be found in your class path.\n cantload-xml-config: The specified XML resource \"{0}\" for persistence unit \\\n \t\"{1}\" can''t be parsed.\n-unknown-provider: Persistence Provider \"{2}\" specified in persistence unit \\\n+unknown-provider: Persistence provider \"{2}\" specified in persistence unit \\\n \t\"{1}\" in \"{0}\" is not a recognized provider.\n illegal-index: The parameter index {0} is invalid. Parameters must be \\\n \tintegers starting at 1.\n@@ -86,19 +86,11 @@ system-listener-err: An error occurred invoking system entity listener \\\n no-transaction: Cannot perform operation with no transaction.\n multiple-methods-on-callback: Class \"{0}\" declares method \"{1}\" as well \\\n \tas \"{2}\" for handling the same \"{3}\" callback. \n-multiple-methods-on-callback-error: Class \"{0}\" declares method \"{1}\" as well \\\n-\tas \"{2}\" for handling the same \"{3}\" callback. \\\n-\t\"AllowsMultipleMethodsOnSameCallback\" property of MetaDataDefaults can be \\\n-\tset to true to supress this exception.\n-missing-no-arg-constructor: Entity listener class \"{0}\" must declare a no-arg \\\n-\tconstructor. \"AllowsNoArgConstructorCallback\" property of MetaDataDefaults \\\n-\tcan be set to true to ignore this exception.\t  \n-extended-provider: WARNING: Configured to use extended Persistence Provider \\\n-\t\"{0}\".\n-unloadable-provider: WARNING: Can not load configured Persistence Provider \\\n-\t\"{0}\" due to \"{1}\"\n-unrecognized-provider: WARNING: Configured to use non-recognized Persistence \\\n-\tProvider \"{0}\" \n+extended-provider: NOTE: Found extended persistence provider \"{0}\".\n+unloadable-provider: WARNING: Unable to load persistence provider \"{0}\" due \\\n+    to \"{1}\"\n+unrecognized-provider: WARNING: Found unrecognized persistence provider \"{0}\" \\\n+    in place of OpenJPA provider.  This provider's properties will not be used.\n EntityManagerFactory-name: EntityManagerFactory implementation\n EntityManagerFactory-desc: Allows extension of standard \\\n     org.apache.openjpa.persistence.EntityManagerFactoryImpl for custom behavior."},{"sha":"c2154f0e826718f707776811280ac5e18795eeb8","filename":"openjpa-project/src/doc/manual/jpa_overview_arch.xml","status":"modified","additions":23,"deletions":25,"changes":48,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/jpa_overview_arch.xml","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/jpa_overview_arch.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_arch.xml?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -105,11 +105,11 @@ datastore records.\n <emphasis role=\"bold\"><link linkend=\"jpa_overview_trans\"><classname>\n EntityTransaction</classname></link></emphasis>: Each <classname>EntityManager\n </classname> has a one-to-one relation with a single <classname>\n-javax.persistence.EntityTransaction</classname>. <classname>EntityTransaction\n-</classname>s allow operations on persistent data to be grouped into units of\n-work that either completely succeed or completely fail, leaving the datastore in\n-its original state. These all-or-nothing operations are important for\n-maintaining data integrity.\n+javax.persistence.EntityTransaction</classname>. <classname>\n+EntityTransaction</classname>s allow operations on persistent data to be \n+grouped into units of work that either completely succeed or completely fail, \n+leaving the datastore in its original state. These all-or-nothing operations \n+are important for maintaining data integrity.\n             </para>\n         </listitem>\n         <listitem>\n@@ -178,38 +178,37 @@ container.\n <programlisting>\n // get an EntityManagerFactory using the Persistence class; typically \n // the factory is cached for easy repeated use\n-EntityManagerFactory factory = Persistence.createEntityManagerFactory (null);\n+EntityManagerFactory factory = Persistence.createEntityManagerFactory(null);\n \n // get an EntityManager from the factory\n-EntityManager em = factory.createEntityManager (PersistenceContextType.EXTENDED);\n+EntityManager em = factory.createEntityManager(PersistenceContextType.EXTENDED);\n \n // updates take place within transactions\n-EntityTransaction tx = em.getTransaction ();\n-tx.begin ();\n+EntityTransaction tx = em.getTransaction();\n+tx.begin();\n \n // query for all employees who work in our research division\n // and put in over 40 hours a week average\n-Query query = em.createQuery (\"select e from Employee e where \"\n+Query query = em.createQuery(\"select e from Employee e where \"\n     + \"e.division.name = 'Research' AND e.avgHours &gt; 40\");\n List results = query.getResultList ();\n \n // give all those hard-working employees a raise\n-for (Object res : results)\n-{\n+for (Object res : results) {\n     Employee emp = (Employee) res;\n-    emp.setSalary (emp.getSalary () * 1.1);\n+    emp.setSalary(emp.getSalary() * 1.1);\n }\n \n // commit the updates and free resources\n-tx.commit ();\n-em.close ();\n-factory.close ();\n+tx.commit();\n+em.close();\n+factory.close();\n </programlisting>\n     </example>\n     <para>\n Within a container, the <classname>EntityManager</classname> will be injected\n-and transactional handled declaratively. Thus, the in-container version of the\n-example consists entirely of business logic:\n+and transactions will be handled declaratively. Thus, the in-container version \n+of the example consists entirely of business logic:\n     </para>\n     <example id=\"jpa_overview_arch_interact_inside\">\n         <title>\n@@ -219,15 +218,14 @@ example consists entirely of business logic:\n // query for all employees who work in our research division\n // and put in over 40 hours a week average - note that the EntityManager em\n // is injected using a @Resource annotation\n-Query query = em.createQuery (\"select e from Employee e where \"\n+Query query = em.createQuery(\"select e from Employee e where \"\n     + \"e.division.name = 'Research' and e.avgHours &gt; 40\");\n-List results = query.getResultList ();\n+List results = query.getResultList();\n \n // give all those hard-working employees a raise\n-for (Object res : results)\n-{\n+for (Object res : results) {\n     emp = (Employee) res;\n-    emp.setSalary (emp.getSalary () * 1.1);\n+    emp.setSalary(emp.getSalary() * 1.1);\n } \n </programlisting>\n     </example>\n@@ -274,8 +272,8 @@ application.\n         <para>\n The diagram above depicts the JPA exception architecture. All\n exceptions are unchecked. JPA uses standard exceptions where\n-appropriate, most notably <classname> IllegalArgumentException</classname>s and\n-<classname> IllegalStateException</classname> s. The specification also provides\n+appropriate, most notably <classname>IllegalArgumentException</classname>s and\n+<classname>IllegalStateException</classname>s. The specification also provides\n a few JPA-specific exceptions in the <literal>javax.persistence</literal>\n package. These exceptions should be self-explanatory. See the\n <ulink url=\"http://java.sun.com/javaee/5/docs/api\">Javadoc</ulink> for"},{"sha":"33df684db6e1f4d0bf42e653be0dc2cc646b52c8","filename":"openjpa-project/src/doc/manual/jpa_overview_conclusion.xml","status":"modified","additions":7,"deletions":3,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/jpa_overview_conclusion.xml","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/jpa_overview_conclusion.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_conclusion.xml?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -3,10 +3,14 @@\n         Conclusion\n     </title>\n     <para>\n-This concludes our overview of the JPA specification. The\n-<link linkend=\"jpa_tutorials_intro\">OpenJPA Tutorials</link> continue your\n+This concludes our overview of the JPA specification. \n+<!--\n+### TUTORIAL\n+The <link linkend=\"jpa_tutorials_intro\">OpenJPA Tutorials</link> continue your\n JPA education with step-by-step instructions for building simple JPA\n-applications. The <link linkend=\"ref_guide_intro\">OpenJPA Reference Guide</link>\n+applications. \n+-->\n+The <link linkend=\"ref_guide_intro\">OpenJPA Reference Guide</link>\n contains detailed documentation on all aspects of the OpenJPA implementation \n and core development tools.\n     </para>"},{"sha":"53aaf625f630d52a9ccef5927169507d5fd738b7","filename":"openjpa-project/src/doc/manual/jpa_overview_em.xml","status":"modified","additions":74,"deletions":73,"changes":147,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/jpa_overview_em.xml","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/jpa_overview_em.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_em.xml?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -18,14 +18,15 @@\n The diagram above presents an overview of the <classname>EntityManager\n </classname> interface. For a complete treatment of the <classname>\n EntityManager</classname> API, see the\n-<ulink url=\"jdo-javadoc/javax/jdo/EntityManager.html\"> Javadoc</ulink>\n-documentation. Methods whose parameter signatures consist of an ellipsis (...)\n-are overloaded to take multiple parameter types.\n+<ulink url=\"http://java.sun.com/javaee/5/docs/api/javax/persistence/EntityManager.html\">\n+Javadoc</ulink> documentation. Methods whose parameter signatures consist of \n+an ellipsis (...) are overloaded to take multiple parameter types.\n     </para>\n     <note>\n         <para>\n OpenJPA extends the standard <classname>EntityManager</classname> interface with\n-the <ulink url=\"../../api/openjpa/persistence/OpenJPAEntityManager.html\">\n+the \n+<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n <classname>org.apache.openjpa.persistence.OpenJPAEntityManager</classname>\n </ulink> interface to provide additional functionality.\n         </para>\n@@ -100,7 +101,7 @@ Every <classname>EntityManager</classname> has a one-to-one relation with an\n </link> instance. In fact, many vendors use a single class to implement both the\n <classname>EntityManager</classname> and <classname>EntityTransaction\n </classname> interfaces. If your application requires multiple concurrent\n-transactions, you will use multiple <classname>EntityManager</classname> s.\n+transactions, you will use multiple <classname>EntityManager</classname>s.\n         </para>\n         <para>\n You can retrieve the <classname>EntityTransaction</classname> associated with an\n@@ -129,7 +130,7 @@ demarcation or through the Java Transaction API (JTA) rather than through the\n lifecycle state of entity instances.\n         </para>\n <programlisting>\n-public void persist (Object entity);\n+public void persist(Object entity);\n </programlisting>\n         <para>\n         <indexterm>\n@@ -198,7 +199,7 @@ whose <link linkend=\"jpa_overview_meta_cascade\">cascades</link> include\n This action can only be used in the context of an active transaction.\n         </para>\n <programlisting>\n-public void remove (Object entity);\n+public void remove(Object entity);\n </programlisting>\n         <para>\n         <indexterm>\n@@ -268,7 +269,7 @@ whose <link linkend=\"jpa_overview_meta_cascade\">cascades</link> include\n This action can only be used in the context of an active transaction.\n         </para>\n <programlisting>\n-public void refresh (Object entity);\n+public void refresh(Object entity);\n </programlisting>\n         <para>\n         <indexterm>\n@@ -345,7 +346,7 @@ whose <link linkend=\"jpa_overview_meta_cascade\">cascades</link> include\n             </listitem>\n         </itemizedlist>\n <programlisting>\n-public Object merge (Object entity);\n+public Object merge(Object entity);\n </programlisting>\n         <para>\n         <indexterm>\n@@ -562,27 +563,27 @@ well as all transaction demarcation code.\n             </indexterm>\n <programlisting>\n // create some objects\n-Magazine mag = new Magazine (\"1B78-YU9L\", \"JavaWorld\");\n+Magazine mag = new Magazine(\"1B78-YU9L\", \"JavaWorld\");\n \n-Company pub = new Company (\"Weston House\");\n-pub.setRevenue (1750000D);\n-mag.setPublisher (pub);\n-pub.addMagazine (mag);\n+Company pub = new Company(\"Weston House\");\n+pub.setRevenue(1750000D);\n+mag.setPublisher(pub);\n+pub.addMagazine(mag);\n \n-Article art = new Article (\"JPA Rules!\", \"Transparent Object Persistence\");\n-art.addAuthor (new Author (\"Fred\", \"Hoyle\"));\n-mag.addArticle (art);\n+Article art = new Article(\"JPA Rules!\", \"Transparent Object Persistence\");\n+art.addAuthor(new Author(\"Fred\", \"Hoyle\"));\n+mag.addArticle(art);\n \n // persist\n-EntityManager em = emf.createEntityManager ();\n-em.getTransaction ().begin ();\n-em.persist (mag);\n-em.persist (pub);\n-em.persist (art);\n-em.getTransaction ().commit ();\n+EntityManager em = emf.createEntityManager();\n+em.getTransaction().begin();\n+em.persist(mag);\n+em.persist(pub);\n+em.persist(art);\n+em.getTransaction().commit();\n \n // or we could continue using the EntityManager...\n-em.close ();\n+em.close();\n </programlisting>\n         </example>\n         <example id=\"jpa_overview_em_lifecycle_update\">\n@@ -601,23 +602,23 @@ em.close ();\n                 </tertiary>\n             </indexterm>\n <programlisting>\n-Magazine.MagazineId mi = new Magazine.MagazineId ();\n+Magazine.MagazineId mi = new Magazine.MagazineId();\n mi.isbn = \"1B78-YU9L\";\n mi.title = \"JavaWorld\";\n \n // updates should always be made within transactions; note that\n // there is no code explicitly linking the magazine or company\n // with the transaction; JPA automatically tracks all changes\n-EntityManager em = emf.createEntityManager ();\n-em.getTransaction ().begin ();\n-Magazine mag = em.find (Magazine.class, mi);\n-mag.setPrice (5.99);\n-Company pub = mag.getPublisher ();\n-pub.setRevenue (1750000D);\n-em.getTransaction ().commit ();\n+EntityManager em = emf.createEntityManager();\n+em.getTransaction().begin();\n+Magazine mag = em.find(Magazine.class, mi);\n+mag.setPrice(5.99);\n+Company pub = mag.getPublisher();\n+pub.setRevenue(1750000D);\n+em.getTransaction().commit();\n \n // or we could continue using the EntityManager...\n-em.close ();\n+em.close();\n </programlisting>\n         </example>\n         <example id=\"jpa_overview_em_lifecycle_delete\">\n@@ -641,16 +642,16 @@ em.close ();\n Object oid = ...;\n \n // deletes should always be made within transactions\n-EntityManager em = emf.createEntityManager ();\n-em.getTransaction ().begin ();\n-Company pub = (Company) em.find (Company.class, oid);\n-for (Subscription sub : pub.getSubscriptions ())\n-    em.remove (sub);\n-pub.getSubscriptions ().clear ();\n-em.getTransaction ().commit ();\n+EntityManager em = emf.createEntityManager();\n+em.getTransaction().begin();\n+Company pub = (Company) em.find(Company.class, oid);\n+for (Subscription sub : pub.getSubscriptions())\n+    em.remove(sub);\n+pub.getSubscriptions().clear();\n+em.getTransaction().commit();\n \n // or we could continue using the EntityManager...\n-em.close ();\n+em.close();\n </programlisting>\n         </example>\n         <example id=\"jpa_overview_em_detachex\">\n@@ -665,37 +666,37 @@ and transactions.\n <programlisting>\n // CLIENT:\n // requests an object with a given oid\n-Record detached = (Record) getFromServer (oid);\n+Record detached = (Record) getFromServer(oid);\n \n ...\n \n // SERVER:\n // send object to client; object detaches on EM close\n-Object oid = processClientRequest ();\n-EntityManager em = emf.createEntityManager ();\n-Record record = em.find (Record.class, oid);\n-em.close ();\n-sendToClient (record);\n+Object oid = processClientRequest();\n+EntityManager em = emf.createEntityManager();\n+Record record = em.find(Record.class, oid);\n+em.close();\n+sendToClient(record);\n \n ...\n \n // CLIENT:\n // makes some modifications and sends back to server\n-detached.setSomeField (\"bar\");\n-sendToServer (detached);\n+detached.setSomeField(\"bar\");\n+sendToServer(detached);\n \n ...\n \n // SERVER:\n // merges the instance and commit the changes\n-Record modified = (Record) processClientRequest ();\n-EntityManager em = emf.createEntityManager ();\n-em.getTransaction ().begin ();\n-Record merged = (Record) em.merge (modified);\n-merged.setLastModified (System.currentTimeMillis ());\n-merged.setModifier (getClientIdentityCode ());\n-em.getTransaction ().commit ();\n-em.close ();\n+Record modified = (Record) processClientRequest();\n+EntityManager em = emf.createEntityManager();\n+em.getTransaction().begin();\n+Record merged = (Record) em.merge(modified);\n+merged.setLastModified(System.currentTimeMillis());\n+merged.setModifier(getClientIdentityCode());\n+em.getTransaction().commit();\n+em.close();\n </programlisting>\n         </example>\n     </section>\n@@ -713,7 +714,7 @@ context type of the <classname>EntityManager</classname>; see\n persistence contexts.\n         </para>\n <programlisting>\n-public &lt;T&gt; T find (Class&lt;T&gt; cls, Object oid);\n+public &lt;T&gt; T find(Class&lt;T&gt; cls, Object oid);\n </programlisting>\n         <para>\n         <indexterm>\n@@ -751,7 +752,7 @@ entity with the given type and identity exists in the datastore, this method\n returns null.\n         </para>\n <programlisting>\n-public &lt;T&gt; T getReference (Class&lt;T&gt; cls, Object oid);\n+public &lt;T&gt; T getReference(Class&lt;T&gt; cls, Object oid);\n </programlisting>\n         <para>\n         <indexterm>\n@@ -794,11 +795,11 @@ gets loaded when you attempt to access a persistent field. At that time, the\n implementation may throw an <classname>EntityNotFoundException</classname> if it\n discovers that the entity does not exist in the datastore. The implementation\n may also throw an <classname>EntityNotFoundException</classname> from the\n-<methodname>getReference</methodname> method itself. Unlike <methodname>find\n-</methodname>, <methodname>getReference</methodname> does not return null.\n+<methodname>getReference</methodname> method itself. Unlike <methodname>\n+find</methodname>, <methodname>getReference</methodname> does not return null.\n         </para>\n <programlisting>\n-public boolean contains (Object entity);\n+public boolean contains(Object entity);\n </programlisting>\n         <para>\n         <indexterm>\n@@ -835,7 +836,7 @@ persistence context.\n             </secondary>\n         </indexterm>\n <programlisting>\n-public void flush ();\n+public void flush();\n </programlisting>\n         <para>\n         <indexterm>\n@@ -875,8 +876,8 @@ progress, the <methodname>flush</methodname> method throws a <classname>\n TransactionRequiredException</classname>.\n         </para>\n <programlisting>\n-public FlushModeType getFlushMode ();\n-public void setFlushMode (FlushModeType flushMode);\n+public FlushModeType getFlushMode();\n+public void setFlushMode(FlushModeType flushMode);\n </programlisting>\n         <para>\n         <indexterm>\n@@ -928,7 +929,7 @@ control over flushing behavior. See the Reference Guide's\n             </para>\n         </note>\n <programlisting>\n-public void clear ();\n+public void clear();\n </programlisting>\n         <para>\n         <indexterm>\n@@ -976,7 +977,7 @@ persistence context. All entities managed by the <classname>EntityManager\n             </secondary>\n         </indexterm>\n <programlisting>\n-public Query createQuery (String query);\n+public Query createQuery(String query);\n </programlisting>\n         <para>\n <classname>Query</classname> objects are used to find entities matching certain\n@@ -985,7 +986,7 @@ the given Java Persistence Query Language (JPQL) string. See\n <xref linkend=\"jpa_overview_query\"/> for details.\n         </para>\n <programlisting>\n-public Query createNamedQuery (String name);\n+public Query createNamedQuery(String name);\n </programlisting>\n         <para>\n This method retrieves a query defined in metadata by name. The returned\n@@ -994,9 +995,9 @@ declared in metadata. For more information on named queries, read\n <xref linkend=\"jpa_overview_query_named\"/>.\n         </para>\n <programlisting>\n-public Query createNativeQuery (String sql);\n-public Query createNativeQuery (String sql, Class resultCls);\n-public Query createNativeQuery (String sql, String resultMapping);\n+public Query createNativeQuery(String sql);\n+public Query createNativeQuery(String sql, Class resultCls);\n+public Query createNativeQuery(String sql, String resultMapping);\n </programlisting>\n         <para>\n <emphasis>Native</emphasis> queries are queries in the datastore's native\n@@ -1018,8 +1019,8 @@ native query support.\n             </secondary>\n         </indexterm>\n <programlisting>\n-public boolean isOpen ();\n-public void close ();\n+public boolean isOpen();\n+public void close();\n </programlisting>\n         <para>\n When an <classname>EntityManager</classname> is no longer needed, you should"},{"sha":"b8e54df1bbd160f6b69a56bae194a1e6ffab3039","filename":"openjpa-project/src/doc/manual/jpa_overview_emfactory.xml","status":"modified","additions":32,"deletions":32,"changes":64,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/jpa_overview_emfactory.xml","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/jpa_overview_emfactory.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_emfactory.xml?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -22,7 +22,7 @@ EntityManager</classname> instances for application use.\n         <para>\n OpenJPA extends the standard <classname>EntityManagerFactory</classname>\n interface with the\n-<ulink url=\"../../api/openjpa/persistence/OpenJPAEntityManagerFactory.html\">\n+<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAEntityManagerFactory.html\">\n <classname>OpenJPAEntityManagerFactory</classname></ulink> to provide additional\n functionality.\n         </para>\n@@ -73,9 +73,9 @@ vendors to pool factories, cutting down on resource utilization.\n                 JNDI\n             </primary>\n         </indexterm>\n-JPA allows you to create and configure an <classname>EntityManagerFactory\n-</classname>, then store it in a Java Naming and Directory Interface (JNDI)\n-tree for later retrieval and use.\n+JPA allows you to create and configure an <classname>\n+EntityManagerFactory</classname>, then store it in a Java Naming and Directory \n+Interface (JNDI) tree for later retrieval and use.\n         </para>\n     </section>\n     <section id=\"jpa_overview_emfactory_em\">\n@@ -102,8 +102,8 @@ tree for later retrieval and use.\n             </secondary>\n         </indexterm>\n <programlisting>\n-public EntityManager createEntityManager ();\n-public EntityManager createEntityManager (Map map);\n+public EntityManager createEntityManager();\n+public EntityManager createEntityManager(Map map);\n </programlisting>\n         <para>\n The two <methodname>createEntityManager</methodname> methods above create a new\n@@ -144,8 +144,8 @@ createEntityManager</methodname>:\n <literal>openjpa.&lt;property&gt;</literal>, where <emphasis>&lt;property&gt;\n </emphasis> is any JavaBean property of the\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n-<classname> org.apache.openjpa.persistence.OpenJPAEntityManager</classname>\n-</ulink>.\n+<classname>\n+org.apache.openjpa.persistence.OpenJPAEntityManager</classname></ulink>.\n                     </para>\n                 </listitem>\n             </itemizedlist>\n@@ -217,7 +217,7 @@ merging detached entities.\n         <para>\n Injected <classname>EntityManager</classname>s have use a <emphasis>transaction\n </emphasis>, while <classname> EntityManager</classname>s obtained through the\n-<classname>EntityManagerFactory</classname> have an <emphasis> extended\n+<classname>EntityManagerFactory</classname> have an <emphasis>extended\n </emphasis> persistence context. We describe these persistence context types\n below.\n         </para>\n@@ -276,9 +276,9 @@ EntityManager em; // injected\n \n // each operation occurs in a separate persistence context, and returns \n // a new detached instance\n-Magazine mag1 = em.find (Magazine.class, magId);\n-Magazine mag2 = em.find (Magazine.class, magId);\n-assertTrue (mag2 != mag1);\n+Magazine mag1 = em.find(Magazine.class, magId);\n+Magazine mag2 = em.find(Magazine.class, magId);\n+assertTrue(mag2 != mag1);\n ...\n \n // transaction begins:\n@@ -287,17 +287,17 @@ assertTrue (mag2 != mag1);\n // detached objects.  however, two lookups within the same transaction\n // return the same instance, because the persistence context spans the\n // transaction\n-Magazine mag3 = em.find (Magazine.class, magId);\n-assertTrue (mag3 != mag1 &amp;&amp; mag3 != mag2);\n-Magazine mag4 = em.find (Magazine.class (magId);\n-assertTrue (mag4 == mag3);\n+Magazine mag3 = em.find(Magazine.class, magId);\n+assertTrue(mag3 != mag1 &amp;&amp; mag3 != mag2);\n+Magazine mag4 = em.find(Magazine.class (magId);\n+assertTrue(mag4 == mag3);\n ...\n \n // transaction commits:\n \n // once again, each operation returns a new instance\n-Magazine mag5 = em.find (Magazine.class, magId);\n-assertTrue (mag5 != mag3);\n+Magazine mag5 = em.find(Magazine.class, magId);\n+assertTrue(mag5 != mag3);\n </programlisting>\n             </example>\n         </section>\n@@ -324,30 +324,30 @@ EntityManager</classname> using an extended persistence context.\n                 </para>\n <programlisting>\n EntityManagerFactory emf = ...\n-EntityManager em = emf.createEntityManager (PersistenceContextType.EXTENDED);\n+EntityManager em = emf.createEntityManager();\n \n // persistence context active for entire life of EM, so only one entity\n // for a given persistent identity\n-Magazine mag1 = em.find (Magazine.class, magId);\n-Magazine mag2 = em.find (Magazine.class, magId);\n-assertTrue (mag2 == mag1);\n+Magazine mag1 = em.find(Magazine.class, magId);\n+Magazine mag2 = em.find(Magazine.class, magId);\n+assertTrue(mag2 == mag1);\n \n-em.getTransaction ().begin ();\n+em.getTransaction().begin();\n \n // same persistence context active within the transaction\n-Magazine mag3 = em.find (Magazine.class, magId);\n-assertTrue (mag3 == mag1);\n-Magazine mag4 = em.find (Magazine.class (magId);\n-assertTrue (mag4 == mag1);\n+Magazine mag3 = em.find(Magazine.class, magId);\n+assertTrue(mag3 == mag1);\n+Magazine mag4 = em.find(Magazine.class (magId);\n+assertTrue(mag4 == mag1);\n \n em.getTransaction.commit ();\n \n // when the transaction commits, instance still managed\n-Magazine mag5 = em.find (Magazine.class, magId);\n-assertTrue (mag5 == mag1);\n+Magazine mag5 = em.find(Magazine.class, magId);\n+assertTrue(mag5 == mag1);\n \n // instance finally becomes detached when EM closes\n-em.close ();\n+em.close();\n </programlisting>\n             </example>\n         </section>\n@@ -389,8 +389,8 @@ close the factory, or only close it when the application is exiting. Only\n applications that require multiple factories with different configurations have\n an obvious reason to create and close multiple <classname>EntityManagerFactory\n </classname> instances. Once a factory is closed, all methods except\n-<methodname>isOpen</methodname> throw an <classname> IllegalStateException\n-</classname>.\n+<methodname>isOpen</methodname> throw an <classname>\n+IllegalStateException</classname>.\n         </para>\n     </section>\n </chapter>"},{"sha":"7ba3709085be0814eda2b64be0996d9e34865b49","filename":"openjpa-project/src/doc/manual/jpa_overview_mapping.xml","status":"modified","additions":182,"deletions":231,"changes":413,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/jpa_overview_mapping.xml","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/jpa_overview_mapping.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_mapping.xml?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -192,20 +192,17 @@ package org.mag;\n @Entity\n @IdClass(Magazine.MagazineId.class)\n @Table(name=\"MAG\")\n-public class Magazine\n-{\n+public class Magazine {\n     ...\n \n-    public static class MagazineId\n-    {\n+    public static class MagazineId {\n         ...\n     }\n }\n \n @Entity\n @Table(name=\"ART\")\n-public class Article\n-{\n+public class Article {\n     ...\n }\n \n@@ -214,67 +211,58 @@ package org.mag.pub;\n \n @Entity\n @Table(name=\"COMP\")\n-public class Company\n-{\n+public class Company {\n     ...\n }\n \n @Entity\n @Table(name=\"AUTH\")\n-public class Author\n-{\n+public class Author {\n     ...\n }\n \n @Embeddable\n-public class Address\n-{\n+public class Address {\n     ...\n }\n \n \n package org.mag.subscribe;\n \n @MappedSuperclass\n-public abstract class Document\n-{\n+public abstract class Document {\n     ...\n }\n \n @Entity\n @Table(schema=\"CNTRCT\")\n public class Contract\n-    extends Document\n-{\n+    extends Document {\n     ...\n }\n \n @Entity\n @Table(name=\"SUB\", schema=\"CNTRCT\")\n-public class Subscription\n-{\n+public class Subscription {\n     ...\n \n     @Entity\n     @Table(name=\"LINE_ITEM\", schema=\"CNTRCT\")\n     public static class LineItem\n-        extends Contract\n-    {\n+        extends Contract {\n         ...\n     }\n }\n \n @Entity(name=\"Lifetime\")\n public class LifetimeSubscription\n-    extends Subscription\n-{\n+    extends Subscription {\n     ...\n }\n \n @Entity(name=\"Trial\")\n public class TrialSubscription\n-    extends Subscription\n-{\n+    extends Subscription {\n     ...\n }\n </programlisting>\n@@ -396,8 +384,7 @@ column of the <literal>ART</literal> table:\n <programlisting>\n @Entity\n @Table(name=\"ART\", uniqueConstraints=@Unique(columnNames=\"TITLE\"))\n-public class Article\n-{\n+public class Article {\n     ...\n }\n </programlisting>\n@@ -721,24 +708,23 @@ package org.mag;\n @Entity\n @IdClass(Magazine.MagazineId.class)\n @Table(name=\"MAG\")\n-public class Magazine\n-{\n+public class Magazine {\n+\n     @Column(length=9)\n     @Id private String isbn;\n     @Id private String title;\n \n     ...\n \n-    public static class MagazineId\n-    {\n+    public static class MagazineId {\n         ...\n     }\n }\n \n @Entity\n @Table(name=\"ART\", uniqueConstraints=@Unique(columnNames=\"TITLE\"))\n-public class Article\n-{\n+public class Article {\n+\n     @Id private long id;\n \n     ...\n@@ -749,8 +735,8 @@ package org.mag.pub;\n \n @Entity\n @Table(name=\"COMP\")\n-public class Company\n-{\n+public class Company {\n+\n     @Column(name=\"CID\")\n     @Id private long id;\n \n@@ -759,26 +745,25 @@ public class Company\n \n @Entity\n @Table(name=\"AUTH\")\n-public class Author\n-{\n+public class Author {\n+\n     @Column(name=\"AID\", columnDefinition=\"INTEGER64\")\n     @Id private long id;\n \n     ...\n }\n \n @Embeddable\n-public class Address\n-{\n+public class Address {\n     ...\n }\n \n \n package org.mag.subscribe;\n \n @MappedSuperclass\n-public abstract class Document\n-{\n+public abstract class Document {\n+\n     @Id\n     @GeneratedValue(strategy=GenerationType.IDENTITY)\n     private long id;\n@@ -789,39 +774,35 @@ public abstract class Document\n @Entity\n @Table(schema=\"CNTRCT\")\n public class Contract\n-    extends Document\n-{\n+    extends Document {\n     ...\n }\n \n @Entity\n @Table(name=\"SUB\", schema=\"CNTRCT\")\n-public class Subscription\n-{\n+public class Subscription {\n+\n     @Id private long id;\n \n     ...\n \n     @Entity\n     @Table(name=\"LINE_ITEM\", schema=\"CNTRCT\")\n     public static class LineItem\n-        extends Contract\n-    {\n+        extends Contract {\n         ...\n     }\n }\n \n @Entity(name=\"Lifetime\")\n public class LifetimeSubscription\n-    extends Subscription\n-{\n+    extends Subscription {\n     ...\n }\n \n @Entity(name=\"Trial\")\n public class TrialSubscription\n-    extends Subscription\n-{\n+    extends Subscription {\n     ...\n }\n </programlisting>\n@@ -1253,25 +1234,24 @@ package org.mag;\n @Entity\n @IdClass(Magazine.MagazineId.class)\n @Table(name=\"MAG\")\n-public class Magazine\n-{\n+public class Magazine {\n+\n     @Column(length=9)\n     @Id private String isbn;\n     @Id private String title;\n \n     ...\n \n-    public static class MagazineId\n-    {\n+    public static class MagazineId {\n         ...\n     }\n }\n \n @Entity\n @Table(name=\"ART\", uniqueConstraints=@Unique(columnNames=\"TITLE\"))\n @SequenceGenerator(name=\"ArticleSeq\", sequenceName=\"ART_SEQ\")\n-public class Article\n-{\n+public class Article {\n+\n     @Id\n     @GeneratedValue(strategy=GenerationType.SEQUENCE, generator=\"ArticleSeq\") \n     private long id;\n@@ -1284,8 +1264,8 @@ package org.mag.pub;\n \n @Entity\n @Table(name=\"COMP\")\n-public class Company\n-{\n+public class Company {\n+\n     @Column(name=\"CID\")\n     @Id private long id;\n \n@@ -1294,8 +1274,8 @@ public class Company\n \n @Entity\n @Table(name=\"AUTH\")\n-public class Author\n-{\n+public class Author {\n+\n     @Id\n     @GeneratedValue(strategy=GenerationType.TABLE, generator=\"AuthorGen\")\n     @TableGenerator(name=\"AuthorGen\", table=\"AUTH_GEN\", pkColumnName=\"PK\",\n@@ -1307,17 +1287,16 @@ public class Author\n }\n \n @Embeddable\n-public class Address\n-{\n+public class Address {\n     ...\n }\n \n \n package org.mag.subscribe;\n \n @MappedSuperclass\n-public abstract class Document\n-{\n+public abstract class Document {\n+\n     @Id\n     @GeneratedValue(generate=GenerationType.IDENTITY)\n     private long id;\n@@ -1328,15 +1307,15 @@ public abstract class Document\n @Entity\n @Table(schema=\"CNTRCT\")\n public class Contract\n-    extends Document\n-{\n+    extends Document {\n+\n     ...\n }\n \n @Entity\n @Table(name=\"SUB\", schema=\"CNTRCT\")\n-public class Subscription\n-{\n+public class Subscription {\n+\n     @Id\n     @GeneratedValue(strategy=GenerationType.IDENTITY)\n     private long id;\n@@ -1346,23 +1325,20 @@ public class Subscription\n     @Entity\n     @Table(name=\"LINE_ITEM\", schema=\"CNTRCT\")\n     public static class LineItem\n-        extends Contract\n-    {\n+        extends Contract {\n         ...\n     }\n }\n \n @Entity(name=\"Lifetime\")\n public class LifetimeSubscription\n-    extends Subscription\n-{\n+    extends Subscription {\n     ...\n }\n \n @Entity(name=\"Trial\")\n public class TrialSubscription\n-    extends Subscription\n-{\n+    extends Subscription {\n     ...\n }\n </programlisting>\n@@ -1545,15 +1521,13 @@ as well.\n @Entity\n @Table(name=\"SUB\", schema=\"CNTRCT\")\n @Inheritance(strategy=InheritanceType.SINGLE_TABLE)\n-public class Subscription\n-{\n+public class Subscription {\n     ...\n }\n \n @Entity(name=\"Lifetime\")\n public class LifetimeSubscription\n-    extends Subscription\n-{\n+    extends Subscription {\n     ...\n }\n </programlisting>\n@@ -1774,21 +1748,18 @@ we include the primary key join column for illustrative purposes.\n @Table(schema=\"CNTRCT\")\n @Inheritance(strategy=InheritanceType.JOINED)\n public class Contract\n-    extends Document\n-{\n+    extends Document {\n     ...\n }\n \n-public class Subscription\n-{\n+public class Subscription {\n     ...\n \n     @Entity\n     @Table(name=\"LINE_ITEM\", schema=\"CNTRCT\")\n     @PrimaryKeyJoinColumn(name=\"ID\", referencedColumnName=\"ID\")\n     public static class LineItem\n-        extends Contract\n-    {\n+        extends Contract {\n         ...\n     }\n }\n@@ -1823,8 +1794,7 @@ array of <classname> PrimaryKeyJoinColumn</classname> s. We could rewrite\n     @PrimaryKeyJoinColumn(name=\"ID\", referencedColumnName=\"ID\")\n })\n public static class LineItem\n-    extends Contract\n-{\n+    extends Contract {\n     ...\n }\n </programlisting>\n@@ -1977,16 +1947,14 @@ s to override superclass field mappings.\n @Entity\n @Table(name=\"MAG\")\n @Inheritance(strategy=InheritanceType.TABLE_PER_CLASS)\n-public class Magazine\n-{\n+public class Magazine {\n     ...\n }\n \n @Entity\n @Table(name=\"TABLOID\")\n public class Tabloid\n-    extends Magazine\n-{\n+    extends Magazine {\n     ...\n }\n </programlisting>\n@@ -2088,25 +2056,24 @@ package org.mag;\n @Entity\n @IdClass(Magazine.MagazineId.class)\n @Table(name=\"MAG\")\n-public class Magazine\n-{\n+public class Magazine {\n+\n     @Column(length=9)\n     @Id private String isbn;\n     @Id private String title;\n \n     ...\n \n-    public static class MagazineId\n-    {\n+    public static class MagazineId {\n         ...\n     }\n }\n \n @Entity\n @Table(name=\"ART\", uniqueConstraints=@Unique(columnNames=\"TITLE\"))\n @SequenceGenerator(name=\"ArticleSeq\", sequenceName=\"ART_SEQ\")\n-public class Article\n-{\n+public class Article {\n+\n     @Id\n     @GeneratedValue(strategy=GenerationType.SEQUENCE, generator=\"ArticleSeq\") \n     private long id;\n@@ -2119,8 +2086,8 @@ package org.mag.pub;\n \n @Entity\n @Table(name=\"COMP\")\n-public class Company\n-{\n+public class Company {\n+\n     @Column(name=\"CID\")\n     @Id private long id;\n \n@@ -2129,8 +2096,8 @@ public class Company\n \n @Entity\n @Table(name=\"AUTH\")\n-public class Author\n-{\n+public class Author {\n+\n     @Id\n     @GeneratedValue(strategy=GenerationType.TABLE, generator=\"AuthorGen\")\n     @TableGenerator(name=\"AuthorGen\", table=\"AUTH_GEN\", pkColumnName=\"PK\",\n@@ -2142,17 +2109,16 @@ public class Author\n }\n \n @Embeddable\n-public class Address\n-{\n+public class Address {\n     ...\n }\n \n \n package org.mag.subscribe;\n \n @MappedSuperclass\n-public abstract class Document\n-{\n+public abstract class Document {\n+\n     @Id\n     @GeneratedValue(strategy=GenerationType.IDENTITY)\n     private long id;\n@@ -2164,16 +2130,15 @@ public abstract class Document\n @Table(schema=\"CNTRCT\")\n @Inheritance(strategy=InheritanceType.JOINED)\n public class Contract\n-    extends Document\n-{\n+    extends Document {\n     ...\n }\n \n @Entity\n @Table(name=\"SUB\", schema=\"CNTRCT\")\n @Inheritance(strategy=InheritanceType.SINGLE_TABLE)\n-public class Subscription\n-{\n+public class Subscription {\n+\n     @Id\n     @GeneratedValue(strategy=GenerationType.IDENTITY)\n     private long id;\n@@ -2184,23 +2149,20 @@ public class Subscription\n     @Table(name=\"LINE_ITEM\", schema=\"CNTRCT\")\n     @PrimaryKeyJoinColumn(name=\"ID\", referencedColumnName=\"ID\")\n     public static class LineItem\n-        extends Contract\n-    {\n+        extends Contract {\n         ...\n     }\n }\n \n @Entity(name=\"Lifetime\")\n public class LifetimeSubscription\n-    extends Subscription\n-{\n+    extends Subscription {\n     ...\n }\n \n @Entity(name=\"Trial\")\n public class TrialSubscription\n-    extends Subscription\n-{\n+    extends Subscription {\n     ...\n }\n </programlisting>\n@@ -2485,25 +2447,24 @@ package org.mag;\n @IdClass(Magazine.MagazineId.class)\n @Table(name=\"MAG\")\n @DiscriminatorValue(\"Mag\")\n-public class Magazine\n-{\n+public class Magazine {\n+\n     @Column(length=9)\n     @Id private String isbn;\n     @Id private String title;\n \n     ...\n \n-    public static class MagazineId\n-    {\n+    public static class MagazineId {\n         ...\n     }\n }\n \n @Entity\n @Table(name=\"ART\", uniqueConstraints=@Unique(columnNames=\"TITLE\"))\n @SequenceGenerator(name=\"ArticleSeq\", sequenceName=\"ART_SEQ\")\n-public class Article\n-{\n+public class Article {\n+\n     @Id\n     @GeneratedValue(strategy=GenerationType.SEQUENCE, generator=\"ArticleSeq\") \n     private long id;\n@@ -2516,8 +2477,8 @@ package org.mag.pub;\n \n @Entity\n @Table(name=\"COMP\")\n-public class Company\n-{\n+public class Company {\n+\n     @Column(name=\"CID\")\n     @Id private long id;\n \n@@ -2526,8 +2487,8 @@ public class Company\n \n @Entity\n @Table(name=\"AUTH\")\n-public class Author\n-{\n+public class Author {\n+\n     @Id\n     @GeneratedValue(strategy=GenerationType.TABLE, generator=\"AuthorGen\")\n     @TableGenerator(name=\"AuthorGen\", table=\"AUTH_GEN\", pkColumnName=\"PK\",\n@@ -2539,17 +2500,16 @@ public class Author\n }\n \n @Embeddable\n-public class Address\n-{\n+public class Address {\n     ...\n }\n \n \n package org.mag.subscribe;\n \n @MappedSuperclass\n-public abstract class Document\n-{\n+public abstract class Document {\n+\n     @Id\n     @GeneratedValue(strategy=GenerationType.IDENTITY)\n     private long id;\n@@ -2562,17 +2522,16 @@ public abstract class Document\n @Inheritance(strategy=InheritanceType.JOINED)\n @DiscriminatorColumn(name=\"CTYPE\")\n public class Contract\n-    extends Document\n-{\n+    extends Document {\n     ...\n }\n \n @Entity\n @Table(name=\"SUB\", schema=\"CNTRCT\")\n @DiscriminatorColumn(name=\"KIND\", discriminatorType=DiscriminatorType.INTEGER)\n @DiscriminatorValue(\"1\")\n-public class Subscription\n-{\n+public class Subscription {\n+\n     @Id\n     @GeneratedValue(strategy=GenerationType.IDENTITY)\n     private long id;\n@@ -2582,25 +2541,22 @@ public class Subscription\n     @Entity\n     @Table(name=\"LINE_ITEM\", schema=\"CNTRCT\")\n     public static class LineItem\n-        extends Contract\n-    {\n+        extends Contract {\n         ...\n     }\n }\n \n @Entity(name=\"Lifetime\")\n @DiscriminatorValue(\"2\")\n public class LifetimeSubscription\n-    extends Subscription\n-{\n+    extends Subscription {\n     ...\n }\n \n @Entity(name=\"Trial\")\n @DiscriminatorValue(\"3\")\n public class TrialSubscription\n-    extends Subscription\n-{\n+    extends Subscription {\n     ...\n }\n </programlisting>\n@@ -2983,8 +2939,8 @@ package org.mag;\n @IdClass(Magazine.MagazineId.class)\n @Table(name=\"MAG\")\n @DiscriminatorValue(\"Mag\")\n-public class Magazine\n-{\n+public class Magazine {\n+\n     @Column(length=9)\n     @Id private String isbn;\n     @Id private String title;\n@@ -3000,17 +2956,16 @@ public class Magazine\n \n     ...\n \n-    public static class MagazineId\n-    {\n+    public static class MagazineId {\n         ...\n     }\n }\n \n @Entity\n @Table(name=\"ART\", uniqueConstraints=@Unique(columnNames=\"TITLE\"))\n @SequenceGenerator(name=\"ArticleSeq\", sequenceName=\"ART_SEQ\")\n-public class Article\n-{\n+public class Article {\n+\n     @Id\n     @GeneratedValue(strategy=GenerationType.SEQUENCE, generator=\"ArticleSeq\") \n     private long id;\n@@ -3029,8 +2984,8 @@ package org.mag.pub;\n \n @Entity\n @Table(name=\"COMP\")\n-public class Company\n-{\n+public class Company {\n+\n     @Column(name=\"CID\")\n     @Id private long id;\n \n@@ -3047,8 +3002,8 @@ public class Company\n \n @Entity\n @Table(name=\"AUTH\")\n-public class Author\n-{\n+public class Author {\n+\n     @Id\n     @GeneratedValue(strategy=GenerationType.TABLE, generator=\"AuthorGen\")\n     @TableGenerator(name=\"AuthorGen\", table=\"AUTH_GEN\", pkColumnName=\"PK\",\n@@ -3069,16 +3024,15 @@ public class Author\n }\n \n @Embeddable\n-public class Address\n-{\n+public class Address {\n     ...\n }\n \n package org.mag.subscribe;\n \n @MappedSuperclass\n-public abstract class Document\n-{\n+public abstract class Document {\n+\n     @Id\n     @GeneratedValue(strategy=GenerationType.IDENTITY)\n     private long id;\n@@ -3094,8 +3048,8 @@ public abstract class Document\n @Inheritance(strategy=InheritanceType.JOINED)\n @DiscriminatorColumn(name=\"CTYPE\")\n public class Contract\n-    extends Document\n-{\n+    extends Document {\n+\n     @Lob\n     private String terms;\n \n@@ -3106,8 +3060,8 @@ public class Contract\n @Table(name=\"SUB\", schema=\"CNTRCT\")\n @DiscriminatorColumn(name=\"KIND\", discriminatorType=DiscriminatorType.INTEGER)\n @DiscriminatorValue(\"1\")\n-public class Subscription\n-{\n+public class Subscription {\n+\n     @Id\n     @GeneratedValue(strategy=GenerationType.IDENTITY)\n     private long id;\n@@ -3126,8 +3080,8 @@ public class Subscription\n     @Entity\n     @Table(name=\"LINE_ITEM\", schema=\"CNTRCT\")\n     public static class LineItem\n-        extends Contract\n-    {\n+        extends Contract {\n+\n         @Column(name=\"COMM\")\n         private String comments;\n \n@@ -3140,8 +3094,8 @@ public class Subscription\n @Entity(name=\"Lifetime\")\n @DiscriminatorValue(\"2\")\n public class LifetimeSubscription\n-    extends Subscription\n-{\n+    extends Subscription {\n+\n     @Basic(fetch=FetchType.LAZY)\n     @Column(name=\"ELITE\")\n     private boolean getEliteClub () { ... }\n@@ -3153,8 +3107,8 @@ public class LifetimeSubscription\n @Entity(name=\"Trial\")\n @DiscriminatorValue(\"3\")\n public class TrialSubscription\n-    extends Subscription\n-{\n+    extends Subscription {\n+\n     @Column(name=\"END\")\n     public Date getEndDate () { ... }\n     public void setEndDate (Date end) { ... }\n@@ -3405,8 +3359,8 @@ package org.mag;\n @Table(name=\"ART\")\n @SecondaryTable(name=\"ART_DATA\", \n     pkJoinColumns=@PrimaryKeyJoinColumn(name=\"ART_ID\", referencedColumnName=\"ID\"))\n-public class Article\n-{\n+public class Article {\n+\n     @Id private long id;\n \n     @Column(table=\"ART_DATA\")\n@@ -3550,8 +3504,8 @@ package org.mag.pub;\n \n @Entity\n @Table(name=\"COMP\")\n-public class Company\n-{\n+public class Company {\n+\n     @Embedded\n     @AttributeOverrides({\n         @AttributeOverride(name=\"street\", column=@Column(name=\"STRT\")),\n@@ -3564,17 +3518,17 @@ public class Company\n \n @Entity\n @Table(name=\"AUTH\")\n-public class Author\n-{\n+public class Author {\n+\n     // use all defaults from Address class mappings\n     private Address address;\n     \n     ...\n }\n \n @Embeddable\n-public class Address\n-{\n+public class Address {\n+\n     private String street;\n     private String city;\n     @Column(columnDefinition=\"CHAR(2)\")\n@@ -3632,8 +3586,8 @@ Contract</classname> table's <literal>CVERSION</literal> column.\n                 </title>\n <programlisting>\n @MappedSuperclass\n-public abstract class Document\n-{\n+public abstract class Document {\n+\n     @Column(name=\"VERS\")\n     @Version private int version;\n \n@@ -3646,8 +3600,7 @@ public abstract class Document\n @DiscriminatorColumn(name=\"CTYPE\")\n @AttributeOverride(name=\"version\", column=@Column(name=\"CVERSION\"))\n public class Contract\n-    extends Document\n-{\n+    extends Document {\n     ...\n }\n </programlisting>\n@@ -3840,8 +3793,8 @@ Guide for details.\n package org.mag;\n \n @Table(name=\"AUTH\")\n-public class Magazine\n-{\n+public class Magazine {\n+\n     @Column(length=9)\n     @Id private String isbn;\n     @Id private String title;\n@@ -3858,8 +3811,8 @@ public class Magazine\n }\n \n @Table(name=\"ART\")\n-public class Article\n-{\n+public class Article {\n+\n     @Id private long id;\n \n     ...\n@@ -3869,8 +3822,8 @@ public class Article\n package org.mag.pub;\n \n @Table(name=\"COMP\")\n-public class Company\n-{\n+public class Company {\n+\n     @Column(name=\"CID\")\n     @Id private long id;\n \n@@ -3880,14 +3833,13 @@ public class Company\n \n package org.mag.subscribe;\n \n-public class Subscription\n-{\n+public class Subscription {\n     ...\n \n     @Table(name=\"LINE_ITEM\", schema=\"CNTRCT\")\n     public static class LineItem\n-        extends Contract\n-    {\n+        extends Contract {\n+\n         @ManyToOne\n         @JoinColumns({\n             @JoinColumn(name=\"MAG_ISBN\" referencedColumnName=\"ISBN\"),\n@@ -4092,8 +4044,8 @@ package org.mag;\n \n @Entity\n @Table(name=\"MAG\")\n-public class Magazine\n-{\n+public class Magazine {\n+\n     @Column(length=9)\n     @Id private String isbn;\n     @Id private String title;\n@@ -4113,8 +4065,8 @@ public class Magazine\n \n @Entity\n @Table(name=\"ART\")\n-public class Article\n-{\n+public class Article {\n+\n     @Id private long id;\n \n     @ManyToMany(cascade=CascadeType.PERSIST)\n@@ -4132,8 +4084,8 @@ package org.mag.pub;\n \n @Entity\n @Table(name=\"AUTH\")\n-public class Author\n-{\n+public class Author {\n+\n     @Column(name=\"AID\", columnDefinition=\"INTEGER64\")\n     @Id private long id;\n \n@@ -4273,26 +4225,26 @@ package org.mag.subscribe;\n \n @Entity\n @Table(name=\"SUB\", schema=\"CNTRCT\")\n-public class Subscription\n-{\n-@OneToMany(cascade={CascadeType.PERSIST,CascadeType.REMOVE})\n-@MapKey(name=\"num\")\n-@JoinTable(name=\"SUB_ITEMS\", schema=\"CNTRCT\",\n-    joinColumns=@JoinColumn(name=\"SUB_ID\"),\n-    inverseJoinColumns=@JoinColumn(name=\"ITEM_ID\"))\n-private Map&lt;Long,LineItem&gt; items;\n+public class Subscription {\n \n-...\n-\n-@Entity\n-@Table(name=\"LINE_ITEM\", schema=\"CNTRCT\")\n-public static class LineItem\n-    extends Contract\n-{\n-    private long num;\n+    @OneToMany(cascade={CascadeType.PERSIST,CascadeType.REMOVE})\n+    @MapKey(name=\"num\")\n+    @JoinTable(name=\"SUB_ITEMS\", schema=\"CNTRCT\",\n+        joinColumns=@JoinColumn(name=\"SUB_ID\"),\n+        inverseJoinColumns=@JoinColumn(name=\"ITEM_ID\"))\n+    private Map&lt;Long,LineItem&gt; items;\n \n     ...\n-}\n+\n+    @Entity\n+    @Table(name=\"LINE_ITEM\", schema=\"CNTRCT\")\n+    public static class LineItem\n+        extends Contract {\n+\n+        private long num;\n+\n+        ...\n+    }\n }\n </programlisting>\n                 <para>\n@@ -4370,8 +4322,8 @@ package org.mag;\n @IdClass(Magazine.MagazineId.class)\n @Table(name=\"MAG\")\n @DiscriminatorValue(\"Mag\")\n-public class Magazine\n-{\n+public class Magazine {\n+\n     @Column(length=9)\n     @Id private String isbn;\n     @Id private String title;\n@@ -4409,17 +4361,16 @@ public class Magazine\n \n     ...\n \n-    public static class MagazineId\n-    {\n+    public static class MagazineId {\n         ...\n     }\n }\n \n @Entity\n @Table(name=\"ART\", uniqueConstraints=@Unique(columnNames=\"TITLE\"))\n @SequenceGenerator(name=\"ArticleSeq\", sequenceName=\"ART_SEQ\")\n-public class Article\n-{\n+public class Article {\n+\n     @Id\n     @GeneratedValue(strategy=GenerationType.SEQUENCE, generator=\"ArticleSeq\") \n     private long id;\n@@ -4445,8 +4396,8 @@ package org.mag.pub;\n \n @Entity\n @Table(name=\"COMP\")\n-public class Company\n-{\n+public class Company {\n+\n     @Column(name=\"CID\")\n     @Id private long id;\n \n@@ -4479,8 +4430,8 @@ public class Company\n \n @Entity\n @Table(name=\"AUTH\")\n-public class Author\n-{\n+public class Author {\n+\n     @Id\n     @GeneratedValue(strategy=GenerationType.TABLE, generator=\"AuthorGen\")\n     @TableGenerator(name=\"AuthorGen\", tableName=\"AUTH_GEN\", pkColumnName=\"PK\",\n@@ -4506,8 +4457,8 @@ public class Author\n }\n \n @Embeddable\n-public class Address\n-{\n+public class Address {\n+\n     private String street;\n     private String city;\n     @Column(columnDefinition=\"CHAR(2)\")\n@@ -4519,8 +4470,8 @@ public class Address\n package org.mag.subscribe;\n \n @MappedSuperclass\n-public abstract class Document\n-{\n+public abstract class Document {\n+\n     @Id\n     @GeneratedValue(strategy=GenerationType.IDENTITY)\n     private long id;\n@@ -4536,8 +4487,8 @@ public abstract class Document\n @Inheritance(strategy=InheritanceType.JOINED)\n @DiscriminatorColumn(name=\"CTYPE\")\n public class Contract\n-    extends Document\n-{\n+    extends Document {\n+\n     @Lob\n     private String terms;\n \n@@ -4548,8 +4499,8 @@ public class Contract\n @Table(name=\"SUB\", schema=\"CNTRCT\")\n @DiscriminatorColumn(name=\"KIND\", discriminatorType=DiscriminatorType.INTEGER)\n @DiscriminatorValue(\"1\")\n-public class Subscription\n-{\n+public class Subscription {\n+\n     @Id\n     @GeneratedValue(strategy=GenerationType.IDENTITY)\n     private long id;\n@@ -4575,8 +4526,8 @@ public class Subscription\n     @Entity\n     @Table(name=\"LINE_ITEM\", schema=\"CNTRCT\")\n     public static class LineItem\n-        extends Contract\n-    {\n+        extends Contract {\n+\n         @Column(name=\"COMM\")\n         private String comments;\n \n@@ -4596,8 +4547,8 @@ public class Subscription\n @Entity(name=\"Lifetime\")\n @DiscriminatorValue(\"2\")\n public class LifetimeSubscription\n-    extends Subscription\n-{\n+    extends Subscription {\n+\n     @Basic(fetch=FetchType.LAZY)\n     @Column(name=\"ELITE\")\n     private boolean getEliteClub () { ... }\n@@ -4609,8 +4560,8 @@ public class LifetimeSubscription\n @Entity(name=\"Trial\")\n @DiscriminatorValue(\"3\")\n public class TrialSubscription\n-    extends Subscription\n-{\n+    extends Subscription {\n+\n     @Column(name=\"END\")\n     public Date getEndDate () { ... }\n     public void setEndDate (Date end) { ... }"},{"sha":"57e85da12ef9df1b835373adb0386800f8735d6f","filename":"openjpa-project/src/doc/manual/jpa_overview_meta.xml","status":"modified","additions":111,"deletions":124,"changes":235,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/jpa_overview_meta.xml","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/jpa_overview_meta.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_meta.xml?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -56,9 +56,9 @@ strategies:\n     <orderedlist>\n         <listitem>\n             <para>\n-In a resource named <filename>orm.xml</filename> placed in the <filename>\n-META-INF</filename> directory of the classpath or the jar archive containing\n-your persistent classes.\n+In a resource named <filename>orm.xml</filename> placed in a <filename>\n+META-INF</filename> directory within a directory in your classpath or within a \n+jar archive containing your persistent classes.\n             </para>\n         </listitem>\n         <listitem>\n@@ -221,7 +221,7 @@ attribute:\n             <itemizedlist>\n                 <listitem>\n                     <para>\n-<literal>class</literal>: This required attribute lists the class name for the\n+<literal>class</literal>: Set this required attribute to the name of the\n identity class.\n                     </para>\n                 </listitem>\n@@ -413,83 +413,71 @@ package org.mag;\n \n @Entity\n @IdClass(Magazine.MagazineId.class)\n-public class Magazine\n-{\n+public class Magazine {\n     ...\n \n-    public static class MagazineId\n-    {\n+    public static class MagazineId {\n         ...\n     }\n }\n \n @Entity\n-public class Article\n-{\n+public class Article {\n     ...\n }\n \n \n package org.mag.pub;\n \n @Entity\n-public class Company\n-{\n+public class Company {\n     ...\n }\n \n @Entity\n-public class Author\n-{\n+public class Author {\n     ...\n }\n \n @Embeddable\n-public class Address\n-{\n+public class Address {\n     ...\n }\n \n \n package org.mag.subscribe;\n \n @MappedSuperclass\n-public abstract class Document\n-{\n+public abstract class Document {\n     ...\n }\n \n @Entity\n public class Contract\n-    extends Document\n-{\n+    extends Document {\n     ...\n }\n \n @Entity\n-public class Subscription\n-{\n+public class Subscription {\n     ...\n \n     @Entity\n     public static class LineItem\n-        extends Contract\n-    {\n+        extends Contract {\n         ...\n     }\n }\n \n @Entity(name=\"Lifetime\")\n public class LifetimeSubscription\n-    extends Subscription\n-{\n+    extends Subscription {\n     ...\n }\n \n @Entity(name=\"Trial\")\n public class TrialSubscription\n-    extends Subscription\n-{\n+    extends Subscription {\n     ...\n }\n </programlisting>\n@@ -587,19 +575,19 @@ Property access, on the other hand, retrieves and loads state through JavaBean\n <literal>T</literal>, you must define the following getter method:\n         </para>\n <programlisting>\n-T getP ();\n+T getP();\n </programlisting>\n         <para>\n For boolean properties, this is also acceptable:\n         </para>\n <programlisting>\n-boolean isP ();\n+boolean isP();\n </programlisting>\n         <para>\n You must also define the following setter method:\n         </para>\n <programlisting>\n-void setP (T value);\n+void setP(T value);\n </programlisting>\n         <para>\n To use property access, set your <literal>entity</literal> element's <literal>\n@@ -608,9 +596,9 @@ metadata and mapping annotations on the getter method:\n         </para>\n <programlisting>\n @ManyToOne\n-private Company getPublisher () { ... }\n+private Company getPublisher() { ... }\n \n-private void setPublisher (Company publisher) { ... }\n+private void setPublisher(Company publisher) { ... }\n </programlisting>\n         <warning>\n             <para>\n@@ -662,7 +650,7 @@ either a persistent field or a persistent property.\n             <para>\n The <classname>Transient</classname> annotation specifies that a field is\n non-persistent. Use it to exclude fields from management that would otherwise be\n-persistent. <classname> Transient</classname> is a marker annotation only; it\n+persistent. <classname>Transient</classname> is a marker annotation only; it\n has no properties.\n             </para>\n             <para>\n@@ -873,8 +861,8 @@ represents the UUID as a 32-character hexadecimal string.\n                 </itemizedlist>\n                 <para>\n These string constants are defined in\n-<ulink url=\"../../api/openjpa/persistence/Generator.html\"><classname>\n-org.apache.openjpa.persistence.Generator</classname></ulink>.\n+<ulink url=\"../apidocs/org/apache/openjpa/persistence/Generator.html\">\n+<classname>org.apache.openjpa.persistence.Generator</classname></ulink>.\n                 </para>\n             </note>\n         </section>\n@@ -998,23 +986,23 @@ attribute is required.\n <classname>Basic</classname> signifies a standard value persisted as-is to the\n datastore. You can use the <classname>Basic</classname> annotation on persistent\n fields of the following types: primitives, primitive wrappers, <classname>\n-java.lang.String</classname>, <classname>byte[]</classname>, <classname>Byte[]\n-</classname>, <classname>char[]</classname>, <classname>Character[]</classname>\n-, <classname>java.math.BigDecimal</classname>, <classname>java.math.BigInteger\n-</classname>, <classname>java.util.Date</classname>, <classname>\n-java.util.Calendar</classname>, <classname>java.sql.Date</classname>,\n-<classname>java.sql.Timestamp</classname>, <classname>Enum</classname> s, and\n-<classname>Serializable</classname> types.\n+java.lang.String</classname>, <classname>byte[]</classname>, <classname>\n+Byte[]</classname>, <classname>char[]</classname>, <classname>\n+Character[]</classname>, <classname>java.math.BigDecimal</classname>, \n+<classname>java.math.BigInteger</classname>, <classname>\n+java.util.Date</classname>, <classname>java.util.Calendar</classname>, \n+<classname>java.sql.Date</classname>, <classname>java.sql.Timestamp</classname>,\n+<classname>Enum</classname>s, and <classname>Serializable</classname> types.\n             </para>\n             <para>\n <classname>Basic</classname> declares these properties:\n             </para>\n             <itemizedlist>\n                 <listitem>\n                     <para>\n-<literal>FetchType fetch</literal>: Whether to load the field eagerly (\n-<literal>FetchType.EAGER</literal>) or lazily ( <literal>FetchType.LAZY\n-</literal> ). Defaults to <literal>FetchType.EAGER</literal>.\n+<literal>FetchType fetch</literal>: Whether to load the field eagerly \n+(<literal>FetchType.EAGER</literal>) or lazily (<literal>\n+FetchType.LAZY</literal>). Defaults to <literal>FetchType.EAGER</literal>.\n                     </para>\n                 </listitem>\n                 <listitem>\n@@ -1187,8 +1175,8 @@ required.\n                 </secondary>\n             </indexterm>\n             <para>\n-When an entity <literal>A</literal> references a single entity <literal>B\n-</literal>, and other <literal>A</literal>s might also reference the same\n+When an entity <literal>A</literal> references a single entity <literal>\n+B</literal>, and other <literal>A</literal>s might also reference the same\n <literal>B</literal>, we say there is a <emphasis>many to one</emphasis>\n relation from <literal>A</literal> to <literal>B</literal>. In our sample\n featureSelection, for example, each magazine has a reference to its publisher. Multiple\n@@ -1214,18 +1202,18 @@ behavior for this field. We explore cascades below. Defaults to an empty array.\n                 </listitem>\n                 <listitem>\n                     <para>\n-<literal>FetchType fetch</literal>: Whether to load the field eagerly (\n-<literal>FetchType.EAGER</literal>) or lazily ( <literal>FetchType.LAZY\n-</literal> ). Defaults to <literal>FetchType.EAGER</literal>. See\n-<xref linkend=\"jpa_overview_meta_fetch\"/> above for details on fetch\n-types.\n+<literal>FetchType fetch</literal>: Whether to load the field eagerly \n+(<literal>FetchType.EAGER</literal>) or lazily \n+(<literal>FetchType.LAZY</literal>). Defaults to <literal>\n+FetchType.EAGER</literal>. See <xref linkend=\"jpa_overview_meta_fetch\"/> above \n+for details on fetch types.\n                     </para>\n                 </listitem>\n                 <listitem>\n                     <para>\n <literal>boolean optional</literal>: Whether the related object must exist. If\n-<literal>false</literal>, this field cannot be null. Defaults to <literal>true\n-</literal>.\n+<literal>false</literal>, this field cannot be null. Defaults to <literal>\n+true</literal>.\n                     </para>\n                 </listitem>\n             </itemizedlist>\n@@ -1247,8 +1235,8 @@ required.\n                 </listitem>\n                 <listitem>\n                     <para>\n-<literal>fetch</literal>: One of <literal>EAGER</literal> or <literal>LAZY\n-</literal>.\n+<literal>fetch</literal>: One of <literal>EAGER</literal> or <literal>\n+LAZY</literal>.\n                     </para>\n                 </listitem>\n                 <listitem>\n@@ -1279,7 +1267,7 @@ null.\n We introduce the JPA <classname>EntityManager</classname> in\n <xref linkend=\"jpa_overview_em\"/>. The <classname>EntityManager\n </classname> has APIs to persist new entities, remove (delete) existing\n-entities, refresh entity state from the datastore, and merge <emphasis> detached\n+entities, refresh entity state from the datastore, and merge <emphasis>detached\n </emphasis> entity state back into the persistence context. We explore all of\n these APIs in detail later in the overview.\n                 </para>\n@@ -1386,8 +1374,8 @@ equivalent:\n             </indexterm>\n             <para>\n When an entity <literal>A</literal> references multiple <literal>B</literal>\n-entities, and no two <literal>A</literal>s reference the same <literal>B\n-</literal>, we say there is a <emphasis>one to many</emphasis> relation from\n+entities, and no two <literal>A</literal>s reference the same <literal>\n+B</literal>, we say there is a <emphasis>one to many</emphasis> relation from\n <literal>A</literal> to <literal>B</literal>.\n             </para>\n             <para>\n@@ -1428,11 +1416,11 @@ behavior for the collection elements. We explore cascades above in\n                 </listitem>\n                 <listitem>\n                     <para>\n-<literal>FetchType fetch</literal>: Whether to load the field eagerly (\n-<literal>FetchType.EAGER</literal>) or lazily ( <literal>FetchType.LAZY\n-</literal> ). Defaults to <literal>FetchType.LAZY</literal>. See\n-<xref linkend=\"jpa_overview_meta_fetch\"/> above for details on fetch\n-types.\n+<literal>FetchType fetch</literal>: Whether to load the field eagerly \n+(<literal>FetchType.EAGER</literal>) or lazily \n+(<literal>FetchType.LAZY</literal>). Defaults to <literal>\n+FetchType.LAZY</literal>. See <xref linkend=\"jpa_overview_meta_fetch\"/> above \n+for details on fetch types.\n                     </para>\n                 </listitem>\n             </itemizedlist>\n@@ -1454,8 +1442,8 @@ required.\n                 </listitem>\n                 <listitem>\n                     <para>\n-<literal>fetch</literal>: One of <literal>EAGER</literal> or <literal>LAZY\n-</literal>.\n+<literal>fetch</literal>: One of <literal>EAGER</literal> or <literal>\n+LAZY</literal>.\n                     </para>\n                 </listitem>\n                 <listitem>\n@@ -1578,8 +1566,8 @@ Reference Guide for details.\n                 </secondary>\n             </indexterm>\n             <para>\n-When an entity <literal>A</literal> references a single entity <literal>B\n-</literal>, and no other <literal>A</literal>s can reference the same <literal>\n+When an entity <literal>A</literal> references a single entity <literal>\n+B</literal>, and no other <literal>A</literal>s can reference the same <literal>\n B</literal>, we say there is a <emphasis>one to one</emphasis> relation between\n <literal>A</literal> and <literal>B</literal>. In our sample featureSelection, <classname>\n Magazine</classname> has a one to one relation to <classname>Article</classname>\n@@ -1615,18 +1603,18 @@ array.\n                 </listitem>\n                 <listitem>\n                     <para>\n-<literal>FetchType fetch</literal>: Whether to load the field eagerly (\n-<literal>FetchType.EAGER</literal>) or lazily ( <literal>FetchType.LAZY\n-</literal> ). Defaults to <literal>FetchType.EAGER</literal>. See\n-<xref linkend=\"jpa_overview_meta_fetch\"/> above for details on fetch\n-types.\n+<literal>FetchType fetch</literal>: Whether to load the field eagerly \n+(<literal>FetchType.EAGER</literal>) or lazily \n+(<literal>FetchType.LAZY</literal>). Defaults to <literal>\n+FetchType.EAGER</literal>. See <xref linkend=\"jpa_overview_meta_fetch\"/> above \n+for details on fetch types.\n                     </para>\n                 </listitem>\n                 <listitem>\n                     <para>\n <literal>boolean optional</literal>: Whether the related object must exist. If\n-<literal>false</literal>, this field cannot be null. Defaults to <literal>true\n-</literal>.\n+<literal>false</literal>, this field cannot be null. Defaults to <literal>\n+true</literal>.\n                     </para>\n                 </listitem>\n             </itemizedlist>\n@@ -1648,8 +1636,8 @@ required.\n                 </listitem>\n                 <listitem>\n                     <para>\n-<literal>fetch</literal>: One of <literal>EAGER</literal> or <literal>LAZY\n-</literal>.\n+<literal>fetch</literal>: One of <literal>EAGER</literal> or <literal>\n+LAZY</literal>.\n                     </para>\n                 </listitem>\n                 <listitem>\n@@ -1692,7 +1680,7 @@ one-to-one</literal> element.\n             <para>\n When an entity <literal>A</literal> references multiple <literal>B</literal>\n entities, and other <literal>A</literal>s might reference some of the same\n-<literal>B</literal> s, we say there is a <emphasis>many to many</emphasis>\n+<literal>B</literal>s, we say there is a <emphasis>many to many</emphasis>\n relation between <literal>A</literal> and <literal>B</literal>. In our sample\n featureSelection, for example, each article has a reference to all the authors that\n contributed to the article. Other articles might have some of the same authors.\n@@ -1730,11 +1718,11 @@ behavior for the collection elements. We explore cascades above in\n                 </listitem>\n                 <listitem>\n                     <para>\n-<literal>FetchType fetch</literal>: Whether to load the field eagerly (\n-<literal>FetchType.EAGER</literal>) or lazily ( <literal>FetchType.LAZY\n-</literal> ). Defaults to <literal>FetchType.LAZY</literal>. See\n-<xref linkend=\"jpa_overview_meta_fetch\"/> above for details on fetch\n-types.\n+<literal>FetchType fetch</literal>: Whether to load the field eagerly \n+(<literal>FetchType.EAGER</literal>) or lazily \n+(<literal>FetchType.LAZY</literal>). Defaults to <literal>\n+FetchType.LAZY</literal>. See <xref linkend=\"jpa_overview_meta_fetch\"/> above \n+for details on fetch types.\n                     </para>\n                 </listitem>\n             </itemizedlist>\n@@ -1756,8 +1744,8 @@ required.\n                 </listitem>\n                 <listitem>\n                     <para>\n-<literal>fetch</literal>: One of <literal>EAGER</literal> or <literal>LAZY\n-</literal>.\n+<literal>fetch</literal>: One of <literal>EAGER</literal> or <literal>\n+LAZY</literal>.\n                     </para>\n                 </listitem>\n                 <listitem>\n@@ -1905,21 +1893,21 @@ Fields declared <literal>static, transient</literal>, or <literal>final\n                 <listitem>\n                     <para>\n Fields of any primitive type, primitive wrapper type, <classname>\n-java.lang.String</classname>, <classname>byte[]</classname>, <classname>Byte[]\n-</classname>, <classname>char[]</classname>, <classname>Character[]</classname>\n-, <classname>java.math.BigDecimal</classname>, <classname>java.math.BigInteger\n-</classname>, <classname>java.util.Date</classname>, <classname>\n-java.util.Calendar</classname>, <classname>java.sql.Date</classname>,\n-<classname>java.sql.Timestamp</classname>, or any <classname>Serializable\n-</classname> type default to persistent, as if annotated with\n-<link linkend=\"jpa_overview_meta_basic\"><literal>@Basic</literal></link>.\n+java.lang.String</classname>, <classname>byte[]</classname>, <classname>\n+Byte[]</classname>, <classname>char[]</classname>, <classname>\n+Character[]</classname>, <classname>java.math.BigDecimal</classname>, \n+<classname>java.math.BigInteger</classname>, <classname>\n+java.util.Date</classname>, <classname> java.util.Calendar</classname>, \n+<classname>java.sql.Date</classname>, <classname>java.sql.Timestamp</classname>,\n+or any <classname>Serializable</classname> type default to persistent, as if \n+annotated with <link linkend=\"jpa_overview_meta_basic\"><literal>\n+@Basic</literal></link>.\n                     </para>\n                 </listitem>\n                 <listitem>\n                     <para>\n Fields of an embeddable type default to persistent, as if annotated with\n-<link linkend=\"jpa_overview_meta_embedded\"><literal> @Embedded</literal></link>\n-.\n+<link linkend=\"jpa_overview_meta_embedded\"><literal>@Embedded</literal></link>.\n                     </para>\n                 </listitem>\n                 <listitem>\n@@ -3500,8 +3488,8 @@ package org.mag;\n \n @Entity\n @IdClass(Magazine.MagazineId.class)\n-public class Magazine\n-{\n+public class Magazine {\n+\n     @Id private String isbn;\n     @Id private String title;\n     @Version private int version;\n@@ -3524,15 +3512,14 @@ public class Magazine\n \n     ...\n \n-    public static class MagazineId\n-    {\n+    public static class MagazineId {\n         ...\n     }\n }\n \n @Entity\n-public class Article\n-{\n+public class Article {\n+\n     @Id private long id;\n     @Version private int version;\n     \n@@ -3550,8 +3537,8 @@ public class Article\n package org.mag.pub;\n \n @Entity\n-public class Company\n-{\n+public class Company {\n+\n     @Id private long id;\n     @Version private int version;\n \n@@ -3569,8 +3556,8 @@ public class Company\n }\n \n @Entity\n-public class Author\n-{\n+public class Author {\n+\n     @Id private long id;\n     @Version private int version;\n \n@@ -3585,8 +3572,8 @@ public class Author\n }\n \n @Embeddable\n-public class Address\n-{\n+public class Address {\n+\n     private String street; // defaults to @Basic\n     private String city;   // defaults to @Basic\n     private String state;  // defaults to @Basic\n@@ -3599,8 +3586,8 @@ public class Address\n package org.mag.subscribe;\n \n @MappedSuperclass\n-public abstract class Document\n-{\n+public abstract class Document {\n+\n     @Id private long id;\n     @Version private int version;\n \n@@ -3609,16 +3596,16 @@ public abstract class Document\n \n @Entity\n public class Contract\n-    extends Document\n-{\n+    extends Document {\n+\n     private String terms; // defaults to @Basic\n \n     ...\n }\n \n @Entity\n-public class Subscription\n-{\n+public class Subscription {\n+\n     @Id private long id;\n     @Version private int version;\n \n@@ -3633,8 +3620,8 @@ public class Subscription\n \n     @Entity\n     public static class LineItem\n-        extends Contract\n-    {\n+        extends Contract {\n+\n         private String comments; // defaults to @Basic\n         private double price;    // defaults to @Basic\n         private long num;        // defaults to @Basic\n@@ -3648,21 +3635,21 @@ public class Subscription\n \n @Entity(name=\"Lifetime\")\n public class LifetimeSubscription\n-    extends Subscription\n-{\n+    extends Subscription {\n+\n     @Basic(fetch=FetchType.LAZY)\n-    private boolean getEliteClub () { ... }\n-    public void setEliteClub (boolean elite) { ... }\n+    private boolean getEliteClub() { ... }\n+    public void setEliteClub(boolean elite) { ... }\n \n     ...\n }\n \n @Entity(name=\"Trial\")\n public class TrialSubscription\n-    extends Subscription\n-{\n-    public Date getEndDate () { ... }\n-    public void setEndDate (Date end) { ... }\n+    extends Subscription {\n+\n+    public Date getEndDate() { ... }\n+    public void setEndDate(Date end) { ... }\n \n     ...\n }"},{"sha":"2a3e2d7629b4150312f2baa09ef4253699a5659d","filename":"openjpa-project/src/doc/manual/jpa_overview_pc.xml","status":"modified","additions":74,"deletions":88,"changes":162,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/jpa_overview_pc.xml","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/jpa_overview_pc.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_pc.xml?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -35,7 +35,7 @@\n         </see>\n     </indexterm>\n     <para>\n-JPA recognizes two types of persistent classes: <emphasis> entity</emphasis>\n+JPA recognizes two types of persistent classes: <emphasis>entity</emphasis>\n classes and <emphasis>embeddable</emphasis> classes. Each persistent instance of\n an entity class - each <emphasis>entity</emphasis> - represents a unique\n datastore record. You can use the <classname>EntityManager</classname> to find\n@@ -49,9 +49,9 @@ never returned directly from the <classname>EntityManager</classname> or from a\n <classname>Query</classname>.\n     </para>\n     <para>\n-Despite these differences, there are few differences between entity classes and\n-embeddable classes. In fact, writing either type of persistent class is little\n-different than writing any other class. There are no special parent classes to\n+Despite these differences, there are few distinctions between entity classes and\n+embeddable classes. In fact, writing either type of persistent class is a lot\n+like writing any other class. There are no special parent classes to\n extend from, field types to use, or methods to write. This is one important way\n in which JPA makes persistence transparent to you, the developer.\n     </para>\n@@ -73,43 +73,38 @@ package org.mag;\n  * Example persistent class.  Notice that it looks exactly like any other\n  * class.  JPA makes writing persistent classes completely transparent.\n  */\n-public class Magazine\n-{\n-    private String    isbn;\n-    private String    title;\n-    private Set       articles = new HashSet ();\n-    private Article   coverArticle;\n-    private int       copiesSold;\n-    private double    price;\n-    private Company   publisher;\n-    private int       version;\n+public class Magazine {\n \n-    protected Magazine ()\n-    {\n+    private String isbn;\n+    private String title;\n+    private Set articles = new HashSet();\n+    private Article coverArticle;\n+    private int copiesSold;\n+    private double price;\n+    private Company publisher;\n+    private int version;\n+\n+    protected Magazine() {\n     }\n \n-    public Magazine (String title, String isbn)\n-    {\n+    public Magazine(String title, String isbn) {\n         this.title = title;\n         this.isbn = isbn;\n     }\n \n-    public void publish (Company publisher, double price)\n-    {\n+    public void publish(Company publisher, double price) {\n         this.publisher = publisher;\n-        publisher.addMagazine (this);\n+        publisher.addMagazine(this);\n         this.price = price;\n     }\n     \n-    public void sell ()\n-    {\n+    public void sell() {\n         copiesSold++;\n-        publisher.addRevenue (price);\n+        publisher.addRevenue(price);\n     }\n \n-    public void addArticle (Article article)\n-    {\n-        articles.add (article);\n+    public void addArticle(Article article) {\n+        articles.add(article);\n     }\n \n     // rest of methods omitted\n@@ -210,7 +205,7 @@ are identity fields, because no two magazine records in the datastore can have\n the same <literal>isbn</literal> and <literal>title</literal> values.\n <xref linkend=\"jpa_overview_meta_id\"/> will show you how to denote your\n identity fields in JPA metadata. <xref linkend=\"jpa_overview_pc_identity\"/>\n- below examines persistent identity.\n+below examines persistent identity.\n             </para>\n             <note>\n                 <para>\n@@ -241,24 +236,24 @@ OpenJPA fully supports identity fields, but does not require them. See\n             </indexterm>\n             <para>\n The <literal>version</literal> field in our <classname>Magazine</classname>\n-class may seem out of place. JPA uses a version field in your entity to detect\n+class may seem out of place. JPA uses a version field in your entities to detect\n concurrent modifications to the same datastore record. When the JPA runtime\n detects an attempt to concurrently modify the same record, it throws an\n exception to the transaction attempting to commit last. This prevents\n overwriting the previous commit with stale data.\n             </para>\n             <para>\n-The version field is not required, but without one concurrent threads or\n+A version field is not required, but without one concurrent threads or\n processes might succeed in making conflicting changes to the same record at the\n same time. This is unacceptable to most applications.\n <xref linkend=\"jpa_overview_meta_version\"/> shows you how to designate a\n version field in JPA metadata.\n             </para>\n             <para>\n-The version field must be an integral type ( <classname> int</classname>,\n-<classname>Long</classname>, etc) or a <classname>java.sql.Timestamp</classname>\n-. You should consider version fields immutable. Changing the field value has\n-undefined results.\n+The version field must be an integral type (<classname> int</classname>,\n+<classname>Long</classname>, etc) or a <classname>\n+java.sql.Timestamp</classname>. You should consider version fields immutable. \n+Changing the field value has undefined results.\n             </para>\n             <note>\n                 <para>\n@@ -391,12 +386,12 @@ the field. JPA supports the following immutable types:\n             <itemizedlist>\n                 <listitem>\n                     <para>\n-All primitives ( <classname>int, float, byte</classname>, etc)\n+All primitives (<classname>int, float, byte</classname>, etc)\n                     </para>\n                 </listitem>\n                 <listitem>\n                     <para>\n-All primitive wrappers ( <classname>java.lang.Integer, java.lang.Float,\n+All primitive wrappers (<classname>java.lang.Integer, java.lang.Float,\n java.lang.Byte</classname>, etc)\n                     </para>\n                 </listitem>\n@@ -527,7 +522,7 @@ Embeddable types\n                 <listitem>\n                     <para>\n <classname>java.util.Map</classname>s in which each entry maps the value of one\n-of an entity's fields to that entity.\n+of a related entity's fields to that entity.\n                     </para>\n                 </listitem>\n             </itemizedlist>\n@@ -560,10 +555,9 @@ information on persisting serializable types.\n             </para>\n             <note>\n                 <para>\n-OpenJPA also supports arrays, <classname> java.lang.Number</classname>,\n-<classname> java.util.Locale</classname>, all JDK 1.2 <classname> Set\n-</classname>, <classname>List</classname>, and <classname> Map</classname>\n-types, collections and maps of immutable and embedded as well as entity types,\n+OpenJPA also supports arrays, <classname>java.lang.Number</classname>,\n+<classname>java.util.Locale</classname>, all JDK 1.2 <classname>Set</classname>,\n+<classname>List</classname>, and <classname>Map</classname> types, \n and many other mutable and immutable field types. OpenJPA also allows you to\n plug in support for custom types.\n                 </para>\n@@ -688,10 +682,10 @@ in the datastore. Each entity's identity field values must be unique among all\n other entites of the same type.\n         </para>\n         <para>\n-Identity fields must be primitives, primitive wrappers, <classname>String\n-</classname> s, <classname>Date</classname> s, <classname>Timestamp</classname>\n-s, or embeddable types. Notably, other entities instances can <emphasis>not\n-</emphasis> be used as identity fields.\n+Identity fields must be primitives, primitive wrappers, <classname>\n+String</classname>s, <classname>Date</classname>s, <classname>\n+Timestamp</classname>s, or embeddable types. Notably, other entities instances \n+can <emphasis>not</emphasis> be used as identity fields.\n         </para>\n         <note>\n             <para>\n@@ -726,7 +720,7 @@ as immutable objects in your applications.\n             </seealso>\n         </indexterm>\n If you are dealing with a single persistence context (see\n-<xref linkend=\"jpa_overview_emfactory_perscontext\"/> ), then you do not\n+<xref linkend=\"jpa_overview_emfactory_perscontext\"/>), then you do not\n have to compare identity fields to test whether two entity references represent\n the same state in the datastore. There is a much easier way: the <literal>==\n </literal> operator. JPA requires that each persistence context maintain only\n@@ -811,7 +805,7 @@ If the class is an inner class, it must be <literal>static</literal>.\n All entity classes related by inheritance must use the same identity class, or\n else each entity class must have its own identity class whose inheritance\n hierarchy mirrors the inheritance hierarchy of the owning entity classes (see\n-<xref linkend=\"jpa_overview_pc_identity_hierarchy\"/> ).\n+<xref linkend=\"jpa_overview_pc_identity_hierarchy\"/>).\n                     </para>\n                 </listitem>\n             </itemizedlist>\n@@ -835,8 +829,8 @@ identity fields.\n /**\n  * Persistent class using application identity.\n  */\n-public class Magazine\n-{\n+public class Magazine {\n+\n     private String isbn;    // identity field\n     private String title;   // identity field\n \n@@ -846,8 +840,8 @@ public class Magazine\n     /**\n      * Application identity class for Magazine.\n      */\n-    public static class MagazineId\n-    {\n+    public static class MagazineId {\n+\n         // each identity field in the Magazine class must have a\n         // corresponding field in the identity class\n         public String isbn;\n@@ -859,31 +853,28 @@ public class Magazine\n          * classes directly (some JPA implementations may subclass the\n          * identity class).\n          */\n-        public boolean equals (Object other)\n-        {\n+        public boolean equals(Object other) {\n             if (other == this)\n                 return true;\n             if (!(other instanceof MagazineId))\n                 return false;\n     \n             MagazineId mi = (MagazineId) other;\n             return (isbn == mi.isbn\n-                || (isbn != null &amp;&amp; isbn.equals (mi.isbn)))\n+                || (isbn != null &amp;&amp; isbn.equals(mi.isbn)))\n                 &amp;&amp; (title == mi.title\n-                || (title != null &amp;&amp; title.equals (mi.title)));\n+                || (title != null &amp;&amp; title.equals(mi.title)));\n         }\n      \n         /**\n          * Hashcode must also depend on identity values.\n          */\n-        public int hashCode ()\n-        {\n-            return ((isbn == null) ? 0 : isbn.hashCode ())\n-                ^ ((title == null) ? 0 : title.hashCode ());\n+        public int hashCode() {\n+            return ((isbn == null) ? 0 : isbn.hashCode())\n+                ^ ((title == null) ? 0 : title.hashCode());\n         } \n \n-        public String toString ()\n-        {\n+        public String toString() {\n             return isbn + \":\" + title;\n         }\n     }\n@@ -954,7 +945,7 @@ more identity fields.\n                     <listitem>\n                         <para>\n All subclasses of a concrete identity class must be <methodname>equals\n-</methodname> and <methodname> hashCode</methodname> -compatible with the\n+</methodname> and <methodname>hashCode</methodname>-compatible with the\n concrete superclass. This means that in our example, a <classname>ManagerId\n </classname> instance and a <classname>FullTimeEmployeeId</classname> instance\n with the same identity field values should have the same hash code, and should\n@@ -1106,8 +1097,8 @@ datastructure.\n <ulink url=\"http://java.sun.com/javaee/5/docs/api/javax/persistence/PreUpdate.html\">\n <classname>PreUpdate</classname></ulink>: Methods marked with this annotation\n will be invoked just the persistent values in your objects are flushed to the\n-datastore. This is equivalent to the XML element tag <literal>pre-update\n-</literal>.\n+datastore. This is equivalent to the XML element tag <literal>\n+pre-update</literal>.\n                     </para>\n                     <para>\n <classname>PreUpdate</classname> is the complement to <classname>PostLoad\n@@ -1131,8 +1122,7 @@ persistent fields with information cached in non-persistent data.\n <classname>PostUpdate</classname></ulink>: Methods marked with this annotation\n will be invoked after changes to a given instance have been stored to the\n datastore. This is useful for clearing stale data cached at the application\n-layer. This is equivalent to the XML element tag <literal>post-update</literal>\n-.\n+layer. This is equivalent to the XML element tag <literal>post-update</literal>.\n                     </para>\n                 </listitem>\n                 <listitem>\n@@ -1150,8 +1140,8 @@ layer. This is equivalent to the XML element tag <literal>post-update</literal>\n will be invoked before an object transactions to the deleted state. Access to\n persistent fields is valid within this method. You might use this method to\n cascade the deletion to related objects based on complex criteria, or to perform\n-other cleanup. This is equivalent to the XML element tag <literal>pre-remove\n-</literal>.\n+other cleanup. This is equivalent to the XML element tag <literal>\n+pre-remove</literal>.\n                     </para>\n                 </listitem>\n                 <listitem>\n@@ -1189,26 +1179,24 @@ Below is an example of how to declare callback methods on persistent classes:\n  * Example persistent class declaring our entity listener.\n  */\n @Entity\n-public class Magazine\n-{\n+public class Magazine {\n+\n     @Transient \n     private byte[][] data;\n \n     @ManyToMany\n     private List&lt;Photo&gt; photos;\n \n     @PostLoad\n-    public void convertPhotos ()\n-    {\n-        data = new byte[photos.size ()][];\n-        for (int i = 0; i &lt; photos.size (); i++)\n-            data[i] = photos.get (i).toByteArray ();\n+    public void convertPhotos() {\n+        data = new byte[photos.size()][];\n+        for (int i = 0; i &lt; photos.size(); i++)\n+            data[i] = photos.get(i).toByteArray();\n     }\n \n     @PreDelete\n-    public void logMagazineDeletion ()\n-    {\n-        getLog ().debug (\"deleting magazine containing\" + photos.size () \n+    public void logMagazineDeletion() {\n+        getLog().debug(\"deleting magazine containing\" + photos.size() \n             + \" photos.\");\n     }\n }\n@@ -1258,29 +1246,27 @@ classes.\n  */\n @Entity\n @EntityListeners({ MagazineLogger.class, ... })\n-public class Magazine\n-{\n+public class Magazine {\n+\n     // ... //\n }\n \n \n /**\n  * Example entity listener.\n  */\n-public class MagazineLogger\n-{\n+public class MagazineLogger {\n+\n     @PostPersist\n-    public void logAddition (Object pc)\n-    {\n+    public void logAddition(Object pc) {\n         getLog ().debug (\"Added new magazine:\" + ((Magazine) pc).getTitle ());\n     }\n \n \n     @PreRemove\n-    public void logDeletion (Object pc)\n-    {\n-        getLog ().debug (\"Removing from circulation:\" + \n-            ((Magazine) pc).getTitle ());\n+    public void logDeletion(Object pc) {\n+        getLog().debug(\"Removing from circulation:\" + \n+            ((Magazine) pc).getTitle());\n     }\n }\n </programlisting>"},{"sha":"910c855537db7cf55a526728ef82181c68145643","filename":"openjpa-project/src/doc/manual/jpa_overview_persistence.xml","status":"modified","additions":17,"deletions":18,"changes":35,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/jpa_overview_persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/jpa_overview_persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_persistence.xml?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -35,15 +35,14 @@\n         <imageobject>\n             <!-- PNG image data, 427 x 121 (see README) -->\n             <imagedata fileref=\"img/persistence.png\" width=\"285px\"/>\n-            \n         </imageobject>\n     </mediaobject>\n     <note>\n         <para>\n OpenJPA also includes the\n-<ulink url=\"../../api/openjpa/persistence/OpenJPAPersistence.html\"><classname>\n-OpenJPAPersistence</classname></ulink> helper class to provide additional\n-utility methods.\n+<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAPersistence.html\">\n+<classname>OpenJPAPersistence</classname></ulink> helper class to provide \n+additional utility methods.\n         </para>\n     </note>\n     <para>\n@@ -55,8 +54,8 @@ of a container, however, can use the\n EntityManagerFactory</classname> objects in a vendor-neutral fashion.\n     </para>\n <programlisting>\n-public static EntityManagerFactory createEntityManagerFactory (String name);\n-public static EntityManagerFactory createEntityManagerFactory (String name, Map props);\n+public static EntityManagerFactory createEntityManagerFactory(String name);\n+public static EntityManagerFactory createEntityManagerFactory(String name, Map props);\n </programlisting>\n     <para>\n Each <methodname>createEntityManagerFactory</methodname> method searches the\n@@ -67,8 +66,8 @@ factory.\n     </para>\n     <para>\n <filename>persistence.xml</filename> files define <classname>\n-EntityManagerFactories</classname>. The <methodname> createEntityManagerFactory\n-</methodname> methods search for <filename> persistence.xml</filename> files\n+EntityManagerFactories</classname>. The <methodname>createEntityManagerFactory\n+</methodname> methods search for <filename>persistence.xml</filename> files\n within the <filename>META-INF</filename> directory of any <literal>CLASSPATH\n </literal> element. For example, if your <literal>CLASSPATH</literal> contains\n the <filename>conf</filename> directory, you could place an <classname>\n@@ -120,9 +119,9 @@ name attribute is required.\n             </listitem>\n             <listitem>\n                 <para>\n-<literal>transaction-type</literal>: Whether to use managed ( <literal>JTA\n-</literal>) or local ( <literal>RESOURCE_LOCAL</literal>) transaction\n-management. Defaults to <literal>JTA</literal>.\n+<literal>transaction-type</literal>: Whether to use managed \n+(<literal>JTA</literal>) or local (<literal>RESOURCE_LOCAL</literal>) \n+transaction management.\n                 </para>\n             </listitem>\n             <listitem>\n@@ -144,7 +143,7 @@ OpenJPA.\n                 <para>\n <literal>jta-data-source</literal>: The JNDI name of a JDBC <classname>\n DataSource</classname> that is automatically enlisted in JTA transactions. This\n-may be an XA <classname> DataSource</classname>.\n+may be an XA <classname>DataSource</classname>.\n                 </para>\n             </listitem>\n             <listitem>\n@@ -155,22 +154,22 @@ DataSource</classname> that is not enlisted in JTA transactions.\n             </listitem>\n             <listitem>\n                 <para>\n-<literal>mapping-file</literal> *: The resource names of XML mapping files for\n+<literal>mapping-file</literal>*: The resource names of XML mapping files for\n entities and embeddable classes. You can also specify mapping information in an\n-<filename> orm.xml</filename> file in your <filename>META-INF</filename>\n+<filename>orm.xml</filename> file in your <filename>META-INF</filename>\n directory. If present, the <filename>orm.xml</filename> mapping file will be\n read automatically.\n                 </para>\n             </listitem>\n             <listitem>\n                 <para>\n-<literal>jar-file</literal> *: The names of jar files containing entities and\n+<literal>jar-file</literal>*: The names of jar files containing entities and\n embeddable classes. The implementation will scan the jar for annotated classes.\n                 </para>\n             </listitem>\n             <listitem>\n                 <para>\n-<literal>class</literal> *: The class names of entities and embeddable classes.\n+<literal>class</literal>*: The class names of entities and embeddable classes.\n                 </para>\n             </listitem>\n             <listitem>\n@@ -234,11 +233,11 @@ EntityManagerFactories</classname> are typically injected.\n <programlisting>\n // if your persistence.xml file does not contain all settings already, you\n // can add vendor settings to a map \n-Properties props = new Properties ();\n+Properties props = new Properties();\n ...\n \n // create the factory defined by the \"openjpa\" entity-manager entry\n-EntityManagerFactory emf = Persistence.createEntityManagerFactory (\"openjpa\", props);\n+EntityManagerFactory emf = Persistence.createEntityManagerFactory(\"openjpa\", props);\n </programlisting>\n         </example>\n     </section>"},{"sha":"894995ce4868d9318b4bdd28004423866fbee584","filename":"openjpa-project/src/doc/manual/jpa_overview_query.xml","status":"modified","additions":366,"deletions":366,"changes":732,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/jpa_overview_query.xml","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/jpa_overview_query.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_query.xml?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -51,7 +51,7 @@ The preceding is a simple JPQL query for all <classname>Magazine</classname>\n entities.\n             </para>\n <programlisting>\n-public Query createQuery (String jpql);\n+public Query createQuery(String jpql);\n </programlisting>\n             <para>\n The\n@@ -60,7 +60,7 @@ The\n <classname>Query</classname> instance from a given JPQL string.\n             </para>\n <programlisting>\n-public List getResultList ();\n+public List getResultList();\n </programlisting>\n             <para>\n Invoking\n@@ -71,8 +71,8 @@ following example executes our <classname>Magazine</classname> query above:\n             </para>\n <programlisting>\n EntityManager em = ...\n-Query q = em.createQuery (\"SELECT x FROM Magazine x\");\n-List&lt;Magazine&gt; results = q.getResultList ();\n+Query q = em.createQuery(\"SELECT x FROM Magazine x\");\n+List&lt;Magazine&gt; results = (List&lt;Magazine&gt;) q.getResultList();\n </programlisting>\n             <para>\n A JPQL query has an internal namespace declared in the <literal>from</literal>\n@@ -105,20 +105,17 @@ OBJECT(x)</literal> are synonymous.\n The optional <literal>where</literal> clause places criteria on matching\n results. For example:\n             </para>\n-<programlisting>SELECT x FROM Magazine x WHERE x.title = 'JDJ'\n-</programlisting>\n+<programlisting>SELECT x FROM Magazine x WHERE x.title = 'JDJ'</programlisting>\n             <para>\n Keywords in JPQL expressions are case-insensitive, but entity, identifier, and\n member names are not. For example, the expression above could also be expressed\n as:\n             </para>\n-<programlisting>SELECT x FROM Magazine x WHERE x.title = 'JDJ'\n-</programlisting>\n+<programlisting>SELECT x FROM Magazine x WHERE x.title = 'JDJ'</programlisting>\n             <para>\n But it could not be expressed as:\n             </para>\n-<programlisting>SELECT x FROM Magazine x WHERE x.TITLE = 'JDJ'\n-</programlisting>\n+<programlisting>SELECT x FROM Magazine x WHERE x.TITLE = 'JDJ'</programlisting>\n             <para>\n As with the <literal>select</literal> clause, alias names in the <literal>where\n </literal> clause are resolved to the entity declared in the <literal>from\n@@ -568,8 +565,7 @@ example, the following query may return instances of <classname> Magazine\n </classname> instances, where <classname>Tabloid</classname> and <classname>\n Digest</classname> are <classname>Magazine</classname> subclasses.\n             </para>\n-<programlisting>SELECT x FROM Magazine x WHERE x.price &lt; 5\n-</programlisting>\n+<programlisting>SELECT x FROM Magazine x WHERE x.price &lt; 5</programlisting>\n         </section>\n         <section id=\"jpa_overview_query_params\">\n             <title>\n@@ -594,17 +590,17 @@ instance for optional method chaining.\n             </para>\n <programlisting>\n EntityManager em = ...\n-Query q = em.createQuery (\"SELECT x FROM Magazine x WHERE x.title = ?1 and x.price &gt; ?2\");\n-q.setParameter (1, \"JDJ\").setParameter (2, 5.0);\n-List&lt;Magazine&gt; results = q.getResultList ();\n+Query q = em.createQuery(\"SELECT x FROM Magazine x WHERE x.title = ?1 and x.price &gt; ?2\");\n+q.setParameter(1, \"JDJ\").setParameter(2, 5.0);\n+List&lt;Magazine&gt; results = (List&lt;Magazine&gt;) q.getResultList();\n </programlisting>\n             <para>\n This code will substitute <literal>JDJ</literal> for the <literal>?1</literal>\n parameter and <literal>5.0</literal> for the <literal>?2</literal> parameter,\n then execute the query with those values.\n             </para>\n <programlisting>\n-public Query setParameter (String name, Object value);\n+public Query setParameter(String name, Object value);\n </programlisting>\n             <para>\n Named parameter are denoted by prefixing an arbitrary name with a colon in your\n@@ -615,9 +611,9 @@ method chaining.\n             </para>\n <programlisting>\n EntityManager em = ...\n-Query q = em.createQuery (\"SELECT x FROM Magazine x WHERE x.title = :titleParam and x.price &gt; :priceParam\");\n-q.setParameter (\"titleParam\", \"JDJ\").setParameter (\"priceParam\", 5.0);\n-List&lt;Magazine&gt; results = q.getResultList ();\n+Query q = em.createQuery(\"SELECT x FROM Magazine x WHERE x.title = :titleParam and x.price &gt; :priceParam\");\n+q.setParameter(\"titleParam\", \"JDJ\").setParameter(\"priceParam\", 5.0);\n+List&lt;Magazine&gt; results = (List&lt;Magazine&gt;) q.getResultList();\n </programlisting>\n             <para>\n This code substitutes <literal>JDJ</literal> for the <literal> :titleParam\n@@ -663,17 +659,17 @@ magazines:\n             </para>\n <programlisting>\n EntityManager em = ...\n-Query q = em.createQuery (\"SELECT AVG(x.price) FROM Magazine x\");\n-Number result = (Number) q.getSingleResult ();\n+Query q = em.createQuery(\"SELECT AVG(x.price) FROM Magazine x\");\n+Number result = (Number) q.getSingleResult();\n </programlisting>\n             <para>\n The following query will return the highest price of all the magazines titled\n \"JDJ\":\n             </para>\n <programlisting>\n EntityManager em = ...\n-Query q = em.createQuery (\"SELECT MAX(x.price) FROM Magazine x WHERE x.title = 'JDJ'\");\n-Number result = (Number) q.getSingleResult ();\n+Query q = em.createQuery(\"SELECT MAX(x.price) FROM Magazine x WHERE x.title = 'JDJ'\");\n+Number result = (Number) q.getSingleResult();\n </programlisting>\n         </section>\n         <section id=\"jpa_overview_query_named\">\n@@ -692,8 +688,7 @@ Query templates can be statically declared using the <literal> NamedQuery\n     @NamedQuery(name=\"magsByTitle\",\n         query=\"SELECT x FROM Magazine x WHERE x.title = :titleParam\")\n })\n-public class Magazine\n-{\n+public class Magazine {\n     ...\n }\n </programlisting>\n@@ -702,23 +697,23 @@ These declarations will define two named queries called <literal>magsOverPrice\n </literal> and <literal>magsByTitle</literal>.\n             </para>\n <programlisting>\n-public Query createNamedQuery (String name);\n+public Query createNamedQuery(String name);\n </programlisting>\n             <para>\n You retrieve named queries with the above <classname>EntityManager</classname>\n method. For example:\n             </para>\n <programlisting>\n EntityManager em = ...\n-Query q = em.createNamedQuery (\"magsOverPrice\");\n-q.setParameter (1, 5.0f);\n-List&lt;Magazine&gt; results = q.getResultList ();\n+Query q = em.createNamedQuery(\"magsOverPrice\");\n+q.setParameter(1, 5.0f);\n+List&lt;Magazine&gt; results = q.getResultList();\n </programlisting>\n <programlisting>\n EntityManager em = ...\n-Query q = em.createNamedQuery (\"magsByTitle\");\n-q.setParameter (\"titleParam\", \"JDJ\");\n-List&lt;Magazine&gt; results = q.getResultList ();\n+Query q = em.createNamedQuery(\"magsByTitle\");\n+q.setParameter(\"titleParam\", \"JDJ\");\n+List&lt;Magazine&gt; results = q.getResultList();\n </programlisting>\n         </section>\n         <section id=\"jpa_overview_query_delete\">\n@@ -738,7 +733,7 @@ the <literal>select</literal> keyword. To then execute the delete, you call the\n following <classname>Query</classname> method:\n             </para>\n <programlisting>\n-public int executeUpdate ();\n+public int executeUpdate();\n </programlisting>\n             <para>\n This method returns the number of objects deleted. The following example deletes\n@@ -749,9 +744,9 @@ all subscriptions whose expiration date has passed.\n                     Delete by Query\n                 </title>\n <programlisting>\n-Query q = em.createQuery (\"DELETE s FROM Subscription s WHERE s.subscriptionDate &lt; :today\");\n-q.setParameter (\"today\", new Date ());\n-int deleted = q.executeUpdate ();\n+Query q = em.createQuery(\"DELETE s FROM Subscription s WHERE s.subscriptionDate &lt; :today\");\n+q.setParameter(\"today\", new Date());\n+int deleted = q.executeUpdate();\n </programlisting>\n             </example>\n         </section>\n@@ -773,7 +768,7 @@ query string begins with the <literal>update</literal> keyword instead of\n <classname>Query</classname> method:\n             </para>\n <programlisting>\n-public int executeUpdate ();\n+public int executeUpdate();\n </programlisting>\n             <para>\n This method returns the number of objects updated. The following example updates\n@@ -785,10 +780,10 @@ to true..\n                     Update by Query\n                 </title>\n <programlisting>\n-Query q = em.createQuery (\"UPDATE Subscription s SET s.paid = :paid WHERE s.subscriptionDate &lt; :today\");\n-q.setParameter (\"today\", new Date ());\n-q.setParameter (\"paid\", true);\n-int updated = q.executeUpdate ();\n+Query q = em.createQuery(\"UPDATE Subscription s SET s.paid = :paid WHERE s.subscriptionDate &lt; :today\");\n+q.setParameter(\"today\", new Date());\n+q.setParameter(\"paid\", true);\n+int updated = q.executeUpdate();\n </programlisting>\n             </example>\n         </section>\n@@ -806,11 +801,14 @@ query language, <literal>EJB QL</literal>, adding operations such as bulk\n deletes and updates, join operations, aggregates, projections, and subqueries.\n Furthermore, JPQL queries can be declared statically in metadata, or can be\n dynamically built in code. This chapter provides the full definition of the\n-language. <note><para> Much of this section is paraphrased or taken directly\n-from Chapter 4 of the JSR 220 specification.\n-                </para>\n-            </note>\n+language.\n         </para>\n+        <note>\n+            <para> \n+Much of this section is paraphrased or taken directly from Chapter 4 of the \n+JSR 220 specification.\n+            </para>\n+        </note>\n         <section id=\"jpa_langref_stmnttypes\">\n             <title>\n                 JPQL Statement Types\n@@ -820,100 +818,82 @@ A JPQL statement may be either a <literal>SELECT</literal> statement, an\n <literal>UPDATE</literal> statement, or a <literal>DELETE</literal> statement.\n This chapter refers to all such statements as \"queries\". Where it is important\n to distinguish among statement types, the specific statement type is referenced.\n-In BNF syntax, a query language statement is defined as: <itemizedlist>\n-<listitem><para>QL_statement ::= select_statement | update_statement |\n-delete_statement\n-                        </para>\n-                    </listitem>\n-                </itemizedlist>\n-                \n-\n-    The complete BNF for JPQL is defined in \n-                <xref linkend=\"jpa_langref_bnf\"/>\n-                \n-                .\n-\n-    Any JPQL statement may be constructed\n-    dynamically or may be statically defined in a metadata annotation or\n-    XML descriptor element. All statement types may have parameters, as\n-    discussed in \n-                <xref linkend=\"jpa_langref_input_params\"/>\n-                \n-                .\n-\n-    \n+In BNF syntax, a query language statement is defined as: \n+            </para>\n+            <itemizedlist>\n+                <listitem>\n+                    <para>\n+QL_statement ::= select_statement | update_statement | delete_statement\n+                    </para>\n+                </listitem>\n+            </itemizedlist>\n+            <para> \n+The complete BNF for JPQL is defined in <xref linkend=\"jpa_langref_bnf\"/>.\n+Any JPQL statement may be constructed dynamically or may be statically defined \n+in a metadata annotation or XML descriptor element. All statement types may \n+have parameters, as discussed in <xref linkend=\"jpa_langref_input_params\"/>.\n             </para>\n             <section id=\"jpa_langref_select\">\n                 <title>\n                     JPQL Select Statement\n                 </title>\n                 <para>\n A select statement is a string which consists of the following clauses:\n-<itemizedlist><listitem><para> a <literal>SELECT</literal> clause, which\n-determines the type of the objects or values to be selected.\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                </para>\n+                <itemizedlist>\n+                    <listitem>\n+                        <para> \n+a <literal>SELECT</literal> clause, which determines the type of the objects \n+or values to be selected.\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n a <literal>FROM</literal> clause, which provides declarations that designate the\n domain to which the expressions specified in the other clauses of the query\n apply.\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n an optional <literal>WHERE</literal> clause, which may be used to restrict the\n results that are returned by the query.\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n an optional <literal>GROUP BY</literal> clause, which allows query results to be\n aggregated in terms of groups.\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n an optional <literal>HAVING</literal> clause, which allows filtering over\n aggregated groups.\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n an optional <literal>ORDER BY</literal> clause, which may be used to order the\n results that are returned by the query.\n-                            </para>\n-                        </listitem>\n-                    </itemizedlist>\n-                    \n-\n-      In BNF syntax, a select statement is defined as:\n-\n-                    <itemizedlist>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                </itemizedlist>\n+                <para>\n+In BNF syntax, a select statement is defined as:\n+                </para>\n+                <itemizedlist>\n+                    <listitem>\n+                        <para>\n select_statement ::= select_clause from_clause [where_clause] [groupby_clause]\n [having_clause] [orderby_clause]\n-                            </para>\n-                        </listitem>\n-                    </itemizedlist>\n-                    \n-\n-\n-      A select statement\n-      must always have a \n-                    <literal>\n-                        SELECT\n-                    </literal>\n-                    \n-      and a \n-                    <literal>\n-                        FROM\n-                    </literal>\n-                     clause. The square brackets []\n-      indicate that the other clauses are optional.\n-\n-      \n+                        </para>\n+                    </listitem>\n+                </itemizedlist>\n+                <para>    \n+A select statement must always have a <literal>SELECT</literal> and a \n+<literal>FROM</literal> clause. The square brackets [] indicate that the other \n+clauses are optional.\n                 </para>\n             </section>\n             <section id=\"jpa_langref_bulk\">\n@@ -922,32 +902,25 @@ select_statement ::= select_clause from_clause [where_clause] [groupby_clause]\n                 </title>\n                 <para>\n Update and delete statements provide bulk operations over sets of entities. In\n-BNF syntax, these operations are defined as: <itemizedlist><listitem><para>\n+BNF syntax, these operations are defined as: \n+                </para>\n+                <itemizedlist>\n+                    <listitem>\n+                        <para>\n update_statement ::= update_clause [where_clause]\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n delete_statement ::= delete_clause [where_clause]\n-                            </para>\n-                        </listitem>\n-                    </itemizedlist>\n-                    \n-\n-      The update and delete clauses determine\n-      the type of the entities to be updated or deleted.\n-      The \n-                    <literal>\n-                        WHERE\n-                    </literal>\n-                     clause may\n-      be used to restrict the scope of the update or delete operation. Update\n-      and delete statements are described further in\n-      \n-                    <xref linkend=\"jpa_langref_bulk_ops\"/>\n-                    \n-                    .\n-      \n+                        </para>\n+                    </listitem>\n+                </itemizedlist>\n+                <para> \n+The update and delete clauses determine the type of the entities to be updated \n+or deleted.  The <literal>WHERE</literal> clause may be used to restrict the \n+scope of the update or delete operation. Update and delete statements are \n+described further in <xref linkend=\"jpa_langref_bulk_ops\"/>.\n                 </para>\n             </section>\n         </section>\n@@ -966,14 +939,19 @@ language annotations or in the XML descriptor.\n             </para>\n             <para>\n Informally, the abstract schema type of an entity can be characterized as\n-follows: <itemizedlist><listitem><para> For every persistent field or get\n+follows: \n+            </para>\n+            <itemizedlist>\n+                <listitem>\n+                    <para> \n+For every persistent field or get\n accessor method (for a persistent property) of the entity class, there is a\n field (\"state-field\") whose abstract schema type corresponds to that of the\n field or the result type of the accessor method.\n-                        </para>\n-                    </listitem>\n-                    <listitem>\n-                        <para>\n+                    </para>\n+                </listitem>\n+                <listitem>\n+                    <para>\n For every persistent relationship field or get accessor method (for a persistent\n relationship property) of the entity class, there is a field\n (\"association-field\") whose type is the abstract schema type of the related\n@@ -987,10 +965,9 @@ entity on which it is based. The association-fields of an entity's abstract\n schema type determine navigability. Using the association-fields and their\n values, a query can select related entities and use their abstract schema types\n in the query.\n-                        </para>\n-                    </listitem>\n-                </itemizedlist>\n-            </para>\n+                    </para>\n+                </listitem>\n+            </itemizedlist>\n             <section id=\"jpa_langref_schemanaming\">\n                 <title>\n                     JPQL Entity Naming\n@@ -1025,27 +1002,35 @@ in a one-to-one relationship.\n Queries to select magazines can be defined by navigating over the\n association-fields and state-fields defined by Magazine and Author. A query to\n find all magazines that have unpublished articles is as follows:\n-<programlisting>SELECT DISTINCT mag FROM Magazine AS mag JOIN mag.articles AS art WHERE art.published = FALSE\n-</programlisting> This query navigates over the association-field authors of the\n+                </para>\n+<programlisting>\n+SELECT DISTINCT mag FROM Magazine AS mag JOIN mag.articles AS art WHERE art.published = FALSE\n+</programlisting> \n+                <para>\n+This query navigates over the association-field authors of the\n abstract schema type <literal>Magazine</literal> to find articles, and uses the\n state-field <literal>published</literal> of <literal>Article</literal> to select\n those magazines that have at least one article that is published. Although\n predefined reserved identifiers, such as <literal>DISTINCT</literal>, <literal>\n-FROM</literal>, <literal>AS</literal>, <literal>JOIN</literal>, <literal>WHERE\n-</literal>, and <literal>FALSE</literal> appear in upper case in this example,\n-predefined reserved identifiers are case insensitive. The <literal>SELECT\n-</literal> clause of this example designates the return type of this query to be\n-of type Magazine. Because the same persistence unit defines the abstract\n-persistence schemas of the related entities, the developer can also specify a\n-query over <literal>articles</literal> that utilizes the abstract schema type\n-for products, and hence the state-fields and association-fields of both the\n-abstract schema types Magazine and Author. For example, if the abstract schema\n-type Author has a state-field named firstName, a query over articles can be\n-specified using this state-field. Such a query might be to find all magazines\n-that have articles authored by someone with the first name \"John\".\n-<programlisting>SELECT DISTINCT mag FROM Magazine mag\n-    JOIN mag.articles art JOIN art.author auth WHERE auth.firstName = 'John'\n-</programlisting> Because Magazine is related to Author by means of the\n+FROM</literal>, <literal>AS</literal>, <literal>JOIN</literal>, <literal>\n+WHERE</literal>, and <literal>FALSE</literal> appear in upper case in this \n+example, predefined reserved identifiers are case insensitive. The <literal>\n+SELECT</literal> clause of this example designates the return type of this \n+query to be of type Magazine. Because the same persistence unit defines the \n+abstract persistence schemas of the related entities, the developer can also \n+specify a query over <literal>articles</literal> that utilizes the abstract \n+schema type for products, and hence the state-fields and association-fields of \n+both the abstract schema types Magazine and Author. For example, if the \n+abstract schema type Author has a state-field named firstName, a query over \n+articles can be specified using this state-field. Such a query might be to \n+find all magazines that have articles authored by someone with the first name \n+\"John\".\n+                </para>\n+<programlisting>\n+SELECT DISTINCT mag FROM Magazine mag JOIN mag.articles art JOIN art.author auth WHERE auth.firstName = 'John'\n+</programlisting> \n+                <para>\n+Because Magazine is related to Author by means of the\n relationships between Magazine and Article and between Article and Author,\n navigation using the association-fields authors and product is used to express\n the query. This query is specified by using the abstract schema name Magazine,\n@@ -1068,52 +1053,52 @@ instances of a particular entity abstract schema type. The <literal>FROM\n </literal> clause can contain multiple identification variable declarations\n separated by a comma (,).\n             </para>\n-            <para>\n-<itemizedlist><listitem><para>from_clause ::= FROM\n-identification_variable_declaration {, {identification_variable_declaration |\n-collection_member_declaration}}*\n-                        </para>\n-                    </listitem>\n-                    <listitem>\n-                        <para>\n+            <itemizedlist>\n+                <listitem>\n+                    <para>\n+from_clause ::= FROM identification_variable_declaration {, \n+{identification_variable_declaration | collection_member_declaration}}*\n+                    </para>\n+                </listitem>\n+                <listitem>\n+                    <para>\n identification_variable_declaration ::= range_variable_declaration { join |\n fetch_join }*\n-                        </para>\n-                    </listitem>\n-                    <listitem>\n-                        <para>\n+                    </para>\n+                </listitem>\n+                <listitem>\n+                    <para>\n range_variable_declaration ::= abstract_schema_name [AS] identification_variable\n-                        </para>\n-                    </listitem>\n-                    <listitem>\n-                        <para>\n+                    </para>\n+                </listitem>\n+                <listitem>\n+                    <para>\n join ::= join_spec join_association_path_expression [AS] identification_variable\n-                        </para>\n-                    </listitem>\n-                    <listitem>\n-                        <para>\n+                    </para>\n+                </listitem>\n+                <listitem>\n+                    <para>\n fetch_join ::= join_spec FETCH join_association_path_expression\n-                        </para>\n-                    </listitem>\n-                    <listitem>\n-                        <para>\n+                    </para>\n+                </listitem>\n+                <listitem>\n+                    <para>\n join_association_path_expression ::= join_collection_valued_path_expression |\n join_single_valued_association_path_expression\n-                        </para>\n-                    </listitem>\n-                    <listitem>\n-                        <para>\n+                    </para>\n+                </listitem>\n+                <listitem>\n+                    <para>\n join_spec ::= [ LEFT [OUTER] | INNER ] JOIN\n                         </para>\n                     </listitem>\n                     <listitem>\n                         <para>\n collection_member_declaration ::= IN (collection_valued_path_expression) [AS]\n identification_variable\n-                        </para>\n-                    </listitem>\n-                </itemizedlist>\n-            </para>\n+                    </para>\n+                </listitem>\n+            </itemizedlist>\n             <section id=\"jpa_langref_from_identifiers\">\n                 <title>\n                     JPQL FROM Identifiers\n@@ -1128,157 +1113,161 @@ This includes the underscore (_) character and the dollar sign ($) character. An\n identifier part character is any character for which the method <methodname>\n Character.isJavaIdentifierPart</methodname> returns <literal>true</literal>.\n The question mark (?) character is reserved for use by the Java Persistence\n-query language. The following are reserved identifiers: <itemizedlist>\n-<listitem><para><literal>SELECT</literal>\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+query language. The following are reserved identifiers:\n+                </para>\n+                <itemizedlist>\n+                    <listitem>\n+                        <para>\n+                        <literal>SELECT</literal>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n <literal>FROM</literal>\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n <literal>WHERE</literal>\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n <literal>UPDATE</literal>\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n <literal>DELETE</literal>\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n <literal>JOIN</literal>\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n <literal>OUTER</literal>\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n <literal>INNER</literal>\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n <literal>LEFT</literal>\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n <literal>GROUP</literal>\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n <literal>BY</literal>\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n <literal>HAVING</literal>\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n <literal>FETCH</literal>\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n <literal>DISTINCT</literal>\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n <literal>OBJECT</literal>\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n <literal>NULL</literal>\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n <literal>TRUE</literal>\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n <literal>FALSE</literal>\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n <literal>NOT</literal>\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n <literal>AND</literal>\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n <literal>OR</literal>\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n <literal>BETWEEN</literal>\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n <literal>LIKE</literal>\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n <literal>IN</literal>\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n <literal>AS</literal>\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n <literal>UNKNOWN</literal>\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n <literal>EMPTY</literal>\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n <literal>MEMBER</literal>\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n <literal>OF</literal>\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n <literal>IS</literal>\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n <literal>AVG</literal>\n                             </para>\n                         </listitem>\n@@ -1400,18 +1389,14 @@ query language. The following are reserved identifiers: <itemizedlist>\n                         <listitem>\n                             <para>\n <literal>SOME</literal>\n-                            </para>\n-                        </listitem>\n-                    </itemizedlist>\n-                    \n-\n-      Reserved identifiers are\n-      case insensitive. Reserved identifiers must not be used as identification\n-      variables. It is recommended that other SQL reserved words also not\n-      be as identification variables in queries because they may be used as\n-      reserved identifiers in future releases of the specification.  \n-\n-      \n+                        </para>\n+                    </listitem>\n+                </itemizedlist>\n+                <para>    \n+Reserved identifiers are case insensitive. Reserved identifiers must not be \n+used as identification variables. It is recommended that other SQL reserved \n+words also not be as identification variables in queries because they may be \n+used as reserved identifiers in future releases of the specification.  \n                 </para>\n             </section>\n             <section id=\"jpa_langref_from_vars\">\n@@ -1453,13 +1438,16 @@ preceding identification variable declaration of the query string.\n                 </title>\n                 <para>\n The syntax for declaring an identification variable as a range variable is\n-similar to that of SQL; optionally, it uses the AS keyword. <itemizedlist>\n-<listitem><para>range_variable_declaration ::= abstract_schema_name [AS]\n-identification_variable\n-                            </para>\n-                        </listitem>\n-                    </itemizedlist>\n+similar to that of SQL; optionally, it uses the AS keyword. \n                 </para>\n+                <itemizedlist>\n+                    <listitem>\n+                        <para>\n+range_variable_declaration ::= abstract_schema_name [AS]\n+identification_variable\n+                        </para>\n+                    </listitem>\n+                </itemizedlist>\n                 <para>\n Range variable declarations allow the developer to designate a \"root\" for\n objects which may not be reachable by navigation. In order to select values by\n@@ -1473,10 +1461,12 @@ magazines published by \"Adventure\" publishers. This example illustrates the use\n of two different identification variables in the <literal>FROM</literal> clause,\n both of the abstract schema type Magazine. The <literal>SELECT</literal> clause\n of this query determines that it is the magazines with prices greater than those\n-of \"Adventure\" publisher's that are returned. <programlisting>SELECT DISTINCT mag1 FROM Magazine mag1, Magazine mag2\n+of \"Adventure\" publisher's that are returned. \n+                </para>\n+<programlisting>\n+SELECT DISTINCT mag1 FROM Magazine mag1, Magazine mag2\n WHERE mag1.price &gt; mag2.price AND mag2.publisher.name = 'Adventure'\n </programlisting>\n-                </para>\n             </section>\n             <section id=\"jpa_langref_path\">\n                 <title>\n@@ -1497,9 +1487,11 @@ considered to have no value, and does not participate in the determination of\n the result. The syntax for single-valued path expressions and collection valued\n path expressions is as follows:\n                 </para>\n-                <para>\n-<itemizedlist><listitem><para>single_valued_path_expression ::=\n-state_field_path_expression | single_valued_association_path_expression\n+                <itemizedlist>\n+                    <listitem>\n+                        <para>\n+single_valued_path_expression ::= state_field_path_expression | \n+single_valued_association_path_expression\n                             </para>\n                         </listitem>\n                         <listitem>\n@@ -1523,10 +1515,9 @@ identification_variable.{single_valued_association_field.}*collection_valued_ass\n                         <listitem>\n                             <para>\n state_field ::= {embedded_class_state_field.}*simple_state_field\n-                            </para>\n-                        </listitem>\n-                    </itemizedlist>\n-                </para>\n+                        </para>\n+                    </listitem>\n+                </itemizedlist>\n                 <para>\n A single_valued_association_field is designated by the name of an\n association-field in a one-to-one or many-to-one relationship. The type of a\n@@ -1569,13 +1560,14 @@ the <literal>FROM</literal> clause and a join condition in the <literal>WHERE\n                 <para>\n The syntax for explicit join operations is as follows:\n                 </para>\n-                <para>\n-<itemizedlist><listitem><para>join ::= join_spec\n-join_association_path_expression [AS] identification_variable\n-                            </para>\n-                        </listitem>\n-                        <listitem>\n-                            <para>\n+                <itemizedlist>\n+                    <listitem>\n+                        <para>\n+join ::= join_spec join_association_path_expression [AS] identification_variable\n+                        </para>\n+                    </listitem>\n+                    <listitem>\n+                        <para>\n fetch_join ::= join_spec FETCH join_association_path_expression\n                             </para>\n                         </listitem>\n@@ -1588,10 +1580,9 @@ join_single_valued_association_path_expression\n                         <listitem>\n                             <para>\n join_spec ::= [ LEFT [OUTER] | INNER ] JOIN\n-                            </para>\n-                        </listitem>\n-                    </itemizedlist>\n-                </para>\n+                        </para>\n+                    </listitem>\n+                </itemizedlist>\n                 <para>\n The following inner and outer join operation types are supported.\n                 </para>\n@@ -1604,16 +1595,25 @@ The syntax for the inner join operation is <programlisting>\n [ INNER ] JOIN join_association_path_expression [AS] identification_variable\n </programlisting> For example, the query below joins over the relationship\n between publishers and magazines. This type of join typically equates to a join\n-over a foreign key relationship in the database. <programlisting>SELECT pub FROM Publisher pub JOIN pub.magazines mag WHERE pub.revenue &gt; 1000000\n+over a foreign key relationship in the database. \n+                    </para>\n+<programlisting>\n+SELECT pub FROM Publisher pub JOIN pub.magazines mag WHERE pub.revenue &gt; 1000000\n </programlisting>\n+                    <para>\n+The keyword <literal>INNER</literal> may optionally be used: \n                     </para>\n+<programlisting>\n+SELECT pub FROM Publisher pub INNER JOIN pub.magazines mag WHERE pub.revenue &gt; 1000000\n+</programlisting> \n                     <para>\n-The keyword <literal>INNER</literal> may optionally be used: <programlisting>SELECT pub FROM Publisher pub INNER JOIN pub.magazines mag WHERE pub.revenue &gt; 1000000\n-</programlisting> This is equivalent to the following query using the earlier\n+This is equivalent to the following query using the earlier\n <literal>IN</literal> construct. It selects those publishers with revenue of\n-over 1 million for which at least one magazine exists: <programlisting>SELECT OBJECT(pub) FROM Publisher pub, IN(pub.magazines) mag WHERE pub.revenue &gt; 1000000\n-</programlisting>\n+over 1 million for which at least one magazine exists: \n                     </para>\n+<programlisting>\n+SELECT OBJECT(pub) FROM Publisher pub, IN(pub.magazines) mag WHERE pub.revenue &gt; 1000000\n+</programlisting>\n                 </section>\n                 <section id=\"jpa_langref_outer_joins\">\n                     <title>"},{"sha":"abe99278e9878447d6d83939cc9fbffb2c80ed54","filename":"openjpa-project/src/doc/manual/jpa_overview_sqlquery.xml","status":"modified","additions":11,"deletions":12,"changes":23,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/jpa_overview_sqlquery.xml","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/jpa_overview_sqlquery.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_sqlquery.xml?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -81,8 +81,8 @@ The <classname>EntityManager</classname> has two factory methods suitable for\n creating SQL queries:\n         </para>\n <programlisting>\n-public Query createNativeQuery (String sqlString, Class resultClass);\n-public Query createNativeQuery (String sqlString, String resultSetMapping);\n+public Query createNativeQuery(String sqlString, Class resultClass);\n+public Query createNativeQuery(String sqlString, String resultSetMapping);\n </programlisting>\n         <para>\n The first method is used to create a new <classname>Query</classname> instance\n@@ -99,8 +99,8 @@ action.\n             </title>\n <programlisting>\n EntityManager em = ...;\n-Query query = em.createNativeQuery (\"SELECT * FROM MAG\", Magazine.class);\n-processMagazines (query.getResultList ());\n+Query query = em.createNativeQuery(\"SELECT * FROM MAG\", Magazine.class);\n+processMagazines(query.getResultList());\n </programlisting>\n         </example>\n         <note>\n@@ -182,19 +182,18 @@ simple mapping between a class and the database:\n             <imageobject>\n                 <!-- PNG image data, 320 x 149 (see README) -->\n                 <imagedata fileref=\"img/sqlquery-featureSelection.png\" width=\"213px\"/>\n-                \n             </imageobject>\n         </mediaobject>\n         <example id=\"jpa_overview_sqlquery_objex\">\n             <title>\n                 Retrieving Persistent Objects\n             </title>\n <programlisting>\n-Query query = em.createNativeQuery (\"SELECT ISBN, TITLE, PRICE, \"\n+Query query = em.createNativeQuery(\"SELECT ISBN, TITLE, PRICE, \"\n     + \"VERS FROM MAG WHERE PRICE &gt; 5 AND PRICE &lt; 10\", Magazine.class);\n-List&lt;Magazine&gt; results = query.getResultList ();\n+List&lt;Magazine&gt; results = (List&lt;Magazine&gt;) query.getResultList();\n for (Magazine mag : results)\n-    processMagazine (mag);\n+    processMagazine(mag);\n </programlisting>\n         </example>\n         <para>\n@@ -207,13 +206,13 @@ magazines in any price range:\n                 SQL Query Parameters\n             </title>\n <programlisting>\n-Query query = em.createNativeQuery (\"SELECT ISBN, TITLE, PRICE, \"\n+Query query = em.createNativeQuery(\"SELECT ISBN, TITLE, PRICE, \"\n     + \"VERS FROM MAG WHERE PRICE &gt; ?1 AND PRICE &lt; ?2\", Magazine.class);\n \n-query.setParameter (1, 5d);\n-query.setParameter (2, 10d);\n+query.setParameter(1, 5d);\n+query.setParameter(2, 10d);\n \n-List&lt;Magazine&gt; results = query.getResultList ();\n+List&lt;Magazine&gt; results = (List&lt;Magazine&gt;) query.getResultList();\n for (Magazine mag : results)\n     processMagazine (mag);\n </programlisting>"},{"sha":"984378dbf234cf29c3e2d1e26741f63b0588a3b3","filename":"openjpa-project/src/doc/manual/jpa_overview_trans.xml","status":"modified","additions":20,"deletions":22,"changes":42,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/jpa_overview_trans.xml","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/jpa_overview_trans.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_trans.xml?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -140,10 +140,9 @@ includes a method to transfer funds from one user to another, and it looks\n something like this:\n     </para>\n <programlisting>\n-public void transferFunds (User from, User to, double amnt)\n-{\n-    from.decrementAccount (amnt);\n-    to.incrementAccount (amnt);\n+public void transferFunds(User from, User to, double amnt) {\n+    from.decrementAccount(amnt);\n+    to.incrementAccount(amnt);\n }\n </programlisting>\n     <para>\n@@ -280,8 +279,8 @@ of hanging due to deadlock.\n OpenJPA uses optimistic semantics by default, but supports both optimistic and\n datastore transactions. OpenJPA also offers advanced locking and versioning APIs\n for fine-grained control over database resource allocation and object\n-versioning. See <xref linkend=\"ref_guide_locking\"/> of the Reference Guide for details\n-on locking. <xref linkend=\"jpa_overview_meta_version\"/>\n+versioning. See <xref linkend=\"ref_guide_locking\"/> of the Reference Guide for \n+details on locking. <xref linkend=\"jpa_overview_meta_version\"/>\n of this document covers standard object versioning, while\n <xref linkend=\"ref_guide_mapping_jpa\"/> of the Reference Guide discusses\n additional versioning strategies available in OpenJPA.\n@@ -312,13 +311,13 @@ JPA integrates with your container's <emphasis>managed</emphasis> transactions,\n allowing you to use the container's declarative transaction demarcation and its\n Java Transaction API (JTA) implementation for transaction management. Outside of\n a container, though, you must demarcate transactions manually through JPA. The\n-<classname> EntityTransaction</classname> interface controls unmanaged\n+<classname>EntityTransaction</classname> interface controls unmanaged\n transactions in JPA.\n         </para>\n <programlisting>\n-public void begin ();\n-public void commit ();\n-public void rollback ();\n+public void begin();\n+public void commit();\n+public void rollback();\n </programlisting>\n         <para>\n         <indexterm>\n@@ -376,7 +375,7 @@ also ends the persistence context. All managed entites will be detached from the\n <classname>EntityManager</classname>.\n         </para>\n <programlisting>\n-public boolean isActive ();\n+public boolean isActive();\n </programlisting>\n         <para>\n         <indexterm>\n@@ -388,31 +387,30 @@ public boolean isActive ();\n             </secondary>\n         </indexterm>\n Finally, the <methodname>isActive</methodname> method returns <literal>true\n-</literal> if the transaction is in progress ( <methodname>begin</methodname>\n+</literal> if the transaction is in progress (<methodname>begin</methodname>\n has been called more recently than <methodname>commit</methodname> or\n-<methodname>rollback</methodname> ), and <literal>false</literal> otherwise.\n+<methodname>rollback</methodname>), and <literal>false</literal> otherwise.\n         </para>\n         <example id=\"jpa_overview_trans_group\">\n             <title>\n                 Grouping Operations with Transactions\n             </title>\n <programlisting>\n-public void transferFunds (EntityManager em, User from, User to, double amnt)\n-{\n+public void transferFunds(EntityManager em, User from, User to, double amnt) {\n     // note: it would be better practice to move the transaction demarcation\n     // code out of this method, but for the purposes of example...\n-    Transaction trans = em.getTransaction ();\n-    trans.begin ();\n+    Transaction trans = em.getTransaction();\n+    trans.begin();\n     try\n     {\n-        from.decrementAccount (amnt);\n-        to.incrementAccount (amnt);\n-        trans.commit ();\n+        from.decrementAccount(amnt);\n+        to.incrementAccount(amnt);\n+        trans.commit();\n     }\n     catch (RuntimeException re)\n     {\n-        if (trans.isActive ())\n-            trans.rollback ();   // or could attempt to fix error and retry\n+        if (trans.isActive())\n+            trans.rollback();   // or could attempt to fix error and retry\n         throw re;\n     }\n }"},{"sha":"7433a04a895aa9f34b2e3e9a87cdb1a081a94e53","filename":"openjpa-project/src/doc/manual/jpa_overview_why.xml","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/jpa_overview_why.xml","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/jpa_overview_why.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_why.xml?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -287,9 +287,7 @@ by the table below.\n                 </row>\n                 <row>\n                     <entry colname=\"sup\">\n-                        \n-            Relational and Non-Relational Stores\n-          \n+                        Relational and Non-Relational Stores\n                     </entry>\n                     <entry colname=\"ser\">\n                         No"},{"sha":"1928bf873ba71eda23f271fae9f2e3f1f92e8452","filename":"openjpa-project/src/doc/manual/jpa_resources.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/jpa_resources.xml","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/jpa_resources.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_resources.xml?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -22,7 +22,7 @@ javax.persistence Javadoc</ulink>\n         </listitem>\n         <listitem>\n             <para>\n-<ulink url=\"../../api/index.html\">OpenJPA API Javadoc</ulink>\n+<ulink url=\"../apidocs/index.html\">OpenJPA API Javadoc</ulink>\n             </para>\n         </listitem>\n         <listitem>"},{"sha":"cf8216075f9753c245c57fda3a7fc8e297448e66","filename":"openjpa-project/src/doc/manual/manual.xml","status":"modified","additions":8,"deletions":3,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/manual.xml","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/manual.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/manual.xml?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -37,7 +37,7 @@\n ]>\n <book id=\"manual\">\n     <bookinfo>\n-        <title>OpenJPA Developers Guide</title>\n+        <title>OpenJPA User's Guide</title>\n     </bookinfo>\n \n     <part id=\"introduction\">\n@@ -62,13 +62,16 @@\n         &jpa_overview_conclusion.xml;\n     </part>\n \n+    <!--\n+    ### TUTORIAL\n     <part id=\"tutorials\">\n         <title>Tutorials</title>\n         &jpa_tutorials.xml;\n     </part>\n+    -->\n \n     <part id=\"ref_guide\">\n-        <title>OpenJPA <phrase>JPA</phrase> Reference Guide</title>\n+        <title>Reference Guide</title>\n         &ref_guide_intro.xml;\n         &ref_guide_conf.xml;\n         &ref_guide_logging.xml;\n@@ -84,10 +87,12 @@\n         &ref_guide_optimization.xml;\n     </part>\n \n+    <!--\n     <part id=\"samples_guide_part\">\n-        <title>OpenJPA <phrase>JPA</phrase> Samples</title>\n+        <title>Samples</title>\n         &samples_guide.xml;\n     </part>\n+    -->\n \n     &jpa_resources.xml;\n     &supported_databases.xml;"},{"sha":"06d68665680e6f063e1b3713c26091244bf20fe5","filename":"openjpa-project/src/doc/manual/openjpa_intro.xml","status":"modified","additions":20,"deletions":21,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/openjpa_intro.xml","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/openjpa_intro.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/openjpa_intro.xml?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -1,30 +1,27 @@\n <chapter id=\"openjpa_intro\">\n     <title>\n         OpenJPA \n-        <phrase>\n-            JPA\n-        </phrase>\n     </title>\n     <indexterm zone=\"openjpa_intro\">\n         <primary>\n             OpenJPA \n-            <phrase>\n-                JPA\n-            </phrase>\n         </primary>\n     </indexterm>\n     <para>\n-OpenJPA is Apache's implementation of Sun's <phrase>Java Persistence API (JPA)\n-specification</phrase> for the transparent persistence of Java objects. This\n-document provides an overview of <phrase>the JPA standard</phrase> and technical\n+OpenJPA is Apache's implementation of Sun's Java Persistence API (JPA)\n+specification for the transparent persistence of Java objects. This\n+document provides an overview of the JPA standard and technical\n details on the use of OpenJPA.\n     </para>\n+<!-- \n+### TUTORIAL\n     <para>\n-To quickly get started with JPA, you may want to begin at\n+To quickly get started with OpenJPA, you may want to begin at\n <xref linkend=\"jpa_tutorial\"/>. If you would prefer to start with an\n-introduction to the concepts of JPA, begin with\n+introduction to the JPA specification, begin with\n <xref linkend=\"jpa_overview_intro\"/>.\n     </para>\n+-->\n     <section id=\"openjpa_intro_about\">\n         <title>\n             About This Document\n@@ -36,25 +33,27 @@ This document is intended for OpenJPA users. It is divided into several parts:\n             <listitem>\n                 <para>\n The <link linkend=\"jpa_overview_intro\">JPA Overview</link> describes the\n-fundamentals of JPA.\n+fundamentals of the JPA specification.\n                 </para>\n             </listitem>\n+<!-- \n+### TUTORIAL\n             <listitem>\n                 <para>\n-In the <link linkend=\"tutorials\">OpenJPA <phrase>JPA</phrase> Tutorials</link>\n-you will develop simple persistent applications using OpenJPA. Through the\n+In the <link linkend=\"tutorials\">OpenJPA Tutorials</link> you will develop \n+simple persistent applications using OpenJPA. Through the\n tutorials' hands-on approach, you will become comfortable with the core tools\n-and development processes under OpenJPA <phrase>JPA</phrase>.\n+and development processes under OpenJPA.\n                 </para>\n             </listitem>\n+-->\n             <listitem>\n                 <para>\n-The <link linkend=\"ref_guide_intro\">OpenJPA <phrase>JPA</phrase> Reference Guide\n-</link> contains detailed documentation on all aspects of OpenJPA <phrase>JPA\n-</phrase>. Browse through this guide to familiarize yourself with the many\n-advanced features and customization opportunities OpenJPA provides. Later, you\n-can use the guide when you need details on a specific aspect of OpenJPA <phrase>\n-JPA</phrase>.\n+The <link linkend=\"ref_guide_intro\">OpenJPA Reference Guide</link> contains \n+detailed documentation on all aspects of OpenJPA.  Browse through this guide \n+to familiarize yourself with the many advanced features and customization \n+opportunities OpenJPA provides. Later, you can use the guide when you need \n+details on a specific aspect of OpenJPA.\n                 </para>\n             </listitem>\n         </itemizedlist>"},{"sha":"1d631ebf82a0748d112dd86ad194c078fb3aadc4","filename":"openjpa-project/src/doc/manual/ref_guide_caching.xml","status":"modified","additions":11,"deletions":10,"changes":21,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/ref_guide_caching.xml","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/ref_guide_caching.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_caching.xml?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -289,7 +289,8 @@ tips on how to use this package to extend OpenJPA's caching service yourself.\n             <para>\n Rather than use the low-level <literal>org.apache.openjpa.datacache</literal>\n package APIs, JPA users should typically access the data cache through OpenJPA's\n-high-level <ulink url=\"../../api/openjpa/persistence/StoreCache.html\">\n+high-level \n+<ulink url=\"../apidocs/org/apache/openjpa/persistence/StoreCache.html\">\n <classname>org.apache.openjpa.persistence.StoreCache</classname></ulink> facade.\n This facade has methods to pin and unpin records, evict data from the cache, and\n more.\n@@ -309,7 +310,7 @@ corresponding persistent class, and dynamically delegates to that cache.\n             </para>\n             <para>\n If you know that you want to access a certain data cache and no others, the\n-<ulink url=\"../../api/openjpa/persistence/OpenJPAEntityManagerFactory.html\">\n+<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAEntityManagerFactory.html\">\n <methodname>OpenJPAEntityManagerFactory.getStoreCache(String name)</methodname>\n </ulink> method returns a <classname>StoreCache</classname> interface to a\n particular named data cache.\n@@ -381,8 +382,8 @@ cache.evict (Magazine.class, changedMag.getId ());\n             </example>\n             <para>\n See the <classname>StoreCache</classname>\n-<ulink url=\"../../api/openjpa/persistence/StoreCache.html\">Javadoc</ulink> for\n-information on additional functionality it provides. Also,\n+<ulink url=\"../apidocs/org/apache/openjpa/persistence/StoreCache.html\">\n+Javadoc</ulink> for information on additional functionality it provides. Also,\n <xref linkend=\"ref_guide_runtime\"/> discusses OpenJPA's other extensions\n to the standard set of JPA runtime interfaces.\n             </para>\n@@ -445,10 +446,10 @@ execution time is fully traversed.\n             </para>\n             <para>\n OpenJPA exposes a high-level interface to the query cache through the\n-<ulink url=\"../../api/openjpa/persistence/QueryResultCache.html\"><classname>\n-org.apache.openjpa.persistence.QueryResultCache</classname></ulink> class. You\n-can access this class through the <classname> OpenJPAEntityManagerFactory\n-</classname>.\n+<ulink url=\"../apidocs/org/apache/openjpa/persistence/QueryResultCache.html\">\n+<classname>org.apache.openjpa.persistence.QueryResultCache</classname></ulink> \n+class. You can access this class through the <classname>\n+OpenJPAEntityManagerFactory</classname>.\n             </para>\n             <example id=\"ref_guide_cache_queryaccess\">\n                 <title>\n@@ -825,8 +826,8 @@ instead.\n                     <listitem>\n                         <para>\n <literal>ClearOnClose</literal>: Whether the Tangosol named cache should be\n-completely cleared when the <phrase><classname>EntityManagerFactory</classname>\n-</phrase> is closed. Defaults to <literal>false</literal>.\n+completely cleared when the <classname>EntityManagerFactory</classname>\n+is closed. Defaults to <literal>false</literal>.\n                         </para>\n                     </listitem>\n                 </itemizedlist>"},{"sha":"61ed7773e09170f96d6dd8d2ca7cfdcee2296aec","filename":"openjpa-project/src/doc/manual/ref_guide_conf.xml","status":"modified","additions":246,"deletions":300,"changes":546,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/ref_guide_conf.xml","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/ref_guide_conf.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_conf.xml?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -101,7 +101,7 @@ configuration resource to use, and to override any property.\n         </itemizedlist>\n         <note>\n             <para>\n-Internally, the OpenJPA <phrase>JPA</phrase> runtime environment and development\n+Internally, the OpenJPA runtime environment and development\n tools manipulate property settings through a general\n <ulink url=\"../apidocs/ResultObjectProvider/lib/conf/Configuration.html\">\n <classname>Configuration</classname></ulink> interface, and in particular its\n@@ -143,11 +143,11 @@ do not have a default resource in place, or when you wish to override the\n defaults. The given value can be the path to a file, or the resource name of a\n file somewhere in the <literal>CLASSPATH</literal>. OpenJPA will search the\n given location as well as the location prefixed by <filename> META-INF/\n-</filename>. Thus, to point a OpenJPA tool at <phrase><filename>\n-META-INF/persistence.xml</filename>,</phrase> you can use:\n+</filename>. Thus, to point a OpenJPA tool at <filename>\n+META-INF/my-persistence.xml</filename>, you can use:\n                 </para>\n <programlisting>\n-&lt;tool&gt; -p persistence.xml\n+&lt;tool&gt; -p my-persistence.xml\n </programlisting>\n             </listitem>\n             <listitem>\n@@ -232,10 +232,10 @@ number of lines to skip between sections of code. Defaults to 2.\n             </itemizedlist>\n             <example id=\"ref_guide_conf_devtools_format_ex\">\n                 <title>\n-                    Code Formatting with the Reverse Mapping Tool\n+                    Code Formatting with the Application Id Tool\n                 </title>\n <programlisting>\n-java org.apache.openjpa.jdbc.meta.ReverseMappingTool -cf.spaceBeforeParen true -cf.tabSpaces 4\n+java org.apache.openjpa.enhance.ApplicationIdTool -cf.spaceBeforeParen true -cf.tabSpaces 4\n </programlisting>\n             </example>\n         </section>\n@@ -353,6 +353,7 @@ majority of developers can omit them. The following properties apply to any\n OpenJPA back-end, though the given descriptions are tailored to OpenJPA's\n default JDBC store.\n         </para>\n+        <!--\n         <section id=\"openjpa.AggregateListeners\">\n             <title>\n                 openjpa.AggregateListeners\n@@ -371,7 +372,7 @@ default JDBC store.\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.AggregateListeners</literal>\n             </para>\n             <para>\n@@ -381,7 +382,7 @@ openjpa.AggregateListeners</literal>\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n AggregateListeners</literal>\n             </para>\n             <para>\n@@ -397,6 +398,7 @@ standard set of listeners. See <xref linkend=\"ref_guide_enterprise_queryext\"/>\n  for details on aggregate listeners.\n             </para>\n         </section>\n+        -->\n         <section id=\"openjpa.AutoClear\">\n             <title>\n                 openjpa.AutoClear\n@@ -418,7 +420,7 @@ standard set of listeners. See <xref linkend=\"ref_guide_enterprise_queryext\"/>\n                 </tertiary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.AutoClear\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.AutoClear\n </literal>\n             </para>\n             <para>\n@@ -428,14 +430,14 @@ standard set of listeners. See <xref linkend=\"ref_guide_enterprise_queryext\"/>\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n AutoClear</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>datastore</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>datastore</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Possible values:</emphasis><literal>datastore</literal>,\n+<emphasis role=\"bold\">Possible values: </emphasis><literal>datastore</literal>,\n <literal>all</literal>\n             </para>\n             <para>\n@@ -465,7 +467,7 @@ transaction.\n                 </tertiary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.AutoDetach\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.AutoDetach\n </literal>\n             </para>\n             <para>\n@@ -475,14 +477,14 @@ transaction.\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n AutoDetach</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Default:</emphasis> -\n             </para>\n             <para>\n-<emphasis role=\"bold\">Possible values:</emphasis><literal>close</literal>,\n+<emphasis role=\"bold\">Possible values: </emphasis><literal>close</literal>,\n <literal>commit</literal>, <literal>nontx-read</literal>\n             </para>\n             <para>\n@@ -500,7 +502,7 @@ when managed instances will be automatically detached.\n                 </primary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.BrokerFactory\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.BrokerFactory\n </literal>\n             </para>\n             <para>\n@@ -510,14 +512,14 @@ when managed instances will be automatically detached.\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n BrokerFactory</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>jdbc</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>jdbc</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Possible values:</emphasis><literal>jdbc</literal>,\n+<emphasis role=\"bold\">Possible values: </emphasis><literal>jdbc</literal>,\n <literal>abstractstore</literal>, <literal>remote</literal>\n             </para>\n             <para>\n@@ -546,7 +548,7 @@ use.\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.BrokerImpl\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.BrokerImpl\n </literal>\n             </para>\n             <para>\n@@ -556,11 +558,11 @@ use.\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n BrokerImpl</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>default</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>default</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n@@ -588,7 +590,7 @@ org.apache.openjpa.kernel.Broker</classname></ulink> type to use at runtime. See\n                 </see>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.ClassResolver\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.ClassResolver\n </literal>\n             </para>\n             <para>\n@@ -598,11 +600,11 @@ org.apache.openjpa.kernel.Broker</classname></ulink> type to use at runtime. See\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n ClassResolver</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>default</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>default</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n@@ -628,7 +630,7 @@ special classloading needs.\n                 </primary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.Compatibility\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.Compatibility\n </literal>\n             </para>\n             <para>\n@@ -638,7 +640,7 @@ special classloading needs.\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n Compatibility</literal>\n             </para>\n             <para>\n@@ -667,7 +669,7 @@ behavior of previous OpenJPA releases.\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.ConnectionDriverName</literal>\n             </para>\n             <para>\n@@ -678,7 +680,7 @@ org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionDriverName\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n ConnectionDriverName</literal>\n             </para>\n             <para>\n@@ -709,7 +711,7 @@ database. See <xref linkend=\"ref_guide_dbsetup\"/> for details.\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.Connection2DriverName</literal>\n             </para>\n             <para>\n@@ -720,7 +722,7 @@ org.apache.openjpa.conf.OpenJPAConfiguration.getConnection2DriverName\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n Connection2DriverName</literal>\n             </para>\n             <para>\n@@ -752,7 +754,7 @@ alternate connection factory used for unmanaged connections. See\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.ConnectionFactory</literal>\n             </para>\n             <para>\n@@ -762,7 +764,7 @@ openjpa.ConnectionFactory</literal>\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n ConnectionFactory</literal>\n             </para>\n             <para>\n@@ -792,7 +794,7 @@ ConnectionFactory</literal>\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.ConnectionFactory2</literal>\n             </para>\n             <para>\n@@ -802,7 +804,7 @@ openjpa.ConnectionFactory2</literal>\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n ConnectionFactory2</literal>\n             </para>\n             <para>\n@@ -832,7 +834,7 @@ javax.sql.DataSource</classname> to use to connect to the database. See\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.ConnectionFactoryName</literal>\n             </para>\n             <para>\n@@ -843,7 +845,7 @@ org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionFactoryName\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n ConnectionFactoryName</literal>\n             </para>\n             <para>\n@@ -873,7 +875,7 @@ javax.sql.DataSource</classname> to use to connect to the database. See\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.ConnectionFactory2Name</literal>\n             </para>\n             <para>\n@@ -884,7 +886,7 @@ org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionFactory2Name\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n ConnectionFactory2Name</literal>\n             </para>\n             <para>\n@@ -914,7 +916,7 @@ See <xref linkend=\"ref_guide_enterprise_xa\"/> for details.\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.ConnectionFactoryMode</literal>\n             </para>\n             <para>\n@@ -925,14 +927,14 @@ org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionFactoryMode\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n ConnectionFactoryMode</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>local</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>local</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Possible values:</emphasis><literal>local</literal>,\n+<emphasis role=\"bold\">Possible values: </emphasis><literal>local</literal>,\n <literal>managed</literal>\n             </para>\n             <para>\n@@ -959,7 +961,7 @@ when integrating with the application server's managed transactions. See\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.ConnectionFactoryProperties</literal>\n             </para>\n             <para>\n@@ -970,7 +972,7 @@ org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionFactoryProperties\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n ConnectionFactoryProperties</literal>\n             </para>\n             <para>\n@@ -979,7 +981,7 @@ ConnectionFactoryProperties</literal>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n <xref linkend=\"ref_guide_conf_plugins\"/>) listing properties for\n-configuration of the <classname>javax.sql.DataSource</classname> in use. See the\n+configuration of the datasource in use. See the\n <xref linkend=\"ref_guide_dbsetup\"/> for details.\n             </para>\n         </section>\n@@ -1001,7 +1003,7 @@ configuration of the <classname>javax.sql.DataSource</classname> in use. See the\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.ConnectionFactory2Properties</literal>\n             </para>\n             <para>\n@@ -1012,7 +1014,7 @@ org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionFactory2Properties\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n ConnectionFactory2Properties</literal>\n             </para>\n             <para>\n@@ -1044,7 +1046,7 @@ alternate connection factory used for unmanaged connections. See\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.ConnectionPassword</literal>\n             </para>\n             <para>\n@@ -1054,7 +1056,7 @@ openjpa.ConnectionPassword</literal>\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n ConnectionPassword</literal>\n             </para>\n             <para>\n@@ -1084,7 +1086,7 @@ specified in the <literal>ConnectionUserName</literal> property. See\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.Connection2Password</literal>\n             </para>\n             <para>\n@@ -1094,7 +1096,7 @@ openjpa.Connection2Password</literal>\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n Connection2Password</literal>\n             </para>\n             <para>\n@@ -1126,7 +1128,7 @@ alternate connection factory used for unmanaged connections. See\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.ConnectionProperties</literal>\n             </para>\n             <para>\n@@ -1137,7 +1139,7 @@ org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionProperties\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n ConnectionProperties</literal>\n             </para>\n             <para>\n@@ -1168,7 +1170,7 @@ described below. See <xref linkend=\"ref_guide_dbsetup\"/> for details.\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.Connection2Properties</literal>\n             </para>\n             <para>\n@@ -1179,7 +1181,7 @@ org.apache.openjpa.conf.OpenJPAConfiguration.getConnection2Properties\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n Connection2Properties</literal>\n             </para>\n             <para>\n@@ -1211,7 +1213,7 @@ alternate connection factory used for unmanaged connections. See\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.ConnectionURL\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.ConnectionURL\n </literal>\n             </para>\n             <para>\n@@ -1221,7 +1223,7 @@ alternate connection factory used for unmanaged connections. See\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n ConnectionURL</literal>\n             </para>\n             <para>\n@@ -1250,7 +1252,7 @@ ConnectionURL</literal>\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.Connection2URL\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.Connection2URL\n </literal>\n             </para>\n             <para>\n@@ -1260,7 +1262,7 @@ ConnectionURL</literal>\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n Connection2URL</literal>\n             </para>\n             <para>\n@@ -1292,7 +1294,7 @@ connection factory used for unmanaged connections. See\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.ConnectionUserName</literal>\n             </para>\n             <para>\n@@ -1302,7 +1304,7 @@ openjpa.ConnectionUserName</literal>\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n ConnectionUserName</literal>\n             </para>\n             <para>\n@@ -1332,7 +1334,7 @@ for details.\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.Connection2UserName</literal>\n             </para>\n             <para>\n@@ -1342,7 +1344,7 @@ openjpa.Connection2UserName</literal>\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n Connection2UserName</literal>\n             </para>\n             <para>\n@@ -1374,7 +1376,7 @@ alternate connection factory used for unmanaged connections. See\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.ConnectionRetainMode</literal>\n             </para>\n             <para>\n@@ -1385,11 +1387,11 @@ org.apache.openjpa.conf.OpenJPAConfiguration.getConnectionRetainMode\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n ConnectionRetainMode</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>on-demand</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>on-demand</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> Controls how OpenJPA uses\n@@ -1415,7 +1417,7 @@ sessions. See <xref linkend=\"ref_guide_dbsetup_retain\"/> for details.\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.DataCache\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.DataCache\n </literal>\n             </para>\n             <para>\n@@ -1425,11 +1427,11 @@ sessions. See <xref linkend=\"ref_guide_dbsetup_retain\"/> for details.\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n DataCache</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>false</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>false</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin list string (see\n@@ -1457,7 +1459,7 @@ caching. See <xref linkend=\"ref_guide_cache_conf\"/> for details.\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.DataCacheManager</literal>\n             </para>\n             <para>\n@@ -1467,11 +1469,11 @@ openjpa.DataCacheManager</literal>\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n DataCacheManager</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>default</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>default</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n@@ -1500,7 +1502,7 @@ on data caching.\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.DataCacheTimeout</literal>\n             </para>\n             <para>\n@@ -1510,11 +1512,11 @@ openjpa.DataCacheTimeout</literal>\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n DataCacheTimeout</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>-1</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>-1</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> The number of milliseconds that\n@@ -1544,7 +1546,7 @@ classes. See <xref linkend=\"ref_guide_cache_conf\"/> for details.\n                 </tertiary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.DetachState\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.DetachState\n </literal>\n             </para>\n             <para>\n@@ -1554,14 +1556,14 @@ classes. See <xref linkend=\"ref_guide_cache_conf\"/> for details.\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n DetachState</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>loaded</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>loaded</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Possible values:</emphasis><literal>loaded</literal>,\n+<emphasis role=\"bold\">Possible values: </emphasis><literal>loaded</literal>,\n <literal>fgs</literal>, <literal>all</literal>\n             </para>\n             <para>\n@@ -1596,7 +1598,7 @@ of the detached graph and related options. For more details, see\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.DynamicDataStructs</literal>\n             </para>\n             <para>\n@@ -1606,11 +1608,11 @@ openjpa.DynamicDataStructs</literal>\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n DynamicDataStructs</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>false</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>false</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> Whether to dynamically generate\n@@ -1643,7 +1645,7 @@ memory and speed optimization over time.\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.FetchBatchSize\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.FetchBatchSize\n </literal>\n             </para>\n             <para>\n@@ -1653,11 +1655,11 @@ memory and speed optimization over time.\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n FetchBatchSize</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>-1</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>-1</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> The number of rows to fetch at\n@@ -1678,7 +1680,7 @@ runtime. See <xref linkend=\"ref_guide_dbsetup_lrs\"/> for details.\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.FetchGroups\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.FetchGroups\n </literal>\n             </para>\n             <para>\n@@ -1688,7 +1690,7 @@ runtime. See <xref linkend=\"ref_guide_dbsetup_lrs\"/> for details.\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n FetchGroups</literal>\n             </para>\n             <para>\n@@ -1701,6 +1703,7 @@ Fetch groups can also be set at runtime. See <xref linkend=\"ref_guide_fetch\"/>\n  for details.\n             </para>\n         </section>\n+        <!--\n         <section id=\"openjpa.FilterListeners\">\n             <title>\n                 openjpa.FilterListeners\n@@ -1719,7 +1722,7 @@ Fetch groups can also be set at runtime. See <xref linkend=\"ref_guide_fetch\"/>\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.FilterListeners\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.FilterListeners\n </literal>\n             </para>\n             <para>\n@@ -1729,7 +1732,7 @@ Fetch groups can also be set at runtime. See <xref linkend=\"ref_guide_fetch\"/>\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n FilterListeners</literal>\n             </para>\n             <para>\n@@ -1745,6 +1748,7 @@ listeners. You can also add filter listeners to individual queries. See\n <xref linkend=\"ref_guide_enterprise_queryext\"/> for details.\n             </para>\n         </section>\n+        -->\n         <section id=\"openjpa.FlushBeforeQueries\">\n             <title>\n                 openjpa.FlushBeforeQueries\n@@ -1771,11 +1775,11 @@ listeners. You can also add filter listeners to individual queries. See\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.FlushBeforeQueries</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.FlushBeforeQueries</literal>\n             </para>\n             <para>\n@@ -1785,11 +1789,11 @@ openjpa.FlushBeforeQueries</literal>\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n FlushBeforeQueries</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>true</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>true</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> Whether or not to flush any\n@@ -1807,7 +1811,7 @@ query. See <xref linkend=\"ref_guide_dbsetup_retain\"/> for details.\n                 </primary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.IgnoreChanges\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.IgnoreChanges\n </literal>\n             </para>\n             <para>\n@@ -1817,11 +1821,11 @@ query. See <xref linkend=\"ref_guide_dbsetup_retain\"/> for details.\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n IgnoreChanges</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>false</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>false</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> Whether to consider modifications\n@@ -1851,7 +1855,7 @@ or flush before running it against the datastore.\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.InverseManager\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.InverseManager\n </literal>\n             </para>\n             <para>\n@@ -1861,14 +1865,14 @@ or flush before running it against the datastore.\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n InverseManager</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>false</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>false</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Possible values:</emphasis><literal>false</literal>,\n+<emphasis role=\"bold\">Possible values: </emphasis><literal>false</literal>,\n <literal>true</literal>\n             </para>\n             <para>\n@@ -1898,7 +1902,7 @@ for managing bidirectional relations upon a flush. See\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.LockManager\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.LockManager\n </literal>\n             </para>\n             <para>\n@@ -1908,14 +1912,14 @@ for managing bidirectional relations upon a flush. See\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n LockManager</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>pessimistic</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>pessimistic</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Possible values:</emphasis><literal>none</literal>,\n+<emphasis role=\"bold\">Possible values: </emphasis><literal>none</literal>,\n <literal>sjvm</literal>, <literal>pessimistic</literal>\n             </para>\n             <para>\n@@ -1944,7 +1948,7 @@ locks on persistent instances during transactions.\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.LockTimeout\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.LockTimeout\n </literal>\n             </para>\n             <para>\n@@ -1954,11 +1958,11 @@ locks on persistent instances during transactions.\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n LockTimeout</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>-1</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>-1</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> The number of milliseconds to wait\n@@ -1984,7 +1988,7 @@ for an object lock before throwing an exception, or -1 for no limit. See\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.Log</literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.Log</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n@@ -1993,14 +1997,14 @@ for an object lock before throwing an exception, or -1 for no limit. See\n </ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>Log\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>Log\n </literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>true</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>true</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Possible values:</emphasis><literal>openjpa</literal>,\n+<emphasis role=\"bold\">Possible values: </emphasis><literal>openjpa</literal>,\n <literal>commons</literal>, <literal>log4j</literal>, <literal>none</literal>\n             </para>\n             <para>\n@@ -2032,7 +2036,7 @@ For details on logging, see <xref linkend=\"ref_guide_logging\"/>.\n                 </tertiary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.ManagedRuntime\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.ManagedRuntime\n </literal>\n             </para>\n             <para>\n@@ -2042,11 +2046,11 @@ For details on logging, see <xref linkend=\"ref_guide_logging\"/>.\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n ManagedRuntime</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>auto</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>auto</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n@@ -2067,7 +2071,7 @@ enterprise environment.\n                 </primary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.Mapping\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.Mapping\n </literal>\n             </para>\n             <para>\n@@ -2077,7 +2081,7 @@ enterprise environment.\n </ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n Mapping</literal>\n             </para>\n             <para>\n@@ -2106,7 +2110,7 @@ object-to-datastore mapping to use.\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.MaxFetchDepth\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.MaxFetchDepth\n </literal>\n             </para>\n             <para>\n@@ -2116,11 +2120,11 @@ object-to-datastore mapping to use.\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n MaxFetchDepth</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>-1</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>-1</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> The maximum depth of relations to\n@@ -2146,7 +2150,7 @@ traverse when eager fetching. Use -1 for no limit. Defaults to no limit.  See\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.MetaDataFactory\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.MetaDataFactory\n </literal>\n             </para>\n             <para>\n@@ -2156,15 +2160,11 @@ traverse when eager fetching. Use -1 for no limit. Defaults to no limit.  See\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n MetaDataFactory</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>jdo</literal>\n-            </para>\n-            <para>\n-<emphasis role=\"bold\">Possible values:</emphasis><literal>jdo</literal>,\n-<literal>jpa</literal>, <literal>openjpa3</literal>\n+<emphasis role=\"bold\">Default:</emphasis> <literal>jpa</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n@@ -2193,7 +2193,7 @@ retrieve metadata for your persistent classes. See\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.Multithreaded\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.Multithreaded\n </literal>\n             </para>\n             <para>\n@@ -2203,15 +2203,16 @@ retrieve metadata for your persistent classes. See\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n Multithreaded</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>false</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>false</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> Whether persistent instances and\n-OpenJPA components will be accessed by multiple threads at once.\n+OpenJPA components other than the <classname>EntityManagerFactory</classname>\n+will be accessed by multiple threads at once.\n             </para>\n         </section>\n         <section id=\"openjpa.Optimistic\">\n@@ -2232,7 +2233,7 @@ OpenJPA components will be accessed by multiple threads at once.\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.Optimistic\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.Optimistic\n </literal>\n             </para>\n             <para>\n@@ -2242,11 +2243,11 @@ OpenJPA components will be accessed by multiple threads at once.\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n Optimistic</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>true</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>true</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> Selects between optimistic and\n@@ -2271,7 +2272,7 @@ pessimistic (datastore) transactional modes.\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.OrphanedKeyAction</literal>\n             </para>\n             <para>\n@@ -2281,14 +2282,14 @@ openjpa.OrphanedKeyAction</literal>\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n OrphanedKeyAction</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>log</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>log</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Possible values:</emphasis><literal>log</literal>,\n+<emphasis role=\"bold\">Possible values: </emphasis><literal>log</literal>,\n <literal>exception</literal>, <literal>none</literal>\n             </para>\n             <para>\n@@ -2310,7 +2311,7 @@ invoke when OpenJPA discovers an orphaned datastore key. See\n                 </primary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.NontransactionalRead</literal>\n             </para>\n             <para>\n@@ -2321,11 +2322,11 @@ org.apache.openjpa.conf.OpenJPAConfiguration.getNontransactionalRead\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n NontransactionalRead</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>true</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>true</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> Whether the OpenJPA runtime will\n@@ -2342,7 +2343,7 @@ allow you to read data outside of a transaction.\n                 </primary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.NontransactionalWrite</literal>\n             </para>\n             <para>\n@@ -2353,11 +2354,11 @@ org.apache.openjpa.conf.OpenJPAConfiguration.getNontransactionalWrite\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n NontransactionalWrite</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>false</literal>\n+<emphasis role=\"bold\">Default:</emphasis> <literal>false</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> Whether you can modify persistent\n@@ -2383,7 +2384,7 @@ will take effect on the next transaction.\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.ProxyManager\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.ProxyManager\n </literal>\n             </para>\n             <para>\n@@ -2393,11 +2394,11 @@ will take effect on the next transaction.\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n ProxyManager</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>default</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>default</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n@@ -2426,7 +2427,7 @@ mutable second class objects. See\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.QueryCache\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.QueryCache\n </literal>\n             </para>\n             <para>\n@@ -2436,11 +2437,11 @@ mutable second class objects. See\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n QueryCache</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>true</literal>, when the data\n+<emphasis role=\"bold\">Default: </emphasis><literal>true</literal>, when the data\n cache (see <xref linkend=\"openjpa.DataCache\"/>) is also enabled, <literal>\n false</literal> otherwise.\n             </para>\n@@ -2453,48 +2454,6 @@ implementation to use for caching of queries loaded from the data store. See\n <xref linkend=\"ref_guide_cache_query\"/> for details.\n             </para>\n         </section>\n-        <section id=\"openjpa.QueryCompilationCache\">\n-            <title>\n-                openjpa.QueryCompilationCache\n-            </title>\n-            <indexterm zone=\"openjpa.QueryCompilationCache\">\n-                <primary>\n-                    QueryCompilationCache\n-                </primary>\n-            </indexterm>\n-            <indexterm zone=\"openjpa.QueryCompilationCache\">\n-                <primary>\n-                    caching\n-                </primary>\n-                <secondary>\n-                    QueryCompilationCache\n-                </secondary>\n-            </indexterm>\n-            <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n-openjpa.QueryCompilationCache</literal>\n-            </para>\n-            <para>\n-<emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getQueryCompilationCache\">\n-<methodname>\n-org.apache.openjpa.conf.OpenJPAConfiguration.getQueryCompilationCache\n-</methodname></ulink>\n-            </para>\n-            <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n-QueryCompilationCache</literal>\n-            </para>\n-            <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>true</literal>.\n-            </para>\n-            <para>\n-<emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n-<xref linkend=\"ref_guide_conf_plugins\"/>) describing the <literal>\n-java.util.Map</literal> to use for caching of data used during query\n-compilation. See <xref linkend=\"ref_guide_cache_querycomp\"/> for details.\n-            </para>\n-        </section>\n         <section id=\"openjpa.ReadLockLevel\">\n             <title>\n                 openjpa.ReadLockLevel\n@@ -2513,7 +2472,7 @@ compilation. See <xref linkend=\"ref_guide_cache_querycomp\"/> for details.\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.ReadLockLevel\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.ReadLockLevel\n </literal>\n             </para>\n             <para>\n@@ -2523,14 +2482,14 @@ compilation. See <xref linkend=\"ref_guide_cache_querycomp\"/> for details.\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n ReadLockLevel</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>read</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>read</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Possible values:</emphasis><literal>none</literal>,\n+<emphasis role=\"bold\">Possible values: </emphasis><literal>none</literal>,\n <literal>read</literal>, <literal>write</literal>, numeric values for\n lock-manager specific lock levels\n             </para>\n@@ -2567,7 +2526,7 @@ levels are equivalent.\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.RemoteCommitProvider</literal>\n             </para>\n             <para>\n@@ -2578,7 +2537,7 @@ org.apache.openjpa.conf.OpenJPAConfiguration.getRemoteCommitProvider\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n RemoteCommitProvider</literal>\n             </para>\n             <para>\n@@ -2603,7 +2562,7 @@ implementation to use for distributed event notification. See\n                 </primary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.RestoreState\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.RestoreState\n </literal>\n             </para>\n             <para>\n@@ -2613,14 +2572,14 @@ implementation to use for distributed event notification. See\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n RestoreState</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>none</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>none</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Possible values:</emphasis><literal>none</literal>,\n+<emphasis role=\"bold\">Possible values: </emphasis><literal>none</literal>,\n <literal>immutable</literal>, <literal>all</literal>\n             </para>\n             <para>\n@@ -2638,7 +2597,7 @@ to their pre-transaction values when a rollback occurs.\n                 </primary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.RetainState\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.RetainState\n </literal>\n             </para>\n             <para>\n@@ -2648,11 +2607,11 @@ to their pre-transaction values when a rollback occurs.\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n RetainState</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>true</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>true</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> Whether persistent fields retain\n@@ -2677,7 +2636,7 @@ their values on transaction commit.\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.RetryClassRegistration</literal>\n             </para>\n             <para>\n@@ -2688,11 +2647,11 @@ org.apache.openjpa.conf.OpenJPAConfiguration.getRetryClassRegistration\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n RetryClassRegistration</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>false</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>false</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> Controls whether to log a warning\n@@ -2708,32 +2667,32 @@ serious problems.\n                 openjpa.SavepointManager\n             </title>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.SavepointManager</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Configuration API:</emphasis>\n-<ulink url=\"javadoc/openjpa/conf/OpenJPAConfiguration.html#getSavepointManager\">\n+<ulink url=\"../apidocs/org/apache/openjpa/conf/OpenJPAConfiguration.html#getSavepointManager\">\n org.apache.openjpa.conf.OpenJPAConfiguration.getSavepointManager</ulink>\n             </para>\n             <para>\n <emphasis role=\"bold\">Resource adaptor config-property:</emphasis>\n SavepointManager\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>in-mem</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>in-mem</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Possible values:</emphasis><literal>in-mem</literal>,\n+<emphasis role=\"bold\">Possible values: </emphasis><literal>in-mem</literal>,\n <literal>jdbc</literal>, <literal>oracle</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n <xref linkend=\"ref_guide_conf_plugins\"/>) describing a\n-<ulink url=\"javadoc/openjpa/kernel/SavepointManager.html\"><classname>\n-org.apache.openjpa.kernel.SavepointManager</classname></ulink> to use for\n-managing transaction savepoints. See <xref linkend=\"ref_guide_savepoints\"/>\n- for details.\n+<ulink url=\"../apidocs/org/apache/openjpa/kernel/SavepointManager.html\">\n+<classname>org.apache.openjpa.kernel.SavepointManager</classname></ulink> to \n+use for managing transaction savepoints. See \n+<xref linkend=\"ref_guide_savepoints\"/> for details.\n             </para>\n         </section>\n         <section id=\"openjpa.Sequence\">\n@@ -2746,7 +2705,7 @@ managing transaction savepoints. See <xref linkend=\"ref_guide_savepoints\"/>\n                 </primary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.Sequence\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.Sequence\n </literal>\n             </para>\n             <para>\n@@ -2756,11 +2715,11 @@ managing transaction savepoints. See <xref linkend=\"ref_guide_savepoints\"/>\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n Sequence</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>table</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>table</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n@@ -2789,7 +2748,7 @@ information.\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.TransactionMode\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.TransactionMode\n </literal>\n             </para>\n             <para>\n@@ -2799,14 +2758,14 @@ information.\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n TransactionMode</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>local</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>local</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Possible values:</emphasis><literal>local</literal>,\n+<emphasis role=\"bold\">Possible values: </emphasis><literal>local</literal>,\n <literal>managed</literal>\n             </para>\n             <para>\n@@ -2832,7 +2791,7 @@ use. You can override this setting per-session.\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.WriteLockLevel\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.WriteLockLevel\n </literal>\n             </para>\n             <para>\n@@ -2842,14 +2801,14 @@ use. You can override this setting per-session.\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n WriteLockLevel</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>write</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>write</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Possible values:</emphasis><literal>none</literal>,\n+<emphasis role=\"bold\">Possible values: </emphasis><literal>none</literal>,\n <literal>read</literal>, <literal>write</literal>, numeric values for\n lock-manager specific lock levels\n             </para>\n@@ -2894,7 +2853,7 @@ The following properties apply exclusively to the OpenJPA JDBC back-end.\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.jdbc.ConnectionDecorators</literal>\n             </para>\n             <para>\n@@ -2905,7 +2864,7 @@ org.apache.openjpa.jdbc.conf.JDBCConfiguration.getConnectionDecorators\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n ConnectionDecorators</literal>\n             </para>\n             <para>\n@@ -2919,7 +2878,7 @@ strings (see <xref linkend=\"ref_guide_conf_plugins\"/>) describing\n instances to install on the connection factory. These decorators can wrap\n connections passed from the underlying <classname>DataSource</classname> to add\n functionality. OpenJPA will pass all connections through the list of decorators\n-before using them. Note that by default OpenJPA <phrase>JPA</phrase> employs all\n+before using them. Note that by default OpenJPA employs all\n of the built-in decorators in the <classname>org.apache.openjpa.lib.jdbc\n </classname> package already; you do not need to list them here.\n             </para>\n@@ -2942,7 +2901,7 @@ of the built-in decorators in the <classname>org.apache.openjpa.lib.jdbc\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.jdbc.DBDictionary</literal>\n             </para>\n             <para>\n@@ -2952,7 +2911,7 @@ openjpa.jdbc.DBDictionary</literal>\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n DBDictionary</literal>\n             </para>\n             <para>\n@@ -2969,7 +2928,7 @@ openjpa.ConnectionDriverName</literal></link>\n for database interaction. OpenJPA typically auto-configures the dictionary based\n on the JDBC URL, but you may have to set this property explicitly if you are\n using an unrecognized driver, or to plug in your own dictionary for a database\n-OpenJPA <phrase>JPA</phrase> does not support out-of-the-box. See\n+OpenJPA does not support out-of-the-box. See\n <xref linkend=\"ref_guide_dbsetup_dbsupport\"/> for details.\n             </para>\n         </section>\n@@ -2991,7 +2950,7 @@ OpenJPA <phrase>JPA</phrase> does not support out-of-the-box. See\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.jdbc.DriverDataSource</literal>\n             </para>\n             <para>\n@@ -3001,23 +2960,19 @@ openjpa.jdbc.DriverDataSource</literal>\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n DriverDataSource</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>pooling</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>pooling</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> The alias or full class name of\n the\n <ulink url=\"../apidocs/org/apache/openjpa/jdbc/schema/DriverDataSource.html\">\n <classname>org.apache.openjpa.jdbc.schema.DriverDataSource</classname></ulink>\n implementation to use to wrap JDBC Driver classes with javax.sql.DataSource\n-instances. The provided default implementation (\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/schema/OpenJPAPoolingDataSource\">\n-<classname>org.apache.openjpa.jdbc.schema.OpenJPAPoolingDataSource</classname>\n-</ulink>, will perform connection pooling as described at\n-<xref linkend=\"ref_guide_dbsetup\"/>.\n+instances.\n             </para>\n         </section>\n         <section id=\"openjpa.jdbc.EagerFetchMode\">\n@@ -3038,7 +2993,7 @@ instances. The provided default implementation (\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.jdbc.EagerFetchMode</literal>\n             </para>\n             <para>\n@@ -3048,14 +3003,14 @@ openjpa.jdbc.EagerFetchMode</literal>\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n EagerFetchMode</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>parallel</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>parallel</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Possible values:</emphasis><literal>parallel</literal>,\n+<emphasis role=\"bold\">Possible values: </emphasis><literal>parallel</literal>,\n <literal>join</literal>, <literal>none</literal>\n             </para>\n             <para>\n@@ -3082,7 +3037,7 @@ persistent relations. This setting can also be varied at runtime. See\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.jdbc.FetchDirection</literal>\n             </para>\n             <para>\n@@ -3092,14 +3047,14 @@ openjpa.jdbc.FetchDirection</literal>\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n FetchDirection</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>forward</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>forward</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Possible values:</emphasis><literal>forward</literal>,\n+<emphasis role=\"bold\">Possible values: </emphasis><literal>forward</literal>,\n <literal>reverse</literal>, <literal>unknown</literal>\n             </para>\n             <para>\n@@ -3126,7 +3081,7 @@ result lists will be accessed. This property can also be varied at runtime. See\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.jdbc.JDBCListeners</literal>\n             </para>\n             <para>\n@@ -3136,7 +3091,7 @@ openjpa.jdbc.JDBCListeners</literal>\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n JDBCListeners</literal>\n             </para>\n             <para>\n@@ -3169,7 +3124,7 @@ events.\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.jdbc.LRSSize\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.jdbc.LRSSize\n </literal>\n             </para>\n             <para>\n@@ -3179,14 +3134,14 @@ events.\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n LRSSize</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>query</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>query</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Possible values:</emphasis><literal>query</literal>,\n+<emphasis role=\"bold\">Possible values: </emphasis><literal>query</literal>,\n <literal>last</literal>, <literal>unknown</literal>\n             </para>\n             <para>\n@@ -3213,7 +3168,7 @@ the size of a result list. This property can also be varied at runtime. See\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.jdbc.MappingDefaults</literal>\n             </para>\n             <para>\n@@ -3223,15 +3178,11 @@ openjpa.jdbc.MappingDefaults</literal>\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n MappingDefaults</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis> default\n-            </para>\n-            <para>\n-<emphasis role=\"bold\">Possible values:</emphasis><literal>default</literal>,\n-<literal>jpa</literal>, <literal>openjpa3</literal>\n+<emphasis role=\"bold\">Default:</emphasis> jpa\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n@@ -3261,7 +3212,7 @@ details.\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.jdbc.MappingFactory</literal>\n             </para>\n             <para>\n@@ -3271,17 +3222,13 @@ openjpa.jdbc.MappingFactory</literal>\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n MappingFactory</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Default:</emphasis> -\n             </para>\n             <para>\n-<emphasis role=\"bold\">Possible values:</emphasis><literal>jdo-orm</literal>,\n-<literal>jdo-table</literal>, <literal>jpa</literal>, others\n-            </para>\n-            <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n <xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n <ulink url=\"../apidocs/org/apache/openjpa/meta/MetaDataFactory.html\">\n@@ -3308,7 +3255,7 @@ classes. See <xref linkend=\"ref_guide_mapping_factory\"/> for details.\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.jdbc.ResultSetType</literal>\n             </para>\n             <para>\n@@ -3318,14 +3265,14 @@ openjpa.jdbc.ResultSetType</literal>\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n ResultSetType</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>forward-only</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>forward-only</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Possible values:</emphasis><literal>forward-only</literal>\n+<emphasis role=\"bold\">Possible values: </emphasis><literal>forward-only</literal>\n , <literal>scroll-sensitive</literal>, <literal>scroll-insensitive</literal>\n             </para>\n             <para>\n@@ -3347,7 +3294,7 @@ when fetching result lists. This property can also be varied at runtime. See\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.jdbc.Schema\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.jdbc.Schema\n </literal>\n             </para>\n             <para>\n@@ -3357,7 +3304,7 @@ when fetching result lists. This property can also be varied at runtime. See\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n Schema</literal>\n             </para>\n             <para>\n@@ -3387,7 +3334,7 @@ tables. See <xref linkend=\"ref_guide_schema_def\"/> for details.\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.jdbc.SchemaFactory</literal>\n             </para>\n             <para>\n@@ -3397,14 +3344,14 @@ openjpa.jdbc.SchemaFactory</literal>\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n SchemaFactory</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>dynamic</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>dynamic</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Possible values:</emphasis><literal>dynamic</literal>,\n+<emphasis role=\"bold\">Possible values: </emphasis><literal>dynamic</literal>,\n <literal>native</literal>, <literal>file</literal>, <literal>table</literal>,\n others\n             </para>\n@@ -3430,7 +3377,7 @@ use to store and retrieve information about the database schema. See\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.jdbc.Schemas\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.jdbc.Schemas\n </literal>\n             </para>\n             <para>\n@@ -3440,7 +3387,7 @@ use to store and retrieve information about the database schema. See\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n Schemas</literal>\n             </para>\n             <para>\n@@ -3470,7 +3417,7 @@ schemas and/or tables used for your persistent data. See\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>openjpa.jdbc.SQLFactory\n+<emphasis role=\"bold\">Property name: </emphasis><literal>openjpa.jdbc.SQLFactory\n </literal>\n             </para>\n             <para>\n@@ -3480,19 +3427,18 @@ schemas and/or tables used for your persistent data. See\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n SQLFactory</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>default</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>default</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> A plugin string (see\n <xref linkend=\"ref_guide_conf_plugins\"/>) describing the\n <ulink url=\"../apidocs/org/apache/openjpa/jdbc/sql/SQLFactory.html\"><classname>\n org.apache.openjpa.jdbc.sql.SQLFactory</classname></ulink> to use to abstract\n-common SQL constructs. See <xref linkend=\"ref_guide_dbsetup_sqlfactory\"/>\n-for details.\n+common SQL constructs.\n             </para>\n         </section>\n         <section id=\"openjpa.jdbc.SubclassFetchMode\">\n@@ -3521,7 +3467,7 @@ for details.\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.jdbc.SubclassFetchMode</literal>\n             </para>\n             <para>\n@@ -3531,14 +3477,14 @@ openjpa.jdbc.SubclassFetchMode</literal>\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n SubclassFetchMode</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>parallel</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>parallel</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Possible values:</emphasis><literal>parallel</literal>,\n+<emphasis role=\"bold\">Possible values: </emphasis><literal>parallel</literal>,\n <literal>join</literal>, <literal>none</literal>\n             </para>\n             <para>\n@@ -3565,7 +3511,7 @@ it is in other tables. This setting can also be varied at runtime. See\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.jdbc.SynchronizeMappings</literal>\n             </para>\n             <para>\n@@ -3576,7 +3522,7 @@ org.apache.openjpa.jdbc.conf.JDBCConfiguration.getSynchronizeMappings\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n SynchronizeMappings</literal>\n             </para>\n             <para>\n@@ -3615,7 +3561,7 @@ mappings and schema at runtime. Useful for rapid test/debug cycles. See\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.jdbc.TransactionIsolation</literal>\n             </para>\n             <para>\n@@ -3626,14 +3572,14 @@ org.apache.openjpa.jdbc.conf.JDBCConfiguration.getTransactionIsolation\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n TransactionIsolation</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>default</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>default</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Possible values:</emphasis><literal>default</literal>,\n+<emphasis role=\"bold\">Possible values: </emphasis><literal>default</literal>,\n <literal>none</literal>, <literal>read-committed</literal>, <literal>\n read-uncommitted</literal>, <literal>repeatable-read</literal>, <literal>\n serializable</literal>\n@@ -3662,7 +3608,7 @@ details.\n                 </secondary>\n             </indexterm>\n             <para>\n-<emphasis role=\"bold\">Property name:</emphasis><literal>\n+<emphasis role=\"bold\">Property name: </emphasis><literal>\n openjpa.jdbc.UpdateManager</literal>\n             </para>\n             <para>\n@@ -3672,20 +3618,20 @@ openjpa.jdbc.UpdateManager</literal>\n </methodname></ulink>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Resource adaptor config-property:</emphasis><literal>\n+<emphasis role=\"bold\">Resource adaptor config-property: </emphasis><literal>\n UpdateManager</literal>\n             </para>\n             <para>\n-<emphasis role=\"bold\">Default:</emphasis><literal>default</literal>\n+<emphasis role=\"bold\">Default: </emphasis><literal>default</literal>\n             </para>\n             <para>\n <emphasis role=\"bold\">Description:</emphasis> The full class name of the\n <ulink url=\"../apidocs/org/apache/openjpa/jdbc/kernel/UpdateManager.html\">\n <classname>org.apache.openjpa.jdbc.kernel.UpdateManager</classname></ulink> to\n use to flush persistent object changes to the datastore. The provided default\n implementation is\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/kernel/ConstraintUpdateManager\">\n-<classname>org.apache.openjpa.jdbc.kernel.ConstraintUpdateManager</classname>\n+<ulink url=\"../apidocs/org/apache/openjpa/jdbc/kernel/OperationOrderUpdateManager\">\n+<classname>org.apache.openjpa.jdbc.kernel.OperationOrderUpdateManager</classname>\n </ulink>.\n             </para>\n         </section>"},{"sha":"7610e74929709c8434b574d75f5758e0a60a53bd","filename":"openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","status":"modified","additions":108,"deletions":824,"changes":932,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -8,7 +8,7 @@\n         </primary>\n     </indexterm>\n     <para>\n-OpenJPA <phrase>JPA</phrase> uses a relational database for object persistence.\n+OpenJPA uses a relational database for object persistence.\n It communicates with the database using the Java DataBase Connectivity (JDBC)\n APIs. This chapter describes how to configure OpenJPA to work with the JDBC\n driver for your database, and how to access JDBC functionality at runtime.\n@@ -34,9 +34,8 @@ driver for your database, and how to access JDBC functionality at runtime.\n             </seealso>\n         </indexterm>\n         <para>\n-OpenJPA includes its own <classname>javax.sql.DataSource</classname>\n-implementation, complete with configurable connection pooling and prepared\n-statement caching. If you choose to use OpenJPA's <classname>DataSource\n+OpenJPA includes its own simple <classname>javax.sql.DataSource</classname>\n+implementation.  If you choose to use OpenJPA's <classname>DataSource\n </classname>, then you must specify the following properties:\n         </para>\n         <itemizedlist>\n@@ -84,8 +83,7 @@ user.\n             </listitem>\n         </itemizedlist>\n         <para>\n-To configure advanced features such as connection pooling and prepared statement\n-caching, or to configure the underlying JDBC driver, use the following optional\n+To configure advanced features, use the following optional\n properties. The syntax of these property strings follows the syntax of OpenJPA\n plugin parameters described in <xref linkend=\"ref_guide_conf_plugins\"/>.\n         </para>\n@@ -125,529 +123,42 @@ this plugin string:\n                         <para>\n                         <indexterm>\n                             <primary>\n-                                connections\n-                            </primary>\n-                            <secondary>\n-                                pooling\n-                            </secondary>\n-                            <tertiary>\n-                                ExceptionAction\n-                            </tertiary>\n-                        </indexterm>\n-<literal>ExceptionAction</literal>: The action to take when when a connection\n-that has thrown an exception is returned to the pool. Set to <literal>destroy\n-</literal> to destroy the connection. Set to <literal> validate</literal> to\n-validate the connection (subject to the <literal>TestOnReturn</literal>,\n-<literal> TestOnBorrow</literal>, and other test settings). Set to <literal>\n-none</literal> to ignore the fact that the connection has thrown an exception,\n-and assume it is still usable. Defaults to <literal> destroy</literal>.\n-                        </para>\n-                    </listitem>\n-                    <listitem>\n-                        <para>\n-                        <indexterm>\n-                            <primary>\n-                                connections\n-                            </primary>\n-                            <secondary>\n-                                pooling\n-                            </secondary>\n-                            <tertiary>\n-                                MaxActive\n-                            </tertiary>\n-                        </indexterm>\n-<literal>MaxActive</literal>: The maximum number of database connections in use\n-at one time. A value of 0 disables connection pooling. Defaults to 8. This is\n-the maximum number of connections that OpenJPA will give out to your\n-application. If a connection is requested while <literal>MaxActive</literal>\n-other connections are in use, OpenJPA will wait for <literal>MaxWait</literal>\n-milliseconds for a connection to be returned, and will then throw an exception\n-if no connection was made available.\n-                        </para>\n-                    </listitem>\n-                    <listitem>\n-                        <para>\n-                        <indexterm>\n-                            <primary>\n-                                connections\n-                            </primary>\n-                            <secondary>\n-                                pooling\n-                            </secondary>\n-                            <tertiary>\n-                                MaxIdle\n-                            </tertiary>\n-                        </indexterm>\n-<literal>MaxIdle</literal>: The maximum number of idle database connections to\n-keep in the pool. Defaults to 8. If this number is less than <literal>MaxActive\n-</literal>, then OpenJPA will close extra connections that are returned to the\n-pool if there are already <literal>MaxIdle</literal> available connections. This\n-allows for unexpected or atypical load while still maintaining a relatively\n-small pool when there is less load on the system.\n-                        </para>\n-                    </listitem>\n-                    <listitem>\n-                        <para>\n-                        <indexterm>\n-                            <primary>\n-                                connections\n-                            </primary>\n-                            <secondary>\n-                                pooling\n-                            </secondary>\n-                            <tertiary>\n-                                MaxTotal\n-                            </tertiary>\n-                        </indexterm>\n-<literal>MaxTotal</literal>: The maximum number of database connections in the\n-pool, whether active or idle. Defaults to -1, meaning no limit (the limit will\n-be dictated by <literal>MaxActive</literal> and <literal>MaxIdle</literal> for\n-each unique user name).\n-                        </para>\n-                    </listitem>\n-                    <listitem>\n-                        <para>\n-                        <indexterm>\n-                            <primary>\n-                                connections\n-                            </primary>\n-                            <secondary>\n-                                pooling\n-                            </secondary>\n-                            <tertiary>\n-                                MaxWait\n-                            </tertiary>\n-                        </indexterm>\n-<literal>MaxWait</literal>: The maximum number of milliseconds to wait for a\n-free database connection to become available before giving up. Defaults to 3000.\n-                        </para>\n-                    </listitem>\n-                    <listitem>\n-                        <para>\n-                        <indexterm>\n-                            <primary>\n-                                connections\n-                            </primary>\n-                            <secondary>\n-                                pooling\n-                            </secondary>\n-                            <tertiary>\n-                                MinEvictableIdleTimeMillis\n-                            </tertiary>\n-                        </indexterm>\n-<literal>MinEvictableIdleTimeMillis</literal>: The minimum number of\n-milliseconds that a database connection can sit idle before it becomes a\n-candidate for eviction from the pool. Defaults to 30 minutes. Set to 0 to never\n-evict a connection based on idle time alone.\n-                        </para>\n-                    </listitem>\n-                    <listitem>\n-                        <para>\n-                        <indexterm>\n-                            <primary>\n-                                connections\n-                            </primary>\n-                            <secondary>\n-                                pooling\n-                            </secondary>\n-                            <tertiary>\n-                                RollbackOnReturn\n-                            </tertiary>\n-                        </indexterm>\n-<literal>RollbackOnReturn</literal>: Force all connections to be rolled back\n-when they are retuned to the pool. If false, the <classname> DataSource\n-</classname> will only roll back connections when it detects that there have\n-been any transactional updates on the connection.\n-                        </para>\n-                    </listitem>\n-                    <listitem>\n-                        <para>\n-                        <indexterm>\n-                            <primary>\n-                                connections\n-                            </primary>\n-                            <secondary>\n-                                pooling\n-                            </secondary>\n-                            <tertiary>\n-                                TestOnBorrow\n-                            </tertiary>\n-                        </indexterm>\n-<literal>TestOnBorrow</literal>: Whether to to validate database connections\n-before obtaining them from the pool. Note that validation only consists of a\n-call to the connection's <methodname>isClosed</methodname> method unless you\n-specify a <literal>ValidationSQL</literal> string. Defaults to <literal>true\n-</literal>.\n-                        </para>\n-                    </listitem>\n-                    <listitem>\n-                        <para>\n-                        <indexterm>\n-                            <primary>\n-                                connections\n-                            </primary>\n-                            <secondary>\n-                                pooling\n-                            </secondary>\n-                            <tertiary>\n-                                TestOnReturn\n-                            </tertiary>\n-                        </indexterm>\n-<literal>TestOnReturn</literal>: Set to <literal>true</literal> to validate\n-database connections when they are returned to the pool. Note that validation\n-only consists of a call to the connection's <methodname>isClosed</methodname>\n-method unless you specify a <literal>ValidationSQL</literal> string.\n-                        </para>\n-                    </listitem>\n-                    <listitem>\n-                        <para>\n-                        <indexterm>\n-                            <primary>\n-                                connections\n-                            </primary>\n-                            <secondary>\n-                                pooling\n-                            </secondary>\n-                            <tertiary>\n-                                TestWhileIdle\n-                            </tertiary>\n-                        </indexterm>\n-<literal>TestWhileIdle</literal>: Set to <literal>true</literal> to periodically\n-validate idle database connections.\n-                        </para>\n-                    </listitem>\n-                    <listitem>\n-                        <para>\n-                        <indexterm>\n-                            <primary>\n-                                connections\n-                            </primary>\n-                            <secondary>\n-                                pooling\n-                            </secondary>\n-                            <tertiary>\n-                                TimeBetweenEvictionRunsMillis\n-                            </tertiary>\n-                        </indexterm>\n-<literal>TimeBetweenEvictionRunsMillis</literal>: The number of milliseconds\n-between runs of the eviction thread. Defaults to <literal>-1</literal>, meaning\n-the eviction thread will never run.\n-                        </para>\n-                    </listitem>\n-                    <listitem>\n-                        <para>\n-                        <indexterm>\n-                            <primary>\n-                                connections\n-                            </primary>\n-                            <secondary>\n-                                pooling\n-                            </secondary>\n-                            <tertiary>\n-                                TrackParameters\n-                            </tertiary>\n-                        </indexterm>\n-<literal>TrackParameters</literal>: When <literal>true</literal>, OpenJPA will\n-track the parameters that were set for all <classname>PreparedStatement\n-</classname>s that are executed or batched so that they can be included in\n-error messages. Defaults to <literal>true</literal>.\n-                        </para>\n-                    </listitem>\n-                    <listitem>\n-                        <para>\n-                        <indexterm>\n-                            <primary>\n-                                connections\n-                            </primary>\n-                            <secondary>\n-                                pooling\n-                            </secondary>\n-                            <tertiary>\n-                                ValidationSQL\n-                            </tertiary>\n-                        </indexterm>\n-<literal>ValidationSQL</literal>: A simple SQL query to issue to validate a\n-database connection. If this property is not set, then the only validation\n-performed is to use the <methodname>Connection.isClosed</methodname> method. The\n-following table shows the default settings for different databases. If a\n-database is not shown, this property defaults to null.\n-                        </para>\n-                        <table>\n-                            <title>\n-                                Validation SQL Defaults\n-                            </title>\n-                            <tgroup cols=\"2\" align=\"left\" colsep=\"1\" rowsep=\"1\">\n-                                <colspec colname=\"db\"/>\n-                                \n-                                <colspec colname=\"sql\"/>\n-                                \n-                                <thead>\n-                                    <row>\n-                                        <entry colname=\"db\">\n-                                            Database\n-                                        </entry>\n-                                        <entry colname=\"sql\">\n-                                            SQL\n-                                        </entry>\n-                                    </row>\n-                                </thead>\n-                                <tbody>\n-                                    <row>\n-                                        <entry colname=\"db\">\n-                                            DB2\n-                                        </entry>\n-                                        <entry colname=\"sql\">\n-                                            \n-                      SELECT DISTINCT(CURRENT TIMESTAMP) \n-                      FROM SYSIBM.SYSTABLES\n-                    \n-                                        </entry>\n-                                    </row>\n-                                    <row>\n-                                        <entry colname=\"db\">\n-                                            Empress\n-                                        </entry>\n-                                        <entry colname=\"sql\">\n-                                            \n-                      SELECT DISTINCT(TODAY) \n-                      FROM SYS_TABLES\n-                    \n-                                        </entry>\n-                                    </row>\n-                                    <row>\n-                                        <entry colname=\"db\">\n-                                            Informix\n-                                        </entry>\n-                                        <entry colname=\"sql\">\n-                                            \n-                      SELECT DISTINCT CURRENT TIMESTAMP \n-                      FROM INFORMIX.SYSTABLES\n-                    \n-                                        </entry>\n-                                    </row>\n-                                    <row>\n-                                        <entry colname=\"db\">\n-                                            MySQL\n-                                        </entry>\n-                                        <entry colname=\"sql\">\n-                                            \n-                      SELECT NOW()\n-                    \n-                                        </entry>\n-                                    </row>\n-                                    <row>\n-                                        <entry colname=\"db\">\n-                                            Oracle\n-                                        </entry>\n-                                        <entry colname=\"sql\">\n-                                            \n-                      SELECT SYSDATE FROM DUAL\n-                    \n-                                        </entry>\n-                                    </row>\n-                                    <row>\n-                                        <entry colname=\"db\">\n-                                            Postgres\n-                                        </entry>\n-                                        <entry colname=\"sql\">\n-                                            \n-                      SELECT NOW()\n-                    \n-                                        </entry>\n-                                    </row>\n-                                    <row>\n-                                        <entry colname=\"db\">\n-                                            SQLServer\n-                                        </entry>\n-                                        <entry colname=\"sql\">\n-                                            \n-                      SELECT GETDATE()\n-                    \n-                                        </entry>\n-                                    </row>\n-                                    <row>\n-                                        <entry colname=\"db\">\n-                                            Sybase\n-                                        </entry>\n-                                        <entry colname=\"sql\">\n-                                            \n-                      SELECT GETDATE()\n-                    \n-                                        </entry>\n-                                    </row>\n-                                </tbody>\n-                            </tgroup>\n-                        </table>\n-                        <para>\n-To disable validation SQL, set this property to an empty string, as in\n-<xref linkend=\"ref_guide_dbsetup_builtin_ex\"/>\n-                        </para>\n-                    </listitem>\n-                    <listitem>\n-                        <para>\n-                        <indexterm>\n-                            <primary>\n-                                connections\n-                            </primary>\n-                            <secondary>\n-                                pooling\n-                            </secondary>\n-                            <tertiary>\n-                                ClosePoolSQL\n-                            </tertiary>\n-                        </indexterm>\n-<literal>ClosePoolSQL</literal>: A simple SQL statement to execute when the\n-connection pool is completely closed. This can be used, for example, to cleanly\n-issue a shutdown statement to a file-based database.\n-                        </para>\n-                    </listitem>\n-                    <listitem>\n-                        <para>\n-                        <indexterm>\n-                            <primary>\n-                                connections\n-                            </primary>\n-                            <secondary>\n-                                pooling\n-                            </secondary>\n-                            <tertiary>\n-                                ValidationTimeout\n-                            </tertiary>\n-                        </indexterm>\n-<literal>ValidationTimeout</literal>: The minimum number of milliseconds that\n-must elapse before a connection will ever be re-validated. This property is\n-typically used with <literal>TestOnBorrow</literal> or <literal>TestOnReturn\n-</literal> to reduce the number of validations performed, because the same\n-connection is often borrowed and returned many times in a short span. Defaults\n-to <literal>300000</literal> (5 minutes).\n-                        </para>\n-                    </listitem>\n-                    <listitem>\n-                        <para>\n-                        <indexterm>\n-                            <primary>\n-                                connections\n-                            </primary>\n-                            <secondary>\n-                                pooling\n-                            </secondary>\n-                            <tertiary>\n-                                WarningAction\n-                            </tertiary>\n-                        </indexterm>\n-<literal>WarningAction</literal>: The action to take when a <classname>\n-SQLWarning</classname> is detected on a connection. Possible values are:\n-                        </para>\n-                        <itemizedlist>\n-                            <listitem>\n-                                <para>\n-<literal>ignore</literal>: Warnings will not be checked for, and will be\n-ignored. This is the default.\n-                                </para>\n-                            </listitem>\n-                            <listitem>\n-                                <para>\n-<literal>trace</literal>: The warning will be logged on the <literal>TRACE\n-</literal> channel of the JDBC log.\n-                                </para>\n-                            </listitem>\n-                            <listitem>\n-                                <para>\n-<literal>info</literal>: The warning will be logged on the <literal>INFO\n-</literal> channel of the JDBC log.\n-                                </para>\n-                            </listitem>\n-                            <listitem>\n-                                <para>\n-<literal>warn</literal>: The warning will be logged on the <literal>WARN\n-</literal> channel of the JDBC log.\n-                                </para>\n-                            </listitem>\n-                            <listitem>\n-                                <para>\n-<literal>error</literal>: The warning will be logged on the <literal>ERROR\n-</literal> channel of the JDBC log.\n-                                </para>\n-                            </listitem>\n-                            <listitem>\n-                                <para>\n-<literal>throw</literal>: All <classname>SQLWarning</classname> instances will\n-be thrown as if they were errors.\n-                                </para>\n-                            </listitem>\n-                            <listitem>\n-                                <para>\n-<literal>handle</literal>: The <classname>SQLWarning</classname> instance will\n-be passed through the <methodname>handleWarning</methodname> method of\n-<ulink url=\"javadoc/openjpa/jdbc/sql/DBDictionary.html\"><classname>\n-org.apache.openjpa.jdbc.sql.DBDictionary</classname></ulink>, which allows a\n-custom extension of the dictionary to use heuristic-based warning handling.\n-                                </para>\n-                            </listitem>\n-                        </itemizedlist>\n-                    </listitem>\n-                    <listitem>\n-                        <para>\n-                        <indexterm>\n-                            <primary>\n-                                connections\n+                                JDBC\n                             </primary>\n                             <secondary>\n-                                pooling\n+                                QueryTimeout\n                             </secondary>\n-                            <tertiary>\n-                                WhenExhaustedAction\n-                            </tertiary>\n                         </indexterm>\n-<literal>WhenExhaustedAction</literal>: The action to take when there are no\n-available database connections in the pool. Set to <literal>exception</literal>\n-to immediately throw an exception. Set to <literal> block</literal> to block\n-until a connection is available or the maximum wait time is exceeded. Set to\n-<literal>grow</literal> to automatically grow the pool. Defaults to <literal>\n-block</literal>.\n+<literal>QueryTimeout</literal>: The maximum number of seconds the JDBC driver\n+will wait for a statement to execute.\n                         </para>\n                     </listitem>\n-                </itemizedlist>\n-                <para>\n-Additionally, the following properties are available whether you use OpenJPA's\n-built-in <classname>DataSource</classname> or a third-party's:\n-                </para>\n-                <itemizedlist>\n                     <listitem>\n                         <para>\n                         <indexterm>\n                             <primary>\n-                                prepared statement\n+                                SQL\n                             </primary>\n                             <secondary>\n-                                pooling\n+                                PrettyPrint\n                             </secondary>\n-                            <tertiary>\n-                                MaxCachedStatements\n-                            </tertiary>\n                         </indexterm>\n-<literal>MaxCachedStatements</literal>: The maximum number of <classname>\n-java.sql.PreparedStatement</classname>s to cache. Statement caching can\n-dramatically speed up some databases. Defaults to 50 for OpenJPA's <classname>\n-DataSource</classname>, and 0 for third-party <classname>DataSource</classname>\n-s. Most third-party <classname>DataSource</classname>s do not benefit from\n-OpenJPA's prepared statement cache, because each returned connection has a\n-unique hash code, making it impossible for OpenJPA to match connections to their\n-cached statements.\n+<literal>PrettyPrint</literal>: Boolean indicating whether to pretty-print\n+logged SQL statements.\n                         </para>\n                     </listitem>\n                     <listitem>\n                         <para>\n                         <indexterm>\n                             <primary>\n-                                JDBC\n+                                SQL\n                             </primary>\n                             <secondary>\n-                                QueryTimeout\n+                                PrettyPrintLineLength\n                             </secondary>\n                         </indexterm>\n-<literal>QueryTimeout</literal>: The maximum number of seconds the JDBC driver\n-will wait for a statement to execute.\n+<literal>PrettyPrintLineLength</literal>: The maximum number of characters in\n+each pretty-printed SQL line.\n                         </para>\n                     </listitem>\n                 </itemizedlist>\n@@ -663,7 +174,7 @@ will wait for a statement to execute.\n &lt;property name=\"openjpa.ConnectionURL\" value=\"jdbc:hsqldb:db-hypersonic\"/&gt;\n &lt;property name=\"openjpa.ConnectionDriverName\" value=\"org.hsqldb.jdbcDriver\"/&gt;\n &lt;property name=\"openjpa.ConnectionFactoryProperties\" \n-    value=\"MaxActive=50, MaxIdle=10, ValidationTimeout=50000, MaxCachedStatements=100, ValidationSQL=''\"/&gt;\n+    value=\"PrettyPrint=true, PrettyPrintLineLength=80\"/&gt;\n </programlisting>\n         </example>\n     </section>\n@@ -706,11 +217,11 @@ Persistence.createEntityManagerFactory</methodname> under the\n                     </primary>\n                 </indexterm>\n Bind the <classname>DataSource</classname> into JNDI, and then specify its\n-location in the <phrase><literal>jta-data-source</literal> or <literal>\n+location in the <literal>jta-data-source</literal> or <literal>\n non-jta-data-source</literal> element of the\n <link linkend=\"jpa_overview_persistence_xml\">JPA XML format</link> (depending on\n whether the <classname>DataSource</classname> is managed by JTA), or in the\n-</phrase><link linkend=\"openjpa.ConnectionFactoryName\"><literal>\n+<link linkend=\"openjpa.ConnectionFactoryName\"><literal>\n openjpa.ConnectionFactoryName</literal></link> property.\n                 </para>\n             </listitem>\n@@ -733,11 +244,11 @@ openjpa.ConnectionProperties</literal></link> setting.\n             </listitem>\n         </itemizedlist>\n         <para>\n-Some advanced features of OpenJPA's own <classname>DataSource</classname> can\n+The features of OpenJPA's own <classname>DataSource</classname> can\n also be used with third-party implementations. OpenJPA layers on top of the\n third-party <classname>DataSource</classname> to provide the extra\n-functionality. To configure these advanced features, including prepared\n-statement caching, use the <link linkend=\"openjpa.ConnectionFactoryProperties\">\n+functionality. To configure these features use the \n+<link linkend=\"openjpa.ConnectionFactoryProperties\">\n <literal>openjpa.ConnectionFactoryProperties</literal></link> property described\n in the previous section.\n         </para>\n@@ -782,10 +293,12 @@ Certain application servers automatically enlist their <classname> DataSource\n </classname>s in global transactions. When this is the case, OpenJPA should not\n attempt to commit the underlying connection, leaving JDBC transaction completion\n to the application server. To notify OpenJPA that your third-party <classname>\n-DataSource</classname> is managed by the application server, set the\n+DataSource</classname> is managed by the application server, use the \n+<literal>jta-data-source</literal> element of your <filename>\n+persistence.xml</filename> file or set the\n <link linkend=\"openjpa.ConnectionFactoryMode\"><literal>\n-openjpa.ConnectionFactoryMode</literal></link> property to <literal>managed\n-</literal>.\n+openjpa.ConnectionFactoryMode</literal></link> property to <literal>\n+managed</literal>.\n             </para>\n             <para>\n Note that OpenJPA can only use managed <classname>DataSource</classname>s when\n@@ -799,15 +312,11 @@ configure a second unmanaged <classname>DataSource</classname> that OpenJPA can\n use to perform tasks that are independent of the global transaction. The most\n common of these tasks is updating the sequence table OpenJPA uses to generate\n unique primary key values for your datastore identity objects. Configure the\n-second <classname> DataSource</classname> just as the first, but use the various\n+second <classname>DataSource</classname> using the <literal>non-jta-data-source\n+</literal> <filename>persistence.xml</filename> element, or OpenJPA's various\n \"2\" connection properties, such as <literal>openjpa.ConnectionFactory2Name\n </literal> or <literal>openjpa.Connection2DriverName</literal>. These\n-properties are outlined in <xref linkend=\"ref_guide_conf\"/>. <phrase> If\n-your second <classname>DataSource</classname> is also bound to JNDI, you can use\n-JPA XML's <literal>non-jta-data-source</literal> to specify its location.\n-</phrase> Typically, <phrase>though,</phrase> you will use OpenJPA's built-in\n-implementation for the second <classname>DataSource</classname> (see\n-<xref linkend=\"ref_guide_dbsetup_builtin\"/> ).\n+properties are outlined in <xref linkend=\"ref_guide_conf\"/>.\n             </para>\n             <example id=\"ref_guide_enterprise_xa_conf_ex\">\n                 <title>\n@@ -822,10 +331,6 @@ implementation for the second <classname>DataSource</classname> (see\n     &lt;property name=\"openjpa.Connection2Password\" value=\"tiger\"/&gt;\n     &lt;property name=\"openjpa.Connection2URL\" value=\"jdbc:oracle:thin:@CROM:1521:OpenJPADB\"/&gt;\n     &lt;property name=\"openjpa.Connection2DriverName\" value=\"oracle.jdbc.driver.OracleDriver\"/&gt;\n-    &lt;property name=\"openjpa.ConnectionFactory2Properties\" value=\"MaxActive=20, MaxIdle=10\"/&gt;\n-    &lt;!-- managed transaction and enlisted configuration --&gt;\n-    &lt;property name=\"openjpa.TransactionMode\" value=\"managed\"/&gt;\n-    &lt;property name=\"openjpa.ConnectionFactoryMode\" value=\"managed\"/&gt;\n &lt;/properties&gt;\n </programlisting>\n             </example>\n@@ -853,19 +358,20 @@ implementation for the second <classname>DataSource</classname> (see\n         </indexterm>\n         <para>\n The JPA standard defines how to access JDBC connections from enterprise beans.\n-OpenJPA also provides APIs to access an <classname> EntityManager</classname>'s\n+OpenJPA also provides APIs to access an <classname>EntityManager</classname>'s\n connection, or to retrieve a connection directly from the <classname>\n EntityManagerFactory</classname>'s <classname>DataSource</classname>.\n         </para>\n         <para>\n-The <ulink url=\"../../api/openjpa/persistence/OpenJPAEntityManager.html\">\n+The \n+<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n <methodname>OpenJPAEntityManager.getConnection</methodname></ulink> method\n returns an <classname>EntityManager</classname>'s connection. If the <classname>\n EntityManager</classname> does not already have a connection, it will obtain\n one. The returned connection is only guaranteed to be transactionally consistent\n with other <classname>EntityManager</classname> operations if the <classname>\n EntityManager</classname> is in a managed or non-optimistic transaction, if the\n-<classname> EntityManager</classname> has flushed in the current transaction, or\n+<classname>EntityManager</classname> has flushed in the current transaction, or\n if you have used the <methodname>OpenJPAEntityManager.beginStore</methodname>\n method to ensure that a datastore transaction is in progress. Always close the\n returned connection before attempting any other <classname>EntityManager\n@@ -882,12 +388,12 @@ import org.apache.openjpa.persistence.*;\n \n ...\n \n-OpenJPAEntityManager kem = OpenJPAPersistence.cast (em);\n-Connection conn = (Connection) kem.getConnection ();\n+OpenJPAEntityManager kem = OpenJPAPersistence.cast(em);\n+Connection conn = (Connection) kem.getConnection();\n \n // do JDBC stuff\n \n-conn.close ();\n+conn.close();\n </programlisting>\n         </example>\n         <para>\n@@ -907,14 +413,14 @@ import org.apache.openjpa.persistence.*;\n \n ...\n \n-OpenJPAEntityManagerFactory kemf = OpenJPAPersistence.cast (emf);\n-OpenJPAConfiguration conf = kemf.getConfiguration ();\n-DataSource dataSource = (DataSource) conf.getConnectionFactory ();\n-Connection conn = dataSource.getConnection ();\n+OpenJPAEntityManagerFactory kemf = OpenJPAPersistence.cast(emf);\n+OpenJPAConfiguration conf = kemf.getConfiguration();\n+DataSource dataSource = (DataSource) conf.getConnectionFactory();\n+Connection conn = dataSource.getConnection();\n \n // do JDBC stuff\n \n-conn.close ();\n+conn.close();\n </programlisting>\n         </example>\n     </section>\n@@ -939,7 +445,7 @@ conn.close ();\n             </seealso>\n         </indexterm>\n         <para>\n-OpenJPA <phrase>JPA</phrase> can take advantage of any JDBC 2.x compliant\n+OpenJPA can take advantage of any JDBC 2.x compliant\n driver, making almost any major database a candidate for use. See our officially\n supported database list in <xref linkend=\"supported_databases\"/> for more\n information. Typically, OpenJPA auto-configures its JDBC behavior and SQL\n@@ -993,7 +499,8 @@ the <ulink url=\"../apidocs/org/apache/openjpa/jdbc/sql/DB2Dictionary.html\">\n                     </primary>\n                 </indexterm>\n <literal>derby</literal>: Dictionary for the Apache Derby database. This is an\n-alias for the <ulink url=\"javadoc/openjpa/jdbc/sql/DerbyDictionary.html\">\n+alias for the \n+<ulink url=\"../apidocs/org/apache/openjpa/jdbc/sql/DerbyDictionary.html\">\n <classname>org.apache.openjpa.jdbc.sql.DerbyDictionary</classname> class.\n </ulink>\n                 </para>\n@@ -1232,9 +739,9 @@ create database primary keys for identifiers. Defaults to <literal>true\n                         </secondary>\n                     </indexterm>\n <literal>ConstraintNameMode</literal>: When creating constraints, whether to\n-put the constraint name before the definition ( <literal>before</literal> ),\n-just after the constraint type name ( <literal>mid</literal> ), or after the\n-constraint definition ( <literal>after</literal> ). Defaults to <literal>before\n+put the constraint name before the definition (<literal>before</literal>),\n+just after the constraint type name (<literal>mid</literal>), or after the\n+constraint definition (<literal>after</literal>). Defaults to <literal>before\n </literal>.\n                     </para>\n                 </listitem>\n@@ -3058,147 +2565,6 @@ detects that this is the case, a warning will be logged.\n             </itemizedlist>\n         </section>\n     </section>\n-    <section id=\"ref_guide_dbsetup_sqlfactory\">\n-        <title>\n-            SQLFactory Properties\n-        </title>\n-        <indexterm zone=\"ref_guide_dbsetup_dbsupport\">\n-            <primary>\n-                SQL\n-            </primary>\n-            <secondary>\n-                SQLFactory\n-            </secondary>\n-        </indexterm>\n-        <para>\n-Some aspects of advanced SQL aren't configured through the <classname>\n-DBDictionary</classname>, but through the <classname>SQLFactory</classname>.\n-The <literal>openjpa.jdbc.SQLFactory</literal> configuration property is a\n-<link linkend=\"ref_guide_conf_plugins\">plugin string</link> you can use to\n-configure the following parameters:\n-        </para>\n-        <itemizedlist>\n-            <listitem id=\"SQLFactory.BatchLimit\">\n-                <para>\n-                <indexterm>\n-                    <primary>\n-                        prepared statement\n-                    </primary>\n-                    <secondary>\n-                        batching\n-                    </secondary>\n-                    <tertiary>\n-                        BatchLimit\n-                    </tertiary>\n-                </indexterm>\n-<literal>BatchLimit</literal>: The maximum number of SQL update statements to\n-batch together. Set to 0 to disable statement batching, or -1 for no limit. See\n-<xref linkend=\"ref_guide_perfpack_batch\"/>.\n-                </para>\n-            </listitem>\n-            <listitem id=\"SQLFactory.BatchParameterLimit\">\n-                <para>\n-                <indexterm>\n-                    <primary>\n-                        prepared statement\n-                    </primary>\n-                    <secondary>\n-                        batching\n-                    </secondary>\n-                    <tertiary>\n-                        BatchParameterLimit\n-                    </tertiary>\n-                </indexterm>\n-<literal>BatchParameterLimit</literal>: The maximum number of parameters that\n-can be batched together for a single batch update. Some databases can only\n-handle a certain total number of prepared statement parameters in a single\n-batch. This value will cause OpenJPA to flush a SQL batch once the number of\n-batched statements times the number of bound parameters per statement exceeds\n-this value. Set to 0 to disable SQL batching, or -1 for no limit.\n-                </para>\n-            </listitem>\n-            <listitem id=\"SQLFactory.SupportsUpdateCountsForBatch\">\n-                <para>\n-                <indexterm>\n-                    <primary>\n-                        prepared statement\n-                    </primary>\n-                    <secondary>\n-                        batching\n-                    </secondary>\n-                    <tertiary>\n-                        SupportsUpdateCountsForBatch\n-                    </tertiary>\n-                </indexterm>\n-<literal>SupportsUpdateCountsForBatch</literal>: Whether the JDBC driver\n-correctly returns the set of update counts when a batch statement is executed.\n-                </para>\n-            </listitem>\n-            <listitem id=\"SQLFactory.SupportsTotalCountsForBatch\">\n-                <para>\n-                <indexterm>\n-                    <primary>\n-                        prepared statement\n-                    </primary>\n-                    <secondary>\n-                        batching\n-                    </secondary>\n-                    <tertiary>\n-                        SupportsTotalCountsForBatch\n-                    </tertiary>\n-                </indexterm>\n-<literal>SupportsTotalCountsForBatch</literal>: If a JDBC driver doesn't\n-support batch update counts, whether it at least returns the total number of\n-updates made when a batch statement is executed.\n-                </para>\n-            </listitem>\n-            <listitem id=\"SQLFactory.SupportsUnion\">\n-                <para>\n-                <indexterm>\n-                    <primary>\n-                        SQL\n-                    </primary>\n-                    <secondary>\n-                        union\n-                    </secondary>\n-                    <tertiary>\n-                        SupportsUnion\n-                    </tertiary>\n-                </indexterm>\n-<literal>SupportsUnion</literal>: Whether the database supports SQL UNIONs.\n-                </para>\n-            </listitem>\n-            <listitem id=\"SQLFactory.SupportsUnionWithUnalignedOrdering\">\n-                <para>\n-                <indexterm>\n-                    <primary>\n-                        SQL\n-                    </primary>\n-                    <secondary>\n-                        union\n-                    </secondary>\n-                    <tertiary>\n-                        SupportsUnionWithUnalignedOrdering\n-                    </tertiary>\n-                </indexterm>\n-<literal>SupportsUnionWithUnalignedOrdering</literal>: Whether the database\n-supports SQL UNIONs that order on columns that are not in the same position in\n-all the SELECTs that make up the UNION.\n-                </para>\n-            </listitem>\n-        </itemizedlist>\n-        <para>\n-The defaults for these properties depend on the database in use.\n-        </para>\n-        <example id=\"ref_guide_dbsetup_sqlfactoryex\">\n-            <title>\n-                Configuring SQLFactory Properties\n-            </title>\n-<programlisting>\n-&lt;property name=\"openjpa.jdbc.SQLFactory\" value=\"BatchLimit=100, SupportsUnion=true\"/&gt;\n-</programlisting>\n-        </example>\n-    </section>\n     <section id=\"ref_guide_dbsetup_isolation\">\n         <title>\n             Setting the Transaction Isolation\n@@ -3335,8 +2701,7 @@ Not all databases support this syntax.\n         </itemizedlist>\n         <para>\n You can change the join syntax at runtime through the OpenJPA fetch\n-configuration API, which is described in <xref linkend=\"ref_guide_runtime\"/>\n-.\n+configuration API, which is described in <xref linkend=\"ref_guide_runtime\"/>.\n         </para>\n         <example id=\"ref_guide_dbsetup_sql92_conf\">\n             <title>\n@@ -3355,11 +2720,11 @@ import org.apache.openjpa.persistence.jdbc.*;\n \n ... \n \n-Query q = em.createQuery (\"select m from Magazine m where m.title = 'JDJ'\");\n-OpenJPAQuery kq = OpenJPAPersistence.cast (q);\n+Query q = em.createQuery(\"select m from Magazine m where m.title = 'JDJ'\");\n+OpenJPAQuery kq = OpenJPAPersistence.cast(q);\n JDBCFetchPlan fetch = (JDBCFetchPlan) kq.getFetchPlan ();\n-fetch.setJoinSyntax (JDBCFetchPlan.JOIN_SYNTAX_SQL92);\n-List results = q.getResultList ();\n+fetch.setJoinSyntax(JDBCFetchPlan.JOIN_SYNTAX_SQL92);\n+List results = q.getResultList();\n </programlisting>\n         </example>\n     </section>\n@@ -3376,10 +2741,10 @@ List results = q.getResultList ();\n             </secondary>\n         </indexterm>\n         <para>\n-Through the properties we've covered thus far, you can configure each <phrase>\n-<classname>EntityManagerFactory</classname></phrase> to access a different\n+Through the properties we've covered thus far, you can configure each \n+<classname>EntityManagerFactory</classname> to access a different\n database. If your application accesses multiple databases, we recommend that you\n-maintain a separate properties file for each one. This will allow you to easily\n+maintain a separate persistence unit for each one. This will allow you to easily\n load the appropriate resource for each database at runtime, and to give the\n correct configuration file to OpenJPA's command-line tools during development.\n         </para>\n@@ -3481,8 +2846,6 @@ non-locking datastore transaction. This is the default.\n <literal>with-connection</literal>: Flush only if the <classname>EntityManager\n </classname> has already established a dedicated connection to the datastore,\n otherwise execute the query in-memory.\n-                </para>\n-                <para>\n This option is useful if you use long-running optimistic transactions and want\n to ensure that these transactions do not consume database resources until\n commit. OpenJPA's behavior with this option is dependent on the transaction\n@@ -3529,120 +2892,96 @@ results.\n                         <entry colname=\"col1\">\n                         </entry>\n                         <entry colname=\"col2\">\n-                            \n-              FlushBeforeQueries = false\n-            \n+FlushBeforeQueries = false\n                         </entry>\n                         <entry colname=\"col3\">\n-                            \n-              FlushBeforeQueries = true\n-            \n+FlushBeforeQueries = true\n                         </entry>\n                         <entry colname=\"col4\">\n-                            \n-              FlushBeforeQueries = with-connection; \n-              ConnectionRetainMode = on-demand\n-            \n+FlushBeforeQueries = with-connection; \n+ConnectionRetainMode = on-demand\n                         </entry>\n                         <entry colname=\"col5\">\n-                            \n-              FlushBeforeQueries = with-connection; \n-              ConnectionRetainMode = transaction \n-              or always\n-            \n+FlushBeforeQueries = with-connection; \n+ConnectionRetainMode = transaction or always\n                         </entry>\n                     </row>\n                 </thead>\n                 <tbody>\n                     <row>\n                         <entry colname=\"col1\">\n                             <emphasis role=\"bold\">\n-                                \n-              IgnoreChanges = true\n-              \n+IgnoreChanges = true\n                             </emphasis>\n                         </entry>\n                         <entry colname=\"col2\">\n-                            no flush\n+no flush\n                         </entry>\n                         <entry colname=\"col3\">\n-                            no flush\n+no flush\n                         </entry>\n                         <entry colname=\"col4\">\n-                            no flush\n+no flush\n                         </entry>\n                         <entry colname=\"col5\">\n-                            no flush\n+no flush\n                         </entry>\n                     </row>\n                     <row>\n                         <entry colname=\"col1\">\n                             <emphasis role=\"bold\">\n-                                \n-              IgnoreChanges = false; no tx active\n-              \n+IgnoreChanges = false; no tx active\n                             </emphasis>\n                         </entry>\n                         <entry colname=\"col2\">\n-                            no flush\n+no flush\n                         </entry>\n                         <entry colname=\"col3\">\n-                            no flush\n+no flush\n                         </entry>\n                         <entry colname=\"col4\">\n-                            no flush\n+no flush\n                         </entry>\n                         <entry colname=\"col5\">\n-                            no flush\n+no flush\n                         </entry>\n                     </row>\n                     <row>\n                         <entry colname=\"col1\">\n                             <emphasis role=\"bold\">\n-                                \n-              IgnoreChanges = false; datastore tx active\n-              \n+IgnoreChanges = false; datastore tx active\n                             </emphasis>\n                         </entry>\n                         <entry colname=\"col2\">\n-                            no flush\n+no flush\n                         </entry>\n                         <entry colname=\"col3\">\n-                            flush\n+flush\n                         </entry>\n                         <entry colname=\"col4\">\n-                            flush\n+flush\n                         </entry>\n                         <entry colname=\"col5\">\n-                            flush\n+flush\n                         </entry>\n                     </row>\n                     <row>\n                         <entry colname=\"col1\">\n                             <emphasis role=\"bold\">\n-                                \n-              IgnoreChanges = false; optimistic tx active\n-              \n+IgnoreChanges = false; optimistic tx active\n                             </emphasis>\n                         </entry>\n                         <entry colname=\"col2\">\n-                            no flush\n+no flush\n                         </entry>\n                         <entry colname=\"col3\">\n-                            flush\n+flush\n                         </entry>\n                         <entry colname=\"col4\">\n-                            \n-              no flush unless \n-                            <methodname>\n-                                flush\n-                            </methodname>\n-                             has \n-              already been invoked\n-            \n+no flush unless <methodname>flush</methodname> has already been invoked\n                         </entry>\n                         <entry colname=\"col5\">\n-                            flush\n+flush\n                         </entry>\n                     </row>\n                 </tbody>\n@@ -3664,61 +3003,10 @@ results.\n <programlisting>\n import org.apache.openjpa.persistence.*;\n \n-... \n-\n-// obtaining an em with a certain transaction and connection retain mode\n-OpenJPAEntityManagerFactory kemf = OpenJPAPersistence.cast (emf);\n-EntityManager em = kemf.createEntityManager (PersistenceContextType.EXTENDED,\n-    false, OpenJPAEntityManager.CONN_RETAIN_ALWAYS);\n-\n-...\n-\n-// changing the flush mode for an individual EntityManager\n-OpenJPAEntityManager em = OpenJPAPersistence.cast (em);\n-FetchPlan fetch = kem.getFetchPlan ();\n-fetch.setFlushBeforeQueries (FetchPlan.QUERY_FLUSH_TRUE);\n-</programlisting>\n-        </example>\n-    </section>\n-    <section id=\"ref_guide_perfpack_batch\">\n-        <title>\n-            Statement Batching\n-        </title>\n-        <indexterm zone=\"ref_guide_perfpack_batch\">\n-            <primary>\n-                prepared statement\n-            </primary>\n-            <secondary>\n-                batching\n-            </secondary>\n-        </indexterm>\n-        <para>\n-In addition to connection pooling and prepared statement caching, OpenJPA\n-employs statement batching to speed up JDBC updates. Statement batching is\n-enabled by default for any JDBC driver that supports it. When batching is on,\n-OpenJPA automatically orders its SQL statements to maximize the size of each\n-batch. This can result in large performance gains for transactions that modify a\n-lot of data.\n-        </para>\n-        <para>\n-You configure statement batching through the system\n-<ulink url=\"../apidocs/org/apache/openjpa/jdbc/sql/DBDictionary.html\">\n-<classname>DBDictionary</classname></ulink>, which is controlled by the\n-<link linkend=\"openjpa.jdbc.DBDictionary\"><literal>openjpa.jdbc.DBDictionary\n-</literal></link> configuration property. The example below shows how to enable\n-and disable statement batching via your configuration properties.\n-        </para>\n-        <example id=\"ref_guide_perfpack_batch_ex\">\n-            <title>\n-                Configuring SQL Batching\n-            </title>\n-            <para>\n-The batch limit is the maximum number of statements OpenJPA will ever batch\n-together. A value of -1 means \"no limit\" - this is the default for most\n-dictionaries. A value of 0 disables batching.\n-            </para>\n-<programlisting>\n-&lt;property name=\"openjpa.jdbc.DBDictionary\" value=\"BatchLimit=25\"/&gt;\n+// obtaining an em with a certain connection retain mode\n+Map props = new HashMap();\n+props.put(\"openjpa.ConnectionRetainMode\", \"always\");\n+EntityManager em = emf.createEntityManager(props);\n </programlisting>\n         </example>\n     </section>\n@@ -3924,14 +3212,14 @@ import org.apache.openjpa.persistence.jdbc.*;\n \n ...\n \n-Query q = em.createQuery (\"select m from Magazine m where m.title = 'JDJ'\");\n-OpenJPAQuery kq = OpenJPAPersistence.cast (q);\n-JDBCFetchPlan fetch = (JDBCFetchPlan) kq.getFetchPlan ();\n-fetch.setFetchSize (20);\n-fetch.setResultSetType (ResultSet.TYPE_SCROLL_INSENSITIVE);\n-fetch.setFetchDirection (ResultSet.FETCH_FORWARD);\n-fetch.setLRSSize (JDBCFetchPlan.SIZE_LAST);\n-List results = (List) q.getResultList ();\n+Query q = em.createQuery(\"select m from Magazine m where m.title = 'JDJ'\");\n+OpenJPAQuery kq = OpenJPAPersistence.cast(q);\n+JDBCFetchPlan fetch = (JDBCFetchPlan) kq.getFetchPlan();\n+fetch.setFetchSize(20);\n+fetch.setResultSetType(ResultSet.TYPE_SCROLL_INSENSITIVE);\n+fetch.setFetchDirection(ResultSet.FETCH_FORWARD);\n+fetch.setLRSSize(JDBCFetchPlan.SIZE_LAST);\n+List results = q.getResultList();\n </programlisting>\n         </example>\n     </section>\n@@ -3951,7 +3239,7 @@ List results = (List) q.getResultList ();\n It is common to duplicate a database featureSelection in multiple schemas. You may have one\n schema for development and another for production, or different database users\n may access different schemas. OpenJPA facilitates these patterns with the\n-<link linkend=\"openjpa.jdbc.Schema\"><literal> openjpa.jdbc.Schema</literal>\n+<link linkend=\"openjpa.jdbc.Schema\"><literal>openjpa.jdbc.Schema</literal>\n </link> configuration property. This property establishes a default schema for\n any unqualified table names, allowing you to leave schema names out of your\n mapping definitions.\n@@ -4048,8 +3336,9 @@ built-in options to choose from:\n                     <para>\n <literal>dynamic</literal>: This is the default setting. It is an alias for the\n <ulink url=\"../apidocs/org/apache/openjpa/jdbc/schema/DynamicSchemaFactory.html\">\n-<classname>org.apache.openjpa.jdbc.schema.DynamicSchemaFactory</classname>\n-</ulink>. The <classname>DynamicSchemaFactory</classname> is the most performant\n+<classname>\n+org.apache.openjpa.jdbc.schema.DynamicSchemaFactory</classname></ulink>. The \n+<classname>DynamicSchemaFactory</classname> is the most performant\n schema factory, because it does not validate mapping information against the\n database. Instead, it assumes all object-relational mapping information is\n correct, and dynamically builds an in-memory representation of the schema from\n@@ -4067,11 +3356,9 @@ that OpenJPA can order its SQL statements to meet them.\n metadata and object-relational mapping information. This factory uses the\n <classname>java.sql.DatabaseMetaData</classname> interface to reflect on the\n schema and ensure that it is consistent with the mapping data being read.\n-Because the factory doesn't reflect on a table definition until that table is\n-mentioned by the mapping information, we call it \"lazy\". Use this factory if you\n-want up-front validation that your mapping metadata is consistent with the\n-database during development. This factory accepts the following important\n-properties:\n+Use this factory if you want up-front validation that your mapping metadata is \n+consistent with the database during development. This factory accepts the \n+following important properties:\n                     </para>\n                     <itemizedlist>\n                         <listitem>\n@@ -4217,9 +3504,8 @@ dependencies. Thus the schema tool is useful as a general way to manipulate\n schemas.\n         </para>\n         <para>\n-You can invoke the schema tool through the <literal>schematool</literal>\n-shell/bat script included in the OpenJPA distribution, or through its Java\n-class, <ulink url=\"../apidocs/org/apache/openjpa/jdbc/schema/SchemaTool.html\">\n+You can invoke the schema tool through its Java class, \n+<ulink url=\"../apidocs/org/apache/openjpa/jdbc/schema/SchemaTool.html\">\n <classname>org.apache.openjpa.jdbc.schema.SchemaTool</classname></ulink>. In\n addition to the universal flags of the <link linkend=\"ref_guide_conf\">\n configuration framework</link>, the schema tool accepts the following command\n@@ -4246,7 +3532,7 @@ CLASSPATH</literal>, data will be written to that resource. Use <literal>stdout\n             </listitem>\n             <listitem>\n                 <para>\n-<literal>-openjpaTables/-kt &lt;true/t | false/f&gt;</literal>: When reflecting\n+<literal>-openjpaTables/-ot &lt;true/t | false/f&gt;</literal>: When reflecting\n on the schema, whether to reflect on tables and sequences whose names start with\n <literal>OPENJPA_</literal>. Certain OpenJPA components may use such tables -\n for example, the <literal>table</literal> schema factory option covered in\n@@ -4286,23 +3572,21 @@ indexes on existing tables. Defaults to <literal>true</literal>.\n             <listitem>\n                 <para>\n <literal>-primaryKeys/-pk &lt;true/t | false/f&gt;</literal>: Whether to\n-manipulate primary keys on existing tables. Defaults to <literal>true</literal>\n-.\n+manipulate primary keys on existing tables. Defaults to <literal>true</literal>.\n                 </para>\n             </listitem>\n             <listitem>\n                 <para>\n <literal>-foreignKeys/-fk &lt;true/t | false/f&gt;</literal>: Whether to\n-manipulate foreign keys on existing tables. Defaults to <literal>true</literal>\n-.\n+manipulate foreign keys on existing tables. Defaults to <literal>true</literal>.\n                 </para>\n             </listitem>\n             <listitem>\n                 <para>\n <literal>-record/-r &lt;true/t | false/f&gt;</literal>: Use <literal>false\n </literal> to prevent writing the schema changes made by the tool to the current\n-<link linkend=\"ref_guide_schema_info_factory\"><literal>schema factory</literal>\n-</link>. Defaults to <literal>true</literal>.\n+<link linkend=\"ref_guide_schema_info_factory\"><literal>schema \n+factory</literal></link>. Defaults to <literal>true</literal>.\n                 </para>\n             </listitem>\n             <listitem>"},{"sha":"70c6ed321e02474f3fbdf8613e16ae17b729b30c","filename":"openjpa-project/src/doc/manual/ref_guide_deploy.xml","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/ref_guide_deploy.xml","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/ref_guide_deploy.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_deploy.xml?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -13,8 +13,8 @@ turn.\n             Factory Deployment\n         </title>\n         <para>\n-OpenJPA offers several <phrase><classname>EntityManagerFactory</classname>\n-</phrase> deployment options.\n+OpenJPA offers several <classname>EntityManagerFactory</classname>\n+deployment options.\n         </para>\n         <section id=\"ref_guide_deploy_factory_standalone\">\n             <title>\n@@ -39,12 +39,12 @@ The JPA Overview describes the <classname>javax.persistence.Persistence\n <classname>Persistence</classname> to add additional <classname>\n EntityManagerFactory</classname> creation methods. The <classname>\n org.apache.openjpa.persistence.OpenJPAPersistence</classname> class\n-<ulink url=\"../../api/openjpa/persistence/OpenJPAPersistence.html\"> Javadoc\n-</ulink> details these extensions.\n+<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAPersistence.html\">\n+Javadoc</ulink> details these extensions.\n             </para>\n             <para>\n-After obtaining the factory, you can cache it for all <phrase><classname>\n-EntityManager</classname></phrase> creation duties.\n+After obtaining the factory, you can cache it for all <classname>\n+EntityManager</classname> creation duties.\n             </para>\n         </section>\n         <section id=\"ref_guide_deploy_inject\">"},{"sha":"08984599c7ee63c628cf1bd8cd6c576d609b89c7","filename":"openjpa-project/src/doc/manual/ref_guide_integration.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/ref_guide_integration.xml","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/ref_guide_integration.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_integration.xml?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -83,7 +83,7 @@ attributes for the <literal>config</literal> tag are defined by the\n <classname>JDBCConfiguration</classname></ulink> bean methods. Note that\n excluding the <literal>config</literal> element will cause the Ant task to use\n the default system configuration mechanism, such as the configuration defined in\n-the <phrase><filename>org.apache.openjpa.xml</filename></phrase> file.\n+the <filename>org.apache.openjpa.xml</filename> file.\n             </para>\n             <para>\n Following is an example of how to use the nested <literal>config</literal> tag"},{"sha":"9bc4b1639342a955a9d3b46a01ad423abf58b048","filename":"openjpa-project/src/doc/manual/ref_guide_intro.xml","status":"modified","additions":8,"deletions":5,"changes":13,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/ref_guide_intro.xml","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/ref_guide_intro.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_intro.xml?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -3,22 +3,25 @@\n         Introduction\n     </title>\n     <para>\n-OpenJPA <phrase>JPA</phrase> is a JDBC-based implementation of the JPA standard.\n-This document is a reference for the configuration and use of OpenJPA <phrase>\n-JPA</phrase>.\n+OpenJPA is a JDBC-based implementation of the JPA standard.\n+This document is a reference for the configuration and use of OpenJPA.\n     </para>\n     <section id=\"ref_guide_intro_audience\">\n         <title>\n             Intended Audience\n         </title>\n         <para>\n-This document is intended for OpenJPA <phrase>JPA</phrase> developers. It\n+This document is intended for OpenJPA developers. It\n assumes strong knowledge of Java, familiarity with the eXtensible Markup\n Language (XML), and an understanding of JPA. If you are not familiar with JPA,\n please read the <link linkend=\"jpa_overview_intro\">JPA Overview</link> before\n-proceeding. We also strongly recommend taking OpenJPA's hands-on\n+proceeding. \n+<!-- \n+### TUTORIAL\n+We also strongly recommend taking OpenJPA's hands-on\n <link linkend=\"tutorials\">tutorials</link> to get comfortable with OpenJPA\n basics.\n+-->\n         </para>\n         <para>\n Certain sections of this guide cover advanced topics such as custom"},{"sha":"979c89b62fa48ef73e6f064a062799101594e1c2","filename":"openjpa-project/src/doc/manual/ref_guide_logging.xml","status":"modified","additions":13,"deletions":30,"changes":43,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/ref_guide_logging.xml","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/ref_guide_logging.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_logging.xml?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -61,7 +61,7 @@ files the tools are running on. Detailed output is only available via the\n logging category the tool belongs to, such as <literal>openjpa.Enhance</literal>\n for the enhancer (see <xref linkend=\"ref_guide_pc_enhance\"/>) or <literal>\n openjpa.MetaData</literal> for the mapping tool (see\n-<xref linkend=\"ref_guide_mapping_mappingtool\"/> ). This logging category\n+<xref linkend=\"ref_guide_mapping_mappingtool\"/>). This logging category\n is provided so that you can get a general idea of what a tool is doing without\n having to manipulate logging settings that might also affect runtime behavior.\n                 </para>\n@@ -129,19 +129,6 @@ level at execution time. Information about possible performance concerns will be\n logged to the <literal>INFO</literal> level.\n                 </para>\n             </listitem>\n-            <listitem>\n-                <para>\n-                <indexterm>\n-                    <primary>\n-                        remote\n-                    </primary>\n-                    <secondary>\n-                        log messages\n-                    </secondary>\n-                </indexterm>\n-<literal>openjpa.Remote</literal>: Remote connection and execution messages.\n-                </para>\n-            </listitem>\n             <listitem>\n                 <para>\n                 <indexterm>\n@@ -209,7 +196,7 @@ Pretty-printing properties configuration might look like so:\n <programlisting>\n &lt;property name=\"openjpa.Log\" value=\"SQL=TRACE\"/&gt;\n &lt;property name=\"openjpa.ConnectionFactoryProperties\" \n-    value=\"MaxActive=100, PrettyPrint=true, PrettyPrintLineLength=72\"/&gt;\n+    value=\"PrettyPrint=true, PrettyPrintLineLength=72\"/&gt;\n </programlisting>\n             </listitem>\n             <listitem>\n@@ -245,8 +232,8 @@ By default, OpenJPA uses a basic logging framework with the following output\n format:\n         </para>\n         <para>\n-<literal>millis</literal><literal>level</literal> [ <literal>thread name\n-</literal> ] <literal>channel</literal> - <literal>message</literal>\n+<literal>millis</literal><literal>level</literal> [<literal>thread \n+name</literal>] <literal>channel</literal> - <literal>message</literal>\n         </para>\n         <para>\n For example, when loading an application that uses OpenJPA, a message like the\n@@ -511,32 +498,28 @@ package com.xyz;\n import org.apache.openjpa.lib.log.*;\n \n public class CustomLogFactory\n-    implements LogFactory\n-{   \n+    implements LogFactory {   \n+\n     private String _prefix = \"CUSTOM LOG\";\n \n-    public void setPrefix (String prefix)\n-    {\n+    public void setPrefix (String prefix) {\n         _prefix = prefix;\n     }\n  \n-    public Log getLog (String channel)\n-    {\n+    public Log getLog(String channel) {\n         // Return a simple extension of AbstractLog that will log\n         // everything to the System.err stream. Note that this is \n         // roughly equivalent to OpenJPA's default logging behavior.\n-        return new AbstractLog ()\n-        {\n-            protected boolean isEnabled (short logLevel)\n-            {\n+        return new AbstractLog() {\n+\n+            protected boolean isEnabled(short logLevel) {\n                 // log all levels\n                 return true;\n             }\n \n-            protected void log (short type, String message, Throwable t)\n-            {\n+            protected void log (short type, String message, Throwable t) {\n                 // just send everything to System.err\n-                System.err.println (_prefix + \": \" + type + \": \"\n+                System.err.println(_prefix + \": \" + type + \": \"\n                     + message + \": \" + t);\n             }\n         };"},{"sha":"4a52b2634a9c4e69bdc158fda4e3fdff64d25852","filename":"openjpa-project/src/doc/manual/ref_guide_mapping.xml","status":"modified","additions":10,"deletions":11,"changes":21,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/ref_guide_mapping.xml","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/ref_guide_mapping.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_mapping.xml?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -955,7 +955,7 @@ schema that matches your object featureSelection.\n OpenJPA relies on foreign key constraint information at runtime to order SQL\n appropriately. Be sure to set your mapping defaults to reflect your existing\n database constraints, or use explicit foreign key mappings as described in\n-<phrase><xref linkend=\"ref_guide_mapping_jpa_fk\"/></phrase>.\n+<xref linkend=\"ref_guide_mapping_jpa_fk\"/>.\n             </para>\n         </important>\n         <para>\n@@ -980,7 +980,7 @@ properties (though with different default values).\n             </listitem>\n             <listitem>\n                 <para>\n-<phrase><literal>default</literal>:</phrase> This is an alias for the\n+<literal>default</literal>: This is an alias for the\n <ulink url=\"../apidocs/org/apache/openjpa/jdbc/meta/MappingDefaultsImpl.html\">\n <classname>org.apache.openjpa.jdbc.meta.MappingDefaultsImpl</classname></ulink>\n class. This default implementation is highly configurable. It has the following\n@@ -2505,14 +2505,14 @@ OpenJPA recognizes the following class extensions.\n                 <para>\n This extension specifies how to eagerly fetch subclass state. It overrides the\n global <link linkend=\"openjpa.jdbc.SubclassFetchMode\"><literal>\n-openjpa.jdbc.SubclassFetchMode</literal></link> property. <phrase> Set the JPA\n+openjpa.jdbc.SubclassFetchMode</literal></link> property. Set the JPA\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/SubclassFetchMode.html\">\n <classname>org.apache.openjpa.persistence.jdbc.SubclassFetchMode</classname>\n </ulink> annotation to a value from the\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/EagerFetchType.html\">\n <classname>org.apache.openjpa.persistence.jdbc.EagerFetchType</classname>\n </ulink> enum: <literal>JOIN</literal>, <literal>PARALLEL</literal>, or\n-<literal>NONE</literal>.</phrase> See <xref linkend=\"ref_guide_perfpack_eager\"/>\n+<literal>NONE</literal>. See <xref linkend=\"ref_guide_perfpack_eager\"/>\n  for a discussion of eager fetching.\n                 </para>\n             </section>\n@@ -2625,14 +2625,14 @@ OpenJPA recognizes the following field extensions.\n                 <para>\n This extension specifies how to eagerly fetch related objects. It overrides the\n global <link linkend=\"openjpa.jdbc.EagerFetchMode\"><literal>\n-openjpa.jdbc.EagerFetchMode</literal></link> property. <phrase>Set the JPA\n+openjpa.jdbc.EagerFetchMode</literal></link> property. Set the JPA\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/EagerFetchMode.html\">\n <classname>org.apache.openjpa.persistence.jdbc.EagerFetchMode</classname>\n </ulink> annotation to a value from the\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/EagerFetchType.html\">\n <classname>org.apache.openjpa.persistence.jdbc.EagerFetchType</classname>\n </ulink> enum: <literal>JOIN</literal>, <literal>PARALLEL</literal>, or\n-<literal>NONE</literal>.</phrase> See <xref linkend=\"ref_guide_perfpack_eager\"/>\n+<literal>NONE</literal>. See <xref linkend=\"ref_guide_perfpack_eager\"/>\n  for a discussion of eager fetching.\n                 </para>\n             </section>\n@@ -2877,12 +2877,11 @@ concrete strategies in the <literal>org.apache.openjpa.jdbc.meta.strats\n </literal> package.\n             </para>\n             <para>\n-<phrase>The\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/Strategy.html\">\n+The <ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/Strategy.html\">\n <classname>org.apache.openjpa.persistence.jdbc.Strategy</classname></ulink>\n annotation allows you to declare a custom class mapping strategy in JPA mapping\n metadata. Set the value of the annotation to the full class name of your custom\n-strategy.</phrase> You can configure your strategy class' bean properties using\n+strategy. You can configure your strategy class' bean properties using\n OpenJPA's plugin syntax, detailed in <xref linkend=\"ref_guide_conf_plugins\"/>\n .\n             </para>\n@@ -3028,10 +3027,10 @@ defaults in detail.\n                 <para>\n Your other option is to explicitly install a custom value handler or strategy on\n a particular field. To do so, specify the full name of your implementation class\n-in the proper mapping metadata extension. <phrase>OpenJPA includes the\n+in the proper mapping metadata extension. OpenJPA includes the\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/Strategy.html\">\n <classname>org.apache.openjpa.persistence.jdbc.Strategy</classname></ulink>\n-annotation.</phrase> You can configure the named strategy or handler's bean\n+annotation. You can configure the named strategy or handler's bean\n properties in these extensions using OpenJPA's plugin format (see\n <xref linkend=\"ref_guide_conf_plugins\"/> ).\n                 </para>"},{"sha":"83902b943b98e189bcbd49fa21398ed3c5bb4161","filename":"openjpa-project/src/doc/manual/ref_guide_meta.xml","status":"modified","additions":33,"deletions":257,"changes":290,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/ref_guide_meta.xml","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/ref_guide_meta.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_meta.xml?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -3,8 +3,8 @@\n         Metadata\n     </title>\n     <para>\n-The JPA Overview covers JPA metadata in <xref linkend=\"jpa_overview_meta\"/>\n-. This chapter discusses OpenJPA's extensions to standard JPA metadata.\n+The JPA Overview covers JPA metadata in <xref linkend=\"jpa_overview_meta\"/>. \n+This chapter discusses OpenJPA's extensions to standard JPA metadata.\n     </para>\n     <section id=\"ref_guide_meta_factory\">\n         <title>\n@@ -24,32 +24,35 @@ The JPA Overview covers JPA metadata in <xref linkend=\"jpa_overview_meta\"/>\n         <para>\n The <link linkend=\"openjpa.MetaDataFactory\"><literal>openjpa.MetaDataFactory\n </literal></link> configuration property controls metadata loading and storing.\n-This property takes a plugin string (see <xref linkend=\"ref_guide_conf_plugins\"/>\n-) describing a concrete\n+This property takes a plugin string (see \n+<xref linkend=\"ref_guide_conf_plugins\"/>) describing a concrete\n <ulink url=\"../apidocs/org/apache/openjpa/meta/MetaDataFactory.html\">\n <classname>org.apache.openjpa.meta.MetaDataFactory</classname></ulink>\n implementation. A metadata factory can load mapping information as well as\n persistence metadata, or it can leave mapping information to a separate\n <emphasis>mapping factory</emphasis> (see\n-<xref linkend=\"ref_guide_mapping_factory\"/> ). OpenJPA recognizes the\n+<xref linkend=\"ref_guide_mapping_factory\"/>). OpenJPA recognizes the\n following built-in metadata factories:\n         </para>\n         <itemizedlist>\n             <listitem>\n                 <para>\n <literal>jpa</literal>: Standard JPA metadata. This is an alias for the\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/PersistenceMetaDataFactory.html\">\n-<classname> org.apache.openjpa.persistence.PersistenceMetaDataFactory\n-</classname></ulink>.\n+<classname> \n+org.apache.openjpa.persistence.PersistenceMetaDataFactory</classname></ulink>.\n                 </para>\n             </listitem>\n         </itemizedlist>\n         <para>\n-The standard metadata factories all accept the following properties for locating\n-persistent classes. Each property represents a different mechanism for locating\n-persistent types; you can choose the mechanism or combination of mechanisms that\n-are most convenient. See <xref linkend=\"ref_guide_pc_pcclasses\"/> for a\n-discussion of when it is necessary to list your persistent classes.\n+JPA has built-in settings for listing your persistent classes, which \n+the <link linkend=\"jpa_overview_persistence_xml\">JPA Overview</link> describes.\n+OpenJPA supports these JPA standard settings by translating them into its own\n+internal metadata factory properties.  Each internal property represents a \n+different mechanism for locating persistent types; you can choose the mechanism\n+or combination of mechanisms that are most convenient. See \n+<xref linkend=\"ref_guide_pc_pcclasses\"/> for a discussion of when it is \n+necessary to list your persistent classes.\n         </para>\n         <itemizedlist>\n             <listitem>\n@@ -61,22 +64,22 @@ persistent class names.\n             <listitem>\n                 <para>\n <literal>Resources</literal>: A semicolon-separated list of resource paths to\n-metadata files or jar archives. Each jar archive will be scanned for <phrase>\n-annotated JPA entities</phrase>.\n+metadata files or jar archives. Each jar archive will be scanned for \n+annotated JPA entities.\n                 </para>\n             </listitem>\n             <listitem>\n                 <para>\n <literal>URLs</literal>: A semicolon-separated list of URLs of metadata files\n-or jar archives. Each jar archive will be scanned for <phrase>annotated JPA\n-entities</phrase>.\n+or jar archives. Each jar archive will be scanned for annotated JPA\n+entities.\n                 </para>\n             </listitem>\n             <listitem>\n                 <para>\n <literal>ClasspathScan</literal>: A semicolon-separated list of directories or\n jar archives listed in your classpath. Each directory and jar archive will be\n-scanned for <phrase>annotated JPA entities</phrase>.\n+scanned for annotated JPA entities.\n                 </para>\n             </listitem>\n         </itemizedlist>\n@@ -85,7 +88,7 @@ scanned for <phrase>annotated JPA entities</phrase>.\n                 Setting a Standard Metadata Factory\n             </title>\n <programlisting>\n-&lt;property name=\"openjpa.MetaDataFactory\" value=\"jpa\"/&gt;\n+&lt;property name=\"openjpa.MetaDataFactory\" value=\"jpa(ClasspathScan=build;lib.jar)\"/&gt;\n </programlisting>\n         </example>\n         <example id=\"ref_guide_meta_customfactoryex\">\n@@ -227,160 +230,6 @@ annotation exists. For example, <xref linkend=\"ref_guide_mapping_jpa_columns\"/>\n to denote a persistent <classname>java.awt.Point</classname> field.\n             </para>\n         </section>\n-        <section id=\"ref_guide_meta_jpa_persistent_coll\">\n-            <title>\n-                Persistent Collection Fields\n-            </title>\n-            <indexterm zone=\"ref_guide_meta_jpa_persistent_coll\">\n-                <primary>\n-                    persistent fields\n-                </primary>\n-                <secondary>\n-                    collection metadata\n-                </secondary>\n-            </indexterm>\n-            <para>\n-JPA standardizes support for collections of entities with the <literal>\n-OneToMany</literal> and <literal>ManyToMany</literal> persistence strategies.\n-OpenJPA expands collection support to handle collections of simple types\n-(primitive wrappers, <classname>String</classname> s, etc), custom types, and\n-embedded objects.\n-            </para>\n-            <para>\n-The\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/PersistentCollection.html\">\n-<classname>org.apache.openjpa.persistence.PersistentCollection</classname>\n-</ulink> metadata annotation represents a persistent collection field. It has\n-the following properties:\n-            </para>\n-            <itemizedlist>\n-                <listitem>\n-                    <para>\n-<literal>Class elementType</literal>: The class of the collection elements.\n-This information is usually taken from the parameterized collection element\n-type. You must supply it explicitly, however, if your field isn't a\n-parameterized type.\n-                    </para>\n-                </listitem>\n-                <listitem>\n-                    <para>\n-<literal>FetchType fetch</literal>: Whether to load the collection eagerly or\n-lazily. Corresponds exactly to the same-named property of standard JPA\n-annotations such as <link linkend=\"jpa_overview_meta_basic\"><classname> Basic\n-</classname></link>. Defaults to <literal>FetchType.LAZY</literal>.\n-                    </para>\n-                </listitem>\n-                <listitem>\n-                    <para>\n-<literal>String mappedBy</literal>: Names the field in the related entity that\n-maps this bidirectional relation. Corresponds to the same-named property of\n-standard JPA annotations such as <link linkend=\"jpa_overview_meta_manytomany\">\n-<classname> ManyToMany</classname></link>.\n-                    </para>\n-                </listitem>\n-                <listitem>\n-                    <para>\n-<literal>CascadeType[] elementCascade</literal>: Array of enum values defining\n-cascade behavior for the collection elements. Corresponds exactly to the\n-<literal>cascade</literal> property of standard JPA annotations such as\n-<link linkend=\"jpa_overview_meta_manytomany\"><classname>ManyToMany</classname>\n-</link>. Defaults to empty array.\n-                    </para>\n-                </listitem>\n-                <listitem>\n-                    <para>\n-<literal>boolean elementEmbedded</literal>: Set this property to <literal>true\n-</literal> if the elements are stored as embedded objects.\n-                    </para>\n-                </listitem>\n-            </itemizedlist>\n-            <para>\n-<xref linkend=\"ref_guide_mapping_jpa_coll\"/> contains several examples of\n-using <classname>PersistentCollection</classname> to mark non-standard\n-collection fields persistent.\n-            </para>\n-        </section>\n-        <section id=\"ref_guide_meta_jpa_persistent_map\">\n-            <title>\n-                Persistent Map Fields\n-            </title>\n-            <indexterm zone=\"ref_guide_meta_jpa_persistent_map\">\n-                <primary>\n-                    persistent fields\n-                </primary>\n-                <secondary>\n-                    map metadata\n-                </secondary>\n-            </indexterm>\n-            <para>\n-JPA has limited support for maps. OpenJPA introduces the\n-<ulink url=\"../apidocs/org/apache/openjpa/persistence/PersistentMap.html\">\n-<classname>org.apache.openjpa.persistence.PersistentMap</classname></ulink>\n-metadata annotation to represent a persistent map field. It has the following\n-properties:\n-            </para>\n-            <itemizedlist>\n-                <listitem>\n-                    <para>\n-<literal>Class keyType</literal>: The class of the map keys. This information\n-is usually taken from the parameterized map key type. You must supply it\n-explicitly, however, if your field isn't a parameterized type.\n-                    </para>\n-                </listitem>\n-                <listitem>\n-                    <para>\n-<literal>Class elementType</literal>: The class of the map values. This\n-information is usually taken from the parameterized map value type. You must\n-supply it explicitly, however, if your field isn't a parameterized type.\n-                    </para>\n-                </listitem>\n-                <listitem>\n-                    <para>\n-<literal>FetchType fetch</literal>: Whether to load the collection eagerly or\n-lazily. Corresponds exactly to the same-named property of standard JPA\n-annotations such as <link linkend=\"jpa_overview_meta_basic\"><classname> Basic\n-</classname></link>. Defaults to <literal>FetchType.LAZY</literal>.\n-                    </para>\n-                </listitem>\n-                <listitem>\n-                    <para>\n-<literal>CascadeType[] keyCascade</literal>: Array of enum values defining\n-cascade behavior for the map keys. Corresponds exactly to the <literal>cascade\n-</literal> property of standard JPA annotations such as\n-<link linkend=\"jpa_overview_meta_manytoone\"><classname>ManyToOne</classname>\n-</link>. Defaults to empty array.\n-                    </para>\n-                </listitem>\n-                <listitem>\n-                    <para>\n-<literal>CascadeType[] elementCascade</literal>: Array of enum values defining\n-cascade behavior for the map values. Corresponds exactly to the <literal>\n-cascade</literal> property of standard JPA annotations such as\n-<link linkend=\"jpa_overview_meta_manytoone\"><classname>ManyToOne</classname>\n-</link>. Defaults to empty array.\n-                    </para>\n-                </listitem>\n-                <listitem>\n-                    <para>\n-<literal>boolean keyEmbedded</literal>: Set this property to <literal>true\n-</literal> if the map keys are stored as embedded objects.\n-                    </para>\n-                </listitem>\n-                <listitem>\n-                    <para>\n-<literal>boolean elementEmbedded</literal>: Set this property to <literal>true\n-</literal> if the map values are stored as embedded objects.\n-                    </para>\n-                </listitem>\n-            </itemizedlist>\n-            <para>\n-Map keys and values in OpenJPA can be entities, simple types (primitive\n-wrappers, <classname>String</classname> s, etc), custom types, or embedded\n-objects. <xref linkend=\"ref_guide_mapping_jpa_map\"/> contains several\n-examples of using <classname>PersistentMap</classname> to annotate persistent\n-map fields.\n-            </para>\n-        </section>\n     </section>\n     <section id=\"ref_guide_meta_ext\">\n         <title>\n@@ -477,15 +326,6 @@ other properties are ignored.\n                     </listitem>\n                     <listitem>\n                         <para>\n-<literal>String name</literal>: Place data for instances of the class in a\n-named cache. By default, instance data is placed in the same cache as superclass\n-data, or the default cache configured through the\n-<link linkend=\"openjpa.DataCache\"><literal> openjpa.DataCache</literal></link>\n-configuration property for base classes.\n-                        </para>\n-                    </listitem>\n-                    <listitem>\n-                        <para>\n <literal>int timeout</literal>: The number of milliseconds data for the class\n remains valid. Use -1 for no timeout. Defaults to the\n <link linkend=\"openjpa.DataCacheTimeout\"><literal> openjpa.DataCacheTimeout\n@@ -669,74 +509,14 @@ annotation in particular.\n                     </seealso>\n                 </indexterm>\n                 <para>\n-This boolean extension, denoted by <phrase> the JPA\n+This boolean extension, denoted by the OpenJPA\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/LRS.html\"><classname>\n-org.apache.openjpa.persistence.LRS</classname></ulink> annotation,</phrase>\n+org.apache.openjpa.persistence.LRS</classname></ulink> annotation,\n indicates that a field should use OpenJPA's special large result set collection\n or map proxies. A complete description of large result set proxies is available\n in <xref linkend=\"ref_guide_pc_scos_proxy_lrs\"/>.\n                 </para>\n             </section>\n-            <section id=\"order-by\">\n-                <title>\n-                    Order-By\n-                </title>\n-                <indexterm zone=\"order-by\">\n-                    <primary>\n-                        metadata\n-                    </primary>\n-                    <secondary>\n-                        extensions\n-                    </secondary>\n-                    <tertiary>\n-                        order-by\n-                    </tertiary>\n-                </indexterm>\n-                <para>\n-<phrase> The JPA Overview's <xref linkend=\"jpa_overview_meta_orderby\"/>\n-describes JPA's <literal>OrderBy</literal> annotation for loading the elements\n-of collection fields in a prescribed order.</phrase> Ordering syntax is as\n-follows:\n-                </para>\n-<programlisting>\n-#element|&lt;field name&gt;[ asc|ascending|desc|descending][, ...]\n-</programlisting>\n-                <para>\n-The token <literal>#element</literal> represents the element value. Simple\n-element types such as strings and primitive wrappers are sorted based on their\n-natural ordering. If the collection holds persistent objects, its elements are\n-sorted based on the natural ordering of the objects' primary key values. By\n-substituting a field name for the <literal> #element</literal> token, you can\n-order a collection of persistent objects by an arbitrary field in the related\n-type, rather than by primary key.\n-                </para>\n-                <para>\n-The field name or <literal>#element</literal> token may be followed by the\n-keywords <literal>asc/ascending</literal> or <literal>desc/descending</literal>\n-in either all-upper or all-lower case to mandate ascending and descending order.\n-If the direction is omitted, OpenJPA defaults to ascending order.\n-                </para>\n-                <para>\n-Note that the defined ordering is only applied when the collection is loaded\n-from the datastore. It is not maintained by OpenJPA as you modify the collection\n-in memory.\n-                </para>\n-                <para>\n-The following ordering string orders a collection by its element values in\n-descending order:\n-                </para>\n-<programlisting>\n-\"#element desc\"\n-</programlisting>\n-                <para>\n-The following ordering string orders a collection of <classname>Author\n-</classname> objects by each author's last name in ascending order. If two last\n-names are equal, the authors are ordered by first name in ascending order.\n-                </para>\n-<programlisting>\n-\"firstName, lastName\"\n-</programlisting>\n-            </section>\n             <section id=\"inverse-logical\">\n                 <title>\n                     Inverse-Logical\n@@ -757,10 +537,10 @@ names are equal, the authors are ordered by first name in ascending order.\n                 </indexterm>\n                 <para>\n This extension names the inverse field in a logical bidirectional relation.\n-<phrase> To create a logical bidrectional relation in OpenJPA, use the\n+To create a logical bidrectional relation in OpenJPA, use the\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/InverseLogical.html\">\n <classname>org.apache.openjpa.persistence.InverseLogical</classname></ulink>\n-annotation.</phrase> We discuss logical bidirectional relations and this\n+annotation. We discuss logical bidirectional relations and this\n extension in detail in <xref linkend=\"ref_guide_inverses\"/>.\n                 </para>\n             </section>\n@@ -798,7 +578,7 @@ existing persistent objects; new object fields are always writeable.\n To mark a field read-only in JPA metadata, set the\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/ReadOnly.html\">\n <classname>org.apache.openjpa.persistence.ReadOnly</classname></ulink>\n-annotation to a\n+annotation to an\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/UpdateAction.html\">\n <classname>org.apache.openjpa.persistence.UpdateAction</classname></ulink> enum\n value. The <classname>UpdateAction</classname> enum includes:\n@@ -876,7 +656,7 @@ non-interface, unrecognized field types, which are all assigned level 3 support.\n                 <para>\n With OpenJPA's type family of metadata extensions, you can control the level of\n support given to your unknown/interface-typed fields. Setting the value of this\n-extension to <phrase><classname>Entity</classname></phrase> indicates that the\n+extension to <classname>Entity</classname> indicates that the\n field value will always be some persistent object, and gives level 2 support.\n Setting the value of this extension to the class of a concrete persistent type\n is even better; it gives you level 1 support (just as if you had declared your\n@@ -934,10 +714,10 @@ org.apache.openjpa.persistence.KeyType</classname></ulink>\n                     </seealso>\n                 </indexterm>\n                 <para>\n-The <phrase> JPA\n+The OpenJPA\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/Externalizer.html\">\n <classname>org.apache.openjpa.persistence.Externalizer</classname></ulink>\n-annotation</phrase> names a method to transform a field value into a value of\n+annotation names a method to transform a field value into a value of\n another type. See <xref linkend=\"ref_guide_pc_extern\"/> for details.\n                 </para>\n             </section>\n@@ -960,9 +740,9 @@ another type. See <xref linkend=\"ref_guide_pc_extern\"/> for details.\n                     </seealso>\n                 </indexterm>\n                 <para>\n-The <phrase> JPA\n+The OpenJPA\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/Factory.html\"><classname>\n-org.apache.openjpa.persistence.Factory</classname></ulink> annotation</phrase>\n+org.apache.openjpa.persistence.Factory</classname></ulink> annotation\n names a method to re-create a field value from its externalized form. See\n <xref linkend=\"ref_guide_pc_extern\"/> for details.\n                 </para>\n@@ -986,10 +766,10 @@ names a method to re-create a field value from its externalized form. See\n                     </seealso>\n                 </indexterm>\n                 <para>\n-The <phrase> JPA\n+The OpenJPA\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/ExternalValues.html\">\n <classname>org.apache.openjpa.persistence.ExternalValues</classname></ulink>\n-annotation</phrase> declares values for transformation of simple fields to\n+annotation declares values for transformation of simple fields to\n different constant values in the datastore. See\n <xref linkend=\"ref_guide_pc_extern_values\"/> for details.\n                 </para>\n@@ -1021,10 +801,6 @@ public class Magazine\n     @Type(int.class)\n     private boolean weekly;\n \n-    @PersistentCollection\n-    @OrderBy(\"#element DESC\")\n-    private List&lt;String&gt; subtitles;\n-\n     ...\n }\n </programlisting>"},{"sha":"94024aea5277b1810131ca14452790c9bf656e3d","filename":"openjpa-project/src/doc/manual/ref_guide_optimization.xml","status":"modified","additions":5,"deletions":7,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/ref_guide_optimization.xml","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/ref_guide_optimization.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_optimization.xml?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -186,12 +186,10 @@ or deletes.\n           flushes during your transaction to reduce its memory \n           requirements.  See the Javadoc:\n           \n-                        <phrase>\n-                            <ulink url=\"javadoc/openjpa/persistence/OpenJPAEntityManager.html\">\n+                        <ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n                                 \n           OpenJPAEntityManager.setLargeTransaction\n-                            </ulink>\n-                        </phrase>\n+                        </ulink>\n                         \n           \n           \n@@ -203,9 +201,9 @@ If your transaction will visit objects that you know are very unlikely to be\n accessed by other transactions, for example an exhaustive report run only once a\n month, you can turn off population of the data cache so that the transaction\n doesn't fill the entire data cache with objects that won't be accessed again.\n-Again, see the Javadoc: <phrase>\n-<ulink url=\"javadoc/openjpa/persistence/OpenJPAEntityManager.html\">\n-OpenJPAEntityManager.setPopulateDataCache</ulink></phrase>\n+Again, see the Javadoc: \n+<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n+OpenJPAEntityManager.setPopulateDataCache</ulink>\n                         </para>\n                     </entry>\n                 </row>"},{"sha":"e7f21f0cc6f113e9d1e6904854d8934c6bf4246e","filename":"openjpa-project/src/doc/manual/ref_guide_pc.xml","status":"modified","additions":158,"deletions":252,"changes":410,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/ref_guide_pc.xml","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/ref_guide_pc.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_pc.xml?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -57,14 +57,14 @@ may return incorrect results.\n             <listitem>\n                 <para>\n If you configure OpenJPA to create the needed database schema on startup (see\n-<xref linkend=\"ref_guide_mapping_synch\"/> ), OpenJPA must know all of your\n+<xref linkend=\"ref_guide_mapping_synch\"/>), OpenJPA must know all of your\n persistent classes up-front.\n                 </para>\n             </listitem>\n         </itemizedlist>\n         <para>\n When any of these conditions are a factor in your JPA application, use the\n-<literal>class</literal>, <literal> mapping-file</literal>, and <literal>\n+<literal>class</literal>, <literal>mapping-file</literal>, and <literal>\n jar-file</literal> elements of JPA's standard XML format to list your persistent\n classes. See <xref linkend=\"jpa_overview_persistence_xml\"/> for details.\n         </para>\n@@ -101,20 +101,19 @@ persistent classes after you have written them. The enhancer post-processes the\n bytecode generated by your Java compiler, adding the necessary fields and\n methods to implement the required persistence features. This bytecode\n modification perfectly preserves the line numbers in stack traces and is\n-compatible with Java debuggers. <phrase> In fact, the only change to debugging\n+compatible with Java debuggers. In fact, the only change to debugging\n is that the persistent setter and getter methods of entity classes using\n property access will be prefixed with <literal>pc</literal> in stack traces and\n step-throughs. For example, if your entity has a <methodname>getId</methodname>\n method for persistent property <literal>id</literal>, and that method throws an\n exception, the stack trace will report the exception from method <methodname>\n pcgetId</methodname>. The line numbers, however, will correctly correspond to\n-the <methodname>getId</methodname> method in your source file.</phrase>\n+the <methodname>getId</methodname> method in your source file.\n         </para>\n         <mediaobject>\n             <imageobject>\n                 <!-- PNG image data, 509 x 133 (see README) -->\n                 <imagedata fileref=\"img/enhancement.png\" width=\"339px\"/>\n-\n             </imageobject>\n         </mediaobject>\n         <para>\n@@ -139,13 +138,13 @@ are loaded into the JVM. The following sections describe each option.\n             </indexterm>\n             <para>\n The enhancer can be invoked at build time \n-via the Java tool,\n-<classname>org.apache.openjpa.enhance.PCEnhancer</classname>.\n+via its Java class, <classname>\n+org.apache.openjpa.enhance.PCEnhancer</classname>.\n             </para>\n             <note>\n                 <para>\n-You can also enhance via Ant; see <xref linkend=\"ref_guide_integration_enhance\"/>\n-.\n+You can also enhance via Ant; see \n+<xref linkend=\"ref_guide_integration_enhance\"/>.\n                 </para>\n             </note>\n             <example id=\"ref_guide_pc_enhance_enhancer\">\n@@ -182,8 +181,8 @@ not obeying the restrictions placed on property access. Defaults to false.\n <literal>-addDefaultConstructor/-adc &lt;true/t | false/f&gt;</literal>: The\n spec requires that all persistent classes define a no-arg constructor. This flag\n tells the enhancer whether to add a protected no-arg constructor to any\n-persistent classes that don't already have one. Defaults to <literal>true\n-</literal>.\n+persistent classes that don't already have one. Defaults to <literal>\n+true</literal>.\n                     </para>\n                 </listitem>\n                 <listitem>\n@@ -218,8 +217,7 @@ The <filename>.class</filename> file of a class.\n             </itemizedlist>\n             <para>\n If you do not supply any arguments to the enhancer, it will run on the classes\n-in your persistent class list (see <xref linkend=\"ref_guide_pc_pcclasses\"/>\n- ).\n+in your persistent class list (see <xref linkend=\"ref_guide_pc_pcclasses\"/>).\n             </para>\n             <para>\n You can run the enhancer over classes that have already been enhanced, in which\n@@ -286,38 +284,30 @@ are invoked prior to your application's <methodname>main</methodname> method.\n OpenJPA's agent uses JVM hooks to intercept all class loading to enhance classes\n that have persistence metadata before the JVM loads them.\n             </para>\n-            <note>\n-                <para>\n-Java agents are new to Java 5; if you are using a previous Java version, you\n-must use OpenJPA's <link linkend=\"ref_guide_pc_enhance_build\">build-time\n-enhancement</link> option.\n-                </para>\n-            </note>\n             <para>\n Searching for metadata for every class loaded by the JVM can slow application\n initialization. One way to speed things up is to take advantage of the optional\n-persistent class list described in <xref linkend=\"ref_guide_pc_pcclasses\"/>\n-. If you declare a persistent class list, OpenJPA will only search for\n+persistent class list described in <xref linkend=\"ref_guide_pc_pcclasses\"/>. If\n+you declare a persistent class list, OpenJPA will only search for\n metadata for classes in that list.\n             </para>\n             <para>\n To employ the OpenJPA agent, invoke <literal>java</literal> with the <literal>\n--javaagent</literal> set to the path to your <filename>org.apache.openjpa.jar\n-</filename> or <filename>openjpa-runtime.jar</filename> file.\n+-javaagent</literal> set to the path to your OpenJPA jar file.\n             </para>\n             <example id=\"ref_guide_pc_enhance_runtime_ex\">\n                 <title>\n                     Using the OpenJPA Agent for Runtime Enhancement\n                 </title>\n <programlisting>\n-java -javaagent:/home/dev/openjpa/lib/org.apache.openjpa.jar com.xyz.Main\n+java -javaagent:/home/dev/openjpa/lib/openjpa.jar com.xyz.Main\n </programlisting>\n             </example>\n             <para>\n You can pass settings to the agent using OpenJPA's plugin syntax (see\n-<xref linkend=\"ref_guide_conf_plugins\"/> ). The agent accepts the long\n-form of any of the standard configuration options (\n-<xref linkend=\"ref_guide_conf_devtools\"/> ). It also accepts the following\n+<xref linkend=\"ref_guide_conf_plugins\"/>). The agent accepts the long\n+form of any of the standard configuration options \n+(<xref linkend=\"ref_guide_conf_devtools\"/> ). It also accepts the following\n options, the first three of which correspond exactly to to the same-named\n options of the enhancer tool described in\n <xref linkend=\"ref_guide_pc_enhance_build\"/>:\n@@ -330,11 +320,6 @@ options of the enhancer tool described in\n                 </listitem>\n                 <listitem>\n                     <para>\n-<literal>jdoEnhance</literal>\n-                    </para>\n-                </listitem>\n-                <listitem>\n-                    <para>\n <literal>enforcePropertyRestrictions</literal>\n                     </para>\n                 </listitem>\n@@ -353,7 +338,7 @@ accordingly. This may slow down class load times significantly.\n                     Passing Options to the OpenJPA Agent\n                 </title>\n <programlisting>\n-java -javaagent:/home/dev/openjpa/lib/org.apache.openjpa.jar=jdoEnhance=true,addDefaultConstructor=false com.xyz.Main\n+java -javaagent:/home/dev/openjpa/lib/openjpa.jar=addDefaultConstructor=false com.xyz.Main\n </programlisting>\n             </example>\n         </section>\n@@ -420,7 +405,7 @@ described in <xref linkend=\"jpa_overview_meta_id\"/> of the JPA Overview.\n         </para>\n         <para>\n To retrieve the identity value of a datastore identity entity, use the\n-<methodname>OpenJPAEntityManager.getObjectId (Object entity)</methodname>\n+<methodname>OpenJPAEntityManager.getObjectId(Object entity)</methodname>\n method. See <xref linkend=\"ref_guide_runtime_em\"/> for more information on\n the <classname>OpenJPAEntityManager</classname>.\n         </para>\n@@ -433,8 +418,8 @@ import org.apache.openjpa.persistence.*;\n \n @Entity\n @DataStoreId\n-public class LineItem\n-{\n+public class LineItem {\n+\n     ... no @Id fields declared ...\n }\n </programlisting>\n@@ -491,7 +476,7 @@ record.\n             </indexterm>\n             <para>\n If you choose to use application identity, you may want to take advantage of\n-OpenJPA <phrase>JPA</phrase>'s application identity tool. The application\n+OpenJPA's application identity tool. The application\n identity tool generates Java code implementing the identity class for any\n persistent type using application identity. The code satisfies all the\n requirements the specification places on identity classes. You can use it as-is,\n@@ -513,7 +498,7 @@ generated identity class. Once the application identity tool has generated the\n class code, you can set the <literal>@IdClass</literal> annotation.\n             </para>\n             <para>\n-The application identity tool can be invoked via the Java class,\n+The application identity tool can be invoked via its Java class,\n <ulink url=\"../apidocs/org/apache/openjpa/enhance/ApplicationIdTool\">\n <classname>org.apache.openjpa.enhance.ApplicationIdTool</classname></ulink>.\n             </para>\n@@ -534,7 +519,7 @@ java org.apache.openjpa.enhance.ApplicationIdTool -s Id Magazine.java\n             <para>\n The application identity tool accepts the standard set of command-line arguments\n defined by the configuration framework (see\n-<xref linkend=\"ref_guide_conf_devtools\"/> ), including code formatting\n+<xref linkend=\"ref_guide_conf_devtools\"/>), including code formatting\n flags described in <xref linkend=\"ref_guide_conf_devtools_format\"/>. It\n also accepts the following arguments:\n             </para>\n@@ -605,8 +590,7 @@ The <filename>.class</filename> file of a persistent class.\n             </itemizedlist>\n             <para>\n If you do not supply any arguments to the tool, it will act on the classes in\n-your persistent classes list (see <xref linkend=\"ref_guide_pc_pcclasses\"/>\n-).\n+your persistent classes list (see <xref linkend=\"ref_guide_pc_pcclasses\"/>).\n             </para>\n         </section>\n         <section id=\"ref_guide_pc_oid_pkgen_autoinc\">\n@@ -666,14 +650,6 @@ non-primary key auto-increment columns, and may allow more than one per table.\n See your database documentation for details.\n                     </para>\n                 </listitem>\n-                <listitem>\n-                    <para>\n-Statements inserting into tables with auto-increment / identity columns cannot\n-be batched. After each insert, OpenJPA must go back to the database to retrieve\n-the last inserted auto-increment value to set back in the persistent object.\n-This can have a negative impact on performance.\n-                    </para>\n-                </listitem>\n             </orderedlist>\n         </section>\n     </section>\n@@ -696,11 +672,10 @@ use the <literal>mappedBy</literal> annotation attribute to form bidirectional\n relations that also share datastore storage in JPA.\n         </para>\n         <para>\n-OpenJPA also allows you to define purely logical bidirectional relations.\n-<phrase> The\n+OpenJPA also allows you to define purely logical bidirectional relations.  The\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/InverseLogical.html\">\n <classname>org.apache.openjpa.persistence.InverseLogical</classname></ulink>\n-annotation names a logical inverse in JPA metadata.</phrase>\n+annotation names a logical inverse in JPA metadata.\n         </para>\n         <example id=\"ref_guide_inverses_logicalex\">\n             <title>\n@@ -717,35 +692,23 @@ inverse of both fields.\n import org.apache.openjpa.persistence.*;\n \n @Entity\n-public class Magazine\n-{\n+public class Magazine {\n+\n     @OneToOne\n     private Photograph coverPhoto;\n \n     ...\n }\n \n @Entity\n-public class Photograph\n-{\n+public class Photograph {\n+\n     @OneToOne\n     @InverseLogical(\"coverPhoto\")\n     private Magazine mag;\n \n     ...\n }\n-</programlisting>\n-<programlisting>\n-&lt;class name=\"Magazine\"&gt;\n-    &lt;field name=\"coverPhoto\"/&gt;\n-    ...\n-&lt;/class&gt;\n-&lt;class name=\"Photograph\"&gt;\n-    &lt;field name=\"mag\"&gt;\n-        &lt;extension vendor-name=\"openjpa\" key=\"inverse-logical\" value=\"coverPhoto\"/&gt;\n-    &lt;/field&gt;\n-    ...\n-&lt;/class&gt;\n </programlisting>\n         </example>\n         <para>\n@@ -878,19 +841,18 @@ employeesBySal</literal> and <literal>departments</literal> are persistent\n fields in the class below.\n                 </para>\n <programlisting>\n-public class Company\n-{\n+public class Company {\n+\n     // OpenJPA will detect the custom comparator in the initial field value\n     // and use it whenever loading data from the database into this field\n-    private Collection employeesBySal = new TreeSet (new SalaryComparator ());\n+    private Collection employeesBySal = new TreeSet(new SalaryComparator());\n     private Map departments;\n \n-    public Company\n-    {\n+    public Company {\n         // or we can initialize fields in our no-args constructor; even though\n-        // this field is declared type Map, OpenJPA will detect that it's actually\n-        // a TreeMap and use natural ordering for loaded data\n-        departments = new TreeMap ();\n+        // this field is declared type Map, OpenJPA will detect that it's \n+        // actually a TreeMap and use natural ordering for loaded data\n+        departments = new TreeMap();\n     }\n \n     // rest of class definition...\n@@ -978,7 +940,7 @@ OpenJPA smart proxies by using fields of type <classname>java.util.Set\n </classname>, <classname>java.util.TreeSet</classname>, and <classname>\n java.util.HashSet</classname> for your collections whenever possible. Smart\n proxies for these types are more efficient than proxies for <classname>List\n-</classname> s. You can also design your own smart proxies to further optimize\n+</classname>s. You can also design your own smart proxies to further optimize\n OpenJPA for your usage patterns. See the section on\n <link linkend=\"ref_guide_pc_scos_proxy_custom\">custom proxies</link> for\n details.\n@@ -1019,7 +981,7 @@ large result set collection will perform a <literal> SELECT COUNT(*)</literal>\n query with the proper <literal>WHERE</literal> conditions to find out if the\n given element exists in the database's record of the collection. Similarly, each\n time you obtain an iterator OpenJPA performs the proper query using the current\n-<link linkend=\"ref_guide_dbsetup_lrs\"> large result set settings</link>, as\n+<link linkend=\"ref_guide_dbsetup_lrs\">large result set settings</link>, as\n discussed in the <link linkend=\"ref_guide_dbsetup\">JDBC</link> chapter. As you\n invoke <methodname>Iterator.next</methodname>, OpenJPA instantiates the result\n objects on-demand.\n@@ -1038,11 +1000,11 @@ import org.apache.openjpa.persistence.*;\n \n ...\n \n-Collection employees = company.getEmployees (); // employees is a lrs collection\n-Iterator itr = employees.iterator ();\n-while (itr.hasNext ())\n-    process ((Employee) itr.next ());\n-OpenJPAPersistence.close (itr);\n+Collection employees = company.getEmployees(); // employees is a lrs collection\n+Iterator itr = employees.iterator();\n+while (itr.hasNext())\n+    process((Employee) itr.next());\n+OpenJPAPersistence.close(itr);\n </programlisting>\n                 </example>\n                 <para>\n@@ -1052,10 +1014,10 @@ which it uses to make sure the proper results are always returned from\n collection and map methods, and to update the field's database record on commit.\n                 </para>\n                 <para>\n-<phrase> In order to use large result set proxies in JPA, add the\n+In order to use large result set proxies in JPA, add the\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/LRS.html\"><classname>\n org.apache.openjpa.persistence.LRS</classname></ulink> annotation to the\n-persistent field.</phrase>\n+persistent field.\n                 </para>\n                 <para>\n The following restrictions apply to large result set fields:\n@@ -1071,8 +1033,8 @@ concrete collection or map class.\n                     </listitem>\n                     <listitem>\n                         <para>\n-The field cannot have an externalizer (see <xref linkend=\"ref_guide_pc_extern\"/>\n- ).\n+The field cannot have an externalizer (see \n+<xref linkend=\"ref_guide_pc_extern\"/>).\n                         </para>\n                     </listitem>\n                     <listitem>\n@@ -1082,9 +1044,9 @@ cannot be transferred from one persistent field to another. The following code\n would result in an error on commit:\n                         </para>\n <programlisting>\n-Collection employees = company.getEmployees ()  // employees is a lrs collection\n-company.setEmployees (null);\n-anotherCompany.setEmployees (employees);\n+Collection employees = company.getEmployees()  // employees is a lrs collection\n+company.setEmployees(null);\n+anotherCompany.setEmployees(employees);\n </programlisting>\n                     </listitem>\n                 </itemizedlist>\n@@ -1096,8 +1058,8 @@ anotherCompany.setEmployees (employees);\n import org.apache.openjpa.persistence.*;\n \n @Entity\n-public class Company\n-{\n+public class Company {\n+\n     @ManyToMany\n     @LRS private Collection&lt;Employee&gt; employees;\n \n@@ -1132,7 +1094,7 @@ OpenJPA manages proxies through the\n org.apache.openjpa.util.ProxyManager</classname></ulink> interface. OpenJPA\n includes a default proxy manager, the <classname>\n org.apache.openjpa.util.ProxyManagerImpl</classname> (with a plugin alias name\n-of <literal>default</literal> ), that will meet the needs of most users. The\n+of <literal>default</literal>), that will meet the needs of most users. The\n default proxy manager understands the following configuration properties:\n                 </para>\n                 <itemizedlist>\n@@ -1203,10 +1165,10 @@ JPA cannot have externalizers.\n                 </para>\n             </note>\n             <para>\n-The <phrase> JPA\n+The OpenJPA\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/Externalizer.html\">\n <classname>org.apache.openjpa.persistence.Externalizer</classname></ulink>\n-annotation</phrase> sets the name of a method that will be invoked to convert\n+annotation sets the name of a method that will be invoked to convert\n the field into its external form for database storage. You can specify either\n the name of a non-static method, which will be invoked on the field value, or a\n static method, which will be invoked with the field value as a parameter. Each\n@@ -1235,85 +1197,69 @@ their corresponding metadata extensions.\n                     <thead>\n                         <row>\n                             <entry colname=\"method\">\n-                                Method\n+Method\n                             </entry>\n                             <entry colname=\"extension\">\n-                                Extension\n+Extension\n                             </entry>\n                         </row>\n                     </thead>\n                     <tbody>\n                         <row>\n                             <entry colname=\"method\">\n                                 <literal>\n-\n-              public String CustomType.toString()\n-\n+public String CustomType.toString()\n                                 </literal>\n                             </entry>\n                             <entry colname=\"extension\">\n                                 <literal>\n-\n-              @Externalizer(\"toString\")\n-\n+@Externalizer(\"toString\")\n                                 </literal>\n                             </entry>\n                         </row>\n                         <row>\n                             <entry colname=\"method\">\n                                 <literal>\n-\n-              public String CustomType.toString(StoreContext ctx)\n-\n+public String CustomType.toString(StoreContext ctx)\n                                 </literal>\n                             </entry>\n                             <entry colname=\"extension\">\n                                 <literal>\n-\n-              @Externalizer(\"toString\")\n-\n+@Externalizer(\"toString\")\n                                 </literal>\n                             </entry>\n                         </row>\n                         <row>\n                             <entry colname=\"method\">\n                                 <literal>\n-\n-              public static String AnyClass.toString(CustomType ct)\n-\n+public static String AnyClass.toString(CustomType ct)\n                                 </literal>\n                             </entry>\n                             <entry colname=\"extension\">\n                                 <literal>\n-\n-              @Externalizer(\"AnyClass.toString\")\n-\n+@Externalizer(\"AnyClass.toString\")\n                                 </literal>\n                             </entry>\n                         </row>\n                         <row>\n                             <entry colname=\"method\">\n                                 <literal>\n-\n-              public static String AnyClass.toString(CustomType ct, StoreContext ctx)\n-\n+public static String AnyClass.toString(CustomType ct, StoreContext ctx)\n                                 </literal>\n                             </entry>\n                             <entry colname=\"extension\">\n                                 <literal>\n-\n-              @Externalizer(\"AnyClass.toString\")\n-\n+@Externalizer(\"AnyClass.toString\")\n                                 </literal>\n                             </entry>\n                         </row>\n                     </tbody>\n                 </tgroup>\n             </table>\n             <para>\n-The <phrase> JPA\n+The OpenJPA\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/Factory.html\"><classname>\n-org.apache.openjpa.persistence.Factory</classname></ulink> annotation</phrase>\n+org.apache.openjpa.persistence.Factory</classname></ulink> annotation\n contains the name of a method that will be invoked to instantiate the field from\n the external form stored in the database. Specify a static method name. The\n method will will be invoked with the externalized value and must return an\n@@ -1335,95 +1281,73 @@ corresponding metadata extensions.\n                 </title>\n                 <tgroup cols=\"2\" align=\"left\" colsep=\"1\" rowsep=\"1\">\n                     <colspec colname=\"method\"/>\n-\n                     <colspec colname=\"extension\"/>\n-\n                     <thead>\n                         <row>\n                             <entry colname=\"method\">\n-                                Method\n+Method\n                             </entry>\n                             <entry colname=\"extension\">\n-                                Extension\n+Extension\n                             </entry>\n                         </row>\n                     </thead>\n                     <tbody>\n                         <row>\n                             <entry colname=\"method\">\n                                 <literal>\n-\n-              public CustomType(String str)\n-\n+public CustomType(String str)\n                                 </literal>\n                             </entry>\n                             <entry colname=\"extension\">\n-\n-              none\n-\n+none\n                             </entry>\n                         </row>\n                         <row>\n                             <entry colname=\"method\">\n                                 <literal>\n-\n-              public static CustomType CustomType.fromString(String str)\n-\n+public static CustomType CustomType.fromString(String str)\n                                 </literal>\n                             </entry>\n                             <entry colname=\"extension\">\n                                 <literal>\n-\n-              @Factory(\"fromString\")\n-\n+@Factory(\"fromString\")\n                                 </literal>\n                             </entry>\n                         </row>\n                         <row>\n                             <entry colname=\"method\">\n                                 <literal>\n-\n-              public static CustomType CustomType.fromString(String str, StoreContext ctx)\n-\n+public static CustomType CustomType.fromString(String str, StoreContext ctx)\n                                 </literal>\n                             </entry>\n                             <entry colname=\"extension\">\n                                 <literal>\n-\n-              @Factory(\"fromString\")\n-\n+@Factory(\"fromString\")\n                                 </literal>\n                             </entry>\n                         </row>\n                         <row>\n                             <entry colname=\"method\">\n                                 <literal>\n-\n-              public static CustomType AnyClass.fromString(String str)\n-\n+public static CustomType AnyClass.fromString(String str)\n                                 </literal>\n                             </entry>\n                             <entry colname=\"extension\">\n                                 <literal>\n-\n-              @Factory(\"AnyClass.fromString\")\n-\n+@Factory(\"AnyClass.fromString\")\n                                 </literal>\n                             </entry>\n                         </row>\n                         <row>\n                             <entry colname=\"method\">\n                                 <literal>\n-\n-              public static CustomType AnyClass.fromString(String str, StoreContext ctx)\n-\n+public static CustomType AnyClass.fromString(String str, StoreContext ctx)\n                                 </literal>\n                             </entry>\n                             <entry colname=\"extension\">\n                                 <literal>\n-\n-              @Factory(\"AnyClass.fromString\")\n-\n+@Factory(\"AnyClass.fromString\")\n                                 </literal>\n                             </entry>\n                         </row>\n@@ -1432,24 +1356,19 @@ corresponding metadata extensions.\n             </table>\n             <para>\n If your externalized field is not a standard persistent type, you must\n-explicitly mark it persistent. <phrase> In JPA, you can force a persistent field\n+explicitly mark it persistent. In OpenJPA, you can force a persistent field\n by annotating it with <link linkend=\"ref_guide_meta_jpa_persistent\"><classname>\n org.apache.openjpa.persistence.Persistent</classname></link> annotation.\n-</phrase>\n             </para>\n             <note>\n                 <para>\n If your custom field type is mutable and is not a standard collection, map, or\n date class, OpenJPA will not be able to detect changes to the field. You must\n-mark the field dirty manully, or create a custom field proxy.\n-                </para>\n-                <para>\n-<phrase> See\n-<ulink url=\"../../api/openjpa/persistence/OpenJPAEntityManager.html\">\n+mark the field dirty manually, or create a custom field proxy.\n+See\n+<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n <methodname>OpenJPAEntityManager.dirty</methodname></ulink> for how to mark a\n-field dirty manually in JPA.</phrase>\n-                </para>\n-                <para>\n+field dirty manually in JPA.\n See <xref linkend=\"ref_guide_pc_scos_proxy\"/> for a discussion of proxies.\n                 </para>\n             </note>\n@@ -1458,13 +1377,13 @@ You can externalize a field to virtually any value that is supported by\n OpenJPA's field mappings (embedded relations are the exception; you must declare\n your field to be a persistence-capable type in order to embed it). This means\n that a field can externalize to something as simple as a primitive, something as\n-complex as a collection or map of persistence-capable objects, or anything in\n+complex as a collection or map of entities, or anything in\n between. If you do choose to externalize to a collection or map, OpenJPA\n recognizes a family of metadata extensions for specying type information for the\n externalized form of your fields - see <xref linkend=\"type\"/>. If the\n-external form of your field is a persistence-capable object, or contains\n-persistence-capable objects, OpenJPA will correctly include the objects in its\n-persistence-by-reachability algorithms and its delete-dependent algorithms.\n+external form of your field is an entity object or contains entities, OpenJPA \n+will correctly include the objects in its persistence-by-reachability \n+algorithms and its delete-dependent algorithms.\n             </para>\n             <para>\n The example below demonstrates a few forms of externalization.\n@@ -1477,8 +1396,8 @@ The example below demonstrates a few forms of externalization.\n import org.apache.openjpa.persistence.*;\n \n @Entity\n-public class Magazine\n-{\n+public class Magazine {\n+\n     // use Class.getName and Class.forName to go to/from strings\n     @Persistent\n     @Externalizer(\"getName\")\n@@ -1491,22 +1410,19 @@ public class Magazine\n     @Externalizer(\"toExternalForm\")\n     private URL url;\n \n-    // use our custom methods; notice how we use the KeyType and ElementType\n-    // annotations to specify the metadata for our externalized map\n+    // use our custom methods\n     @Persistent\n-    @Externalizer(\"Magazine.mapFromCustomType\")\n-    @Factory(\"Magazine.mapToCustomType\")\n-    @KeyType(String.class) @ElementType(String.class)\n+    @Externalizer(\"Magazine.authorsFromCustomType\")\n+    @Factory(\"Magazine.authorsToCustomType\")\n+    @ElementType(Author.class)\n     private CustomType customType;\n \n-    public static Map mapFromCustomType (CustomType customType)\n-    {\n-        ... logic to pack custom type into a map ...\n+    public static Collection authorsFromCustomType(CustomType customType) {\n+        ... logic to pack custom type into a list of authors ...\n     }\n \n-    public static CustomType mapToCustomType (Map map)\n-    {\n-        ... logic to create custom type from a map ...\n+    public static CustomType authorsToCustomType (Collection authors) {\n+        ... logic to create custom type from a collection of authors ...\n     }\n \n     ...\n@@ -1545,13 +1461,13 @@ previous example.\n                 </para>\n <programlisting>\n // you can query using parameters\n-Query q = em.createQuery (\"select m from Magazine m where m.url = :u\");\n-q.setParameter (\"u\", new URL (\"http://www.solarmetric.com\"));\n-List results = q.getResultList ();\n+Query q = em.createQuery(\"select m from Magazine m where m.url = :u\");\n+q.setParameter(\"u\", new URL(\"http://www.solarmetric.com\"));\n+List results = q.getResultList();\n \n // or as a shortcut, you can use the externalized form directly\n-q = em.createQuery (\"select m from Magazine m where m.url = 'http://www.solarmetric.com'\");\n-results = q.getResultList ();\n+q = em.createQuery(\"select m from Magazine m where m.url = 'http://www.solarmetric.com'\");\n+results = q.getResultList();\n </programlisting>\n             </example>\n             <section id=\"ref_guide_pc_extern_values\">\n@@ -1581,10 +1497,10 @@ External values supports translation of pre-defined simple types (primitives,\n primitive wrappers, and Strings), to other pre-defined simple values.\n                 </para>\n                 <para>\n-Use the <phrase> JPA\n+Use the OpenJPA\n <ulink url=\"../apidocs/org/apache/openjpa/persistence/ExternalValues.html\">\n <classname>org.apache.openjpa.persistence.ExternalValues</classname></ulink>\n-annotation</phrase> to define external value translations. The values are\n+annotation to define external value translations. The values are\n defined in a format similar to that of <link linkend=\"ref_guide_conf_plugins\">\n configuration plugins</link>, except that the value pairs represent Java and\n datastore values. To convert the Java boolean values of <literal>true</literal>\n@@ -1594,9 +1510,9 @@ true=T,false=F</literal>.\n                 </para>\n                 <para>\n If the type of the datastore value is different from the field's type, use the\n-<phrase> JPA <ulink url=\"../apidocs/org/apache/openjpa/persistence/Type.html\">\n+<ulink url=\"../apidocs/org/apache/openjpa/persistence/Type.html\">\n <classname>org.apache.openjpa.persistence.Type</classname></ulink> annotation\n-</phrase> to define the datastore type.\n+to define the datastore type.\n                 </para>\n                 <example id=\"externvalues_ex\">\n                     <title>\n@@ -1607,8 +1523,8 @@ This example uses external value translation to transform a string field to an\n integer in the database.\n                     </para>\n <programlisting>\n-public class Magazine\n-{\n+public class Magazine {\n+\n     @ExternalValues({\"SMALL=5\", \"MEDIUM=8\", \"LARGE=10\"})\n     @Type(int.class)\n     private String sizeWidth;\n@@ -1746,8 +1662,7 @@ import org.apache.openjpa.persistence.*;\n     }),\n     ...\n })\n-public class Magazine\n-{\n+public class Magazine {\n    ...\n }\n </programlisting>\n@@ -1787,8 +1702,8 @@ import org.apache.openjpa.persistence.*;\n     }),\n     ...\n })\n-public class Magazine\n-{\n+public class Magazine {\n+\n    @ManyToOne(fetch=FetchType.LAZY)\n    @LoadFetchGroup(\"detail\")\n    private Publisher publisher;\n@@ -1844,25 +1759,25 @@ the fetch depth to something less than the configured maximum.\n OpenJPA's <classname>OpenJPAEntityManager</classname> and <classname>\n OpenJPAQuery</classname> extensions to the standard <classname>EntityManager\n </classname> and <classname>Query</classname> interfaces provide access to a\n-<ulink url=\"../../api/openjpa/persistence/FetchPlan.html\"><classname>\n-org.apache.openjpa.persistence.FetchPlan</classname></ulink> object. The\n-<classname>FetchPlan</classname> maintains the set of active fetch groups and\n-the maximum fetch depth. It begins with the groups and depth defined in the\n+<ulink url=\"../apidocs/org/apache/openjpa/persistence/FetchPlan.html\">\n+<classname>org.apache.openjpa.persistence.FetchPlan</classname></ulink> object.\n+The <classname>FetchPlan</classname> maintains the set of active fetch groups \n+and the maximum fetch depth. It begins with the groups and depth defined in the\n <literal>openjpa.FetchGroups</literal> and <literal>openjpa.MaxFetchDepth\n </literal> properties, but allows you to add or remove groups and change the\n maximum fetch depth for an individual <classname>EntityManager</classname> or\n <classname>Query</classname> through the methods below.\n             </para>\n <programlisting>\n-public FetchPlan addFetchGroup (String group);\n-public FetchPlan addFetchGroups (String... groups);\n-public FetchPlan addFetchGroups (Collection groups);\n-public FetchPlan removeFetchGroup (String group);\n-public FetchPlan removeFetchGroups (String... groups);\n-public FetchPlan removeFetchGroups (Collection groups);\n-public FetchPlan resetFetchGroups ();\n-public Collection&lt;String&gt; getFetchGroups ();\n-public void clearFetchGroups ();\n+public FetchPlan addFetchGroup(String group);\n+public FetchPlan addFetchGroups(String... groups);\n+public FetchPlan addFetchGroups(Collection groups);\n+public FetchPlan removeFetchGrop(String group);\n+public FetchPlan removeFetchGroups(String... groups);\n+public FetchPlan removeFetchGroups(Collection groups);\n+public FetchPlan resetFetchGroups();\n+public Collection&lt;String&gt; getFetchGroups();\n+public void clearFetchGroups();\n public FetchPlan setMaxFetchDepth(int depth);\n public int getMaxFetchDepth();\n </programlisting>\n@@ -1880,9 +1795,9 @@ import org.apache.openjpa.persistence.*;\n \n ...\n \n-OpenJPAQuery kq = OpenJPAPersistence.cast (em.createQuery (...));\n-kq.getFetchPlan ().setMaxFetchDepth(3).addFetchGroup (\"detail\");\n-List results = kq.getResultList ();\n+OpenJPAQuery kq = OpenJPAPersistence.cast(em.createQuery(...));\n+kq.getFetchPlan().setMaxFetchDepth(3).addFetchGroup(\"detail\");\n+List results = kq.getResultList();\n </programlisting>\n             </example>\n         </section>\n@@ -1909,18 +1824,18 @@ fields that will be eagerly loaded from the database.\n JPA <classname>FetchPlan</classname> methods:\n             </para>\n <programlisting>\n-public FetchPlan addField (String field);\n-public FetchPlan addFields (String... fields);\n-public FetchPlan addFields (Class cls, String... fields);\n-public FetchPlan addFields (Collection fields);\n-public FetchPlan addFields (Class cls, Collection fields);\n-public FetchPlan removeField (String field);\n-public FetchPlan removeFields (String... fields);\n-public FetchPlan removeFields (Class cls, String... fields);\n-public FetchPlan removeFields (Collection fields);\n-public FetchPlan removeFields (Class cls, Collection fields);\n-public Collection&lt;String&gt; getFields ();\n-public void clearFields ();\n+public FetchPlan addField(String field);\n+public FetchPlan addFields(String... fields);\n+public FetchPlan addFields(Class cls, String... fields);\n+public FetchPlan addFields(Collection fields);\n+public FetchPlan addFields(Class cls, Collection fields);\n+public FetchPlan removeField(String field);\n+public FetchPlan removeFields(String... fields);\n+public FetchPlan removeFields(Class cls, String... fields);\n+public FetchPlan removeFields(Collection fields);\n+public FetchPlan removeFields(Class cls, Collection fields);\n+public Collection&lt;String&gt; getFields();\n+public void clearFields();\n </programlisting>\n             <para>\n The methods that take only string arguments use the fully-qualified field name,\n@@ -1952,9 +1867,9 @@ import org.apache.openjpa.persistence.*;\n \n ...\n \n-OpenJPAEntityManager kem = OpenJPAPersistence.cast (em);\n-kem.getFetchPlan ().addField (Magazine.class, \"publisher\");\n-Magazine mag = em.find (Magazine.class, magId);\n+OpenJPAEntityManager kem = OpenJPAPersistence.cast(em);\n+kem.getFetchPlan().addField(Magazine.class, \"publisher\");\n+Magazine mag = em.find(Magazine.class, magId);\n </programlisting>\n             </example>\n         </section>\n@@ -2100,13 +2015,12 @@ but they can spawn recursive to-one joins.\n                 <para>\n Under the <literal>join</literal> subclass fetch mode, subclass data in joined\n tables is selected by outer joining to all possible subclass tables of the type\n-being queried. Unjoined subclass data is selected with a SQL UNION where\n-possible. As you'll see below, subclass data fetching is configured separately\n-from relation fetching, and can be disabled for specific classes.\n+being queried. As you'll see below, subclass data fetching is configured \n+separately from relation fetching, and can be disabled for specific classes.\n                 </para>\n                 <note>\n                     <para>\n-Some databases may not support UNIONs or outer joins. Also, OpenJPA can not use\n+Some databases may not support outer joins. Also, OpenJPA can not use\n outer joins if you have set the <link linkend=\"openjpa.jdbc.DBDictionary\">\n <literal> DBDictionary</literal></link>'s <literal>JoinSyntax</literal> to\n <literal>traditional</literal>. See <xref linkend=\"ref_guide_dbsetup_sql92\"/>.\n@@ -2155,16 +2069,8 @@ relations to use parallel rather than join mode eager fetching using the\n metadata extension described in <xref linkend=\"eager-fetch-mode\"/>.\n                 </para>\n                 <para>\n-Setting your subclass fetch mode to <literal>parallel</literal> affects\n-table-per-class and vertical inheritance hierarchies. Under parallel mode,\n-OpenJPA issues separate selects for each subclass in a table-per-class\n-inheritance hierarchy, rather than UNIONing all subclass tables together as in\n-join mode. This applies to any operation on a table-per-class base class: query,\n-by-id lookup, or relation traversal.\n-                </para>\n-                <para>\n-When dealing with a vertically-mapped hierarchy, on the other hand, parallel\n-subclass fetch mode only applies to queries. Rather than outer-joining to\n+Parallel subclass fetch mode only applies to queries on joined inheritance\n+hierarchies. Rather than outer-joining to\n subclass tables, OpenJPA will issue the query separately for each subclass. In\n all other situations, parallel subclass fetch mode acts just like join mode in\n regards to vertically-mapped subclasses.\n@@ -2253,12 +2159,12 @@ import org.apache.openjpa.persistence.jdbc.*;\n \n ...\n \n-Query q = em.createQuery (\"select p from Person p where p.address.state = 'TX'\");\n-OpenJPAQuery kq = OpenJPAPersistence.cast (q);\n-JDBCFetchPlan fetch = (JDBCFetchPlan) kq.getFetchPlan ();\n-fetch.setEagerFetchMode (JDBCFetchPlan.EAGER_PARALLEL);\n-fetch.setSubclassFetchMode (JDBCFetchPlan.EAGER_JOIN);\n-List results = q.getResultList ();\n+Query q = em.createQuery(\"select p from Person p where p.address.state = 'TX'\");\n+OpenJPAQuery kq = OpenJPAPersistence.cast(q);\n+JDBCFetchPlan fetch = (JDBCFetchPlan) kq.getFetchPlan();\n+fetch.setEagerFetchMode(JDBCFetchPlan.EAGER_PARALLEL);\n+fetch.setSubclassFetchMode(JDBCFetchPlan.EAGER_JOIN);\n+List results = q.getResultList();\n </programlisting>\n             </example>\n             <para>\n@@ -2270,7 +2176,7 @@ subclass data fetching will take place, regardless of your metadata setting.\n             </para>\n             <para>\n This applies to the eager fetch mode metadata extension as well (see\n-<xref linkend=\"eager-fetch-mode\"/> ). You can use this extension to\n+<xref linkend=\"eager-fetch-mode\"/>). You can use this extension to\n disable eager fetching on a field or to declare that a collection would rather\n use joins than parallel selects or vice versa. But an extension value of\n <literal>join</literal> won't cause any eager joining if the fetch"},{"sha":"001a47dde1b314bb4ff8793a226ff0a1592e95f7","filename":"openjpa-project/src/doc/manual/ref_guide_remote.xml","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/ref_guide_remote.xml","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/ref_guide_remote.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_remote.xml?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -73,7 +73,7 @@ In JPA, objects detach automatically when they are serialized or when a\n <link linkend=\"jpa_overview_emfactory_perscontext\">persistence context</link>\n ends. The specification does not define any way to explicitly detach objects.\n The extended\n-<ulink url=\"../../api/openjpa/persistence/OpenJPAEntityManager.html\">\n+<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n <classname>OpenJPAEntityManager</classname></ulink>, however, allows you to\n explicitly detach objects at any time.\n             </para>\n@@ -111,8 +111,8 @@ your objects. Setting the <literal>RollbackOnly</literal> flag prevents OpenJPA\n from flushing when detaching dirty objects; instead OpenJPA just runs its\n pre-flush actions (see the <methodname>OpenJPAEntityManager.preFlush\n </methodname>\n-<ulink url=\"../../api/openjpa/persistence/OpenJPAEntityManager.html\"> Javadoc\n-</ulink> for details).\n+<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n+Javadoc</ulink> for details).\n             </para>\n             <para>\n This allows you to use the same instances in multiple\n@@ -152,7 +152,7 @@ attached instance's corresponding fields to null.\n                 </listitem>\n                 <listitem>\n                     <para>\n-If the instance has <phrase> a <literal>Version</literal> field,</phrase>\n+If the instance has a <literal>Version</literal> field,\n OpenJPA will consider the object detached if the version field has a non-default\n value, and new otherwise.\n                     </para>\n@@ -322,7 +322,7 @@ use detached state managers, as determined by the settings above.\n             <para>\n You can also alter the set of fields that will be included in the detached graph\n at runtime.\n-<ulink url=\"../../api/openjpa/persistence/OpenJPAEntityManager.html\">\n+<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n <classname>OpenJPAEntityManager</classname></ulink>s expose the following APIs\n for controlling detached state:\n             </para>"},{"sha":"bb47340c0c36b4bf9871a7b9006c789dd3def976","filename":"openjpa-project/src/doc/manual/ref_guide_runtime.xml","status":"modified","additions":33,"deletions":31,"changes":64,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/ref_guide_runtime.xml","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/ref_guide_runtime.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_runtime.xml?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -3,7 +3,7 @@\n         Runtime Extensions\n     </title>\n     <para>\n-This chapter describes OpenJPA extensions to the standard <phrase>JPA</phrase>\n+This chapter describes OpenJPA extensions to the standard JPA\n interfaces, and outlines some additional features of the OpenJPA runtime.\n     </para>\n     <section id=\"ref_guide_runtime_arch\">\n@@ -17,7 +17,7 @@ and JDO are simply different \"personalities\" that can OpenJPA's native kernel\n can adopt.\n         </para>\n         <para>\n-As a OpenJPA <phrase>JPA</phrase> user, you will not normally see beneath\n+As a OpenJPA user, you will not normally see beneath\n OpenJPA's JPA personality. OpenJPA allows you to access its feature set without\n leaving the comfort of JPA. Where OpenJPA goes beyond standard JPA\n functionality, we have crafted JPA-specific APIs to each OpenJPA extension for\n@@ -190,7 +190,7 @@ features. The <classname>OpenJPAEntityManagerFactory</classname> offers APIs to\n obtain managed and unmanaged <classname>EntityManager</classname>s from the\n same factory, to access the OpenJPA data and query caches, and to perform other\n OpenJPA-specific operations. See the\n-<ulink url=\"../../api/openjpa/persistence/OpenJPAEntityManagerFactory.html\">\n+<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAEntityManagerFactory.html\">\n interface Javadoc</ulink> for details.\n             </para>\n         </section>\n@@ -216,7 +216,7 @@ interface Javadoc</ulink> for details.\n             </indexterm>\n             <para>\n All OpenJPA <classname>EntityManager</classname>s implement the\n-<ulink url=\"../../api/openjpa/persistence/OpenJPAEntityManager.html\">\n+<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n <classname>org.apache.openjpa.persistence.OpenJPAEntityManager</classname>\n </ulink> interface. This interface extends the standard <classname>\n javax.persistence.EntityManager</classname>. Just as the standard <classname>\n@@ -249,7 +249,7 @@ extensions this interface contains.\n             <para>\n OpenJPA extends JPA's standard query functionality with the <classname>\n org.apache.openjpa.persistence.OpenJPAQuery</classname> interface. See its\n-<ulink url=\"../../api/openjpa/persistence/OpenJPAQuery.html\">Javadoc</ulink> for\n+<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAQuery.html\">Javadoc</ulink> for\n details on the convenience methods it provides.\n             </para>\n         </section>\n@@ -276,7 +276,7 @@ details on the convenience methods it provides.\n             <para>\n An <classname>Extent</classname> is a logical view of all persistent instances\n of a given entity class, possibly including subclasses. OpenJPA adds the\n-<ulink url=\"../../api/openjpa/persistence/Extent.html\"><classname>\n+<ulink url=\"../apidocs/org/apache/openjpa/persistence/Extent.html\"><classname>\n org.apache.openjpa.persistence.Extent</classname></ulink> class to the set of\n Java Persistence APIs. The following code illustrates iterating over all\n instances of the <classname>Magazine</classname> entity, without subclasses:\n@@ -310,8 +310,8 @@ for (Magazine m : mags)\n In addition to the <classname>EntityManager</classname> object cache mandated by\n the JPA specification, OpenJPA includes a flexible datastore-level cache. You\n can access this cache from your JPA code using the\n-<ulink url=\"../../api/openjpa/persistence/StoreCache.html\"><classname>\n-org.apache.openjpa.persistence.StoreCache</classname></ulink> facade.\n+<ulink url=\"../apidocs/org/apache/openjpa/persistence/StoreCache.html\">\n+<classname>org.apache.openjpa.persistence.StoreCache</classname></ulink> facade.\n <xref linkend=\"ref_guide_cache\"/> has detailed information on OpenJPA's\n data caching system, including the <classname>StoreCache</classname> facade.\n             </para>\n@@ -327,9 +327,9 @@ data caching system, including the <classname>StoreCache</classname> facade.\n             </indexterm>\n             <para>\n OpenJPA can cache query results as well as persistent object data. The\n-<ulink url=\"../../api/openjpa/persistence/QueryResultCache.html\"><classname>\n-org.apache.openjpa.persistence.QueryResultCache</classname></ulink> is an\n-JPA-flavored facade to OpenJPA's internal query cache. See\n+<ulink url=\"../apidocs/org/apache/openjpa/persistence/QueryResultCache.html\">\n+<classname>org.apache.openjpa.persistence.QueryResultCache</classname></ulink> \n+is an JPA-flavored facade to OpenJPA's internal query cache. See\n <xref linkend=\"ref_guide_cache_query\"/> for details on query caching in\n OpenJPA.\n             </para>\n@@ -361,10 +361,10 @@ groups</link>, and <link linkend=\"ref_guide_locking\">lock levels</link>.\n             </para>\n             <para>\n OpenJPA goes one step further, extending <classname>FetchPlan</classname> with\n-<ulink url=\"../../api/openjpa/persistence/jdbc/JDBCFetchPlan.html\"><classname>\n-org.apache.openjpa.persistence.jdbc.JDBCFetchPlan</classname></ulink> to add\n-additional JDBC-specific tuning methods. Unless you have customized OpenJPA to\n-use a non-relational back-end (see\n+<ulink url=\"../apidocs/org/apache/openjpa/persistence/jdbc/JDBCFetchPlan.html\">\n+<classname>org.apache.openjpa.persistence.jdbc.JDBCFetchPlan</classname></ulink>\n+to add additional JDBC-specific tuning methods. Unless you have customized \n+OpenJPA to use a non-relational back-end (see\n <xref linkend=\"ref_guide_enterprise_abstractstore\"/> ), all <classname>\n FetchPlan</classname>s in OpenJPA implement <classname>JDBCFetchPlan</classname>\n , so feel free to cast to this interface.\n@@ -397,10 +397,10 @@ FetchPlan</classname> s.\n                 </primary>\n             </indexterm>\n             <para>\n-<ulink url=\"../../api/openjpa/persistence/OpenJPAPersistence.html\"><classname>\n-org.apache.openjpa.persistence.OpenJPAPersistence</classname></ulink> is a\n-static helper class that adds OpenJPA-specific utility methods to <classname>\n-javax.persistence.Persistence</classname>.\n+<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAPersistence.html\">\n+<classname>org.apache.openjpa.persistence.OpenJPAPersistence</classname></ulink>\n+is a static helper class that adds OpenJPA-specific utility methods to \n+<classname>javax.persistence.Persistence</classname>.\n             </para>\n         </section>\n     </section>\n@@ -586,7 +586,7 @@ In addition to the standard\n <ulink url=\"http://java.sun.com/javaee/5/docs/api/javax/persistence/EntityManager.html\">\n <methodname>EntityManager.lock (Object, LockModeType)</methodname></ulink>\n method, the\n-<ulink url=\"../../api/openjpa/persistence/OpenJPAEntityManager.html\">\n+<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n <classname>OpenJPAEntityManager</classname></ulink> exposes the following\n methods to lock objects explicitly:\n             </para>\n@@ -879,9 +879,9 @@ changes. This chapter describes how to use and configure OpenJPA savepoints.\n                 Using Savepoints\n             </title>\n             <para>\n-OpenJPA's <phrase>\n-<ulink url=\"../../api/openjpa/persistence/OpenJPAEntityManager.html\">\n-<classname>OpenJPAEntityManager</classname></ulink></phrase> have the following\n+OpenJPA's \n+<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n+<classname>OpenJPAEntityManager</classname></ulink> have the following\n methods to control savepoint behavior. Note that the savepoints work in tandem\n with the current transaction. This means that savepoints require an open\n transaction, and that a rollback of the transaction will rollback all of the\n@@ -958,7 +958,8 @@ kem.getTransaction ().commit ();\n                 Configuring Savepoints\n             </title>\n             <para>\n-OpenJPA uses the <ulink url=\"javadoc/openjpa/kernel/SavepointManager\">\n+OpenJPA uses the \n+<ulink url=\"../apidocs/org/apache/openjpa/kernel/SavepointManager\">\n <classname>org.apache.openjpa.kernel.SavepointManager</classname></ulink>\n <link linkend=\"ref_guide_conf_plugins\">plugin</link> to handle perserving the\n savepoint state. OpenJPA includes the following <classname>SavepointManager\n@@ -1199,8 +1200,8 @@ registration for very specific extensions that do not apply globally.\n                         </para>\n                         <para>\n See the <classname>OpenJPAQuery</classname>\n-<ulink url=\"../../api/openjpa/persistence/OpenJPAQuery.html\">Javadoc</ulink> for\n-details.\n+<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAQuery.html\">\n+Javadoc</ulink> for details.\n                         </para>\n                     </listitem>\n                 </itemizedlist>\n@@ -1267,8 +1268,8 @@ registration for very specific aggregates that do not apply globally.\n                         </para>\n                         <para>\n See the <classname>OpenJPAQuery</classname>\n-<ulink url=\"../../api/openjpa/persistence/OpenJPAQuery.html\">Javadoc</ulink> for\n-details.\n+<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAQuery.html\">\n+Javadoc</ulink> for details.\n                         </para>\n                     </listitem>\n                 </itemizedlist>\n@@ -1687,7 +1688,8 @@ OpenJPA allows you to access named generators at runtime through the\n public Generator getNamedGenerator (String name);\n </programlisting>\n             <para>\n-The returned <ulink url=\"../../api/openjpa/persistence/Generator.html\">\n+The returned \n+<ulink url=\"../apidocs/org/apache/openjpa/persistence/Generator.html\">\n <classname>org.apache.openjpa.persistence.Generator</classname></ulink> is a\n facade over an internal OpenJPA <classname>Seq</classname>.\n             </para>\n@@ -1697,8 +1699,8 @@ retrieve the identity generator of any class, or the generator of any field.\n With these APIs, you do not have to know the generator name. Additionally, they\n allow you to access the implicit generator used by default for datastore\n identity classes. See the\n-<ulink url=\"../../api/openjpa/persistence/OpenJPAEntityManager.html\"> Javadoc\n-</ulink> for the <methodname> OpenJPAEntityManager.getIdentityGenerator\n+<ulink url=\"../apidocs/org/apache/openjpa/persistence/OpenJPAEntityManager.html\">\n+Javadoc</ulink> for the <methodname> OpenJPAEntityManager.getIdentityGenerator\n </methodname> and <methodname>OpenJPAEntityManager.getFieldGenerator\n </methodname> methods for API details.\n             </para>"},{"sha":"1d88529c56e6d0daec771d2d2be1dccbc2b5433d","filename":"openjpa-project/src/doc/manual/supported_databases.xml","status":"modified","additions":3,"deletions":9,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/supported_databases.xml","raw_url":"https://github.com/apache/openjpa/raw/bdae6535ecc59a972cc27a9ca65971d063512f41/openjpa-project/src/doc/manual/supported_databases.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/supported_databases.xml?ref=bdae6535ecc59a972cc27a9ca65971d063512f41","patch":"@@ -4,7 +4,7 @@\n     </title>\n     <para>\n Following is a table of the database and JDBC driver versions that are supported\n-by OpenJPA <phrase>JPA</phrase>.\n+by OpenJPA.\n     </para>\n     <table tocentry=\"1\">\n         <title>\n@@ -326,10 +326,7 @@ datastore transactions cannot use the pessimistic lock manager.\n                     <listitem>\n                         <para>\n Interbase does not support the <literal>LOWER</literal>, <literal>SUBSTRING\n-</literal>, or <literal>INSTR</literal> SQL functions, which means that\n-<methodname>toLowerCase()</methodname>, <methodname>indexOf()</methodname>, and\n-<methodname>substring()</methodname> methods in <phrase>JPA</phrase> QL cannot\n-be used.\n+</literal>, or <literal>INSTR</literal> SQL functions>\n                         </para>\n                     </listitem>\n                 </itemizedlist>\n@@ -482,10 +479,7 @@ Firebird does not support auto-increment columns.\n                     <listitem>\n                         <para>\n Firebird does not support the <literal>LOWER</literal>, <literal>SUBSTRING\n-</literal>, or <literal>INSTR</literal> SQL functions, which means that\n-<methodname>toLowerCase()</methodname>, <methodname>indexOf()</methodname>, and\n-<methodname>substring()</methodname> methods in <phrase>JPA</phrase> QL cannot\n-be used.\n+</literal>, or <literal>INSTR</literal> SQL functions.\n                         </para>\n                     </listitem>\n                 </itemizedlist>"}]}

