{"sha":"bf646350eac65b7ccd9e68031c8e5bc228f5a121","node_id":"MDY6Q29tbWl0MjA2MzY0OmJmNjQ2MzUwZWFjNjViN2NjZDllNjgwMzFjOGU1YmMyMjhmNWExMjE=","commit":{"author":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2014-01-15T22:34:05Z"},"committer":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2014-01-15T22:34:05Z"},"message":"OPENJPA-2470 : Update DataCacheManagerImpl to use a ConcurrentHashMap rather than a HashMap.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1558594 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"219f9bdd5e0d645643f32233733631ede2d25064","url":"https://api.github.com/repos/apache/openjpa/git/trees/219f9bdd5e0d645643f32233733631ede2d25064"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/bf646350eac65b7ccd9e68031c8e5bc228f5a121","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/bf646350eac65b7ccd9e68031c8e5bc228f5a121","html_url":"https://github.com/apache/openjpa/commit/bf646350eac65b7ccd9e68031c8e5bc228f5a121","comments_url":"https://api.github.com/repos/apache/openjpa/commits/bf646350eac65b7ccd9e68031c8e5bc228f5a121/comments","author":null,"committer":null,"parents":[{"sha":"d0a311efe0e6a5318f5755db8c3bea460f6a3f00","url":"https://api.github.com/repos/apache/openjpa/commits/d0a311efe0e6a5318f5755db8c3bea460f6a3f00","html_url":"https://github.com/apache/openjpa/commit/d0a311efe0e6a5318f5755db8c3bea460f6a3f00"}],"stats":{"total":6,"additions":4,"deletions":2},"files":[{"sha":"f68351939176f1fdeb5f8dd74d936fdc84f7bcbb","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCacheManagerImpl.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/bf646350eac65b7ccd9e68031c8e5bc228f5a121/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCacheManagerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/bf646350eac65b7ccd9e68031c8e5bc228f5a121/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCacheManagerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCacheManagerImpl.java?ref=bf646350eac65b7ccd9e68031c8e5bc228f5a121","patch":"@@ -22,6 +22,7 @@\n import java.util.Map;\n import java.util.Set;\n import java.util.Map.Entry;\n+import java.util.concurrent.ConcurrentHashMap;\n \n import org.apache.openjpa.conf.OpenJPAConfiguration;\n import org.apache.openjpa.enhance.PCDataGenerator;\n@@ -50,15 +51,16 @@\n     private DataCachePCDataGenerator _pcGenerator = null;\n     private ClearableScheduler _scheduler = null;\n     private CacheDistributionPolicy _policy = new DefaultCacheDistributionPolicy();\n-    private Map<ClassMetaData,Boolean> _cacheable = new HashMap<ClassMetaData, Boolean>();\n+    private Map<ClassMetaData, Boolean> _cacheable = null;\n     \n     // Properties that are configured via openjpa.DataCache but need to be used here. This is here to support the 1.2\n     // way of doing things with openjpa.DataCache(Types=x;y;z,ExcludedTypes=a)\n     private Set<String> _includedTypes;\n     private Set<String> _excludedTypes;\n     \n     public void initialize(OpenJPAConfiguration conf, ObjectValue dataCache, ObjectValue queryCache) {\n-        _conf = conf;        \n+        _conf = conf;\n+        _cacheable = new ConcurrentHashMap<ClassMetaData, Boolean>();\n         _queryCache = (QueryCache) queryCache.instantiate(QueryCache.class, conf);\n         if (_queryCache != null)\n             _queryCache.initialize(this);"}]}

