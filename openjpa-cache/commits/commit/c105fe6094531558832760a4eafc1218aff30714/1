{"sha":"c105fe6094531558832760a4eafc1218aff30714","node_id":"MDY6Q29tbWl0MjA2MzY0OmMxMDVmZTYwOTQ1MzE1NTg4MzI3NjBhNGVhZmMxMjE4YWZmMzA3MTQ=","commit":{"author":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-07-28T18:12:02Z"},"committer":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-07-28T18:12:02Z"},"message":"Pass \"-p persistence.xml\" to enhancer invocation when running persistence \ntests so that we don't have to set JPA defaults in the JPA \nConfigurationProviderImpl.beforeConfigurationLoad, which is incompatible with\nhaving JDO,etc providers in the same system.  Eventually we should probably \nrecognize persistence.xml as a defaults file, but for now that's against our \nprevious contract of allowing a user to have a JDO,etc defaults file and a \npersistence.xml in the same system.  Also removed XML Transformer functionality\nfrom XMLFactory, since we don't use it and it causes problems with Ant (this\nseems to be an Ant+JDK 1.5 bug in Ant).  \n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@426634 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"4979258d8e2a82b255ad9ee6e44079439be49a69","url":"https://api.github.com/repos/apache/openjpa/git/trees/4979258d8e2a82b255ad9ee6e44079439be49a69"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/c105fe6094531558832760a4eafc1218aff30714","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/c105fe6094531558832760a4eafc1218aff30714","html_url":"https://github.com/apache/openjpa/commit/c105fe6094531558832760a4eafc1218aff30714","comments_url":"https://api.github.com/repos/apache/openjpa/commits/c105fe6094531558832760a4eafc1218aff30714/comments","author":null,"committer":null,"parents":[{"sha":"7268ed8f805241fd4e21343020d301f827c381af","url":"https://api.github.com/repos/apache/openjpa/commits/7268ed8f805241fd4e21343020d301f827c381af","html_url":"https://github.com/apache/openjpa/commit/7268ed8f805241fd4e21343020d301f827c381af"}],"stats":{"total":57,"additions":3,"deletions":54},"files":[{"sha":"a9212e56060b6e40d88b3eb5236d292e6fbbc505","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/XMLFactory.java","status":"modified","additions":0,"deletions":50,"changes":50,"blob_url":"https://github.com/apache/openjpa/blob/c105fe6094531558832760a4eafc1218aff30714/openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/XMLFactory.java","raw_url":"https://github.com/apache/openjpa/raw/c105fe6094531558832760a4eafc1218aff30714/openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/XMLFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/XMLFactory.java?ref=c105fe6094531558832760a4eafc1218aff30714","patch":"@@ -20,13 +20,7 @@\n import javax.xml.parsers.ParserConfigurationException;\n import javax.xml.parsers.SAXParser;\n import javax.xml.parsers.SAXParserFactory;\n-import javax.xml.transform.Source;\n-import javax.xml.transform.Templates;\n-import javax.xml.transform.Transformer;\n-import javax.xml.transform.TransformerConfigurationException;\n-import javax.xml.transform.TransformerFactory;\n import javax.xml.transform.sax.SAXTransformerFactory;\n-import javax.xml.transform.sax.TransformerHandler;\n \n import org.apache.commons.lang.exception.NestableRuntimeException;\n import org.w3c.dom.Document;\n@@ -73,9 +67,6 @@\n                 _domFactories[arrIdx] = domFactory;\n             }\n         }\n-\n-        _transFactory = (SAXTransformerFactory) TransformerFactory.\n-            newInstance();\n         _validating = new ValidatingErrorHandler();\n     }\n \n@@ -130,47 +121,6 @@ public static Document getDocument() {\n         return getDOMParser(false, false).newDocument();\n     }\n \n-    /**\n-     * Return a Transformer that will apply the XSL transformation\n-     * from the given source. If the source is null,\n-     * no transformation will be applied.\n-     */\n-    public static Transformer getTransformer(Source source) {\n-        try {\n-            if (source == null)\n-                return _transFactory.newTransformer();\n-            return _transFactory.newTransformer(source);\n-        } catch (TransformerConfigurationException tfce) {\n-            throw new NestableRuntimeException(tfce);\n-        }\n-    }\n-\n-    /**\n-     * Return a Templates for the given XSL source.\n-     */\n-    public static Templates getTemplates(Source source) {\n-        try {\n-            return _transFactory.newTemplates(source);\n-        } catch (TransformerConfigurationException tfce) {\n-            throw new NestableRuntimeException(tfce);\n-        }\n-    }\n-\n-    /**\n-     * Return a TransformerHandler for transforming SAX events, applying the\n-     * XSL transform from the given source. If the source is null, no\n-     * transform will be applied.\n-     */\n-    public static TransformerHandler getTransformerHandler(Source source) {\n-        try {\n-            if (source == null)\n-                return _transFactory.newTransformerHandler();\n-            return _transFactory.newTransformerHandler(source);\n-        } catch (TransformerConfigurationException tfce) {\n-            throw new NestableRuntimeException(tfce);\n-        }\n-    }\n-\n     /**\n      * Return the array index of the factory with the given properties.\n      */"},{"sha":"b3201ec37cdae2f9c2ac2caac70af93361c3f1f2","filename":"openjpa-lib/src/test/java/org/apache/openjpa/lib/xml/TestXMLWriter.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/c105fe6094531558832760a4eafc1218aff30714/openjpa-lib/src/test/java/org/apache/openjpa/lib/xml/TestXMLWriter.java","raw_url":"https://github.com/apache/openjpa/raw/c105fe6094531558832760a4eafc1218aff30714/openjpa-lib/src/test/java/org/apache/openjpa/lib/xml/TestXMLWriter.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/test/java/org/apache/openjpa/lib/xml/TestXMLWriter.java?ref=c105fe6094531558832760a4eafc1218aff30714","patch":"@@ -15,6 +15,7 @@\n import java.io.InputStreamReader;\n import java.io.StringWriter;\n import javax.xml.transform.Transformer;\n+import javax.xml.transform.TransformerFactory;\n import javax.xml.transform.stream.StreamResult;\n import javax.xml.transform.stream.StreamSource;\n \n@@ -48,7 +49,7 @@ public void testPrettyPrint() throws Exception {\n         StringWriter formatted = new StringWriter();\n         StreamResult result = new StreamResult(new XMLWriter(formatted));\n \n-        Transformer trans = XMLFactory.getTransformer(null);\n+        Transformer trans = TransformerFactory.newInstance().newTransformer();\n         trans.transform(source, result);\n \n         // read the correct output into a buffer"},{"sha":"8af7ef094f76dfa2d4de3ec8540bd7434bc6bda5","filename":"openjpa-persistence-jdbc/pom.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/c105fe6094531558832760a4eafc1218aff30714/openjpa-persistence-jdbc/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/c105fe6094531558832760a4eafc1218aff30714/openjpa-persistence-jdbc/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/pom.xml?ref=c105fe6094531558832760a4eafc1218aff30714","patch":"@@ -90,6 +90,7 @@\n                                              pathsep=\" \"/>\n                                 <java\n                                     classname=\"org.apache.openjpa.enhance.PCEnhancer\">\n+                                    <arg line=\"-p persistence.xml\"/>\n                                     <arg line=\"${enhance.files}\"/>\n                                     <classpath>\n                                         <path\n@@ -111,5 +112,4 @@\n \n     </build>\n \n-\n </project>"},{"sha":"5c58ac3f0c1771e6d5c25509d6ece10ae7da654a","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/c105fe6094531558832760a4eafc1218aff30714/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java","raw_url":"https://github.com/apache/openjpa/raw/c105fe6094531558832760a4eafc1218aff30714/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java?ref=c105fe6094531558832760a4eafc1218aff30714","patch":"@@ -48,8 +48,6 @@ public void beforeConfigurationLoad(OpenJPAConfiguration c) {\n             PersistenceMetaDataFactory.class.getName());\n         conf.metaFactoryPlugin.setAlias(ALIAS_EJB,\n             PersistenceMetaDataFactory.class.getName());\n-        conf.metaFactoryPlugin.setDefault(SPEC_JPA);\n-        conf.metaFactoryPlugin.setString(SPEC_JPA);\n     }\n \n     public void afterSpecificationSet(OpenJPAConfiguration c) {"}]}

