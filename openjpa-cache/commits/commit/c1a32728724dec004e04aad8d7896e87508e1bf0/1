{"sha":"c1a32728724dec004e04aad8d7896e87508e1bf0","node_id":"MDY6Q29tbWl0MjA2MzY0OmMxYTMyNzI4NzI0ZGVjMDA0ZTA0YWFkOGQ3ODk2ZTg3NTA4ZTFiZjA=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2010-03-01T19:12:21Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2010-03-01T19:12:21Z"},"message":"OPENJPA-1543: Remove fragmented messages. Change to TRACE level logging.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@917656 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"ceae8ca2173750cc1d2e0e9af9d78e78a51f0f0e","url":"https://api.github.com/repos/apache/openjpa/git/trees/ceae8ca2173750cc1d2e0e9af9d78e78a51f0f0e"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/c1a32728724dec004e04aad8d7896e87508e1bf0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/c1a32728724dec004e04aad8d7896e87508e1bf0","html_url":"https://github.com/apache/openjpa/commit/c1a32728724dec004e04aad8d7896e87508e1bf0","comments_url":"https://api.github.com/repos/apache/openjpa/commits/c1a32728724dec004e04aad8d7896e87508e1bf0/comments","author":null,"committer":null,"parents":[{"sha":"42769bd9d801d129fbeda514ea32efbcafbcdab7","url":"https://api.github.com/repos/apache/openjpa/commits/42769bd9d801d129fbeda514ea32efbcafbcdab7","html_url":"https://github.com/apache/openjpa/commit/42769bd9d801d129fbeda514ea32efbcafbcdab7"}],"stats":{"total":16,"additions":8,"deletions":8},"files":[{"sha":"ef7e6d734e20d264a1818dd3600dcd9c33b46f49","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/PreparedQueryImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/c1a32728724dec004e04aad8d7896e87508e1bf0/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/PreparedQueryImpl.java","raw_url":"https://github.com/apache/openjpa/raw/c1a32728724dec004e04aad8d7896e87508e1bf0/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/PreparedQueryImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/PreparedQueryImpl.java?ref=c1a32728724dec004e04aad8d7896e87508e1bf0","patch":"@@ -219,7 +219,7 @@ public Exclusion initialize(Object result) {\n         if (provider instanceof SelectResultObjectProvider) {\n             return new Object[]{((SelectResultObjectProvider)provider).getSelect(), null};\n         } \n-        return new Object[]{null, _loc.get(\"exclude-not-select-rop\", provider)};\n+        return new Object[]{null, _loc.get(\"exclude-not-select-rop\", provider.getClass().getName())};\n     }\n     \n     private SelectImpl extractImplementation(SelectExecutor selector) {"},{"sha":"b4561b4bcca712152f54e681921ca7fafd3df62f","filename":"openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/kernel/localizer.properties","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/apache/openjpa/blob/c1a32728724dec004e04aad8d7896e87508e1bf0/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/kernel/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/c1a32728724dec004e04aad8d7896e87508e1bf0/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/kernel/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/kernel/localizer.properties?ref=c1a32728724dec004e04aad8d7896e87508e1bf0","patch":"@@ -149,17 +149,17 @@ bad-lrs-size: Invalid LRS size. Valid values are \\\n     \"unknown\"(0), \"last\"(1) or \"query\"(2). Specified value: {0}.\n bad-join-syntax: Invalid join syntax. Valid values are \\\n     \"sql92\"(0), \"tradition\"(1) or \"database\"(2). Specified value: {0}.\n-exclude-multi-select: because this query generates multiple SQL statements. \\\n+exclude-multi-select: This query generates multiple SQL statements. \\\n \tA query can be cached only when it corresponds to a single SQL statement.  \n-exclude-not-result: because this query returns a single value rather than \\\n+exclude-not-result: This query returns a single value rather than \\\n \ta list. A query that returns single value can not be cached. \n-exclude-no-user-object: because post-execution data can not be extracted \\\n+exclude-no-user-object: Post-execution data can not be extracted \\\n     from this query.\n-exclude-no-sql: because target SQL statement can not be extracted \\\n+exclude-no-sql: Target SQL statement can not be extracted \\\n     from this query.\n-exclude-no-select: because internal select instance can not be extracted \\\n+exclude-no-select: Internal select instance can not be extracted \\\n     from this query.\n-exclude-not-select-rop: because the query result is not obtained by executing \\\n+exclude-not-select-rop: The query result is not obtained by executing \\\n \ta select statement. This can happen if the query was evaluated in-memory. \\\n \tThe result was provided by an instance of {0}.  \n-exclude-not-executor: because this query was not executed on a data store.    \n+exclude-not-executor: This query was not executed on a data store.    "}]}

