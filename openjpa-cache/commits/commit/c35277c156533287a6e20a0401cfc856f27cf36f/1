{"sha":"c35277c156533287a6e20a0401cfc856f27cf36f","node_id":"MDY6Q29tbWl0MjA2MzY0OmMzNTI3N2MxNTY1MzMyODdhNmUyMGEwNDAxY2ZjODU2ZjI3Y2YzNmY=","commit":{"author":{"name":"Jeremy Bauer","email":"jrbauer@apache.org","date":"2009-09-03T22:39:12Z"},"committer":{"name":"Jeremy Bauer","email":"jrbauer@apache.org","date":"2009-09-03T22:39:12Z"},"message":"OPENJPA-926  Update documentation for explicit access types\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@811160 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"95122bf947e82f1ee15dd5bbf8d3876a43d4cb2b","url":"https://api.github.com/repos/apache/openjpa/git/trees/95122bf947e82f1ee15dd5bbf8d3876a43d4cb2b"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/c35277c156533287a6e20a0401cfc856f27cf36f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/c35277c156533287a6e20a0401cfc856f27cf36f","html_url":"https://github.com/apache/openjpa/commit/c35277c156533287a6e20a0401cfc856f27cf36f","comments_url":"https://api.github.com/repos/apache/openjpa/commits/c35277c156533287a6e20a0401cfc856f27cf36f/comments","author":null,"committer":null,"parents":[{"sha":"c880fdeb7f49d70236357c662480bb71349fa7ff","url":"https://api.github.com/repos/apache/openjpa/commits/c880fdeb7f49d70236357c662480bb71349fa7ff","html_url":"https://github.com/apache/openjpa/commit/c880fdeb7f49d70236357c662480bb71349fa7ff"}],"stats":{"total":132,"additions":122,"deletions":10},"files":[{"sha":"7aae7fd0affdc7d21c16787fb198641d1ec15f23","filename":"openjpa-project/src/doc/manual/jpa_overview_meta.xml","status":"modified","additions":122,"deletions":10,"changes":132,"blob_url":"https://github.com/apache/openjpa/blob/c35277c156533287a6e20a0401cfc856f27cf36f/openjpa-project/src/doc/manual/jpa_overview_meta.xml","raw_url":"https://github.com/apache/openjpa/raw/c35277c156533287a6e20a0401cfc856f27cf36f/openjpa-project/src/doc/manual/jpa_overview_meta.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_meta.xml?ref=c35277c156533287a6e20a0401cfc856f27cf36f","patch":"@@ -552,13 +552,18 @@ The equivalent declarations in XML:\n The persistence implementation must be able to retrieve and set the persistent\n state of your entities, mapped superclasses, and embeddable types. JPA offers\n two modes of persistent state access: <emphasis>field access</emphasis>, and\n-<emphasis>property access</emphasis>. Under field access, the implementation\n-injects state directly into your persistent fields, and retrieves changed state\n-from your fields as well. To declare field access on an entity with XML\n-metadata, set the <literal>access</literal> attribute of your <literal>entity\n-</literal> XML element to <literal>FIELD</literal>. To use field access for an\n-entity using annotation metadata, simply place your metadata and mapping\n-annotations on your field declarations:\n+<emphasis>property access</emphasis>.  The access type of a persistent attribute\n+can be either set explicitly on a class or attribute level, inherited, or \n+determined by the provider. \n+        </para>\n+        <para>\n+Under field access, the implementation injects state directly into your \n+persistent fields, and retrieves changed state from your fields as well. To \n+declare field access on an entire entity with XML metadata, set the \n+<literal>access</literal> attribute of your <literal>entity</literal> XML \n+element to <literal>FIELD</literal>. To use field access for an entire entity \n+using annotation metadata, simply place your metadata and mapping annotations \n+on your field declarations:\n         </para>\n <programlisting>\n @ManyToOne\n@@ -609,16 +614,123 @@ You must also define the following setter method:\n void setP(T value);\n </programlisting>\n         <para>\n-To use property access, set your <literal>entity</literal> element's <literal>\n-access</literal> attribute to <literal>PROPERTY</literal>, or place your\n-metadata and mapping annotations on the getter method:\n+To implicitly use property access for an entire class by default, set your \n+<literal>entity</literal> element's <literal> access</literal> attribute to \n+<literal>PROPERTY</literal>, or place your metadata and mapping annotations on \n+the getter method:\n         </para>\n <programlisting>\n @ManyToOne\n private Company getPublisher() { ... }\n \n private void setPublisher(Company publisher) { ... }\n </programlisting>\n+    <section id=\"jpa_overview_explicit_access\">\n+        <title>\n+            Explicit Access\n+        </title>\n+        <para>\n+            <indexterm>\n+                <primary>\n+                    metadata\n+                </primary>\n+                <secondary>\n+                    explicit access\n+                </secondary>\n+            </indexterm>\n+            <indexterm>\n+                <primary>\n+                    persistent classes\n+                </primary>\n+                <secondary>\n+                    explicit access\n+                </secondary>\n+            </indexterm>\n+            <indexterm>\n+                <primary>\n+                    persistent attributes\n+                </primary>\n+                <seealso>\n+                    persistent fields\n+                </seealso>\n+                <seealso>\n+                    persistent properties\n+                </seealso>\n+            </indexterm>\n+The access type of a class or individual persistent attributes can be specified \n+explicitly using the <literal>@Access</literal> annotation or <literal>access\n+</literal> attribute on the XML elements used to define persistent attributes.  \n+When explicitly defining access, specify the explicit access type for the class \n+and then apply the <literal>@Access</literal> annotation or <literal>access\n+</literal>XML attribute to individual fields or properties.  If explicit \n+<literal>FIELD</literal> or <literal>PROPERTY</literal> is specified at the \n+class level, all eligible non-transient fields or properties will be persistent.\n+If using class level <literal>FIELD</literal> access, non-persistent fields must \n+be <literal>transient</literal> or annotated with <literal>@Transient</literal>.\n+If using class level <literal>PROPERTY</literal> access, non-persistent \n+properties must be annotated <literal>@Transient</literal> or excluded using\n+the <literal>transient</literal> XML attribute.  Refer to the JPA specification\n+for specific rules regarding the use of explicit access with embeddables and\n+within an inheritance hierarchy.\n+        </para>\n+        <para>\n+This entity definitions shows how multiple access types may be specified\n+on an entity:\n+        </para>\n+<programlisting>\n+@Entity\n+@Access(AccessType.FIELD)\n+public class PaymentContract {\n+\n+    @Id\n+    private String id;\n+\n+    @Temporal(TemporalType.DATE)\n+    private String contractDate;\n+    \n+    @Transient\n+    private String terms;\n+    \n+    @Version\n+    private int version;\n+    \n+    @Lob\n+    @Access(AccessType.PROPERTY)\n+    public String getContractTerms() {\n+        return terms;\n+    }\n+    \n+    public void setContractTerms(String terms) {\n+        // Format string before persisting\n+        this.terms = formatTerms(terms);\n+    }\n+    ... \n+}\n+</programlisting>\n+                <para>\n+The equivalent declarations in XML:\n+                </para>\n+<programlisting>\n+&lt;entity-mappings xmlns=\"http://java.sun.com/xml/ns/persistence/orm\" \n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n+    xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence/orm orm_2_0.xsd\"\n+    version=\"2.0\"&gt;\n+    &lt;entity class=\"org.xyz.PaymentContract\" access=\"FIELD\"&gt;\n+        &lt;attributes&gt;\n+            &lt;id name=\"id\"/&gt;\n+             &lt;basic name=\"contractTerms\" access=\"PROPERTY\"&gt; \n+                &lt;lob/&gt;\n+            &lt;/basic&gt;\n+            &lt;basic name=\"contractDate\"&gt;\n+                &lt;temporal>DATE&lt;/temporal&gt;\n+            &lt;/basic>\n+            &lt;version name=\"version\"/&gt;\n+            &lt;transient name=\"terms\"/&gt;\n+       &lt;/attributes&gt;\n+    &lt;/entity&gt;\n+&lt;/entity-mappings&gt;\n+</programlisting>\n+    </section>\n         <warning>\n             <para>\n When using property access, only the getter and setter method for a property"}]}

