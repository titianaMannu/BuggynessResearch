{"sha":"c3e2f01204f028ef4563d17cd192a15bead36f27","node_id":"MDY6Q29tbWl0MjA2MzY0OmMzZTJmMDEyMDRmMDI4ZWY0NTYzZDE3Y2QxOTJhMTViZWFkMzZmMjc=","commit":{"author":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2008-02-23T19:38:00Z"},"committer":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2008-02-23T19:38:00Z"},"message":"Fix TestVersion's \"InvalidStateException: The context has been closed.\" problem: em1 and em2 are using the same em from currentEntityManager(). This test is very similar to (if not the same as) *.persistence.jdbc.annotation.TestVersion.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@630516 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"ef3617e52c01971b0c36efee76dfe3ea6269c295","url":"https://api.github.com/repos/apache/openjpa/git/trees/ef3617e52c01971b0c36efee76dfe3ea6269c295"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/c3e2f01204f028ef4563d17cd192a15bead36f27","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/c3e2f01204f028ef4563d17cd192a15bead36f27","html_url":"https://github.com/apache/openjpa/commit/c3e2f01204f028ef4563d17cd192a15bead36f27","comments_url":"https://api.github.com/repos/apache/openjpa/commits/c3e2f01204f028ef4563d17cd192a15bead36f27/comments","author":null,"committer":null,"parents":[{"sha":"699f043cd24ab24ff7445ce9d9486fb5c6be1298","url":"https://api.github.com/repos/apache/openjpa/commits/699f043cd24ab24ff7445ce9d9486fb5c6be1298","html_url":"https://github.com/apache/openjpa/commit/699f043cd24ab24ff7445ce9d9486fb5c6be1298"}],"stats":{"total":32,"additions":12,"deletions":20},"files":[{"sha":"e4e9726a893a78ae1ae9841e83bb036e00641e2c","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/annotations/TestVersion.java","status":"modified","additions":12,"deletions":20,"changes":32,"blob_url":"https://github.com/apache/openjpa/blob/c3e2f01204f028ef4563d17cd192a15bead36f27/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/annotations/TestVersion.java","raw_url":"https://github.com/apache/openjpa/raw/c3e2f01204f028ef4563d17cd192a15bead36f27/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/annotations/TestVersion.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/annotations/TestVersion.java?ref=c3e2f01204f028ef4563d17cd192a15bead36f27","patch":"@@ -25,9 +25,7 @@\n import org.apache.openjpa.jdbc.meta.strats.* ;\r\n \r\n import org.apache.openjpa.persistence.annotations.common.apps.annotApp.annotype.* ;\r\n-import junit.framework.* ;\r\n \r\n-import org.apache.openjpa.persistence.common.utils.* ;\r\n import org.apache.openjpa.persistence.OpenJPAEntityManager;\r\n import org.apache.openjpa.persistence.OpenJPAEntityManagerSPI;\r\n import org.apache.openjpa.persistence.OpenJPAPersistence;\r\n@@ -50,8 +48,6 @@ public TestVersion(String name)\n \t\tsuper(name, \"annotationcactusapp\");\r\n \t}\r\n \r\n-\r\n-\r\n \tpublic void setUp()\r\n \t{\r\n \t\tnew AnnoTest1();\r\n@@ -94,8 +90,7 @@ public void testVersionNumeric()\n \t{\r\n \t\tOpenJPAEntityManager em1 = currentEntityManager();\r\n \t\tstartTx(em1);\r\n-\t\tEntityManager em2 = currentEntityManager();\r\n-\r\n+\t\tEntityManager em2 = getEmf().createEntityManager();\r\n \r\n \t\tAnnoTest1 pc1 = em1.find(AnnoTest1.class, oid);\r\n \t\tAnnoTest1 pc2 = em2.find(AnnoTest1.class, oid);\r\n@@ -107,15 +102,15 @@ public void testVersionNumeric()\n \t\tendTx(em1);\r\n \t\tendEm(em1);\r\n \r\n-\t\tstartTx(em2);\r\n+\t\tem2.getTransaction().begin();\r\n \t\tpc2.setBasic(75);\r\n \t\tem1 = (OpenJPAEntityManager) currentEntityManager();\r\n \t\tpc1 = em1.find(AnnoTest1.class, oid);\r\n \t\tassertEquals(2, pc1.getVersion());\r\n \t\tendEm(em1);\r\n \t\ttry\r\n \t\t{\r\n-\t\t\tendTx(em2);\r\n+\t\t\tem2.getTransaction().commit();\r\n \t\t\tfail(\"Optimistic fail\");\r\n \t\t}\r\n \t\tcatch (RuntimeException re)\r\n@@ -124,15 +119,15 @@ public void testVersionNumeric()\n \t\t{}\r\n \t\tfinally\r\n \t\t{\r\n-\t\t\tendEm(em2);\r\n+\t\t\tem2.close();\r\n \t\t}\r\n \t}\r\n \r\n \tpublic void testVersionTimestamp()\r\n \t{\r\n \t\tOpenJPAEntityManager em1 = currentEntityManager();\r\n \t\tstartTx(em1);\r\n-\t\tOpenJPAEntityManager em2 = currentEntityManager();\r\n+\t\tOpenJPAEntityManager em2 = getEmf().createEntityManager();\r\n \r\n \t\tAnnoTest2 pc1 = em1.find(AnnoTest2.class, oid1);\r\n \t\tAnnoTest2 pc2 = em2.find(AnnoTest2.class, oid1);\r\n@@ -143,8 +138,7 @@ public void testVersionTimestamp()\n \t\tendTx(em1);\r\n \t\tendEm(em1);\r\n \r\n-\r\n-\t\tstartTx(em2);\r\n+\t\tem2.getTransaction().begin();\r\n \t\tpc2.setBasic(\"75\");\r\n \r\n \t\tem1 = (OpenJPAEntityManager) currentEntityManager();\r\n@@ -153,7 +147,7 @@ public void testVersionTimestamp()\n \t\tendEm(em1);\r\n \t\ttry\r\n \t\t{\r\n-\t\t\tendTx(em2);\r\n+\t\t\tem2.getTransaction().commit();\r\n \t\t\tfail(\"Optimistic fail\");\r\n \t\t}\r\n \t\tcatch (RuntimeException re)\r\n@@ -162,15 +156,15 @@ public void testVersionTimestamp()\n \t\t{}\r\n \t\tfinally\r\n \t\t{\r\n-\t\t\tendEm(em2);\r\n+\t\t\tem2.close();\r\n \t\t}\r\n \t}\r\n \r\n \tpublic void testVersionSubclass()\r\n \t{\r\n \t\tOpenJPAEntityManager em1 = currentEntityManager();\r\n \t\tstartTx(em1);\r\n-\t\tOpenJPAEntityManager em2 = currentEntityManager();\r\n+\t\tOpenJPAEntityManager em2 = getEmf().createEntityManager();\r\n \r\n \t\tAnnoTest3 pc1 = em1.find(AnnoTest3.class, oid2);\r\n \t\tAnnoTest3 pc2 = em2.find(AnnoTest3.class, oid2);\r\n@@ -182,7 +176,7 @@ public void testVersionSubclass()\n \t\tendEm(em1);\r\n \r\n \r\n-\t\tstartTx(em2);\r\n+\t\tem2.getTransaction().begin();\r\n \t\tpc2.setBasic2(75);\r\n \r\n \r\n@@ -192,7 +186,7 @@ public void testVersionSubclass()\n \t\tendEm(em1);\r\n \t\ttry\r\n \t\t{\r\n-\t\t\tendTx(em2);\r\n+\t\t\tem2.getTransaction().commit();\r\n \t\t\tfail(\"Optimistic fail\");\r\n \t\t}\r\n \t\tcatch (RuntimeException re)\r\n@@ -201,7 +195,7 @@ public void testVersionSubclass()\n \t\t{}\r\n \t\tfinally\r\n \t\t{\r\n-\t\t\tendEm(em2);\r\n+\t\t\tem2.close();\r\n \t\t}\r\n \t}\r\n \r\n@@ -224,7 +218,6 @@ public void testVersionNoChange()\n \t\tendEm(em);\r\n \t}\r\n \r\n-\r\n \t   public void testNoDefaultVersionWithoutFieldOrColumn()\r\n \t   {\r\n \t\t\tOpenJPAEntityManager pm = (OpenJPAEntityManager) currentEntityManager();\r\n@@ -244,5 +237,4 @@ public void testVersionWithField()\n \t\t\t\t\t   cls.getVersion().getColumns().length);\r\n \t\t\tendEm(pm);\r\n \t   }\r\n-\r\n }\r"}]}

