{"sha":"c414e4cc793729a26bd537cefb2333c86dda30c4","node_id":"MDY6Q29tbWl0MjA2MzY0OmM0MTRlNGNjNzkzNzI5YTI2YmQ1MzdjZWZiMjMzM2M4NmRkYTMwYzQ=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2008-02-01T23:03:05Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2008-02-01T23:03:05Z"},"message":"OPENJPA-419 Ported to 1.0.x. \n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/1.0.x@617695 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"35ba2db892b8c5f1bdea548d223f435d9bad17d7","url":"https://api.github.com/repos/apache/openjpa/git/trees/35ba2db892b8c5f1bdea548d223f435d9bad17d7"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/c414e4cc793729a26bd537cefb2333c86dda30c4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/c414e4cc793729a26bd537cefb2333c86dda30c4","html_url":"https://github.com/apache/openjpa/commit/c414e4cc793729a26bd537cefb2333c86dda30c4","comments_url":"https://api.github.com/repos/apache/openjpa/commits/c414e4cc793729a26bd537cefb2333c86dda30c4/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"d5fed7023856b145cab4e9659334363041f9e2a1","url":"https://api.github.com/repos/apache/openjpa/commits/d5fed7023856b145cab4e9659334363041f9e2a1","html_url":"https://github.com/apache/openjpa/commit/d5fed7023856b145cab4e9659334363041f9e2a1"}],"stats":{"total":80,"additions":79,"deletions":1},"files":[{"sha":"028f43a1c4078deca94d84d1a418ddd026da1667","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AttachStrategy.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/c414e4cc793729a26bd537cefb2333c86dda30c4/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AttachStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/c414e4cc793729a26bd537cefb2333c86dda30c4/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AttachStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AttachStrategy.java?ref=c414e4cc793729a26bd537cefb2333c86dda30c4","patch":"@@ -268,7 +268,10 @@ protected Object getReference(AttachManager manager, Object toAttach,\n         OpenJPAStateManager sm, ValueMetaData vmd) {\n         if (toAttach == null)\n             return null;\n-        if (manager.getBroker().isDetached(toAttach)) {\n+\n+        if (manager.getBroker().isPersistent(toAttach)) {\n+            return toAttach;\n+        } else if (manager.getBroker().isDetached(toAttach)) {\n             Object oid = manager.getDetachedObjectId(toAttach);\n             if (oid != null)\n                 return manager.getBroker().find(oid, false, null);"},{"sha":"faa367e7aca575dbe33276637f1cd5c0e37c8fcf","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/lifecycle/TestMergeAndPersistWithManagedRelation.java","status":"added","additions":75,"deletions":0,"changes":75,"blob_url":"https://github.com/apache/openjpa/blob/c414e4cc793729a26bd537cefb2333c86dda30c4/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/lifecycle/TestMergeAndPersistWithManagedRelation.java","raw_url":"https://github.com/apache/openjpa/raw/c414e4cc793729a26bd537cefb2333c86dda30c4/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/lifecycle/TestMergeAndPersistWithManagedRelation.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/lifecycle/TestMergeAndPersistWithManagedRelation.java?ref=c414e4cc793729a26bd537cefb2333c86dda30c4","patch":"@@ -0,0 +1,75 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.lifecycle;\n+\n+import javax.persistence.EntityManager;\n+\n+import org.apache.openjpa.persistence.relations.BidiChild;\n+import org.apache.openjpa.persistence.relations.BidiParent;\n+import org.apache.openjpa.persistence.test.SingleEMTestCase;\n+\n+public class TestMergeAndPersistWithManagedRelation\n+    extends SingleEMTestCase {\n+\n+    private long childId;\n+\n+    public void setUp() {\n+        setUp(BidiParent.class, BidiChild.class, CLEAR_TABLES);\n+\n+        BidiChild child = new BidiChild();\n+        child.setName(\"child\");\n+\n+        EntityManager em = emf.createEntityManager();\n+        em.getTransaction().begin();\n+        em.persist(child);\n+        em.getTransaction().commit();\n+        childId = child.getId();\n+        em.close();\n+    }\n+\n+    public void testPersistWithManagedRelation() {\n+        BidiParent parent = new BidiParent();\n+        BidiChild child = em.find(BidiChild.class, childId);\n+        parent.setOneToOneChild(child);\n+        em.getTransaction().begin();\n+        em.persist(parent);\n+        em.getTransaction().commit();\n+        long id = parent.getId();\n+        em.close();\n+\n+        em = emf.createEntityManager();\n+        parent = em.find(BidiParent.class, id);\n+        assertNotNull(parent);\n+    }\n+\n+    public void testMergeWithManagedRelation() {\n+        BidiParent parent = new BidiParent();\n+        BidiChild child = em.find(BidiChild.class, childId);\n+        parent.setOneToOneChild(child);\n+        em.getTransaction().begin();\n+        parent = em.merge(parent);\n+        em.getTransaction().commit();\n+        long id = parent.getId();\n+        em.close();\n+\n+        em = emf.createEntityManager();\n+        parent = em.find(BidiParent.class, id);\n+        assertNotNull(parent);\n+    }\n+}"}]}

