{"sha":"c450bb60da10d2912afe0a476a3bd355f8a45789","node_id":"MDY6Q29tbWl0MjA2MzY0OmM0NTBiYjYwZGExMGQyOTEyYWZlMGE0NzZhM2JkMzU1ZjhhNDU3ODk=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2007-10-24T18:08:23Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2007-10-24T18:08:23Z"},"message":"OPENJPA-416\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/1.0.x@587942 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"6ad4ab71924d1ac161c13a7da08d29e90422dbe5","url":"https://api.github.com/repos/apache/openjpa/git/trees/6ad4ab71924d1ac161c13a7da08d29e90422dbe5"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/c450bb60da10d2912afe0a476a3bd355f8a45789","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/c450bb60da10d2912afe0a476a3bd355f8a45789","html_url":"https://github.com/apache/openjpa/commit/c450bb60da10d2912afe0a476a3bd355f8a45789","comments_url":"https://api.github.com/repos/apache/openjpa/commits/c450bb60da10d2912afe0a476a3bd355f8a45789/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"b4e48abb3ace9cff2678ea9f0708b4b1720140f5","url":"https://api.github.com/repos/apache/openjpa/commits/b4e48abb3ace9cff2678ea9f0708b4b1720140f5","html_url":"https://github.com/apache/openjpa/commit/b4e48abb3ace9cff2678ea9f0708b4b1720140f5"}],"stats":{"total":147,"additions":145,"deletions":2},"files":[{"sha":"bda0f63f442fb91262f560a6e97526cd7bdb39e3","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/FieldMetaData.java","status":"modified","additions":12,"deletions":2,"changes":14,"blob_url":"https://github.com/apache/openjpa/blob/c450bb60da10d2912afe0a476a3bd355f8a45789/openjpa-kernel/src/main/java/org/apache/openjpa/meta/FieldMetaData.java","raw_url":"https://github.com/apache/openjpa/raw/c450bb60da10d2912afe0a476a3bd355f8a45789/openjpa-kernel/src/main/java/org/apache/openjpa/meta/FieldMetaData.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/FieldMetaData.java?ref=c450bb60da10d2912afe0a476a3bd355f8a45789","patch":"@@ -63,6 +63,8 @@\n import org.apache.openjpa.util.OpenJPAException;\n import org.apache.openjpa.util.UnsupportedException;\n import org.apache.openjpa.util.ImplHelper;\n+import org.apache.openjpa.util.UserException;\n+\n import serp.util.Strings;\n \n /**\n@@ -1214,8 +1216,16 @@ public boolean isExternalized() {\n      */\n     public Object getExternalValue(Object val, StoreContext ctx) {\n         Map extValues = getExternalValueMap();\n-        if (extValues != null)\n-            return extValues.get(val);\n+        if (extValues != null) {\n+            Object foundVal = extValues.get(val);\n+            if (foundVal == null) {\n+                throw new UserException(_loc.get(\"bad-externalized-value\",\n+                        new Object[] { val, extValues.keySet(), this }))\n+                        .setFatal(true).setFailedObject(val);\n+            } else {\n+                return foundVal;\n+            }\n+        }\n \n         Method externalizer = getExternalizerMethod();\n         if (externalizer == null)"},{"sha":"652ca20e53f17c574f306967cff5fb6803821b9b","filename":"openjpa-kernel/src/main/resources/org/apache/openjpa/meta/localizer.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/c450bb60da10d2912afe0a476a3bd355f8a45789/openjpa-kernel/src/main/resources/org/apache/openjpa/meta/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/c450bb60da10d2912afe0a476a3bd355f8a45789/openjpa-kernel/src/main/resources/org/apache/openjpa/meta/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/resources/org/apache/openjpa/meta/localizer.properties?ref=c450bb60da10d2912afe0a476a3bd355f8a45789","patch":"@@ -304,3 +304,5 @@ interface-load: Dynamic implementation of managed \"{0}\" can not be defined \\\n interface-load2: Enhanced dynamic implementaion of managed \"{0}\" can not be \\\n \tdefined using classloader \"{1}\". See nested exception for details.\n interface-badenhance: Dynamic implementaion of \"{0}\" can not be enhanced.\n+bad-externalized-value: Value \"{0}\" was not found in the list of \\\n+\tExternalValues for field \"{2}\". Valid values are {1}"},{"sha":"ac3c20c1a545ace5412a9f1d3d00e7a739081f22","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/external/EntityA.java","status":"added","additions":69,"deletions":0,"changes":69,"blob_url":"https://github.com/apache/openjpa/blob/c450bb60da10d2912afe0a476a3bd355f8a45789/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/external/EntityA.java","raw_url":"https://github.com/apache/openjpa/raw/c450bb60da10d2912afe0a476a3bd355f8a45789/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/external/EntityA.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/external/EntityA.java?ref=c450bb60da10d2912afe0a476a3bd355f8a45789","patch":"@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.external;\n+\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.Table;\n+\n+import org.apache.openjpa.persistence.ExternalValues;\n+import org.apache.openjpa.persistence.Type;\n+\n+@Entity\n+@Table(name = \"ExternalizationEntityA\")\n+public class EntityA implements java.io.Serializable {\n+\tprivate static final long serialVersionUID = 1L;\n+\n+\t@Id\n+\t@GeneratedValue\n+\tprivate int id;\n+\n+\t@ExternalValues( { \"SMALL=SML\", \"MEDIUM=MID\", \"LARGE=LRG\" })\n+\t@Column(length = 3)\n+\tprivate String s1;\n+\n+\t@ExternalValues( { \"SMALL=5\", \"MEDIUM=8\", \"LARGE=15\" })\n+\t@Type(int.class)\n+\tprivate String s2;\n+\n+\tpublic EntityA() {\n+\t}\n+\n+\tpublic int getId() {\n+\t\treturn id;\n+\t}\n+\n+\tpublic String getS1() {\n+\t\treturn s1;\n+\t}\n+\n+\tpublic void setS1(String s1) {\n+\t\tthis.s1 = s1;\n+\t}\n+\n+\tpublic String getS2() {\n+\t\treturn s2;\n+\t}\n+\n+\tpublic void setS2(String s2) {\n+\t\tthis.s2 = s2;\n+\t}\n+}"},{"sha":"04680acd662c323c906609b49b51a5bac8a68c30","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/external/TestExternalValues.java","status":"added","additions":62,"deletions":0,"changes":62,"blob_url":"https://github.com/apache/openjpa/blob/c450bb60da10d2912afe0a476a3bd355f8a45789/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/external/TestExternalValues.java","raw_url":"https://github.com/apache/openjpa/raw/c450bb60da10d2912afe0a476a3bd355f8a45789/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/external/TestExternalValues.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/external/TestExternalValues.java?ref=c450bb60da10d2912afe0a476a3bd355f8a45789","patch":"@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.external;\n+\n+import javax.persistence.EntityManager;\n+\n+import org.apache.openjpa.persistence.PersistenceException;\n+import org.apache.openjpa.persistence.RollbackException;\n+import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n+\n+public class TestExternalValues extends SingleEMFTestCase {\n+\n+    public void setUp() {\n+        super.setUp(EntityA.class);\n+    }\n+\n+    public void testUnrecognizedExternalValue() {\n+        EntityManager em = emf.createEntityManager();\n+\n+        em.getTransaction().begin();\n+\n+        EntityA entity = new EntityA();\n+\n+        entity.setS1(\"ABDEF\");\n+        entity.setS2(\"NOT_VALID\");\n+\n+        em.persist(entity);\n+\n+        try {\n+            em.getTransaction().commit();\n+            fail(\"Expected an exception at commit time\");\n+        } catch (RollbackException e) {\n+            Throwable t = e;\n+            while (t.getCause() != null) {\n+                t = t.getCause();\n+            }\n+            assertTrue(t.getMessage().contains(\n+                    \"was not found in the list of ExternalValues\"));\n+        } finally {\n+            if (em.getTransaction().isActive()) {\n+                em.getTransaction().rollback();\n+            }\n+        }\n+        em.close();\n+    }\n+}"}]}

