{"sha":"c687c5b6a0c28f0807e0ed98eb6d8cb7cb8066bf","node_id":"MDY6Q29tbWl0MjA2MzY0OmM2ODdjNWI2YTBjMjhmMDgwN2UwZWQ5OGViNmQ4Y2I3Y2I4MDY2YmY=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2008-08-13T21:34:52Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2008-08-13T21:34:52Z"},"message":"OPENJPA-664: Rollback revision 679442 name length constraint checks\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/1.2.x@685683 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"4d4ebb45f48f9c14309ea15a3ca66c3a5a25bbe9","url":"https://api.github.com/repos/apache/openjpa/git/trees/4d4ebb45f48f9c14309ea15a3ca66c3a5a25bbe9"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/c687c5b6a0c28f0807e0ed98eb6d8cb7cb8066bf","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/c687c5b6a0c28f0807e0ed98eb6d8cb7cb8066bf","html_url":"https://github.com/apache/openjpa/commit/c687c5b6a0c28f0807e0ed98eb6d8cb7cb8066bf","comments_url":"https://api.github.com/repos/apache/openjpa/commits/c687c5b6a0c28f0807e0ed98eb6d8cb7cb8066bf/comments","author":null,"committer":null,"parents":[{"sha":"31f5708964bc0f75a340857fe8c913056d038e7b","url":"https://api.github.com/repos/apache/openjpa/commits/31f5708964bc0f75a340857fe8c913056d038e7b","html_url":"https://github.com/apache/openjpa/commit/31f5708964bc0f75a340857fe8c913056d038e7b"}],"stats":{"total":50,"additions":9,"deletions":41},"files":[{"sha":"2b0e224a47493efd7292d9395def07fa08a90562","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","status":"modified","additions":7,"deletions":26,"changes":33,"blob_url":"https://github.com/apache/openjpa/blob/c687c5b6a0c28f0807e0ed98eb6d8cb7cb8066bf/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/c687c5b6a0c28f0807e0ed98eb6d8cb7cb8066bf/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java?ref=c687c5b6a0c28f0807e0ed98eb6d8cb7cb8066bf","patch":"@@ -3065,9 +3065,7 @@ protected String makeNameValid(String name, NameSet set, int maxLen,\n      */\n     public String[] getCreateTableSQL(Table table) {\n         StringBuffer buf = new StringBuffer();\n-        String tableName = checkNameLength(getFullName(table, false), \n-        \t\tmaxTableNameLength, \"long-table-name\");\n-        buf.append(\"CREATE TABLE \").append(tableName);\n+        buf.append(\"CREATE TABLE \").append(getFullName(table, false));\n         if (supportsComments && table.hasComment()) {\n             buf.append(\" \");\n             comment(buf, table.getComment());\n@@ -3140,9 +3138,7 @@ protected StringBuffer comment(StringBuffer buf, String comment) {\n \n         StringBuffer buf = new StringBuffer();\n         buf.append(\"CREATE SEQUENCE \");\n-        String seqName = checkNameLength(getFullName(seq), maxTableNameLength, \n-        \t\t\"long-seq-name\");\n-        buf.append(seqName);\n+        buf.append(getFullName(seq));\n         if (seq.getInitialValue() != 0)\n             buf.append(\" START WITH \").append(seq.getInitialValue());\n         if (seq.getIncrement() > 1)\n@@ -3168,9 +3164,8 @@ protected StringBuffer comment(StringBuffer buf, String comment) {\n         buf.append(\"CREATE \");\n         if (index.isUnique())\n             buf.append(\"UNIQUE \");\n-        String indexName = checkNameLength(index.getName(), maxIndexNameLength, \n-                \"long-index-name\");\n-        buf.append(\"INDEX \").append(indexName);\n+        buf.append(\"INDEX \").append(index.getName());\n+\n         buf.append(\" ON \").append(getFullName(index.getTable(), false));\n         buf.append(\" (\").append(Strings.join(index.getColumns(), \", \")).\n             append(\")\");\n@@ -3280,9 +3275,7 @@ protected StringBuffer comment(StringBuffer buf, String comment) {\n      */\n     protected String getDeclareColumnSQL(Column col, boolean alter) {\n         StringBuffer buf = new StringBuffer();\n-        String columnName = checkNameLength(col.getName(), maxColumnNameLength, \n-        \t\t\"long-column-name\");\n-        buf.append(columnName).append(\" \");\n+        buf.append(col).append(\" \");\n         buf.append(getTypeName(col));\n \n         // can't add constraints to a column we're adding after table\n@@ -3469,11 +3462,11 @@ protected String getUniqueConstraintSQL(Unique unq) {\n         if (!supportsUniqueConstraints\n             || (unq.isDeferred() && !supportsDeferredUniqueConstraints()))\n             return null;\n+\n         StringBuffer buf = new StringBuffer();\n         if (unq.getName() != null\n             && CONS_NAME_BEFORE.equals(constraintNameMode))\n-            buf.append(\"CONSTRAINT \").append(checkNameLength(unq.getName(), \n-            \tmaxConstraintNameLength, \"long-constraint-name\")).append(\" \");\n+            buf.append(\"CONSTRAINT \").append(unq.getName()).append(\" \");\n         buf.append(\"UNIQUE \");\n         if (unq.getName() != null && CONS_NAME_MID.equals(constraintNameMode))\n             buf.append(unq.getName()).append(\" \");\n@@ -4546,16 +4539,4 @@ public void setTrimSchemaName(boolean trimSchemaName) {\n     public void deleteStream(JDBCStore store, Select sel) throws SQLException {\n         // Do nothing\n     }\n-    \n-    /**\n-     * Validate that the given name is no longer than given maximum length.\n-     * If the given name is indeed longer then raises an UserException with the \n-     * given message key otherwise returns the same name.\n-     */\n-    final String checkNameLength(String name, int length, String msgKey) {\n-    \tif (name.length() > length)\n-    \t\tthrow new UserException(_loc.get(msgKey, name, name.length(), \n-    \t\t\t\tlength));\n-    \treturn name;\n-    }\n }"},{"sha":"8453fe020408c2453acf6046648eb066572ab5c7","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DerbyDictionary.java","status":"modified","additions":2,"deletions":4,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/c687c5b6a0c28f0807e0ed98eb6d8cb7cb8066bf/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DerbyDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/c687c5b6a0c28f0807e0ed98eb6d8cb7cb8066bf/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DerbyDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DerbyDictionary.java?ref=c687c5b6a0c28f0807e0ed98eb6d8cb7cb8066bf","patch":"@@ -46,11 +46,9 @@ public DerbyDictionary() {\n         stringLengthFunction = \"LENGTH({0})\";\n         substringFunctionName = \"SUBSTR\";\n \n-        // Derby name length restriction has been relaxed \n-        // http://www.archivum.info/derby-dev@db.apache.org/2004-12/msg00270.html\n-        maxConstraintNameLength = 128;\n+        maxConstraintNameLength = 18;\n         maxIndexNameLength = 128;\n-        maxColumnNameLength = 128;\n+        maxColumnNameLength = 30;\n         maxTableNameLength = 128;\n \n         useGetBytesForBlobs = true;"},{"sha":"3b5bb6a4996fa2e032ceb648175b445affe79443","filename":"openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/localizer.properties","status":"modified","additions":0,"deletions":11,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/c687c5b6a0c28f0807e0ed98eb6d8cb7cb8066bf/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/c687c5b6a0c28f0807e0ed98eb6d8cb7cb8066bf/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/localizer.properties?ref=c687c5b6a0c28f0807e0ed98eb6d8cb7cb8066bf","patch":"@@ -175,14 +175,3 @@ function-not-supported: The database dictionary in use (\"{0}\") \\\n batch-update-success-count: ExecuteBatch command returns update success count {0}\n connection-defaults: Initial connection autoCommit: {0}, holdability: {1}, \\\n     TransactionIsolation: {2}\n-long-table-name: Table name \"{0}\" is {1}-character long. The database allows \\\n-\tmaximum {2}-character for a table name. \n-long-column-name: Column name \"{0}\" is {1}-character long. The database allows \\\n-\tmaximum {2}-character for a column name. \n-long-index-name: Index name \"{0}\" is {1}-character long. The database allows \\\n-\tmaximum {2}-character for an index name. \n-long-constraint-name: Constraint name \"{0}\" is {1}-character long. The \\\n-\tdatabase allows maximum {2}-character for a constraint name. \n-long-seq-name: Sequence name \"{0}\" is {1}-character long. The database allows \\\n-\tmaximum {2}-character for a sequence name. \n-\t\n\\ No newline at end of file"}]}

