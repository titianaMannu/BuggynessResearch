{"sha":"c6f42826b72940aa771a394d42173b2f7fec0428","node_id":"MDY6Q29tbWl0MjA2MzY0OmM2ZjQyODI2YjcyOTQwYWE3NzFhMzk0ZDQyMTczYjJmN2ZlYzA0Mjg=","commit":{"author":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2021-06-15T14:33:31Z"},"committer":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2021-06-16T10:44:15Z"},"message":"OPENJPA-2876 fix schema 'refresh'\n\nAlso had to fix the schema handling via persistence.xml.\nThinkfully this section has excellent unit test coverage.","tree":{"sha":"eb6d0355470badc13fffc993f54fd23215f9e6da","url":"https://api.github.com/repos/apache/openjpa/git/trees/eb6d0355470badc13fffc993f54fd23215f9e6da"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/c6f42826b72940aa771a394d42173b2f7fec0428","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/c6f42826b72940aa771a394d42173b2f7fec0428","html_url":"https://github.com/apache/openjpa/commit/c6f42826b72940aa771a394d42173b2f7fec0428","comments_url":"https://api.github.com/repos/apache/openjpa/commits/c6f42826b72940aa771a394d42173b2f7fec0428/comments","author":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"committer":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"parents":[{"sha":"f8d258594f55cdf06db16f2321a6ae6c6342616e","url":"https://api.github.com/repos/apache/openjpa/commits/f8d258594f55cdf06db16f2321a6ae6c6342616e","html_url":"https://github.com/apache/openjpa/commit/f8d258594f55cdf06db16f2321a6ae6c6342616e"}],"stats":{"total":59,"additions":26,"deletions":33},"files":[{"sha":"4b3f159afe6960ae988da8aed38c5d55f2c5674b","filename":"openjpa-examples/image-gallery/pom.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/c6f42826b72940aa771a394d42173b2f7fec0428/openjpa-examples/image-gallery/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/c6f42826b72940aa771a394d42173b2f7fec0428/openjpa-examples/image-gallery/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-examples/image-gallery/pom.xml?ref=c6f42826b72940aa771a394d42173b2f7fec0428","patch":"@@ -60,6 +60,11 @@\n       <groupId>org.slf4j</groupId>\n       <artifactId>slf4j-simple</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>com.sun.xml.bind</groupId>\n+      <artifactId>jaxb-impl</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n   </dependencies>\n \n   <build>"},{"sha":"d4ef913dfb7c941ccce31f739bd037a520990bb4","filename":"openjpa-examples/openbooks/pom.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/c6f42826b72940aa771a394d42173b2f7fec0428/openjpa-examples/openbooks/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/c6f42826b72940aa771a394d42173b2f7fec0428/openjpa-examples/openbooks/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-examples/openbooks/pom.xml?ref=c6f42826b72940aa771a394d42173b2f7fec0428","patch":"@@ -75,6 +75,11 @@\n             <artifactId>mysql-connector-java</artifactId>\n             <scope>provided</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>com.sun.xml.bind</groupId>\n+            <artifactId>jaxb-impl</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n     </dependencies>\n \n     <build>"},{"sha":"fe9baada6eb7c962e1a927d7730cbfe7a1a6e997","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCBrokerFactory.java","status":"modified","additions":9,"deletions":13,"changes":22,"blob_url":"https://github.com/apache/openjpa/blob/c6f42826b72940aa771a394d42173b2f7fec0428/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCBrokerFactory.java","raw_url":"https://github.com/apache/openjpa/raw/c6f42826b72940aa771a394d42173b2f7fec0428/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCBrokerFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCBrokerFactory.java?ref=c6f42826b72940aa771a394d42173b2f7fec0428","patch":"@@ -25,11 +25,6 @@\n import static org.apache.openjpa.conf.SchemaGenerationSource.METADATA_THEN_SCRIPT;\n import static org.apache.openjpa.conf.SchemaGenerationSource.SCRIPT;\n import static org.apache.openjpa.conf.SchemaGenerationSource.SCRIPT_THEN_METADATA;\n-import static org.apache.openjpa.jdbc.meta.MappingTool.ACTION_ADD;\n-import static org.apache.openjpa.jdbc.meta.MappingTool.ACTION_DROP;\n-import static org.apache.openjpa.jdbc.meta.MappingTool.ACTION_SCRIPT_CREATE;\n-import static org.apache.openjpa.jdbc.meta.MappingTool.ACTION_SCRIPT_DROP;\n-import static org.apache.openjpa.jdbc.meta.MappingTool.ACTION_SCRIPT_LOAD;\n \n import java.util.Arrays;\n import java.util.Collection;\n@@ -40,6 +35,7 @@\n import org.apache.openjpa.jdbc.conf.JDBCConfigurationImpl;\n import org.apache.openjpa.jdbc.meta.MappingRepository;\n import org.apache.openjpa.jdbc.meta.MappingTool;\n+import org.apache.openjpa.jdbc.schema.SchemaTool;\n import org.apache.openjpa.kernel.AbstractBrokerFactory;\n import org.apache.openjpa.kernel.Bootstrap;\n import org.apache.openjpa.kernel.BrokerImpl;\n@@ -197,7 +193,7 @@ private void mapSchemaGenerationToSynchronizeMappings(JDBCConfiguration conf) {\n \n         String loadFile = conf.getLoadScriptSource();\n         if (loadFile != null) {\n-            actions += \",\" + ACTION_SCRIPT_LOAD;\n+            actions += \",\" + MappingTool.ACTION_SCRIPT_LOAD;\n         }\n \n         if (actions.length() > 0) {\n@@ -207,38 +203,38 @@ private void mapSchemaGenerationToSynchronizeMappings(JDBCConfiguration conf) {\n \n     private String generateSchemaCreation(JDBCConfiguration conf) {\n         if (conf.getCreateScriptTarget() != null) {\n-            return MappingTool.ACTION_ADD;\n+            return SchemaTool.ACTION_BUILD;\n         } else {\n             int createSource = conf.getCreateSourceConstant();\n             if (createSource == SchemaGenerationSource.NONE && conf.getCreateScriptSource() != null) {\n                 createSource = SCRIPT;\n             } else {\n                 createSource = METADATA;\n             }\n-            return mapGenerationStrategyActions(createSource, ACTION_ADD, ACTION_SCRIPT_CREATE);\n+            return mapGenerationStrategyActions(createSource, SchemaTool.ACTION_ADD, MappingTool.ACTION_SCRIPT_CREATE);\n         }\n     }\n \n     private String generateSchemaDrop(JDBCConfiguration conf) {\n         if (conf.getDropScriptTarget() != null) {\n-            return MappingTool.ACTION_DROP;\n+            return SchemaTool.ACTION_DROP;\n         } else {\n             int dropSource = conf.getDropSourceConstant();\n             if (dropSource == SchemaGenerationSource.NONE && conf.getDropScriptSource() != null) {\n                 dropSource = SCRIPT;\n             } else {\n                 dropSource = METADATA;\n             }\n-            return mapGenerationStrategyActions(dropSource, ACTION_DROP, ACTION_SCRIPT_DROP);\n+            return mapGenerationStrategyActions(dropSource, SchemaTool.ACTION_DROP, MappingTool.ACTION_SCRIPT_DROP);\n         }\n     }\n \n     private String generateSchemaDropCreate(JDBCConfiguration conf) {\n         if (conf.getCreateScriptTarget() != null && conf.getDropScriptTarget() != null) {\n-            return MappingTool.ACTION_ADD + \",\" + MappingTool.ACTION_DROP;\n+            return SchemaTool.ACTION_BUILD + \",\" + SchemaTool.ACTION_DROP;\n         } else {\n-            return mapGenerationStrategyActions(conf.getDropSourceConstant(), ACTION_DROP, ACTION_SCRIPT_DROP) + \",\" +\n-                   mapGenerationStrategyActions(conf.getCreateSourceConstant(), ACTION_ADD, ACTION_SCRIPT_CREATE);\n+            return mapGenerationStrategyActions(conf.getDropSourceConstant(), SchemaTool.ACTION_DROP, MappingTool.ACTION_SCRIPT_DROP) + \",\" +\n+                   mapGenerationStrategyActions(conf.getCreateSourceConstant(), SchemaTool.ACTION_ADD, MappingTool.ACTION_SCRIPT_CREATE);\n         }\n     }\n "},{"sha":"4d7561b1857b565398684d1129e92f43dc97c8d1","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingTool.java","status":"modified","additions":3,"deletions":8,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/c6f42826b72940aa771a394d42173b2f7fec0428/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingTool.java","raw_url":"https://github.com/apache/openjpa/raw/c6f42826b72940aa771a394d42173b2f7fec0428/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingTool.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingTool.java?ref=c6f42826b72940aa771a394d42173b2f7fec0428","patch":"@@ -534,14 +534,14 @@ else if (_dropMap != null)\n                             tool = newSchemaTool(schemaAction);\n                         }\n \n-                        if (schemaAction.equals(ACTION_ADD) && _conf.getCreateScriptTarget() != null) {\n+                        if (schemaAction.equals(SchemaTool.ACTION_BUILD) && _conf.getCreateScriptTarget() != null) {\n                             tool.setWriter(new PrintWriter(_conf.getCreateScriptTarget()));\n                             tool.setIndexes(true);\n                             tool.setForeignKeys(true);\n                             tool.setSequences(true);\n                         }\n \n-                        if (schemaAction.equals(ACTION_DROP) && _conf.getDropScriptTarget() != null) {\n+                        if (schemaAction.equals(SchemaTool.ACTION_DROP) && _conf.getDropScriptTarget() != null) {\n                             tool.setWriter(new PrintWriter(_conf.getDropScriptTarget()));\n                         }\n \n@@ -1134,12 +1134,7 @@ public static boolean run(JDBCConfiguration conf, String[] args,\n             return false;\n         }\n \n-        MappingTool tool;\n-        try {\n-            tool = new MappingTool(conf, flags.action, flags.meta, loader);\n-        } catch (IllegalArgumentException iae) {\n-            return false;\n-        }\n+        MappingTool tool = new MappingTool(conf, flags.action, flags.meta, loader);\n \n         // setup the tool\n         tool.setIgnoreErrors(flags.ignoreErrors);"},{"sha":"d42c5ea415768912cbe78e2e63b47821973dc1ee","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaTool.java","status":"modified","additions":4,"deletions":12,"changes":16,"blob_url":"https://github.com/apache/openjpa/blob/c6f42826b72940aa771a394d42173b2f7fec0428/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaTool.java","raw_url":"https://github.com/apache/openjpa/raw/c6f42826b72940aa771a394d42173b2f7fec0428/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaTool.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaTool.java?ref=c6f42826b72940aa771a394d42173b2f7fec0428","patch":"@@ -575,9 +575,7 @@ protected void buildSchema(SchemaGroup db, SchemaGroup repos, boolean considerDa\n                 seqs = value.getSequences();\n                 for (Sequence seq : seqs) {\n                     if (considerDatabaseState && db.findSequence(value, seq.getQualifiedPath()) != null) {\n-                        if (_writer == null) {\n-                            continue;\n-                        }\n+                        continue;\n                     }\n \n                     if (createSequence(seq)) {\n@@ -656,9 +654,7 @@ else if (!pk.equalsPrimaryKey(dbTable.getPrimaryKey()))\n             tabs = schema1.getTables();\n             for (Table tab : tabs) {\n                 if (considerDatabaseState && db.findTable(schema1, tab.getQualifiedPath()) != null) {\n-                    if (_writer == null) {\n-                        continue;\n-                    }\n+                    continue;\n                 }\n \n                 if (createTable(tab)) {\n@@ -712,9 +708,7 @@ else if (!index.equalsIndex(idx))\n             for (Table tab : tabs) {\n                 // create unique constraints only on new tables\n                 if (!newTables.contains(tab)) {\n-                    if (_writer == null) {\n-                        continue;\n-                    }\n+                    continue;\n                 }\n \n                 uniques = tab.getUniques();\n@@ -740,9 +734,7 @@ else if (!index.equalsIndex(idx))\n                 // create foreign keys on new tables even if fks\n                 // have been turned off\n                 if (!_fks && !newTables.contains(tab)) {\n-                    if (_writer == null) {\n-                        continue;\n-                    }\n+                    continue;\n                 }\n \n                 fks = tab.getForeignKeys();"}]}

