{"sha":"c70b70b30f95f27bd7352b0eb92b79b39444662a","node_id":"MDY6Q29tbWl0MjA2MzY0OmM3MGI3MGIzMGY5NWYyN2JkNzM1MmIwZWI5MmI3OWIzOTQ0NDY2MmE=","commit":{"author":{"name":"David J. Wisneski","email":"wisneskid@apache.org","date":"2007-07-24T19:51:19Z"},"committer":{"name":"David J. Wisneski","email":"wisneskid@apache.org","date":"2007-07-24T19:51:19Z"},"message":"OPENJPA-240 XMLMapping Query - rename XMLMapping interface to XMLMetaData\nHelp Catalina committing changes for renaming classes, part 2.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@559179 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"004c981d87c31f4eac96f7bd97bc95f791db0b2f","url":"https://api.github.com/repos/apache/openjpa/git/trees/004c981d87c31f4eac96f7bd97bc95f791db0b2f"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/c70b70b30f95f27bd7352b0eb92b79b39444662a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/c70b70b30f95f27bd7352b0eb92b79b39444662a","html_url":"https://github.com/apache/openjpa/commit/c70b70b30f95f27bd7352b0eb92b79b39444662a","comments_url":"https://api.github.com/repos/apache/openjpa/commits/c70b70b30f95f27bd7352b0eb92b79b39444662a/comments","author":null,"committer":null,"parents":[{"sha":"9316b8157d3d5c3f91bf9612c944dc462198cb5b","url":"https://api.github.com/repos/apache/openjpa/commits/9316b8157d3d5c3f91bf9612c944dc462198cb5b","html_url":"https://github.com/apache/openjpa/commit/9316b8157d3d5c3f91bf9612c944dc462198cb5b"}],"stats":{"total":98,"additions":49,"deletions":49},"files":[{"sha":"819c807883e39f2059c0f86c7d628571472b9763","filename":"openjpa-jdbc-5/src/main/java/org/apache/openjpa/jdbc/meta/XMLMappingRepository.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/apache/openjpa/blob/c70b70b30f95f27bd7352b0eb92b79b39444662a/openjpa-jdbc-5/src/main/java/org/apache/openjpa/jdbc/meta/XMLMappingRepository.java","raw_url":"https://github.com/apache/openjpa/raw/c70b70b30f95f27bd7352b0eb92b79b39444662a/openjpa-jdbc-5/src/main/java/org/apache/openjpa/jdbc/meta/XMLMappingRepository.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc-5/src/main/java/org/apache/openjpa/jdbc/meta/XMLMappingRepository.java?ref=c70b70b30f95f27bd7352b0eb92b79b39444662a","patch":"@@ -23,7 +23,7 @@\n \n import org.apache.openjpa.meta.FieldMetaData;\n import org.apache.openjpa.meta.XMLClassMetaData;\n-import org.apache.openjpa.meta.XMLMapping;\n+import org.apache.openjpa.meta.XMLMetaData;\n \n /**\n  * Repository of object/relational mapping information.\n@@ -34,7 +34,7 @@\n  */\n public class XMLMappingRepository extends MappingRepository {\n     // xml mapping\n-    protected final XMLMapping[] EMPTY_XMLMETAS;\n+    protected final XMLMetaData[] EMPTY_XMLMETAS;\n     private final Map _xmlmetas = new HashMap();\n \n     public XMLMappingRepository() {\n@@ -49,7 +49,7 @@ public synchronized XMLClassMetaData addXMLClassMetaData(FieldMetaData fmd,\n         return meta;\n     }\n     \n-    public XMLMapping getXMLClassMetaData(Class cls) {\n+    public XMLMetaData getXMLClassMetaData(Class cls) {\n         synchronized(_xmlmetas) {\n             if (_xmlmetas.isEmpty())\n                 return null;\n@@ -58,8 +58,8 @@ public XMLMapping getXMLClassMetaData(Class cls) {\n         }\n     }\n     \n-    public XMLMapping getXMLMetaData(FieldMetaData fmd) {\n-        XMLMapping xmlmeta = null;\n+    public XMLMetaData getXMLMetaData(FieldMetaData fmd) {\n+        XMLMetaData xmlmeta = null;\n         if (XMLClassMetaData.isXMLMapping(fmd.getDeclaredType())) {\n             xmlmeta = getXMLClassMetaData(fmd.getDeclaredType());\n             if (xmlmeta == null)\n@@ -68,15 +68,15 @@ public XMLMapping getXMLMetaData(FieldMetaData fmd) {\n         return xmlmeta;\n     }\n     \n-    public synchronized void addXMLClassMetaData(Class cls, XMLMapping meta) {\n+    public synchronized void addXMLClassMetaData(Class cls, XMLMetaData meta) {\n         _xmlmetas.put(cls, meta);\n     }    \n     \n     protected XMLClassMetaData newXMLClassMetaData(FieldMetaData fmd, String name) {\n         return new XMLClassMetaData(fmd.getDeclaredType(), name, this);\n     }\n         \n-    protected XMLMapping[] newXMLClassMetaDataArray(int length) {\n+    protected XMLMetaData[] newXMLClassMetaDataArray(int length) {\n         return new XMLClassMetaData[length];\n     }\n }"},{"sha":"cb1ecd62647a0ace78c32ec2fc9979f872bc915c","filename":"openjpa-jdbc-5/src/main/java/org/apache/openjpa/meta/XMLClassMetaData.java","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/c70b70b30f95f27bd7352b0eb92b79b39444662a/openjpa-jdbc-5/src/main/java/org/apache/openjpa/meta/XMLClassMetaData.java","raw_url":"https://github.com/apache/openjpa/raw/c70b70b30f95f27bd7352b0eb92b79b39444662a/openjpa-jdbc-5/src/main/java/org/apache/openjpa/meta/XMLClassMetaData.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc-5/src/main/java/org/apache/openjpa/meta/XMLClassMetaData.java?ref=c70b70b30f95f27bd7352b0eb92b79b39444662a","patch":"@@ -32,7 +32,7 @@\n \n import org.apache.openjpa.jdbc.meta.XMLMappingRepository;\n import org.apache.openjpa.meta.JavaTypes;\n-import org.apache.openjpa.meta.XMLMapping;\n+import org.apache.openjpa.meta.XMLMetaData;\n import org.apache.openjpa.meta.XMLFieldMetaData;\n import org.apache.commons.lang.StringUtils;\n \n@@ -44,7 +44,7 @@\n  * @author Catalina Wei\n  * @since 1.0.0\n  */\n-public class XMLClassMetaData implements XMLMapping     \n+public class XMLClassMetaData implements XMLMetaData     \n {\n     private Class _type;\n     private int _code = JavaTypes.OBJECT;\n@@ -153,8 +153,8 @@ public boolean isXmlAttribute() {\n         return false;\n     }\n     \n-    public XMLMapping getFieldMapping(String name) {\n-        return (XMLMapping) _fieldMap.get(name);\n+    public XMLMetaData getFieldMapping(String name) {\n+        return (XMLMetaData) _fieldMap.get(name);\n     }\n     \n     public void setType(Class type) {\n@@ -193,7 +193,7 @@ private synchronized void populateFromReflection(Class cls,\n         for (int i = 0; i < members.length; i++) {\n             Member member = members[i];\n             AnnotatedElement el = (AnnotatedElement) member;\n-            XMLMapping field = null;\n+            XMLMetaData field = null;\n             if (el.getAnnotation(XmlElement.class) != null) {\n                 String xmlname = el.getAnnotation(XmlElement.class).name();\n                 // avoid JAXB XML bind default name"},{"sha":"dadb17e5a49afd2caa7853e6881d62d07a8515e2","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/ConstPath.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/c70b70b30f95f27bd7352b0eb92b79b39444662a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/ConstPath.java","raw_url":"https://github.com/apache/openjpa/raw/c70b70b30f95f27bd7352b0eb92b79b39444662a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/ConstPath.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/ConstPath.java?ref=c70b70b30f95f27bd7352b0eb92b79b39444662a","patch":"@@ -31,7 +31,7 @@\n import org.apache.openjpa.kernel.exps.ExpressionVisitor;\n import org.apache.openjpa.meta.ClassMetaData;\n import org.apache.openjpa.meta.FieldMetaData;\n-import org.apache.openjpa.meta.XMLMapping;\n+import org.apache.openjpa.meta.XMLMetaData;\n import org.apache.openjpa.util.InternalException;\n \n /**\n@@ -206,13 +206,13 @@ public ConstPathExpState(ExpState constantState) {\n         }\n     }\n     \n-    public void get(FieldMetaData fmd, XMLMapping meta) {\n+    public void get(FieldMetaData fmd, XMLMetaData meta) {\n     }\n \n-    public void get(XMLMapping meta, String name) {\n+    public void get(XMLMetaData meta, String name) {\n     }\n \n-    public XMLMapping getXmlMapping() {\n+    public XMLMetaData getXmlMapping() {\n         return null;\n     }\n }"},{"sha":"74d766a85ae78bfa171d7dadf8d795aa0fac9934","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/EndsWithExpression.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/c70b70b30f95f27bd7352b0eb92b79b39444662a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/EndsWithExpression.java","raw_url":"https://github.com/apache/openjpa/raw/c70b70b30f95f27bd7352b0eb92b79b39444662a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/EndsWithExpression.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/EndsWithExpression.java?ref=c70b70b30f95f27bd7352b0eb92b79b39444662a","patch":"@@ -28,7 +28,7 @@\n import org.apache.openjpa.jdbc.sql.SQLBuffer;\n import org.apache.openjpa.jdbc.sql.Select;\n import org.apache.openjpa.kernel.exps.ExpressionVisitor;\n-import org.apache.openjpa.meta.XMLMapping;\n+import org.apache.openjpa.meta.XMLMetaData;\n \n /**\n  * Test if one string ends with another.\n@@ -200,7 +200,7 @@ public PCPath getXPath() {\n             return null;\n         }\n         \n-        public XMLMapping getXmlMapping() {\n+        public XMLMetaData getXmlMapping() {\n             return null;\n         }\n     }"},{"sha":"a2a63f4d7956c8b80f0e7da2cffb899ea3b198ca","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/FilterValue.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/c70b70b30f95f27bd7352b0eb92b79b39444662a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/FilterValue.java","raw_url":"https://github.com/apache/openjpa/raw/c70b70b30f95f27bd7352b0eb92b79b39444662a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/FilterValue.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/FilterValue.java?ref=c70b70b30f95f27bd7352b0eb92b79b39444662a","patch":"@@ -23,7 +23,7 @@\n import org.apache.openjpa.jdbc.schema.Column;\n import org.apache.openjpa.jdbc.schema.Table;\n import org.apache.openjpa.jdbc.sql.SQLBuffer;\n-import org.apache.openjpa.meta.XMLMapping;\n+import org.apache.openjpa.meta.XMLMetaData;\n \n /**\n  * The simplified public view of any non-operator in a query filter,\n@@ -115,5 +115,5 @@\n      * If this is an XPath, return XML mapping metadata,\n      * else return null;\n      */\n-    public XMLMapping getXmlMapping();\n+    public XMLMetaData getXmlMapping();\n }"},{"sha":"bfa10db61f0f7dcfc7a39232a695148a8b112cd4","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/FilterValueImpl.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/c70b70b30f95f27bd7352b0eb92b79b39444662a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/FilterValueImpl.java","raw_url":"https://github.com/apache/openjpa/raw/c70b70b30f95f27bd7352b0eb92b79b39444662a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/FilterValueImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/FilterValueImpl.java?ref=c70b70b30f95f27bd7352b0eb92b79b39444662a","patch":"@@ -24,7 +24,7 @@\n import org.apache.openjpa.jdbc.schema.Table;\n import org.apache.openjpa.jdbc.sql.SQLBuffer;\n import org.apache.openjpa.jdbc.sql.Select;\n-import org.apache.openjpa.meta.XMLMapping;\n+import org.apache.openjpa.meta.XMLMetaData;\n \n /**\n  * Implementation of {@link FilterValue} that wraps a {@link Val}.\n@@ -107,7 +107,7 @@ public PCPath getXPath() {\n             return null;\n     }\n     \n-    public XMLMapping getXmlMapping() {\n+    public XMLMetaData getXmlMapping() {\n         return (getXPath() == null) ? null : getXPath().getXmlMapping();\n     }\n }"},{"sha":"957b3e46c76a08b35190f1d242bebcd05791a6fb","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/PCPath.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/apache/openjpa/blob/c70b70b30f95f27bd7352b0eb92b79b39444662a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/PCPath.java","raw_url":"https://github.com/apache/openjpa/raw/c70b70b30f95f27bd7352b0eb92b79b39444662a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/PCPath.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/PCPath.java?ref=c70b70b30f95f27bd7352b0eb92b79b39444662a","patch":"@@ -40,7 +40,7 @@\n import org.apache.openjpa.meta.ClassMetaData;\n import org.apache.openjpa.meta.FieldMetaData;\n import org.apache.openjpa.meta.JavaTypes;\n-import org.apache.openjpa.meta.XMLMapping;\n+import org.apache.openjpa.meta.XMLMetaData;\n import org.apache.openjpa.util.UserException;\n \n /**\n@@ -195,8 +195,8 @@ public String getXPath() {\n         // we build the remaining xpath that follows the root element.\n         while (itr.hasNext()) {\n             action = (Action) itr.next();\n-            if (((XMLMapping) action.data).getXmlname() != null)                 \n-                xpath.append(((XMLMapping) action.data).getXmlname());\n+            if (((XMLMetaData) action.data).getXmlname() != null)                 \n+                xpath.append(((XMLMetaData) action.data).getXmlname());\n             else\n                 xpath.append(\"*\");\n             if (itr.hasNext())\n@@ -311,7 +311,7 @@ public void get(FieldMetaData field, boolean nullTraversal) {\n         _key = false;\n     }\n     \n-    public void get(FieldMetaData fmd, XMLMapping meta) {\n+    public void get(FieldMetaData fmd, XMLMetaData meta) {\n         if (_actions == null)\n             _actions = new LinkedList();\n         Action action = new Action();\n@@ -324,7 +324,7 @@ public void get(FieldMetaData fmd, XMLMapping meta) {\n         _xmlfield = fmd;\n     }\n     \n-    public void get(XMLMapping meta, String name) {\n+    public void get(XMLMetaData meta, String name) {\n         Action action = new Action();\n         action.op = Action.GET_XPATH;\n         action.data = meta.getFieldMapping(name);\n@@ -334,10 +334,10 @@ public void get(XMLMapping meta, String name) {\n         _type = XPATH;\n     }\n     \n-    public XMLMapping getXmlMapping() {\n+    public XMLMetaData getXmlMapping() {\n         Action act = (Action) _actions.getLast();\n         if (act != null)\n-            return (XMLMapping) act.data;\n+            return (XMLMetaData) act.data;\n         return null;\n     }\n \n@@ -384,7 +384,7 @@ public Class getType() {\n             return _cast;\n         Action act = lastFieldAction();\n         if (act != null && act.op == Action.GET_XPATH)\n-            return ((XMLMapping) act.data).getType();\n+            return ((XMLMetaData) act.data).getType();\n         \n         FieldMetaData fld = (act == null) ? null : (FieldMetaData) act.data;\n         boolean key = act != null && act.op == Action.GET_KEY;"},{"sha":"e7b2c518681e06ea44dd5be27049bea4344efd04","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/StartsWithExpression.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/c70b70b30f95f27bd7352b0eb92b79b39444662a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/StartsWithExpression.java","raw_url":"https://github.com/apache/openjpa/raw/c70b70b30f95f27bd7352b0eb92b79b39444662a/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/StartsWithExpression.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/StartsWithExpression.java?ref=c70b70b30f95f27bd7352b0eb92b79b39444662a","patch":"@@ -28,7 +28,7 @@\n import org.apache.openjpa.jdbc.sql.SQLBuffer;\n import org.apache.openjpa.jdbc.sql.Select;\n import org.apache.openjpa.kernel.exps.ExpressionVisitor;\n-import org.apache.openjpa.meta.XMLMapping;\n+import org.apache.openjpa.meta.XMLMetaData;\n import serp.util.Numbers;\n \n /**\n@@ -190,7 +190,7 @@ public PCPath getXPath() {\n             return null;\n         }\n         \n-        public XMLMapping getXmlMapping() {\n+        public XMLMetaData getXmlMapping() {\n             return null;\n         }\n \n@@ -275,7 +275,7 @@ public PCPath getXPath() {\n             return null;\n         }\n         \n-        public XMLMapping getXmlMapping() {\n+        public XMLMetaData getXmlMapping() {\n             return null;\n         }\n     }"},{"sha":"4e0571350f75b0855f76caf731b2b997a3a7c0d6","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/AbstractExpressionBuilder.java","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/c70b70b30f95f27bd7352b0eb92b79b39444662a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/AbstractExpressionBuilder.java","raw_url":"https://github.com/apache/openjpa/raw/c70b70b30f95f27bd7352b0eb92b79b39444662a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/AbstractExpressionBuilder.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/AbstractExpressionBuilder.java?ref=c70b70b30f95f27bd7352b0eb92b79b39444662a","patch":"@@ -31,7 +31,7 @@\n import org.apache.openjpa.meta.ClassMetaData;\n import org.apache.openjpa.meta.FieldMetaData;\n import org.apache.openjpa.meta.JavaTypes;\n-import org.apache.openjpa.meta.XMLMapping;\n+import org.apache.openjpa.meta.XMLMetaData;\n import org.apache.openjpa.util.InternalException;\n import org.apache.openjpa.util.OpenJPAException;\n import org.apache.openjpa.util.UnsupportedException;\n@@ -247,7 +247,7 @@ protected Value traversePath(Path path, String field) {\n     }\n     \n     protected Value traverseXPath(Path path, String field) {\n-        XMLMapping meta = path.getXmlMapping();\n+        XMLMetaData meta = path.getXmlMapping();\n         if (meta.getFieldMapping(field) == null) {\n             throw parseException(EX_USER, \"no-field\",\n                     new Object[]{ meta.getType(), field }, null);\n@@ -297,7 +297,7 @@ protected Value traversePath(Path path, String field, boolean pcOnly,\n         }\n         else {\n             // xmlsupport xpath\n-            XMLMapping xmlmeta = fmd.getRepository().getXMLMetaData(fmd);\n+            XMLMetaData xmlmeta = fmd.getRepository().getXMLMetaData(fmd);\n             if (xmlmeta != null) {\n                 path.get(fmd, xmlmeta);\n                 return path;"},{"sha":"27f06466c5fc057e73b13f0094cd1f4e817618d3","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/CandidatePath.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/c70b70b30f95f27bd7352b0eb92b79b39444662a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/CandidatePath.java","raw_url":"https://github.com/apache/openjpa/raw/c70b70b30f95f27bd7352b0eb92b79b39444662a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/CandidatePath.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/CandidatePath.java?ref=c70b70b30f95f27bd7352b0eb92b79b39444662a","patch":"@@ -30,7 +30,7 @@\n import org.apache.openjpa.kernel.StoreContext;\n import org.apache.openjpa.meta.ClassMetaData;\n import org.apache.openjpa.meta.FieldMetaData;\n-import org.apache.openjpa.meta.XMLMapping;\n+import org.apache.openjpa.meta.XMLMetaData;\n \n /**\n  * A path represents a traversal into fields of a candidate object.\n@@ -186,13 +186,13 @@ public boolean equals(Object other) {\n         }\n \t}\n \n-    public void get(FieldMetaData fmd, XMLMapping meta) {\n+    public void get(FieldMetaData fmd, XMLMetaData meta) {\n     }\n     \n-    public void get(XMLMapping meta, String name) {\n+    public void get(XMLMetaData meta, String name) {\n     }\n     \n-    public XMLMapping getXmlMapping() {\n+    public XMLMetaData getXmlMapping() {\n         return null;\n     }\n }"},{"sha":"71b41a2c614e7a3f20e02cb0d8137cbba049e804","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/Path.java","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/c70b70b30f95f27bd7352b0eb92b79b39444662a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/Path.java","raw_url":"https://github.com/apache/openjpa/raw/c70b70b30f95f27bd7352b0eb92b79b39444662a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/Path.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/Path.java?ref=c70b70b30f95f27bd7352b0eb92b79b39444662a","patch":"@@ -19,7 +19,7 @@\n package org.apache.openjpa.kernel.exps;\n \n import org.apache.openjpa.meta.FieldMetaData;\n-import org.apache.openjpa.meta.XMLMapping;\n+import org.apache.openjpa.meta.XMLMetaData;\n \n /**\n  * A path represents a traversal into fields of a candidate object.\n@@ -51,7 +51,7 @@\n      * @param fmd field maps to xml column\n      * @param meta associated xml mapping\n      */\n-    public void get(FieldMetaData fmd, XMLMapping meta);\n+    public void get(FieldMetaData fmd, XMLMetaData meta);\n     \n     /**\n      * Traverse into the gevin xpath name of the current object, and update\n@@ -60,11 +60,11 @@\n      * @param meta\n      * @param name\n      */\n-    public void get(XMLMapping meta, String name);\n+    public void get(XMLMetaData meta, String name);\n     \n     /**\n      * Return the current XPath's xmlmapping metadata.\n      * @return Return xmlmapping\n      */\n-    public XMLMapping getXmlMapping();\n+    public XMLMetaData getXmlMapping();\n }"},{"sha":"a31e68a08fbc08001ea12f4f1dee4e6e9fc31a18","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataRepository.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/c70b70b30f95f27bd7352b0eb92b79b39444662a/openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataRepository.java","raw_url":"https://github.com/apache/openjpa/raw/c70b70b30f95f27bd7352b0eb92b79b39444662a/openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataRepository.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataRepository.java?ref=c70b70b30f95f27bd7352b0eb92b79b39444662a","patch":"@@ -1856,7 +1856,7 @@ public boolean equals(Object obj)\n      * @param fmd\n      * @return null\n      */\n-    public XMLMapping getXMLMetaData(FieldMetaData fmd) {\n+    public XMLMetaData getXMLMetaData(FieldMetaData fmd) {\n         return null;\n     }\n }"},{"sha":"054ef3bf92fe14cfbf7344143bb0f44c39edf35b","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/XMLFieldMetaData.java","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/c70b70b30f95f27bd7352b0eb92b79b39444662a/openjpa-kernel/src/main/java/org/apache/openjpa/meta/XMLFieldMetaData.java","raw_url":"https://github.com/apache/openjpa/raw/c70b70b30f95f27bd7352b0eb92b79b39444662a/openjpa-kernel/src/main/java/org/apache/openjpa/meta/XMLFieldMetaData.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/XMLFieldMetaData.java?ref=c70b70b30f95f27bd7352b0eb92b79b39444662a","patch":"@@ -26,7 +26,7 @@\n  * @author Catalina Wei\n  * @since 1.0.0\n  */\n-public class XMLFieldMetaData implements XMLMapping {\n+public class XMLFieldMetaData implements XMLMetaData {\n \n     private String _name;\n     private String _xmlname = null;\n@@ -105,7 +105,7 @@ public boolean isXmlAttribute() {\n         return _xmltype == ATTRIBUTE;\n     }\n     \n-    public XMLMapping getFieldMapping(String name) {\n+    public XMLMetaData getFieldMapping(String name) {\n         return null;\n     }\n }"},{"sha":"af4128a0b40ad38c56c6fd4a3863821646cc2d2e","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/XMLMetaData.java","status":"renamed","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/c70b70b30f95f27bd7352b0eb92b79b39444662a/openjpa-kernel/src/main/java/org/apache/openjpa/meta/XMLMetaData.java","raw_url":"https://github.com/apache/openjpa/raw/c70b70b30f95f27bd7352b0eb92b79b39444662a/openjpa-kernel/src/main/java/org/apache/openjpa/meta/XMLMetaData.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/XMLMetaData.java?ref=c70b70b30f95f27bd7352b0eb92b79b39444662a","patch":"@@ -26,7 +26,7 @@\n  * @author Catalina Wei\n  * @since 1.0.0\n  */\n-public interface XMLMapping extends Serializable {\n+public interface XMLMetaData extends Serializable {\n     /**\n      * JAXB XML binding default name\n      */\n@@ -55,7 +55,7 @@\n      * @param name the field name.\n      * @return XMLMapping.\n      */\n-    public XMLMapping getFieldMapping(String name); \n+    public XMLMetaData getFieldMapping(String name); \n     \n     /**\n      * Set type.","previous_filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/XMLMapping.java"}]}

