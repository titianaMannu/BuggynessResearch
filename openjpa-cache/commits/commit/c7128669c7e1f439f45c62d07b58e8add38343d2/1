{"sha":"c7128669c7e1f439f45c62d07b58e8add38343d2","node_id":"MDY6Q29tbWl0MjA2MzY0OmM3MTI4NjY5YzdlMWY0MzlmNDVjNjJkMDdiNThlOGFkZDM4MzQzZDI=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-01-17T21:40:37Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-01-17T21:40:37Z"},"message":"fixes for OPENJPA-102 and OPENJPA-104\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@497185 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"3d19791cada363b1f9959c48c9bced644c8a1270","url":"https://api.github.com/repos/apache/openjpa/git/trees/3d19791cada363b1f9959c48c9bced644c8a1270"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/c7128669c7e1f439f45c62d07b58e8add38343d2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/c7128669c7e1f439f45c62d07b58e8add38343d2","html_url":"https://github.com/apache/openjpa/commit/c7128669c7e1f439f45c62d07b58e8add38343d2","comments_url":"https://api.github.com/repos/apache/openjpa/commits/c7128669c7e1f439f45c62d07b58e8add38343d2/comments","author":null,"committer":null,"parents":[{"sha":"d58ba3b25be046a2963d362b5addb4b104592212","url":"https://api.github.com/repos/apache/openjpa/commits/d58ba3b25be046a2963d362b5addb4b104592212","html_url":"https://github.com/apache/openjpa/commit/d58ba3b25be046a2963d362b5addb4b104592212"}],"stats":{"total":24,"additions":21,"deletions":3},"files":[{"sha":"6ab824bed63efd7fd1e5890a2f39bb5b80544a32","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/conf/AutoDetachValue.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/c7128669c7e1f439f45c62d07b58e8add38343d2/openjpa-kernel/src/main/java/org/apache/openjpa/conf/AutoDetachValue.java","raw_url":"https://github.com/apache/openjpa/raw/c7128669c7e1f439f45c62d07b58e8add38343d2/openjpa-kernel/src/main/java/org/apache/openjpa/conf/AutoDetachValue.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/conf/AutoDetachValue.java?ref=c7128669c7e1f439f45c62d07b58e8add38343d2","patch":"@@ -30,11 +30,13 @@\n \n     public static final String DETACH_CLOSE = \"close\";\n     public static final String DETACH_COMMIT = \"commit\";\n+    public static final String DETACH_ROLLBACK= \"rollback\";\n     public static final String DETACH_NONTXREAD = \"nontx-read\";\n \n     private static String[] ALIASES = new String[]{\n         DETACH_CLOSE, String.valueOf(AutoDetach.DETACH_CLOSE),\n         DETACH_COMMIT, String.valueOf(AutoDetach.DETACH_COMMIT),\n+        DETACH_ROLLBACK, String.valueOf(AutoDetach.DETACH_ROLLBACK),\n         DETACH_NONTXREAD, String.valueOf(AutoDetach.DETACH_NONTXREAD),\n         // for compatibility with JDO DetachAllOnCommit\n         \"true\", String.valueOf(AutoDetach.DETACH_COMMIT),"},{"sha":"84376720cb5846fab58bcd87d28f8a4a93abf263","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AutoDetach.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/c7128669c7e1f439f45c62d07b58e8add38343d2/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AutoDetach.java","raw_url":"https://github.com/apache/openjpa/raw/c7128669c7e1f439f45c62d07b58e8add38343d2/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AutoDetach.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AutoDetach.java?ref=c7128669c7e1f439f45c62d07b58e8add38343d2","patch":"@@ -35,4 +35,9 @@\n      * nontransactional operation uses a new persistence context in essence.\n      */\n     public static final int DETACH_NONTXREAD = 2 << 2;\n+\n+    /**\n+     * Detach context on failed transaction commit / rollback.\n+     */\n+    public static final int DETACH_ROLLBACK = 2 << 3;\n }"},{"sha":"6357e320dd929c3b44d136bd12d4fcae00f33338","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/c7128669c7e1f439f45c62d07b58e8add38343d2/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/c7128669c7e1f439f45c62d07b58e8add38343d2/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java?ref=c7128669c7e1f439f45c62d07b58e8add38343d2","patch":"@@ -1710,7 +1710,7 @@ public boolean beginOperation(boolean syncTrans) {\n \n     /**\n      * Mark the operation over. If outermost caller of stack, returns true\n-     * and will detach manageed instances if necessary.\n+     * and will detach managed instances if necessary.\n      */\n     public boolean endOperation() {\n         try {\n@@ -1779,6 +1779,10 @@ public void afterCompletion(int status) {\n \n             if ((_autoDetach & DETACH_COMMIT) != 0)\n                 detachAllInternal(null);\n+            else if (status == Status.STATUS_ROLLEDBACK \n+                && (_autoDetach & DETACH_ROLLBACK) != 0) {\n+                detachAllInternal(null);\n+            }\n \n             // in an ee context, it's possible that the user tried to close\n             // us but we didn't actually close because we were waiting on this"},{"sha":"c7f0756e4deb0b7cb69a23a7ac7eb4201b035cb2","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DetachManager.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/c7128669c7e1f439f45c62d07b58e8add38343d2/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DetachManager.java","raw_url":"https://github.com/apache/openjpa/raw/c7128669c7e1f439f45c62d07b58e8add38343d2/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DetachManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DetachManager.java?ref=c7128669c7e1f439f45c62d07b58e8add38343d2","patch":"@@ -40,6 +40,7 @@\n import org.apache.openjpa.meta.FieldMetaData;\n import org.apache.openjpa.meta.JavaTypes;\n import org.apache.openjpa.util.CallbackException;\n+import org.apache.openjpa.util.ObjectNotFoundException;\n import org.apache.openjpa.util.Proxy;\n import org.apache.openjpa.util.ProxyManager;\n import org.apache.openjpa.util.UserException;\n@@ -148,7 +149,12 @@ private static void preDetach(Broker broker, StateManagerImpl sm,\n             exclude = StoreContext.EXCLUDE_ALL;\n         else if (detachMode == DETACH_ALL)\n             loadMode = StateManagerImpl.LOAD_ALL;\n-        sm.load(broker.getFetchConfiguration(), loadMode, exclude, null, false);\n+        try {\n+            sm.load(broker.getFetchConfiguration(), loadMode, exclude, null, \n+                false);\n+        } catch (ObjectNotFoundException onfe) {\n+            // consume the exception\n+        }\n \n         // create bitset of fields to detach; if mode is all we can use\n         // currently loaded bitset clone, since we know all fields are loaded"},{"sha":"d06b017b70c2c2202dbe65982ca9fce50f3c4a8e","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerFactoryImpl.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/c7128669c7e1f439f45c62d07b58e8add38343d2/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerFactoryImpl.java","raw_url":"https://github.com/apache/openjpa/raw/c7128669c7e1f439f45c62d07b58e8add38343d2/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerFactoryImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerFactoryImpl.java?ref=c7128669c7e1f439f45c62d07b58e8add38343d2","patch":"@@ -188,7 +188,8 @@ else if (obj == null)\n             false);\n         // we should allow the user to specify these settings in conf\n         // regardless of PersistenceContextType\n-        broker.setAutoDetach(AutoDetach.DETACH_CLOSE);\n+        broker.setAutoDetach(AutoDetach.DETACH_CLOSE \n+            | AutoDetach.DETACH_ROLLBACK);\n         broker.setDetachedNew(false);\n         OpenJPAEntityManager em = newEntityManagerImpl(broker);\n "}]}

