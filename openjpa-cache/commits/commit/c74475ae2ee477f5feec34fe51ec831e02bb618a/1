{"sha":"c74475ae2ee477f5feec34fe51ec831e02bb618a","node_id":"MDY6Q29tbWl0MjA2MzY0OmM3NDQ3NWFlMmVlNDc3ZjVmZWVjMzRmZTUxZWM4MzFlMDJiYjYxOGE=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2009-02-23T17:04:39Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2009-02-23T17:04:39Z"},"message":"OPENJPA-917 recommitting B.J.'s patch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/1.2.x@747083 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"84693644674bb3e457e47b69fc8420c8851b4164","url":"https://api.github.com/repos/apache/openjpa/git/trees/84693644674bb3e457e47b69fc8420c8851b4164"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/c74475ae2ee477f5feec34fe51ec831e02bb618a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/c74475ae2ee477f5feec34fe51ec831e02bb618a","html_url":"https://github.com/apache/openjpa/commit/c74475ae2ee477f5feec34fe51ec831e02bb618a","comments_url":"https://api.github.com/repos/apache/openjpa/commits/c74475ae2ee477f5feec34fe51ec831e02bb618a/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"8af7c0530cd0af3762edcba02b13538d69d32cc8","url":"https://api.github.com/repos/apache/openjpa/commits/8af7c0530cd0af3762edcba02b13538d69d32cc8","html_url":"https://github.com/apache/openjpa/commit/8af7c0530cd0af3762edcba02b13538d69d32cc8"}],"stats":{"total":110,"additions":109,"deletions":1},"files":[{"sha":"d3ad3c153f673864cdb77f788cf50c35242bfafc","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/procedure/DerbyProcedureList.java","status":"added","additions":66,"deletions":0,"changes":66,"blob_url":"https://github.com/apache/openjpa/blob/c74475ae2ee477f5feec34fe51ec831e02bb618a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/procedure/DerbyProcedureList.java","raw_url":"https://github.com/apache/openjpa/raw/c74475ae2ee477f5feec34fe51ec831e02bb618a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/procedure/DerbyProcedureList.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/procedure/DerbyProcedureList.java?ref=c74475ae2ee477f5feec34fe51ec831e02bb618a","patch":"@@ -0,0 +1,66 @@\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.jdbc.query.procedure;\n+\n+import java.sql.Connection;\n+import java.sql.DriverManager;\n+import java.sql.PreparedStatement;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/*\n+ * holds the stored procedures that will be used by test cases\n+ */\n+public class DerbyProcedureList extends ProcedureList {\n+\n+    public List<String> getCreateProcedureList () {\n+        ArrayList<String> retList = new ArrayList<String>();\n+\n+        retList.add (\"create procedure ADD_X_TO_CHARLIE () \" +\n+                     \"PARAMETER STYLE JAVA LANGUAGE JAVA MODIFIES SQL DATA \" +\n+                     \"EXTERNAL NAME 'org.apache.openjpa.persistence.jdbc.\" + \n+                     \"query.procedure.DerbyProcedureList.addXToCharlie'\");\n+        \n+\n+        return retList;\n+    }\n+\n+    public List<String> getDropProcedureList () {\n+        ArrayList<String> retList = new ArrayList<String>();\n+\n+        retList.add (\"drop procedure ADD_X_TO_CHARLIE\");\n+\n+        return retList;\n+    }\n+\n+    public String callAddXToCharlie () {\n+        return \"{ call ADD_X_TO_CHARLIE () }\";\n+    }\n+\n+    public static void addXToCharlie () throws Exception {\n+        Connection conn = DriverManager.getConnection(\n+            \"jdbc:default:connection\");\n+        PreparedStatement ps1 = conn.prepareStatement(\"update APPLICANT set \" + \n+            \"name = 'Charliex' where name = 'Charlie'\");\n+        ps1.executeUpdate();\n+\n+        conn.close();\n+    }\n+}"},{"sha":"e23b64816e5143bbf3a7e830a2f4eedae5da869c","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/procedure/ProcedureList.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/c74475ae2ee477f5feec34fe51ec831e02bb618a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/procedure/ProcedureList.java","raw_url":"https://github.com/apache/openjpa/raw/c74475ae2ee477f5feec34fe51ec831e02bb618a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/procedure/ProcedureList.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/procedure/ProcedureList.java?ref=c74475ae2ee477f5feec34fe51ec831e02bb618a","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.jdbc.query.procedure;\n+\n+import java.util.List;\n+\n+/*\n+ * holds the stored procedures that will be used by test cases\n+ */\n+public abstract class ProcedureList {\n+\n+    abstract public List<String> getCreateProcedureList ();\n+\n+    abstract public List<String> getDropProcedureList ();\n+\n+    abstract public String callAddXToCharlie ();\n+\n+    // This method should also be overriden, but it needs to be static so \n+    // that it can be called as a stored procedure\n+    public static void addXToCharlie () throws Exception {\n+        Exception e = new Exception (\"Method not implemented by inheriting \" + \n+            \"class\");\n+        throw e;\n+    }\n+}"},{"sha":"3c1a68d306f2061f9763e46d692e763ca757681c","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryImpl.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/c74475ae2ee477f5feec34fe51ec831e02bb618a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryImpl.java","raw_url":"https://github.com/apache/openjpa/raw/c74475ae2ee477f5feec34fe51ec831e02bb618a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryImpl.java?ref=c74475ae2ee477f5feec34fe51ec831e02bb618a","patch":"@@ -240,7 +240,8 @@ public OpenJPAQuery compile() {\n     }\n \n     private Object execute() {\n-        if (_query.getOperation() != QueryOperations.OP_SELECT)\n+        if ((!isNative()) &&\n+            _query.getOperation() != QueryOperations.OP_SELECT)\n             throw new InvalidStateException(_loc.get(\"not-select-query\",\n                 _query.getQueryString()), null, null, false);\n "}]}

