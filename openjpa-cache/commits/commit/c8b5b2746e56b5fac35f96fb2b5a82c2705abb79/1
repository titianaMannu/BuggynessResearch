{"sha":"c8b5b2746e56b5fac35f96fb2b5a82c2705abb79","node_id":"MDY6Q29tbWl0MjA2MzY0OmM4YjViMjc0NmU1NmI1ZmFjMzVmOTZmYjJiNWE4MmMyNzA1YWJiNzk=","commit":{"author":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-10-13T21:07:17Z"},"committer":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-10-13T21:07:17Z"},"message":"Validate product derivations before caching them so we don't end up with runtime\nerrors when clients use JPA without jdo.jar or JDO without jpa.jar.  Give a \nmore succinct warning when some product derivations are uninstantiable, with\nmore detailed information available via the ProductDerivations class's main().\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@463829 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"9f1334674379bfd51440413ac730c436ae8b4528","url":"https://api.github.com/repos/apache/openjpa/git/trees/9f1334674379bfd51440413ac730c436ae8b4528"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/c8b5b2746e56b5fac35f96fb2b5a82c2705abb79","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/c8b5b2746e56b5fac35f96fb2b5a82c2705abb79","html_url":"https://github.com/apache/openjpa/commit/c8b5b2746e56b5fac35f96fb2b5a82c2705abb79","comments_url":"https://api.github.com/repos/apache/openjpa/commits/c8b5b2746e56b5fac35f96fb2b5a82c2705abb79/comments","author":null,"committer":null,"parents":[{"sha":"72594b2ac8692a2502f5ef89902e74b9b3089ef4","url":"https://api.github.com/repos/apache/openjpa/commits/72594b2ac8692a2502f5ef89902e74b9b3089ef4","html_url":"https://github.com/apache/openjpa/commit/72594b2ac8692a2502f5ef89902e74b9b3089ef4"}],"stats":{"total":197,"additions":90,"deletions":107},"files":[{"sha":"4a48c5fcc12daf38e7d03bef41c02cbae9428fec","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaTool.java","status":"modified","additions":9,"deletions":80,"changes":89,"blob_url":"https://github.com/apache/openjpa/blob/c8b5b2746e56b5fac35f96fb2b5a82c2705abb79/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaTool.java","raw_url":"https://github.com/apache/openjpa/raw/c8b5b2746e56b5fac35f96fb2b5a82c2705abb79/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaTool.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaTool.java?ref=c8b5b2746e56b5fac35f96fb2b5a82c2705abb79","patch":"@@ -625,44 +625,6 @@ private void retain(SchemaGroup db, SchemaGroup repos, boolean tables,\n             }\n         }\n \n-        // indexes\n-        /*\n- if (_indexes)\n- {\n- Index[] idxs;\n- Index idx;\n- for (int i = 0; i < schemas.length; i++)\n- {\n- tabs = schemas[i].getTables ();\n- for (int j = 0; j < tabs.length; j++)\n- {\n- if (!isDroppable (tabs[j]))\n- continue;\n- idxs = tabs[j].getIndexes ();\n- reposTable = repos.findTable (tabs[j]);\n- if (!tables && reposTable == null)\n- continue;\n-\n- for (int k = 0; k < idxs.length; k++)\n- {\n- idx = null;\n- if (reposTable != null)\n- idx = reposTable.getIndex (idxs[k].getName ());\n- if (reposTable == null || idx == null\n- || !idxs[k].equalsIndex (idx))\n- {\n- if (dropIndex (idxs[k]))\n- tabs[j].removeIndex (idxs[k]);\n- else\n- _log.warn (_loc.get (\"drop-index\", idxs[k],\n- tabs[j]));\n- }\n- }\n- }\n- }\n- }\n-          */\n-\n         // primary keys\n         if (_pks) {\n             PrimaryKey pk;\n@@ -830,41 +792,6 @@ private void drop(SchemaGroup db, SchemaGroup repos)\n             }\n         }\n \n-        // indexes\n-        /*\n- if (_indexes)\n- {\n- Index[] idxs;\n- Index idx;\n- for (int i = 0; i < schemas.length; i++)\n- {\n- tabs = schemas[i].getTables ();\n- for (int j = 0; j < tabs.length; j++)\n- {\n- if (!isDroppable (tabs[j]))\n- continue;\n- idxs = tabs[j].getIndexes ();\n- dbTable = db.findTable (tabs[j]);\n- for (int k = 0; k < idxs.length; k++)\n- {\n- idx = null;\n- if (dbTable != null)\n- idx = dbTable.getIndex (idxs[k].getName ());\n- if (dbTable == null || idx == null)\n- continue;\n-\n- if (dropIndex (idxs[k]))\n- if (dbTable != null)\n- dbTable.removeIndex (idx);\n- else\n- _log.warn (_loc.get (\"drop-index\", idxs[k],\n- tabs[j]));\n- }\n- }\n- }\n- }\n-          */\n-\n         // drop the tables we calculated above\n         dropTables(drops, db);\n \n@@ -885,11 +812,12 @@ private void drop(SchemaGroup db, SchemaGroup repos)\n                     if (dbTable == null || col == null)\n                         continue;\n \n-                    if (dropColumn(cols[k]))\n+                    if (dropColumn(cols[k])) {\n                         if (dbTable != null)\n                             dbTable.removeColumn(col);\n                         else\n                             _log.warn(_loc.get(\"drop-col\", cols[k], tabs[j]));\n+                    }\n                 }\n             }\n         }\n@@ -948,11 +876,9 @@ private void dropTables(Collection tables, SchemaGroup change)\n         if (tables.isEmpty())\n             return;\n \n-        Collection nodes = tables;\n-\n         Table table;\n         Table changeTable;\n-        for (Iterator itr = nodes.iterator(); itr.hasNext();) {\n+        for (Iterator itr = tables.iterator(); itr.hasNext();) {\n             table = (Table) itr.next();\n             if (dropTable(table)) {\n                 changeTable = change.findTable(table);\n@@ -1338,11 +1264,14 @@ private void handleException(SQLException sql)\n      * <ul>\n      * <li>Write a script to stdout to re-create the current database\n      * schema:<br />\n-     * <code>java org.apache.openjpa.jdbc.schema.SchemaTool -f stdout -a createDB</code>\n+     * <code>java org.apache.openjpa.jdbc.schema.SchemaTool -f stdout \n+     * -a createDB</code></li>\n      * <li>Drop the current database schema:<br />\n-     * <code>java org.apache.openjpa.jdbc.schema.SchemaTool -a dropDB</code></li>\n+     * <code>java org.apache.openjpa.jdbc.schema.SchemaTool \n+     * -a dropDB</code></li>\n      * <li>Create a schema based on an XML schema definition file:<br />\n-     * <code>java org.apache.openjpa.jdbc.schema.SchemaTool myschema.xml</code></li>\n+     * <code>java org.apache.openjpa.jdbc.schema.SchemaTool \n+     * myschema.xml</code></li>\n      * </ul>\n      */\n     public static void main(String[] args)"},{"sha":"aa401c0748315af768f8aac200d0fdc4d49ece77","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","status":"modified","additions":2,"deletions":8,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/c8b5b2746e56b5fac35f96fb2b5a82c2705abb79/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/c8b5b2746e56b5fac35f96fb2b5a82c2705abb79/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java?ref=c8b5b2746e56b5fac35f96fb2b5a82c2705abb79","patch":"@@ -3561,14 +3561,8 @@ public Object getGeneratedKey(Column col, Connection conn)\n             return key;\n         } finally {\n             if (rs != null)\n-                try {\n-                    rs.close();\n-                } catch (SQLException se) {\n-                }\n-            try {\n-                stmnt.close();\n-            } catch (SQLException se) {\n-            }\n+                try { rs.close(); } catch (SQLException se) {}\n+            try { stmnt.close(); } catch (SQLException se) {} \n         }\n     }\n "},{"sha":"3036cc9e0e610317f4fca819d6ae61e7f3ebb863","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/AbstractProductDerivation.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/c8b5b2746e56b5fac35f96fb2b5a82c2705abb79/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/AbstractProductDerivation.java","raw_url":"https://github.com/apache/openjpa/raw/c8b5b2746e56b5fac35f96fb2b5a82c2705abb79/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/AbstractProductDerivation.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/AbstractProductDerivation.java?ref=c8b5b2746e56b5fac35f96fb2b5a82c2705abb79","patch":"@@ -31,6 +31,10 @@ public String getConfigurationPrefix() {\n         return null;\r\n     }\r\n \r\n+    public void validate() \r\n+        throws Exception {\r\n+    }\r\n+\r\n     public ConfigurationProvider loadGlobals(ClassLoader loader)\r\n         throws Exception {\r\n         return null;\r"},{"sha":"a07d30eb80b68b3d75ca9d8872c12612c1804ddc","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ProductDerivation.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/c8b5b2746e56b5fac35f96fb2b5a82c2705abb79/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ProductDerivation.java","raw_url":"https://github.com/apache/openjpa/raw/c8b5b2746e56b5fac35f96fb2b5a82c2705abb79/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ProductDerivation.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ProductDerivation.java?ref=c8b5b2746e56b5fac35f96fb2b5a82c2705abb79","patch":"@@ -45,6 +45,15 @@\n      */\n     public String getConfigurationPrefix();\n \n+    /**\n+     * Ensure that this derivation is valid.  This action might consist of\n+     * loading classes for the product this derivation represents to be sure\n+     * they exist.  Throw any throwable to indicate an invalid derivation.\n+     * Invalid derivations will not be used.\n+     */\n+    public void validate()\n+        throws Exception;\n+\n     /**\n      * Load globals into the returned ConfigurationProvider, or return null if \n      * no globals are found."},{"sha":"b0b4178f751f63334588b344e533462da78267bd","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ProductDerivations.java","status":"modified","additions":49,"deletions":15,"changes":64,"blob_url":"https://github.com/apache/openjpa/blob/c8b5b2746e56b5fac35f96fb2b5a82c2705abb79/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ProductDerivations.java","raw_url":"https://github.com/apache/openjpa/raw/c8b5b2746e56b5fac35f96fb2b5a82c2705abb79/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ProductDerivations.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ProductDerivations.java?ref=c8b5b2746e56b5fac35f96fb2b5a82c2705abb79","patch":"@@ -38,31 +38,41 @@\n         (ProductDerivations.class);\n \n     private static final ProductDerivation[] _derivations;\n+    private static final String[] _derivationNames;\n+    private static final Throwable[] _derivationErrors;\n     private static final String[] _prefixes;\n     static {\n-        ClassLoader cl = ProductDerivation.class.getClassLoader();\n-        String[] pds = Services.getImplementors(ProductDerivation.class, cl);\n-        List derivations = new ArrayList(pds.length);\n-        for (int i = 0; i < pds.length; i++) {\n+        ClassLoader l = ProductDerivation.class.getClassLoader();\n+        _derivationNames = Services.getImplementors(ProductDerivation.class, l);\n+        _derivationErrors = new Throwable[_derivationNames.length];\n+        List derivations = new ArrayList(_derivationNames.length);\n+        for (int i = 0; i < _derivationNames.length; i++) {\n             try {\n-                Class cls = Class.forName(pds[i], true, cl);\n-                derivations.add(cls.newInstance());\n-            } catch (UnsupportedClassVersionError ucve) {\n-                // ignore so that < 1.5 users don't get errors about\n-                // 1.5 products they aren't using\n+                ProductDerivation d = (ProductDerivation) Class.\n+                    forName(_derivationNames[i], true, l).newInstance();\n+                d.validate();\n+                derivations.add(d);\n             } catch (Throwable t) {\n-                System.err.println(_loc.get(\"bad-product-derivation\", pds[i], \n-                    t));\n+                _derivationErrors[i] = t;\n             }\n         }\n \n         // must be at least one product derivation to define metadata factories,\n         // etc. \n         if (derivations.isEmpty()) {\n-            Localizer loc = Localizer.forPackage(ProductDerivations.class);\n-            throw new MissingResourceException(loc.get(\"no-product-derivations\",\n-                ProductDerivation.class.getName()).getMessage(),\n-                ProductDerivations.class.getName(), \"derivations\");\n+            throw new MissingResourceException(_loc.get\n+                (\"no-product-derivations\", ProductDerivation.class.getName(),\n+                derivationErrorsToString()).getMessage(), \n+                ProductDerivations.class.getName(),\"derivations\");\n+        }\n+\n+        // if some derivations weren't instantiable, warn\n+        for (int i = 0; i < _derivationErrors.length; i++) {\n+            if (_derivationErrors[i] == null)\n+                continue;\n+            System.err.println(_loc.get(\"bad-product-derivations\",\n+                ProductDerivations.class.getName()));\n+            break;\n         }\n \n         Collections.sort(derivations, new ProductDerivationComparator());\n@@ -269,5 +279,29 @@ public int compare(Object o1, Object o2) {\n                 getName());\n \t\t}\n \t}\n+\n+    /**\n+     * Prints product derivation information.\n+     */\n+    public static void main(String[] args) {\n+        System.err.println(derivationErrorsToString());\n+    }\n+\n+    /**\n+     * Return a message about the status of each product derivation.\n+     */\n+    private static String derivationErrorsToString() {\n+        StringBuffer buf = new StringBuffer();\n+        buf.append(\"ProductDerivations: \").append(_derivationNames.length);\n+        for (int i = 0; i < _derivationNames.length; i++) {\n+            buf.append(\"\\n\").append(i + 1).append(\". \").\n+                append(_derivationNames[i]).append(\": \");\n+            if (_derivationErrors[i] == null)\n+                buf.append(\"OK\");\n+            else\n+                buf.append(_derivationErrors[i].toString());\n+        }\n+        return buf.toString();\n+    }\n }\n "},{"sha":"ca1f5fca01d675a1a84a67eae6fb0c3265fba419","filename":"openjpa-lib/src/main/resources/org/apache/openjpa/lib/conf/localizer.properties","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/c8b5b2746e56b5fac35f96fb2b5a82c2705abb79/openjpa-lib/src/main/resources/org/apache/openjpa/lib/conf/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/c8b5b2746e56b5fac35f96fb2b5a82c2705abb79/openjpa-lib/src/main/resources/org/apache/openjpa/lib/conf/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/resources/org/apache/openjpa/lib/conf/localizer.properties?ref=c8b5b2746e56b5fac35f96fb2b5a82c2705abb79","patch":"@@ -67,10 +67,9 @@ no-product-derivations: Your system is missing product derivations.  Product \\\n     If you are using ant, a common solution to this problem is to place \\\n     the jar libraries of the OpenJPA distribution in the \\\n     $'{user.home}/.ant/lib directory. Another common cause of this problem \\\n-    is an overly-restrictive security manager.\n-bad-product-derivation: An error occurred while attempting to load {0}. This \\\n-    may indicate a corrupt system configuration, or may just be the result \\\n-    of the inclusion of unused OpenJPA modules in your classpath. Error: {1}\n+    is an overly-restrictive security manager.\\n{1}\n+bad-product-derivations: Some product derivations are being skipped. For \\\n+    information about product derivation status, run:\\njava {0}\n \n Log-name: Log factory\n Log-desc: LogFactory and configuration"},{"sha":"636f7e21b58bef9eb730a4dac1043003a4b42db4","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCPersistenceProductDerivation.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/c8b5b2746e56b5fac35f96fb2b5a82c2705abb79/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCPersistenceProductDerivation.java","raw_url":"https://github.com/apache/openjpa/raw/c8b5b2746e56b5fac35f96fb2b5a82c2705abb79/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCPersistenceProductDerivation.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCPersistenceProductDerivation.java?ref=c8b5b2746e56b5fac35f96fb2b5a82c2705abb79","patch":"@@ -43,6 +43,13 @@ public int getType() {\n         return TYPE_SPEC_STORE;\n     }\n \n+    @Override\n+    public void validate()\n+        throws Exception {\n+        // make sure JPA is available\n+        javax.persistence.EntityManagerFactory.class.getClassLoader();\n+    }\n+\n     @Override\n     public boolean beforeConfigurationLoad(Configuration c) {\n         if (c instanceof OpenJPAConfiguration) {"},{"sha":"43502db47aa40bc6ddf522b0daee8263b1a53f36","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/c8b5b2746e56b5fac35f96fb2b5a82c2705abb79/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java","raw_url":"https://github.com/apache/openjpa/raw/c8b5b2746e56b5fac35f96fb2b5a82c2705abb79/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java?ref=c8b5b2746e56b5fac35f96fb2b5a82c2705abb79","patch":"@@ -76,6 +76,13 @@ public void putBrokerFactoryAliases(Map m) {\n     public int getType() {\n         return TYPE_SPEC;\n     }\n+\n+    @Override\n+    public void validate()\n+        throws Exception {\n+        // make sure JPA is available\n+        javax.persistence.EntityManagerFactory.class.getClassLoader();\n+    }\n     \n     @Override\n     public boolean beforeConfigurationLoad(Configuration c) {"}]}

