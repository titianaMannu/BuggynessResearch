{"sha":"c9fa4b9bda45d0cb50274c8075a780b98b5951d4","node_id":"MDY6Q29tbWl0MjA2MzY0OmM5ZmE0YjliZGE0NWQwY2I1MDI3NGM4MDc1YTc4MGI5OGI1OTUxZDQ=","commit":{"author":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2013-03-26T12:43:29Z"},"committer":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2013-03-26T12:43:29Z"},"message":"OPENJPA-2357: Fix InvalidStateException when using the InverseManager. Fix contributed by Guillaume Chauvet.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1461090 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c54cc486f6664d83fa6d880c7b8013df422845e9","url":"https://api.github.com/repos/apache/openjpa/git/trees/c54cc486f6664d83fa6d880c7b8013df422845e9"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/c9fa4b9bda45d0cb50274c8075a780b98b5951d4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/c9fa4b9bda45d0cb50274c8075a780b98b5951d4","html_url":"https://github.com/apache/openjpa/commit/c9fa4b9bda45d0cb50274c8075a780b98b5951d4","comments_url":"https://api.github.com/repos/apache/openjpa/commits/c9fa4b9bda45d0cb50274c8075a780b98b5951d4/comments","author":null,"committer":null,"parents":[{"sha":"6adc2f465f179a90253e734221a5cec91ec33b2b","url":"https://api.github.com/repos/apache/openjpa/commits/6adc2f465f179a90253e734221a5cec91ec33b2b","html_url":"https://github.com/apache/openjpa/commit/6adc2f465f179a90253e734221a5cec91ec33b2b"}],"stats":{"total":54,"additions":50,"deletions":4},"files":[{"sha":"4efe7d2628d305815b409477f82b33ce979b149a","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SingleFieldManager.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/c9fa4b9bda45d0cb50274c8075a780b98b5951d4/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SingleFieldManager.java","raw_url":"https://github.com/apache/openjpa/raw/c9fa4b9bda45d0cb50274c8075a780b98b5951d4/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SingleFieldManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/SingleFieldManager.java?ref=c9fa4b9bda45d0cb50274c8075a780b98b5951d4","patch":"@@ -501,14 +501,13 @@ public boolean preFlush(boolean logical, OpCallbacks call) {\n         if (fmd.getDeclaredTypeCode() < JavaTypes.OBJECT)\n             return false;\n \n-        // perform pers-by-reach and dependent refs\n-        boolean ret = preFlush(fmd, logical, call);\n-\n         // manage inverses\n         InverseManager manager = _broker.getInverseManager();\n         if (manager != null)\n             manager.correctRelations(_sm, fmd, objval);\n-        return ret;\n+        \n+        // perform pers-by-reach and dependent refs\n+        return preFlush(fmd, logical, call);\n     }\n \n     /**"},{"sha":"3b4eca03aa8b7d5ae3735c9dade1c07e15a501dc","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestInverseManager.java","status":"added","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/apache/openjpa/blob/c9fa4b9bda45d0cb50274c8075a780b98b5951d4/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestInverseManager.java","raw_url":"https://github.com/apache/openjpa/raw/c9fa4b9bda45d0cb50274c8075a780b98b5951d4/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestInverseManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestInverseManager.java?ref=c9fa4b9bda45d0cb50274c8075a780b98b5951d4","patch":"@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.relations;\n+\n+import java.util.Arrays;\n+\n+import javax.persistence.EntityManager;\n+\n+import org.apache.openjpa.persistence.merge.featureSelection.Toy;\n+import org.apache.openjpa.persistence.merge.featureSelection.ToyBox;\n+import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n+\n+public class TestInverseManager extends SingleEMFTestCase {\n+    public void setUp() {\n+        setUp(CLEAR_TABLES, Toy.class, ToyBox.class, \"openjpa.InverseManager\", \"true(ManageLRS=true)\");\n+    }\n+\n+    public void testPersist() {\n+        EntityManager em = emf.createEntityManager();\n+\n+        em.getTransaction().begin();\n+        Toy t = new Toy(1);\n+        ToyBox tb = new ToyBox(1);\n+\n+        tb.setToyList(Arrays.asList(new Toy[] { t }));\n+        em.persist(tb);\n+\n+        em.getTransaction().commit();\n+        em.close();\n+    }\n+}"}]}

