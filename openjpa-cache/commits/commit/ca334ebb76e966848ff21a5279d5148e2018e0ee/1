{"sha":"ca334ebb76e966848ff21a5279d5148e2018e0ee","node_id":"MDY6Q29tbWl0MjA2MzY0OmNhMzM0ZWJiNzZlOTY2ODQ4ZmYyMWE1Mjc5ZDUxNDhlMjAxOGUwZWU=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2009-04-07T12:36:38Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2009-04-07T12:36:38Z"},"message":"OPENJPA-1023\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/1.2.x@762747 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0b2f1cb3604c3af1d92f9dd80a8db0e8bf62d1e4","url":"https://api.github.com/repos/apache/openjpa/git/trees/0b2f1cb3604c3af1d92f9dd80a8db0e8bf62d1e4"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/ca334ebb76e966848ff21a5279d5148e2018e0ee","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/ca334ebb76e966848ff21a5279d5148e2018e0ee","html_url":"https://github.com/apache/openjpa/commit/ca334ebb76e966848ff21a5279d5148e2018e0ee","comments_url":"https://api.github.com/repos/apache/openjpa/commits/ca334ebb76e966848ff21a5279d5148e2018e0ee/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"2adb4f03d1f0e38b7b0cd020691a4510c3ec2c0c","url":"https://api.github.com/repos/apache/openjpa/commits/2adb4f03d1f0e38b7b0cd020691a4510c3ec2c0c","html_url":"https://github.com/apache/openjpa/commit/2adb4f03d1f0e38b7b0cd020691a4510c3ec2c0c"}],"stats":{"total":1096,"additions":548,"deletions":548},"files":[{"sha":"d4ac3bde93dbfc959efe13f84dfb6fac75a735a4","filename":"openjpa-kernel/src/main/resources/org/apache/openjpa/ee/localizer.properties","status":"modified","additions":43,"deletions":43,"changes":86,"blob_url":"https://github.com/apache/openjpa/blob/ca334ebb76e966848ff21a5279d5148e2018e0ee/openjpa-kernel/src/main/resources/org/apache/openjpa/ee/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/ca334ebb76e966848ff21a5279d5148e2018e0ee/openjpa-kernel/src/main/resources/org/apache/openjpa/ee/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/resources/org/apache/openjpa/ee/localizer.properties?ref=ca334ebb76e966848ff21a5279d5148e2018e0ee","patch":"@@ -1,44 +1,44 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\r\n-# or more contributor license agreements.  See the NOTICE file\r\n-# distributed with this work for additional information\r\n-# regarding copyright ownership.  The ASF licenses this file\r\n-# to you under the Apache License, Version 2.0 (the\r\n-# \"License\"); you may not use this file except in compliance\r\n-# with the License.  You may obtain a copy of the License at\r\n-#\r\n-# http://www.apache.org/licenses/LICENSE-2.0\r\n-#\r\n-# Unless required by applicable law or agreed to in writing,\r\n-# software distributed under the License is distributed on an\r\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n-# KIND, either express or implied.  See the License for the\r\n-# specific language governing permissions and limitations\r\n-# under the License.  \r\n-\r\n-tm-not-found: Could not perform automatic lookup of EJB container''s \\\r\n-\tjavax.transaction.TransactionManager implementation. Please ensure that \\\r\n-\tyou are running the application from within an EJB 1.1 compliant EJB \\\r\n-\tcontainer, and then set the org.apache.openjpa.ManagedRuntime property to \\ \r\n-\tthe\tappropriate value to obtain the TransactionManager.\r\n-expected-reference: Expected object to be of type Reference, but instead was \\\r\n-\t\"{0}\".\r\n-not-supported: This operation is not supported.\r\n-was-unsupported-op: Unable to execute {0} on a WebSphere managed transaction. \\\r\n-\tWebSphere does not support direct manipulation of managed transactions.\r\n-was-transaction-id-exception: Unable to determine identity of the current \\ \r\n-\tWebSphere managed transaction. Please ensure that your are running the \\\r\n-\tapplication from within WebSphere Application Server (version 5.0.2 or \\ \r\n-\tnewer).\r\n-was-reflection-exception: An error occurred reflecting WebSphere proprietary \\\r\n-\tinterfaces. Please ensure that you are running the application from within \\\r\n-\tWebSphere Application Server (version 5.0.2 or newer).\r\n-was-lookup-error: An error occurred looking up the WebSphere extended JTA \\\r\n-\tservice. Please ensure that you are running the application from within \\ \r\n-\tWebSphere Application Server (version 5.0.2 or newer).\r\n-tm-unavailable: Unable to obtain a TransactionManager using {0}. \r\n-tsr-cannot-suspend: The Transaction Synchronization Registry can not suspend \\\r\n-\tthe current transaction. \r\n-exc-suspend-tran: A {0} exception occurred when trying to suspend the current \\\r\n-\ttransaction. \r\n-exc-resume-tran: A {0} exception occurred when trying to resume the current \\\r\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.  \n+\n+tm-not-found: Could not perform automatic lookup of EJB container''s \\\n+\tjavax.transaction.TransactionManager implementation. Please ensure that \\\n+\tyou are running the application from within an EJB 1.1 compliant EJB \\\n+\tcontainer, and then set the org.apache.openjpa.ManagedRuntime property to \\ \n+\tthe\tappropriate value to obtain the TransactionManager.\n+expected-reference: Expected object to be of type Reference, but instead was \\\n+\t\"{0}\".\n+not-supported: This operation is not supported.\n+was-unsupported-op: Unable to execute {0} on a WebSphere managed transaction. \\\n+\tWebSphere does not support direct manipulation of managed transactions.\n+was-transaction-id-exception: Unable to determine identity of the current \\ \n+\tWebSphere managed transaction. Please ensure that your are running the \\\n+\tapplication from within WebSphere Application Server (version 5.0.2 or \\ \n+\tnewer).\n+was-reflection-exception: An error occurred reflecting WebSphere proprietary \\\n+\tinterfaces. Please ensure that you are running the application from within \\\n+\tWebSphere Application Server (version 5.0.2 or newer).\n+was-lookup-error: An error occurred looking up the WebSphere extended JTA \\\n+\tservice. Please ensure that you are running the application from within \\ \n+\tWebSphere Application Server (version 5.0.2 or newer).\n+tm-unavailable: Unable to obtain a TransactionManager using {0}. \n+tsr-cannot-suspend: The Transaction Synchronization Registry can not suspend \\\n+\tthe current transaction. \n+exc-suspend-tran: A {0} exception occurred when trying to suspend the current \\\n+\ttransaction. \n+exc-resume-tran: A {0} exception occurred when trying to resume the current \\\n \ttransaction. The transaction will be marked rollback only.\n\\ No newline at end of file"},{"sha":"95f3ddd0e897e567ce7c49fd3e2a4a9f8d4119f3","filename":"openjpa-kernel/src/main/resources/org/apache/openjpa/kernel/localizer.properties","status":"modified","additions":401,"deletions":401,"changes":802,"blob_url":"https://github.com/apache/openjpa/blob/ca334ebb76e966848ff21a5279d5148e2018e0ee/openjpa-kernel/src/main/resources/org/apache/openjpa/kernel/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/ca334ebb76e966848ff21a5279d5148e2018e0ee/openjpa-kernel/src/main/resources/org/apache/openjpa/kernel/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/resources/org/apache/openjpa/kernel/localizer.properties?ref=ca334ebb76e966848ff21a5279d5148e2018e0ee","patch":"@@ -1,402 +1,402 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\r\n-# or more contributor license agreements.  See the NOTICE file\r\n-# distributed with this work for additional information\r\n-# regarding copyright ownership.  The ASF licenses this file\r\n-# to you under the Apache License, Version 2.0 (the\r\n-# \"License\"); you may not use this file except in compliance\r\n-# with the License.  You may obtain a copy of the License at\r\n-#\r\n-# http://www.apache.org/licenses/LICENSE-2.0\r\n-#\r\n-# Unless required by applicable law or agreed to in writing,\r\n-# software distributed under the License is distributed on an\r\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n-# KIND, either express or implied.  See the License for the\r\n-# specific language governing permissions and limitations\r\n-# under the License.  \r\n-\r\n-cant-convert-result: There is no conversion between query projection type \\\r\n-\t\"{0}\" and result type \"{1}\".\r\n-unloaded-detached: Attempt to access an unloaded field of detached instance \\\r\n-\t\"{0}\".\r\n-meta-unknownid: Cannot manipulate identity of type \"{0}\": it''s identity type \\\r\n-\tis unknown.\r\n-new-abstract: Cannot create an instance of \"{0}\": abstract classes are not \\\r\n-    yet supported.\r\n-bad-new-query: Attempt to construct a query from an extent or class.  You must \\\r\n-\tpass a (possibly null) query string or template to the query factory \\\r\n-\tmethod when creating the query. \r\n-update-restrict: Detected attempt to modify field \"{0}\" with value strategy \\\r\n-\t\"restrict\".\r\n-reentrant-flush: Detected reentrant flush.  Make sure your flush-time instance \\\r\n-\tcallback methods or event listeners do not invoke any operations that \\\r\n-\trequire the in-progress flush to complete.\r\n-rolled-back: The transaction has been rolled back.  See the nested exceptions \\\r\n-\tfor details on the errors that occurred.\r\n-bad-lock-level: This lock manager does not recognize lock level \"{0}\".\r\n-pessimistic-mutate: You are attempting to directly mutate a persistent second \\\r\n-\tclass object (such as a collection or map field) that you obtained before \\\r\n-\tthe transaction began.  After beginning a datastore transaction, you \\\r\n-\tmust re-obtain any references to mutable second class objects from the \\\r\n-\towning persistent object.  Detected attempt to mutate value of field \"{0}\" \\\r\n-\tin instance \"{1}\".  This instance may not be locked correctly.\r\n-not-derefed: Encountered unknown dependent instance \"{0}\".  This error is \\\r\n-\toften caused by either removing a dependent instance from one dependent \\\r\n-\tfield, but not other dependent fields that reference it, or by removing a \\\r\n-\tdependent instance from its owning field, flushing \\\r\n-\t(causing the unreferenced dependent instance to be deleted), and then \\\r\n-\ttrying to assign the deleted instance to another field before commit.  \\\r\n-\tThe instance cannot be un-deleted, resulting in an error.  Make sure not \\\r\n-\tto leave dangling dependent references to objects, and to reassign \\\r\n-\tdependent objects before flush so that OpenJPA does not think they are \\\r\n-\tunreferenced and therefore safe to delete.\r\n-init-null-pc: Attempt to initialize a state manager with a null \\\r\n-\tpersistence-capable instance for type \"{0}\".  This is often caused by \\\r\n-\tattempting to load an instance of an abstract class, or \\\r\n-\tneglecting to use a class indicator when the base persistence-capable \\\r\n-\tclass in an inheritance tree is abstract.\r\n-init-sm-pc: Attempt to initialize a state manager with an instance that is \\\r\n-\talready managed (\"{0}\").  You might be trying to persist this instance \\\r\n-\tin two threads at the same time.\r\n-bad-ds-oid: The type \"{0}\" declares datastore identity but the value \\\r\n-\tpassed to lookup of type \"{1}\" is not a OpenJPA id instance.\r\n-null-oids: Some of the object ids passed to getObjectsById were null.\r\n-marked-rollback: The transaction cannot be committed, because it was already \\\r\n-\tmarked for rollback only.  The transaction will be rolled back instead. \\\r\n-    The cause of the rollback-only status is reported in the embedded stack.\r\n-refresh-flushed: You cannot refresh an instance that has been flushed to the \\\r\n-\tdata store.\r\n-pc-loader-different: Attempt to cast instance \"{0}\" to PersistenceCapable failed. \\\r\n-    The object implemented org.apache.openjpa.enhance.PersistenceCapable, \\\r\n-    but the instance of that interface was loaded by two different ClassLoaders: \\\r\n-    \"{1}\" and \"{2}\".\r\n-pc-cast: Attempt to cast instance \"{0}\" to PersistenceCapable failed.  Ensure \\\r\n-\tthat it has been enhanced.\r\n-del-instance: The instance of type \"{0}\" with oid \"{1}\" no longer exists in \\\r\n-\tthe data store.  This may mean that you deleted the instance in a separate \\\r\n-\ttransaction, but this context still has a cached version.\r\n-no-broker-class: The specified type \"{0}\" could not be loaded. Please ensure \\\r\n-\tthat the class exists in the project class path.\r\n-bad-embed: Attempt to set an embedded value for unembeddable field \"{0}\". \\\r\n-\tPlease report this error to OpenJPA support.\r\n-embed-ref: You are attempting to access an embedded object reference \\\r\n-\tthat was obtained before the last transaction status change. After \\\r\n-\ttransactions begin and end, all references to embedded objects become \\\r\n-\tinvalid; you have to re-acquire the reference from the owning persistent \\\r\n-\tobject.\r\n-deleted: Operation attempted on a deleted instance.\r\n-dirty: Illegal operation attempted on a dirty instance: dirty objects cannot \\\r\n-\tbe evicted or made transient or non-transactional.\r\n-nested-exceps: This operation failed for some instances.  See the nested \\\r\n-\texceptions array for details.\r\n-new: Illegal operation attempted on a newly persisted instance: new objects \\\r\n-\tcannot be evicted or made transient or non-transactional.\r\n-transient: Illegal operation attempted on a transient instance.\r\n-not-active: Can only perform operation while a transaction is active.\r\n-trans-active: The \"{0}\" transaction property cannot be set during an \\\r\n-\tactive transaction.\r\n-active: This operation cannot be performed while a Transaction is active.\r\n-closed: The context has been closed.  The stack trace at which the \\\r\n-\tcontext was closed is held in the embedded exception.\r\n-closed-notrace: The context has been closed.  The stack trace at which the \\\r\n-\tcontext was closed is available if Runtime=TRACE logging is enabled.\r\n-closed-factory: The factory has been closed.  The stack trace at \\\r\n-\twhich the factory was closed is held in the embedded exception.\r\n-closed-factory-notrace: The factory has been closed.  The stack trace at \\\r\n-\twhich the factory was closed is available if Runtime=TRACE logging is \\\r\n-\tenabled.\r\n-non-trans-read: To perform reads on persistent data outside of a transaction, \\\r\n-\tthe \"NontransactionalRead\" property must be set on the Transaction.\r\n-non-trans-write: To perform writes on persistent data outside of a \\\r\n-\ttransaction, the \"NontransactionalWrite\" property must be set to true.\r\n-write-operation: To perform this operation, it must be written within a transaction, \\\r\n-\tor your settings must allow nontransactional writes and must not detach \\\r\n-\tall nontransactional reads.\r\n-not-managed: The given instance \"{0}\" is not managed by this context.\r\n-trans-not-managed: This broker is not configured to use managed transactions.\r\n-bad-detached-op: You cannot perform operation {0} on detached object \"{1}\". \\\r\n-\tThis operation only applies to managed objects.\r\n-persist-detached: Attempt to persist detached object \"{0}\".  If this is a new \\\r\n-  instance, make sure any version and/or auto-generated primary key fields are \\\r\n-  null/default when persisting.\r\n-null-value: The field \"{0}\" of instance \"{1}\" contained a null value; \\\r\n-\tthe metadata for this field specifies that nulls are illegal.\r\n-change-identity: Attempt to change a primary key field of an instance that \\\r\n-\talready has a final object id.  Only new, unflushed instances whose id you \\\r\n-\thave not retrieved can have their primary keys changed.\r\n-managed-oid: You cannot assign managed object \"{0}\" to the primary key field \\\r\n-\tof \"{1}\".  Embedded primary key values must be transient objects.\r\n-changed-oid: You have modified the object id field of \"{2}\".  Its old value \\\r\n-\twas \"{0}\", and its new value is \"{1}\".  Object id fields are immutable \\\r\n-\tonce the object id of the instance has been assigned. \r\n-cache-exists: An object of type \"{0}\" with oid \"{1}\" already exists in this \\\r\n-\tcontext; another cannot be persisted.\r\n-null-trans: Attempt to commit a null javax.transaction.Transaction.  Some \\\r\n-\tapplication servers set the transaction to null if a rollback occurs.\r\n-end-trans-error: An exception occurred while ending the transaction.  This \\\r\n-\texception will be re-thrown.\r\n-not-bound: The file named \"{0}\" could not be found.\r\n-naming-exception: A NamingException was thrown while obtaining the \\\r\n-\tfactory at \"{0}\" from JNDI.\r\n-attach-deleted: The object \"{0}\" with id \"{1}\" has been deleted and \\\r\n-\tcannot be attached.\r\n-not-detachable: The class \"{0}\" does not declare the \"detachable\" metadata \\\r\n-\textension, so cannot be detached.\r\n-not-copyable: Attempt to copy field \"{0}\" failed.  The field is \\\r\n-\tnot copyable.  This can occur with custom SCO types. Only standard or \\\r\n-    immutable SCO types can be attached and detached.\r\n-no-detach-object-id: Cannot access the detached object id of class \"{0}\". \\\r\n-\tEnsure that the class has the \"detachable\" metadata extension, and \\\r\n-\tthe the class has been re-enhanced.\r\n-attach-version-del: Attempted to attach deleted instance type \"{0}\" with oid \\\r\n-\t\"{1}\".  If the instance is new, the version field should be left to its \\\r\n-\tdefault value.\r\n-attach-wrongclass: Attempted to attach instance \"{0}\" of type \"{1}\", but this \\\r\n-\tinstance is already in the datastore as type \"{2}\".\r\n-sjvm-acquired-lock: Acquired an exclusive lock \"{0}\" on oid \"{1}\".\r\n-sjvm-released-lock: Released lock \"{0}\".\r\n-conn-not-supported: This data store cannot return connections.\r\n-incremental-flush-not-supported: This data store does not support incremental \\\r\n-\tflushing.  If you got this error while performing a query, make sure that \\\r\n-\tyou have not set the FlushBeforeQueries option to true, either by \\\r\n-\tsetting that option in your configuration file, or by programmatically \\\r\n-\tsetting the current FetchConfiguration''s FlushBeforeQueries property \\\r\n-\tto QueryFlushModes.FLUSH_TRUE.\r\n-nontrans-read-not-supported: This data store does not support nontransactional \\\r\n-\treads.  Set the NontransactionalRead property to false.\r\n-optimistic-not-supported: This datastore does not support optimistic \\\r\n-\ttransactions.  Set the Optimistic property to false.\r\n-restore-unset: The RestoreValues option is off, so initial values are \\\r\n-\tnot available. Turn on RestoreValues to be able to obtain initial \\\r\n-\tvalues.\r\n-mutable-restore-unset: The RestoreValues option is not set to \"all\", \\\r\n-\tinitial values of mutable fields are not available. Set RestoreValues to \\\r\n-\t\"all\" in your properties to be able to obtain initial mutable values.\r\n-initial-unloaded: OpenJPA cannot provide the initial value for field \"{0}\" \\\r\n-\tbecause the field was never loaded before being changed.\r\n-dup-oid-assign: Attempt to assign id \"{0}\" to new instance \"{1}\" failed; \\\r\n-\tthere is already an object in the L1 cache with this id. \\\r\n-\tYou must delete this object (in a previous transaction or the current one) \\\r\n-\tbefore reusing its id.  This error can also occur when a horizontally \\\r\n-\tor vertically mapped classes uses auto-increment application identity and \\\r\n-\tdoes not use a hierarchy of application identity classes.\r\n-dup-load: Cannot load object with id \"{0}\".  Instance \"{1}\" with the same id \\\r\n-\talready exists in the L1 cache.  This can occur when you \\\r\n-\tassign an existing id to a new instance, and before flushing attempt to \\\r\n-\tload the existing instance for that id.\r\n-bad-id-value: The given value \"{0}\" cannot be converted into an identity \\\r\n-\tfor \"{2}\".  The value is the wrong type ({1}).\r\n-factory-init: Starting OpenJPA {0}\r\n-factory-properties: Properties: {0}\r\n-inverse-consistency: An inverse inconsistency in the object featureSelection was \\\r\n-\tdetected while flushing the field \"{0}\" of the instance with id \"{1}\" \\\r\n-\tin context \"{2}\".\r\n-no-brokerfactory: You did not name the factory class with the required \\\r\n-\tproperty openjpa.BrokerFactory.  Normally this property defaults \\\r\n-    appropriately; have you forgotten to include all the OpenJPA jars in your \\\r\n-    classpath?\r\n-brokerfactory-excep: There was an error when invoking the static \\\r\n-\tgetInstance method on the named factory class \"{0}\".  See the \\\r\n-\tnested exception for details.\r\n-new-brokerfactory-excep: There was an error when invoking the static \\\r\n-\tnewInstance method on the named factory class \"{0}\".  See the \\\r\n-\tnested exception for details.\r\n-bad-brokerfactory: Could not invoke the static getInstance method on the \\\r\n-\tnamed factory class \"{0}\".\r\n-bad-new-brokerfactory: Could not invoke the static newInstance method on the \\\r\n-\tnamed factory class \"{0}\".\r\n-bad-brokerfactory-class: The named BrokerFactory \"{0}\" is not valid.\r\n-instantiate-abstract: Cannot instantiate abstract class of type \"{0}\" with \\\r\n-\tobject id \"{1}\"; this may indicate that the inheritance discriminator \\\r\n-\tfor the class is not configured correctly.\r\n-nontrans-proxied: You cannot make a property access object created with \"new\" \\\r\n-\tnontransactional.\r\n-no-field: Field \"{0}\" is not declared in \"{1}\", or is not managed.\r\n-no-field-index: \"{0}\" is not the index of any managed field in \"{1}\".\r\n-cant-cascade-persist: Encountered unmanaged object in persistent field \\\r\n-\t\"{0}\" during flush.  However, this field does not \\\r\n-\tallow cascade persist. Set the cascade attribute for this field to \\\r\n-    CascadeType.PERSIST or CascadeType.ALL (JPA annotations) or \\\r\n-    \"persist\" or \"all\" (JPA orm.xml), or enable cascade-persist globally, \\\r\n-    or manually persist the related field value prior to flushing. \\\r\n-\tYou cannot flush unmanaged objects or graphs that have persistent \\\r\n-    associations to unmanaged objects.\r\n-cant-cascade-attach: Encountered new object in persistent field \\\r\n-\t\"{0}\" during attach.  However, this field does not \\\r\n-\tallow cascade attach. Set the cascade attribute for this field to \\\r\n-    CascadeType.MERGE or CascadeType.ALL (JPA annotations) or \\\r\n-    \"merge\" or \"all\" (JPA orm.xml). \\\r\n-    You cannot attach a reference to a new object without cascading.\r\n-ref-to-deleted: Encountered deleted object \"{0}\" in persistent field \\\r\n-\t\"{1}\" of managed object \"{2}\" during flush.\r\n-no-version-field: Encountered object \"{0}\" without a version field during \\\r\n-\tattach.  In order to attach an object, it must either be enhanced or must \\\r\n-\thave a version field.\r\n-inmem-agg-proj-var: Queries with aggregates or projections using variables \\\r\n-\tcurrently cannot be executed in-memory.  Either set IgnoreCache to true, \\\r\n-\tset the openjpa.FlushBeforeQueries property to true, or execute the query \\\r\n-\tbefore changing any instances in the transaction.  The offending query was \\\r\n-\ton type \"{0}\" with filter \"{1}\".\r\n-merged-order-with-result: This query on candidate type \"{0}\" with filter \"{1}\" \\\r\n-\tinvolves combining the results of multiple queries in memory. \\\r\n-\tYou have chosen to order the results on \"{2}\", but you have not selected \\\r\n-\tthis data in your setResult() clause.  Please include this ordering data \\\r\n-\tin setResult() so that OpenJPA can extract it for in-memory ordering.\r\n-bad-grouping: Your query on type \"{0}\" with filter \"{1}\" is invalid.  Your \\\r\n-    select and having clauses must only include aggregates or values that also \\\r\n-    appear in your grouping clause.\r\n-query-nosupport: The \"{0}\" query type does not support this operation.\r\n-query-unmapped: You cannot query unmapped type \"{0}\".\r\n-range-too-big: The range of the query is too big. Start index: \"{0}\", end \\\r\n-\tindex: \"{1}\". The range must be less than Integer.MAX_VALUE.\r\n-invalid-range: The query range from {0} to {1} is not valid.\r\n-no-impls: Unable to execute a query on type \"{0}\".  This class or interface \\\r\n-\tis not mapped, and does not have any mapped implementors.\r\n-bad-param-name: The parameter name or position \"{0}\" passed to \\\r\n-\texecute() is not valid.  All map keys must be a declared parameter \\\r\n-\tname or a number matching the parameter position. Native queries only \\\r\n-\tallow the use of positional parameters.\r\n-force-in-mem: This query on type \"{0}\" must load the entire candidate class \\\r\n-\textent and evaluate the query in-memory.  This may be very slow.  The \\\r\n-\tquery must be executed in memory because OpenJPA is configured with \\\r\n-\tIgnoreCache=false and FlushBeforeQueries=false and \\\r\n-\tthere are dirty instances that may affect the query''s outcome in the \\\r\n-\tcache.\r\n-cant-exec-inmem: Queries of this type (\"{0}\") cannot be executed in-memory. \\\r\n-\tEither set IgnoreCache to true, set the openjpa.FlushBeforeQueries \\\r\n-\tproperty to true, or execute the query before changing any instances in \\\r\n-\tthe transaction.\r\n-executing-query: Executing query: {0}\r\n-executing-query-with-params: Executing query: [{0}] with parameters: {1}\r\n-not-unique: The query on candidate type \"{0}\" with filter \"{1}\" was \\\r\n-\tconfigured to have a unique result, but more than one instance matched \\\r\n-\tthe query.\r\n-no-result: The query on candidate type \"{0}\" with filter \"{1}\" was \\\r\n-\tconfigured to have a unique result, but no instance matched \\\r\n-\tthe query.\r\n-serialized: Queries that have been serialized do not support this operation.\r\n-read-only: Attempt to modify a read-only query object.\r\n-no-class: A candidate Class must be specified before executing a query.\r\n-no-modify-resultclass: A query that declares a result class cannot be used \\\r\n-\tto perform bulk updates.\r\n-no-modify-unique: A query that declares unique results cannot be used \\\r\n-\tto perform bulk updates.\r\n-no-modify-range: A query that declares a result range cannot be used \\\r\n-\tto perform bulk updates.\r\n-unbound-param: Cannot execute query; the declared parameter \"{0}\" was \\\r\n-\tnot given a value.\r\n-unbound-params: Cannot execute query; some declared parameters were not given \\\r\n-\tvalues.  You must supply a value for each of the following parameters, \\\r\n-\tin the given order: {0}\r\n-extra-params: More parameters were passed to execute() than were declared: \\\r\n-\t{1} parameters were specified for query execution, but only {0} \\\r\n-\tparameters were declared in the query.\r\n-null-primitive-param: Parameter \"{0}\" was declared with a primitive type, but \\\r\n-\thas been given a null value.\r\n-merged-aggregate: This query on candidate type \"{0}\" with filter \"{1}\" \\\r\n-\tinvolves combining the results of multiple sub-queries.  However, because \\\r\n-\tthis query is for aggregate data, OpenJPA cannot combine the sub-query \\\r\n-\taggregates into correct final values.\r\n-bad-dec: The {1} declaration \"{0}\" is \\\r\n-\tnot valid. Variables and imports must be delimited with \";\".  Parameters \\\r\n-\tand orderings must be delimited with \",\".  Imports require the \"import\" \\\r\n-\tkeyword, and orderings require the \"ascending\" or \"descending\" keyword.\r\n-mod-bigdecimal: You cannot use the modulo operator (%) on numbers of type \\\r\n-\tBigDecimal.\r\n-cant-convert: Cannot convert object \"{0}\" of type \"{1}\" into an instance of \\\r\n-\t\"{2}\".\r\n-bad-method-class: You set the method name of this openjpa.MethodQL query to \\\r\n-\t\"{1}\", but class \"{0}\" is not a valid class name.  Make sure to fully \\\r\n-\tqualify the class name or to import its package into this query if the \\\r\n-\tclass is not in the query candidate class'' package. \r\n-method-not-static: Method \"{0}\" named in the MethodQL query must be static.\r\n-method-return-type-invalid: Method \"{0}\" named in the MethodQL query must \\\r\n-    have a return type that is assignable from ResultObjectProvider. Return \\\r\n-    type is: {1}.\r\n-no-method: You must set the query filter to the name of the method to execute \\\r\n-\tfor this MethodQL query instance.\r\n-method-error: There was an error invoking method \"{0}\" with arguments \"{1}\".\r\n-bad-param-type: The type \"{0}\" as used in the parameter declarations \\\r\n-\tcould not be found in the imports.\r\n-cant-set: Result type \"{0}\" does not have any public fields or setter methods \\\r\n-\tfor the projection or aggregate result element \"{1}\", nor does it have a \\\r\n-\tgeneric put(Object,Object) method that can be used, nor does it have a \\\r\n-\tpublic constructor that takes the types {2}.\r\n-pack-err: There was an error packing the projection and/or aggregate results \\\r\n-\tof the query into result type \"{0}\".  See the nested Throwable exception \\\r\n-\tfor details.\r\n-pack-instantiation-err: There was an error creating an instance of type \"{0}\" \\\r\n-\twhen packing the projection and/or aggregate results of the query. Ensure \\\r\n-\tthat you have defined a public no-args constructor in \"{0}\".\r\n-bad-inmem-method: Method \"{0}(StoreContext, ClassMetaData, boolean, Object, \\\r\n-\tMap, FetchConfiguration)\" is not declared in type \"{1}\". \\\r\n-\tCheck the method name supplied in your MethodQL query filter.  \\\r\n-\tOpenJPA is attempting to execute this query in-memory; if you implemented \\\r\n-    the datastore method instead (a method with the same signature but without \\\r\n-    the Object argument) and want this query to execute in the datastore, \\\r\n-    either create the query before modifying objects in the current transaction, \\\r\n-\tset IgnoreCache to true, or set the openjpa.FlushBeforeQueries property to \\\r\n-\ttrue.\r\n-bad-datastore-method: Method \"{0}(StoreContext, ClassMetaData, boolean, Map, \\\r\n-\tFetchConfiguration)\" is not declared in type \"{1}\".  Check \\\r\n-\tthe method name supplied in your MethodQL query filter.  OpenJPA is \\\r\n-\tattempting to execute this query against the datastore; if you implemented \\\r\n-\tthe in-memory method instead (a method with the same signature but with an \\\r\n-\tObject argument) and want this query to execute in-memory, supply a \\\r\n-\tCollection of candidates to filter.\r\n-only-update-constants: Bulk update queries when executed in memory \\\r\n-\tmay only update to constant values.\r\n-only-range-constants: Range values must be numeric constants.  Illegal query: \\\r\n-    {0}\r\n-no-savepoint-copy: Unable to copy field \"{0}\" for savepoint.\r\n-savepoint-exists: A savepoint with the name \"{0}\" already exists.  \\\r\n-\tEach savepoint name must be unique.\r\n-no-lastsavepoint: Cannot rollback/release last savepoint as no savepoint \\\r\n-\thas been set.\r\n-no-savepoint: You have not set a savepoint with the name \"{0}\"\r\n-savepoint-init: This savepoint has already been initialized.\r\n-savepoint-flush-not-supported: The configured SavepointManager does not \\\r\n-\tsupport incremental flushing when a savepoint has been set.  You must \\\r\n-\trelease your savepoints before flushing.\r\n-callback-err: Errors occurred processing listener callbacks.  See the nested \\\r\n-    exceptions for details.\r\n-bad-agg-listener-hint: Query hint value \"{0}\" ({1}) cannot be converted into \\\r\n-\tan aggregate listener.\r\n-bad-filter-listener-hint: Query hint value \"{0}\" ({1}) cannot be converted \\\r\n-\tinto a filter listener.\r\n-bad-setter-hint-arg: In query hint \"{0}\", cannot convert hint value \"{1}\" to \\\r\n-    type \"{2}\".\r\n-detach-val-mismatch: The instance \"{0}\" is managed by another context and \\\r\n-\tcannot be inspected for field values.\r\n-detach-val-badsm: The instance \"{0}\" has an unknown state manager which \\\r\n-\tprevents field inspection.\r\n-null-oid: Cannot perform find using null object id.\r\n-illegal-op-in-prestore: This operation is illegal when called during \\\r\n-\ttransaction completion.\r\n-no-expressions: The query cannot be executed because it has no \\\r\n-\tvalid expressions.\r\n-null-fg: Attempt to add null/empty fetch group name to fetch configuration.\r\n-null-field: Attempt to add null/empty field name to fetch configuration.\r\n-container-projection: Query projections cannot include array, collection, or \\\r\n-    map fields.  Invalid query: \"{0}\"\r\n-existing-value-override-excep: The generated value processing detected an \\\r\n-existing value assigned to this field: {0}.  This existing value was either \\\r\n-provided via an initializer or by calling the setter method.  You either need \\\r\n-to remove the @GeneratedValue annotation or modify the code to remove the \\\r\n-initializer processing.\r\n-invalid-tran-status: The transaction was not in a valid state ({0}) to \\\r\n-accept the \"{1}\" method invocation.  Processing will continue.\r\n-multi-threaded-access: Multiple concurrent threads attempted to access a \\\r\n-    single broker. By default brokers are not thread safe; if you require \\\r\n-    and/or intend a broker to be accessed by more than one thread, set the \\\r\n-    openjpa.Multithreaded property to true to override the default behavior.\r\n-no-saved-fields: No state snapshot is available for instance of type \"{0}\", \\\r\n-    but this instance uses state-comparison for dirty detection.\r\n-cant-serialize-flushed-broker: Serialization not allowed once a broker has \\\r\n-    been flushed.\r\n-cant-serialize-pessimistic-broker: Serialization not allowed for brokers with \\\r\n-    an active datastore (pessimistic) transaction.\r\n-cant-serialize-connected-broker: Serialization not allowed for brokers with \\\r\n-    an active connection to the database.\r\n-no-interface-metadata: No metadata was found for managed interface {0}.\r\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.  \n+\n+cant-convert-result: There is no conversion between query projection type \\\n+\t\"{0}\" and result type \"{1}\".\n+unloaded-detached: Attempt to access an unloaded field of detached instance \\\n+\t\"{0}\".\n+meta-unknownid: Cannot manipulate identity of type \"{0}\": it''s identity type \\\n+\tis unknown.\n+new-abstract: Cannot create an instance of \"{0}\": abstract classes are not \\\n+    yet supported.\n+bad-new-query: Attempt to construct a query from an extent or class.  You must \\\n+\tpass a (possibly null) query string or template to the query factory \\\n+\tmethod when creating the query. \n+update-restrict: Detected attempt to modify field \"{0}\" with value strategy \\\n+\t\"restrict\".\n+reentrant-flush: Detected reentrant flush.  Make sure your flush-time instance \\\n+\tcallback methods or event listeners do not invoke any operations that \\\n+\trequire the in-progress flush to complete.\n+rolled-back: The transaction has been rolled back.  See the nested exceptions \\\n+\tfor details on the errors that occurred.\n+bad-lock-level: This lock manager does not recognize lock level \"{0}\".\n+pessimistic-mutate: You are attempting to directly mutate a persistent second \\\n+\tclass object (such as a collection or map field) that you obtained before \\\n+\tthe transaction began.  After beginning a datastore transaction, you \\\n+\tmust re-obtain any references to mutable second class objects from the \\\n+\towning persistent object.  Detected attempt to mutate value of field \"{0}\" \\\n+\tin instance \"{1}\".  This instance may not be locked correctly.\n+not-derefed: Encountered unknown dependent instance \"{0}\".  This error is \\\n+\toften caused by either removing a dependent instance from one dependent \\\n+\tfield, but not other dependent fields that reference it, or by removing a \\\n+\tdependent instance from its owning field, flushing \\\n+\t(causing the unreferenced dependent instance to be deleted), and then \\\n+\ttrying to assign the deleted instance to another field before commit.  \\\n+\tThe instance cannot be un-deleted, resulting in an error.  Make sure not \\\n+\tto leave dangling dependent references to objects, and to reassign \\\n+\tdependent objects before flush so that OpenJPA does not think they are \\\n+\tunreferenced and therefore safe to delete.\n+init-null-pc: Attempt to initialize a state manager with a null \\\n+\tpersistence-capable instance for type \"{0}\".  This is often caused by \\\n+\tattempting to load an instance of an abstract class, or \\\n+\tneglecting to use a class indicator when the base persistence-capable \\\n+\tclass in an inheritance tree is abstract.\n+init-sm-pc: Attempt to initialize a state manager with an instance that is \\\n+\talready managed (\"{0}\").  You might be trying to persist this instance \\\n+\tin two threads at the same time.\n+bad-ds-oid: The type \"{0}\" declares datastore identity but the value \\\n+\tpassed to lookup of type \"{1}\" is not a OpenJPA id instance.\n+null-oids: Some of the object ids passed to getObjectsById were null.\n+marked-rollback: The transaction cannot be committed, because it was already \\\n+\tmarked for rollback only.  The transaction will be rolled back instead. \\\n+    The cause of the rollback-only status is reported in the embedded stack.\n+refresh-flushed: You cannot refresh an instance that has been flushed to the \\\n+\tdata store.\n+pc-loader-different: Attempt to cast instance \"{0}\" to PersistenceCapable failed. \\\n+    The object implemented org.apache.openjpa.enhance.PersistenceCapable, \\\n+    but the instance of that interface was loaded by two different ClassLoaders: \\\n+    \"{1}\" and \"{2}\".\n+pc-cast: Attempt to cast instance \"{0}\" to PersistenceCapable failed.  Ensure \\\n+\tthat it has been enhanced.\n+del-instance: The instance of type \"{0}\" with oid \"{1}\" no longer exists in \\\n+\tthe data store.  This may mean that you deleted the instance in a separate \\\n+\ttransaction, but this context still has a cached version.\n+no-broker-class: The specified type \"{0}\" could not be loaded. Please ensure \\\n+\tthat the class exists in the project class path.\n+bad-embed: Attempt to set an embedded value for unembeddable field \"{0}\". \\\n+\tPlease report this error to OpenJPA support.\n+embed-ref: You are attempting to access an embedded object reference \\\n+\tthat was obtained before the last transaction status change. After \\\n+\ttransactions begin and end, all references to embedded objects become \\\n+\tinvalid; you have to re-acquire the reference from the owning persistent \\\n+\tobject.\n+deleted: Operation attempted on a deleted instance.\n+dirty: Illegal operation attempted on a dirty instance: dirty objects cannot \\\n+\tbe evicted or made transient or non-transactional.\n+nested-exceps: This operation failed for some instances.  See the nested \\\n+\texceptions array for details.\n+new: Illegal operation attempted on a newly persisted instance: new objects \\\n+\tcannot be evicted or made transient or non-transactional.\n+transient: Illegal operation attempted on a transient instance.\n+not-active: Can only perform operation while a transaction is active.\n+trans-active: The \"{0}\" transaction property cannot be set during an \\\n+\tactive transaction.\n+active: This operation cannot be performed while a Transaction is active.\n+closed: The context has been closed.  The stack trace at which the \\\n+\tcontext was closed is held in the embedded exception.\n+closed-notrace: The context has been closed.  The stack trace at which the \\\n+\tcontext was closed is available if Runtime=TRACE logging is enabled.\n+closed-factory: The factory has been closed.  The stack trace at \\\n+\twhich the factory was closed is held in the embedded exception.\n+closed-factory-notrace: The factory has been closed.  The stack trace at \\\n+\twhich the factory was closed is available if Runtime=TRACE logging is \\\n+\tenabled.\n+non-trans-read: To perform reads on persistent data outside of a transaction, \\\n+\tthe \"NontransactionalRead\" property must be set on the Transaction.\n+non-trans-write: To perform writes on persistent data outside of a \\\n+\ttransaction, the \"NontransactionalWrite\" property must be set to true.\n+write-operation: To perform this operation, it must be written within a transaction, \\\n+\tor your settings must allow nontransactional writes and must not detach \\\n+\tall nontransactional reads.\n+not-managed: The given instance \"{0}\" is not managed by this context.\n+trans-not-managed: This broker is not configured to use managed transactions.\n+bad-detached-op: You cannot perform operation {0} on detached object \"{1}\". \\\n+\tThis operation only applies to managed objects.\n+persist-detached: Attempt to persist detached object \"{0}\".  If this is a new \\\n+  instance, make sure any version and/or auto-generated primary key fields are \\\n+  null/default when persisting.\n+null-value: The field \"{0}\" of instance \"{1}\" contained a null value; \\\n+\tthe metadata for this field specifies that nulls are illegal.\n+change-identity: Attempt to change a primary key field of an instance that \\\n+\talready has a final object id.  Only new, unflushed instances whose id you \\\n+\thave not retrieved can have their primary keys changed.\n+managed-oid: You cannot assign managed object \"{0}\" to the primary key field \\\n+\tof \"{1}\".  Embedded primary key values must be transient objects.\n+changed-oid: You have modified the object id field of \"{2}\".  Its old value \\\n+\twas \"{0}\", and its new value is \"{1}\".  Object id fields are immutable \\\n+\tonce the object id of the instance has been assigned. \n+cache-exists: An object of type \"{0}\" with oid \"{1}\" already exists in this \\\n+\tcontext; another cannot be persisted.\n+null-trans: Attempt to commit a null javax.transaction.Transaction.  Some \\\n+\tapplication servers set the transaction to null if a rollback occurs.\n+end-trans-error: An exception occurred while ending the transaction.  This \\\n+\texception will be re-thrown.\n+not-bound: The file named \"{0}\" could not be found.\n+naming-exception: A NamingException was thrown while obtaining the \\\n+\tfactory at \"{0}\" from JNDI.\n+attach-deleted: The object \"{0}\" with id \"{1}\" has been deleted and \\\n+\tcannot be attached.\n+not-detachable: The class \"{0}\" does not declare the \"detachable\" metadata \\\n+\textension, so cannot be detached.\n+not-copyable: Attempt to copy field \"{0}\" failed.  The field is \\\n+\tnot copyable.  This can occur with custom SCO types. Only standard or \\\n+    immutable SCO types can be attached and detached.\n+no-detach-object-id: Cannot access the detached object id of class \"{0}\". \\\n+\tEnsure that the class has the \"detachable\" metadata extension, and \\\n+\tthe the class has been re-enhanced.\n+attach-version-del: Attempted to attach deleted instance type \"{0}\" with oid \\\n+\t\"{1}\".  If the instance is new, the version field should be left to its \\\n+\tdefault value.\n+attach-wrongclass: Attempted to attach instance \"{0}\" of type \"{1}\", but this \\\n+\tinstance is already in the datastore as type \"{2}\".\n+sjvm-acquired-lock: Acquired an exclusive lock \"{0}\" on oid \"{1}\".\n+sjvm-released-lock: Released lock \"{0}\".\n+conn-not-supported: This data store cannot return connections.\n+incremental-flush-not-supported: This data store does not support incremental \\\n+\tflushing.  If you got this error while performing a query, make sure that \\\n+\tyou have not set the FlushBeforeQueries option to true, either by \\\n+\tsetting that option in your configuration file, or by programmatically \\\n+\tsetting the current FetchConfiguration''s FlushBeforeQueries property \\\n+\tto QueryFlushModes.FLUSH_TRUE.\n+nontrans-read-not-supported: This data store does not support nontransactional \\\n+\treads.  Set the NontransactionalRead property to false.\n+optimistic-not-supported: This datastore does not support optimistic \\\n+\ttransactions.  Set the Optimistic property to false.\n+restore-unset: The RestoreValues option is off, so initial values are \\\n+\tnot available. Turn on RestoreValues to be able to obtain initial \\\n+\tvalues.\n+mutable-restore-unset: The RestoreValues option is not set to \"all\", \\\n+\tinitial values of mutable fields are not available. Set RestoreValues to \\\n+\t\"all\" in your properties to be able to obtain initial mutable values.\n+initial-unloaded: OpenJPA cannot provide the initial value for field \"{0}\" \\\n+\tbecause the field was never loaded before being changed.\n+dup-oid-assign: Attempt to assign id \"{0}\" to new instance \"{1}\" failed; \\\n+\tthere is already an object in the L1 cache with this id. \\\n+\tYou must delete this object (in a previous transaction or the current one) \\\n+\tbefore reusing its id.  This error can also occur when a horizontally \\\n+\tor vertically mapped classes uses auto-increment application identity and \\\n+\tdoes not use a hierarchy of application identity classes.\n+dup-load: Cannot load object with id \"{0}\".  Instance \"{1}\" with the same id \\\n+\talready exists in the L1 cache.  This can occur when you \\\n+\tassign an existing id to a new instance, and before flushing attempt to \\\n+\tload the existing instance for that id.\n+bad-id-value: The given value \"{0}\" cannot be converted into an identity \\\n+\tfor \"{2}\".  The value is the wrong type ({1}).\n+factory-init: Starting OpenJPA {0}\n+factory-properties: Properties: {0}\n+inverse-consistency: An inverse inconsistency in the object featureSelection was \\\n+\tdetected while flushing the field \"{0}\" of the instance with id \"{1}\" \\\n+\tin context \"{2}\".\n+no-brokerfactory: You did not name the factory class with the required \\\n+\tproperty openjpa.BrokerFactory.  Normally this property defaults \\\n+    appropriately; have you forgotten to include all the OpenJPA jars in your \\\n+    classpath?\n+brokerfactory-excep: There was an error when invoking the static \\\n+\tgetInstance method on the named factory class \"{0}\".  See the \\\n+\tnested exception for details.\n+new-brokerfactory-excep: There was an error when invoking the static \\\n+\tnewInstance method on the named factory class \"{0}\".  See the \\\n+\tnested exception for details.\n+bad-brokerfactory: Could not invoke the static getInstance method on the \\\n+\tnamed factory class \"{0}\".\n+bad-new-brokerfactory: Could not invoke the static newInstance method on the \\\n+\tnamed factory class \"{0}\".\n+bad-brokerfactory-class: The named BrokerFactory \"{0}\" is not valid.\n+instantiate-abstract: Cannot instantiate abstract class of type \"{0}\" with \\\n+\tobject id \"{1}\"; this may indicate that the inheritance discriminator \\\n+\tfor the class is not configured correctly.\n+nontrans-proxied: You cannot make a property access object created with \"new\" \\\n+\tnontransactional.\n+no-field: Field \"{0}\" is not declared in \"{1}\", or is not managed.\n+no-field-index: \"{0}\" is not the index of any managed field in \"{1}\".\n+cant-cascade-persist: Encountered unmanaged object in persistent field \\\n+\t\"{0}\" during flush.  However, this field does not \\\n+\tallow cascade persist. Set the cascade attribute for this field to \\\n+    CascadeType.PERSIST or CascadeType.ALL (JPA annotations) or \\\n+    \"persist\" or \"all\" (JPA orm.xml), or enable cascade-persist globally, \\\n+    or manually persist the related field value prior to flushing. \\\n+\tYou cannot flush unmanaged objects or graphs that have persistent \\\n+    associations to unmanaged objects.\n+cant-cascade-attach: Encountered new object in persistent field \\\n+\t\"{0}\" during attach.  However, this field does not \\\n+\tallow cascade attach. Set the cascade attribute for this field to \\\n+    CascadeType.MERGE or CascadeType.ALL (JPA annotations) or \\\n+    \"merge\" or \"all\" (JPA orm.xml). \\\n+    You cannot attach a reference to a new object without cascading.\n+ref-to-deleted: Encountered deleted object \"{0}\" in persistent field \\\n+\t\"{1}\" of managed object \"{2}\" during flush.\n+no-version-field: Encountered object \"{0}\" without a version field during \\\n+\tattach.  In order to attach an object, it must either be enhanced or must \\\n+\thave a version field.\n+inmem-agg-proj-var: Queries with aggregates or projections using variables \\\n+\tcurrently cannot be executed in-memory.  Either set IgnoreCache to true, \\\n+\tset the openjpa.FlushBeforeQueries property to true, or execute the query \\\n+\tbefore changing any instances in the transaction.  The offending query was \\\n+\ton type \"{0}\" with filter \"{1}\".\n+merged-order-with-result: This query on candidate type \"{0}\" with filter \"{1}\" \\\n+\tinvolves combining the results of multiple queries in memory. \\\n+\tYou have chosen to order the results on \"{2}\", but you have not selected \\\n+\tthis data in your setResult() clause.  Please include this ordering data \\\n+\tin setResult() so that OpenJPA can extract it for in-memory ordering.\n+bad-grouping: Your query on type \"{0}\" with filter \"{1}\" is invalid.  Your \\\n+    select and having clauses must only include aggregates or values that also \\\n+    appear in your grouping clause.\n+query-nosupport: The \"{0}\" query type does not support this operation.\n+query-unmapped: You cannot query unmapped type \"{0}\".\n+range-too-big: The range of the query is too big. Start index: \"{0}\", end \\\n+\tindex: \"{1}\". The range must be less than Integer.MAX_VALUE.\n+invalid-range: The query range from {0} to {1} is not valid.\n+no-impls: Unable to execute a query on type \"{0}\".  This class or interface \\\n+\tis not mapped, and does not have any mapped implementors.\n+bad-param-name: The parameter name or position \"{0}\" passed to \\\n+\texecute() is not valid.  All map keys must be a declared parameter \\\n+\tname or a number matching the parameter position. Native queries only \\\n+\tallow the use of positional parameters.\n+force-in-mem: This query on type \"{0}\" must load the entire candidate class \\\n+\textent and evaluate the query in-memory.  This may be very slow.  The \\\n+\tquery must be executed in memory because OpenJPA is configured with \\\n+\tIgnoreCache=false and FlushBeforeQueries=false and \\\n+\tthere are dirty instances that may affect the query''s outcome in the \\\n+\tcache.\n+cant-exec-inmem: Queries of this type (\"{0}\") cannot be executed in-memory. \\\n+\tEither set IgnoreCache to true, set the openjpa.FlushBeforeQueries \\\n+\tproperty to true, or execute the query before changing any instances in \\\n+\tthe transaction.\n+executing-query: Executing query: {0}\n+executing-query-with-params: Executing query: [{0}] with parameters: {1}\n+not-unique: The query on candidate type \"{0}\" with filter \"{1}\" was \\\n+\tconfigured to have a unique result, but more than one instance matched \\\n+\tthe query.\n+no-result: The query on candidate type \"{0}\" with filter \"{1}\" was \\\n+\tconfigured to have a unique result, but no instance matched \\\n+\tthe query.\n+serialized: Queries that have been serialized do not support this operation.\n+read-only: Attempt to modify a read-only query object.\n+no-class: A candidate Class must be specified before executing a query.\n+no-modify-resultclass: A query that declares a result class cannot be used \\\n+\tto perform bulk updates.\n+no-modify-unique: A query that declares unique results cannot be used \\\n+\tto perform bulk updates.\n+no-modify-range: A query that declares a result range cannot be used \\\n+\tto perform bulk updates.\n+unbound-param: Cannot execute query; the declared parameter \"{0}\" was \\\n+\tnot given a value.\n+unbound-params: Cannot execute query; some declared parameters were not given \\\n+\tvalues.  You must supply a value for each of the following parameters, \\\n+\tin the given order: {0}\n+extra-params: More parameters were passed to execute() than were declared: \\\n+\t{1} parameters were specified for query execution, but only {0} \\\n+\tparameters were declared in the query.\n+null-primitive-param: Parameter \"{0}\" was declared with a primitive type, but \\\n+\thas been given a null value.\n+merged-aggregate: This query on candidate type \"{0}\" with filter \"{1}\" \\\n+\tinvolves combining the results of multiple sub-queries.  However, because \\\n+\tthis query is for aggregate data, OpenJPA cannot combine the sub-query \\\n+\taggregates into correct final values.\n+bad-dec: The {1} declaration \"{0}\" is \\\n+\tnot valid. Variables and imports must be delimited with \";\".  Parameters \\\n+\tand orderings must be delimited with \",\".  Imports require the \"import\" \\\n+\tkeyword, and orderings require the \"ascending\" or \"descending\" keyword.\n+mod-bigdecimal: You cannot use the modulo operator (%) on numbers of type \\\n+\tBigDecimal.\n+cant-convert: Cannot convert object \"{0}\" of type \"{1}\" into an instance of \\\n+\t\"{2}\".\n+bad-method-class: You set the method name of this openjpa.MethodQL query to \\\n+\t\"{1}\", but class \"{0}\" is not a valid class name.  Make sure to fully \\\n+\tqualify the class name or to import its package into this query if the \\\n+\tclass is not in the query candidate class'' package. \n+method-not-static: Method \"{0}\" named in the MethodQL query must be static.\n+method-return-type-invalid: Method \"{0}\" named in the MethodQL query must \\\n+    have a return type that is assignable from ResultObjectProvider. Return \\\n+    type is: {1}.\n+no-method: You must set the query filter to the name of the method to execute \\\n+\tfor this MethodQL query instance.\n+method-error: There was an error invoking method \"{0}\" with arguments \"{1}\".\n+bad-param-type: The type \"{0}\" as used in the parameter declarations \\\n+\tcould not be found in the imports.\n+cant-set: Result type \"{0}\" does not have any public fields or setter methods \\\n+\tfor the projection or aggregate result element \"{1}\", nor does it have a \\\n+\tgeneric put(Object,Object) method that can be used, nor does it have a \\\n+\tpublic constructor that takes the types {2}.\n+pack-err: There was an error packing the projection and/or aggregate results \\\n+\tof the query into result type \"{0}\".  See the nested Throwable exception \\\n+\tfor details.\n+pack-instantiation-err: There was an error creating an instance of type \"{0}\" \\\n+\twhen packing the projection and/or aggregate results of the query. Ensure \\\n+\tthat you have defined a public no-args constructor in \"{0}\".\n+bad-inmem-method: Method \"{0}(StoreContext, ClassMetaData, boolean, Object, \\\n+\tMap, FetchConfiguration)\" is not declared in type \"{1}\". \\\n+\tCheck the method name supplied in your MethodQL query filter.  \\\n+\tOpenJPA is attempting to execute this query in-memory; if you implemented \\\n+    the datastore method instead (a method with the same signature but without \\\n+    the Object argument) and want this query to execute in the datastore, \\\n+    either create the query before modifying objects in the current transaction, \\\n+\tset IgnoreCache to true, or set the openjpa.FlushBeforeQueries property to \\\n+\ttrue.\n+bad-datastore-method: Method \"{0}(StoreContext, ClassMetaData, boolean, Map, \\\n+\tFetchConfiguration)\" is not declared in type \"{1}\".  Check \\\n+\tthe method name supplied in your MethodQL query filter.  OpenJPA is \\\n+\tattempting to execute this query against the datastore; if you implemented \\\n+\tthe in-memory method instead (a method with the same signature but with an \\\n+\tObject argument) and want this query to execute in-memory, supply a \\\n+\tCollection of candidates to filter.\n+only-update-constants: Bulk update queries when executed in memory \\\n+\tmay only update to constant values.\n+only-range-constants: Range values must be numeric constants.  Illegal query: \\\n+    {0}\n+no-savepoint-copy: Unable to copy field \"{0}\" for savepoint.\n+savepoint-exists: A savepoint with the name \"{0}\" already exists.  \\\n+\tEach savepoint name must be unique.\n+no-lastsavepoint: Cannot rollback/release last savepoint as no savepoint \\\n+\thas been set.\n+no-savepoint: You have not set a savepoint with the name \"{0}\"\n+savepoint-init: This savepoint has already been initialized.\n+savepoint-flush-not-supported: The configured SavepointManager does not \\\n+\tsupport incremental flushing when a savepoint has been set.  You must \\\n+\trelease your savepoints before flushing.\n+callback-err: Errors occurred processing listener callbacks.  See the nested \\\n+    exceptions for details.\n+bad-agg-listener-hint: Query hint value \"{0}\" ({1}) cannot be converted into \\\n+\tan aggregate listener.\n+bad-filter-listener-hint: Query hint value \"{0}\" ({1}) cannot be converted \\\n+\tinto a filter listener.\n+bad-setter-hint-arg: In query hint \"{0}\", cannot convert hint value \"{1}\" to \\\n+    type \"{2}\".\n+detach-val-mismatch: The instance \"{0}\" is managed by another context and \\\n+\tcannot be inspected for field values.\n+detach-val-badsm: The instance \"{0}\" has an unknown state manager which \\\n+\tprevents field inspection.\n+null-oid: Cannot perform find using null object id.\n+illegal-op-in-prestore: This operation is illegal when called during \\\n+\ttransaction completion.\n+no-expressions: The query cannot be executed because it has no \\\n+\tvalid expressions.\n+null-fg: Attempt to add null/empty fetch group name to fetch configuration.\n+null-field: Attempt to add null/empty field name to fetch configuration.\n+container-projection: Query projections cannot include array, collection, or \\\n+    map fields.  Invalid query: \"{0}\"\n+existing-value-override-excep: The generated value processing detected an \\\n+existing value assigned to this field: {0}.  This existing value was either \\\n+provided via an initializer or by calling the setter method.  You either need \\\n+to remove the @GeneratedValue annotation or modify the code to remove the \\\n+initializer processing.\n+invalid-tran-status: The transaction was not in a valid state ({0}) to \\\n+accept the \"{1}\" method invocation.  Processing will continue.\n+multi-threaded-access: Multiple concurrent threads attempted to access a \\\n+    single broker. By default brokers are not thread safe; if you require \\\n+    and/or intend a broker to be accessed by more than one thread, set the \\\n+    openjpa.Multithreaded property to true to override the default behavior.\n+no-saved-fields: No state snapshot is available for instance of type \"{0}\", \\\n+    but this instance uses state-comparison for dirty detection.\n+cant-serialize-flushed-broker: Serialization not allowed once a broker has \\\n+    been flushed.\n+cant-serialize-pessimistic-broker: Serialization not allowed for brokers with \\\n+    an active datastore (pessimistic) transaction.\n+cant-serialize-connected-broker: Serialization not allowed for brokers with \\\n+    an active connection to the database.\n+no-interface-metadata: No metadata was found for managed interface {0}.\n fetch-configuration-stack-empty: Fetch configuration stack is empty.\n\\ No newline at end of file"},{"sha":"e7050511fe8f5b1e9fed5de6c37d038d7139ce91","filename":"openjpa-slice/src/main/resources/org/apache/openjpa/slice/jdbc/localizer.properties","status":"modified","additions":67,"deletions":67,"changes":134,"blob_url":"https://github.com/apache/openjpa/blob/ca334ebb76e966848ff21a5279d5148e2018e0ee/openjpa-slice/src/main/resources/org/apache/openjpa/slice/jdbc/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/ca334ebb76e966848ff21a5279d5148e2018e0ee/openjpa-slice/src/main/resources/org/apache/openjpa/slice/jdbc/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-slice/src/main/resources/org/apache/openjpa/slice/jdbc/localizer.properties?ref=ca334ebb76e966848ff21a5279d5148e2018e0ee","patch":"@@ -1,67 +1,67 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\r\n-# or more contributor license agreements.  See the NOTICE file\r\n-# distributed with this work for additional information\r\n-# regarding copyright ownership.  The ASF licenses this file\r\n-# to you under the Apache License, Version 2.0 (the\r\n-# \"License\"); you may not use this file except in compliance\r\n-# with the License.  You may obtain a copy of the License at\r\n-#\r\n-# http://www.apache.org/licenses/LICENSE-2.0\r\n-#\r\n-# Unless required by applicable law or agreed to in writing,\r\n-# software distributed under the License is distributed on an\r\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n-# KIND, either express or implied.  See the License for the\r\n-# specific language governing permissions and limitations\r\n-# under the License.  \r\n-\r\n-slice-not-found: No slice named \"{0}\" can be found. Available slices are \"{1}\"\r\n-slice-no-url: Slice \"{0}\" has no database URL. Specify a valid database URL \\\r\n-\tas the value of \"slice.{0}.ConnectionURL\" property. ConnectionURL is the \\\r\n-\tonly mandatory property of a slice. If any other slice property \\\r\n-\tis not specified, then the corresponding openjpa.* property value is used \\\r\n-\tas default.\r\n-slice-none-configured: No slice has been configured. Specify slice.XYZ as \\\r\n-\tproperty name to register a slice named XYZ.\r\n-slice-configuration: Slice \"{0}\" configured with \"{1}\"\r\n-slice-available: Detected slices \"{0}\" in configuration.\r\n-no-url: No ConnectionURL property has been specified.\r\n-wrong-url: URL \"{0}\" is invalid as database URL.\r\n-wrong-slice: Wrong slice \"{0}\" for \"{1}\"\r\n-slice-connect: Connecting to slice \"{0}\" at URL \"{1}\"\r\n-slice-connect-warn: Failed to connect to slice \"{0}\". Slice \"{0}\" will be \\\r\n-\tignored as configuration is set as lenient.\r\n-slice-connect-known-warn: Failed to connect to URL \"{1}\" due to {2}. \\\r\n-\tSlice \"{0}\" will be ignored as configuration is set as lenient.\r\n-slice-connect-error: Failed to connect slice \"{0}\" to URL \"{1}\".\r\n-slice-connect-known-error: Failed to connect to URL \"{1}\" due to {2}.\r\n-bad-policy-slice:Distribution policy \"{0}\" has returned invalid slice \\\r\n-\t\"{1}\" for \"{2}\". The valid slices are {3}. This error may happen \\\r\n-\twhen one or more of the originally configured slices are unavailable \\\r\n-\tand Lenient property is set to true.\r\n-slice-xa-enabled: All slices \"{0}\" is XA-complaint and hence store transaction \\\r\n-\twill use a two-phase commit protocol even if the persistent unit is \\\r\n-\tconfigured for non-JTA transaction.\r\n-slice-xa-disabled: Not all active slices \"{0}\" is XA-complaint and hence store \\\r\n-\ttransaction will not use a two-phase commit protocol. If persistent unit \\\r\n-\tis configured for JTA transaction then the slices will participate in \\\r\n-\tglobal transaction but otherwise the atomic nature of commit across all \\\r\n-\tslices is not guaranteed.  \r\n-two-phase: \"{3}\".{0}\"(xid=[{4}]] Connection={1} XAConnection={2} \r\n-factory-init: Starting OpenJPA Slice {0}\r\n-config-init: Configuring Slice {0}\r\n-no-slice-names: Slice identifiers are not explicitly listed via \"{0}\" property.\\\r\n-\tThe configuration will be scanned to determine slice identifiers.\r\n-no-slice: No slices are configured or available\r\n-no-master-slice: No master slice has been configured explicitly in \\\r\n-\t\"{0}\" property. The first slice \"{1}\" in the list of configured \\\r\n-\tslices will be used as master. \r\n-resource-xa-tm-not-2pc: All slices is using XA-complaint driver but the \\\r\n-\tconfigured \"{0}\" transaction manager is not capable of enlisting XA-aware \\\r\n-\tresources. See slice.TransactionManager property documentation to  \\\r\n-\tconfigure XA-aware Transaction Manager capable for two-phase commit.\r\n-resource-not-xa-tm-2pc: One or more slices is not using XA-complaint driver \\\r\n-\tbut the configured \"{0}\" transaction manager can only enlist XA-aware \\\r\n-\tresource. \r\n-not-open: The underlying result sets are not open.\r\n-aggregate-unsupported: The query uses unsupported aggregate operation \"{0}\".  \r\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.  \n+\n+slice-not-found: No slice named \"{0}\" can be found. Available slices are \"{1}\"\n+slice-no-url: Slice \"{0}\" has no database URL. Specify a valid database URL \\\n+\tas the value of \"slice.{0}.ConnectionURL\" property. ConnectionURL is the \\\n+\tonly mandatory property of a slice. If any other slice property \\\n+\tis not specified, then the corresponding openjpa.* property value is used \\\n+\tas default.\n+slice-none-configured: No slice has been configured. Specify slice.XYZ as \\\n+\tproperty name to register a slice named XYZ.\n+slice-configuration: Slice \"{0}\" configured with \"{1}\"\n+slice-available: Detected slices \"{0}\" in configuration.\n+no-url: No ConnectionURL property has been specified.\n+wrong-url: URL \"{0}\" is invalid as database URL.\n+wrong-slice: Wrong slice \"{0}\" for \"{1}\"\n+slice-connect: Connecting to slice \"{0}\" at URL \"{1}\"\n+slice-connect-warn: Failed to connect to slice \"{0}\". Slice \"{0}\" will be \\\n+\tignored as configuration is set as lenient.\n+slice-connect-known-warn: Failed to connect to URL \"{1}\" due to {2}. \\\n+\tSlice \"{0}\" will be ignored as configuration is set as lenient.\n+slice-connect-error: Failed to connect slice \"{0}\" to URL \"{1}\".\n+slice-connect-known-error: Failed to connect to URL \"{1}\" due to {2}.\n+bad-policy-slice:Distribution policy \"{0}\" has returned invalid slice \\\n+\t\"{1}\" for \"{2}\". The valid slices are {3}. This error may happen \\\n+\twhen one or more of the originally configured slices are unavailable \\\n+\tand Lenient property is set to true.\n+slice-xa-enabled: All slices \"{0}\" is XA-complaint and hence store transaction \\\n+\twill use a two-phase commit protocol even if the persistent unit is \\\n+\tconfigured for non-JTA transaction.\n+slice-xa-disabled: Not all active slices \"{0}\" is XA-complaint and hence store \\\n+\ttransaction will not use a two-phase commit protocol. If persistent unit \\\n+\tis configured for JTA transaction then the slices will participate in \\\n+\tglobal transaction but otherwise the atomic nature of commit across all \\\n+\tslices is not guaranteed.  \n+two-phase: \"{3}\".{0}\"(xid=[{4}]] Connection={1} XAConnection={2} \n+factory-init: Starting OpenJPA Slice {0}\n+config-init: Configuring Slice {0}\n+no-slice-names: Slice identifiers are not explicitly listed via \"{0}\" property.\\\n+\tThe configuration will be scanned to determine slice identifiers.\n+no-slice: No slices are configured or available\n+no-master-slice: No master slice has been configured explicitly in \\\n+\t\"{0}\" property. The first slice \"{1}\" in the list of configured \\\n+\tslices will be used as master. \n+resource-xa-tm-not-2pc: All slices is using XA-complaint driver but the \\\n+\tconfigured \"{0}\" transaction manager is not capable of enlisting XA-aware \\\n+\tresources. See slice.TransactionManager property documentation to  \\\n+\tconfigure XA-aware Transaction Manager capable for two-phase commit.\n+resource-not-xa-tm-2pc: One or more slices is not using XA-complaint driver \\\n+\tbut the configured \"{0}\" transaction manager can only enlist XA-aware \\\n+\tresource. \n+not-open: The underlying result sets are not open.\n+aggregate-unsupported: The query uses unsupported aggregate operation \"{0}\".  "},{"sha":"2c1b80445ced6f821a80925b2cd4bf6f859da2fa","filename":"openjpa-slice/src/main/resources/org/apache/openjpa/slice/localizer.properties","status":"modified","additions":19,"deletions":19,"changes":38,"blob_url":"https://github.com/apache/openjpa/blob/ca334ebb76e966848ff21a5279d5148e2018e0ee/openjpa-slice/src/main/resources/org/apache/openjpa/slice/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/ca334ebb76e966848ff21a5279d5148e2018e0ee/openjpa-slice/src/main/resources/org/apache/openjpa/slice/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-slice/src/main/resources/org/apache/openjpa/slice/localizer.properties?ref=ca334ebb76e966848ff21a5279d5148e2018e0ee","patch":"@@ -1,20 +1,20 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\r\n-# or more contributor license agreements.  See the NOTICE file\r\n-# distributed with this work for additional information\r\n-# regarding copyright ownership.  The ASF licenses this file\r\n-# to you under the Apache License, Version 2.0 (the\r\n-# \"License\"); you may not use this file except in compliance\r\n-# with the License.  You may obtain a copy of the License at\r\n-#\r\n-# http://www.apache.org/licenses/LICENSE-2.0\r\n-#\r\n-# Unless required by applicable law or agreed to in writing,\r\n-# software distributed under the License is distributed on an\r\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n-# KIND, either express or implied.  See the License for the\r\n-# specific language governing permissions and limitations\r\n-# under the License.  \r\n-bad-policy-slice:Distribution policy \"{0}\" has returned invalid slice \\\r\n-\t\"{1}\" for \"{2}\". The valid slices are {3}. This error may happen \\\r\n-\twhen one or more of the originally configured slices are unavailable \\\r\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.  \n+bad-policy-slice:Distribution policy \"{0}\" has returned invalid slice \\\n+\t\"{1}\" for \"{2}\". The valid slices are {3}. This error may happen \\\n+\twhen one or more of the originally configured slices are unavailable \\\n \tand Lenient property is set to true.\n\\ No newline at end of file"},{"sha":"ca73757b76e9b5d5ea4e9bbf714af19050b63fe9","filename":"openjpa-slice/src/main/resources/org/apache/openjpa/slice/transaction/localizer.properties","status":"modified","additions":18,"deletions":18,"changes":36,"blob_url":"https://github.com/apache/openjpa/blob/ca334ebb76e966848ff21a5279d5148e2018e0ee/openjpa-slice/src/main/resources/org/apache/openjpa/slice/transaction/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/ca334ebb76e966848ff21a5279d5148e2018e0ee/openjpa-slice/src/main/resources/org/apache/openjpa/slice/transaction/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-slice/src/main/resources/org/apache/openjpa/slice/transaction/localizer.properties?ref=ca334ebb76e966848ff21a5279d5148e2018e0ee","patch":"@@ -1,19 +1,19 @@\n-# Licensed to the Apache Software Foundation (ASF) under one\r\n-# or more contributor license agreements.  See the NOTICE file\r\n-# distributed with this work for additional information\r\n-# regarding copyright ownership.  The ASF licenses this file\r\n-# to you under the Apache License, Version 2.0 (the\r\n-# \"License\"); you may not use this file except in compliance\r\n-# with the License.  You may obtain a copy of the License at\r\n-#\r\n-# http://www.apache.org/licenses/LICENSE-2.0\r\n-#\r\n-# Unless required by applicable law or agreed to in writing,\r\n-# software distributed under the License is distributed on an\r\n-# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n-# KIND, either express or implied.  See the License for the\r\n-# specific language governing permissions and limitations\r\n-# under the License.  \r\n-no-txn-on-thread: No transaction is associated with current thread \"{0}\"\r\n-prepare-failed: One or more XA-complaint resources have failed to prepare for \\\r\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.  \n+no-txn-on-thread: No transaction is associated with current thread \"{0}\"\n+prepare-failed: One or more XA-complaint resources have failed to prepare for \\\n \tcommit during the first phase of a two-phase commit protocol due to {0}\n\\ No newline at end of file"}]}

