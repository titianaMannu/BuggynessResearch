{"sha":"cb34b9f07fb3ac884c9f6b1166b6770580495bf0","node_id":"MDY6Q29tbWl0MjA2MzY0OmNiMzRiOWYwN2ZiM2FjODg0YzlmNmIxMTY2YjY3NzA1ODA0OTViZjA=","commit":{"author":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-04-21T19:18:14Z"},"committer":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-04-21T19:18:14Z"},"message":"OPENJPA-1638: Add new testcase.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@936453 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"bf178b98f655dce8de03daa4909a1e1348ce9f0d","url":"https://api.github.com/repos/apache/openjpa/git/trees/bf178b98f655dce8de03daa4909a1e1348ce9f0d"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/cb34b9f07fb3ac884c9f6b1166b6770580495bf0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/cb34b9f07fb3ac884c9f6b1166b6770580495bf0","html_url":"https://github.com/apache/openjpa/commit/cb34b9f07fb3ac884c9f6b1166b6770580495bf0","comments_url":"https://api.github.com/repos/apache/openjpa/commits/cb34b9f07fb3ac884c9f6b1166b6770580495bf0/comments","author":null,"committer":null,"parents":[{"sha":"e42f17fa48dd0a55342760ac4961877450ef2b76","url":"https://api.github.com/repos/apache/openjpa/commits/e42f17fa48dd0a55342760ac4961877450ef2b76","html_url":"https://github.com/apache/openjpa/commit/e42f17fa48dd0a55342760ac4961877450ef2b76"}],"stats":{"total":27,"additions":24,"deletions":3},"files":[{"sha":"2603153d028b994089158a9f838605093f17925e","filename":"openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestNamedQueryLockMode.java","status":"modified","additions":24,"deletions":3,"changes":27,"blob_url":"https://github.com/apache/openjpa/blob/cb34b9f07fb3ac884c9f6b1166b6770580495bf0/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestNamedQueryLockMode.java","raw_url":"https://github.com/apache/openjpa/raw/cb34b9f07fb3ac884c9f6b1166b6770580495bf0/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestNamedQueryLockMode.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestNamedQueryLockMode.java?ref=cb34b9f07fb3ac884c9f6b1166b6770580495bf0","patch":"@@ -19,8 +19,13 @@\n package org.apache.openjpa.persistence.lockmgr;\n \n import javax.persistence.EntityManager;\n+import javax.persistence.LockModeType;\n import javax.persistence.Query;\n \n+import org.apache.openjpa.persistence.FetchPlan;\n+import org.apache.openjpa.persistence.OpenJPAEntityManager;\n+import org.apache.openjpa.persistence.OpenJPAEntityManagerSPI;\n+import org.apache.openjpa.persistence.OpenJPAQuery;\n import org.apache.openjpa.persistence.TransactionRequiredException;\n import org.apache.openjpa.persistence.test.AllowFailure;\n import org.apache.openjpa.persistence.test.SQLListenerTestCase;\n@@ -57,8 +62,7 @@ public void testNamedQueryWithLockModeMustExecuteInTransaction() {\n         EntityManager em = emf.createEntityManager();\n         // execute without a transaction\n          try {\n-         em.createNamedQuery(\"findEmployeeByIdWithLock\").setParameter(\"id\",\n-         0).getResultList();\n+         em.createNamedQuery(\"findEmployeeByIdWithLock\").setParameter(\"id\", 0).getResultList();\n          fail(\"Expected \" + TransactionRequiredException.class.getName());\n          } catch (TransactionRequiredException e) {\n          // Expected\n@@ -69,7 +73,24 @@ public void testForUpdateClausePresentInQueryWithDefault() {\n         EntityManager em = emf.createEntityManager();\n         em.getTransaction().begin();\n         assertClausePresentInSQL(\"FOR UPDATE\", em.createNamedQuery(\"findEmployeeById\").setParameter(\"id\", 0));\n-        assertClausePresentInSQL(\"FOR UPDATE\", em.createNamedQuery(\"findEmployeeById\").setParameter(\"id\", 0));\n+        assertClausePresentInSQL(\"FOR UPDATE\", em.createNamedQuery(\"findEmployeeById\").setParameter(\"id\", 0));        \n+        em.getTransaction().commit();\n+    }\n+    \n+    public void testForUpdateClauseAbsentInQueryWithFetchPlanNoneLockMode() {\n+        OpenJPAEntityManagerSPI em = emf.createEntityManager();\n+        em.getTransaction().begin();\n+        \n+        OpenJPAQuery<?> q = em.createNamedQuery(\"findEmployeeById\").setParameter(\"id\", 0); \n+        FetchPlan fp = q.getFetchPlan();\n+        fp.setReadLockMode(LockModeType.NONE);\n+        assertClauseAbsentInSQL(\"FOR UPDATE\", q);\n+        \n+        q = em.createNamedQuery(\"findEmployeeByIdWithNoLock\").setParameter(\"id\", 0); \n+        fp = q.getFetchPlan();\n+        fp.setReadLockMode(LockModeType.NONE);\n+        assertClauseAbsentInSQL(\"FOR UPDATE\", q);\n+        \n         em.getTransaction().commit();\n     }\n "}]}

