{"sha":"cbde4958f3a5f752fad6a76291ac570da5006d75","node_id":"MDY6Q29tbWl0MjA2MzY0OmNiZGU0OTU4ZjNhNWY3NTJmYWQ2YTc2MjkxYWM1NzBkYTUwMDZkNzU=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-11-16T19:45:40Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-11-16T19:45:40Z"},"message":"TeamCity commits left two files behind\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@880929 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"b891bf41bc2a5b1f574ff9e225eb92e58540828f","url":"https://api.github.com/repos/apache/openjpa/git/trees/b891bf41bc2a5b1f574ff9e225eb92e58540828f"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/cbde4958f3a5f752fad6a76291ac570da5006d75","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/cbde4958f3a5f752fad6a76291ac570da5006d75","html_url":"https://github.com/apache/openjpa/commit/cbde4958f3a5f752fad6a76291ac570da5006d75","comments_url":"https://api.github.com/repos/apache/openjpa/commits/cbde4958f3a5f752fad6a76291ac570da5006d75/comments","author":null,"committer":null,"parents":[{"sha":"9c275904f3a7a6f7f5740cf641bf7fcccb710186","url":"https://api.github.com/repos/apache/openjpa/commits/9c275904f3a7a6f7f5740cf641bf7fcccb710186","html_url":"https://github.com/apache/openjpa/commit/9c275904f3a7a6f7f5740cf641bf7fcccb710186"}],"stats":{"total":21,"additions":16,"deletions":5},"files":[{"sha":"5624308e77aa779e3af40b8d47f5ce30b3409958","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingDefaultsImpl.java","status":"modified","additions":15,"deletions":4,"changes":19,"blob_url":"https://github.com/apache/openjpa/blob/cbde4958f3a5f752fad6a76291ac570da5006d75/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingDefaultsImpl.java","raw_url":"https://github.com/apache/openjpa/raw/cbde4958f3a5f752fad6a76291ac570da5006d75/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingDefaultsImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingDefaultsImpl.java?ref=cbde4958f3a5f752fad6a76291ac570da5006d75","patch":"@@ -539,7 +539,9 @@ public void populateDataStoreIdColumns(ClassMapping cls, Table table,\n             else if (_dsIdName != null)\n                 cols[i].setName(_dsIdName + i);\n             correctName(table, cols[i]);\n+            table.addSubColumn(cols[i].getName());\n         }\n+        table.resetSubColumns();\n     }\n \n     /**\n@@ -551,9 +553,7 @@ protected void correctName(Table table, Column col) {\n             String name = col.getName();\n             if (_removeHungarianNotation)\n                 name = removeHungarianNotation(name);\n-            String correctedName = dict.getValidColumnName(name, table);\n-            col.setName(correctedName);\n-            table.addCorrectedColumnName(correctedName, true);\n+            col.setName(dict.getValidColumnName(name, table));\n         }\n     }\n \n@@ -584,7 +584,9 @@ else if (_versName != null) {\n             } else if (_versName != null)\n                 cols[i].setName(_versName + i);\n             correctName(table, cols[i]);\n+            table.addSubColumn(cols[i].getName());\n         }\n+        table.resetSubColumns();\n     }\n \n     public void populateColumns(Discriminator disc, Table table,\n@@ -595,7 +597,9 @@ public void populateColumns(Discriminator disc, Table table,\n             else if (_discName != null)\n                 cols[i].setName(_discName + i);\n             correctName(table, cols[i]);\n+            table.addSubColumn(cols[i].getName());\n         }\n+        table.resetSubColumns();\n     }\n \n     public void populateJoinColumn(ClassMapping cm, Table local, Table foreign,\n@@ -620,8 +624,11 @@ else if (target instanceof Column)\n \n     public void populateColumns(ValueMapping vm, String name, Table table,\n         Column[] cols) {\n-        for (int i = 0; i < cols.length; i++)\n+        for (int i = 0; i < cols.length; i++) {\n             correctName(table, cols[i]);\n+            table.addSubColumn(cols[i].getName());\n+        }\n+        table.resetSubColumns();\n     }\n \n     public boolean populateOrderColumns(FieldMapping fm, Table table,\n@@ -632,7 +639,9 @@ public boolean populateOrderColumns(FieldMapping fm, Table table,\n             else if (_orderName != null)\n                 cols[i].setName(_orderName + i);\n             correctName(table, cols[i]);\n+            table.addSubColumn(cols[i].getName());\n         }\n+        table.resetSubColumns();\n         return _orderLists && (JavaTypes.ARRAY == fm.getTypeCode()\n             || List.class.isAssignableFrom(fm.getType()));\n     }\n@@ -645,7 +654,9 @@ public boolean populateNullIndicatorColumns(ValueMapping vm, String name,\n             else if (_nullIndName != null)\n                 cols[i].setName(_nullIndName + i);\n             correctName(table, cols[i]);\n+            table.addSubColumn(cols[i].getName());\n         }\n+        table.resetSubColumns();\n         return _addNullInd;\n     }\n "},{"sha":"4564c416b3ff51db298e547e9677ce6881f97e13","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaGroup.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/cbde4958f3a5f752fad6a76291ac570da5006d75/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaGroup.java","raw_url":"https://github.com/apache/openjpa/raw/cbde4958f3a5f752fad6a76291ac570da5006d75/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaGroup.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaGroup.java?ref=cbde4958f3a5f752fad6a76291ac570da5006d75","patch":"@@ -144,7 +144,7 @@ public Schema importSchema(Schema schema) {\n                 tab.importIndex(idxs[j]);\n             unqs = tables[i].getUniques();\n             for (int j = 0; j < unqs.length; j++)\n-                tab.importUnique(unqs[j], null);\n+                tab.importUnique(unqs[j]);\n         }\n         return copy;\n     }"}]}

