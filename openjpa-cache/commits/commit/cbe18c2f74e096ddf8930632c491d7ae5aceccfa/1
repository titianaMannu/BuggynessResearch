{"sha":"cbe18c2f74e096ddf8930632c491d7ae5aceccfa","node_id":"MDY6Q29tbWl0MjA2MzY0OmNiZTE4YzJmNzRlMDk2ZGRmODkzMDYzMmM0OTFkN2FlNWFjZWNjZmE=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2009-09-17T17:22:49Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2009-09-17T17:22:49Z"},"message":"OPENJPA-1213 Compatibility tests showing change in query.setParameter() behaviour.  Contributed by Tim McConnell, but with some package name and OpenJPAVersion checks added.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@816289 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"f6cf94c2c0c4cd41f8558893687a45aee518ed0f","url":"https://api.github.com/repos/apache/openjpa/git/trees/f6cf94c2c0c4cd41f8558893687a45aee518ed0f"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/cbe18c2f74e096ddf8930632c491d7ae5aceccfa","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/cbe18c2f74e096ddf8930632c491d7ae5aceccfa","html_url":"https://github.com/apache/openjpa/commit/cbe18c2f74e096ddf8930632c491d7ae5aceccfa","comments_url":"https://api.github.com/repos/apache/openjpa/commits/cbe18c2f74e096ddf8930632c491d7ae5aceccfa/comments","author":null,"committer":null,"parents":[{"sha":"add24283b4e0bf63b3ee0df65490d1e361edc410","url":"https://api.github.com/repos/apache/openjpa/commits/add24283b4e0bf63b3ee0df65490d1e361edc410","html_url":"https://github.com/apache/openjpa/commit/add24283b4e0bf63b3ee0df65490d1e361edc410"}],"stats":{"total":676,"additions":676,"deletions":0},"files":[{"sha":"7ec2585efafb9c2d499d27ce1bbf0d36e095a4d7","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/Department.java","status":"added","additions":84,"deletions":0,"changes":84,"blob_url":"https://github.com/apache/openjpa/blob/cbe18c2f74e096ddf8930632c491d7ae5aceccfa/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/Department.java","raw_url":"https://github.com/apache/openjpa/raw/cbe18c2f74e096ddf8930632c491d7ae5aceccfa/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/Department.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/Department.java?ref=cbe18c2f74e096ddf8930632c491d7ae5aceccfa","patch":"@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.compat;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+import javax.persistence.IdClass;\n+import javax.persistence.OneToMany;\n+import javax.persistence.Table;\n+\n+import org.apache.openjpa.persistence.jdbc.ElementClassCriteria;\n+\n+/**\n+ * Persistent entity with collection whose element type belongs to inheritance\n+ * hierarchy mapped to a SINGLE_TABLE. Hence relationship loading will require\n+ * \n+ */\n+@Entity\n+@Table(name = \"DEPT\")\n+@IdClass(DepartmentId.class)\n+public class Department {\n+\n+    @Id\n+    private String name;\n+\n+    @OneToMany(mappedBy = \"dept\", cascade = CascadeType.PERSIST)\n+    @ElementClassCriteria\n+    private Collection<PartTimeEmployee> partTimeEmployees;\n+\n+    @OneToMany(mappedBy = \"dept\", cascade = CascadeType.PERSIST)\n+    @ElementClassCriteria\n+    private Collection<FullTimeEmployee> fullTimeEmployees;\n+\n+    public Collection<FullTimeEmployee> getFullTimeEmployees() {\n+        return fullTimeEmployees;\n+    }\n+\n+    public void addEmployee(FullTimeEmployee e) {\n+        if (fullTimeEmployees == null)\n+            fullTimeEmployees = new ArrayList<FullTimeEmployee>();\n+        this.fullTimeEmployees.add(e);\n+        e.setDept(this);\n+    }\n+\n+    public Collection<PartTimeEmployee> getPartTimeEmployees() {\n+        return partTimeEmployees;\n+    }\n+\n+    public void addEmployee(PartTimeEmployee e) {\n+        if (partTimeEmployees == null)\n+            partTimeEmployees = new ArrayList<PartTimeEmployee>();\n+        this.partTimeEmployees.add(e);\n+        e.setDept(this);\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+}\n+"},{"sha":"0d5698cebd022b9244032cd5b88e1c6f5f9c533b","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/DepartmentId.java","status":"added","additions":57,"deletions":0,"changes":57,"blob_url":"https://github.com/apache/openjpa/blob/cbe18c2f74e096ddf8930632c491d7ae5aceccfa/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/DepartmentId.java","raw_url":"https://github.com/apache/openjpa/raw/cbe18c2f74e096ddf8930632c491d7ae5aceccfa/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/DepartmentId.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/DepartmentId.java?ref=cbe18c2f74e096ddf8930632c491d7ae5aceccfa","patch":"@@ -0,0 +1,57 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.compat;\n+\n+import java.io.Serializable;\n+\n+public class DepartmentId implements Serializable {\n+    private String name;\n+\n+    public DepartmentId() {\n+        this(null);\n+    }\n+\n+    public DepartmentId(String name) {\n+        this.name = name;\n+    }\n+\n+    public int hashCode() {\n+        return name.hashCode();\n+    }\n+\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+        if (!(obj instanceof DepartmentId)) {\n+            return false;\n+        }\n+\n+        DepartmentId other = (DepartmentId) obj;\n+        if (name == null) {\n+            if (other.name != null) {\n+                return false;\n+            }\n+        } else if (!name.equals(other.name)) {\n+            return false;\n+        }\n+        return true;\n+    }\n+}\n+"},{"sha":"1403e61875bdc9c553f68dccce1f328315d9107d","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/Employee.java","status":"added","additions":60,"deletions":0,"changes":60,"blob_url":"https://github.com/apache/openjpa/blob/cbe18c2f74e096ddf8930632c491d7ae5aceccfa/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/Employee.java","raw_url":"https://github.com/apache/openjpa/raw/cbe18c2f74e096ddf8930632c491d7ae5aceccfa/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/Employee.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/Employee.java?ref=cbe18c2f74e096ddf8930632c491d7ae5aceccfa","patch":"@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.compat;\n+\n+import javax.persistence.DiscriminatorColumn;\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+import javax.persistence.IdClass;\n+import javax.persistence.Inheritance;\n+import javax.persistence.InheritanceType;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.Table;\n+\n+@Entity\n+@Table(name = \"EMP\")\n+@IdClass(EmployeeId.class)\n+@Inheritance(strategy = InheritanceType.SINGLE_TABLE)\n+@DiscriminatorColumn(name = \"TYPE\")\n+public abstract class Employee {\n+\n+    @Id\n+    private String ssn;\n+\n+    @ManyToOne\n+    private Department dept;\n+\n+    public String getSsn() {\n+        return ssn;\n+    }\n+\n+    public void setSsn(String ssn) {\n+        this.ssn = ssn;\n+    }\n+\n+    public Department getDept() {\n+        return dept;\n+    }\n+\n+    public void setDept(Department dept) {\n+        this.dept = dept;\n+    }\n+\n+}\n+"},{"sha":"f6651ccd09d1eee46139b396d3a98786857ebc3d","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/EmployeeId.java","status":"added","additions":57,"deletions":0,"changes":57,"blob_url":"https://github.com/apache/openjpa/blob/cbe18c2f74e096ddf8930632c491d7ae5aceccfa/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/EmployeeId.java","raw_url":"https://github.com/apache/openjpa/raw/cbe18c2f74e096ddf8930632c491d7ae5aceccfa/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/EmployeeId.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/EmployeeId.java?ref=cbe18c2f74e096ddf8930632c491d7ae5aceccfa","patch":"@@ -0,0 +1,57 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.compat;\n+\n+import java.io.Serializable;\n+\n+public class EmployeeId implements Serializable {\n+    \n+    private String ssn;\n+    \n+    public EmployeeId(){\n+    }\n+    public EmployeeId(String ssn){\n+        this.ssn = ssn;\n+    }\n+    public boolean equals (Object other)\n+    {\n+        if (other == this)\n+            return true;\n+        if (!(other instanceof EmployeeId))\n+            return false;\n+\n+        EmployeeId obj = (EmployeeId) other;\n+        if (ssn == null) {\n+            if (obj.ssn != null) {\n+                return false;\n+            }\n+        } else if (!ssn.equals(obj.ssn)) {\n+            return false;\n+        }\n+        \n+        return (true);\n+    }\n+     \n+   \n+    public int hashCode ()\n+    {\n+        return (ssn.hashCode());\n+    }\n+}\n+"},{"sha":"a4e8f484dc171b85b2f9b16c5fa1319a88894b9e","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/FullTimeEmployee.java","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/apache/openjpa/blob/cbe18c2f74e096ddf8930632c491d7ae5aceccfa/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/FullTimeEmployee.java","raw_url":"https://github.com/apache/openjpa/raw/cbe18c2f74e096ddf8930632c491d7ae5aceccfa/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/FullTimeEmployee.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/FullTimeEmployee.java?ref=cbe18c2f74e096ddf8930632c491d7ae5aceccfa","patch":"@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.compat;\n+\n+import javax.persistence.Column;\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+@Entity\n+@DiscriminatorValue(\"F\")\n+public class FullTimeEmployee extends Employee {\n+    @Column(name = \"salary\")\n+    private double salary;\n+\n+    public double getSalary() {\n+        return salary;\n+    }\n+\n+    public void setSalary(double salary) {\n+        this.salary = salary;\n+    }\n+}\n+"},{"sha":"5531c32317f7121f0491622528ff6c65d7c8b1fe","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/Invoice.java","status":"added","additions":79,"deletions":0,"changes":79,"blob_url":"https://github.com/apache/openjpa/blob/cbe18c2f74e096ddf8930632c491d7ae5aceccfa/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/Invoice.java","raw_url":"https://github.com/apache/openjpa/raw/cbe18c2f74e096ddf8930632c491d7ae5aceccfa/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/Invoice.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/Invoice.java?ref=cbe18c2f74e096ddf8930632c491d7ae5aceccfa","patch":"@@ -0,0 +1,79 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.compat;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.persistence.*;\n+\n+@Entity\n+@IdClass(InvoiceKey.class)\n+public class Invoice {\n+\n+    @Id\n+    private int id;\n+    @Id\n+    private String brandName;\n+    \n+    private double price;\n+\n+    @OneToMany(cascade={CascadeType.ALL})\n+    private List<LineItem> lineItems = new ArrayList<LineItem>();\n+\n+    public Invoice() {\n+    }\n+\n+    public Invoice(int id, String brandName, double price) {\n+        this.id = id;\n+        this.brandName = brandName;\n+        this.price = price;\n+    }\n+\n+    public int getId() {\n+        return id;\n+    }\n+\n+    public void setId(int id) {\n+        this.id = id;\n+    }\n+\n+    public String getBrandName() {\n+        return brandName;\n+    }\n+\n+    public void setBrandName(String brandName) {\n+        this.brandName = brandName;\n+    }\n+\n+    public double getPrice() {\n+        return price;\n+    }\n+\n+    public void setPrice(double price) {\n+        this.price = price;\n+    }\n+\n+    public List<LineItem> getLineItems() {\n+        return lineItems;\n+    }\n+\n+    public void setLineItems(List<LineItem> lineItems) {\n+        this.lineItems = lineItems;\n+    }\n+}\n+"},{"sha":"0de0b02c04a10406169b9b34c6c0b47fd7f4035b","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/InvoiceKey.java","status":"added","additions":52,"deletions":0,"changes":52,"blob_url":"https://github.com/apache/openjpa/blob/cbe18c2f74e096ddf8930632c491d7ae5aceccfa/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/InvoiceKey.java","raw_url":"https://github.com/apache/openjpa/raw/cbe18c2f74e096ddf8930632c491d7ae5aceccfa/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/InvoiceKey.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/InvoiceKey.java?ref=cbe18c2f74e096ddf8930632c491d7ae5aceccfa","patch":"@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.compat;\n+\n+public class InvoiceKey {\n+\n+    private int id;\n+    private String brandName;\n+\n+    public InvoiceKey() {\n+    }\n+\n+    public InvoiceKey(int id, String brandName) {\n+        this.id = id;\n+        this.brandName = brandName;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o) {\n+        if (this == o) return true;\n+        if (o == null || getClass() != o.getClass()) return false;\n+\n+        InvoiceKey invoiceKey = (InvoiceKey) o;\n+\n+        if (id != invoiceKey.id) return false;\n+        if (!brandName.equals(invoiceKey.brandName)) return false;\n+\n+        return true;\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        int result = id;\n+        result = 31 * result + brandName.hashCode();\n+        return result;\n+    }\n+}\n+"},{"sha":"c72a48ff54909a3461e47702f4d10a6dabe01fbd","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/LineItem.java","status":"added","additions":63,"deletions":0,"changes":63,"blob_url":"https://github.com/apache/openjpa/blob/cbe18c2f74e096ddf8930632c491d7ae5aceccfa/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/LineItem.java","raw_url":"https://github.com/apache/openjpa/raw/cbe18c2f74e096ddf8930632c491d7ae5aceccfa/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/LineItem.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/LineItem.java?ref=cbe18c2f74e096ddf8930632c491d7ae5aceccfa","patch":"@@ -0,0 +1,63 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.compat;\n+\n+import javax.persistence.*;\n+\n+@Entity\n+public class LineItem {\n+\n+    @Id\n+    private String id;\n+    private int quantity;\n+    \n+    @ManyToOne\n+    private Invoice invoice;\n+\n+    public LineItem() {\n+    }\n+\n+    public LineItem(String id, int quantity) {\n+        this.id = id;\n+        this.quantity = quantity;\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public void setId(String id) {\n+        this.id = id;\n+    }\n+\n+    public int getQuantity() {\n+        return quantity;\n+    }\n+\n+    public void setQuantity(int quantity) {\n+        this.quantity = quantity;\n+    }\n+\n+    public Invoice getInvoice() {\n+        return invoice;\n+    }\n+\n+    public void setInvoice(Invoice invoice) {\n+        this.invoice = invoice;\n+    }\n+}\n+"},{"sha":"373f7b528d2e2a1c32088a74f3ebf277430174a8","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/PartTimeEmployee.java","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/apache/openjpa/blob/cbe18c2f74e096ddf8930632c491d7ae5aceccfa/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/PartTimeEmployee.java","raw_url":"https://github.com/apache/openjpa/raw/cbe18c2f74e096ddf8930632c491d7ae5aceccfa/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/PartTimeEmployee.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/PartTimeEmployee.java?ref=cbe18c2f74e096ddf8930632c491d7ae5aceccfa","patch":"@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.compat;\n+\n+import javax.persistence.Column;\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+@Entity\n+@DiscriminatorValue(\"P\")\n+public class PartTimeEmployee extends Employee {\n+    @Column(name = \"wage\")\n+    private double hourlyWage;\n+\n+    public double getHourlyWage() {\n+        return hourlyWage;\n+    }\n+\n+    public void setHourlyWage(double hourlyWage) {\n+        this.hourlyWage = hourlyWage;\n+    }\n+}\n+"},{"sha":"50eea9941c86dc8c913e63be60840a768694dcc9","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/TestNonPrimaryKeyQueryParameters.java","status":"added","additions":146,"deletions":0,"changes":146,"blob_url":"https://github.com/apache/openjpa/blob/cbe18c2f74e096ddf8930632c491d7ae5aceccfa/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/TestNonPrimaryKeyQueryParameters.java","raw_url":"https://github.com/apache/openjpa/raw/cbe18c2f74e096ddf8930632c491d7ae5aceccfa/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/TestNonPrimaryKeyQueryParameters.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/compat/TestNonPrimaryKeyQueryParameters.java?ref=cbe18c2f74e096ddf8930632c491d7ae5aceccfa","patch":"@@ -0,0 +1,146 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.compat;\n+\n+import java.util.List;\n+\n+import javax.persistence.EntityManager;\n+import javax.persistence.EntityTransaction;\n+import javax.persistence.Query;\n+\n+import org.apache.openjpa.conf.OpenJPAVersion;\n+import org.apache.openjpa.persistence.ArgumentException;\n+import org.apache.openjpa.persistence.test.SQLListenerTestCase;\n+\n+/**\n+ * Tests that find() queries that use non-primary keys can be cached\n+ * \n+ *\n+ * <b>Compatible testcases</b> are used to test various backwards compatibility scenarios between JPA 2.0 and JPA 1.2\n+ * \n+ * <p>The following scenarios are tested:\n+ * <ol>\n+ * <li>query.setParameter()\n+ * </ol>\n+ * <p> \n+ * <b>Note(s):</b>\n+ * <ul>\n+ * <li>The proper openjpa.Compatibility value(s) must be provided in order for the testcase(s) to succeed\n+ * </ul>\n+ */\n+public class TestNonPrimaryKeyQueryParameters extends SQLListenerTestCase {\n+    private static final int FULLTIME_EMPLOYEE_COUNT = 3;\n+    private static final int PARTTIME_EMPLOYEE_COUNT = 2;\n+    private static final int LINEITEM_PER_INVOICE = 1;\n+    private static final String DEPT_NAME = \"ENGINEERING\";\n+\n+    public void setUp() {\n+        super.setUp(CLEAR_TABLES, Department.class, Employee.class,\n+                FullTimeEmployee.class, PartTimeEmployee.class,\n+                Invoice.class, LineItem.class,\n+                \"openjpa.jdbc.QuerySQLCache\", \"true\");\n+        createDepartment(DEPT_NAME);\n+        createInvoice();\n+        sql.clear();\n+    }\n+\n+    public void testSelectQueryWithNoParameter() {\n+        EntityManager em = emf.createEntityManager();\n+\n+        try {\n+            Query query = em.createQuery(\"SELECT d from Department d\");\n+            query.setParameter(1, DEPT_NAME);\n+            Department dept = (Department) query.getSingleResult();\n+\n+            if (((OpenJPAVersion.MAJOR_RELEASE == 1) &&\n+                 (OpenJPAVersion.MINOR_RELEASE >= 3)) ||\n+                (OpenJPAVersion.MAJOR_RELEASE >= 2)) {\n+                // should never get here, as parameter substitution should fail\n+                fail(\"Test should have failed on OpenJPA 1.3 or above.\");\n+            } else {\n+                // OpenJPA 1.2.x and earlier ignored unused parameters\n+                assertEquals(FULLTIME_EMPLOYEE_COUNT, dept.getFullTimeEmployees().size());\n+                assertEquals(PARTTIME_EMPLOYEE_COUNT, dept.getPartTimeEmployees().size());\n+                assertSQL(\".* AND t0.TYPE = .*\");\n+            }\n+        } catch (ArgumentException ae) {\n+            if ((OpenJPAVersion.MAJOR_RELEASE == 1) &&\n+                 (OpenJPAVersion.MINOR_RELEASE >= 3)) {\n+                // expected exception for new behavior\n+            } else {\n+                // unexpected exception\n+                throw ae;\n+            }\n+        } catch (IllegalArgumentException iae) {\n+            if (OpenJPAVersion.MAJOR_RELEASE >= 2) {\n+                // expected exception for new behavior\n+            } else {\n+                // unexpected exception\n+                throw iae;\n+            }\n+        } finally {\n+            em.close();\n+        }\n+    } \n+\n+    private void createDepartment(String deptName) {\n+        if (count(Department.class) > 0)\n+            return;\n+\n+        Department dept = new Department();\n+        dept.setName(deptName);\n+\n+        for (int i = 1; i <= FULLTIME_EMPLOYEE_COUNT; i++) {\n+            FullTimeEmployee e = new FullTimeEmployee();\n+            e.setSsn(\"888-PP-001\" + i);\n+            e.setSalary(100000);\n+            dept.addEmployee(e);\n+        }\n+        for (int i = 1; i <= PARTTIME_EMPLOYEE_COUNT; i++) {\n+            PartTimeEmployee e = new PartTimeEmployee();\n+            e.setSsn(\"999-PP-001\" + i);\n+            e.setHourlyWage(20);\n+            dept.addEmployee(e);\n+        }\n+\n+        EntityManager em = emf.createEntityManager();\n+        em.getTransaction().begin();\n+        em.persist(dept);\n+        em.getTransaction().commit();\n+        em.close();\n+\n+    }\n+    \n+    private void createInvoice() {\n+        EntityManager em = emf.createEntityManager();\n+        EntityTransaction tran = em.getTransaction();\n+        tran.begin();\n+        Invoice invoice = new Invoice(1, \"Red\", 1.30);\n+        for (int i = 1;  i <= LINEITEM_PER_INVOICE; i++) {\n+            LineItem item = new LineItem(String.valueOf(i), 10);\n+            item.setInvoice(invoice);\n+            invoice.getLineItems().add(item);\n+            em.persist(invoice);\n+        }\n+        em.flush();\n+        tran.commit();\n+        em.close();        \n+    }   \n+}\n+"}]}

