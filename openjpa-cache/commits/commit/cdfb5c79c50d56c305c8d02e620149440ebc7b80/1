{"sha":"cdfb5c79c50d56c305c8d02e620149440ebc7b80","node_id":"MDY6Q29tbWl0MjA2MzY0OmNkZmI1Yzc5YzUwZDU2YzMwNWM4ZDAyZTYyMDE0OTQ0MGViYzdiODA=","commit":{"author":{"name":"Milosz Tylenda","email":"mtylenda@apache.org","date":"2011-02-06T19:03:15Z"},"committer":{"name":"Milosz Tylenda","email":"mtylenda@apache.org","date":"2011-02-06T19:03:15Z"},"message":"OPENJPA-1932: Sun -> Oracle, update copyright year, make LOB term consistent in case, fix typos.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1067730 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"05460bf0c8f662a0e019f6bbd5c380590d527694","url":"https://api.github.com/repos/apache/openjpa/git/trees/05460bf0c8f662a0e019f6bbd5c380590d527694"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/cdfb5c79c50d56c305c8d02e620149440ebc7b80","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/cdfb5c79c50d56c305c8d02e620149440ebc7b80","html_url":"https://github.com/apache/openjpa/commit/cdfb5c79c50d56c305c8d02e620149440ebc7b80","comments_url":"https://api.github.com/repos/apache/openjpa/commits/cdfb5c79c50d56c305c8d02e620149440ebc7b80/comments","author":null,"committer":null,"parents":[{"sha":"90a95d4ee9e5f5bd31a2b5a6b45903f5963b30eb","url":"https://api.github.com/repos/apache/openjpa/commits/90a95d4ee9e5f5bd31a2b5a6b45903f5963b30eb","html_url":"https://github.com/apache/openjpa/commit/90a95d4ee9e5f5bd31a2b5a6b45903f5963b30eb"}],"stats":{"total":33,"additions":17,"deletions":16},"files":[{"sha":"df7ee6c4fd57f91d0a32448ba46d4406a1d56476","filename":"openjpa-project/src/doc/manual/jpa_overview_intro.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/cdfb5c79c50d56c305c8d02e620149440ebc7b80/openjpa-project/src/doc/manual/jpa_overview_intro.xml","raw_url":"https://github.com/apache/openjpa/raw/cdfb5c79c50d56c305c8d02e620149440ebc7b80/openjpa-project/src/doc/manual/jpa_overview_intro.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_intro.xml?ref=cdfb5c79c50d56c305c8d02e620149440ebc7b80","patch":"@@ -35,8 +35,8 @@\n             JPA\n         </primary>\n     </indexterm>\n-The Java Persistence API (JPA) is a specification from\n-Sun Microsystems for the persistence of Java objects to any relational\n+The Java Persistence API (JPA) is a specification\n+for the persistence of Java objects to any relational\n datastore. JPA requires J2SE 1.5 (also referred to as \"Java 5\") or\n higher, as it makes heavy use of new Java language features such as annotations\n and generics. This document provides an overview of JPA. Unless"},{"sha":"ef84bf291e4a7d5767ecd7750f72eb706a5959c7","filename":"openjpa-project/src/doc/manual/jpa_overview_query.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/cdfb5c79c50d56c305c8d02e620149440ebc7b80/openjpa-project/src/doc/manual/jpa_overview_query.xml","raw_url":"https://github.com/apache/openjpa/raw/cdfb5c79c50d56c305c8d02e620149440ebc7b80/openjpa-project/src/doc/manual/jpa_overview_query.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_query.xml?ref=cdfb5c79c50d56c305c8d02e620149440ebc7b80","patch":"@@ -2531,7 +2531,7 @@ HAVING</literal> clause.\n             </para>\n             <para>\n State-fields that are mapped in serialized form or as\n-lobs may not be portably used in conditional expressions. <note><para> The\n+LOBs may not be portably used in conditional expressions. <note><para> The\n implementation is not expected to perform such query operations involving such\n fields in memory rather than in the database.\n                     </para>\n@@ -3614,7 +3614,7 @@ the groups, null values are treated as the same for grouping purposes.\n              <para>\n Grouping\n by an entity is permitted. In this case, the entity must contain no serialized\n-state fields or lob-valued state fields that are eagerly fetched.\n+state fields or LOB-valued state fields that are eagerly fetched.\n              </para>\n              <para>\n Grouping by embeddables is not supported."},{"sha":"1dcd6474c4f8c5f18d84be280af4727df672006e","filename":"openjpa-project/src/doc/manual/openjpa_intro.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/cdfb5c79c50d56c305c8d02e620149440ebc7b80/openjpa-project/src/doc/manual/openjpa_intro.xml","raw_url":"https://github.com/apache/openjpa/raw/cdfb5c79c50d56c305c8d02e620149440ebc7b80/openjpa-project/src/doc/manual/openjpa_intro.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/openjpa_intro.xml?ref=cdfb5c79c50d56c305c8d02e620149440ebc7b80","patch":"@@ -27,7 +27,7 @@\n         </primary>\n     </indexterm>\n     <para>\n-OpenJPA is Apache's implementation of Sun's Java Persistence 2.0 API \n+OpenJPA is Apache's implementation of Java Persistence 2.0 API \n (JSR-317 JPA 2.0) specification for the transparent persistence of Java objects.\n This document provides an overview of the JPA standard and technical\n details on the use of OpenJPA."},{"sha":"ef717d3a024f0c3f5aff3e9b94f82ac62078c56e","filename":"openjpa-project/src/doc/manual/openjpa_legal.xml","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/cdfb5c79c50d56c305c8d02e620149440ebc7b80/openjpa-project/src/doc/manual/openjpa_legal.xml","raw_url":"https://github.com/apache/openjpa/raw/cdfb5c79c50d56c305c8d02e620149440ebc7b80/openjpa-project/src/doc/manual/openjpa_legal.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/openjpa_legal.xml?ref=cdfb5c79c50d56c305c8d02e620149440ebc7b80","patch":"@@ -93,12 +93,10 @@ The openjpa-all aggregate JAR includes software developed by the:\n         <section id=\"openjpa_legal_copyright_apache\">\n             <title>Apache</title>\n             <para>\n-Copyright (C) 2006,2010 The Apache Software Foundation.\n+Copyright (C) 2006,2011 The Apache Software Foundation.\n             </para>\n             <para>\n Apache, OpenJPA and the Apache feather logo are trademarks of Apache Software Foundation.\n-Java and all Java-based trademarks and logos are trademarks of Sun Microsystems, Inc. in the United States, other countries, or both.\n-Other names may be trademarks of their respective owners.\n             </para>\n         </section>\n         <section id=\"openjpa_legal_copyright_serp\">\n@@ -139,6 +137,10 @@ OpenJPA includes software written by Miroslav Nachev.\n             <para>\n OpenJPA uses test code written by Charles Tillman.\n             </para>\n+            <para>\n+Oracle and Java are registered trademarks of Oracle and/or its affiliates.\n+Other names may be trademarks of their respective owners.\n+            </para>\n         </section>\n     </section>\n </chapter>"},{"sha":"989f88c02c78af7092759268a81cdd86ac43623a","filename":"openjpa-project/src/doc/manual/ref_guide_optimization.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/cdfb5c79c50d56c305c8d02e620149440ebc7b80/openjpa-project/src/doc/manual/ref_guide_optimization.xml","raw_url":"https://github.com/apache/openjpa/raw/cdfb5c79c50d56c305c8d02e620149440ebc7b80/openjpa-project/src/doc/manual/ref_guide_optimization.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_optimization.xml?ref=cdfb5c79c50d56c305c8d02e620149440ebc7b80","patch":"@@ -123,7 +123,7 @@ or deletes.\n Manipulating various parameters of the Java Virtual Machine (such as hotspot \n compilation modes and the maximum memory) can result in performance \n improvements. For more details about optimizing the JVM execution environment, \n-please see <ulink url=\"http://java.sun.com/docs/hotspot/HotSpotFAQ.html\"/>.\n+please see <ulink url=\"http://www.oracle.com/technetwork/java/hotspotfaq-138619.html\"/>.\n                     </entry>\n                 </row>\n                 <row>"},{"sha":"ce7b7bd43d90cade9c4b32e91c8bdfcfe12f3331","filename":"openjpa-project/src/doc/manual/ref_guide_pc.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/cdfb5c79c50d56c305c8d02e620149440ebc7b80/openjpa-project/src/doc/manual/ref_guide_pc.xml","raw_url":"https://github.com/apache/openjpa/raw/cdfb5c79c50d56c305c8d02e620149440ebc7b80/openjpa-project/src/doc/manual/ref_guide_pc.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_pc.xml?ref=cdfb5c79c50d56c305c8d02e620149440ebc7b80","patch":"@@ -386,7 +386,7 @@ java -javaagent:/home/dev/openjpa/lib/openjpa.jar=addDefaultConstructor=false co\n \t</title>          \n \t<para>\n \t\tIf a javaagent is not provided via the command line and \n-\t\tOpenJPA is running on the Sun 1.6 SDK or IBM 1.6 JDK (SR8+), OpenJPA\n+\t\tOpenJPA is running on the Oracle 1.6 SDK or IBM 1.6 JDK (SR8+), OpenJPA\n \t\twill attempt to dynamically load the Enhancer that was \n \t\tmentioned in the previous section. This support is \n \t\tprovided as an ease of use feature and it is not recommended"},{"sha":"974efe66e3e9e9b5b135a2ee07987cc3b9620f1f","filename":"openjpa-project/src/doc/manual/ref_guide_slice.xml","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/cdfb5c79c50d56c305c8d02e620149440ebc7b80/openjpa-project/src/doc/manual/ref_guide_slice.xml","raw_url":"https://github.com/apache/openjpa/raw/cdfb5c79c50d56c305c8d02e620149440ebc7b80/openjpa-project/src/doc/manual/ref_guide_slice.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_slice.xml?ref=cdfb5c79c50d56c305c8d02e620149440ebc7b80","patch":"@@ -136,11 +136,11 @@\n             <para>\n             To confine queries to a subset of slices via setting query hints can be considered\n             intrusive to existing application. The alternative means of targeting queries is to \n-            a configure a <emphasis>Query Target Policy</emphasis>. This policy is configured \n+            configure a <emphasis>Query Target Policy</emphasis>. This policy is configured \n             via plug-in property <classname>openjpa.slice.QueryTargetPolicy</classname>. The\n-            plug-in property is fully-qualified class name an implementation\n+            plug-in property is fully-qualified class name of an implementation\n             for <classname>org.apache.openjpa.slice.QueryTargetPolicy</classname> interface.\n-            This interface contract allows an user application to target a query select a subset \n+            This interface contract allows a user application to target a query to a subset \n             of slices based on the query and its bound parameters. The query target policy is consulted\n             only when no explicit target hint is set on the query. By default, the policy \n             executes a query on all available slices.  \n@@ -152,7 +152,6 @@\n             by primary key. This finder target policy is consulted\n             only when no explicit target hint is set on the current fetch plan. By default, the policy \n             executes a query on all available slices to find an instance by its primary key.    \n-            To confine queries to a subset of slices via setting query hints can be considered\n             </para>\n          </section>\n \t\t"},{"sha":"00c9aa4baf52164561c455ded2d3e8f5972e40d7","filename":"openjpa-project/src/doc/manual/supported_databases.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/cdfb5c79c50d56c305c8d02e620149440ebc7b80/openjpa-project/src/doc/manual/supported_databases.xml","raw_url":"https://github.com/apache/openjpa/raw/cdfb5c79c50d56c305c8d02e620149440ebc7b80/openjpa-project/src/doc/manual/supported_databases.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/supported_databases.xml?ref=cdfb5c79c50d56c305c8d02e620149440ebc7b80","patch":"@@ -715,8 +715,8 @@ See DB2 for z/OS documentation for additional information.\n                 <listitem>\n                     <para>\n When using LOBs with persistent attributes of a streaming data type (e.g. \n-<literal>java.io.InputStream</literal>) in the case of very large lob, DB2 JCC \n-driver will automatically use progressive streaming to retrieve the Lob data. \n+<literal>java.io.InputStream</literal>) in the case of very large LOB, DB2 JCC \n+driver will automatically use progressive streaming to retrieve the LOB data. \n With progressiveStreaming, the inputStream retrieved must be fully materialized\n before the next iteration of call to rs.next(). By default\n this will result in a LobClosedException when OpenJPA processes the InputStream."}]}

