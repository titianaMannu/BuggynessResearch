{"sha":"cecd73b6ee1060d4d869349e527bb392d2599bf9","node_id":"MDY6Q29tbWl0MjA2MzY0OmNlY2Q3M2I2ZWUxMDYwZDRkODY5MzQ5ZTUyN2JiMzkyZDI1OTliZjk=","commit":{"author":{"name":"Kevin W. Sutter","email":"kwsutter@apache.org","date":"2012-02-21T16:29:56Z"},"committer":{"name":"Kevin W. Sutter","email":"kwsutter@apache.org","date":"2012-02-21T16:29:56Z"},"message":"OPENJPA-2123.  Only format parameters for printing if logging is turned on.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1291899 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"e9f0395db2d2ec9415b03c2fac7f07809b520711","url":"https://api.github.com/repos/apache/openjpa/git/trees/e9f0395db2d2ec9415b03c2fac7f07809b520711"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/cecd73b6ee1060d4d869349e527bb392d2599bf9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/cecd73b6ee1060d4d869349e527bb392d2599bf9","html_url":"https://github.com/apache/openjpa/commit/cecd73b6ee1060d4d869349e527bb392d2599bf9","comments_url":"https://api.github.com/repos/apache/openjpa/commits/cecd73b6ee1060d4d869349e527bb392d2599bf9/comments","author":null,"committer":null,"parents":[{"sha":"408d8b4463214053557a0722bf9d976feb6e60a2","url":"https://api.github.com/repos/apache/openjpa/commits/408d8b4463214053557a0722bf9d976feb6e60a2","html_url":"https://github.com/apache/openjpa/commit/408d8b4463214053557a0722bf9d976feb6e60a2"}],"stats":{"total":32,"additions":2,"deletions":30},"files":[{"sha":"1c7e78d745459ed78b96764bb7db5f7ddf4c94ad","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator.java","status":"modified","additions":2,"deletions":30,"changes":32,"blob_url":"https://github.com/apache/openjpa/blob/cecd73b6ee1060d4d869349e527bb392d2599bf9/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator.java","raw_url":"https://github.com/apache/openjpa/raw/cecd73b6ee1060d4d869349e527bb392d2599bf9/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator.java?ref=cecd73b6ee1060d4d869349e527bb392d2599bf9","patch":"@@ -20,10 +20,8 @@\n \n import java.io.InputStream;\n import java.io.Reader;\n-import java.lang.reflect.Constructor;\n import java.math.BigDecimal;\n import java.net.URL;\n-import java.security.AccessController;\n import java.sql.Array;\n import java.sql.BatchUpdateException;\n import java.sql.Blob;\n@@ -48,18 +46,7 @@\n import java.util.Iterator;\n import java.util.List;\n \n-import org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.\n-        LoggingCallableStatement;\n-import org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.\n-        LoggingDatabaseMetaData;\n-import org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.\n-        LoggingPreparedStatement;\n-import org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.\n-        LoggingResultSet;\n-import org.apache.openjpa.lib.jdbc.LoggingConnectionDecorator.LoggingConnection.\n-        LoggingStatement;\n import org.apache.openjpa.lib.log.Log;\n-import org.apache.openjpa.lib.util.ConcreteClassGenerator;\n import org.apache.openjpa.lib.util.J2DoPrivHelper;\n \n /**\n@@ -98,7 +85,6 @@\n     private int _prettyPrintLineLength = 60;\n     private int _warningAction = WARN_IGNORE;\n     private SQLWarningHandler _warningHandler;\n-    private boolean _trackParameters = true;\n     private boolean _printParameters = false;\n \n     /**\n@@ -143,20 +129,6 @@ public int getPrettyPrintLineLength() {\n         return _prettyPrintLineLength;\n     }\n \n-    /**\n-     * <p>Whether to track parameters for the purpose of reporting exceptions.</p>\n-     */\n-    public void setTrackParameters(boolean trackParameters) {\n-        _trackParameters = trackParameters;\n-    }\n-\n-    /**\n-     * Whether to track parameters for the purpose of reporting exceptions.\n-     */\n-    public boolean getTrackParameters() {\n-        return _trackParameters;\n-    }\n-\n     /**\n      * <p>\n      * Whether parameter values will be printed in exception messages or in trace. This is different from\n@@ -1608,7 +1580,7 @@ private void clearLogParameters(boolean batch) {\n             }\n \n             private boolean shouldTrackParameters() {\n-                return _trackParameters || _logs.isSQLEnabled();\n+                return _printParameters || _logs.isSQLEnabled();\n             }\n \n             private void setLogParameter(int index, boolean val) {\n@@ -2324,7 +2296,7 @@ protected void clearLogParameters(boolean batch) {\n             }\n \n             private boolean shouldTrackParameters() {\n-                return _trackParameters || _logs.isSQLEnabled();\n+                return _printParameters || _logs.isSQLEnabled();\n             }\n \n             private void setLogParameter(int index, boolean val) {"}]}

