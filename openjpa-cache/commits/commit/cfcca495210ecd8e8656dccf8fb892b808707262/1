{"sha":"cfcca495210ecd8e8656dccf8fb892b808707262","node_id":"MDY6Q29tbWl0MjA2MzY0OmNmY2NhNDk1MjEwZWNkOGU4NjU2ZGNjZjhmYjg5MmI4MDg3MDcyNjI=","commit":{"author":{"name":"Stephen Kim","email":"skim@apache.org","date":"2006-09-13T22:45:21Z"},"committer":{"name":"Stephen Kim","email":"skim@apache.org","date":"2006-09-13T22:45:21Z"},"message":"fix for re-proxying of hashed types during commit / rollback\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@443153 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a9576dd92beb66894be736c015d7ed68c0db7d7b","url":"https://api.github.com/repos/apache/openjpa/git/trees/a9576dd92beb66894be736c015d7ed68c0db7d7b"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/cfcca495210ecd8e8656dccf8fb892b808707262","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/cfcca495210ecd8e8656dccf8fb892b808707262","html_url":"https://github.com/apache/openjpa/commit/cfcca495210ecd8e8656dccf8fb892b808707262","comments_url":"https://api.github.com/repos/apache/openjpa/commits/cfcca495210ecd8e8656dccf8fb892b808707262/comments","author":null,"committer":null,"parents":[{"sha":"9650a1a20b7d2e49ae1c391168488d13114483c3","url":"https://api.github.com/repos/apache/openjpa/commits/9650a1a20b7d2e49ae1c391168488d13114483c3","html_url":"https://github.com/apache/openjpa/commit/9650a1a20b7d2e49ae1c391168488d13114483c3"}],"stats":{"total":19,"additions":18,"deletions":1},"files":[{"sha":"0397ab97e3ec35ea76200d0b9a2a44664926e26e","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","status":"modified","additions":16,"deletions":0,"changes":16,"blob_url":"https://github.com/apache/openjpa/blob/cfcca495210ecd8e8656dccf8fb892b808707262/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/cfcca495210ecd8e8656dccf8fb892b808707262/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java?ref=cfcca495210ecd8e8656dccf8fb892b808707262","patch":"@@ -135,6 +135,7 @@\n     private static final int FLAG_FLUSH_REQUIRED = 2 << 8;\n     private static final int FLAG_REMOTE_LISTENER = 2 << 9;\n     private static final int FLAG_RETAINED_CONN = 2 << 10;\n+    private static final int FLAG_TRANS_ENDING = 2 << 11;\n \n     private static final Localizer _loc =\n         Localizer.forPackage(BrokerImpl.class);\n@@ -1640,6 +1641,19 @@ public boolean isStoreActive() {\n         }\n     }\n \n+    /**\n+     * Return whether the given transaction is ending, i.e. in the 2nd phase\n+     * of a commit or rollback\n+     */\n+    boolean isTransactionEnding() {\n+        beginOperation(true);\n+        try {\n+            return (_flags & FLAG_TRANS_ENDING) != 0;\n+        } finally {\n+            endOperation();\n+        }\n+    }\n+\n     public boolean beginOperation(boolean syncTrans) {\n         lock();\n         try {\n@@ -1722,6 +1736,7 @@ public void afterCompletion(int status) {\n         try {\n             assertActiveTransaction();\n \n+            _flags |= FLAG_TRANS_ENDING;\n             endTransaction(status);\n             if (_sync != null)\n                 _sync.afterCompletion(status);\n@@ -1746,6 +1761,7 @@ public void afterCompletion(int status) {\n         } finally {\n             _flags &= ~FLAG_ACTIVE;\n             _flags &= ~FLAG_FLUSHED;\n+            _flags &= ~FLAG_TRANS_ENDING;\n \n             if (_transEventManager != null \n                 && _transEventManager.hasEndListeners()) {"},{"sha":"9617c98ca677599c006231202a6f9475cde8bcf2","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/cfcca495210ecd8e8656dccf8fb892b808707262/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/cfcca495210ecd8e8656dccf8fb892b808707262/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java?ref=cfcca495210ecd8e8656dccf8fb892b808707262","patch":"@@ -824,7 +824,8 @@ void beforeRead(int field) {\n             return;\n \n         boolean active = _broker.isActive();\n-        if (active) {\n+        boolean ending = _broker.isTransactionEnding();\n+        if (active && !ending) {\n             if (_broker.getOptimistic())\n                 setPCState(_state.beforeOptimisticRead(this, field));\n             else"}]}

