{"sha":"d02f0688aece4914a1180be2d659f8ccb821f715","node_id":"MDY6Q29tbWl0MjA2MzY0OmQwMmYwNjg4YWVjZTQ5MTRhMTE4MGJlMmQ2NTlmOGNjYjgyMWY3MTU=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2009-08-28T19:12:35Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2009-08-28T19:12:35Z"},"message":"OPENJPA-1271:\nMissed a class on previous commit\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@808991 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"b45d537e86038cbbe10bd1820b2ae75f8d120ce4","url":"https://api.github.com/repos/apache/openjpa/git/trees/b45d537e86038cbbe10bd1820b2ae75f8d120ce4"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/d02f0688aece4914a1180be2d659f8ccb821f715","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/d02f0688aece4914a1180be2d659f8ccb821f715","html_url":"https://github.com/apache/openjpa/commit/d02f0688aece4914a1180be2d659f8ccb821f715","comments_url":"https://api.github.com/repos/apache/openjpa/commits/d02f0688aece4914a1180be2d659f8ccb821f715/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"991cdcae7da3904a932bf9c5c453a6de0685e8c9","url":"https://api.github.com/repos/apache/openjpa/commits/991cdcae7da3904a932bf9c5c453a6de0685e8c9","html_url":"https://github.com/apache/openjpa/commit/991cdcae7da3904a932bf9c5c453a6de0685e8c9"}],"stats":{"total":78,"additions":78,"deletions":0},"files":[{"sha":"5ba72865e5a998029b993878a2328547c3e13dce","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/cache/jpa/AbstractCacheTestCase.java","status":"added","additions":78,"deletions":0,"changes":78,"blob_url":"https://github.com/apache/openjpa/blob/d02f0688aece4914a1180be2d659f8ccb821f715/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/cache/jpa/AbstractCacheTestCase.java","raw_url":"https://github.com/apache/openjpa/raw/d02f0688aece4914a1180be2d659f8ccb821f715/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/cache/jpa/AbstractCacheTestCase.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/cache/jpa/AbstractCacheTestCase.java?ref=d02f0688aece4914a1180be2d659f8ccb821f715","patch":"@@ -0,0 +1,78 @@\n+package org.apache.openjpa.persistence.cache.jpa;\n+\n+import java.lang.reflect.Modifier;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.persistence.EntityManager;\n+\n+import org.apache.openjpa.lib.jdbc.AbstractJDBCListener;\n+import org.apache.openjpa.lib.jdbc.JDBCEvent;\n+import org.apache.openjpa.lib.jdbc.JDBCListener;\n+import org.apache.openjpa.persistence.OpenJPAEntityManagerFactorySPI;\n+import org.apache.openjpa.persistence.OpenJPAPersistence;\n+import org.apache.openjpa.persistence.cache.jpa.featureSelection.CacheEntity;\n+import org.apache.openjpa.persistence.cache.jpa.featureSelection.CacheableEntity;\n+import org.apache.openjpa.persistence.cache.jpa.featureSelection.NegatedCachableEntity;\n+import org.apache.openjpa.persistence.cache.jpa.featureSelection.NegatedUncacheableEntity;\n+import org.apache.openjpa.persistence.cache.jpa.featureSelection.UncacheableEntity;\n+import org.apache.openjpa.persistence.cache.jpa.featureSelection.UnspecifiedEntity;\n+import org.apache.openjpa.persistence.cache.jpa.featureSelection.XmlCacheableEntity;\n+import org.apache.openjpa.persistence.cache.jpa.featureSelection.XmlUncacheableEntity;\n+import org.apache.openjpa.persistence.test.AbstractPersistenceTestCase;\n+import org.apache.openjpa.persistence.test.SQLListenerTestCase.Listener;\n+\n+public abstract class AbstractCacheTestCase extends AbstractPersistenceTestCase {\n+    protected final String RETRIEVE_MODE_PROP = \"javax.persistence.cache.retrieveMode\";\n+    protected final String STORE_MODE_PROP = \"javax.persistence.cache.storeMode\";\n+    \n+    abstract OpenJPAEntityManagerFactorySPI getEntityManagerFactory();\n+    abstract JDBCListener getListener();\n+\n+    protected static Class<?>[] persistentTypes =\n+        { CacheableEntity.class, UncacheableEntity.class, UnspecifiedEntity.class, NegatedCachableEntity.class,\n+            NegatedUncacheableEntity.class, XmlCacheableEntity.class, XmlUncacheableEntity.class };\n+\n+    public void populate() throws IllegalAccessException, InstantiationException {\n+        EntityManager em = getEntityManagerFactory().createEntityManager();\n+        em.getTransaction().begin();\n+        for (Class<?> clss : persistentTypes) {\n+            if (!Modifier.isAbstract(clss.getModifiers())) {\n+                CacheEntity ce = (CacheEntity) clss.newInstance();\n+                ce.setId(1);\n+                em.persist(ce);\n+            }\n+        }\n+        em.getTransaction().commit();\n+        em.close();\n+    }\n+\n+    public OpenJPAEntityManagerFactorySPI createEntityManagerFactory(String puName) {\n+        OpenJPAEntityManagerFactorySPI emf =\n+            (OpenJPAEntityManagerFactorySPI) OpenJPAPersistence.createEntityManagerFactory(puName,\n+                \"META-INF/caching-persistence.xml\", getPropertiesMap(\"openjpa.DataCache\", \"true\",\n+                    \"openjpa.RemoteCommitProvider\", \"sjvm\", persistentTypes, \n+                    \"openjpa.jdbc.JDBCListeners\", new JDBCListener [] { getListener() } ));\n+        return emf;\n+    }\n+\n+    @Override\n+    public void setUp() throws Exception {\n+        super.setUp();\n+        cleanDatabase();\n+        populate();\n+    }\n+    \n+    public void cleanDatabase() throws Exception {\n+        EntityManager em = getEntityManagerFactory().createEntityManager();\n+        em.getTransaction().begin();\n+        for (Class<?> clss : persistentTypes) {\n+            if (!Modifier.isAbstract(clss.getModifiers())) {\n+                em.createQuery(\"Delete from \" + clss.getSimpleName()).executeUpdate();\n+            }\n+        }\n+        em.getTransaction().commit();\n+        em.close();\n+    }\n+\n+}"}]}

