{"sha":"d1a165bc613d54bd9ff9baa2ca0fbca8305b70f0","node_id":"MDY6Q29tbWl0MjA2MzY0OmQxYTE2NWJjNjEzZDU0YmQ5ZmY5YmFhMmNhMGZiY2E4MzA1YjcwZjA=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2008-06-19T00:40:17Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2008-06-19T00:40:17Z"},"message":"OPENJPA-112,OPENJPA-111: Early check for 1-based positional parameter and no named parameter in native query. Also more specific error message\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@669341 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"76d2074fd949bfc38a1dbe03b9a5d73abd4ef19c","url":"https://api.github.com/repos/apache/openjpa/git/trees/76d2074fd949bfc38a1dbe03b9a5d73abd4ef19c"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/d1a165bc613d54bd9ff9baa2ca0fbca8305b70f0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/d1a165bc613d54bd9ff9baa2ca0fbca8305b70f0","html_url":"https://github.com/apache/openjpa/commit/d1a165bc613d54bd9ff9baa2ca0fbca8305b70f0","comments_url":"https://api.github.com/repos/apache/openjpa/commits/d1a165bc613d54bd9ff9baa2ca0fbca8305b70f0/comments","author":null,"committer":null,"parents":[{"sha":"f62ea1ab0d2922377368ca5d31bbcbea57ecbc3c","url":"https://api.github.com/repos/apache/openjpa/commits/f62ea1ab0d2922377368ca5d31bbcbea57ecbc3c","html_url":"https://github.com/apache/openjpa/commit/f62ea1ab0d2922377368ca5d31bbcbea57ecbc3c"}],"stats":{"total":103,"additions":103,"deletions":0},"files":[{"sha":"10b7319109411f9b23ef0fe7178fe9afe3084011","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestNativeQueryParameterBinding.java","status":"added","additions":86,"deletions":0,"changes":86,"blob_url":"https://github.com/apache/openjpa/blob/d1a165bc613d54bd9ff9baa2ca0fbca8305b70f0/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestNativeQueryParameterBinding.java","raw_url":"https://github.com/apache/openjpa/raw/d1a165bc613d54bd9ff9baa2ca0fbca8305b70f0/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestNativeQueryParameterBinding.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestNativeQueryParameterBinding.java?ref=d1a165bc613d54bd9ff9baa2ca0fbca8305b70f0","patch":"@@ -0,0 +1,86 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.openjpa.persistence.jdbc.query;\r\n+\r\n+import javax.persistence.EntityManager;\r\n+import javax.persistence.Query;\r\n+\r\n+import org.apache.openjpa.persistence.jdbc.query.domain.Applicant;\r\n+import org.apache.openjpa.persistence.jdbc.query.domain.Application;\r\n+import org.apache.openjpa.persistence.test.SingleEMFTestCase;\r\n+\r\n+/**\r\n+ * Tests that Native queries use only 1-based positional parameters and \r\n+ * disallows named parameters.\r\n+ * \r\n+ * Originally reported in \r\n+ * <A HRE=\"http://issues.apache.org/jira/browse/OPENJPA-112>OPENJPA-112</A>\r\n+ *  \r\n+ * @author Pinaki Poddar\r\n+ *\r\n+ */\r\n+public class TestNativeQueryParameterBinding extends SingleEMFTestCase {\r\n+\tprivate static Class NO_ERROR = null;\r\n+\t\r\n+\t@Override\r\n+\tpublic void setUp() throws Exception {\r\n+\t\tsuper.setUp(CLEAR_TABLES);\r\n+\t}\r\n+\t\r\n+\tpublic void testNamedParameterInNativeQueryIsNotValid() {\r\n+\t\tString sql = \"SELECT * FROM Application WHERE id=:id\";\r\n+\t\tverifyParams(sql, IllegalArgumentException.class, \"id\", 10);\r\n+\t}\r\n+\t\r\n+\tpublic void testPositionalParameterInNativeQueryIsValid() {\r\n+\t\tString sql = \"SELECT * FROM Application WHERE id=?1\";\r\n+\t\tverifyParams(sql, NO_ERROR, 1, 10);\r\n+\t}\r\n+\t\r\n+\tpublic void testZeroPositionalParameterInNativeQueryIsNotValid() {\r\n+\t\tString sql = \"SELECT * FROM Application WHERE id=?1\";\r\n+\t\tverifyParams(sql, IllegalArgumentException.class, 0, 10);\r\n+\t}\r\n+\t\r\n+\tvoid verifyParams(String jpql, Class error, Object...params) {\r\n+\t\tEntityManager em = emf.createEntityManager();\r\n+\t\tem.getTransaction().begin();\r\n+\t\tQuery query = em.createNativeQuery(jpql);\r\n+\t\tfor (int i=0; params != null && i<params.length; i=+2) {\r\n+\t\t\ttry {\r\n+\t\t\t\tif (params[i] instanceof Number) {\r\n+\t\t\t\t\tquery.setParameter(((Number)params[i]).intValue(), params[i+1]);\r\n+\t\t\t\t} else { \r\n+\t\t\t\t\tquery.setParameter(params[i].toString(), params[i+1]);\r\n+\t\t\t\t}\r\n+\t\t\t\tif (error != null)\r\n+\t\t\t\t\tfail(\"Expected \" + error.getName());\r\n+\t\t\t} catch (Exception e) {\r\n+\t\t\t\tif (error.isAssignableFrom(e.getClass())) {\r\n+\t\t\t\t\tSystem.err.println(e.getMessage());\r\n+\t\t\t\t} else {\r\n+\t\t\t\t\te.printStackTrace();\r\n+\t\t\t\t\tfail();\r\n+\t\t\t\t}\r\n+\t\t\t} \r\n+\t\t\t\t\r\n+\t\t}\r\n+\t\tem.getTransaction().commit();\r\n+\t}\r\n+}\r"},{"sha":"f2209f189675c15b5f842a7c5a78d6cf0def02f4","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryImpl.java","status":"modified","additions":13,"deletions":0,"changes":13,"blob_url":"https://github.com/apache/openjpa/blob/d1a165bc613d54bd9ff9baa2ca0fbca8305b70f0/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryImpl.java","raw_url":"https://github.com/apache/openjpa/raw/d1a165bc613d54bd9ff9baa2ca0fbca8305b70f0/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryImpl.java?ref=d1a165bc613d54bd9ff9baa2ca0fbca8305b70f0","patch":"@@ -39,6 +39,7 @@\n import org.apache.openjpa.kernel.DelegatingQuery;\n import org.apache.openjpa.kernel.DelegatingResultList;\n import org.apache.openjpa.kernel.Filters;\n+import org.apache.openjpa.kernel.QueryLanguages;\n import org.apache.openjpa.kernel.QueryOperations;\n import org.apache.openjpa.kernel.exps.AggregateListener;\n import org.apache.openjpa.kernel.exps.FilterListener;\n@@ -445,6 +446,10 @@ public OpenJPAQuery setParameter(int position, Object value) {\n         _em.assertNotCloseInvoked();\n         _query.lock();\n         try {\n+        \tif (isNative() && position < 1) {\n+        \t\tthrow new IllegalArgumentException(_loc.get(\"bad-pos-params\", \n+        \t\t      position, _query.getQueryString()).toString());\n+        \t}\n             // not allowed to mix positional and named parameters (EDR2 3.6.4)\n             if (_named != null)\n                 throw new InvalidStateException(_loc.get\n@@ -486,6 +491,10 @@ public OpenJPAQuery setParameter(String name, Object value) {\n         _em.assertNotCloseInvoked();\n         _query.lock();\n         try {\n+        \tif (isNative()) {\n+        \t\tthrow new IllegalArgumentException(_loc.get(\"no-named-params\", \n+        \t\t    name, _query.getQueryString()).toString());\n+        \t}\n             // not allowed to mix positional and named parameters (EDR2 3.6.4)\n             if (_positional != null)\n                 throw new InvalidStateException(_loc.get\n@@ -500,6 +509,10 @@ public OpenJPAQuery setParameter(String name, Object value) {\n             _query.unlock();\n         }\n     }\n+    \n+    public boolean isNative() {\n+    \treturn QueryLanguages.LANG_SQL.equals(getLanguage());\n+    }\n \n     public boolean hasPositionalParameters() {\n         return _positional != null;"},{"sha":"a4d72095cbdd9f2e2010ca61f4403f95f778b185","filename":"openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/d1a165bc613d54bd9ff9baa2ca0fbca8305b70f0/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/d1a165bc613d54bd9ff9baa2ca0fbca8305b70f0/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties?ref=d1a165bc613d54bd9ff9baa2ca0fbca8305b70f0","patch":"@@ -98,6 +98,10 @@ ser-cls-query: Writing query \"{1}\" in class \"{0}\".\n ser-query: Writing query \"{1}\".\n ser-sequence: Writing sequence \"{0}\".\n no-sql: You must provide a SQL string when creating a native query.\n+no-named-params: Named parameter \"{0}\" is invalid for native query \"{1}\". \\\n+\tUse only 1-based positional parameter in native queries.\n+bad-pos-params: Positional parameter \"{0}\"  is invalid for native query \"{1}\". \\\n+\tUse only 1-based positional parameter in native queries.\n bad-param-type: The parameter \"{0}\" is of type \"{1}\", but the \\\n \tdeclaration in the query is for type \"{2}\". \n bad-em-prop: Invalid EntityManager property passed to createEntityManager. \\"}]}

