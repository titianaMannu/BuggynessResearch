{"sha":"d1d0ef02609b5cc123d1b91fbf1a77087cb7a22d","node_id":"MDY6Q29tbWl0MjA2MzY0OmQxZDBlZjAyNjA5YjVjYzEyM2QxYjkxZmJmMWE3NzA4N2NiN2EyMmQ=","commit":{"author":{"name":"Marc Prud'hommeaux","email":"mprudhom@apache.org","date":"2007-01-24T00:39:18Z"},"committer":{"name":"Marc Prud'hommeaux","email":"mprudhom@apache.org","date":"2007-01-24T00:39:18Z"},"message":"When performing a bulk update in-memory, also support Literal and Constant parameters, since they might be used in their JDBC implementation when the original query was executed against the database.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@499196 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"058afe0d4b8ad2ba05e9c4c13c2a72ba5c168714","url":"https://api.github.com/repos/apache/openjpa/git/trees/058afe0d4b8ad2ba05e9c4c13c2a72ba5c168714"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/d1d0ef02609b5cc123d1b91fbf1a77087cb7a22d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/d1d0ef02609b5cc123d1b91fbf1a77087cb7a22d","html_url":"https://github.com/apache/openjpa/commit/d1d0ef02609b5cc123d1b91fbf1a77087cb7a22d","comments_url":"https://api.github.com/repos/apache/openjpa/commits/d1d0ef02609b5cc123d1b91fbf1a77087cb7a22d/comments","author":null,"committer":null,"parents":[{"sha":"4a0ea7646bc1dcbd0adb6064c4e9fa1dee408309","url":"https://api.github.com/repos/apache/openjpa/commits/4a0ea7646bc1dcbd0adb6064c4e9fa1dee408309","html_url":"https://github.com/apache/openjpa/commit/4a0ea7646bc1dcbd0adb6064c4e9fa1dee408309"}],"stats":{"total":16,"additions":14,"deletions":2},"files":[{"sha":"5d56c14ac50cee0bf0c6f0741e42b86881883937","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryImpl.java","status":"modified","additions":14,"deletions":2,"changes":16,"blob_url":"https://github.com/apache/openjpa/blob/d1d0ef02609b5cc123d1b91fbf1a77087cb7a22d/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryImpl.java","raw_url":"https://github.com/apache/openjpa/raw/d1d0ef02609b5cc123d1b91fbf1a77087cb7a22d/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryImpl.java?ref=d1d0ef02609b5cc123d1b91fbf1a77087cb7a22d","patch":"@@ -33,6 +33,8 @@\n import org.apache.openjpa.enhance.PersistenceCapable;\n import org.apache.openjpa.kernel.exps.AggregateListener;\n import org.apache.openjpa.kernel.exps.FilterListener;\n+import org.apache.openjpa.kernel.exps.Constant;\n+import org.apache.openjpa.kernel.exps.Literal;\n import org.apache.openjpa.kernel.exps.Val;\n import org.apache.openjpa.lib.log.Log;\n import org.apache.openjpa.lib.rop.EagerResultList;\n@@ -1058,8 +1060,18 @@ private void updateInMemory(Object ob, Object[] params) {\n             Map.Entry e = (Map.Entry) it.next();\n             FieldMetaData fmd = (FieldMetaData) e.getKey();\n \n-            Val value = (Val) e.getValue();\n-            Object val = value.evaluate(ob, null, getStoreContext(), params);\n+            Object val;\n+            Object value = e.getValue();\n+            if (value instanceof Val) {\n+                val = ((Val) value).\n+                    evaluate(ob, null, getStoreContext(), params);\n+            } else if (value instanceof Literal) {\n+                val = ((Literal) value).getValue();\n+            } else if (value instanceof Constant) {\n+                val = ((Constant) value).getValue(params);\n+            } else {\n+                val = null;\n+            }\n \n             OpenJPAStateManager sm = _broker.getStateManager(ob);\n             int i = fmd.getIndex();"}]}

