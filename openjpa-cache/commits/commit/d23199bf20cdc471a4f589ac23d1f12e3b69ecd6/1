{"sha":"d23199bf20cdc471a4f589ac23d1f12e3b69ecd6","node_id":"MDY6Q29tbWl0MjA2MzY0OmQyMzE5OWJmMjBjZGM0NzFhNGY1ODlhYzIzZDFmMTJlM2I2OWVjZDY=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2010-01-21T00:31:06Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2010-01-21T00:31:06Z"},"message":"OPENJPA-1474: Setting intermediate field should take into account the loaded state\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@901464 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2e61cbb308df61c8f83445de53957731968c5e7c","url":"https://api.github.com/repos/apache/openjpa/git/trees/2e61cbb308df61c8f83445de53957731968c5e7c"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/d23199bf20cdc471a4f589ac23d1f12e3b69ecd6","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/d23199bf20cdc471a4f589ac23d1f12e3b69ecd6","html_url":"https://github.com/apache/openjpa/commit/d23199bf20cdc471a4f589ac23d1f12e3b69ecd6","comments_url":"https://api.github.com/repos/apache/openjpa/commits/d23199bf20cdc471a4f589ac23d1f12e3b69ecd6/comments","author":null,"committer":null,"parents":[{"sha":"b94d23268f72e09ee305323962b662cbdb3dbac7","url":"https://api.github.com/repos/apache/openjpa/commits/b94d23268f72e09ee305323962b662cbdb3dbac7","html_url":"https://github.com/apache/openjpa/commit/b94d23268f72e09ee305323962b662cbdb3dbac7"}],"stats":{"total":14,"additions":9,"deletions":5},"files":[{"sha":"451edbf53ac4d6c444203d3b10e68eb57abb21a7","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStoreManager.java","status":"modified","additions":9,"deletions":5,"changes":14,"blob_url":"https://github.com/apache/openjpa/blob/d23199bf20cdc471a4f589ac23d1f12e3b69ecd6/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStoreManager.java","raw_url":"https://github.com/apache/openjpa/raw/d23199bf20cdc471a4f589ac23d1f12e3b69ecd6/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStoreManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStoreManager.java?ref=d23199bf20cdc471a4f589ac23d1f12e3b69ecd6","patch":"@@ -369,8 +369,7 @@ protected boolean initializeState(OpenJPAStateManager sm, PCState state,\n                 Object mappedByObject = info.result.getMappedByValue();\n                 if (mappedByFieldMapping != null && mappedByObject != null)\n                     if (mappedByObject instanceof OpenJPAId &&\n-                        mapping.getExtraFieldDataIndex(mappedByFieldMapping.\n-                        getIndex()) != -1)\n+                        mapping.getExtraFieldDataIndex(mappedByFieldMapping.getIndex()) != -1) {\n                         // The inverse relation can not be set since\n                         // we are eagerly loading this sm for\n                         // a sm owner that is still in the process of \n@@ -379,10 +378,15 @@ protected boolean initializeState(OpenJPAStateManager sm, PCState state,\n                         // The inverse relation is set later by\n                         // setInverseRelation() when the sm owner is fully\n                         // initialized.\n-                        sm.setIntermediate(mappedByFieldMapping.getIndex(),\n-                            mappedByObject);\n-                    else\n+                        int index = mappedByFieldMapping.getIndex();\n+                        if (sm.getLoaded().get(index)) {\n+                            sm.setImplData(index, mappedByObject);\n+                        } else {\n+                            sm.setIntermediate(index, mappedByObject);\n+                        }\n+                    } else {\n                         setMappedBy(sm, mappedByFieldMapping, mappedByObject);\n+                    }\n             }\n             // load the selected mappings into the given state manager\n             if (res != null) {"}]}

