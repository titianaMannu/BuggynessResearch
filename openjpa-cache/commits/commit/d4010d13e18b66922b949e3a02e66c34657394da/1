{"sha":"d4010d13e18b66922b949e3a02e66c34657394da","node_id":"MDY6Q29tbWl0MjA2MzY0OmQ0MDEwZDEzZTE4YjY2OTIyYjk0OWUzYTAyZTY2YzM0NjU3Mzk0ZGE=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-11-25T05:41:07Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-11-25T05:41:07Z"},"message":"Reduce hint handling construction cost\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@883982 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"497e8e9e16461069f823133d238cbd339623f5bf","url":"https://api.github.com/repos/apache/openjpa/git/trees/497e8e9e16461069f823133d238cbd339623f5bf"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/d4010d13e18b66922b949e3a02e66c34657394da","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/d4010d13e18b66922b949e3a02e66c34657394da","html_url":"https://github.com/apache/openjpa/commit/d4010d13e18b66922b949e3a02e66c34657394da","comments_url":"https://api.github.com/repos/apache/openjpa/commits/d4010d13e18b66922b949e3a02e66c34657394da/comments","author":null,"committer":null,"parents":[{"sha":"94389184655dd1bf89ee3650bce218d62970107a","url":"https://api.github.com/repos/apache/openjpa/commits/94389184655dd1bf89ee3650bce218d62970107a","html_url":"https://github.com/apache/openjpa/commit/94389184655dd1bf89ee3650bce218d62970107a"}],"stats":{"total":19,"additions":13,"deletions":6},"files":[{"sha":"6c16c784f01ca90cfa135c0cca66525307f53982","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryImpl.java","status":"modified","additions":13,"deletions":6,"changes":19,"blob_url":"https://github.com/apache/openjpa/blob/d4010d13e18b66922b949e3a02e66c34657394da/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryImpl.java","raw_url":"https://github.com/apache/openjpa/raw/d4010d13e18b66922b949e3a02e66c34657394da/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryImpl.java?ref=d4010d13e18b66922b949e3a02e66c34657394da","patch":"@@ -87,7 +87,7 @@\n     private Map<Object, Parameter<?>> _declaredParams;\n \tprivate String _id;\n     private transient ReentrantLock _lock = null;\n-\tprivate final HintHandler _hintHandler;\n+\tprivate HintHandler _hintHandler;\n \n \t/**\n \t * Constructor; supply factory exception translator and delegate.\n@@ -100,7 +100,6 @@ public QueryImpl(EntityManagerImpl em, RuntimeExceptionTranslator ret,\n \t\t\torg.apache.openjpa.kernel.Query query) {\n \t\t_em = em;\n \t\t_query = new DelegatingQuery(query, ret);\n-\t\t_hintHandler = new HintHandler(this);\n \t\t_lock = new ReentrantLock();\n \t}\n \n@@ -203,7 +202,7 @@ public Class getResultClass() {\n \t\treturn _query.getCandidateType();\n \t}\n \n-\tpublic OpenJPAQuery setResultClass(Class cls) {\n+\tpublic OpenJPAQuery<X> setResultClass(Class cls) {\n \t\t_em.assertNotCloseInvoked();\n \t\tif (ImplHelper.isManagedType(_em.getConfiguration(), cls))\n \t\t\t_query.setCandidateType(cls, true);\n@@ -395,7 +394,7 @@ void assertJPQLOrCriteriaQuery() {\n \n     public LockModeType getLockMode() {\n         assertJPQLOrCriteriaQuery();\n-        return _fetch.getReadLockMode();\n+        return getFetchPlan().getReadLockMode();\n     }\n \n     /**\n@@ -409,7 +408,7 @@ public LockModeType getLockMode() {\n             ignorePreparedQuery();\n         }\n         assertJPQLOrCriteriaQuery();\n-       _fetch.setReadLockMode(lockMode);\n+       getFetchPlan().setReadLockMode(lockMode);\n        return this;\n     }\n \n@@ -433,16 +432,24 @@ public boolean equals(Object other) {\n \t */\n     //TODO: JPA 2.0 Hints that are not set to FetchConfiguration \n     public Map<String, Object> getHints() {\n+        if (_hintHandler == null)\n+            return Collections.emptyMap();\n         return _hintHandler.getHints();\n     }\n \n     public OpenJPAQuery<X> setHint(String key, Object value) {\n         _em.assertNotCloseInvoked();\n+        if (_hintHandler == null) {\n+            _hintHandler = new HintHandler(this);\n+        }\n         _hintHandler.setHint(key, value);\n         return this;\n     }\n \n     public Set<String> getSupportedHints() {\n+        if (_hintHandler == null) {\n+            _hintHandler = new HintHandler(this);\n+        }\n         return _hintHandler.getSupportedHints();\n     }\n \n@@ -852,7 +859,7 @@ void clearBinding() {\n         Parameter<?> param = getDeclaredParameters().get(name);\n         if (param == null) {\n             Set<ParameterExpression> exps = getDeclaredParameterKeys(ParameterExpression.class);\n-            for (ParameterExpression e : exps) {\n+            for (ParameterExpression<?> e : exps) {\n                 if (name.equals(e.getName()))\n                     return e;\n             }"}]}

