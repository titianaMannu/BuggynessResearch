{"sha":"d450910b0a1fb73ab73067d20500be53f3c4323c","node_id":"MDY6Q29tbWl0MjA2MzY0OmQ0NTA5MTBiMGExZmI3M2FiNzMwNjdkMjA1MDBiZTUzZjNjNDMyM2M=","commit":{"author":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2011-04-28T16:00:58Z"},"committer":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2011-04-28T16:00:58Z"},"message":"OPENJPA-1989: Fix *ToOne xml fetch attribute to honor LAZY.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1097517 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"94e18e0cc2250f6c438df6441ee493dcdedfcb30","url":"https://api.github.com/repos/apache/openjpa/git/trees/94e18e0cc2250f6c438df6441ee493dcdedfcb30"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/d450910b0a1fb73ab73067d20500be53f3c4323c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/d450910b0a1fb73ab73067d20500be53f3c4323c","html_url":"https://github.com/apache/openjpa/commit/d450910b0a1fb73ab73067d20500be53f3c4323c","comments_url":"https://api.github.com/repos/apache/openjpa/commits/d450910b0a1fb73ab73067d20500be53f3c4323c/comments","author":null,"committer":null,"parents":[{"sha":"b6ddcab3831b5d78f3781f33f8d9864f88849d3c","url":"https://api.github.com/repos/apache/openjpa/commits/b6ddcab3831b5d78f3781f33f8d9864f88849d3c","html_url":"https://github.com/apache/openjpa/commit/b6ddcab3831b5d78f3781f33f8d9864f88849d3c"}],"stats":{"total":172,"additions":170,"deletions":2},"files":[{"sha":"edea2b89ac8f9cf6f7d96542cd501e24d3de2687","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/TestToOneLazyXmlOverride.java","status":"added","additions":63,"deletions":0,"changes":63,"blob_url":"https://github.com/apache/openjpa/blob/d450910b0a1fb73ab73067d20500be53f3c4323c/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/TestToOneLazyXmlOverride.java","raw_url":"https://github.com/apache/openjpa/raw/d450910b0a1fb73ab73067d20500be53f3c4323c/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/TestToOneLazyXmlOverride.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/TestToOneLazyXmlOverride.java?ref=d450910b0a1fb73ab73067d20500be53f3c4323c","patch":"@@ -0,0 +1,63 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.xml;\n+\n+import javax.persistence.EntityManager;\n+\n+import org.apache.openjpa.persistence.test.SQLListenerTestCase;\n+\n+public class TestToOneLazyXmlOverride extends SQLListenerTestCase {\n+    @Override\n+    public void setUp() throws Exception {\n+        super.setUp(CLEAR_TABLES, XmlOverrideToOneEntity.class);\n+    }\n+\n+    @Override\n+    protected String getPersistenceUnitName() {\n+        return \"to-one-xml-override\";\n+    }\n+\n+    public void testToManyLazyOverride() {\n+        EntityManager em = emf.createEntityManager();\n+        try{\n+        em.getTransaction().begin();\n+        XmlOverrideToOneEntity x = new XmlOverrideToOneEntity();\n+        x.setOtherM2O(x);\n+        x.setOtherO2O(x);\n+        em.persist(x);\n+        em.getTransaction().commit();\n+\n+        em.clear();\n+        resetSQL();\n+\n+        em.find(XmlOverrideToOneEntity.class, x.getId());\n+        for (String lastSql : sql) {\n+            // Make sure we don't have any joins!\n+            assertFalse(\"Shouldn't have found any instances of join or JOIN in last sql, but did. Last SQL = \"\n+                + lastSql, lastSql.contains(\"join\") || lastSql.contains(\"JOIN\"));\n+        }\n+        }finally{\n+            if(em.getTransaction().isActive()){\n+                em.getTransaction().rollback();\n+            }\n+            em.close();\n+            }\n+        }\n+    }\n+}"},{"sha":"4aa23e5578fd009da0387a29efc111ef2e9caccb","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/XmlOverrideToOneEntity.java","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/apache/openjpa/blob/d450910b0a1fb73ab73067d20500be53f3c4323c/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/XmlOverrideToOneEntity.java","raw_url":"https://github.com/apache/openjpa/raw/d450910b0a1fb73ab73067d20500be53f3c4323c/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/XmlOverrideToOneEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/XmlOverrideToOneEntity.java?ref=d450910b0a1fb73ab73067d20500be53f3c4323c","patch":"@@ -0,0 +1,61 @@\n+\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.xml;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.OneToOne;\n+\n+@Entity\n+public class XmlOverrideToOneEntity {\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.AUTO)\n+    int id;\n+\n+    @OneToOne \n+    XmlOverrideToOneEntity otherO2O;\n+\n+    @ManyToOne\n+    XmlOverrideToOneEntity otherM2O;\n+\n+    public long getId() {\n+        return id;\n+    }\n+\n+    public XmlOverrideToOneEntity getOtherO2O() {\n+        return otherO2O;\n+    }\n+\n+    public void setOtherO2O(XmlOverrideToOneEntity otherO2O) {\n+        this.otherO2O = otherO2O;\n+    }\n+\n+    public XmlOverrideToOneEntity getOtherM2O() {\n+        return otherM2O;\n+    }\n+\n+    public void setOtherM2O(XmlOverrideToOneEntity otherM2O) {\n+        this.otherM2O = otherM2O;\n+    }\n+\n+}"},{"sha":"2198b556d7487bcd62400901076961ffb3b761b3","filename":"openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/d450910b0a1fb73ab73067d20500be53f3c4323c/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/d450910b0a1fb73ab73067d20500be53f3c4323c/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml?ref=d450910b0a1fb73ab73067d20500be53f3c4323c","patch":"@@ -385,4 +385,11 @@\n             <property name=\"openjpa.jdbc.SynchronizeMappings\" value=\"buildSchema\"/>\n         </properties>\n     </persistence-unit>\n+\t<persistence-unit name=\"to-one-xml-override\">\n+\t\t<mapping-file>org/apache/openjpa/persistence/xml/toone-orm.xml\n+\t\t</mapping-file>\n+\t\t<properties>\n+\t\t\t<property name=\"openjpa.jdbc.SynchronizeMappings\" value=\"buildSchema(ForeignKeys=true)\" />\n+\t\t</properties>\n+\t</persistence-unit>\n </persistence>"},{"sha":"d563102a8f2b71dc0f5dff97b1270fa55977c352","filename":"openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/xml/toone-orm.xml","status":"added","additions":33,"deletions":0,"changes":33,"blob_url":"https://github.com/apache/openjpa/blob/d450910b0a1fb73ab73067d20500be53f3c4323c/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/xml/toone-orm.xml","raw_url":"https://github.com/apache/openjpa/raw/d450910b0a1fb73ab73067d20500be53f3c4323c/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/xml/toone-orm.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/xml/toone-orm.xml?ref=d450910b0a1fb73ab73067d20500be53f3c4323c","patch":"@@ -0,0 +1,33 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+ \n+ http://www.apache.org/licenses/LICENSE-2.0\n+ \n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.   \n+-->\n+<entity-mappings xmlns=\"http://java.sun.com/xml/ns/persistence/orm\"\n+\txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+\txsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence/orm orm_2_0.xsd\"\n+\tversion=\"2.0\">\n+\t<package> org.apache.openjpa.persistence.xml </package>\n+\t<entity name=\"XmlOverrideToOneEntity\" class=\"XmlOverrideToOneEntity\">\n+\t\t<attributes>\n+\t\t\t<many-to-one name=\"otherM2O\" fetch=\"LAZY\">\n+\t\t\t</many-to-one>\n+\t\t\t<one-to-one name=\"otherO2O\" fetch=\"LAZY\">\n+\t\t\t</one-to-one>\n+\t\t</attributes>\n+\t</entity>\n+</entity-mappings>"},{"sha":"5474e50e6ce4ec53fa4ec65e82e26a421df49f8c","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/d450910b0a1fb73ab73067d20500be53f3c4323c/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","raw_url":"https://github.com/apache/openjpa/raw/d450910b0a1fb73ab73067d20500be53f3c4323c/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java?ref=d450910b0a1fb73ab73067d20500be53f3c4323c","patch":"@@ -1463,8 +1463,10 @@ private void assertPC(FieldMetaData fmd, String attr)\n     protected void parseOneToOne(FieldMetaData fmd, Attributes attrs)\n         throws SAXException {\n         String val = attrs.getValue(\"fetch\");\n-        if (val == null || \"EAGER\".equals(val)) {\n+        if (val == null) {\n             fmd.setInDefaultFetchGroup(true);\n+        } else {\n+            fmd.setInDefaultFetchGroup(\"EAGER\".equals(val));\n         }\n         val = attrs.getValue(\"target-entity\");\n         if (val != null)\n@@ -1485,8 +1487,10 @@ protected void parseOneToOne(FieldMetaData fmd, Attributes attrs)\n     protected void parseManyToOne(FieldMetaData fmd, Attributes attrs)\n         throws SAXException {\n         String val = attrs.getValue(\"fetch\");\n-        if (val == null || \"EAGER\".equals(val)) {\n+        if (val == null) {\n             fmd.setInDefaultFetchGroup(true);\n+        } else {\n+            fmd.setInDefaultFetchGroup(\"EAGER\".equals(val));\n         }\n         val = attrs.getValue(\"target-entity\");\n         if (val != null)"}]}

