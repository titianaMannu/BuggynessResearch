{"sha":"d48f439bc87907703e3bb36073d50dd2f772d236","node_id":"MDY6Q29tbWl0MjA2MzY0OmQ0OGY0MzliYzg3OTA3NzAzZTNiYjM2MDczZDUwZGQyZjc3MmQyMzY=","commit":{"author":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2021-03-30T18:48:54Z"},"committer":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2021-03-30T18:52:31Z"},"message":"OPENJPA-2182 fix invalidColumnWordSet handling\n\ninvalidColumnWordSet should get populated with the list of reserved words\nif not explicitly configured otherwise.","tree":{"sha":"bab19bd2e80890488ca14c97f5423815e3a2ece9","url":"https://api.github.com/repos/apache/openjpa/git/trees/bab19bd2e80890488ca14c97f5423815e3a2ece9"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/d48f439bc87907703e3bb36073d50dd2f772d236","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/d48f439bc87907703e3bb36073d50dd2f772d236","html_url":"https://github.com/apache/openjpa/commit/d48f439bc87907703e3bb36073d50dd2f772d236","comments_url":"https://api.github.com/repos/apache/openjpa/commits/d48f439bc87907703e3bb36073d50dd2f772d236/comments","author":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"committer":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"parents":[{"sha":"1a8bcfb6b1bd08d3f0158c023307c3cea2512d98","url":"https://api.github.com/repos/apache/openjpa/commits/1a8bcfb6b1bd08d3f0158c023307c3cea2512d98","html_url":"https://github.com/apache/openjpa/commit/1a8bcfb6b1bd08d3f0158c023307c3cea2512d98"}],"stats":{"total":20,"additions":9,"deletions":11},"files":[{"sha":"ac8433ede61444cf97fb6765234082089618e300","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/AbstractSQLServerDictionary.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/d48f439bc87907703e3bb36073d50dd2f772d236/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/AbstractSQLServerDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/d48f439bc87907703e3bb36073d50dd2f772d236/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/AbstractSQLServerDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/AbstractSQLServerDictionary.java?ref=d48f439bc87907703e3bb36073d50dd2f772d236","patch":"@@ -38,7 +38,6 @@\n \n     public AbstractSQLServerDictionary() {\n         reservedWordSet.addAll(Arrays.asList(new String[]{ \"FILE\", \"INDEX\" }));\n-        invalidColumnWordSet.addAll(reservedWordSet);\n         systemTableSet.add(\"DTPROPERTIES\");\n         validationSQL = \"SELECT GETDATE()\";\n         rangePosition = RANGE_POST_DISTINCT;"},{"sha":"3ae7357ba38398829ba9e53349bea74fca1f9b8e","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","status":"modified","additions":9,"deletions":10,"changes":19,"blob_url":"https://github.com/apache/openjpa/blob/d48f439bc87907703e3bb36073d50dd2f772d236/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/d48f439bc87907703e3bb36073d50dd2f772d236/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java?ref=d48f439bc87907703e3bb36073d50dd2f772d236","patch":"@@ -4221,8 +4221,7 @@ public boolean isSystemIndex(DBIdentifier name, Table table) {\n      * @deprecated\n      */\n     @Deprecated\n-    public boolean isSystemSequence(String name, String schema,\n-        boolean targetSchema) {\n+    public boolean isSystemSequence(String name, String schema, boolean targetSchema) {\n         return isSystemSequence(DBIdentifier.newSequence(name),\n             DBIdentifier.newSchema(schema), targetSchema);\n     }\n@@ -4238,8 +4237,7 @@ public boolean isSystemSequence(String name, String schema,\n      * @param targetSchema if true, then the given schema was listed by\n      * the user as one of his schemas\n      */\n-    public boolean isSystemSequence(DBIdentifier name, DBIdentifier schema,\n-        boolean targetSchema) {\n+    public boolean isSystemSequence(DBIdentifier name, DBIdentifier schema, boolean targetSchema) {\n         return !targetSchema && !DBIdentifier.isNull(schema)\n             && systemSchemaSet.contains(DBIdentifier.toUpper(schema).getName());\n     }\n@@ -5029,13 +5027,10 @@ public void startConfiguration() {\n     @Override\n     public void endConfiguration() {\n         // initialize the set of reserved SQL92 words from resource\n-        InputStream in = DBDictionary.class.getResourceAsStream\n-            (\"sql-keywords.rsrc\");\n+        InputStream in = DBDictionary.class.getResourceAsStream(\"sql-keywords.rsrc\");\n         try {\n-            String keywords = new BufferedReader(new InputStreamReader(in)).\n-                readLine();\n-            reservedWordSet.addAll(Arrays.asList(StringUtil.split\n-                (keywords, \",\", 0)));\n+            String keywords = new BufferedReader(new InputStreamReader(in)).readLine();\n+            reservedWordSet.addAll(Arrays.asList(StringUtil.split(keywords, \",\", 0)));\n         } catch (IOException ioe) {\n             throw new GeneralException(ioe);\n         } finally {\n@@ -5065,6 +5060,10 @@ public void endConfiguration() {\n         if (selectWords != null)\n             selectWordSet.addAll(Arrays.asList(StringUtil.split(selectWords.toUpperCase(Locale.ENGLISH), \",\", 0)));\n \n+        if (invalidColumnWordSet.isEmpty()) {\n+            invalidColumnWordSet.addAll(reservedWordSet);\n+        }\n+\n         // initialize the error codes\n         SQLErrorCodeReader codeReader = new SQLErrorCodeReader();\n         String rsrc = \"sql-error-state-codes.xml\";"}]}

