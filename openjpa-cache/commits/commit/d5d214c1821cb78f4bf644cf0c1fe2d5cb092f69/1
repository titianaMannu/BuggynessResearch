{"sha":"d5d214c1821cb78f4bf644cf0c1fe2d5cb092f69","node_id":"MDY6Q29tbWl0MjA2MzY0OmQ1ZDIxNGMxODIxY2I3OGY0YmY2NDRjZjBjMWZlMmQ1Y2IwOTJmNjk=","commit":{"author":{"name":"David J. Wisneski","email":"wisneskid@apache.org","date":"2007-05-02T21:35:55Z"},"committer":{"name":"David J. Wisneski","email":"wisneskid@apache.org","date":"2007-05-02T21:35:55Z"},"message":"Fix for issue OPENJPA-51. It should also resolve issue OPENJPA-173.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@534623 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"cd74f571f24402487af94a49ae75a68581260006","url":"https://api.github.com/repos/apache/openjpa/git/trees/cd74f571f24402487af94a49ae75a68581260006"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/d5d214c1821cb78f4bf644cf0c1fe2d5cb092f69","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/d5d214c1821cb78f4bf644cf0c1fe2d5cb092f69","html_url":"https://github.com/apache/openjpa/commit/d5d214c1821cb78f4bf644cf0c1fe2d5cb092f69","comments_url":"https://api.github.com/repos/apache/openjpa/commits/d5d214c1821cb78f4bf644cf0c1fe2d5cb092f69/comments","author":null,"committer":null,"parents":[{"sha":"43c931014a4719ccebab8e7cd6173d45ee6bcaaf","url":"https://api.github.com/repos/apache/openjpa/commits/43c931014a4719ccebab8e7cd6173d45ee6bcaaf","html_url":"https://github.com/apache/openjpa/commit/43c931014a4719ccebab8e7cd6173d45ee6bcaaf"}],"stats":{"total":34,"additions":27,"deletions":7},"files":[{"sha":"e57eb0509439aca2f66c6dce27a5551670ebd939","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java","status":"modified","additions":27,"deletions":7,"changes":34,"blob_url":"https://github.com/apache/openjpa/blob/d5d214c1821cb78f4bf644cf0c1fe2d5cb092f69/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java","raw_url":"https://github.com/apache/openjpa/raw/d5d214c1821cb78f4bf644cf0c1fe2d5cb092f69/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SelectImpl.java?ref=d5d214c1821cb78f4bf644cf0c1fe2d5cb092f69","patch":"@@ -158,6 +158,13 @@\n     // from select if this select selects from a tmp table created by another\n     private SelectImpl _from = null;\n     private SelectImpl _outer = null;\n+    \n+    // bitSet indicating if an alias is removed from parent select\n+    // bit 0 : correspond to alias 0\n+    // bit 1 : correspond to alias 1, etc.\n+    // if the bit is set, the corresponding alias has been removed from parent\n+    // and recorded under subselect.\n+    private int _removedAliasFromParent = 0;\n      \n     /**\n      * Helper method to return the proper table alias for the given alias index.\n@@ -1487,8 +1494,13 @@ else if (!pre) {\n     private void removeParentJoins(PathJoins pj) {\n         if (_parent == null)\n             return;\n-        if (_parent._joins != null && !_parent._joins.isEmpty())\n-            pj.joins().removeAll(_parent._joins.joins());\n+        if (_parent._joins != null && !_parent._joins.isEmpty()) {\n+            boolean removed = false;\n+            if (_removedAliasFromParent > 0)\n+                removed = _parent._joins.joins().removeAll(pj.joins());\n+            if (!removed)\n+                pj.joins().removeAll(_parent._joins.joins());\n+        }\n         if (!pj.isEmpty())\n             _parent.removeParentJoins(pj);\n     }\n@@ -1897,9 +1909,15 @@ private Integer findAlias(Table table, Object key, boolean fromParent,\n             }\n         }\n         if (!fromParent && _parent != null) {\n-            alias = _parent.findAlias(table, key, false, this);\n-            if (alias != null)\n+            boolean removeAliasFromParent = key.toString().contains(\":\");\n+            alias = _parent.findAlias(table, key, removeAliasFromParent, this);\n+            if (alias != null) {\n+                if (removeAliasFromParent) {\n+                    recordTableAlias(table, key, alias);\n+                    _removedAliasFromParent |= (1 << alias.intValue());\n+                }\n                 return alias;\n+            }\n         }\n         if (_subsels != null) {\n             SelectImpl sub;\n@@ -1913,9 +1931,11 @@ private Integer findAlias(Table table, Object key, boolean fromParent,\n                     if (sub._tables != null)\n                         sub._tables.remove(alias);\n                 } else {\n-                    alias = sub.findAlias(table, key, true, null);\n-                    if (!fromParent && alias != null)\n-                        recordTableAlias(table, key, alias);\n+                    if (fromSub == null) {\n+                        alias = sub.findAlias(table, key, true, null);\n+                        if (!fromParent && alias != null)\n+                            recordTableAlias(table, key, alias);\n+                    }\n                 }\n             }\n         }"}]}

