{"sha":"d698ccaf00ccffd2a15430363885dafbe5a66ae9","node_id":"MDY6Q29tbWl0MjA2MzY0OmQ2OThjY2FmMDBjY2ZmZDJhMTU0MzAzNjM4ODVkYWZiZTVhNjZhZTk=","commit":{"author":{"name":"Thomas Andraschko","email":"tandraschko@apache.org","date":"2021-07-12T14:08:27Z"},"committer":{"name":"Thomas Andraschko","email":"tandraschko@apache.org","date":"2021-07-12T14:08:27Z"},"message":"OPENJPA-2877 added caching of method","tree":{"sha":"a825145e122774afe4afab55fc83c641c3ab85e2","url":"https://api.github.com/repos/apache/openjpa/git/trees/a825145e122774afe4afab55fc83c641c3ab85e2"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/d698ccaf00ccffd2a15430363885dafbe5a66ae9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/d698ccaf00ccffd2a15430363885dafbe5a66ae9","html_url":"https://github.com/apache/openjpa/commit/d698ccaf00ccffd2a15430363885dafbe5a66ae9","comments_url":"https://api.github.com/repos/apache/openjpa/commits/d698ccaf00ccffd2a15430363885dafbe5a66ae9/comments","author":{"login":"tandraschko","id":2485545,"node_id":"MDQ6VXNlcjI0ODU1NDU=","avatar_url":"https://avatars.githubusercontent.com/u/2485545?v=4","gravatar_id":"","url":"https://api.github.com/users/tandraschko","html_url":"https://github.com/tandraschko","followers_url":"https://api.github.com/users/tandraschko/followers","following_url":"https://api.github.com/users/tandraschko/following{/other_user}","gists_url":"https://api.github.com/users/tandraschko/gists{/gist_id}","starred_url":"https://api.github.com/users/tandraschko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tandraschko/subscriptions","organizations_url":"https://api.github.com/users/tandraschko/orgs","repos_url":"https://api.github.com/users/tandraschko/repos","events_url":"https://api.github.com/users/tandraschko/events{/privacy}","received_events_url":"https://api.github.com/users/tandraschko/received_events","type":"User","site_admin":false},"committer":{"login":"tandraschko","id":2485545,"node_id":"MDQ6VXNlcjI0ODU1NDU=","avatar_url":"https://avatars.githubusercontent.com/u/2485545?v=4","gravatar_id":"","url":"https://api.github.com/users/tandraschko","html_url":"https://github.com/tandraschko","followers_url":"https://api.github.com/users/tandraschko/followers","following_url":"https://api.github.com/users/tandraschko/following{/other_user}","gists_url":"https://api.github.com/users/tandraschko/gists{/gist_id}","starred_url":"https://api.github.com/users/tandraschko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tandraschko/subscriptions","organizations_url":"https://api.github.com/users/tandraschko/orgs","repos_url":"https://api.github.com/users/tandraschko/repos","events_url":"https://api.github.com/users/tandraschko/events{/privacy}","received_events_url":"https://api.github.com/users/tandraschko/received_events","type":"User","site_admin":false},"parents":[{"sha":"116eda990351130f70ec384c182efecd36b26977","url":"https://api.github.com/repos/apache/openjpa/commits/116eda990351130f70ec384c182efecd36b26977","html_url":"https://github.com/apache/openjpa/commit/116eda990351130f70ec384c182efecd36b26977"}],"stats":{"total":19,"additions":15,"deletions":4},"files":[{"sha":"12a953d8c4c48ac13a2556abe2a54239baf0fb81","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/FieldMetaData.java","status":"modified","additions":15,"deletions":4,"changes":19,"blob_url":"https://github.com/apache/openjpa/blob/d698ccaf00ccffd2a15430363885dafbe5a66ae9/openjpa-kernel/src/main/java/org/apache/openjpa/meta/FieldMetaData.java","raw_url":"https://github.com/apache/openjpa/raw/d698ccaf00ccffd2a15430363885dafbe5a66ae9/openjpa-kernel/src/main/java/org/apache/openjpa/meta/FieldMetaData.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/FieldMetaData.java?ref=d698ccaf00ccffd2a15430363885dafbe5a66ae9","patch":"@@ -199,6 +199,9 @@\n     private transient Method _extMethod = DEFAULT_METHOD;\n     private transient Member _factMethod = DEFAULT_METHOD;\n \n+    private transient Method _converterExtMethod;\n+    private transient Method _converterFactMethod;\n+    \n     // intermediate and impl data\n     private boolean _intermediate = true;\n     private Boolean _implData = Boolean.TRUE;\n@@ -1352,9 +1355,12 @@ public Object getExternalValue(Object val, StoreContext ctx) {\n             try {\n                 // TODO support CDI (OPENJPA-2714)\n                 Object instance = converter.getDeclaredConstructor().newInstance();\n+\n                 // see AttributeConverter.java from the JPA specs\n-                Method method = converter.getDeclaredMethod(\"convertToDatabaseColumn\", Object.class);\n-                return method.invoke(instance, val);\n+                if (_converterExtMethod == null) {\n+                    _converterExtMethod = converter.getDeclaredMethod(\"convertToDatabaseColumn\", Object.class);\n+                }\n+                return _converterExtMethod.invoke(instance, val);\n             } catch (OpenJPAException ke) {\n                 throw ke;\n             } catch (Exception e) {\n@@ -1426,9 +1432,12 @@ public Object getFieldValue(Object val, StoreContext ctx) {\n             try {\n                 // TODO support CDI (OPENJPA-2714)\n                 Object instance = converter.getDeclaredConstructor().newInstance();\n+\n                 // see AttributeConverter.java from the JPA specs\n-                Method method = converter.getDeclaredMethod(\"convertToEntityAttribute\", Object.class);\n-                return method.invoke(instance, val);\n+                if (_converterFactMethod == null) {\n+                    _converterFactMethod = converter.getDeclaredMethod(\"convertToEntityAttribute\", Object.class);\n+                }\n+                return _converterFactMethod.invoke(instance, val);\n             } catch (OpenJPAException ke) {\n                 throw ke;\n             } catch (Exception e) {\n@@ -1457,6 +1466,8 @@ public void setExternalizer(String externalizer) {\n \n     public void setConverter(Class converter) {\n         _converter = converter;\n+        _converterExtMethod = null;\n+        _converterFactMethod = null;\n     }\n     \n     /**"}]}

