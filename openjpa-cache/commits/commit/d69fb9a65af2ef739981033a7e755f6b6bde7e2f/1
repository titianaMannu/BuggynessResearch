{"sha":"d69fb9a65af2ef739981033a7e755f6b6bde7e2f","node_id":"MDY6Q29tbWl0MjA2MzY0OmQ2OWZiOWE2NWFmMmVmNzM5OTgxMDMzYTdlNzU1ZjZiNmJkZTdlMmY=","commit":{"author":{"name":"Fay Wang","email":"faywang@apache.org","date":"2010-03-13T23:14:35Z"},"committer":{"name":"Fay Wang","email":"faywang@apache.org","date":"2010-03-13T23:14:35Z"},"message":"OPENJPA-1570: fix @Strategy inside MappedSuper class\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@922688 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"b0343c3d4103d640cedd8c91ae3c9d93f13781fa","url":"https://api.github.com/repos/apache/openjpa/git/trees/b0343c3d4103d640cedd8c91ae3c9d93f13781fa"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/d69fb9a65af2ef739981033a7e755f6b6bde7e2f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/d69fb9a65af2ef739981033a7e755f6b6bde7e2f","html_url":"https://github.com/apache/openjpa/commit/d69fb9a65af2ef739981033a7e755f6b6bde7e2f","comments_url":"https://api.github.com/repos/apache/openjpa/commits/d69fb9a65af2ef739981033a7e755f6b6bde7e2f/comments","author":null,"committer":null,"parents":[{"sha":"8f45b5bf0b20c1e371874defd0b9c20b6c0f58fa","url":"https://api.github.com/repos/apache/openjpa/commits/8f45b5bf0b20c1e371874defd0b9c20b6c0f58fa","html_url":"https://github.com/apache/openjpa/commit/8f45b5bf0b20c1e371874defd0b9c20b6c0f58fa"}],"stats":{"total":124,"additions":121,"deletions":3},"files":[{"sha":"7995575cc84734ec99480eff73d44ee1f26fc9f8","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/RuntimeStrategyInstaller.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/d69fb9a65af2ef739981033a7e755f6b6bde7e2f/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/RuntimeStrategyInstaller.java","raw_url":"https://github.com/apache/openjpa/raw/d69fb9a65af2ef739981033a7e755f6b6bde7e2f/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/RuntimeStrategyInstaller.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/RuntimeStrategyInstaller.java?ref=d69fb9a65af2ef739981033a7e755f6b6bde7e2f","patch":"@@ -59,7 +59,7 @@ public void installStrategy(ClassMapping cls) {\n     public void installStrategy(FieldMapping field) {\n         FieldStrategy strategy = null;\n         ClassMapping owner = getOutermostDefiningMapping(field); \n-        if (owner != null && !owner.isEmbeddable())\n+        if (owner != null && !owner.isEmbeddable() && !owner.isAbstract())\n             strategy = repos.namedStrategy(field, true);\n         if (strategy == null) {\n             try {"},{"sha":"adf68fd598c9d43083eb40f69ece02c85989bb0e","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/annotations/NonstandardMappingEntity4.java","status":"added","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/apache/openjpa/blob/d69fb9a65af2ef739981033a7e755f6b6bde7e2f/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/annotations/NonstandardMappingEntity4.java","raw_url":"https://github.com/apache/openjpa/raw/d69fb9a65af2ef739981033a7e755f6b6bde7e2f/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/annotations/NonstandardMappingEntity4.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/annotations/NonstandardMappingEntity4.java?ref=d69fb9a65af2ef739981033a7e755f6b6bde7e2f","patch":"@@ -0,0 +1,51 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.openjpa.persistence.jdbc.annotations;\r\n+\r\n+\r\n+import javax.persistence.Entity;\r\n+import javax.persistence.Id;\r\n+import javax.persistence.Table;\r\n+\r\n+\r\n+\r\n+@Entity\r\n+@Table(name = \"NONSTD_ENTITY4\")\r\n+public class NonstandardMappingEntity4 extends NonstandardMappingMappedSuper4 {\r\n+    @Id\r\n+    private long id;\r\n+    \r\n+    private String name;\r\n+    \r\n+    public long getId() { \r\n+        return id; \r\n+    }\r\n+    \r\n+    public void setId(long id) { \r\n+        this.id = id; \r\n+    }\r\n+    \r\n+    public String getName() {\r\n+        return name;\r\n+    }\r\n+   \r\n+    public void setName(String name) {\r\n+        this.name = name;\r\n+    }\r\n+}\r"},{"sha":"ede6a8e3606cfd7bdb134b541b722a150089d786","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/annotations/NonstandardMappingMappedSuper4.java","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/apache/openjpa/blob/d69fb9a65af2ef739981033a7e755f6b6bde7e2f/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/annotations/NonstandardMappingMappedSuper4.java","raw_url":"https://github.com/apache/openjpa/raw/d69fb9a65af2ef739981033a7e755f6b6bde7e2f/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/annotations/NonstandardMappingMappedSuper4.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/annotations/NonstandardMappingMappedSuper4.java?ref=d69fb9a65af2ef739981033a7e755f6b6bde7e2f","patch":"@@ -0,0 +1,46 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.openjpa.persistence.jdbc.annotations;\r\n+\r\n+\r\n+import java.awt.Point;\r\n+import java.util.*;\r\n+\r\n+import javax.persistence.*;\r\n+\r\n+import org.apache.openjpa.persistence.*;\r\n+import org.apache.openjpa.persistence.jdbc.*;\r\n+\r\n+@MappedSuperclass\r\n+public abstract class NonstandardMappingMappedSuper4 {\r\n+\r\n+    @Persistent\r\n+    @Strategy(\"PointHandler\")\r\n+    @Column(name=\"my_point\")\r\n+    private Point point;\r\n+    \r\n+    public Point getPoint() { \r\n+        return point; \r\n+    }\r\n+    \r\n+    public void setPoint(Point point) { \r\n+        this.point = point; \r\n+    }\r\n+   \r\n+}\r"},{"sha":"ebd93e82a12b3d707605540efc9c0eda618c176c","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/annotations/TestNonstandardMappingAnnotations.java","status":"modified","additions":23,"deletions":2,"changes":25,"blob_url":"https://github.com/apache/openjpa/blob/d69fb9a65af2ef739981033a7e755f6b6bde7e2f/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/annotations/TestNonstandardMappingAnnotations.java","raw_url":"https://github.com/apache/openjpa/raw/d69fb9a65af2ef739981033a7e755f6b6bde7e2f/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/annotations/TestNonstandardMappingAnnotations.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/annotations/TestNonstandardMappingAnnotations.java?ref=d69fb9a65af2ef739981033a7e755f6b6bde7e2f","patch":"@@ -47,7 +47,7 @@\n     public void setUp() {\n         setUp(NonstandardMappingEntity.class, NonstandardMappingEntity3.class, ExtensionsEntity.class,\n             NonstandardMappingMappedSuper.class, EmbedValue2.class, EmbedValue3.class,\n-            EmbedValue.class,\n+            EmbedValue.class, NonstandardMappingEntity4.class, NonstandardMappingMappedSuper4.class, \n             CLEAR_TABLES, RETAIN_DATA);\n \n         // trigger complete resolution of metadata etc.\n@@ -307,4 +307,25 @@ public void testInsertAndRetrieveEmbeddedObjectWithStrategy() {\n         em.close();\n     }\n \n-}\n+    public void testInsertAndRetrieveMappedSuperWithStrategy() {\n+        NonstandardMappingEntity4 pc = new NonstandardMappingEntity4();\n+        Point point = new Point();\n+        point.setLocation(1, 2);\n+        pc.setPoint(point);\n+        pc.setId(1);\n+        pc.setName(\"name1\");\n+        \n+        OpenJPAEntityManager em = emf.createEntityManager();\n+        em.getTransaction().begin();\n+        em.persist(pc);\n+        em.getTransaction().commit();\n+        Object pcId = em.getObjectId(pc);\n+        em.close();\n+\n+        em = emf.createEntityManager();\n+        pc = em.find(NonstandardMappingEntity4.class, pcId);\n+        assertEquals(\"name1\", pc.getName());\n+        assertEquals(1.0, pc.getPoint().getX());\n+        assertEquals(2.0, pc.getPoint().getY());\n+        em.close();\n+    }}"}]}

