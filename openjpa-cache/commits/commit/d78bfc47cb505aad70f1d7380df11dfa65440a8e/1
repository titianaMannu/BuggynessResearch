{"sha":"d78bfc47cb505aad70f1d7380df11dfa65440a8e","node_id":"MDY6Q29tbWl0MjA2MzY0OmQ3OGJmYzQ3Y2I1MDVhYWQ3MGYxZDczODBkZjExZGZhNjU0NDBhOGU=","commit":{"author":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2021-05-02T19:53:12Z"},"committer":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2021-05-02T19:53:12Z"},"message":"OPENJPA-2866 fix identifier unit test\n\nOracle now supports IDENTITY columns since a very long time.\nNo need to rely on ancient index creation stuff.","tree":{"sha":"f388114878acac4437a811e9d1a3fe641ebddf45","url":"https://api.github.com/repos/apache/openjpa/git/trees/f388114878acac4437a811e9d1a3fe641ebddf45"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/d78bfc47cb505aad70f1d7380df11dfa65440a8e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/d78bfc47cb505aad70f1d7380df11dfa65440a8e","html_url":"https://github.com/apache/openjpa/commit/d78bfc47cb505aad70f1d7380df11dfa65440a8e","comments_url":"https://api.github.com/repos/apache/openjpa/commits/d78bfc47cb505aad70f1d7380df11dfa65440a8e/comments","author":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"committer":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"parents":[{"sha":"5dc56fa17b54cb9762f536e9ba42411c62baa9ed","url":"https://api.github.com/repos/apache/openjpa/commits/5dc56fa17b54cb9762f536e9ba42411c62baa9ed","html_url":"https://github.com/apache/openjpa/commit/5dc56fa17b54cb9762f536e9ba42411c62baa9ed"}],"stats":{"total":39,"additions":2,"deletions":37},"files":[{"sha":"a40e3400e3f2345658653e28473b463e793466f0","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java","status":"modified","additions":2,"deletions":37,"changes":39,"blob_url":"https://github.com/apache/openjpa/blob/d78bfc47cb505aad70f1d7380df11dfa65440a8e/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java","raw_url":"https://github.com/apache/openjpa/raw/d78bfc47cb505aad70f1d7380df11dfa65440a8e/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java?ref=d78bfc47cb505aad70f1d7380df11dfa65440a8e","patch":"@@ -30,7 +30,6 @@\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.List;\n-import java.util.Locale;\n import java.util.Map;\n import java.util.Set;\n \n@@ -41,10 +40,6 @@\n import javax.persistence.Query;\n \n import org.apache.openjpa.jdbc.conf.JDBCConfiguration;\n-import org.apache.openjpa.jdbc.meta.MappingTool;\n-import org.apache.openjpa.jdbc.meta.MappingTool.Flags;\n-import org.apache.openjpa.jdbc.sql.DBDictionary;\n-import org.apache.openjpa.jdbc.sql.OracleDictionary;\n import org.apache.openjpa.persistence.ArgumentException;\n import org.apache.openjpa.persistence.OpenJPAEntityManager;\n import org.apache.openjpa.persistence.OpenJPAEntityManagerSPI;\n@@ -107,10 +102,6 @@ public void setUp() {\n             EntityA_Embed_Single_Coll.class, Embed_Single_Coll.class, EntityA_Embed.class,\n             EntityA_Embed_Complex.class, A.class, CLEAR_TABLES);\n             sql.clear();\n-            DBDictionary dict = ((JDBCConfiguration)emf.getConfiguration()).getDBDictionaryInstance();\n-            if (dict.getClass().getName().toLowerCase(Locale.ENGLISH).indexOf(\"oracle\") != -1) {\n-                ((OracleDictionary)dict).useTriggersForAutoAssign = true;\n-            }\n     }\n \n     public void testGroupByEmbed() {\n@@ -2786,14 +2777,9 @@ public void queryVicePresident(EntityManagerFactory emf) {\n      */\n     public void createEmbeddableContainingRelationWithGeneratedKey()\n         throws IOException, SQLException {\n-        EntityManager em = emf.createEntityManager();\n-\n-        OpenJPAEntityManagerSPI ojem = (OpenJPAEntityManagerSPI)em;\n+        OpenJPAEntityManagerSPI ojem = emf.createEntityManager();\n+        EntityManager em = ojem;\n         JDBCConfiguration conf = (JDBCConfiguration) ojem.getConfiguration();\n-        DBDictionary dict = conf.getDBDictionaryInstance();\n-        if (dict instanceof OracleDictionary) {\n-            recreateOracleArtifacts((OracleDictionary)dict, conf);\n-        }\n         EntityTransaction tran = em.getTransaction();\n \n         Book b = new Book(1590596455);\n@@ -2818,27 +2804,6 @@ public void createEmbeddableContainingRelationWithGeneratedKey()\n         em.close();\n     }\n \n-    /*\n-     * This method uses the mapping tool to regenerate Oracle db artifacts\n-     * with the useTriggersForAutoAssign db option enabled.\n-     */\n-    private void recreateOracleArtifacts(OracleDictionary dict,\n-        JDBCConfiguration conf) throws IOException, SQLException {\n-        dict.useTriggersForAutoAssign = true;\n-        Flags flags = new MappingTool.Flags();\n-        flags.dropTables = true;\n-        flags.schemaAction = \"drop,add\";\n-        flags.sequences = true;\n-        flags.ignoreErrors = true;\n-        flags.dropSequences = true;\n-        MappingTool.run(\n-            conf,\n-            new String[] { \"org.apache.openjpa.persistence.embed.Book\" },\n-            flags,\n-            conf.getClassResolverInstance().\n-            getClassLoader(MappingTool.class, null));\n-    }\n-\n     /*\n      * EntityA_Embed_Complex routines\n      */"}]}

