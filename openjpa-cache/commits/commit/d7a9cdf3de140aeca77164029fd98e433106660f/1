{"sha":"d7a9cdf3de140aeca77164029fd98e433106660f","node_id":"MDY6Q29tbWl0MjA2MzY0OmQ3YTljZGYzZGUxNDBhZWNhNzcxNjQwMjlmZDk4ZTQzMzEwNjY2MGY=","commit":{"author":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2010-07-07T18:10:25Z"},"committer":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2010-07-07T18:10:25Z"},"message":"OPENJPA-1715: OpenJPA generates wrong SQL if a result variable that references an aggregate expression is used in ORDER BY clause\nadd testcase.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@961449 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2006da949a8d5e60f3790b0aa226314993c0b68f","url":"https://api.github.com/repos/apache/openjpa/git/trees/2006da949a8d5e60f3790b0aa226314993c0b68f"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/d7a9cdf3de140aeca77164029fd98e433106660f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/d7a9cdf3de140aeca77164029fd98e433106660f","html_url":"https://github.com/apache/openjpa/commit/d7a9cdf3de140aeca77164029fd98e433106660f","comments_url":"https://api.github.com/repos/apache/openjpa/commits/d7a9cdf3de140aeca77164029fd98e433106660f/comments","author":null,"committer":null,"parents":[{"sha":"ae5c2c881ee5db3ac64c07a014ed5eaecd5c33d4","url":"https://api.github.com/repos/apache/openjpa/commits/ae5c2c881ee5db3ac64c07a014ed5eaecd5c33d4","html_url":"https://github.com/apache/openjpa/commit/ae5c2c881ee5db3ac64c07a014ed5eaecd5c33d4"}],"stats":{"total":17,"additions":17,"deletions":0},"files":[{"sha":"ccf46bc56125b6278502ae6c8d2b9525cfb16afd","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/expressions/TestJPQLScalarExpressions.java","status":"modified","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/apache/openjpa/blob/d7a9cdf3de140aeca77164029fd98e433106660f/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/expressions/TestJPQLScalarExpressions.java","raw_url":"https://github.com/apache/openjpa/raw/d7a9cdf3de140aeca77164029fd98e433106660f/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/expressions/TestJPQLScalarExpressions.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/expressions/TestJPQLScalarExpressions.java?ref=d7a9cdf3de140aeca77164029fd98e433106660f","patch":"@@ -20,6 +20,7 @@\n \n import java.util.List;\n import javax.persistence.EntityManager;\n+import javax.persistence.Query;\n \n import org.apache.openjpa.persistence.common.apps.*;\n import org.apache.openjpa.persistence.common.utils.AbstractTestCase;\n@@ -69,6 +70,22 @@ public void setUp() {\n         endEm(em);\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n+    public void testAggregateResultVariable() {\n+        EntityManager em = currentEntityManager();\n+        String querys[] = {\n+            \"SELECT c.name as name, SUM(c.age) as sage FROM CompUser c group by c.name order by sage desc, name\",\n+            \"SELECT c.name, AVG(c.age) as age FROM CompUser c group by c.name order by age desc, c.name\",\n+        };\n+        for (int i = 0; i < querys.length; i++) {\n+            Query query = em.createQuery(querys[i]);\n+            query.setFirstResult(1);\n+            query.setMaxResults(4);\n+            List<Object[]> rs = query.getResultList();\n+            assertTrue((Long)((Object[]) rs.get(0))[1] > 0);\n+        }\n+    }\n+\n     @SuppressWarnings(\"unchecked\")\n     public void testMathAndAggregate() {\n         EntityManager em = currentEntityManager();"}]}

