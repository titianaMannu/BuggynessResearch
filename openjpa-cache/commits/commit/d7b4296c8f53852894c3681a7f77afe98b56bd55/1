{"sha":"d7b4296c8f53852894c3681a7f77afe98b56bd55","node_id":"MDY6Q29tbWl0MjA2MzY0OmQ3YjQyOTZjOGY1Mzg1Mjg5NGMzNjgxYTdmNzdhZmU5OGI1NmJkNTU=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-09-12T02:49:29Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-09-12T02:49:29Z"},"message":"Failed Oracle test on bad column name 'date'.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@814105 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"b655bcac801a7f98cf69b3909f7d84a7a5112476","url":"https://api.github.com/repos/apache/openjpa/git/trees/b655bcac801a7f98cf69b3909f7d84a7a5112476"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/d7b4296c8f53852894c3681a7f77afe98b56bd55","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/d7b4296c8f53852894c3681a7f77afe98b56bd55","html_url":"https://github.com/apache/openjpa/commit/d7b4296c8f53852894c3681a7f77afe98b56bd55","comments_url":"https://api.github.com/repos/apache/openjpa/commits/d7b4296c8f53852894c3681a7f77afe98b56bd55/comments","author":null,"committer":null,"parents":[{"sha":"fb34e0a0ec80346278678c39d2549d6752c119fd","url":"https://api.github.com/repos/apache/openjpa/commits/fb34e0a0ec80346278678c39d2549d6752c119fd","html_url":"https://github.com/apache/openjpa/commit/fb34e0a0ec80346278678c39d2549d6752c119fd"}],"stats":{"total":18,"additions":11,"deletions":7},"files":[{"sha":"a0c9f76783a5ef3813e10b25d6570d2510333e8c","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/results/Order.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/d7b4296c8f53852894c3681a7f77afe98b56bd55/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/results/Order.java","raw_url":"https://github.com/apache/openjpa/raw/d7b4296c8f53852894c3681a7f77afe98b56bd55/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/results/Order.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/results/Order.java?ref=d7b4296c8f53852894c3681a7f77afe98b56bd55","patch":"@@ -23,6 +23,7 @@\n import java.util.Set;\n \n import javax.persistence.CascadeType;\n+import javax.persistence.Column;\n import javax.persistence.Entity;\n import javax.persistence.Id;\n import javax.persistence.ManyToOne;\n@@ -35,6 +36,7 @@\n     @Id\n     long id;\n     boolean filled;\n+    @Column(name=\"CDATE\")\n     Date date;\n \n     @OneToMany(cascade=CascadeType.PERSIST)"},{"sha":"eb3c9f3698a4fbf73f4e235347563910dc51d55f","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/results/TestTypedResults.java","status":"modified","additions":9,"deletions":7,"changes":16,"blob_url":"https://github.com/apache/openjpa/blob/d7b4296c8f53852894c3681a7f77afe98b56bd55/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/results/TestTypedResults.java","raw_url":"https://github.com/apache/openjpa/raw/d7b4296c8f53852894c3681a7f77afe98b56bd55/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/results/TestTypedResults.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/results/TestTypedResults.java?ref=d7b4296c8f53852894c3681a7f77afe98b56bd55","patch":"@@ -21,6 +21,7 @@\n \n import java.text.DateFormat;\n import java.text.ParseException;\n+import java.util.Date;\n import java.util.HashSet;\n import java.util.List;\n \n@@ -140,28 +141,29 @@ public void testTypedJPQLQuery() {\n      */\n     public void testDateQuery() throws Exception {\n         EntityManager em = emf.createEntityManager();\n-\n+        Date maxDate = df.parse(ORDER_DATES[2]);\n+        \n         Query jpqlQuery = em.createQuery(\"Select o from Order o where o.date < :maxDate\");\n-        jpqlQuery.setParameter(\"maxDate\", df.parse(ORDER_DATES[2]));\n+        jpqlQuery.setParameter(\"maxDate\", maxDate);\n         List<Order> jpqlResults = jpqlQuery.getResultList();\n         assertEquals(N_ORDERS / 2, jpqlResults.size());\n \n         TypedQuery<Order> typedJpqlQuery = em.createQuery(\"Select o from Order o where o.date < :maxDate\", Order.class);\n-        typedJpqlQuery.setParameter(\"maxDate\", df.parse(ORDER_DATES[2]));\n+        typedJpqlQuery.setParameter(\"maxDate\", maxDate);\n         List<Order> typedJpqlResults = typedJpqlQuery.getResultList();\n         assertEquals(N_ORDERS / 2, typedJpqlResults.size());\n \n         QueryBuilder qb = em.getQueryBuilder();\n         CriteriaQuery<Order> criteriaQuery = qb.createQuery(Order.class);\n         Root<Order> order = criteriaQuery.from(Order.class);\n-        criteriaQuery.select(order).where(qb.lessThan(order.get(Order_.date), df.parse(ORDER_DATES[2])));\n+        criteriaQuery.select(order).where(qb.lessThan(order.get(Order_.date), qb.parameter(Date.class, \"maxDate\")));\n         TypedQuery<Order> tq = em.createQuery(criteriaQuery);\n+        tq.setParameter(\"maxDate\", maxDate);\n         List<Order> criteriaResults = tq.getResultList();\n         assertEquals(N_ORDERS / 2, criteriaResults.size());\n \n-        String parm = new java.sql.Timestamp(df.parse(ORDER_DATES[2]).getTime()).toString();\n-        Query nativeQuery =\n-            em.createNativeQuery(\"Select * from CRIT_RES_ORD o WHERE (o.date < '\" + parm + \"')\", Order.class);\n+        Query nativeQuery = em.createNativeQuery(\"Select * from CRIT_RES_ORD o WHERE (o.cdate < ?1)\", Order.class);\n+        nativeQuery.setParameter(1, maxDate);\n         List<Order> nativeResults = nativeQuery.getResultList();\n         assertEquals(N_ORDERS / 2, nativeResults.size());\n "}]}

