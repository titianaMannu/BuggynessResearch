{"sha":"d8ef5c17921a5e410cfb1fe7bfd1670d1f3b5229","node_id":"MDY6Q29tbWl0MjA2MzY0OmQ4ZWY1YzE3OTIxYTVlNDEwY2ZiMWZlN2JmZDE2NzBkMWYzYjUyMjk=","commit":{"author":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2009-12-21T16:44:27Z"},"committer":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2009-12-21T16:44:27Z"},"message":"OPENJPA-993: PersistenceProductDerivation.getAnchorsInxxx(..) should only return PUs that belong to OpenJPA.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@892877 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"b15e47cc13bce417c3d6cfc6ba3b66deb78c6c96","url":"https://api.github.com/repos/apache/openjpa/git/trees/b15e47cc13bce417c3d6cfc6ba3b66deb78c6c96"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/d8ef5c17921a5e410cfb1fe7bfd1670d1f3b5229","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/d8ef5c17921a5e410cfb1fe7bfd1670d1f3b5229","html_url":"https://github.com/apache/openjpa/commit/d8ef5c17921a5e410cfb1fe7bfd1670d1f3b5229","comments_url":"https://api.github.com/repos/apache/openjpa/commits/d8ef5c17921a5e410cfb1fe7bfd1670d1f3b5229/comments","author":null,"committer":null,"parents":[{"sha":"d189eac9dd6dd756643c3edce6932c56c87fb9a4","url":"https://api.github.com/repos/apache/openjpa/commits/d189eac9dd6dd756643c3edce6932c56c87fb9a4","html_url":"https://github.com/apache/openjpa/commit/d189eac9dd6dd756643c3edce6932c56c87fb9a4"}],"stats":{"total":27,"additions":25,"deletions":2},"files":[{"sha":"92f4975a1d1fbe08cfea1b83605423c5e3c11f89","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java","status":"modified","additions":18,"deletions":2,"changes":20,"blob_url":"https://github.com/apache/openjpa/blob/d8ef5c17921a5e410cfb1fe7bfd1670d1f3b5229/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java","raw_url":"https://github.com/apache/openjpa/raw/d8ef5c17921a5e410cfb1fe7bfd1670d1f3b5229/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProductDerivation.java?ref=d8ef5c17921a5e410cfb1fe7bfd1670d1f3b5229","patch":"@@ -93,6 +93,14 @@\n \n     private HashMap<String, PUNameCollision> _puNameCollisions\n         = new HashMap<String,PUNameCollision>();\n+    \n+    // Provider name to filter out PUs that don't belong to this derivation.\n+    protected String _providerImplName;\n+\n+\tpublic PersistenceProductDerivation() {\n+\t\t_providerImplName = PersistenceProviderImpl.class.getName();\n+\t}\n+    \n     public void putBrokerFactoryAliases(Map m) {\n     }\n \n@@ -331,8 +339,16 @@ public List getAnchorsInFile(File file) throws IOException {\n     private List<String> getUnitNames(ConfigurationParser parser) {\n         List<PersistenceUnitInfoImpl> units = parser.getResults();\n         List<String> names = new ArrayList<String>();\n-        for (PersistenceUnitInfoImpl unit : units)\n-            names.add(unit.getPersistenceUnitName());\n+        for (PersistenceUnitInfoImpl unit : units){\n+        \tString provider = unit.getPersistenceProviderClassName();\n+\t\t\t// Only add the PU name if the provider it is ours or not specified.\n+\t\t\tif (provider == null || provider.equals(_providerImplName)) {\n+\t\t\t\tnames.add(unit.getPersistenceUnitName());\n+\t\t\t} else {\n+\t\t\t\t// Should trace something, but logging isn't configured yet.\n+\t\t\t\t// Swallow.\n+\t\t\t}\n+        }\n         return names;\n     }\n "},{"sha":"4d81080aa270f2a779a72559493bbb45e7493c8f","filename":"openjpa-persistence/src/test/java/org/apache/openjpa/persistence/TestPersistenceProductDerivation.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/d8ef5c17921a5e410cfb1fe7bfd1670d1f3b5229/openjpa-persistence/src/test/java/org/apache/openjpa/persistence/TestPersistenceProductDerivation.java","raw_url":"https://github.com/apache/openjpa/raw/d8ef5c17921a5e410cfb1fe7bfd1670d1f3b5229/openjpa-persistence/src/test/java/org/apache/openjpa/persistence/TestPersistenceProductDerivation.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/test/java/org/apache/openjpa/persistence/TestPersistenceProductDerivation.java?ref=d8ef5c17921a5e410cfb1fe7bfd1670d1f3b5229","patch":"@@ -111,6 +111,9 @@ public void testGetAnchorsInResource()throws Exception {\n         List<String> actual = ppd.getAnchorsInResource(\"META-INF/persistence.xml\");\n         \n         assertTrue(actual.containsAll(expectedPUs));\n+        \n+        // Added for OPENJPA-993\n+        assertFalse(actual.contains(\"bad_provider\"));\n     }\n     public void testEncryptionPluginConfiguration() throws Exception {\n \t\tPersistenceProductDerivation ppd = new PersistenceProductDerivation();"},{"sha":"b52dee396b8e7c5309178413432c167cc710990b","filename":"openjpa-persistence/src/test/resources/META-INF/persistence.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/d8ef5c17921a5e410cfb1fe7bfd1670d1f3b5229/openjpa-persistence/src/test/resources/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/d8ef5c17921a5e410cfb1fe7bfd1670d1f3b5229/openjpa-persistence/src/test/resources/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/test/resources/META-INF/persistence.xml?ref=d8ef5c17921a5e410cfb1fe7bfd1670d1f3b5229","patch":"@@ -43,4 +43,8 @@\n     <persistence-unit name=\"exclude_true\">\n         <exclude-unlisted-classes>true</exclude-unlisted-classes>\n     </persistence-unit>\n+    <!-- Added for OPENJPA-993 -->\n+    <persistence-unit name=\"bad_provider\">\n+        <provider>void</provider>\n+    </persistence-unit>    \n </persistence>"}]}

