{"sha":"d965db72710b34fb1547dc616caedaaf75af565e","node_id":"MDY6Q29tbWl0MjA2MzY0OmQ5NjVkYjcyNzEwYjM0ZmIxNTQ3ZGM2MTZjYWVkYWFmNzVhZjU2NWU=","commit":{"author":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2008-06-11T03:03:16Z"},"committer":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2008-06-11T03:03:16Z"},"message":"OPENJPA-634 Batched updates resulted in SQLException was not propagated back to users application\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@666512 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"57f02d5c667309f16c156422a7da53a99778a648","url":"https://api.github.com/repos/apache/openjpa/git/trees/57f02d5c667309f16c156422a7da53a99778a648"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/d965db72710b34fb1547dc616caedaaf75af565e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/d965db72710b34fb1547dc616caedaaf75af565e","html_url":"https://github.com/apache/openjpa/commit/d965db72710b34fb1547dc616caedaaf75af565e","comments_url":"https://api.github.com/repos/apache/openjpa/commits/d965db72710b34fb1547dc616caedaaf75af565e/comments","author":null,"committer":null,"parents":[{"sha":"63c48992274fce84b2c08bf8bbe6df024736557c","url":"https://api.github.com/repos/apache/openjpa/commits/63c48992274fce84b2c08bf8bbe6df024736557c","html_url":"https://github.com/apache/openjpa/commit/63c48992274fce84b2c08bf8bbe6df024736557c"}],"stats":{"total":48,"additions":41,"deletions":7},"files":[{"sha":"664c61c12961a62d3906d591d01b61eacf7ec9f8","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/BatchingConstraintUpdateManager.java","status":"modified","additions":20,"deletions":3,"changes":23,"blob_url":"https://github.com/apache/openjpa/blob/d965db72710b34fb1547dc616caedaaf75af565e/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/BatchingConstraintUpdateManager.java","raw_url":"https://github.com/apache/openjpa/raw/d965db72710b34fb1547dc616caedaaf75af565e/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/BatchingConstraintUpdateManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/BatchingConstraintUpdateManager.java?ref=d965db72710b34fb1547dc616caedaaf75af565e","patch":"@@ -19,9 +19,12 @@\n package org.apache.openjpa.jdbc.kernel;\n \n import java.sql.Connection;\n+import java.sql.SQLException;\n import java.util.Collection;\n \n import org.apache.openjpa.jdbc.sql.RowManager;\n+import org.apache.openjpa.jdbc.sql.SQLExceptions;\n+import org.apache.openjpa.util.OpenJPAException;\n \n /**\n  * <P>Batch update manager that writes the SQL in object-level operation order. \n@@ -53,10 +56,24 @@ protected PreparedStatementManager newPreparedStatementManager(\n      */\n     protected Collection flush(RowManager rowMgr,\n         PreparedStatementManager psMgr, Collection exceps) {\n-        Collection rtnCol = super.flush(rowMgr, psMgr, exceps);\n+        super.flush(rowMgr, psMgr, exceps);\n         BatchingPreparedStatementManagerImpl bPsMgr =\n             (BatchingPreparedStatementManagerImpl) psMgr;\n-        bPsMgr.flushBatch();\n-        return rtnCol;\n+        try {\n+            bPsMgr.flushBatch();\n+        } catch (SQLException se) {\n+            exceps = addException(exceps, SQLExceptions.getStore(se, dict));\n+        } catch (OpenJPAException ke) {\n+            exceps = addException(exceps, ke);\n+        }\n+\n+        // return all exceptions\n+        Collection psExceps = psMgr.getExceptions();\n+        if (exceps == null)\n+            return psExceps;\n+        if (psExceps == null)\n+            return exceps;\n+        exceps.addAll(psExceps);\n+        return exceps;\n     }\n }"},{"sha":"53f277eac3da239b2e4db57a5463813132bc87fa","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/BatchingOperationOrderUpdateManager.java","status":"modified","additions":20,"deletions":3,"changes":23,"blob_url":"https://github.com/apache/openjpa/blob/d965db72710b34fb1547dc616caedaaf75af565e/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/BatchingOperationOrderUpdateManager.java","raw_url":"https://github.com/apache/openjpa/raw/d965db72710b34fb1547dc616caedaaf75af565e/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/BatchingOperationOrderUpdateManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/BatchingOperationOrderUpdateManager.java?ref=d965db72710b34fb1547dc616caedaaf75af565e","patch":"@@ -19,9 +19,12 @@\n package org.apache.openjpa.jdbc.kernel;\n \n import java.sql.Connection;\n+import java.sql.SQLException;\n import java.util.Collection;\n \n import org.apache.openjpa.jdbc.sql.RowManager;\n+import org.apache.openjpa.jdbc.sql.SQLExceptions;\n+import org.apache.openjpa.util.OpenJPAException;\n \n /**\n  * <P>Batch update manager that writes the SQL in object-level operation order. \n@@ -55,10 +58,24 @@ protected PreparedStatementManager newPreparedStatementManager(\n      */\n     protected Collection flush(RowManager rowMgr,\n         PreparedStatementManager psMgr, Collection exceps) {\n-        Collection rtnCol = super.flush(rowMgr, psMgr, exceps);\n+        super.flush(rowMgr, psMgr, exceps);\n         BatchingPreparedStatementManagerImpl bPsMgr = \n             (BatchingPreparedStatementManagerImpl) psMgr;\n-        bPsMgr.flushBatch();\n-        return rtnCol;\n+        try {\n+            bPsMgr.flushBatch();\n+        } catch (SQLException se) {\n+            exceps = addException(exceps, SQLExceptions.getStore(se, dict));\n+        } catch (OpenJPAException ke) {\n+            exceps = addException(exceps, ke);\n+        }\n+\n+        // return all exceptions\n+        Collection psExceps = psMgr.getExceptions();\n+        if (exceps == null)\n+            return psExceps;\n+        if (psExceps == null)\n+            return exceps;\n+        exceps.addAll(psExceps);\n+        return exceps;\n     }\n }"},{"sha":"ba25c0d8de89f44f9a1bcd6b8a84756926e95a4b","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/BatchingPreparedStatementManagerImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/d965db72710b34fb1547dc616caedaaf75af565e/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/BatchingPreparedStatementManagerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/d965db72710b34fb1547dc616caedaaf75af565e/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/BatchingPreparedStatementManagerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/BatchingPreparedStatementManagerImpl.java?ref=d965db72710b34fb1547dc616caedaaf75af565e","patch":"@@ -138,7 +138,7 @@ private boolean isBatchDisabled(RowImpl row) {\n      * flush all cached up statements to be executed as a single or batched\n      * prepared statements.\n      */\n-    protected void flushBatch() {\n+    protected void flushBatch() throws SQLException {\n         List batchedRows = getBatchedRows();\n         String batchedSql = getBatchedSql();\n         if (batchedRows == null)"}]}

