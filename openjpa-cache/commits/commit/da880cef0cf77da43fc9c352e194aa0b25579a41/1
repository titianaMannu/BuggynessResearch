{"sha":"da880cef0cf77da43fc9c352e194aa0b25579a41","node_id":"MDY6Q29tbWl0MjA2MzY0OmRhODgwY2VmMGNmNzdkYTQzZmM5YzM1MmUxOTRhYTBiMjU1NzlhNDE=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2009-06-22T18:03:38Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2009-06-22T18:03:38Z"},"message":"OPENJPA-873 committing patch from Jody Grassel based on Fay's changes for trunk & 1.3.x\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/1.0.x@787334 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"74dda88eea4ed8632cb04388a36a09b5c59d8889","url":"https://api.github.com/repos/apache/openjpa/git/trees/74dda88eea4ed8632cb04388a36a09b5c59d8889"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/da880cef0cf77da43fc9c352e194aa0b25579a41","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/da880cef0cf77da43fc9c352e194aa0b25579a41","html_url":"https://github.com/apache/openjpa/commit/da880cef0cf77da43fc9c352e194aa0b25579a41","comments_url":"https://api.github.com/repos/apache/openjpa/commits/da880cef0cf77da43fc9c352e194aa0b25579a41/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"40fe708785cb0f761121e813aa61676bfd656787","url":"https://api.github.com/repos/apache/openjpa/commits/40fe708785cb0f761121e813aa61676bfd656787","html_url":"https://github.com/apache/openjpa/commit/40fe708785cb0f761121e813aa61676bfd656787"}],"stats":{"total":316,"additions":315,"deletions":1},"files":[{"sha":"ad1ef7e5bfceeaec360feb5f5f6197ea4f7a3935","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/ClassMetaData.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/da880cef0cf77da43fc9c352e194aa0b25579a41/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ClassMetaData.java","raw_url":"https://github.com/apache/openjpa/raw/da880cef0cf77da43fc9c352e194aa0b25579a41/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ClassMetaData.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ClassMetaData.java?ref=da880cef0cf77da43fc9c352e194aa0b25579a41","patch":"@@ -1874,10 +1874,13 @@ private void validateAppIdClass() {\n         if (_super != null) {\n             // concrete superclass oids must match or be parent of ours\n             ClassMetaData sup = getPCSuperclassMetaData();\n-            if (!sup.getObjectIdType().isAssignableFrom(_objectId))\n+            Class objectIdType = sup.getObjectIdType();\n+            if (objectIdType != null &&\n+                !objectIdType.isAssignableFrom(_objectId)) {\n                 throw new MetaDataException(_loc.get(\"id-classes\",\n                     new Object[]{ _type, _objectId, _super,\n                         sup.getObjectIdType() }));\n+            }\n \n             // validate that no other pks are declared if we have a\n             // concrete PC superclass"},{"sha":"63499c417d931a6282be372010a704c50dba9818","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/BaseEntity.java","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/apache/openjpa/blob/da880cef0cf77da43fc9c352e194aa0b25579a41/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/BaseEntity.java","raw_url":"https://github.com/apache/openjpa/raw/da880cef0cf77da43fc9c352e194aa0b25579a41/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/BaseEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/BaseEntity.java?ref=da880cef0cf77da43fc9c352e194aa0b25579a41","patch":"@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.inheritance.mappedsuperclass;\n+\n+\n+/**\n+ * Entity used to test MappedSuperClass which does not have IdClass. \n+ * \n+ * Test case and domain classes were originally part of the reported issue\n+ * <A href=\"https://issues.apache.org/jira/browse/OPENJPA-873\">OPENJPA-873</A>\n+ *  \n+ * @author pioneer_ip@yahoo.com\n+ * @author Fay Wang\n+ *\n+ */\n+public class BaseEntity {\n+\n+}"},{"sha":"97663e7934f65121579a33459cfbf578df4b318e","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/CashBaseEntity.java","status":"added","additions":89,"deletions":0,"changes":89,"blob_url":"https://github.com/apache/openjpa/blob/da880cef0cf77da43fc9c352e194aa0b25579a41/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/CashBaseEntity.java","raw_url":"https://github.com/apache/openjpa/raw/da880cef0cf77da43fc9c352e194aa0b25579a41/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/CashBaseEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/CashBaseEntity.java?ref=da880cef0cf77da43fc9c352e194aa0b25579a41","patch":"@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.inheritance.mappedsuperclass;\n+\n+import java.util.Date;\n+\n+import javax.persistence.*;\n+\n+/**\n+ * Entity used to test MappedSuperClass which does not have IdClass. \n+ * \n+ * Test case and domain classes were originally part of the reported issue\n+ * <A href=\"https://issues.apache.org/jira/browse/OPENJPA-873\">OPENJPA-873</A>\n+ *  \n+ * @author pioneer_ip@yahoo.com\n+ * @author Fay Wang\n+ *\n+ */\n+\n+@MappedSuperclass\n+public abstract class CashBaseEntity extends BaseEntity{\n+    @Column(name=\"TRCCRUI\")\n+    private String createUser;\n+\n+    @Column(name=\"TRCCRTS\")\n+    private Date createTime;\n+\n+    @Column(name=\"TRCLUUID\")\n+    private String updateUser;\n+\n+    @Column(name=\"TRCLUTS\")\n+    private Date updateTime;\n+\n+    @Version\n+    @Column(name=\"TRCVER\")\n+    private int version;\n+\n+    public String getCreateUser() {\n+        return createUser;\n+    }\n+    \n+    public void setCreateUser(String createUser) {\n+        this.createUser = createUser;\n+    }\n+    \n+    public Date getCreateTime() {\n+        return createTime;\n+    }\n+    \n+    public void setCreateTime(Date createTime) {\n+        this.createTime = createTime;\n+    }\n+    \n+    public String getUpdateUser() {\n+        return updateUser;\n+    }\n+    \n+    public void setUpdateUser(String updateUser) {\n+        this.updateUser = updateUser;\n+    }\n+\n+    public int getVersion() {\n+        return version;\n+    }\n+    \n+    public Date getUpdateTime() {\n+        return updateTime;\n+    }\n+    \n+    public void setUpdateTime(Date updateTime) {\n+        this.updateTime = updateTime;\n+    }\n+}"},{"sha":"2988f9ad21445b613f0602bc9ddc5f5c8adeb565","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/SituationDA.java","status":"added","additions":92,"deletions":0,"changes":92,"blob_url":"https://github.com/apache/openjpa/blob/da880cef0cf77da43fc9c352e194aa0b25579a41/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/SituationDA.java","raw_url":"https://github.com/apache/openjpa/raw/da880cef0cf77da43fc9c352e194aa0b25579a41/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/SituationDA.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/SituationDA.java?ref=da880cef0cf77da43fc9c352e194aa0b25579a41","patch":"@@ -0,0 +1,92 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.inheritance.mappedsuperclass;\n+\n+import javax.persistence.*;\n+\n+/**\n+ * Entity used to test MappedSuperClass which does not have IdClass. \n+ * \n+ * Test case and domain classes were originally part of the reported issue\n+ * <A href=\"https://issues.apache.org/jira/browse/OPENJPA-873\">OPENJPA-873</A>\n+ *  \n+ * @author pioneer_ip@yahoo.com\n+ * @author Fay Wang\n+ *\n+ */\n+\n+@Entity\n+@Table (name = \"cc2SITUATION\")\n+@IdClass(SituationDA.SituationId.class)\n+public class SituationDA extends CashBaseEntity {\n+   \n+    @Id\n+    @Column(name=\"C2008SRL\")\n+    private String cashBoxPeriodSerial;\n+   \n+    @Id\n+    @Column(name=\"C2012TYPE\")\n+    private short type;\n+    \n+    public static class SituationId implements java.io.Serializable{\n+        private static final long serialVersionUID = 1L;\n+        private String cashBoxPeriodSerial;\n+        private short type;\n+       \n+        public SituationId(){}\n+        \n+        public SituationId(String cashBoxPeriodSerial, short type){\n+            this.cashBoxPeriodSerial = cashBoxPeriodSerial;\n+            this.type = type;\n+        }\n+        \n+        \n+        public boolean equals(Object other){\n+            if (other instanceof SituationId) {\n+                final SituationId otherId = (SituationId)other;\n+                return ( otherId.cashBoxPeriodSerial.equals(\n+                    this.cashBoxPeriodSerial) && otherId.type == this.type );\n+                }\n+                return false;   \n+        }\n+       \n+        public int hashCode() {\n+            return super.hashCode();\n+        }\n+    }\n+    \n+    public short getType() {\n+        return type;\n+    }\n+    \n+    public void setType(short type) {\n+        this.type = type;\n+    }\n+    \n+    public String getCashBoxPeriodSerial() {\n+        return cashBoxPeriodSerial;\n+    }\n+    \n+    public void setCashBoxPeriodSerial(String cashBoxPeriodSerial) {\n+        this.cashBoxPeriodSerial = cashBoxPeriodSerial;\n+    }\n+    \n+}\n+\n+"},{"sha":"c0c2fe9e01d60e2825de8a336d6098f9dd869d4b","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/TestMappedSuperClass.java","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/apache/openjpa/blob/da880cef0cf77da43fc9c352e194aa0b25579a41/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/TestMappedSuperClass.java","raw_url":"https://github.com/apache/openjpa/raw/da880cef0cf77da43fc9c352e194aa0b25579a41/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/TestMappedSuperClass.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/TestMappedSuperClass.java?ref=da880cef0cf77da43fc9c352e194aa0b25579a41","patch":"@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.inheritance.mappedsuperclass;\n+\n+import javax.persistence.EntityManager;\n+\n+import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n+\n+/**\n+ * Test case and domain classes were originally part of the reported issue\n+ * <A href=\"https://issues.apache.org/jira/browse/OPENJPA-873\">OPENJPA-873</A>\n+ *  \n+ * @author pioneer_ip@yahoo.com\n+ * @author Fay Wang\n+ *\n+ */\n+public class TestMappedSuperClass extends SingleEMFTestCase {\n+\n+    public void setUp() {\n+        setUp(CashBaseEntity.class, \n+              SituationDA.class, ValuableItemDA.class);\n+    }\n+\n+    public void testMappedSuperClass() {\n+        EntityManager em = emf.createEntityManager();\n+        em.getTransaction().begin();\n+        SituationDA s = new SituationDA();\n+        s.setCashBoxPeriodSerial(\"test\");\n+        s.setType((short)1);\n+        em.persist(s);\n+        em.getTransaction().commit();\n+    }\n+}"},{"sha":"7e0eac1e92310c84c27d1573e26183c596d8d273","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/ValuableItemDA.java","status":"added","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/apache/openjpa/blob/da880cef0cf77da43fc9c352e194aa0b25579a41/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/ValuableItemDA.java","raw_url":"https://github.com/apache/openjpa/raw/da880cef0cf77da43fc9c352e194aa0b25579a41/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/ValuableItemDA.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/ValuableItemDA.java?ref=da880cef0cf77da43fc9c352e194aa0b25579a41","patch":"@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.inheritance.mappedsuperclass;\n+\n+import javax.persistence.*;\n+\n+/**\n+ * Entity used to test MappedSuperClass which does not have IdClass. \n+ * \n+ * Test case and domain classes were originally part of the reported issue\n+ * <A href=\"https://issues.apache.org/jira/browse/OPENJPA-873\">OPENJPA-873</A>\n+ *  \n+ * @author pioneer_ip@yahoo.com\n+ * @author Fay Wang\n+ *\n+ */\n+@Entity\n+@Table (name = \"CF2VLUITEM\")\n+public class ValuableItemDA extends CashBaseEntity {\n+    @Id\n+    @Column(name=\"C2001COD\")\n+    private short code;\n+\n+    public void setCode(short code) {\n+        this.code = code;\n+    }\n+    \n+    public short getCode() {\n+        return code;\n+    }\n+}\n\\ No newline at end of file"}]}

