{"sha":"dbf7ab273e954f11b4b89052483ad7d652604320","node_id":"MDY6Q29tbWl0MjA2MzY0OmRiZjdhYjI3M2U5NTRmMTFiNGI4OTA1MjQ4M2FkN2Q2NTI2MDQzMjA=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-07-25T16:30:59Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-07-25T16:30:59Z"},"message":"Simple test case for lifecycle listener support.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@559515 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"111f3ff60619de23ee003635335e9b7127d28c80","url":"https://api.github.com/repos/apache/openjpa/git/trees/111f3ff60619de23ee003635335e9b7127d28c80"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/dbf7ab273e954f11b4b89052483ad7d652604320","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/dbf7ab273e954f11b4b89052483ad7d652604320","html_url":"https://github.com/apache/openjpa/commit/dbf7ab273e954f11b4b89052483ad7d652604320","comments_url":"https://api.github.com/repos/apache/openjpa/commits/dbf7ab273e954f11b4b89052483ad7d652604320/comments","author":null,"committer":null,"parents":[{"sha":"b50530274b695420b35c1119df83b6720b78321d","url":"https://api.github.com/repos/apache/openjpa/commits/b50530274b695420b35c1119df83b6720b78321d","html_url":"https://github.com/apache/openjpa/commit/b50530274b695420b35c1119df83b6720b78321d"}],"stats":{"total":59,"additions":59,"deletions":0},"files":[{"sha":"ece282a686409f9b42f008587fa06197279b9339","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/event/TestLifecycleListener.java","status":"added","additions":59,"deletions":0,"changes":59,"blob_url":"https://github.com/apache/openjpa/blob/dbf7ab273e954f11b4b89052483ad7d652604320/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/event/TestLifecycleListener.java","raw_url":"https://github.com/apache/openjpa/raw/dbf7ab273e954f11b4b89052483ad7d652604320/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/event/TestLifecycleListener.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/event/TestLifecycleListener.java?ref=dbf7ab273e954f11b4b89052483ad7d652604320","patch":"@@ -0,0 +1,59 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.openjpa.event;\r\n+\r\n+import javax.persistence.EntityManager;\r\n+\r\n+import org.apache.openjpa.persistence.test.SingleEMTestCase;\r\n+import org.apache.openjpa.persistence.test.SingleEMFTestCase;\r\n+import org.apache.openjpa.persistence.simple.AllFieldTypes;\r\n+\r\n+public class TestLifecycleListener\r\n+    extends SingleEMFTestCase {\r\n+\r\n+    public void setUp() {\r\n+        setUp(AllFieldTypes.class, CLEAR_TABLES);\r\n+    }\r\n+\r\n+    public void testMutationsInLifecycleListener() {\r\n+        emf.addLifecycleListener(new AbstractLifecycleListener() {\r\n+            @Override\r\n+            public void beforePersist(LifecycleEvent event) {\r\n+                ((AllFieldTypes) event.getSource()).setLongField(17);\r\n+            }\r\n+        }, (Class[]) null);\r\n+\r\n+        AllFieldTypes aft = new AllFieldTypes();\r\n+        aft.setStringField(\"foo\");\r\n+        aft.setIntField(5);\r\n+\r\n+        EntityManager em = emf.createEntityManager();\r\n+        em.getTransaction().begin();\r\n+        em.persist(aft);\r\n+        em.getTransaction().commit();\r\n+        em.close();\r\n+\r\n+        em = emf.createEntityManager();\r\n+        aft = (AllFieldTypes) em.createQuery(\"select o from AllFieldTypes o\")\r\n+            .getSingleResult();\r\n+        // is changed in the listener impl\r\n+        assertEquals(17, aft.getLongField());\r\n+        em.close();\r\n+    }\r\n+}\n\\ No newline at end of file"}]}

