{"sha":"dc09b619548ae51e4b03625e723b3d7a8e5ff9ed","node_id":"MDY6Q29tbWl0MjA2MzY0OmRjMDliNjE5NTQ4YWU1MWU0YjAzNjI1ZTcyM2IzZDdhOGU1ZmY5ZWQ=","commit":{"author":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-10-06T17:13:21Z"},"committer":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-10-06T17:13:21Z"},"message":"Fixes from Kodo's 3.4 branch.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@453685 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"8ec78cb661d150725de4454b67371663e36abd30","url":"https://api.github.com/repos/apache/openjpa/git/trees/8ec78cb661d150725de4454b67371663e36abd30"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/dc09b619548ae51e4b03625e723b3d7a8e5ff9ed","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/dc09b619548ae51e4b03625e723b3d7a8e5ff9ed","html_url":"https://github.com/apache/openjpa/commit/dc09b619548ae51e4b03625e723b3d7a8e5ff9ed","comments_url":"https://api.github.com/repos/apache/openjpa/commits/dc09b619548ae51e4b03625e723b3d7a8e5ff9ed/comments","author":null,"committer":null,"parents":[{"sha":"c0c4c3c7385bc672b7b70bd3daf1ec9687bd5c3c","url":"https://api.github.com/repos/apache/openjpa/commits/c0c4c3c7385bc672b7b70bd3daf1ec9687bd5c3c","html_url":"https://github.com/apache/openjpa/commit/c0c4c3c7385bc672b7b70bd3daf1ec9687bd5c3c"}],"stats":{"total":16,"additions":14,"deletions":2},"files":[{"sha":"7cdd9da249e1070c3ed08380ff3c5b66cf8df1b8","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/dc09b619548ae51e4b03625e723b3d7a8e5ff9ed/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/dc09b619548ae51e4b03625e723b3d7a8e5ff9ed/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java?ref=dc09b619548ae51e4b03625e723b3d7a8e5ff9ed","patch":"@@ -119,6 +119,7 @@\n     protected static final int RANGE_POST_SELECT = 0;\n     protected static final int RANGE_PRE_DISTINCT = 1;\n     protected static final int RANGE_POST_DISTINCT = 2;\n+    protected static final int RANGE_POST_LOCK = 3;\n \n     protected static final int NANO = 1;\n     protected static final int MICRO = NANO * 1000;\n@@ -2142,6 +2143,8 @@ protected SQLBuffer toOperation(String op, SQLBuffer selects,\n             if (forUpdateClause != null)\n                 buf.append(\" \").append(forUpdateClause);\n         }\n+        if (range && rangePosition == RANGE_POST_LOCK)\n+            appendSelectRange(buf, start, end);\n         return buf;\n     }\n "},{"sha":"86c9a78d0af1294eb3786e17513b80bbbcf77e56","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/PostgresDictionary.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/dc09b619548ae51e4b03625e723b3d7a8e5ff9ed/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/PostgresDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/dc09b619548ae51e4b03625e723b3d7a8e5ff9ed/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/PostgresDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/PostgresDictionary.java?ref=dc09b619548ae51e4b03625e723b3d7a8e5ff9ed","patch":"@@ -95,6 +95,7 @@ public PostgresDictionary() {\n         maxIndexNameLength = 31;\n         maxConstraintNameLength = 31;\n         schemaCase = SCHEMA_CASE_LOWER;\n+        rangePosition = RANGE_POST_LOCK;\n         requiresAliasForSubselect = true;\n         allowsAliasInBulkClause = false;\n "},{"sha":"8abeb04e256d51515c17adf08fb6f1c7774e1212","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCDataGenerator.java","status":"modified","additions":9,"deletions":2,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/dc09b619548ae51e4b03625e723b3d7a8e5ff9ed/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCDataGenerator.java","raw_url":"https://github.com/apache/openjpa/raw/dc09b619548ae51e4b03625e723b3d7a8e5ff9ed/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCDataGenerator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCDataGenerator.java?ref=dc09b619548ae51e4b03625e723b3d7a8e5ff9ed","patch":"@@ -577,8 +577,8 @@ private void addLoadMethod(BCClass bc, ClassMetaData meta) {\n \n     private void addLoadWithFieldsMethod(BCClass bc, ClassMetaData meta) {\n         Code code = addLoadMethod(bc, true);\n-        // public void load(OpenJPAStateManager sm, FetchConfiguration fetch,\n-        // \t\tBitSet fields, Object conn)\n+        // public void load(OpenJPAStateManager sm, BitSet fields,\n+        // \t\tFetchConfiguration fetch, Object conn)\n         FieldMetaData[] fmds = meta.getFields();\n         Collection jumps = new LinkedList();\n         Collection jumps2;\n@@ -621,6 +621,13 @@ private void addLoadWithFieldsMethod(BCClass bc, ClassMetaData meta) {\n                 code.invokevirtual().setMethod(\"loadImplData\", void.class,\n                     new Class[]{ OpenJPAStateManager.class, int.class });\n             }\n+\n+            // fields.clear(i);\n+            code.aload().setParam(1);\n+            code.constant().setValue(i);\n+            code.invokevirtual().setMethod(BitSet.class, \"clear\", void.class,\n+                new Class[] { int.class });\n+\n             jumps2.add(code.go2());\n \n             if (intermediate)"},{"sha":"be68305ab7ae3d453648101bd5b785f5b674ddc9","filename":"openjpa-lib/src/test/java/org/apache/openjpa/lib/util/TestSimpleRegex.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/dc09b619548ae51e4b03625e723b3d7a8e5ff9ed/openjpa-lib/src/test/java/org/apache/openjpa/lib/util/TestSimpleRegex.java","raw_url":"https://github.com/apache/openjpa/raw/dc09b619548ae51e4b03625e723b3d7a8e5ff9ed/openjpa-lib/src/test/java/org/apache/openjpa/lib/util/TestSimpleRegex.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/test/java/org/apache/openjpa/lib/util/TestSimpleRegex.java?ref=dc09b619548ae51e4b03625e723b3d7a8e5ff9ed","patch":"@@ -57,6 +57,7 @@ public void testWildcards() {\n             \"TThe .*brown.*dogg\", false));\n \n         assertFalse(matchExpr(\"Yo Hellow\", \".*ello\", false));\n+        assertFalse(matchExpr(\"Hellow\", \".*YoHello\", false));\n     }\n \n     public static void main(String[] args) {"}]}

