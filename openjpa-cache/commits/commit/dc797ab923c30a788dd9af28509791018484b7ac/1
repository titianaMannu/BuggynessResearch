{"sha":"dc797ab923c30a788dd9af28509791018484b7ac","node_id":"MDY6Q29tbWl0MjA2MzY0OmRjNzk3YWI5MjNjMzBhNzg4ZGQ5YWYyODUwOTc5MTAxODQ4NGI3YWM=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-03-01T06:31:50Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-03-01T06:31:50Z"},"message":"OPENJPA-160. Non-finalizing implementation is automatically selected when createContainerEntityManagerFactory() is invoked; clarified some method signatures.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@513183 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"bc4d4dbec06296a6c2519f2ddd7aedeaad090d25","url":"https://api.github.com/repos/apache/openjpa/git/trees/bc4d4dbec06296a6c2519f2ddd7aedeaad090d25"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/dc797ab923c30a788dd9af28509791018484b7ac","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/dc797ab923c30a788dd9af28509791018484b7ac","html_url":"https://github.com/apache/openjpa/commit/dc797ab923c30a788dd9af28509791018484b7ac","comments_url":"https://api.github.com/repos/apache/openjpa/commits/dc797ab923c30a788dd9af28509791018484b7ac/comments","author":null,"committer":null,"parents":[{"sha":"661f673890c076b8d6532d5f704434bc508a1fe5","url":"https://api.github.com/repos/apache/openjpa/commits/661f673890c076b8d6532d5f704434bc508a1fe5","html_url":"https://github.com/apache/openjpa/commit/661f673890c076b8d6532d5f704434bc508a1fe5"}],"stats":{"total":53,"additions":34,"deletions":19},"files":[{"sha":"48137df45b16163ca7246685aae9969589775648","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/conf/BrokerValue.java","status":"modified","additions":8,"deletions":4,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/dc797ab923c30a788dd9af28509791018484b7ac/openjpa-kernel/src/main/java/org/apache/openjpa/conf/BrokerValue.java","raw_url":"https://github.com/apache/openjpa/raw/dc797ab923c30a788dd9af28509791018484b7ac/openjpa-kernel/src/main/java/org/apache/openjpa/conf/BrokerValue.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/conf/BrokerValue.java?ref=dc797ab923c30a788dd9af28509791018484b7ac","patch":"@@ -15,13 +15,17 @@\n public class BrokerValue \n     extends PluginValue {\n \n+    public static final String KEY = \"BrokerImpl\";\n+    public static final String NON_FINALIZING_ALIAS = \"non-finalizing\";\n+    public static final String DEFAULT_ALIAS = \"default\";\n+\n     private BrokerImpl _templateBroker;\n \n-    public BrokerValue(String prop) {\n-        super(prop, false);\n+    public BrokerValue() {\n+        super(KEY, false);\n         String[] aliases = new String[] {\n-            \"default\", FinalizingBrokerImpl.class.getName(),\n-            \"non-finalizing\", BrokerImpl.class.getName(), \n+            DEFAULT_ALIAS, FinalizingBrokerImpl.class.getName(),\n+            NON_FINALIZING_ALIAS, BrokerImpl.class.getName(), \n         };\n         setAliases(aliases);\n         setDefault(aliases[0]);"},{"sha":"0adcd454652247a8fe0a9830c9bd2fc6d9102ad9","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfigurationImpl.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/dc797ab923c30a788dd9af28509791018484b7ac/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfigurationImpl.java","raw_url":"https://github.com/apache/openjpa/raw/dc797ab923c30a788dd9af28509791018484b7ac/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfigurationImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/conf/OpenJPAConfigurationImpl.java?ref=dc797ab923c30a788dd9af28509791018484b7ac","patch":"@@ -178,7 +178,7 @@ public OpenJPAConfigurationImpl(boolean derivations, boolean loadGlobals) {\n         brokerFactoryPlugin = new BrokerFactoryValue();\n         addValue(brokerFactoryPlugin);\n \n-        brokerPlugin = new BrokerValue(\"BrokerImpl\");\n+        brokerPlugin = new BrokerValue();\n         addValue(brokerPlugin);\n \n         dataCacheManagerPlugin = addPlugin(\"DataCacheManager\", true);"},{"sha":"1ab0fd441204f5fbca30f6d33210cb10eb415bbe","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configurations.java","status":"modified","additions":15,"deletions":14,"changes":29,"blob_url":"https://github.com/apache/openjpa/blob/dc797ab923c30a788dd9af28509791018484b7ac/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configurations.java","raw_url":"https://github.com/apache/openjpa/raw/dc797ab923c30a788dd9af28509791018484b7ac/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configurations.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configurations.java?ref=dc797ab923c30a788dd9af28509791018484b7ac","patch":"@@ -569,35 +569,36 @@ public static Object lookup(String name) {\n     }\n \n     /**\n-     * Test whether the map contains the given key, prefixed with any possible\n-     * configuration prefix.\n+     * Test whether the map contains the given partial key, prefixed with any\n+     * possible configuration prefix.\n      */\n-    public static boolean containsProperty(String key, Map props) {\n-        if (key == null || props == null || props.isEmpty())\n+    public static boolean containsProperty(String partialKey, Map props) {\n+        if (partialKey == null || props == null || props.isEmpty())\n             return false;\n         else\n             return props.containsKey(\n-                ProductDerivations.getConfigurationKey(key, props));\n+                ProductDerivations.getConfigurationKey(partialKey, props));\n     }\n \n     /**\n-     * Get the property under the given key, prefixed with any possible\n+     * Get the property under the given partial key, prefixed with any possible\n      * configuration prefix.\n      */\n-    public static Object getProperty(String key, Map m) {\n-        if (key == null || m == null || m.isEmpty())\n+    public static Object getProperty(String partialKey, Map m) {\n+        if (partialKey == null || m == null || m.isEmpty())\n             return null;\n         else \n-            return m.get(ProductDerivations.getConfigurationKey(key, m));\n+            return m.get(ProductDerivations.getConfigurationKey(partialKey, m));\n     }\n \n     /**\n-     * Remove the property under the given key, prefixed with any possible\n-     * configuration prefix.\n+     * Remove the property under the given partial key, prefixed with any\n+     * possible configuration prefix.\n      */\n-    public static Object removeProperty(String key, Map props) {\n-        if (key == null || props == null || props.isEmpty())\n+    public static Object removeProperty(String partialKey, Map props) {\n+        if (partialKey == null || props == null || props.isEmpty())\n             return null;\n-        return props.remove(ProductDerivations.getConfigurationKey(key, props));\n+        return props.remove(ProductDerivations.getConfigurationKey(partialKey,\n+            props));\n     }\n }"},{"sha":"ccca49230844728b47366307c6c9eb52a176968a","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProviderImpl.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/dc797ab923c30a788dd9af28509791018484b7ac/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProviderImpl.java","raw_url":"https://github.com/apache/openjpa/raw/dc797ab923c30a788dd9af28509791018484b7ac/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProviderImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/PersistenceProviderImpl.java?ref=dc797ab923c30a788dd9af28509791018484b7ac","patch":"@@ -28,6 +28,7 @@\n \n import org.apache.openjpa.conf.OpenJPAConfiguration;\n import org.apache.openjpa.conf.OpenJPAConfigurationImpl;\n+import org.apache.openjpa.conf.BrokerValue;\n import org.apache.openjpa.enhance.PCClassFileTransformer;\n import org.apache.openjpa.kernel.Bootstrap;\n import org.apache.openjpa.kernel.BrokerFactory;\n@@ -82,6 +83,15 @@ public EntityManagerFactory createContainerEntityManagerFactory(\n         PersistenceUnitInfo pui, Map m) {\n         PersistenceProductDerivation pd = new PersistenceProductDerivation();\n         try {\n+            // if the BrokerImpl hasn't been specified, switch to the\n+            // non-finalizing one, since anything claiming to be a container\n+            // should be doing proper resource management.\n+            if (!Configurations.containsProperty(BrokerValue.KEY,\n+                pui.getProperties())\n+                && !Configurations.containsProperty(BrokerValue.KEY, m)) {\n+                m.put(BrokerValue.KEY, BrokerValue.NON_FINALIZING_ALIAS);\n+            }\n+\n             ConfigurationProvider cp = pd.load(pui, m);\n             if (cp == null)\n                 return null;"}]}

