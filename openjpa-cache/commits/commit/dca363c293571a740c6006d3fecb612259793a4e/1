{"sha":"dca363c293571a740c6006d3fecb612259793a4e","node_id":"MDY6Q29tbWl0MjA2MzY0OmRjYTM2M2MyOTM1NzFhNzQwYzYwMDZkM2ZlY2I2MTIyNTk3OTNhNGU=","commit":{"author":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-04-15T16:38:27Z"},"committer":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-04-15T16:38:27Z"},"message":"OPENJPA-1630: Synchronize when modifying MetaDataRepository._registered regardless of MetaDataRepository.Preload setting.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@934478 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2d88c8f28f356ed5707586a0470343bcbec0c995","url":"https://api.github.com/repos/apache/openjpa/git/trees/2d88c8f28f356ed5707586a0470343bcbec0c995"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/dca363c293571a740c6006d3fecb612259793a4e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/dca363c293571a740c6006d3fecb612259793a4e","html_url":"https://github.com/apache/openjpa/commit/dca363c293571a740c6006d3fecb612259793a4e","comments_url":"https://api.github.com/repos/apache/openjpa/commits/dca363c293571a740c6006d3fecb612259793a4e/comments","author":null,"committer":null,"parents":[{"sha":"0fae047205a3fe04fef3922a9561e1e5e4f193af","url":"https://api.github.com/repos/apache/openjpa/commits/0fae047205a3fe04fef3922a9561e1e5e4f193af","html_url":"https://github.com/apache/openjpa/commit/0fae047205a3fe04fef3922a9561e1e5e4f193af"}],"stats":{"total":21,"additions":3,"deletions":18},"files":[{"sha":"dae47dfedf9875e5e41e91d27912668f15625efb","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataRepository.java","status":"modified","additions":3,"deletions":18,"changes":21,"blob_url":"https://github.com/apache/openjpa/blob/dca363c293571a740c6006d3fecb612259793a4e/openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataRepository.java","raw_url":"https://github.com/apache/openjpa/raw/dca363c293571a740c6006d3fecb612259793a4e/openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataRepository.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/MetaDataRepository.java?ref=dca363c293571a740c6006d3fecb612259793a4e","patch":"@@ -1567,12 +1567,7 @@ private void clearInternal(){\n     public void register(Class<?> cls) {\n         // buffer registered classes until an oid metadata request is made,\n         // at which point we'll parse everything in the buffer\n-        if (_locking) {\n-            synchronized (_registered) {\n-                _registered.add(cls);\n-                registerAlias(cls);\n-            }\n-        } else {\n+        synchronized (_registered) {\n             _registered.add(cls);\n             registerAlias(cls);\n         }\n@@ -1603,16 +1598,10 @@ private void loadRegisteredClassMetaData(ClassLoader envLoader) {\n         // copy into new collection to avoid concurrent mod errors on reentrant\n         // registrations\n         Class<?>[] reg;\n-        if (_locking) {\n-            synchronized (_registered) {\n-                reg = _registered.toArray(new Class[_registered.size()]);\n-                _registered.clear();\n-            }\n-        } else {\n+\t\tsynchronized (_registered) {\n             reg = _registered.toArray(new Class[_registered.size()]);\n             _registered.clear();\n         }\n-        \n \n         Collection<String> pcNames = getPersistentTypeNames(false, envLoader);\n         Collection<Class<?>> failed = null;\n@@ -1636,11 +1625,7 @@ private void loadRegisteredClassMetaData(ClassLoader envLoader) {\n             }\n         }\n         if (failed != null) {\n-            if (_locking) {\n-                synchronized (_registered) {\n-                    _registered.addAll(failed);\n-                }\n-            } else {\n+            synchronized (_registered) {\n                 _registered.addAll(failed);\n             }\n         }"}]}

