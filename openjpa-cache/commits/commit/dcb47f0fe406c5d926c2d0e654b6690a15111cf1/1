{"sha":"dcb47f0fe406c5d926c2d0e654b6690a15111cf1","node_id":"MDY6Q29tbWl0MjA2MzY0OmRjYjQ3ZjBmZTQwNmM1ZDkyNmMyZDBlNjU0YjY2OTBhMTUxMTFjZjE=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2006-08-25T07:33:50Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2006-08-25T07:33:50Z"},"message":"OPENJPA-14. Use the class's classloader in environments when service lookups should be looking in the OpenJPA distribution. This imposes the restriction that OpenJPA will only find services in the same classloader as the OpenJPA jars themselves, which is a much better restriction than requiring that the classes be in the thread's context classloader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@436694 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"6ed45095ccf5e12172160d8a9e256c583b704a27","url":"https://api.github.com/repos/apache/openjpa/git/trees/6ed45095ccf5e12172160d8a9e256c583b704a27"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/dcb47f0fe406c5d926c2d0e654b6690a15111cf1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/dcb47f0fe406c5d926c2d0e654b6690a15111cf1","html_url":"https://github.com/apache/openjpa/commit/dcb47f0fe406c5d926c2d0e654b6690a15111cf1","comments_url":"https://api.github.com/repos/apache/openjpa/commits/dcb47f0fe406c5d926c2d0e654b6690a15111cf1/comments","author":null,"committer":null,"parents":[{"sha":"323fce145e915b04a79fdfede0ea6256b9c76eb3","url":"https://api.github.com/repos/apache/openjpa/commits/323fce145e915b04a79fdfede0ea6256b9c76eb3","html_url":"https://github.com/apache/openjpa/commit/323fce145e915b04a79fdfede0ea6256b9c76eb3"}],"stats":{"total":9,"additions":5,"deletions":4},"files":[{"sha":"4cdc99fd944a9678e633f01ad316365487bf86b8","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/conf/ProductDerivations.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/dcb47f0fe406c5d926c2d0e654b6690a15111cf1/openjpa-kernel/src/main/java/org/apache/openjpa/conf/ProductDerivations.java","raw_url":"https://github.com/apache/openjpa/raw/dcb47f0fe406c5d926c2d0e654b6690a15111cf1/openjpa-kernel/src/main/java/org/apache/openjpa/conf/ProductDerivations.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/conf/ProductDerivations.java?ref=dcb47f0fe406c5d926c2d0e654b6690a15111cf1","patch":"@@ -36,7 +36,8 @@\n     private static final ProductDerivation[] _derivations;\n \n     static {\n-        Class[] pdcls = Services.getImplementorClasses(ProductDerivation.class);\n+        Class[] pdcls = Services.getImplementorClasses(ProductDerivation.class,\n+          ProductDerivations.class.getClassLoader());\n         List derivations = new ArrayList(pdcls.length);\n         for (int i = 0; i < pdcls.length; i++) {\n             try {"},{"sha":"ec647d96f242b67ad18e365c08cc8d2fb2c7400d","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/dcb47f0fe406c5d926c2d0e654b6690a15111cf1/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java","raw_url":"https://github.com/apache/openjpa/raw/dcb47f0fe406c5d926c2d0e654b6690a15111cf1/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java?ref=dcb47f0fe406c5d926c2d0e654b6690a15111cf1","patch":"@@ -2617,7 +2617,7 @@ private BCClass getObjectIdBytecode(Class cls) {\n \t\tif (_auxEnhancers == null) {\n \t\t    try {\n                 Class[] classes = Services.getImplementorClasses\n-                    (AuxiliaryEnhancer.class);\n+                    (AuxiliaryEnhancer.class, getClass().getClassLoader());\n                 _auxEnhancers = new AuxiliaryEnhancer[classes.length];\n                 for (int i = 0; i < _auxEnhancers.length; i++)\n                     _auxEnhancers[i] = (AuxiliaryEnhancer) classes[i]."},{"sha":"c0889210b48c3bc86bd66affad4103ebce2af508","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryLanguages.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/dcb47f0fe406c5d926c2d0e654b6690a15111cf1/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryLanguages.java","raw_url":"https://github.com/apache/openjpa/raw/dcb47f0fe406c5d926c2d0e654b6690a15111cf1/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryLanguages.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryLanguages.java?ref=dcb47f0fe406c5d926c2d0e654b6690a15111cf1","patch":"@@ -34,7 +34,7 @@\n     static {\n         // Load and cache all the query languages available in the system.\n         Class[] classes = Services.getImplementorClasses(\n-            ExpressionParser.class);\n+            ExpressionParser.class, QueryLanguages.class.getClassLoader());\n         for (int i = 0; i < classes.length; i++) {\n             ExpressionParser ep;\n             try {"},{"sha":"d213783128fb8dba5da13da06001c4ea898dbac9","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/ant/AbstractTask.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/dcb47f0fe406c5d926c2d0e654b6690a15111cf1/openjpa-lib/src/main/java/org/apache/openjpa/lib/ant/AbstractTask.java","raw_url":"https://github.com/apache/openjpa/raw/dcb47f0fe406c5d926c2d0e654b6690a15111cf1/openjpa-lib/src/main/java/org/apache/openjpa/lib/ant/AbstractTask.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/ant/AbstractTask.java?ref=dcb47f0fe406c5d926c2d0e654b6690a15111cf1","patch":"@@ -42,7 +42,7 @@\n  * &lt;/mytask&rt;\n  * </code> \n  *\n- * The defailt configuration for the system will be used if the\n+ * The default configuration for the system will be used if the\n  * <code>&lt;config&rt;</code> subtask is excluded.\n  *\n  * @nojavadoc"}]}

