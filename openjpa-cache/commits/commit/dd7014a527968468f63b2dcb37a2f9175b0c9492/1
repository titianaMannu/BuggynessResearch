{"sha":"dd7014a527968468f63b2dcb37a2f9175b0c9492","node_id":"MDY6Q29tbWl0MjA2MzY0OmRkNzAxNGE1Mjc5Njg0NjhmNjNiMmRjYjM3YTJmOTE3NWIwYzk0OTI=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2008-04-04T06:55:13Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2008-04-04T06:55:13Z"},"message":"OPENJPA-556. This implementation does some extra copying to accomodate DataCache.getAll(), which takes a List instead of a Collection.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@644627 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2f1d2d31f46970e98d6eaf3ba5fa9d7665fdd180","url":"https://api.github.com/repos/apache/openjpa/git/trees/2f1d2d31f46970e98d6eaf3ba5fa9d7665fdd180"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/dd7014a527968468f63b2dcb37a2f9175b0c9492","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/dd7014a527968468f63b2dcb37a2f9175b0c9492","html_url":"https://github.com/apache/openjpa/commit/dd7014a527968468f63b2dcb37a2f9175b0c9492","comments_url":"https://api.github.com/repos/apache/openjpa/commits/dd7014a527968468f63b2dcb37a2f9175b0c9492/comments","author":null,"committer":null,"parents":[{"sha":"36c68c49f59f948967d31f690c7858b40bcea3a9","url":"https://api.github.com/repos/apache/openjpa/commits/36c68c49f59f948967d31f690c7858b40bcea3a9","html_url":"https://github.com/apache/openjpa/commit/36c68c49f59f948967d31f690c7858b40bcea3a9"}],"stats":{"total":26,"additions":18,"deletions":8},"files":[{"sha":"c3c7dbe1230846327e72482c51c371138ca91622","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCacheStoreManager.java","status":"modified","additions":18,"deletions":8,"changes":26,"blob_url":"https://github.com/apache/openjpa/blob/dd7014a527968468f63b2dcb37a2f9175b0c9492/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCacheStoreManager.java","raw_url":"https://github.com/apache/openjpa/raw/dd7014a527968468f63b2dcb37a2f9175b0c9492/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCacheStoreManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/datacache/DataCacheStoreManager.java?ref=dd7014a527968468f63b2dcb37a2f9175b0c9492","patch":"@@ -26,8 +26,8 @@\n import java.util.HashSet;\n import java.util.Iterator;\n import java.util.List;\n-import java.util.ListIterator;\n import java.util.Map;\n+import java.util.Map.Entry;\n \n import org.apache.openjpa.enhance.PCDataGenerator;\n import org.apache.openjpa.kernel.DelegatingStoreManager;\n@@ -260,16 +260,26 @@ private void updateCaches() {\n      */\n     private void transformToVersionSafePCDatas(DataCache cache,\n         List holders) {\n-        PCDataHolder holder;\n-        DataCachePCData oldpc;\n-        for (ListIterator iter = holders.listIterator(); iter.hasNext();) {\n-            holder = (PCDataHolder) iter.next();\n-            oldpc = cache.get(holder.sm.getObjectId());\n+\n+        Map<Object,Integer> ids = new HashMap<Object,Integer>(holders.size());\n+        // this list could be removed if DataCache.getAll() took a Collection\n+        List idList = new ArrayList(holders.size());\n+        int i = 0;\n+        for (PCDataHolder holder : (List<PCDataHolder>) holders) {\n+            ids.put(holder.sm.getObjectId(), i++);\n+            idList.add(holder.sm.getObjectId());\n+        }\n+\n+        Map<Object,DataCachePCData> pcdatas = cache.getAll(idList);\n+        for (Entry<Object,DataCachePCData> entry : pcdatas.entrySet()) {\n+            Integer index = ids.get(entry.getKey());\n+            DataCachePCData oldpc = entry.getValue();\n+            PCDataHolder holder = (PCDataHolder) holders.get(index);\n             if (oldpc != null && compareVersion(holder.sm,\n                 holder.sm.getVersion(), oldpc.getVersion()) == VERSION_EARLIER)\n-                iter.remove();\n+                holders.remove(index);\n             else\n-                iter.set(holder.pcdata);\n+                holders.set(index, holder.pcdata);\n         }\n     }\n "}]}

