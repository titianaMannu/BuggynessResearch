{"sha":"dee384cb3cc143fd46f3a9db54832759a884d949","node_id":"MDY6Q29tbWl0MjA2MzY0OmRlZTM4NGNiM2NjMTQzZmQ0NmYzYTlkYjU0ODMyNzU5YTg4NGQ5NDk=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-10-29T00:27:25Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-10-29T00:27:25Z"},"message":"Consolidate javax.persistence.* property processing\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@830810 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"28c368540b8c1425fbd495797310c9dd5c86dd60","url":"https://api.github.com/repos/apache/openjpa/git/trees/28c368540b8c1425fbd495797310c9dd5c86dd60"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/dee384cb3cc143fd46f3a9db54832759a884d949","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/dee384cb3cc143fd46f3a9db54832759a884d949","html_url":"https://github.com/apache/openjpa/commit/dee384cb3cc143fd46f3a9db54832759a884d949","comments_url":"https://api.github.com/repos/apache/openjpa/commits/dee384cb3cc143fd46f3a9db54832759a884d949/comments","author":null,"committer":null,"parents":[{"sha":"5e73ca14edc6d37a2ebff56cf0cb30c763fa6774","url":"https://api.github.com/repos/apache/openjpa/commits/5e73ca14edc6d37a2ebff56cf0cb30c763fa6774","html_url":"https://github.com/apache/openjpa/commit/5e73ca14edc6d37a2ebff56cf0cb30c763fa6774"}],"stats":{"total":41,"additions":12,"deletions":29},"files":[{"sha":"fcfb4664f03c36eab71d6fde25d29f7d7b7daba1","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/validation/ValidatorImpl.java","status":"modified","additions":12,"deletions":29,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/dee384cb3cc143fd46f3a9db54832759a884d949/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/validation/ValidatorImpl.java","raw_url":"https://github.com/apache/openjpa/raw/dee384cb3cc143fd46f3a9db54832759a884d949/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/validation/ValidatorImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/validation/ValidatorImpl.java?ref=dee384cb3cc143fd46f3a9db54832759a884d949","patch":"@@ -36,13 +36,13 @@\n import org.apache.openjpa.lib.log.Log;\n import org.apache.openjpa.lib.util.J2DoPrivHelper;\n import org.apache.openjpa.lib.util.Localizer;\n+import org.apache.openjpa.persistence.JPAProperties;\n import org.apache.openjpa.validation.AbstractValidator;\n import org.apache.openjpa.validation.ValidationException;\n \n public class ValidatorImpl extends AbstractValidator {\n     \n-    private static final Localizer _loc = Localizer.forPackage(\n-        ValidatorImpl.class);\n+    private static final Localizer _loc = Localizer.forPackage(ValidatorImpl.class);\n \n     private ValidatorFactory _validatorFactory = null;\n     private Validator _validator = null;\n@@ -51,27 +51,15 @@\n     private transient Log _log = null;\n     \n     // A map storing the validation groups to use for a particular event type\n-    private Map<Integer, Class<?>[]> _validationGroups = \n-        new HashMap<Integer,Class<?>[]>();\n+    private Map<Integer, Class<?>[]> _validationGroups = new HashMap<Integer,Class<?>[]>();\n         \n     // Lookup table for event to group property mapping \n-    private static HashMap<String, Integer> _vgMapping = \n-        new HashMap<String, Integer> ();\n+    private static HashMap<String, Integer> _vgMapping = new HashMap<String, Integer> ();\n             \n-    public static final String VG_PRE_PERSIST = \n-        \"javax.persistence.validation.group.pre-persist\";\n-    public static final String VG_PRE_REMOVE =\n-        \"javax.persistence.validation.group.pre-remove\";\n-    public static final String VG_PRE_UPDATE =\n-        \"javax.persistence.validation.group.pre-update\";\n-    \n     static {\n-        _vgMapping.put(VG_PRE_PERSIST,\n-            LifecycleEvent.BEFORE_PERSIST);\n-        _vgMapping.put(VG_PRE_REMOVE,\n-            LifecycleEvent.BEFORE_DELETE);\n-        _vgMapping.put(VG_PRE_UPDATE,\n-            LifecycleEvent.BEFORE_UPDATE); \n+        _vgMapping.put(JPAProperties.VALIDATE_PRE_PERSIST, LifecycleEvent.BEFORE_PERSIST);\n+        _vgMapping.put(JPAProperties.VALIDATE_PRE_REMOVE,  LifecycleEvent.BEFORE_DELETE);\n+        _vgMapping.put(JPAProperties.VALIDATE_PRE_UPDATE,  LifecycleEvent.BEFORE_UPDATE); \n     }\n \n     /**\n@@ -149,12 +137,9 @@ private void initialize() {\n             }\n \n             if (_conf != null) {\n-                addValidationGroup(VG_PRE_PERSIST,\n-                    _conf.getValidationGroupPrePersist());\n-                addValidationGroup(VG_PRE_UPDATE,\n-                    _conf.getValidationGroupPreUpdate());\n-                addValidationGroup(VG_PRE_REMOVE,\n-                    _conf.getValidationGroupPreRemove());\n+                addValidationGroup(JPAProperties.VALIDATE_PRE_PERSIST, _conf.getValidationGroupPrePersist());\n+                addValidationGroup(JPAProperties.VALIDATE_PRE_UPDATE,  _conf.getValidationGroupPreUpdate());\n+                addValidationGroup(JPAProperties.VALIDATE_PRE_REMOVE,  _conf.getValidationGroupPreRemove());\n             } else {\n                 // add in default validation groups, which can be over-ridden later\n                 addDefaultValidationGroups();\n@@ -403,9 +388,7 @@ private ValidatorFactory getDefaultValidatorFactory() {\n     // the default validation group and pre-remove will not validate (no \n     // validation group)\n     private void addDefaultValidationGroups() {\n-        addValidationGroup(VG_PRE_PERSIST, \n-            javax.validation.groups.Default.class);\n-        addValidationGroup(VG_PRE_UPDATE, \n-                javax.validation.groups.Default.class);\n+        addValidationGroup(JPAProperties.VALIDATE_PRE_PERSIST, javax.validation.groups.Default.class);\n+        addValidationGroup(JPAProperties.VALIDATE_PRE_UPDATE,  javax.validation.groups.Default.class);\n     }\n }"}]}

