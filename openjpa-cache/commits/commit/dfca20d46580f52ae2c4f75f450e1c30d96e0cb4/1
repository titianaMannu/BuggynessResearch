{"sha":"dfca20d46580f52ae2c4f75f450e1c30d96e0cb4","node_id":"MDY6Q29tbWl0MjA2MzY0OmRmY2EyMGQ0NjU4MGY1MmFlMmM0Zjc1ZjQ1MGUxYzMwZDk2ZTBjYjQ=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2006-12-13T01:16:40Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2006-12-13T01:16:40Z"},"message":"Processing <metadata-complete> and <xml-mapping-metadata-complete>\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@486446 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"3de69d0342e2f16d54ee6ba97cfb0280abc26502","url":"https://api.github.com/repos/apache/openjpa/git/trees/3de69d0342e2f16d54ee6ba97cfb0280abc26502"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/dfca20d46580f52ae2c4f75f450e1c30d96e0cb4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/dfca20d46580f52ae2c4f75f450e1c30d96e0cb4","html_url":"https://github.com/apache/openjpa/commit/dfca20d46580f52ae2c4f75f450e1c30d96e0cb4","comments_url":"https://api.github.com/repos/apache/openjpa/commits/dfca20d46580f52ae2c4f75f450e1c30d96e0cb4/comments","author":null,"committer":null,"parents":[{"sha":"148d8f8df2969cc4a57347f3128c682f2491c1b4","url":"https://api.github.com/repos/apache/openjpa/commits/148d8f8df2969cc4a57347f3128c682f2491c1b4","html_url":"https://github.com/apache/openjpa/commit/148d8f8df2969cc4a57347f3128c682f2491c1b4"}],"stats":{"total":16,"additions":10,"deletions":6},"files":[{"sha":"d75f1e9df56dd183e3df715cb7a356ea7517c79e","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","status":"modified","additions":10,"deletions":6,"changes":16,"blob_url":"https://github.com/apache/openjpa/blob/dfca20d46580f52ae2c4f75f450e1c30d96e0cb4/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","raw_url":"https://github.com/apache/openjpa/raw/dfca20d46580f52ae2c4f75f450e1c30d96e0cb4/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java?ref=dfca20d46580f52ae2c4f75f450e1c30d96e0cb4","patch":"@@ -72,7 +72,7 @@\n public class XMLPersistenceMetaDataParser\n     extends CFMetaDataParser\n     implements PersistenceMetaDataFactory.Parser {\n-\n+    \n     // parse constants\n     protected static final String ELEM_PKG = \"package\";\n     protected static final String ELEM_ACCESS = \"access\";\n@@ -86,6 +86,7 @@\n     protected static final String ELEM_CASCADE_REF = \"cascade-refresh\";\n     protected static final String ELEM_PU_META = \"persistence-unit-metadata\";\n     protected static final String ELEM_PU_DEF = \"persistence-unit-defaults\";\n+    protected static final String ELEM_XML_MAP_META_COMPLETE = \"xml-mapping-metadata-complete\";\n \n     private static final Map<String, Object> _elems =\n         new HashMap<String, Object>();\n@@ -103,7 +104,8 @@\n         _elems.put(ELEM_CASCADE_REF, ELEM_CASCADE_REF);\n         _elems.put(ELEM_PU_META, ELEM_PU_META);\n         _elems.put(ELEM_PU_DEF, ELEM_PU_DEF);\n-\n+        _elems.put(ELEM_XML_MAP_META_COMPLETE, ELEM_XML_MAP_META_COMPLETE);\n+        \n         _elems.put(\"entity-listeners\", ENTITY_LISTENERS);\n         _elems.put(\"pre-persist\", PRE_PERSIST);\n         _elems.put(\"post-persist\", POST_PERSIST);\n@@ -458,8 +460,10 @@ protected boolean startSystemElement(String name, Attributes attrs)\n                 default:\n                     warnUnsupportedTag(name);\n             }\n-        } else if (tag == ELEM_PU_META || tag == ELEM_PU_DEF)\n+        } else if (tag == ELEM_PU_META || tag == ELEM_PU_DEF) \n             ret = isMetaDataMode();\n+        else if (tag == ELEM_XML_MAP_META_COMPLETE) \n+            setAnnotationParser(null);\n         else if (tag == ELEM_ACCESS)\n             ret = _mode != MODE_QUERY;\n         else if (tag == ELEM_LISTENER)\n@@ -703,11 +707,11 @@ protected void endClassMappingElement(String name)\n     protected boolean startClass(String elem, Attributes attrs)\n         throws SAXException {\n         super.startClass(elem, attrs);\n-\n+        \n         // query mode only?\n         _cls = classForName(currentClassName());\n         if (_mode == MODE_QUERY) {\n-            if (_parser != null)\n+            if (_parser != null && !\"true\".equals(attrs.getValue(\"metadata-complete\")))\n                 _parser.parse(_cls);\n             return true;\n         }\n@@ -736,7 +740,7 @@ protected boolean startClass(String elem, Attributes attrs)\n             meta.setSourceMode(MODE_NONE);\n \n             // parse annotations first so XML overrides them\n-            if (_parser != null)\n+            if (_parser != null && !\"true\".equals(attrs.getValue(\"metadata-complete\")))\n                 _parser.parse(_cls);\n         }\n "}]}

