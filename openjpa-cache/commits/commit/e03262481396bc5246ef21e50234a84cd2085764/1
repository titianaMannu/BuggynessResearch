{"sha":"e03262481396bc5246ef21e50234a84cd2085764","node_id":"MDY6Q29tbWl0MjA2MzY0OmUwMzI2MjQ4MTM5NmJjNTI0NmVmMjFlNTAyMzRhODRjZDIwODU3NjQ=","commit":{"author":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2011-08-15T21:54:40Z"},"committer":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2011-08-15T21:54:40Z"},"message":"OPENJPA-2039: Update configuration properties.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1158027 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"d91b0a812eee21e4a9e80ee45fcc1e728d58cf63","url":"https://api.github.com/repos/apache/openjpa/git/trees/d91b0a812eee21e4a9e80ee45fcc1e728d58cf63"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/e03262481396bc5246ef21e50234a84cd2085764","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/e03262481396bc5246ef21e50234a84cd2085764","html_url":"https://github.com/apache/openjpa/commit/e03262481396bc5246ef21e50234a84cd2085764","comments_url":"https://api.github.com/repos/apache/openjpa/commits/e03262481396bc5246ef21e50234a84cd2085764/comments","author":null,"committer":null,"parents":[{"sha":"27a7e91688915ae7c31c0956ff8a97148485537c","url":"https://api.github.com/repos/apache/openjpa/commits/27a7e91688915ae7c31c0956ff8a97148485537c","html_url":"https://github.com/apache/openjpa/commit/27a7e91688915ae7c31c0956ff8a97148485537c"}],"stats":{"total":92,"additions":79,"deletions":13},"files":[{"sha":"96080b49d136278d8f5d85c095f3cbab596ad39c","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/DelegatingJDBCFetchConfiguration.java","status":"modified","additions":17,"deletions":0,"changes":17,"blob_url":"https://github.com/apache/openjpa/blob/e03262481396bc5246ef21e50234a84cd2085764/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/DelegatingJDBCFetchConfiguration.java","raw_url":"https://github.com/apache/openjpa/raw/e03262481396bc5246ef21e50234a84cd2085764/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/DelegatingJDBCFetchConfiguration.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/DelegatingJDBCFetchConfiguration.java?ref=e03262481396bc5246ef21e50234a84cd2085764","patch":"@@ -294,4 +294,21 @@ public JDBCFetchConfiguration addFetchInnerJoins(Collection fields) {\n             throw translate(re);\n         }\n     }\n+    @Override\n+    public void setIgnoreDfgForFkSelect(boolean b) {\n+        try {\n+            getJDBCDelegate().setIgnoreDfgForFkSelect(b);\n+        } catch (RuntimeException re) {\n+            throw translate(re);\n+        }\n+    }\n+\n+    @Override\n+    public boolean getIgnoreDfgForFkSelect() {\n+        try {\n+            return getJDBCDelegate().getIgnoreDfgForFkSelect();\n+        } catch (RuntimeException re) {\n+            throw translate(re);\n+        }\n+    }\n }"},{"sha":"95cf43c4330b17e135257b097cf0bce59e7d15ba","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCFetchConfiguration.java","status":"modified","additions":16,"deletions":0,"changes":16,"blob_url":"https://github.com/apache/openjpa/blob/e03262481396bc5246ef21e50234a84cd2085764/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCFetchConfiguration.java","raw_url":"https://github.com/apache/openjpa/raw/e03262481396bc5246ef21e50234a84cd2085764/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCFetchConfiguration.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCFetchConfiguration.java?ref=e03262481396bc5246ef21e50234a84cd2085764","patch":"@@ -241,4 +241,20 @@\n      * @since 1.0.3\n      */\n     public JDBCFetchConfiguration addFetchInnerJoins(Collection<String> fields);\n+    \n+    /**\n+     * If true - Ignore whether or not a field is in the dfg for mappings that use 2-part selects to load fk table data.\n+     * \n+     * @since 2.2.0\n+     * @return false\n+     */\n+    public boolean getIgnoreDfgForFkSelect();\n+\n+    /**\n+     * If true - Ignore whether or not a field is in the dfg for mappings that use 2-part selects to load fk table data.\n+     * \n+     * @since 2.2.0\n+     * @return false\n+     */\n+    public void setIgnoreDfgForFkSelect(boolean b);\n }"},{"sha":"2540aca685ce066360d0c9a5f672a38548fab4bd","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCFetchConfigurationImpl.java","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/e03262481396bc5246ef21e50234a84cd2085764/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCFetchConfigurationImpl.java","raw_url":"https://github.com/apache/openjpa/raw/e03262481396bc5246ef21e50234a84cd2085764/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCFetchConfigurationImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCFetchConfigurationImpl.java?ref=e03262481396bc5246ef21e50234a84cd2085764","patch":"@@ -92,6 +92,7 @@\n         public Set<String> joins = null;\n         public Set<String> fetchInnerJoins = null;\n         public int isolationLevel = -1;\n+        public boolean ignoreDfgForFkSelect = false;\n     }\n \n     protected final JDBCConfigurationState _state;\n@@ -135,8 +136,17 @@ public void copy(FetchConfiguration fetch) {\n         setLRSSize(jf.getLRSSize());\n         setJoinSyntax(jf.getJoinSyntax());\n         addJoins(jf.getJoins());\n+        setIgnoreDfgForFkSelect(jf.getIgnoreDfgForFkSelect());\n     }\n \n+    @Override\n+    public boolean getIgnoreDfgForFkSelect() {\n+        return _state.ignoreDfgForFkSelect;\n+    }\n+    @Override\n+    public void setIgnoreDfgForFkSelect(boolean b) {\n+        _state.ignoreDfgForFkSelect = b;\n+    }\n     public int getEagerFetchMode() {\n         return _state.eagerMode;\n     }"},{"sha":"4f0fe36c158b13244bbed51134a9308ec7242a80","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStoreManager.java","status":"modified","additions":1,"deletions":6,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/e03262481396bc5246ef21e50234a84cd2085764/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStoreManager.java","raw_url":"https://github.com/apache/openjpa/raw/e03262481396bc5246ef21e50234a84cd2085764/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStoreManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStoreManager.java?ref=e03262481396bc5246ef21e50234a84cd2085764","patch":"@@ -111,7 +111,6 @@\n     private RefCountConnection _conn = null;\n     private boolean _active = false;\n     private Log _log = null;\n-    boolean _ignoreDfgForFkSelect = false;\n     \n     // track the pending statements so we can cancel them\n     private Set<Statement> _stmnts = Collections.synchronizedSet(new HashSet<Statement>());\n@@ -1410,7 +1409,7 @@ private int selectBaseMappings(Select sel, ClassMapping mapping,\n      */\n     private boolean optSelect(FieldMapping fm, Select sel, OpenJPAStateManager sm, JDBCFetchConfiguration fetch) {\n         boolean dfg =\n-            _ignoreDfgForFkSelect || \n+            fetch.getIgnoreDfgForFkSelect() || \n                 !fm.isInDefaultFetchGroup() && !fm.isDefaultFetchGroupExplicit();\n \n         return dfg && (sm == null || sm.getPCState() == PCState.TRANSIENT || !sm.getLoaded().get(fm.getIndex()))\n@@ -1551,10 +1550,6 @@ FinderCache getFinderCache() {\n              ? getConfiguration().getFinderCacheInstance() : null;\n     }\n \n-    public void setIgnoreDfgForFkSelect(boolean b) {\n-        _ignoreDfgForFkSelect = b;\n-    }\n-\n     /**\n      * Connection returned to client code. Makes sure its wrapped connection ref count is decremented on finalize.\n      */"},{"sha":"3e5f6d3817dc8fbc26a3e3a4d65c18814edda6c2","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCFetchPlan.java","status":"modified","additions":16,"deletions":0,"changes":16,"blob_url":"https://github.com/apache/openjpa/blob/e03262481396bc5246ef21e50234a84cd2085764/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCFetchPlan.java","raw_url":"https://github.com/apache/openjpa/raw/e03262481396bc5246ef21e50234a84cd2085764/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCFetchPlan.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCFetchPlan.java?ref=e03262481396bc5246ef21e50234a84cd2085764","patch":"@@ -227,4 +227,20 @@\n      * @deprecated use {@link #setJoinSyntax(JoinSyntax)} instead.\n      */\n     public JDBCFetchPlan setJoinSyntax(int syntax);\n+    \n+    /**\n+     * If true - Ignore whether or not a field is in the dfg for mappings that use 2-part selects to load fk table data.\n+     * \n+     * @since 2.2.0\n+     * @return false\n+     */\n+    public boolean getIgnoreDfgForFkSelect();\n+\n+    /**\n+     * If true - Ignore whether or not a field is in the dfg for mappings that use 2-part selects to load fk table data.\n+     * \n+     * @since 2.2.0\n+     * @return false\n+     */\n+    public void setIgnoreDfgForFkSelect(boolean b);\n }"},{"sha":"0b2018ce46738378fbba899f0c0d1b04124da832","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCFetchPlanImpl.java","status":"modified","additions":10,"deletions":2,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/e03262481396bc5246ef21e50234a84cd2085764/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCFetchPlanImpl.java","raw_url":"https://github.com/apache/openjpa/raw/e03262481396bc5246ef21e50234a84cd2085764/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCFetchPlanImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCFetchPlanImpl.java?ref=e03262481396bc5246ef21e50234a84cd2085764","patch":"@@ -20,8 +20,6 @@\n \n import java.sql.ResultSet;\n import java.util.Collection;\n-import java.util.HashMap;\n-import java.util.Map;\n \n import javax.persistence.LockModeType;\n \n@@ -343,4 +341,14 @@ public JDBCFetchPlan setWriteLockMode(LockModeType mode) {\n     public JDBCFetchPlan setQueryTimeout(int timeout) {\n         return (JDBCFetchPlan) super.setQueryTimeout(timeout);\n     }\n+\n+    @Override\n+    public boolean getIgnoreDfgForFkSelect() {\n+        return _fetch.getIgnoreDfgForFkSelect();\n+    }\n+\n+    @Override\n+    public void setIgnoreDfgForFkSelect(boolean b) {\n+        _fetch.setIgnoreDfgForFkSelect(b);\n+    }\n }"},{"sha":"d6b58387070ac24c4310b316d25bd1f4dcb0e3b3","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/kernel/TestJDBCStoreOptSelect.java","status":"modified","additions":9,"deletions":5,"changes":14,"blob_url":"https://github.com/apache/openjpa/blob/e03262481396bc5246ef21e50234a84cd2085764/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/kernel/TestJDBCStoreOptSelect.java","raw_url":"https://github.com/apache/openjpa/raw/e03262481396bc5246ef21e50234a84cd2085764/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/kernel/TestJDBCStoreOptSelect.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/jdbc/kernel/TestJDBCStoreOptSelect.java?ref=e03262481396bc5246ef21e50234a84cd2085764","patch":"@@ -27,10 +27,12 @@\n import org.apache.openjpa.persistence.EntityManagerImpl;\n import org.apache.openjpa.persistence.FetchPlan;\n import org.apache.openjpa.persistence.OpenJPAEntityManagerSPI;\n+import org.apache.openjpa.persistence.jdbc.JDBCFetchPlan;\n import org.apache.openjpa.persistence.test.SQLListenerTestCase;\n \n public class TestJDBCStoreOptSelect extends SQLListenerTestCase {\n-    Object[] props = new Object[] { CLEAR_TABLES, OptSelectEntity.class };\n+    Object[] props = new Object[] { CLEAR_TABLES, OptSelectEntity.class\n+        };\n     OptSelectEntity e1, e2;\n \n     @Override\n@@ -50,10 +52,11 @@ public void test() {\n             if (store instanceof JDBCStoreManager == false) {\n                 fail(\"StoreManager is not an instanceof JDBCStoreManager\");\n             }\n-            // Set this JDBCStoreManager property so that we will select FKs for fields that are in the DFG, but not\n-            // included in the current select.\n-            ((JDBCStoreManager) store).setIgnoreDfgForFkSelect(true);\n-\n+            // Set this JDBCFetchPlan property so that we will select FKs for fields that are in the DFG, but not\n+            // included in the current load. If this property isn't set, the FK for eagerOneToOneOwner will not be\n+            // selected.\n+             ((JDBCFetchPlan)fp).setIgnoreDfgForFkSelect(true);\n+ \n             // Remove all relationships\n             fp.removeField(OptSelectEntity.class, \"eagerOneToOne\");\n             fp.removeField(OptSelectEntity.class, \"eagerOneToOneOwner\");\n@@ -77,6 +80,7 @@ public void test() {\n                     fks++;\n                 }\n             }\n+            // We expected to find 2 FKs. One for each of the owners (lazyOneToOneOwner and eagerOneToOneOwner)\n             assertEquals(2, fks);\n         } finally {\n             if (em.getTransaction().isActive()) {"}]}

