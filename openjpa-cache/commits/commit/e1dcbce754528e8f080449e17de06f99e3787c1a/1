{"sha":"e1dcbce754528e8f080449e17de06f99e3787c1a","node_id":"MDY6Q29tbWl0MjA2MzY0OmUxZGNiY2U3NTQ1MjhlOGYwODA0NDllMTdkZTA2Zjk5ZTM3ODdjMWE=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2009-10-30T18:02:15Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2009-10-30T18:02:15Z"},"message":"OPENJPA-1366 Remove need for an EMF from OpenJPAPersistenceUtil and TraversableResolverImpl.  Also, updated EMFImpl.isLoaded() to use Util.isManagedBy() before Util.isLoaded(), since the entity should be managed by the queried EMF instance.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@831406 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c57332f84966f538bdafd2af27d75a3fd181087e","url":"https://api.github.com/repos/apache/openjpa/git/trees/c57332f84966f538bdafd2af27d75a3fd181087e"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/e1dcbce754528e8f080449e17de06f99e3787c1a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/e1dcbce754528e8f080449e17de06f99e3787c1a","html_url":"https://github.com/apache/openjpa/commit/e1dcbce754528e8f080449e17de06f99e3787c1a","comments_url":"https://api.github.com/repos/apache/openjpa/commits/e1dcbce754528e8f080449e17de06f99e3787c1a/comments","author":null,"committer":null,"parents":[{"sha":"1154f23a11eb68666a0f9b3e840c8527c3e9d523","url":"https://api.github.com/repos/apache/openjpa/commits/1154f23a11eb68666a0f9b3e840c8527c3e9d523","html_url":"https://github.com/apache/openjpa/commit/1154f23a11eb68666a0f9b3e840c8527c3e9d523"}],"stats":{"total":43,"additions":8,"deletions":35},"files":[{"sha":"f9a1405370d0c6531a6907c0b504979a7f53e017","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerFactoryImpl.java","status":"modified","additions":3,"deletions":4,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/e1dcbce754528e8f080449e17de06f99e3787c1a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerFactoryImpl.java","raw_url":"https://github.com/apache/openjpa/raw/e1dcbce754528e8f080449e17de06f99e3787c1a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerFactoryImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerFactoryImpl.java?ref=e1dcbce754528e8f080449e17de06f99e3787c1a","patch":"@@ -333,8 +333,7 @@ public boolean isLoaded(Object entity, String attribute) {\n         if (entity == null) {\n             return false;\n         }\n-        \n-        return (OpenJPAPersistenceUtil.isLoaded(this, entity, attribute) ==\n-            LoadState.LOADED);\n-    }    \n+        return (OpenJPAPersistenceUtil.isManagedBy(this, entity) &&\n+                (OpenJPAPersistenceUtil.isLoaded(entity, attribute) == LoadState.LOADED));\n+    }\n }"},{"sha":"8e0f8788ff9f4ee0505c9aa19dfc2b36087464ad","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAPersistenceUtil.java","status":"modified","additions":4,"deletions":22,"changes":26,"blob_url":"https://github.com/apache/openjpa/blob/e1dcbce754528e8f080449e17de06f99e3787c1a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAPersistenceUtil.java","raw_url":"https://github.com/apache/openjpa/raw/e1dcbce754528e8f080449e17de06f99e3787c1a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAPersistenceUtil.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/OpenJPAPersistenceUtil.java?ref=e1dcbce754528e8f080449e17de06f99e3787c1a","patch":"@@ -105,34 +105,20 @@ public static boolean isManagedBy(OpenJPAEntityManagerFactory emf, Object entity\n         return false;\n     }\n \n-    /**\n-     * Determines whether the attribute on the specified object is loaded.\n-     * \n-     * @return LoadState.LOADED - if the attribute is loaded.\n-     *         LoadState.NOT_LOADED - if the attribute is not loaded or any\n-     *         EAGER fetch attributes of the entity are not loaded.\n-     *         LoadState.UNKNOWN - if the entity is not managed by this\n-     *         provider or if it does not contain the persistent\n-     *         attribute.\n-     */\n-    public static LoadState isLoaded(Object obj, String attr) {\n-        return isLoaded(null, obj, attr);\n-    }\n-\n     /**\n      * Determines whether the attribute on the specified object is loaded and\n-     * is managed by one of the entity managers of the specified entity manager\n+     * is managed by one of the entity managers.  Use isManagedBy() to\n+     * determine if an object is managed by a specific entity manager\n      * factory.\n      * \n      * @return LoadState.LOADED - if the attribute is loaded.\n      *         LoadState.NOT_LOADED - if the attribute is not loaded or any\n      *         EAGER fetch attributes of the entity are not loaded.\n      *         LoadState.UNKNOWN - if the entity is not managed by this\n-     *         provider or one of the entity managers of the specified \n-     *         entity manager factory, or if it does not contain the persistent\n+     *         provider or if it does not contain the persistent\n      *         attribute.\n      */\n-    public static LoadState isLoaded(OpenJPAEntityManagerFactory emf, Object obj, String attr) {\n+    public static LoadState isLoaded(Object obj, String attr) {\n \n         if (obj == null) {\n             return LoadState.UNKNOWN;\n@@ -141,10 +127,6 @@ public static LoadState isLoaded(OpenJPAEntityManagerFactory emf, Object obj, St\n         // If the object has a state manager, call it directly.\n         if (obj instanceof PersistenceCapable) {\n             PersistenceCapable pc = (PersistenceCapable)obj;\n-            if (emf != null) {\n-                if (!OpenJPAPersistenceUtil.isManagedBy(emf, pc))\n-                    return LoadState.UNKNOWN;\n-            }\n             StateManager sm = pc.pcGetStateManager();\n             if (sm != null && sm instanceof OpenJPAStateManager) {\n                 return isLoaded((OpenJPAStateManager)sm, attr, null);"},{"sha":"63fa244f4808c23745ce7d0d291cf6a26f777f40","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/validation/TraversableResolverImpl.java","status":"modified","additions":1,"deletions":9,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/e1dcbce754528e8f080449e17de06f99e3787c1a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/validation/TraversableResolverImpl.java","raw_url":"https://github.com/apache/openjpa/raw/e1dcbce754528e8f080449e17de06f99e3787c1a/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/validation/TraversableResolverImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/validation/TraversableResolverImpl.java?ref=e1dcbce754528e8f080449e17de06f99e3787c1a","patch":"@@ -34,16 +34,9 @@\n  */\n public class TraversableResolverImpl implements TraversableResolver {\n \n-    // For OpenJPA created instance, we should have a reference to ourselves\n-    private OpenJPAEntityManagerFactory emf = null;\n-\n     public TraversableResolverImpl() {\n     }\n \n-    public TraversableResolverImpl(OpenJPAEntityManagerFactory emf) {\n-        this.emf = emf;\n-    }\n-\n     /* (non-Javadoc) isReachable() is called by the Validator before accessing\n      * a property for validation or for cascading.\n      * \n@@ -59,8 +52,7 @@ public boolean isReachable(Object traversableObject,\n          * OpenJPA optimized version of the default provider implementation,\n          * which doesn't ask all the providers on the classpath about the obj.\n          */\n-        if (OpenJPAPersistenceUtil.isLoaded(emf, traversableObject, \n-            traversableProperty.getName()) == LoadState.NOT_LOADED) {\n+        if (OpenJPAPersistenceUtil.isLoaded(traversableObject, traversableProperty.getName()) == LoadState.NOT_LOADED) {\n             return false;\n         } else {\n             // LoadState.LOADED or LoadState.UNKNOWN"}]}

