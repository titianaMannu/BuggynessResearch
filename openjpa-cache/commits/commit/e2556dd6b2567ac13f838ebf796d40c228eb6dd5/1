{"sha":"e2556dd6b2567ac13f838ebf796d40c228eb6dd5","node_id":"MDY6Q29tbWl0MjA2MzY0OmUyNTU2ZGQ2YjI1NjdhYzEzZjgzOGViZjc5NmQ0MGMyMjhlYjZkZDU=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-07-20T23:03:21Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-07-20T23:03:21Z"},"message":"Test that @ContainerTable annotation is properly read.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@558191 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c0e8f5d6922a748369c3613548b59e42e8b11edb","url":"https://api.github.com/repos/apache/openjpa/git/trees/c0e8f5d6922a748369c3613548b59e42e8b11edb"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/e2556dd6b2567ac13f838ebf796d40c228eb6dd5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/e2556dd6b2567ac13f838ebf796d40c228eb6dd5","html_url":"https://github.com/apache/openjpa/commit/e2556dd6b2567ac13f838ebf796d40c228eb6dd5","comments_url":"https://api.github.com/repos/apache/openjpa/commits/e2556dd6b2567ac13f838ebf796d40c228eb6dd5/comments","author":null,"committer":null,"parents":[{"sha":"9ce0bed09d42b3cefa40a8091607e65e7ddf7aeb","url":"https://api.github.com/repos/apache/openjpa/commits/9ce0bed09d42b3cefa40a8091607e65e7ddf7aeb","html_url":"https://github.com/apache/openjpa/commit/9ce0bed09d42b3cefa40a8091607e65e7ddf7aeb"}],"stats":{"total":97,"additions":97,"deletions":0},"files":[{"sha":"ee9488cc79207e76857d5543f36360b5a3e96d50","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/fields/NonstandardMappingEntity.java","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/apache/openjpa/blob/e2556dd6b2567ac13f838ebf796d40c228eb6dd5/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/fields/NonstandardMappingEntity.java","raw_url":"https://github.com/apache/openjpa/raw/e2556dd6b2567ac13f838ebf796d40c228eb6dd5/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/fields/NonstandardMappingEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/fields/NonstandardMappingEntity.java?ref=e2556dd6b2567ac13f838ebf796d40c228eb6dd5","patch":"@@ -0,0 +1,38 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.openjpa.persistence.fields;\r\n+\r\n+import java.util.Map;\r\n+import java.util.HashMap;\r\n+\r\n+import javax.persistence.Entity;\r\n+\r\n+import org.apache.openjpa.persistence.PersistentMap;\r\n+import org.apache.openjpa.persistence.jdbc.ContainerTable;\r\n+\r\n+@Entity\r\n+public class NonstandardMappingEntity {\r\n+    @PersistentMap\r\n+    @ContainerTable(name=\"NONSTD_MAPPING_MAP\")\r\n+    private Map<String, String> map = new HashMap<String, String>();\r\n+\r\n+    public Map<String, String> getMap() {\r\n+        return map;\r\n+    }\r\n+}\r"},{"sha":"af6e9accdb27f4a332f02c4dce5c939135c8ce64","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/fields/TestPersistentMapTableConfiguration.java","status":"added","additions":59,"deletions":0,"changes":59,"blob_url":"https://github.com/apache/openjpa/blob/e2556dd6b2567ac13f838ebf796d40c228eb6dd5/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/fields/TestPersistentMapTableConfiguration.java","raw_url":"https://github.com/apache/openjpa/raw/e2556dd6b2567ac13f838ebf796d40c228eb6dd5/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/fields/TestPersistentMapTableConfiguration.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/fields/TestPersistentMapTableConfiguration.java?ref=e2556dd6b2567ac13f838ebf796d40c228eb6dd5","patch":"@@ -0,0 +1,59 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.openjpa.persistence.fields;\r\n+\r\n+import javax.persistence.EntityManager;\r\n+\r\n+import org.apache.openjpa.persistence.test.SQLListenerTestCase;\r\n+import org.apache.openjpa.persistence.OpenJPAPersistence;\r\n+import org.apache.openjpa.persistence.OpenJPAEntityManager;\r\n+import org.apache.openjpa.jdbc.meta.ClassMapping;\r\n+\r\n+public class TestPersistentMapTableConfiguration\r\n+    extends SQLListenerTestCase {\r\n+\r\n+    public void setUp() {\r\n+        setUp(NonstandardMappingEntity.class);\r\n+    }\r\n+\r\n+    public void testPersistentMapMetaData() {\r\n+        ClassMapping cm = (ClassMapping) OpenJPAPersistence.getMetaData(emf,\r\n+            NonstandardMappingEntity.class);\r\n+        assertEquals(\"NONSTD_MAPPING_MAP\",\r\n+            cm.getFieldMapping(\"map\").getTable().getName());\r\n+    }\r\n+\r\n+    public void testPersistentMapInsert() {\r\n+        NonstandardMappingEntity e = new NonstandardMappingEntity();\r\n+        OpenJPAEntityManager em = emf.createEntityManager();\r\n+        em.getIdGenerator(NonstandardMappingEntity.class).allocate(1);\r\n+        sql.clear();\r\n+        try {\r\n+            em.getTransaction().begin();\r\n+            em.persist(e);\r\n+            e.getMap().put(\"foo\", \"bar\");\r\n+            em.flush();\r\n+            assertEquals(2, sql.size());\r\n+            assertSQL(\".*NONSTD_MAPPING_MAP.*\");\r\n+        } finally {\r\n+            if (em.getTransaction().isActive())\r\n+                em.getTransaction().rollback();\r\n+        }\r\n+    }\r\n+}\n\\ No newline at end of file"}]}

