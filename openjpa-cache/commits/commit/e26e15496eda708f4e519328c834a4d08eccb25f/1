{"sha":"e26e15496eda708f4e519328c834a4d08eccb25f","node_id":"MDY6Q29tbWl0MjA2MzY0OmUyNmUxNTQ5NmVkYTcwOGY0ZTUxOTMyOGM4MzRhNGQwOGVjY2IyNWY=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-08-21T01:09:20Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-08-21T01:09:20Z"},"message":"OPENJPA-317. Added ResultSetType and FetchDirection enums. Used FetchDirection instead of FetchDirectionType because FetchDirection seemed much more natural.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@567893 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"caca826216444eb6b77ace3df96be3a9c1d31938","url":"https://api.github.com/repos/apache/openjpa/git/trees/caca826216444eb6b77ace3df96be3a9c1d31938"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/e26e15496eda708f4e519328c834a4d08eccb25f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/e26e15496eda708f4e519328c834a4d08eccb25f","html_url":"https://github.com/apache/openjpa/commit/e26e15496eda708f4e519328c834a4d08eccb25f","comments_url":"https://api.github.com/repos/apache/openjpa/commits/e26e15496eda708f4e519328c834a4d08eccb25f/comments","author":null,"committer":null,"parents":[{"sha":"ede9dcbd61b0705da92e82dddb00d0d14e504639","url":"https://api.github.com/repos/apache/openjpa/commits/ede9dcbd61b0705da92e82dddb00d0d14e504639","html_url":"https://github.com/apache/openjpa/commit/ede9dcbd61b0705da92e82dddb00d0d14e504639"}],"stats":{"total":197,"additions":177,"deletions":20},"files":[{"sha":"f11a1ebec13086f1a85bcd1ee9a02158c0fc2b51","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/FetchDirection.java","status":"added","additions":59,"deletions":0,"changes":59,"blob_url":"https://github.com/apache/openjpa/blob/e26e15496eda708f4e519328c834a4d08eccb25f/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/FetchDirection.java","raw_url":"https://github.com/apache/openjpa/raw/e26e15496eda708f4e519328c834a4d08eccb25f/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/FetchDirection.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/FetchDirection.java?ref=e26e15496eda708f4e519328c834a4d08eccb25f","patch":"@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.jdbc;\n+\n+import java.sql.ResultSet;\n+\n+/**\n+ * The fetch direction to request when creating statements.\n+ *\n+ * @since 1.0.0\n+ * @published\n+ */\n+public enum FetchDirection {\n+    FORWARD(ResultSet.FETCH_FORWARD),\n+    REVERSE(ResultSet.FETCH_REVERSE),\n+    UNKNOWN(ResultSet.FETCH_UNKNOWN);\n+\n+    private final int resultSetConstant;\n+\n+    private FetchDirection(int value) {\n+        resultSetConstant = value;\n+    }\n+\n+    int toKernelConstant() {\n+        return resultSetConstant;\n+    }\n+\n+    static FetchDirection fromKernelConstant(int kernelConstant) {\n+        switch (kernelConstant) {\n+            case ResultSet.FETCH_FORWARD:\n+                return FORWARD;\n+\n+            case ResultSet.FETCH_REVERSE:\n+                return REVERSE;\n+\n+            case ResultSet.FETCH_UNKNOWN:\n+                return UNKNOWN;\n+\n+            default:\n+                throw new IllegalArgumentException(kernelConstant + \"\");\n+        }\n+    }\n+}\n\\ No newline at end of file"},{"sha":"d9225b4a12e01de26af00631de2f8ef1cc21bdd4","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCFetchPlan.java","status":"modified","additions":4,"deletions":12,"changes":16,"blob_url":"https://github.com/apache/openjpa/blob/e26e15496eda708f4e519328c834a4d08eccb25f/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCFetchPlan.java","raw_url":"https://github.com/apache/openjpa/raw/e26e15496eda708f4e519328c834a4d08eccb25f/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCFetchPlan.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCFetchPlan.java?ref=e26e15496eda708f4e519328c834a4d08eccb25f","patch":"@@ -56,31 +56,23 @@\n \n     /**\n      * Type of JDBC result set to use for query results.\n-     * \n-     * @see java.sql.ResultSet\n      */\n-    public int getResultSetType();\n+    public ResultSetType getResultSetType();\n \n     /**\n      * Type of JDBC result set to use for query results.\n-     * \n-     * @see java.sql.ResultSet\n      */\n-    public JDBCFetchPlan setResultSetType(int type);\n+    public JDBCFetchPlan setResultSetType(ResultSetType type);\n \n     /**\n      * Result set fetch direction.\n-     * \n-     * @see java.sql.ResultSet\n      */\n-    public int getFetchDirection();\n+    public FetchDirection getFetchDirection();\n \n     /**\n      * Result set fetch direction.\n-     * \n-     * @see java.sql.ResultSet\n      */\n-    public JDBCFetchPlan setFetchDirection(int direction);\n+    public JDBCFetchPlan setFetchDirection(FetchDirection direction);\n \n     /**\n      * How to determine the size of a large result set."},{"sha":"fdbeefd928facf8427f8d01870ffd66cfaccce9e","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCFetchPlanImpl.java","status":"modified","additions":8,"deletions":8,"changes":16,"blob_url":"https://github.com/apache/openjpa/blob/e26e15496eda708f4e519328c834a4d08eccb25f/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCFetchPlanImpl.java","raw_url":"https://github.com/apache/openjpa/raw/e26e15496eda708f4e519328c834a4d08eccb25f/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCFetchPlanImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCFetchPlanImpl.java?ref=e26e15496eda708f4e519328c834a4d08eccb25f","patch":"@@ -73,21 +73,21 @@ public JDBCFetchPlanImpl setSubclassFetchMode(EagerFetchType type) {\n         return this;\n     }\n \n-    public int getResultSetType() {\n-        return _fetch.getResultSetType();\n+    public ResultSetType getResultSetType() {\n+        return ResultSetType.fromKernelConstant(_fetch.getResultSetType());\n     }\n \n-    public JDBCFetchPlanImpl setResultSetType(int type) {\n-        _fetch.setResultSetType(type);\n+    public JDBCFetchPlanImpl setResultSetType(ResultSetType type) {\n+        _fetch.setResultSetType(type.toKernelConstant());\n         return this;\n     }\n \n-    public int getFetchDirection() {\n-        return _fetch.getFetchDirection();\n+    public FetchDirection getFetchDirection() {\n+        return FetchDirection.fromKernelConstant(_fetch.getFetchDirection());\n     }\n \n-    public JDBCFetchPlanImpl setFetchDirection(int direction) {\n-        _fetch.setFetchDirection(direction);\n+    public JDBCFetchPlanImpl setFetchDirection(FetchDirection direction) {\n+        _fetch.setFetchDirection(direction.toKernelConstant());\n         return this;\n     }\n "},{"sha":"cb6ed7348ce7cd16c735c27b996e168a8875b6d6","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ResultSetType.java","status":"added","additions":59,"deletions":0,"changes":59,"blob_url":"https://github.com/apache/openjpa/blob/e26e15496eda708f4e519328c834a4d08eccb25f/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ResultSetType.java","raw_url":"https://github.com/apache/openjpa/raw/e26e15496eda708f4e519328c834a4d08eccb25f/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ResultSetType.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/ResultSetType.java?ref=e26e15496eda708f4e519328c834a4d08eccb25f","patch":"@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.jdbc;\n+\n+import java.sql.ResultSet;\n+\n+/**\n+ * Type of result set to use.\n+ *\n+ * @since 1.0.0\n+ * @published\n+ */\n+public enum ResultSetType {\n+    FORWARD_ONLY(ResultSet.TYPE_FORWARD_ONLY),\n+    SCROLL_INSENSITIVE(ResultSet.TYPE_SCROLL_INSENSITIVE),\n+    SCROLL_SENSITIVE(ResultSet.TYPE_SCROLL_SENSITIVE);\n+\n+    private final int resultSetConstant;\n+\n+    private ResultSetType(int value) {\n+        resultSetConstant = value;\n+    }\n+\n+    int toKernelConstant() {\n+        return resultSetConstant;\n+    }\n+\n+    static ResultSetType fromKernelConstant(int kernelConstant) {\n+        switch (kernelConstant) {\n+            case ResultSet.TYPE_FORWARD_ONLY:\n+                return FORWARD_ONLY;\n+\n+            case ResultSet.TYPE_SCROLL_INSENSITIVE:\n+                return SCROLL_INSENSITIVE;\n+\n+            case ResultSet.TYPE_SCROLL_SENSITIVE:\n+                return SCROLL_SENSITIVE;\n+\n+            default:\n+                throw new IllegalArgumentException(kernelConstant + \"\");\n+        }\n+    }\n+}\n\\ No newline at end of file"},{"sha":"ff4d5c30a63d5f20f5b74f410eae5367481f270e","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/TestJDBCEnumToKernelConstantMappings.java","status":"modified","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/apache/openjpa/blob/e26e15496eda708f4e519328c834a4d08eccb25f/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/TestJDBCEnumToKernelConstantMappings.java","raw_url":"https://github.com/apache/openjpa/raw/e26e15496eda708f4e519328c834a4d08eccb25f/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/TestJDBCEnumToKernelConstantMappings.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/TestJDBCEnumToKernelConstantMappings.java?ref=e26e15496eda708f4e519328c834a4d08eccb25f","patch":"@@ -18,6 +18,8 @@\n  */\r\n package org.apache.openjpa.persistence.jdbc;\r\n \r\n+import java.sql.ResultSet;\r\n+\r\n import junit.framework.TestCase;\r\n import org.apache.openjpa.jdbc.kernel.EagerFetchModes;\r\n import org.apache.openjpa.jdbc.kernel.LRSSizes;\r\n@@ -113,6 +115,51 @@ public void testJoinSyntaxType() {\n             JoinSyntaxType.values().length);\r\n     }\r\n \r\n+    public void testResultSetType() {\r\n+        assertEquals(ResultSet.TYPE_FORWARD_ONLY,\r\n+            ResultSetType.FORWARD_ONLY.toKernelConstant());\r\n+        assertEquals(ResultSetType.FORWARD_ONLY,\r\n+            ResultSetType.fromKernelConstant(\r\n+                ResultSet.TYPE_FORWARD_ONLY));\r\n+\r\n+        assertEquals(ResultSet.TYPE_SCROLL_INSENSITIVE,\r\n+            ResultSetType.SCROLL_INSENSITIVE.toKernelConstant());\r\n+        assertEquals(ResultSetType.SCROLL_INSENSITIVE,\r\n+            ResultSetType.fromKernelConstant(\r\n+                ResultSet.TYPE_SCROLL_INSENSITIVE));\r\n+\r\n+        assertEquals(ResultSet.TYPE_SCROLL_SENSITIVE,\r\n+            ResultSetType.SCROLL_SENSITIVE.toKernelConstant());\r\n+        assertEquals(ResultSetType.SCROLL_SENSITIVE,\r\n+            ResultSetType.fromKernelConstant(\r\n+                ResultSet.TYPE_SCROLL_SENSITIVE));\r\n+\r\n+        assertEquals(3, ResultSetType.values().length);\r\n+    }\r\n+\r\n+    public void testFetchDirection() {\r\n+        assertEquals(ResultSet.FETCH_FORWARD,\r\n+            FetchDirection.FORWARD.toKernelConstant());\r\n+        assertEquals(FetchDirection.FORWARD,\r\n+            FetchDirection.fromKernelConstant(\r\n+                ResultSet.FETCH_FORWARD));\r\n+\r\n+        assertEquals(ResultSet.FETCH_REVERSE,\r\n+            FetchDirection.REVERSE.toKernelConstant());\r\n+        assertEquals(FetchDirection.REVERSE,\r\n+            FetchDirection.fromKernelConstant(\r\n+                ResultSet.FETCH_REVERSE));\r\n+\r\n+        assertEquals(ResultSet.FETCH_UNKNOWN,\r\n+            FetchDirection.UNKNOWN.toKernelConstant());\r\n+        assertEquals(FetchDirection.UNKNOWN,\r\n+            FetchDirection.fromKernelConstant(\r\n+                ResultSet.FETCH_UNKNOWN));\r\n+\r\n+        assertEquals(3, FetchDirection.values().length);\r\n+    }\r\n+\r\n+\r\n     private int getConstantCount(Class cls) {\r\n         return cls.getDeclaredFields().length;\r\n     }\r"}]}

