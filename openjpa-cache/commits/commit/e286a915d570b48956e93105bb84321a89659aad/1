{"sha":"e286a915d570b48956e93105bb84321a89659aad","node_id":"MDY6Q29tbWl0MjA2MzY0OmUyODZhOTE1ZDU3MGI0ODk1NmU5MzEwNWJiODQzMjFhODk2NTlhYWQ=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-07-05T20:51:01Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-07-05T20:51:01Z"},"message":"OPENJPA-278\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@553629 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"8e159336add0ae2c513da821c7d0446ecb689017","url":"https://api.github.com/repos/apache/openjpa/git/trees/8e159336add0ae2c513da821c7d0446ecb689017"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/e286a915d570b48956e93105bb84321a89659aad","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/e286a915d570b48956e93105bb84321a89659aad","html_url":"https://github.com/apache/openjpa/commit/e286a915d570b48956e93105bb84321a89659aad","comments_url":"https://api.github.com/repos/apache/openjpa/commits/e286a915d570b48956e93105bb84321a89659aad/comments","author":null,"committer":null,"parents":[{"sha":"8b5a7f68a0016e7d5b5ac9a1c913794dccdcecd7","url":"https://api.github.com/repos/apache/openjpa/commits/8b5a7f68a0016e7d5b5ac9a1c913794dccdcecd7","html_url":"https://github.com/apache/openjpa/commit/8b5a7f68a0016e7d5b5ac9a1c913794dccdcecd7"}],"stats":{"total":44,"additions":41,"deletions":3},"files":[{"sha":"c683ba3902e030c4d8aca1f959b64b254c34e237","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/ExpressionStoreQuery.java","status":"modified","additions":2,"deletions":3,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/e286a915d570b48956e93105bb84321a89659aad/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/ExpressionStoreQuery.java","raw_url":"https://github.com/apache/openjpa/raw/e286a915d570b48956e93105bb84321a89659aad/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/ExpressionStoreQuery.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/ExpressionStoreQuery.java?ref=e286a915d570b48956e93105bb84321a89659aad","patch":"@@ -237,7 +237,6 @@ protected Number executeUpdate(Executor ex, ClassMetaData base,\n      * Return the commands that will be sent to the datastore in order\n      * to execute the query, typically in the database's native language.\n      *\n-     * @param ex current executor\n      * @param base the base type the query should match\n      * @param types the independent candidate types\n      * @param subclasses true if subclasses should be included in the results\n@@ -248,7 +247,7 @@ protected Number executeUpdate(Executor ex, ClassMetaData base,\n      * @param range result range\n      * @return a textual description of the query to execute\n      */\n-    protected String[] getDataStoreActions(Executor ex, ClassMetaData base,\n+    protected String[] getDataStoreActions(ClassMetaData base,\n         ClassMetaData[] types, boolean subclasses, ExpressionFactory[] facts,\n         QueryExpressions[] parsed, Object[] params, Range range) {\n         return StoreQuery.EMPTY_STRINGS;\n@@ -696,7 +695,7 @@ public Number executeUpdate(StoreQuery q, Object[] params) {\n \n         public String[] getDataStoreActions(StoreQuery q, Object[] params,\n             Range range) {\n-            return ((ExpressionStoreQuery) q).getDataStoreActions(this, _meta,\n+            return ((ExpressionStoreQuery) q).getDataStoreActions(_meta,\n                 _metas, _subs, _facts, _exps, params, range);\n         }\n "},{"sha":"5b603edd5f99b3ff5bb6935d8dfc195e53f39faa","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestDataStoreActions.java","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/apache/openjpa/blob/e286a915d570b48956e93105bb84321a89659aad/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestDataStoreActions.java","raw_url":"https://github.com/apache/openjpa/raw/e286a915d570b48956e93105bb84321a89659aad/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestDataStoreActions.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestDataStoreActions.java?ref=e286a915d570b48956e93105bb84321a89659aad","patch":"@@ -0,0 +1,39 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.openjpa.persistence.query;\r\n+\r\n+import org.apache.openjpa.persistence.test.SingleEMTestCase;\r\n+import org.apache.openjpa.persistence.OpenJPAQuery;\r\n+import org.apache.openjpa.persistence.simple.AllFieldTypes;\r\n+\r\n+public class TestDataStoreActions\r\n+    extends SingleEMTestCase {\r\n+\r\n+    @Override\r\n+    public void setUp() {\r\n+        setUp(AllFieldTypes.class);\r\n+    }\r\n+\r\n+    public void testDataStoreActions() {\r\n+        OpenJPAQuery q = em.createQuery(\"select o from AllFieldTypes o\");\r\n+        String[] sql = q.getDataStoreActions(null);\r\n+        assertEquals(1, sql.length);\r\n+        assertTrue(sql[0].startsWith(\"SELECT\"));\r\n+    }\r\n+}\r"}]}

