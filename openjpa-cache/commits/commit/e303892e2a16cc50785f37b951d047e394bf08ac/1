{"sha":"e303892e2a16cc50785f37b951d047e394bf08ac","node_id":"MDY6Q29tbWl0MjA2MzY0OmUzMDM4OTJlMmExNmNjNTA3ODVmMzdiOTUxZDA0N2UzOTRiZjA4YWM=","commit":{"author":{"name":"Fay Wang","email":"faywang@apache.org","date":"2010-01-07T23:42:31Z"},"committer":{"name":"Fay Wang","email":"faywang@apache.org","date":"2010-01-07T23:42:31Z"},"message":"OPENJPA-1455: fix add column problem involving tables with same name in multiple schemas for DB2\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@897056 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"1bd7854cd07d69903d34c9b70237775da41964f7","url":"https://api.github.com/repos/apache/openjpa/git/trees/1bd7854cd07d69903d34c9b70237775da41964f7"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/e303892e2a16cc50785f37b951d047e394bf08ac","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/e303892e2a16cc50785f37b951d047e394bf08ac","html_url":"https://github.com/apache/openjpa/commit/e303892e2a16cc50785f37b951d047e394bf08ac","comments_url":"https://api.github.com/repos/apache/openjpa/commits/e303892e2a16cc50785f37b951d047e394bf08ac/comments","author":null,"committer":null,"parents":[{"sha":"b90c4f01911d3ca0ba34c856117353429588ebd9","url":"https://api.github.com/repos/apache/openjpa/commits/b90c4f01911d3ca0ba34c856117353429588ebd9","html_url":"https://github.com/apache/openjpa/commit/b90c4f01911d3ca0ba34c856117353429588ebd9"}],"stats":{"total":29,"additions":27,"deletions":2},"files":[{"sha":"6a91210e686f5cddc310f81a221ddd2da5f8b459","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaGroup.java","status":"modified","additions":15,"deletions":1,"changes":16,"blob_url":"https://github.com/apache/openjpa/blob/e303892e2a16cc50785f37b951d047e394bf08ac/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaGroup.java","raw_url":"https://github.com/apache/openjpa/raw/e303892e2a16cc50785f37b951d047e394bf08ac/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaGroup.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaGroup.java?ref=e303892e2a16cc50785f37b951d047e394bf08ac","patch":"@@ -209,6 +209,14 @@ public Table findTable(String name) {\n      * separator. Returns null if no table found.\n      */\n     public Table findTable(Schema inSchema, String name) {\n+        return findTable(inSchema, name, null);\n+    }\n+    \n+    /**\n+     * Find the table with the given name in the group, using '.' as the catalog\n+     * separator. Returns null if no table found.\n+     */\n+    public Table findTable(Schema inSchema, String name, String defaultSchemaName) {\n         if (name == null)\n             return null;\n \n@@ -231,8 +239,14 @@ public Table findTable(Schema inSchema, String name) {\n                 // We can't handle the case that one entity has schema name\n                 // and other entity does not have schema name but both entities\n                 // map to the same table.\n+                boolean isDefaultSchema = inSchema.getName() == null && \n+                    defaultSchemaName != null && \n+                    defaultSchemaName.equalsIgnoreCase(schemas[i].getName());\n+                boolean hasNoDefaultSchema = inSchema.getName() == null && \n+                    defaultSchemaName == null; \n+                \n                 if (tab != null &&\n-                        (schemas[i] == inSchema || inSchema.getName() == null))\n+                    (schemas[i] == inSchema || isDefaultSchema || hasNoDefaultSchema)) \n                     return tab;\n \n             }"},{"sha":"7809ddafa70a4c4f6fa10fd5a4eee57634dea82b","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaTool.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/e303892e2a16cc50785f37b951d047e394bf08ac/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaTool.java","raw_url":"https://github.com/apache/openjpa/raw/e303892e2a16cc50785f37b951d047e394bf08ac/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaTool.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/schema/SchemaTool.java?ref=e303892e2a16cc50785f37b951d047e394bf08ac","patch":"@@ -472,11 +472,12 @@ private void add(SchemaGroup db, SchemaGroup repos)\n         Column[] cols;\n         Column col;\n         String delim = _dict.getDelimiter();\n+        String defaultSchemaName = _dict.getDefaultSchemaName();\n         for (int i = 0; i < schemas.length; i++) {\n             tabs = schemas[i].getTables();\n             for (int j = 0; j < tabs.length; j++) {\n                 cols = tabs[j].getColumns();\n-                dbTable = db.findTable(schemas[i], tabs[j].getFullName());\n+                dbTable = db.findTable(schemas[i], tabs[j].getFullName(), defaultSchemaName);\n                 for (int k = 0; k < cols.length; k++) {\n                     if (dbTable != null) {\n                         String colName = cols[k].getName();"},{"sha":"9032b5538a42d98b4f4eb03ec9a0b5833ed283fe","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/e303892e2a16cc50785f37b951d047e394bf08ac/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java","raw_url":"https://github.com/apache/openjpa/raw/e303892e2a16cc50785f37b951d047e394bf08ac/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java?ref=e303892e2a16cc50785f37b951d047e394bf08ac","patch":"@@ -266,6 +266,7 @@ public void connectedConfiguration(Connection conn) throws SQLException {\n         super.connectedConfiguration(conn);\n \n         DatabaseMetaData metaData = conn.getMetaData();\n+        setDefaultSchemaName(metaData.getUserName());\n         String driverName = metaData.getDriverName();\n         if (driverName != null && driverName.startsWith(\"IBM DB2\"))\n             driverVendor = VENDOR_IBM;"},{"sha":"43c8a2dddc962546f9406155ac076a8980e905e5","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/e303892e2a16cc50785f37b951d047e394bf08ac/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/e303892e2a16cc50785f37b951d047e394bf08ac/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java?ref=e303892e2a16cc50785f37b951d047e394bf08ac","patch":"@@ -362,6 +362,7 @@\n     public String delimiter = \"\\\"\"; // This is public so it can be changed by a user with a property\n     // Assume mixed case by default.\n     protected String delimitedCase = SCHEMA_CASE_PRESERVE;\n+    private String defaultSchemaName = null;\n     \n     public static enum DBIdentifiers {\n         TABLE_NAME,\n@@ -5212,4 +5213,12 @@ public String combineNames(String... names) {\n     public Log getLog() { \n         return log;\n     }\n+    \n+    public void setDefaultSchemaName(String defaultSchemaName) {\n+        this.defaultSchemaName = defaultSchemaName;\n+    }\n+\n+    public String getDefaultSchemaName() {\n+        return defaultSchemaName;\n+    }\n }"}]}

