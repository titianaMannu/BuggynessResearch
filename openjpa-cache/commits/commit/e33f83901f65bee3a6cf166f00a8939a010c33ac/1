{"sha":"e33f83901f65bee3a6cf166f00a8939a010c33ac","node_id":"MDY6Q29tbWl0MjA2MzY0OmUzM2Y4MzkwMWY2NWJlZTNhNmNmMTY2ZjAwYTg5MzlhMDEwYzMzYWM=","commit":{"author":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-09-06T20:29:15Z"},"committer":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-09-06T20:29:15Z"},"message":"fix test case problem for MySQL\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@811876 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c41c7f0be98c27b4417e83ec570b81f0d9ab3c6e","url":"https://api.github.com/repos/apache/openjpa/git/trees/c41c7f0be98c27b4417e83ec570b81f0d9ab3c6e"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/e33f83901f65bee3a6cf166f00a8939a010c33ac","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/e33f83901f65bee3a6cf166f00a8939a010c33ac","html_url":"https://github.com/apache/openjpa/commit/e33f83901f65bee3a6cf166f00a8939a010c33ac","comments_url":"https://api.github.com/repos/apache/openjpa/commits/e33f83901f65bee3a6cf166f00a8939a010c33ac/comments","author":null,"committer":null,"parents":[{"sha":"f45899eee858a5d7ab93096252ece5f509018095","url":"https://api.github.com/repos/apache/openjpa/commits/f45899eee858a5d7ab93096252ece5f509018095","html_url":"https://github.com/apache/openjpa/commit/f45899eee858a5d7ab93096252ece5f509018095"}],"stats":{"total":112,"additions":70,"deletions":42},"files":[{"sha":"031f2e99d8ab7751d1b853914278adac56d95b9e","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/FieldSub.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/FieldSub.java","raw_url":"https://github.com/apache/openjpa/raw/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/FieldSub.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/FieldSub.java?ref=e33f83901f65bee3a6cf166f00a8939a010c33ac","patch":"@@ -55,8 +55,10 @@ public void setCreateDate(Date date) {\n     public boolean equals(Object obj) {\n         if (obj instanceof FieldSub) {\n             FieldSub ps = (FieldSub)obj;\n-            return super.equals(obj) &&\n-                   crtDate.equals(ps.getCreateDate());\n+            String crtDateString = ps.getCreateDate() != null ? ps.getCreateDate().toString() : null;\n+            if (!crtDate.toString().equals(crtDateString))\n+                return false;\n+            return super.equals(obj);\n         }\n         return false;\n     }"},{"sha":"d7eadb55712e3ca2b708a2912f90f16a7bf00757","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/FieldSub2.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/FieldSub2.java","raw_url":"https://github.com/apache/openjpa/raw/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/FieldSub2.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/FieldSub2.java?ref=e33f83901f65bee3a6cf166f00a8939a010c33ac","patch":"@@ -52,8 +52,10 @@ public void setCreateDate(Date date) {\n     public boolean equals(Object obj) {\n         if (obj instanceof FieldSub2) {\n             FieldSub2 ps = (FieldSub2)obj;\n-            return super.equals(obj) &&\n-                   crtDate.equals(ps.getCreateDate());\n+            String crtDateString = ps.getCreateDate() != null ? ps.getCreateDate().toString() : null;\n+            if (!crtDate.toString().equals(crtDateString))\n+                return false;\n+            return super.equals(obj);\n         }\n         return false;\n     }"},{"sha":"40274164efc2f5b6de5ef2683242848f950ed0c7","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/FieldSub3.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/FieldSub3.java","raw_url":"https://github.com/apache/openjpa/raw/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/FieldSub3.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/FieldSub3.java?ref=e33f83901f65bee3a6cf166f00a8939a010c33ac","patch":"@@ -54,8 +54,10 @@ public void setCreateDate(Date date) {\n     public boolean equals(Object obj) {\n         if (obj instanceof FieldSub3) {\n             FieldSub3 ps = (FieldSub3)obj;\n-            return super.equals(obj) &&\n-                   crtDate.equals(ps.getCreateDate());\n+            String crtDateString = ps.getCreateDate() != null ? ps.getCreateDate().toString() : null;\n+            if (!crtDate.toString().equals(crtDateString))\n+                return false;\n+            return super.equals(obj);\n         }\n         return false;\n     }"},{"sha":"6add30bc4bba0f295a8e67e518de70458c5c24de","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/MixedFieldSub.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/MixedFieldSub.java","raw_url":"https://github.com/apache/openjpa/raw/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/MixedFieldSub.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/MixedFieldSub.java?ref=e33f83901f65bee3a6cf166f00a8939a010c33ac","patch":"@@ -59,8 +59,10 @@ public void setCreateDate(Date date) {\n     public boolean equals(Object obj) {\n         if (obj instanceof MixedFieldSub) {\n             MixedFieldSub ps = (MixedFieldSub)obj;\n-            return super.equals(obj) &&\n-                   getCreateDate().equals(ps.getCreateDate());\n+            String crtDateString = ps.getCreateDate() != null ? ps.getCreateDate().toString() : null;\n+            if (!crtDate.toString().equals(crtDateString))\n+                return false;\n+            return super.equals(obj);\n         }\n         return false;\n     }"},{"sha":"591ca2c016ed26d410ff6e5fd2f84a7d889b4d7e","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/PropertySub.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/PropertySub.java","raw_url":"https://github.com/apache/openjpa/raw/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/PropertySub.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/PropertySub.java?ref=e33f83901f65bee3a6cf166f00a8939a010c33ac","patch":"@@ -55,8 +55,10 @@ public void setCreateDate(Date date) {\n     public boolean equals(Object obj) {\n         if (obj instanceof PropertySub) {\n             PropertySub ps = (PropertySub)obj;\n-            return super.equals(obj) &&\n-                   crtDate.equals(ps.getCreateDate());\n+            String crtDateString = ps.getCreateDate() != null ? ps.getCreateDate().toString() : null;\n+            if (!crtDate.toString().equals(crtDateString))\n+                return false;\n+            return super.equals(obj);\n         }\n         return false;\n     }"},{"sha":"53a79aa8cfc9b6908ed9bf6396e0394679e7a795","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/PropertySub2.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/PropertySub2.java","raw_url":"https://github.com/apache/openjpa/raw/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/PropertySub2.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/PropertySub2.java?ref=e33f83901f65bee3a6cf166f00a8939a010c33ac","patch":"@@ -51,8 +51,10 @@ public void setCreateDate(Date date) {\n     public boolean equals(Object obj) {\n         if (obj instanceof PropertySub2) {\n             PropertySub2 ps = (PropertySub2)obj;\n-            return super.equals(obj) &&\n-                   crtDate.equals(ps.getCreateDate());\n+            String crtDateString = ps.getCreateDate() != null ? ps.getCreateDate().toString() : null;\n+            if (!crtDate.toString().equals(crtDateString))\n+                return false;\n+            return super.equals(obj);\n         }\n         return false;\n     }"},{"sha":"2f54b8dda7ba6749b162171899a09890f1477fc5","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/PropertySub3.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/PropertySub3.java","raw_url":"https://github.com/apache/openjpa/raw/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/PropertySub3.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/PropertySub3.java?ref=e33f83901f65bee3a6cf166f00a8939a010c33ac","patch":"@@ -54,8 +54,10 @@ public void setCreateDate(Date date) {\n     public boolean equals(Object obj) {\n         if (obj instanceof PropertySub3) {\n             PropertySub3 ps = (PropertySub3)obj;\n-            return super.equals(obj) &&\n-                   crtDate.equals(ps.getCreateDate());\n+            String crtDateString = ps.getCreateDate() != null ? ps.getCreateDate().toString() : null;\n+            if (!crtDate.toString().equals(crtDateString))\n+                return false;\n+            return super.equals(obj);\n         }\n         return false;\n     }"},{"sha":"604fddae1b9ce3b59c51b280c8b2f557e01ba690","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/TestExplicitAccess.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/apache/openjpa/blob/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/TestExplicitAccess.java","raw_url":"https://github.com/apache/openjpa/raw/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/TestExplicitAccess.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/TestExplicitAccess.java?ref=e33f83901f65bee3a6cf166f00a8939a010c33ac","patch":"@@ -241,7 +241,7 @@ public void testAbstractMappedSuperField() {\n             (PropertySub)qry.getSingleResult();\n         assertEquals(ps, ps2);\n         assertEquals(ps2.getName(), \"AbsMappedSuperName\");\n-        assertEquals(ps2.getCreateDate(), now);\n+        assertEquals(ps2.getCreateDate().toString(), now.toString());\n \n         try {\n             qry = em.createNamedQuery(\"PropertySub.badQuery\");\n@@ -290,7 +290,7 @@ public void testAbstractMappedSuperProperty() {\n             (FieldSub)qry.getSingleResult();\n         assertEquals(fs, fs2);\n         assertEquals(fs2.getName(), \"AbsMappedSuperName\");\n-        assertEquals(fs2.getCreateDate(), now);\n+        assertEquals(fs2.getCreateDate().toString(), now.toString());\n \n         try {\n             qry = em.createNamedQuery(\"FieldSub.badQuery\");\n@@ -340,7 +340,7 @@ public void testMappedSuperField() {\n             (PropertySub2)qry.getSingleResult();\n         assertEquals(ps, ps2);\n         assertEquals(ps2.getName(), \"MappedSuperName\");\n-        assertEquals(ps2.getCreateDate(), now);\n+        assertEquals(ps2.getCreateDate().toString(), now.toString());\n \n         try {\n             qry = em.createNamedQuery(\"PropertySub2.badQuery\");\n@@ -390,7 +390,7 @@ public void testMappedSuperProperty() {\n             (FieldSub2)qry.getSingleResult();\n         assertEquals(fs, fs2);\n         assertEquals(fs2.getName(), \"MappedSuperName\");\n-        assertEquals(fs2.getCreateDate(), now);\n+        assertEquals(fs2.getCreateDate().toString(), now.toString());\n \n         try {\n             qry = em.createNamedQuery(\"FieldSub2.badQuery\");\n@@ -442,7 +442,7 @@ public void testMixedMappedSuper() {\n             (MixedFieldSub)qry.getSingleResult();\n         assertEquals(fs, fs2);\n         assertEquals(fs2.getName(), \"MixedMappedSuperName\");\n-        assertEquals(fs2.getCreateDate(), now);\n+        assertEquals(fs2.getCreateDate().toString(), now.toString());\n \n         try {\n             qry = em.createNamedQuery(\"MixedFieldSub.badQuery\");\n@@ -497,7 +497,7 @@ public void testEntityFieldDefaultInheritance() {\n             (FieldSub3)qry.getSingleResult();\n         assertEquals(fs, fs2);\n         assertEquals(fs2.getName(), \"EntitySuperName\");\n-        assertEquals(fs2.getCreateDate(), now);\n+        assertEquals(fs2.getCreateDate().toString(), now.toString());\n \n         try {\n             qry = em.createNamedQuery(\"FieldSub3.badQuery\");\n@@ -576,7 +576,7 @@ public void testEntityPropertyDefaultInheritance() {\n             (PropertySub3)qry.getSingleResult();\n         assertEquals(ps, ps2);\n         assertEquals(ps2.getName(), \"EntitySuperName\");\n-        assertEquals(ps2.getCreateDate(), now);\n+        assertEquals(ps2.getCreateDate().toString(), now.toString());\n \n         try {\n             qry = em.createNamedQuery(\"PropertySub3.badQuery\");"},{"sha":"97b558cdd9cbb56896fc60c4ab17d776da57f145","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/TestXMLExplicitAccess.java","status":"modified","additions":7,"deletions":7,"changes":14,"blob_url":"https://github.com/apache/openjpa/blob/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/TestXMLExplicitAccess.java","raw_url":"https://github.com/apache/openjpa/raw/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/TestXMLExplicitAccess.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/TestXMLExplicitAccess.java?ref=e33f83901f65bee3a6cf166f00a8939a010c33ac","patch":"@@ -234,7 +234,7 @@ public void testAbstractMappedSuperField() {\n             (XMLPropertySub)qry.getSingleResult();\n         assertEquals(ps, ps2);\n         assertEquals(ps2.getName(), \"AbsMappedSuperName\");\n-        assertEquals(ps2.getCreateDate(), now);\n+        assertEquals(ps2.getCreateDate().toString(), now.toString());\n \n         try {\n             qry = em.createNamedQuery(\"XMLPropertySub.badQuery\");\n@@ -290,7 +290,7 @@ public void testAbstractMappedSuperProperty() {\n             (XMLFieldSub)qry.getSingleResult();\n         assertEquals(fs, fs2);\n         assertEquals(fs2.getName(), \"AbsMappedSuperName\");\n-        assertEquals(fs2.getCreateDate(), now);\n+        assertEquals(fs2.getCreateDate().toString(), now.toString());\n \n         try {\n             qry = em.createNamedQuery(\"XMLFieldSub.badQuery\");\n@@ -347,7 +347,7 @@ public void testMappedSuperField() {\n             (XMLPropertySub2)qry.getSingleResult();\n         assertEquals(ps, ps2);\n         assertEquals(ps2.getName(), \"MappedSuperName\");\n-        assertEquals(ps2.getCreateDate(), now);\n+        assertEquals(ps2.getCreateDate().toString(), now.toString());\n \n         try {\n             qry = em.createNamedQuery(\"XMLPropertySub2.badQuery\");\n@@ -398,7 +398,7 @@ public void testMappedSuperProperty() {\n             (XMLFieldSub2)qry.getSingleResult();\n         assertEquals(fs, fs2);\n         assertEquals(fs2.getName(), \"MappedSuperName\");\n-        assertEquals(fs2.getCreateDate(), now);\n+        assertEquals(fs2.getCreateDate().toString(), now.toString());\n \n         try {\n             qry = em.createNamedQuery(\"XMLFieldSub2.badQuery\");\n@@ -450,7 +450,7 @@ public void testMixedMappedSuper() {\n             (XMLMixedFieldSub)qry.getSingleResult();\n         assertEquals(fs, fs2);\n         assertEquals(fs2.getName(), \"XMLMixedMappedSuperName\");\n-        assertEquals(fs2.getCreateDate(), now);\n+        assertEquals(fs2.getCreateDate().toString(), now.toString());\n \n         try {\n             qry = em.createNamedQuery(\"XMLMixedFieldSub.badQuery\");\n@@ -505,7 +505,7 @@ public void testEntityFieldDefaultInheritance() {\n             (XMLFieldSub3)qry.getSingleResult();\n         assertEquals(fs, fs2);\n         assertEquals(fs2.getName(), \"EntitySuperName\");\n-        assertEquals(fs2.getCreateDate(), now);\n+        assertEquals(fs2.getCreateDate().toString(), now.toString());\n \n         try {\n             qry = em.createNamedQuery(\"XMLFieldSub3.badQuery\");\n@@ -584,7 +584,7 @@ public void testEntityPropertyDefaultInheritance() {\n             (XMLPropertySub3)qry.getSingleResult();\n         assertEquals(ps, ps2);\n         assertEquals(ps2.getName(), \"EntitySuperName\");\n-        assertEquals(ps2.getCreateDate(), now);\n+        assertEquals(ps2.getCreateDate().toString(), now.toString());\n \n         try {\n             qry = em.createNamedQuery(\"XMLPropertySub3.badQuery\");"},{"sha":"1df466474875dc69dd7ecba320fbc20a1c52c130","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/XMLFieldSub.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/XMLFieldSub.java","raw_url":"https://github.com/apache/openjpa/raw/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/XMLFieldSub.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/XMLFieldSub.java?ref=e33f83901f65bee3a6cf166f00a8939a010c33ac","patch":"@@ -37,8 +37,10 @@ public void setCreateDate(Date date) {\n     public boolean equals(Object obj) {\n         if (obj instanceof XMLFieldSub) {\n             XMLFieldSub ps = (XMLFieldSub)obj;\n-            return super.equals(obj) &&\n-                   crtDate.equals(ps.getCreateDate());\n+            String crtDateString = ps.getCreateDate() != null ? ps.getCreateDate().toString() : null;\n+            if (!crtDate.toString().equals(crtDateString))\n+                return false;\n+            return super.equals(obj);\n         }\n         return false;\n     }"},{"sha":"501b9b94ed3e744c80ecb446b2c0d4742b0ee23e","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/XMLFieldSub2.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/XMLFieldSub2.java","raw_url":"https://github.com/apache/openjpa/raw/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/XMLFieldSub2.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/XMLFieldSub2.java?ref=e33f83901f65bee3a6cf166f00a8939a010c33ac","patch":"@@ -35,8 +35,10 @@ public void setCreateDate(Date date) {\n     public boolean equals(Object obj) {\n         if (obj instanceof XMLFieldSub2) {\n             XMLFieldSub2 ps = (XMLFieldSub2)obj;\n-            return super.equals(obj) &&\n-                   crtDate.equals(ps.getCreateDate());\n+            String crtDateString = ps.getCreateDate() != null ? ps.getCreateDate().toString() : null;\n+            if (!crtDate.toString().equals(crtDateString))\n+                return false;\n+            return super.equals(obj);\n         }\n         return false;\n     }"},{"sha":"2b1fef354e9669395800bc80d83ff0457346cb4a","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/XMLFieldSub3.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/XMLFieldSub3.java","raw_url":"https://github.com/apache/openjpa/raw/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/XMLFieldSub3.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/XMLFieldSub3.java?ref=e33f83901f65bee3a6cf166f00a8939a010c33ac","patch":"@@ -35,8 +35,10 @@ public void setCreateDate(Date date) {\n     public boolean equals(Object obj) {\n         if (obj instanceof XMLFieldSub3) {\n             XMLFieldSub3 ps = (XMLFieldSub3)obj;\n-            return super.equals(obj) &&\n-                   crtDate.equals(ps.getCreateDate());\n+            String crtDateString = ps.getCreateDate() != null ? ps.getCreateDate().toString() : null;\n+            if (!crtDate.toString().equals(crtDateString))\n+                return false;\n+            return super.equals(obj);\n         }\n         return false;\n     }"},{"sha":"2e1ff41144f5c94e847e4d6c41238f8556627c18","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/XMLMixedFieldSub.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/XMLMixedFieldSub.java","raw_url":"https://github.com/apache/openjpa/raw/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/XMLMixedFieldSub.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/XMLMixedFieldSub.java?ref=e33f83901f65bee3a6cf166f00a8939a010c33ac","patch":"@@ -37,8 +37,10 @@ public void setCreateDate(Date date) {\n     public boolean equals(Object obj) {\n         if (obj instanceof XMLMixedFieldSub) {\n             XMLMixedFieldSub ps = (XMLMixedFieldSub)obj;\n-            return super.equals(obj) &&\n-                   getCreateDate().equals(ps.getCreateDate());\n+            String crtDateString = ps.getCreateDate() != null ? ps.getCreateDate().toString() : null;\n+            if (!crtDate.toString().equals(crtDateString))\n+                return false;\n+            return super.equals(obj);\n         }\n         return false;\n     }"},{"sha":"d355a03beeca4c446cd21805e67f85f429a24b76","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/XMLPropertySub.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/XMLPropertySub.java","raw_url":"https://github.com/apache/openjpa/raw/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/XMLPropertySub.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/XMLPropertySub.java?ref=e33f83901f65bee3a6cf166f00a8939a010c33ac","patch":"@@ -37,8 +37,10 @@ public void setCreateDate(Date date) {\n     public boolean equals(Object obj) {\n         if (obj instanceof XMLPropertySub) {\n             XMLPropertySub ps = (XMLPropertySub)obj;\n-            return super.equals(obj) &&\n-                   crtDate.equals(ps.getCreateDate());\n+            String crtDateString = ps.getCreateDate() != null ? ps.getCreateDate().toString() : null;\n+            if (!crtDate.toString().equals(crtDateString))\n+                return false;\n+            return super.equals(obj);\n         }\n         return false;\n     }"},{"sha":"124a69ed261f8f5acb572e0dedf7a7cab51df756","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/XMLPropertySub2.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/XMLPropertySub2.java","raw_url":"https://github.com/apache/openjpa/raw/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/XMLPropertySub2.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/XMLPropertySub2.java?ref=e33f83901f65bee3a6cf166f00a8939a010c33ac","patch":"@@ -33,8 +33,10 @@ public void setCreateDate(Date date) {\n     public boolean equals(Object obj) {\n         if (obj instanceof XMLPropertySub2) {\n             XMLPropertySub2 ps = (XMLPropertySub2)obj;\n-            return super.equals(obj) &&\n-                   crtDate.equals(ps.getCreateDate());\n+            String crtDateString = ps.getCreateDate() != null ? ps.getCreateDate().toString() : null;\n+            if (!crtDate.toString().equals(crtDateString))\n+                return false;\n+            return super.equals(obj);\n         }\n         return false;\n     }"},{"sha":"d2b4772fd2c3b1ecd8723fce50624edf5f033a53","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/XMLPropertySub3.java","status":"modified","additions":4,"deletions":2,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/XMLPropertySub3.java","raw_url":"https://github.com/apache/openjpa/raw/e33f83901f65bee3a6cf166f00a8939a010c33ac/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/XMLPropertySub3.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/access/xml/XMLPropertySub3.java?ref=e33f83901f65bee3a6cf166f00a8939a010c33ac","patch":"@@ -35,8 +35,10 @@ public void setCreateDate(Date date) {\n     public boolean equals(Object obj) {\n         if (obj instanceof XMLPropertySub3) {\n             XMLPropertySub3 ps = (XMLPropertySub3)obj;\n-            return super.equals(obj) &&\n-                   crtDate.equals(ps.getCreateDate());\n+            String crtDateString = ps.getCreateDate() != null ? ps.getCreateDate().toString() : null;\n+            if (!crtDate.toString().equals(crtDateString))\n+                return false;\n+            return super.equals(obj);\n         }\n         return false;\n     }"}]}

