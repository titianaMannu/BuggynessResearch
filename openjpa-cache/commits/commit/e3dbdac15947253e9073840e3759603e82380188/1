{"sha":"e3dbdac15947253e9073840e3759603e82380188","node_id":"MDY6Q29tbWl0MjA2MzY0OmUzZGJkYWMxNTk0NzI1M2U5MDczODQwZTM3NTk2MDNlODIzODAxODg=","commit":{"author":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2008-06-26T19:38:30Z"},"committer":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2008-06-26T19:38:30Z"},"message":"OPENJPA-644 Handle databaseProductVersion string from newer jcc driver for DB2 ISeries\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@672008 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"d13a477223eec9d93db00da40d443f6e6617d8bd","url":"https://api.github.com/repos/apache/openjpa/git/trees/d13a477223eec9d93db00da40d443f6e6617d8bd"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/e3dbdac15947253e9073840e3759603e82380188","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/e3dbdac15947253e9073840e3759603e82380188","html_url":"https://github.com/apache/openjpa/commit/e3dbdac15947253e9073840e3759603e82380188","comments_url":"https://api.github.com/repos/apache/openjpa/commits/e3dbdac15947253e9073840e3759603e82380188/comments","author":null,"committer":null,"parents":[{"sha":"82e61ba0d578fba28ae987cafdc29e3b211a45f7","url":"https://api.github.com/repos/apache/openjpa/commits/82e61ba0d578fba28ae987cafdc29e3b211a45f7","html_url":"https://github.com/apache/openjpa/commit/82e61ba0d578fba28ae987cafdc29e3b211a45f7"}],"stats":{"total":44,"additions":33,"deletions":11},"files":[{"sha":"37221108d763e20b30e0ff31052cca155cb8459f","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java","status":"modified","additions":33,"deletions":11,"changes":44,"blob_url":"https://github.com/apache/openjpa/blob/e3dbdac15947253e9073840e3759603e82380188/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java","raw_url":"https://github.com/apache/openjpa/raw/e3dbdac15947253e9073840e3759603e82380188/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java?ref=e3dbdac15947253e9073840e3759603e82380188","patch":"@@ -438,18 +438,40 @@ private void getProductVersionMajorMinorForISeries() {\n         //   (Toolbox)DBProdVersion              05.04.0000 V5R4m0\r\n         // ISeries                               DB2 UDB for AS/400\r\n         //   (Native)                            V5R4M0\r\n+        // new jcc    DBProdVersion              QSQ05040 or QSQ06010\r\n         if (databaseProductName.indexOf(\"AS\") != -1) {\r\n-            String s = databaseProductVersion.substring(databaseProductVersion\r\n-                .indexOf('V'));\r\n-            s = s.toUpperCase();\r\n-\r\n-            StringTokenizer stringtokenizer = new StringTokenizer(s, \"VRM\"\r\n-                , false);\r\n-            if (stringtokenizer.countTokens() == 3) {\r\n-                String s1 = stringtokenizer.nextToken();\r\n-                maj = Integer.parseInt(s1);\r\n-                String s2 =  stringtokenizer.nextToken();\r\n-                min = Integer.parseInt(s2);\r\n+            // default to V5R4\r\n+            maj = 5;\r\n+            min = 4;\r\n+            int index = databaseProductVersion.indexOf('V');\r\n+            if (index != -1) {\r\n+                String s = databaseProductVersion.substring(index);\r\n+                s = s.toUpperCase();\r\n+\r\n+                StringTokenizer stringtokenizer = new StringTokenizer(s, \"VRM\"\r\n+                    , false);\r\n+                if (stringtokenizer.countTokens() == 3) {\r\n+                    String s1 = stringtokenizer.nextToken();\r\n+                    maj = Integer.parseInt(s1);\r\n+                    String s2 =  stringtokenizer.nextToken();\r\n+                    min = Integer.parseInt(s2);\r\n+                }\r\n+            }\r\n+            else {\r\n+                index = databaseProductVersion.indexOf('0');\r\n+                if (index != -1) {\r\n+                    String s = databaseProductVersion.substring(index);\r\n+                    s = s.toUpperCase();\r\n+\r\n+                    StringTokenizer stringtokenizer = new StringTokenizer(s, \"0\"\r\n+                        , false);                    \r\n+                    if (stringtokenizer.countTokens() == 2) {\r\n+                        String s1 = stringtokenizer.nextToken();\r\n+                        maj = Integer.parseInt(s1);\r\n+                        String s2 =  stringtokenizer.nextToken();\r\n+                        min = Integer.parseInt(s2);\r\n+                    }\r\n+                }\r\n             }\r\n         }\r\n     }\r"}]}

