{"sha":"e487d35da68bc0332546d1a16f0cdc9e9baa64f0","node_id":"MDY6Q29tbWl0MjA2MzY0OmU0ODdkMzVkYTY4YmMwMzMyNTQ2ZDFhMTZmMGNkYzllOWJhYTY0ZjA=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-10-26T05:39:48Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-10-26T05:39:48Z"},"message":"OPENJPA-419\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@588533 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c1478fc999f94a0e0b59d768d1f5a972a1eafaae","url":"https://api.github.com/repos/apache/openjpa/git/trees/c1478fc999f94a0e0b59d768d1f5a972a1eafaae"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/e487d35da68bc0332546d1a16f0cdc9e9baa64f0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/e487d35da68bc0332546d1a16f0cdc9e9baa64f0","html_url":"https://github.com/apache/openjpa/commit/e487d35da68bc0332546d1a16f0cdc9e9baa64f0","comments_url":"https://api.github.com/repos/apache/openjpa/commits/e487d35da68bc0332546d1a16f0cdc9e9baa64f0/comments","author":null,"committer":null,"parents":[{"sha":"b50c73f35711d2d965dfa4fe9918f14504d628b7","url":"https://api.github.com/repos/apache/openjpa/commits/b50c73f35711d2d965dfa4fe9918f14504d628b7","html_url":"https://github.com/apache/openjpa/commit/b50c73f35711d2d965dfa4fe9918f14504d628b7"}],"stats":{"total":80,"additions":79,"deletions":1},"files":[{"sha":"1fe2d51213fc41bd7720a36f45736cbe0a9c1139","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AttachStrategy.java","status":"modified","additions":4,"deletions":1,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/e487d35da68bc0332546d1a16f0cdc9e9baa64f0/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AttachStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/e487d35da68bc0332546d1a16f0cdc9e9baa64f0/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AttachStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AttachStrategy.java?ref=e487d35da68bc0332546d1a16f0cdc9e9baa64f0","patch":"@@ -268,7 +268,10 @@ protected Object getReference(AttachManager manager, Object toAttach,\n         OpenJPAStateManager sm, ValueMetaData vmd) {\n         if (toAttach == null)\n             return null;\n-        if (manager.getBroker().isDetached(toAttach)) {\n+\n+        if (manager.getBroker().isPersistent(toAttach)) {\n+            return toAttach;\n+        } else if (manager.getBroker().isDetached(toAttach)) {\n             Object oid = manager.getDetachedObjectId(toAttach);\n             if (oid != null)\n                 return manager.getBroker().find(oid, false, null);"},{"sha":"2248964a27ea9184b7403c3d1de6591ff0561466","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/lifecycle/TestMergeAndPersistWithManagedRelation.java","status":"added","additions":75,"deletions":0,"changes":75,"blob_url":"https://github.com/apache/openjpa/blob/e487d35da68bc0332546d1a16f0cdc9e9baa64f0/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/lifecycle/TestMergeAndPersistWithManagedRelation.java","raw_url":"https://github.com/apache/openjpa/raw/e487d35da68bc0332546d1a16f0cdc9e9baa64f0/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/lifecycle/TestMergeAndPersistWithManagedRelation.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/lifecycle/TestMergeAndPersistWithManagedRelation.java?ref=e487d35da68bc0332546d1a16f0cdc9e9baa64f0","patch":"@@ -0,0 +1,75 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.openjpa.persistence.lifecycle;\r\n+\r\n+import javax.persistence.EntityManager;\r\n+\r\n+import org.apache.openjpa.persistence.relations.BidiChild;\r\n+import org.apache.openjpa.persistence.relations.BidiParent;\r\n+import org.apache.openjpa.persistence.test.SingleEMTestCase;\r\n+\r\n+public class TestMergeAndPersistWithManagedRelation\r\n+    extends SingleEMTestCase {\r\n+\r\n+    private long childId;\r\n+\r\n+    public void setUp() {\r\n+        setUp(BidiParent.class, BidiChild.class, CLEAR_TABLES);\r\n+\r\n+        BidiChild child = new BidiChild();\r\n+        child.setName(\"child\");\r\n+\r\n+        EntityManager em = emf.createEntityManager();\r\n+        em.getTransaction().begin();\r\n+        em.persist(child);\r\n+        em.getTransaction().commit();\r\n+        childId = child.getId();\r\n+        em.close();\r\n+    }\r\n+\r\n+    public void testPersistWithManagedRelation() {\r\n+        BidiParent parent = new BidiParent();\r\n+        BidiChild child = em.find(BidiChild.class, childId);\r\n+        parent.setOneToOneChild(child);\r\n+        em.getTransaction().begin();\r\n+        em.persist(parent);\r\n+        em.getTransaction().commit();\r\n+        long id = parent.getId();\r\n+        em.close();\r\n+\r\n+        em = emf.createEntityManager();\r\n+        parent = em.find(BidiParent.class, id);\r\n+        assertNotNull(parent);\r\n+    }\r\n+\r\n+    public void testMergeWithManagedRelation() {\r\n+        BidiParent parent = new BidiParent();\r\n+        BidiChild child = em.find(BidiChild.class, childId);\r\n+        parent.setOneToOneChild(child);\r\n+        em.getTransaction().begin();\r\n+        parent = em.merge(parent);\r\n+        em.getTransaction().commit();\r\n+        long id = parent.getId();\r\n+        em.close();\r\n+\r\n+        em = emf.createEntityManager();\r\n+        parent = em.find(BidiParent.class, id);\r\n+        assertNotNull(parent);\r\n+    }\r\n+}\n\\ No newline at end of file"}]}

