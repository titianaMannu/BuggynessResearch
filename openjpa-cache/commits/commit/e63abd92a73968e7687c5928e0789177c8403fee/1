{"sha":"e63abd92a73968e7687c5928e0789177c8403fee","node_id":"MDY6Q29tbWl0MjA2MzY0OmU2M2FiZDkyYTczOTY4ZTc2ODdjNTkyOGUwNzg5MTc3Yzg0MDNmZWU=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2013-01-22T14:37:21Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2013-01-22T14:37:21Z"},"message":"OPENJPA-2325: Test cases for Mapped Super Class without identity field\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1436960 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2de31d8850b72cf5a93ee2632bedf1f926927fd2","url":"https://api.github.com/repos/apache/openjpa/git/trees/2de31d8850b72cf5a93ee2632bedf1f926927fd2"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/e63abd92a73968e7687c5928e0789177c8403fee","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/e63abd92a73968e7687c5928e0789177c8403fee","html_url":"https://github.com/apache/openjpa/commit/e63abd92a73968e7687c5928e0789177c8403fee","comments_url":"https://api.github.com/repos/apache/openjpa/commits/e63abd92a73968e7687c5928e0789177c8403fee/comments","author":null,"committer":null,"parents":[{"sha":"01cae73832fd7b86848fe017e990b96ca63e25af","url":"https://api.github.com/repos/apache/openjpa/commits/01cae73832fd7b86848fe017e990b96ca63e25af","html_url":"https://github.com/apache/openjpa/commit/01cae73832fd7b86848fe017e990b96ca63e25af"}],"stats":{"total":152,"additions":149,"deletions":3},"files":[{"sha":"0983dcb1465d7847facb8fafa4aa23052287ec58","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/DerivedEntityFromMappedSuperWithoutId.java","status":"added","additions":67,"deletions":0,"changes":67,"blob_url":"https://github.com/apache/openjpa/blob/e63abd92a73968e7687c5928e0789177c8403fee/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/DerivedEntityFromMappedSuperWithoutId.java","raw_url":"https://github.com/apache/openjpa/raw/e63abd92a73968e7687c5928e0789177c8403fee/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/DerivedEntityFromMappedSuperWithoutId.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/DerivedEntityFromMappedSuperWithoutId.java?ref=e63abd92a73968e7687c5928e0789177c8403fee","patch":"@@ -0,0 +1,67 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.inheritance.mappedsuperclass;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+import javax.persistence.MappedSuperclass;\n+import javax.persistence.Version;\n+\n+/**\n+ * A Mapped Super Class without a declared identity field. The derived classes\n+ * declare identity.\n+ * \n+ * @author Pinaki Poddar\n+ * \n+ */\n+\n+@Entity\n+public class DerivedEntityFromMappedSuperWithoutId extends MappedSuperWithoutId {\n+\t@Id\n+\tprivate long id;\n+\n+\tprivate String name;\n+\n+\t@Version\n+\tprivate int version;\n+\n+\tpublic long getId() {\n+\t\treturn id;\n+\t}\n+\n+\tpublic void setId(long id) {\n+\t\tthis.id = id;\n+\t}\n+\n+\tpublic String getName() {\n+\t\treturn name;\n+\t}\n+\n+\tpublic void setName(String name) {\n+\t\tthis.name = name;\n+\t}\n+\n+\tpublic int getVersion() {\n+\t\treturn version;\n+\t}\n+\n+\tpublic void setVersion(int version) {\n+\t\tthis.version = version;\n+\t}\n+}"},{"sha":"9d5c4214ef5746b68e0716226a54208e9a1c9a95","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/MappedSuperWithoutId.java","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/apache/openjpa/blob/e63abd92a73968e7687c5928e0789177c8403fee/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/MappedSuperWithoutId.java","raw_url":"https://github.com/apache/openjpa/raw/e63abd92a73968e7687c5928e0789177c8403fee/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/MappedSuperWithoutId.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/MappedSuperWithoutId.java?ref=e63abd92a73968e7687c5928e0789177c8403fee","patch":"@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.inheritance.mappedsuperclass;\n+\n+import javax.persistence.MappedSuperclass;\n+\n+/**\n+ * A Mapped Super Class without a declared identity field. The derived classes\n+ * declare identity.\n+ * \n+ * @author Pinaki Poddar\n+ * \n+ */\n+\n+@MappedSuperclass\n+public class MappedSuperWithoutId {\n+\tprivate String description;\n+\n+\tpublic String getDesc() {\n+\t\treturn description;\n+\t}\n+\n+\tpublic void setDesc(String desc) {\n+\t\tthis.description = desc;\n+\t}\n+}"},{"sha":"c9946f9646da5c454c670e5c667acb9ac6715ede","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/TestMappedSuperClass.java","status":"modified","additions":40,"deletions":3,"changes":43,"blob_url":"https://github.com/apache/openjpa/blob/e63abd92a73968e7687c5928e0789177c8403fee/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/TestMappedSuperClass.java","raw_url":"https://github.com/apache/openjpa/raw/e63abd92a73968e7687c5928e0789177c8403fee/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/TestMappedSuperClass.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/TestMappedSuperClass.java?ref=e63abd92a73968e7687c5928e0789177c8403fee","patch":"@@ -28,16 +28,22 @@\n /**\n  * Test case and domain classes were originally part of the reported issue\n  * <A href=\"https://issues.apache.org/jira/browse/OPENJPA-873\">OPENJPA-873</A>\n- *  \n+ * <p>\n+ * Added a new test where mapped super class does not decalre an identity.\n+ * Originally reported \n+ * <A href=\"https://issues.apache.org/jira/browse/OPENJPA-2325\">OPENJPA-2325</A>\n+ * \n  * @author pioneer_ip@yahoo.com\n  * @author Fay Wang\n- *\n+ * @author Pinaki Poddar\n  */\n public class TestMappedSuperClass extends SingleEMFTestCase {\n \n     public void setUp() {\n         setUp(CashBaseEntity.class, \n-              SituationDA.class, ValuableItemDA.class, CLEAR_TABLES);\n+              SituationDA.class, ValuableItemDA.class, \n+              MappedSuperWithoutId.class, DerivedEntityFromMappedSuperWithoutId.class,\n+              CLEAR_TABLES);\n     }\n \n     public void testMappedSuperClass() {\n@@ -73,4 +79,35 @@ public void testMappedSuperClass() {\n             em.close();\n         }\n     }\n+    \n+    /**\n+     * Tests that new entity can be merged when the entity is derived from a mapped\n+     * super class that does not declare an identity field.\n+     */\n+    public void testMergeNewInstanceDerivedFromMappedSuperClassWithoutIdentityField() {\n+        EntityManager em = emf.createEntityManager();\n+        em.getTransaction().begin();\n+        final long id = System.currentTimeMillis();\n+\t\tDerivedEntityFromMappedSuperWithoutId pc = new DerivedEntityFromMappedSuperWithoutId();\n+\t\tpc.setId(id);\n+\t\tpc.setName(\"abc\");\n+\t\tem.persist(pc);\n+\t\tem.getTransaction().commit();\n+\t\tem.close();\n+    \t\n+\t\tDerivedEntityFromMappedSuperWithoutId newpc = new DerivedEntityFromMappedSuperWithoutId();\n+\t\tem = emf.createEntityManager();\n+        em.getTransaction().begin();\n+\t\tnewpc.setId(id);\n+\t\tnewpc.setName(\"xyz\");\n+\t\tem.merge(newpc);\n+\t\tem.getTransaction().commit();\n+\t\tem.close();\n+\t\t\n+\t\tem = emf.createEntityManager();\n+\t\tDerivedEntityFromMappedSuperWithoutId found = em.find(DerivedEntityFromMappedSuperWithoutId.class, id);\n+\t\tassertNotNull(found);\n+\t\tassertEquals(\"xyz\", found.getName());\n+\t\t\n+    }\n }"}]}

