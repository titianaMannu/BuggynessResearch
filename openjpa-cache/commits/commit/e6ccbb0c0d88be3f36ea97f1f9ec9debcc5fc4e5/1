{"sha":"e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5","node_id":"MDY6Q29tbWl0MjA2MzY0OmU2Y2NiYjBjMGQ4OGJlM2YzNmVhOTdmMWY5ZWM5ZGViY2M1ZmM0ZTU=","commit":{"author":{"name":"Jeremy Bauer","email":"jrbauer@apache.org","date":"2009-09-01T02:06:03Z"},"committer":{"name":"Jeremy Bauer","email":"jrbauer@apache.org","date":"2009-09-01T02:06:03Z"},"message":"OPENJPA-1274 Support cascade detach specified in an XML mapping file\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@809797 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"ba2be89a6b6f1b480d5e0c9fff0817bac364a57c","url":"https://api.github.com/repos/apache/openjpa/git/trees/ba2be89a6b6f1b480d5e0c9fff0817bac364a57c"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5","html_url":"https://github.com/apache/openjpa/commit/e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5","comments_url":"https://api.github.com/repos/apache/openjpa/commits/e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5/comments","author":null,"committer":null,"parents":[{"sha":"f13af4a400bfb678948ed7c37d45ac694f161de2","url":"https://api.github.com/repos/apache/openjpa/commits/f13af4a400bfb678948ed7c37d45ac694f161de2","html_url":"https://github.com/apache/openjpa/commit/f13af4a400bfb678948ed7c37d45ac694f161de2"}],"stats":{"total":857,"additions":854,"deletions":3},"files":[{"sha":"31b9aec90e0981e7336e8b464ed25ce1eb18f314","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/xml/Automobile.java","status":"added","additions":86,"deletions":0,"changes":86,"blob_url":"https://github.com/apache/openjpa/blob/e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/xml/Automobile.java","raw_url":"https://github.com/apache/openjpa/raw/e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/xml/Automobile.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/xml/Automobile.java?ref=e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5","patch":"@@ -0,0 +1,86 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.detach.xml;\n+\n+import java.util.Collection;\n+\n+public class Automobile {\n+    \n+    private long id;\n+    \n+    private String make;\n+    private String featureSelection;\n+        \n+    // Many To Many\n+    private Collection<Passenger> passengers;\n+    \n+    // One to One\n+    private Driver primaryDriver;\n+\n+    // Many to One\n+    private Owner owner;\n+\n+    public void setId(long id) {\n+        this.id = id;\n+    }\n+\n+    public long getId() {\n+        return id;\n+    }\n+\n+    public void setMake(String make) {\n+        this.make = make;\n+    }\n+\n+    public String getMake() {\n+        return make;\n+    }\n+\n+    public void setModel(String featureSelection) {\n+        this.featureSelection = featureSelection;\n+    }\n+\n+    public String getModel() {\n+        return featureSelection;\n+    }\n+\n+    public void setPassengers(Collection<Passenger> passengers) {\n+        this.passengers = passengers;\n+    }\n+\n+    public Collection<Passenger> getPassengers() {\n+        return passengers;\n+    }\n+\n+    public void setPrimaryDriver(Driver primaryDriver) {\n+        this.primaryDriver = primaryDriver;\n+    }\n+\n+    public Driver getPrimaryDriver() {\n+        return primaryDriver;\n+    }\n+\n+    public void setOwner(Owner owner) {\n+        this.owner = owner;\n+    }\n+\n+    public Owner getOwner() {\n+        return owner;\n+    }\n+}"},{"sha":"f3ce6eb7596c99e5dacd411c3dd81c0fc8765077","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/xml/Driver.java","status":"added","additions":59,"deletions":0,"changes":59,"blob_url":"https://github.com/apache/openjpa/blob/e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/xml/Driver.java","raw_url":"https://github.com/apache/openjpa/raw/e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/xml/Driver.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/xml/Driver.java?ref=e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5","patch":"@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+\n+package org.apache.openjpa.persistence.detach.xml;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.Table;\n+\n+@Entity\n+@Table(name=\"AUTO_DRIVER\")\n+public class Driver {\n+\n+    private long id;\n+    \n+    private String name;\n+\n+    // One To One\n+    private Automobile auto;\n+\n+    public void setId(long id) {\n+        this.id = id;\n+    }\n+\n+    public long getId() {\n+        return id;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setAuto(Automobile auto) {\n+        this.auto = auto;\n+    }\n+\n+    public Automobile getAuto() {\n+        return auto;\n+    }\n+}"},{"sha":"a5cae7c1f61dcbf5941938726026d199ab6638f2","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/xml/Owner.java","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/apache/openjpa/blob/e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/xml/Owner.java","raw_url":"https://github.com/apache/openjpa/raw/e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/xml/Owner.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/xml/Owner.java?ref=e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5","patch":"@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.detach.xml;\n+\n+import java.util.List;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.Table;\n+\n+@Entity\n+@Table(name=\"AUTO_OWNER\")\n+public class Owner {\n+\n+    private long id;\n+    \n+    private String name;\n+    \n+    // One-2-Many\n+    private List<Automobile> autos;\n+\n+    public void setId(long id) {\n+        this.id = id;\n+    }\n+\n+    public long getId() {\n+        return id;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setAutos(List<Automobile> autos) {\n+        this.autos = autos;\n+    }\n+\n+    public List<Automobile> getAutos() {\n+        return autos;\n+    }\n+    \n+}"},{"sha":"261642c0c7140ec08cc1f6ad2fd7a8fb607fb74f","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/xml/Passenger.java","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/apache/openjpa/blob/e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/xml/Passenger.java","raw_url":"https://github.com/apache/openjpa/raw/e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/xml/Passenger.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/xml/Passenger.java?ref=e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5","patch":"@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.detach.xml;\n+\n+import java.util.Collection;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.Table;\n+\n+@Entity\n+@Table(name=\"AUTO_PASSENGER\")\n+public class Passenger {\n+\n+    private long id;\n+    \n+    private String name;\n+\n+    // Many To Many (mappedBy=passengers)\n+    private Collection<Automobile> autos;\n+\n+    public void setId(long id) {\n+        this.id = id;\n+    }\n+\n+    public long getId() {\n+        return id;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setAutos(Collection<Automobile> autos) {\n+        this.autos = autos;\n+    }\n+\n+    public Collection<Automobile> getAutos() {\n+        return autos;\n+    }\n+    \n+}"},{"sha":"7734a96ae9d57b94498ab8a65893f32aee9cb16f","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/xml/TestDetachXML.java","status":"added","additions":203,"deletions":0,"changes":203,"blob_url":"https://github.com/apache/openjpa/blob/e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/xml/TestDetachXML.java","raw_url":"https://github.com/apache/openjpa/raw/e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/xml/TestDetachXML.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/xml/TestDetachXML.java?ref=e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5","patch":"@@ -0,0 +1,203 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.detach.xml;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.persistence.EntityManager;\n+import javax.persistence.EntityManagerFactory;\n+\n+import org.apache.openjpa.persistence.OpenJPAEntityManagerFactorySPI;\n+import org.apache.openjpa.persistence.OpenJPAPersistence;\n+import org.apache.openjpa.persistence.test.AbstractPersistenceTestCase;\n+\n+/**\n+ * These test verify the use of cascade-detach via orm.xml through\n+ * the cascade-detach and cascade-all elements.  Within each variation, a \n+ * bi-directional entity graph containing all relationship types is made \n+ * persistent.  Detach is called iteratively on a full graph and cascade\n+ * behavior is verified.\n+ */\n+public class TestDetachXML extends AbstractPersistenceTestCase {\n+\n+    /*\n+     * Test the use of cascade-detach with all relationship types.  All entities\n+     * in the graph should be detached when any entity is detached.\n+     */\n+    public void testDetach() throws Exception {\n+        OpenJPAEntityManagerFactorySPI emf = \n+            (OpenJPAEntityManagerFactorySPI)OpenJPAPersistence.\n+            createEntityManagerFactory(\"DetachXMLPU\",\n+                \"org/apache/openjpa/persistence/detach/\" +\n+                \"detach-persistence.xml\");\n+        \n+        try {\n+            verifyCascadeDetach(emf, true);                        \n+        } finally {\n+            cleanupEMF(emf);\n+        }      \n+    }\n+\n+    /*\n+     * Test the use of no cascade-detach with all relationship types.  The\n+     * base object should become detached and no other entities should be\n+     * detached.\n+     */\n+    public void testNoDetach()  throws Exception {\n+        OpenJPAEntityManagerFactorySPI emf = \n+            (OpenJPAEntityManagerFactorySPI)OpenJPAPersistence.\n+            createEntityManagerFactory(\"NoDetachXMLPU\",\n+                \"org/apache/openjpa/persistence/detach/\" +\n+                \"detach-persistence.xml\");\n+        \n+        try {\n+            verifyCascadeDetach(emf, false);\n+        } finally {\n+            cleanupEMF(emf);\n+        }      \n+    }\n+\n+    /*\n+     * Test the use of cascade-all with all relationship types.  All entities\n+     * in the graph should be detached when a single entity is detached.\n+     */\n+    public void testAllDetach()  throws Exception {\n+        OpenJPAEntityManagerFactorySPI emf = \n+            (OpenJPAEntityManagerFactorySPI)OpenJPAPersistence.\n+            createEntityManagerFactory(\"DetachAllXMLPU\",\n+                \"org/apache/openjpa/persistence/detach/\" +\n+                \"detach-persistence.xml\");\n+        \n+        try {\n+            verifyCascadeDetach(emf, true);\n+        } finally {\n+            cleanupEMF(emf);\n+        }      \n+    }\n+    \n+    private void verifyCascadeDetach(EntityManagerFactory emf, boolean cascade) {\n+        EntityManager em = emf.createEntityManager();\n+        List<Object> data = createData(em);\n+        assertNotNull(data);\n+        int size = data.size();\n+        assertTrue(data.size() > 0);\n+        \n+        // Cycle through all PCs, verifying detach state\n+        for (int i = 0; i < size; i++) {\n+            Object entity = data.get(i);\n+            em.detach(entity);\n+            for (int j = 0; j < size; j++ ) {\n+                if (j == i) {\n+                    // Base entity should always be detached\n+                    assertFalse(em.contains(entity));\n+                } else {\n+                    Object detent = data.get(j);\n+                    assertEquals(!cascade, em.contains(detent));\n+                }\n+            }\n+            // Populate new data\n+            data = createData(em);\n+        }\n+        \n+    }\n+    \n+    private List<Object> createData(EntityManager em) {\n+        List<Object> data = new ArrayList<Object>();\n+        Automobile auto = new Automobile();\n+        auto.setMake(\"Ford\");\n+        auto.setModel(\"Pinto\");\n+        data.add(auto);\n+                \n+        Automobile auto2 = new Automobile();\n+        auto2.setMake(\"Winnebago\");\n+        auto2.setModel(\"Sightseer\");\n+        data.add(auto2);\n+        \n+        List<Automobile> autos = new ArrayList<Automobile>();\n+        autos.add(auto);\n+        autos.add(auto2);\n+\n+        Passenger p1 = new Passenger();\n+        p1.setName(\"Crash test dummy 0\");\n+        p1.setAutos(autos);\n+        data.add(p1);\n+        \n+        Passenger p2 = new Passenger();\n+        p2.setName(\"Crash test dummy 1\");\n+        p2.setAutos(autos);\n+        data.add(p2);\n+        \n+        List<Passenger> passengers = new ArrayList<Passenger>();\n+        passengers.add(p1);\n+        passengers.add(p2);\n+        auto.setPassengers(passengers);\n+        auto2.setPassengers(passengers);\n+        \n+        Driver d1 = new Driver();\n+        d1.setAuto(auto);\n+        d1.setName(\"Crash test driver 0\");\n+        auto.setPrimaryDriver(d1);\n+        data.add(d1);\n+        \n+        Driver d2 = new Driver();\n+        d2.setAuto(auto2);\n+        d2.setName(\"Crash test driver 1\");\n+        auto2.setPrimaryDriver(d2);\n+        data.add(d2);\n+        \n+        Owner owner = new Owner();\n+        owner.setName(\"DMV\");\n+        owner.setAutos(autos);\n+        auto.setOwner(owner);\n+        auto2.setOwner(owner);\n+        data.add(owner);\n+\n+        // Persist the object graph\n+        em.getTransaction().begin();        \n+        em.persist(owner);\n+        em.getTransaction().commit();\n+        \n+        return data;\n+    }\n+\n+\n+    /**\n+     * Closes a specific entity manager factory and cleans up \n+     * associated tables.\n+     */\n+    private void cleanupEMF(OpenJPAEntityManagerFactorySPI emf1) \n+      throws Exception {\n+\n+        if (emf1 == null)\n+            return;\n+\n+        try {\n+            clear(emf1);\n+        } catch (Exception e) {\n+            // if a test failed, swallow any exceptions that happen\n+            // during tear-down, as these just mask the original problem.\n+            if (testResult.wasSuccessful())\n+                throw e;\n+        } finally {\n+            closeEMF(emf1);\n+        }\n+    }    \n+\n+}"},{"sha":"decb34b4e124314a40deffabfc8f902ef893bdd4","filename":"openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml?ref=e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5","patch":"@@ -51,6 +51,7 @@\n         <mapping-file>org/apache/openjpa/persistence/inheritance/orm.xml</mapping-file>\n         <mapping-file>org/apache/openjpa/persistence/orm.xml</mapping-file>\n         <mapping-file>org/apache/openjpa/persistence/embed/embed-assoc-over-orm.xml</mapping-file>\n+        <mapping-file>org/apache/openjpa/persistence/detach/detach-orm.xml</mapping-file>\n         <properties>\n             <property name=\"openjpa.jdbc.SynchronizeMappings\"\n                 value=\"buildSchema(ForeignKeys=true)\"/>"},{"sha":"b3c7529a0b2b70f6cb7f142162d94f3e5fac01f2","filename":"openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/detach/detach-all-orm.xml","status":"added","additions":96,"deletions":0,"changes":96,"blob_url":"https://github.com/apache/openjpa/blob/e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/detach/detach-all-orm.xml","raw_url":"https://github.com/apache/openjpa/raw/e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/detach/detach-all-orm.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/detach/detach-all-orm.xml?ref=e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5","patch":"@@ -0,0 +1,96 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+\n+ http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.\n+-->\n+<entity-mappings xmlns=\"http://java.sun.com/xml/ns/persistence/orm\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence/orm orm_2_0.xsd\"\n+    version=\"2.0\">\n+    \n+    <entity name=\"Automobile\" \n+            class=\"org.apache.openjpa.persistence.detach.xml.Automobile\" \n+            access=\"FIELD\">\n+        <attributes>\n+            <id name=\"id\">\n+                <generated-value/>\n+            </id>\n+            <basic name=\"make\"/>\n+            <basic name=\"featureSelection\"/>\n+            <many-to-one name=\"owner\">\n+                <cascade>\n+                    <cascade-all/>\n+                </cascade>\n+            </many-to-one>\n+            <one-to-one name=\"primaryDriver\">\n+                <cascade>\n+                    <cascade-all/>\n+                </cascade>\n+            </one-to-one>\n+            <many-to-many name=\"passengers\">\n+                <cascade>\n+                    <cascade-all/>\n+                </cascade>\n+            </many-to-many>\n+        </attributes>\n+    </entity>    \n+    <entity name=\"Driver\" \n+            class=\"org.apache.openjpa.persistence.detach.xml.Driver\" \n+            access=\"FIELD\">\n+        <attributes>\n+            <id name=\"id\">\n+                <generated-value/>\n+            </id>\n+            <basic name=\"name\"/>\n+            <one-to-one name=\"auto\">\n+                <cascade>\n+                    <cascade-all/>\n+                </cascade>\n+            </one-to-one>\n+        </attributes>\n+    </entity>\n+    <entity name=\"Passenger\" \n+            class=\"org.apache.openjpa.persistence.detach.xml.Passenger\" \n+            access=\"FIELD\">\n+        <attributes>\n+            <id name=\"id\">\n+                <generated-value/>\n+            </id>\n+            <basic name=\"name\"/>\n+            <many-to-many name=\"autos\">\n+                <cascade>\n+                    <cascade-all/>\n+                </cascade>\n+            </many-to-many>\n+        </attributes>\n+    </entity>\n+    <entity name=\"Owner\" \n+            class=\"org.apache.openjpa.persistence.detach.xml.Owner\" \n+            access=\"FIELD\">\n+        <attributes>\n+            <id name=\"id\">\n+                <generated-value/>\n+            </id>\n+            <basic name=\"name\"/>\n+            <one-to-many name=\"autos\">\n+                <cascade>\n+                    <cascade-all/>\n+                </cascade>\n+            </one-to-many>\n+        </attributes>\n+    </entity>    \n+</entity-mappings>"},{"sha":"96a7a175205e62bd445723b6c3f350a80fa85f2f","filename":"openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/detach/detach-orm.xml","status":"added","additions":102,"deletions":0,"changes":102,"blob_url":"https://github.com/apache/openjpa/blob/e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/detach/detach-orm.xml","raw_url":"https://github.com/apache/openjpa/raw/e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/detach/detach-orm.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/detach/detach-orm.xml?ref=e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5","patch":"@@ -0,0 +1,102 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+\n+ http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.\n+-->\n+<entity-mappings xmlns=\"http://java.sun.com/xml/ns/persistence/orm\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence/orm orm_2_0.xsd\"\n+    version=\"2.0\">\n+    \n+    <entity name=\"Automobile\" \n+            class=\"org.apache.openjpa.persistence.detach.xml.Automobile\" \n+            access=\"FIELD\">\n+        <attributes>\n+            <id name=\"id\">\n+                <generated-value/>\n+            </id>\n+            <basic name=\"make\"/>\n+            <basic name=\"featureSelection\"/>\n+            <many-to-one name=\"owner\">\n+                <cascade>\n+                    <cascade-persist/>\n+                    <cascade-detach/>                    \n+                </cascade>\n+            </many-to-one>\n+            <one-to-one name=\"primaryDriver\">\n+                <cascade>\n+                    <cascade-persist/>\n+                    <cascade-detach/>                    \n+                </cascade>\n+            </one-to-one>\n+            <many-to-many name=\"passengers\">\n+                <cascade>\n+                    <cascade-persist/>\n+                    <cascade-detach/>                    \n+                </cascade>\n+            </many-to-many>\n+        </attributes>\n+    </entity>    \n+    <entity name=\"Driver\" \n+            class=\"org.apache.openjpa.persistence.detach.xml.Driver\" \n+            access=\"FIELD\">\n+        <attributes>\n+            <id name=\"id\">\n+                <generated-value/>\n+            </id>\n+            <basic name=\"name\"/>\n+            <one-to-one name=\"auto\">\n+                <cascade>\n+                    <cascade-persist/>\n+                    <cascade-detach/>                    \n+                </cascade>\n+            </one-to-one>\n+        </attributes>\n+    </entity>\n+    <entity name=\"Passenger\" \n+            class=\"org.apache.openjpa.persistence.detach.xml.Passenger\" \n+            access=\"FIELD\">\n+        <attributes>\n+            <id name=\"id\">\n+                <generated-value/>\n+            </id>\n+            <basic name=\"name\"/>\n+            <many-to-many name=\"autos\">\n+                <cascade>\n+                    <cascade-persist/>\n+                    <cascade-detach/>                    \n+                </cascade>\n+            </many-to-many>\n+        </attributes>\n+    </entity>\n+    <entity name=\"Owner\" \n+            class=\"org.apache.openjpa.persistence.detach.xml.Owner\" \n+            access=\"FIELD\">\n+        <attributes>\n+            <id name=\"id\">\n+                <generated-value/>\n+            </id>\n+            <basic name=\"name\"/>\n+            <one-to-many name=\"autos\">\n+                <cascade>\n+                    <cascade-persist/>\n+                    <cascade-detach/>                    \n+                </cascade>\n+            </one-to-many>\n+        </attributes>\n+    </entity>    \n+</entity-mappings>"},{"sha":"ad12ce3d281b791c8c07d5cb6a9396e60e384a16","filename":"openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/detach/detach-persistence.xml","status":"added","additions":77,"deletions":0,"changes":77,"blob_url":"https://github.com/apache/openjpa/blob/e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/detach/detach-persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/detach/detach-persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/detach/detach-persistence.xml?ref=e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5","patch":"@@ -0,0 +1,77 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+\n+ http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.\n+-->\n+<persistence\n+    xmlns=\"http://java.sun.com/xml/ns/persistence\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence \n+        http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\"\n+    version=\"2.0\" >\n+    <persistence-unit name=\"DetachXMLPU\" transaction-type=\"RESOURCE_LOCAL\">\n+        <description>PU for cascade detach testing</description>\n+        <provider>\n+            org.apache.openjpa.persistence.PersistenceProviderImpl\n+        </provider>\n+        <mapping-file>\n+            org/apache/openjpa/persistence/detach/detach-orm.xml\n+        </mapping-file>\n+        <class>org.apache.openjpa.persistence.detach.xml.Automobile</class>\n+        <class>org.apache.openjpa.persistence.detach.xml.Driver</class>\n+        <class>org.apache.openjpa.persistence.detach.xml.Owner</class>\n+        <class>org.apache.openjpa.persistence.detach.xml.Passenger</class>\n+        <properties>\n+            <property name=\"openjpa.jdbc.SynchronizeMappings\" \n+                value=\"buildSchema(SchemaAction='drop,add')\"/> \n+        </properties>\n+    </persistence-unit>\n+    <persistence-unit name=\"NoDetachXMLPU\" transaction-type=\"RESOURCE_LOCAL\">\n+        <description>PU for cascade detach testing</description>\n+        <provider>\n+            org.apache.openjpa.persistence.PersistenceProviderImpl\n+        </provider>\n+        <mapping-file>\n+            org/apache/openjpa/persistence/detach/no-detach-orm.xml\n+        </mapping-file>\n+        <class>org.apache.openjpa.persistence.detach.xml.Automobile</class>\n+        <class>org.apache.openjpa.persistence.detach.xml.Driver</class>\n+        <class>org.apache.openjpa.persistence.detach.xml.Owner</class>\n+        <class>org.apache.openjpa.persistence.detach.xml.Passenger</class>\n+        <properties>\n+            <property name=\"openjpa.jdbc.SynchronizeMappings\" \n+                value=\"buildSchema(SchemaAction='drop,add')\"/> \n+        </properties>\n+    </persistence-unit>\n+    <persistence-unit name=\"DetachAllXMLPU\" transaction-type=\"RESOURCE_LOCAL\">\n+        <description>PU for cascade detach testing</description>\n+        <provider>\n+            org.apache.openjpa.persistence.PersistenceProviderImpl\n+        </provider>\n+        <mapping-file>\n+            org/apache/openjpa/persistence/detach/detach-all-orm.xml\n+        </mapping-file>\n+        <class>org.apache.openjpa.persistence.detach.xml.Automobile</class>\n+        <class>org.apache.openjpa.persistence.detach.xml.Driver</class>\n+        <class>org.apache.openjpa.persistence.detach.xml.Owner</class>\n+        <class>org.apache.openjpa.persistence.detach.xml.Passenger</class>\n+        <properties>\n+            <property name=\"openjpa.jdbc.SynchronizeMappings\" \n+                value=\"buildSchema(SchemaAction='drop,add')\"/> \n+        </properties>\n+    </persistence-unit>\n+</persistence>"},{"sha":"0e17bf7d4596e2c40d7603ea0654e8420847ffe7","filename":"openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/detach/no-detach-orm.xml","status":"added","additions":96,"deletions":0,"changes":96,"blob_url":"https://github.com/apache/openjpa/blob/e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/detach/no-detach-orm.xml","raw_url":"https://github.com/apache/openjpa/raw/e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/detach/no-detach-orm.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/detach/no-detach-orm.xml?ref=e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5","patch":"@@ -0,0 +1,96 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+\n+ http://www.apache.org/licenses/LICENSE-2.0\n+\n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.\n+-->\n+<entity-mappings xmlns=\"http://java.sun.com/xml/ns/persistence/orm\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence/orm orm_2_0.xsd\"\n+    version=\"2.0\">\n+    \n+    <entity name=\"Automobile\" \n+            class=\"org.apache.openjpa.persistence.detach.xml.Automobile\" \n+            access=\"FIELD\">\n+        <attributes>\n+            <id name=\"id\">\n+                <generated-value/>\n+            </id>\n+            <basic name=\"make\"/>\n+            <basic name=\"featureSelection\"/>\n+            <many-to-one name=\"owner\">\n+                <cascade>\n+                    <cascade-persist/>\n+                </cascade>\n+            </many-to-one>\n+            <one-to-one name=\"primaryDriver\">\n+                <cascade>\n+                    <cascade-persist/>\n+                </cascade>\n+            </one-to-one>\n+            <many-to-many name=\"passengers\">\n+                <cascade>\n+                    <cascade-persist/>\n+                </cascade>\n+            </many-to-many>\n+        </attributes>\n+    </entity>    \n+    <entity name=\"Driver\" \n+            class=\"org.apache.openjpa.persistence.detach.xml.Driver\" \n+            access=\"FIELD\">\n+        <attributes>\n+            <id name=\"id\">\n+                <generated-value/>\n+            </id>\n+            <basic name=\"name\"/>\n+            <one-to-one name=\"auto\">\n+                <cascade>\n+                    <cascade-persist/>\n+                </cascade>\n+            </one-to-one>\n+        </attributes>\n+    </entity>\n+    <entity name=\"Passenger\" \n+            class=\"org.apache.openjpa.persistence.detach.xml.Passenger\" \n+            access=\"FIELD\">\n+        <attributes>\n+            <id name=\"id\">\n+                <generated-value/>\n+            </id>\n+            <basic name=\"name\"/>\n+            <many-to-many name=\"autos\">\n+                <cascade>\n+                    <cascade-persist/>\n+                </cascade>\n+            </many-to-many>\n+        </attributes>\n+    </entity>\n+    <entity name=\"Owner\" \n+            class=\"org.apache.openjpa.persistence.detach.xml.Owner\" \n+            access=\"FIELD\">\n+        <attributes>\n+            <id name=\"id\">\n+                <generated-value/>\n+            </id>\n+            <basic name=\"name\"/>\n+            <one-to-many name=\"autos\">\n+                <cascade>\n+                    <cascade-persist/>\n+                </cascade>\n+            </one-to-many>\n+        </attributes>\n+    </entity>    \n+</entity-mappings>"},{"sha":"cd7e3cd406b354e721c8212820fa6a96b9e728fc","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","raw_url":"https://github.com/apache/openjpa/raw/e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java?ref=e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5","patch":"@@ -101,6 +101,7 @@\n     protected static final String ELEM_CASCADE_MER = \"cascade-merge\";\n     protected static final String ELEM_CASCADE_REM = \"cascade-remove\";\n     protected static final String ELEM_CASCADE_REF = \"cascade-refresh\";\n+    protected static final String ELEM_CASCADE_DET = \"cascade-detach\";\n     protected static final String ELEM_PU_META = \"persistence-unit-metadata\";\n     protected static final String ELEM_PU_DEF = \"persistence-unit-defaults\";\n     protected static final String ELEM_XML_MAP_META_COMPLETE =\n@@ -125,6 +126,7 @@\n         _elems.put(ELEM_CASCADE_REM, ELEM_CASCADE_REM);\n         _elems.put(ELEM_CASCADE_MER, ELEM_CASCADE_MER);\n         _elems.put(ELEM_CASCADE_REF, ELEM_CASCADE_REF);\n+        _elems.put(ELEM_CASCADE_DET, ELEM_CASCADE_DET);\n         _elems.put(ELEM_PU_META, ELEM_PU_META);\n         _elems.put(ELEM_PU_DEF, ELEM_PU_DEF);\n         _elems.put(ELEM_XML_MAP_META_COMPLETE, ELEM_XML_MAP_META_COMPLETE);\n@@ -570,7 +572,7 @@ else if (tag == ELEM_CASCADE)\n             ret = isMetaDataMode();\n         else if (tag == ELEM_CASCADE_ALL || tag == ELEM_CASCADE_PER\n             || tag == ELEM_CASCADE_MER || tag == ELEM_CASCADE_REM\n-            || tag == ELEM_CASCADE_REF)\n+            || tag == ELEM_CASCADE_REF || tag == ELEM_CASCADE_DET)\n             ret = startCascade(tag, attrs);\n \n         if (ret)\n@@ -718,7 +720,7 @@ else if (tag == ELEM_CASCADE)\n             ret = isMetaDataMode();\n         else if (tag == ELEM_CASCADE_ALL || tag == ELEM_CASCADE_PER\n             || tag == ELEM_CASCADE_MER || tag == ELEM_CASCADE_REM\n-            || tag == ELEM_CASCADE_REF)\n+            || tag == ELEM_CASCADE_REF || tag == ELEM_CASCADE_DET)\n             ret = startCascade(tag, attrs);\n \n         if (ret)\n@@ -1161,6 +1163,8 @@ protected boolean startCascade(Object tag, Attributes attrs)\n             cascades.add(MERGE);\n         if (all || ELEM_CASCADE_REF == tag)\n             cascades.add(REFRESH);\n+        if (all || ELEM_CASCADE_DET == tag)\n+            cascades.add(DETACH);\n         return true;\n     }\n "},{"sha":"77b065085c837f4e16bc7ca44d0de04f5187b3ab","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataSerializer.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataSerializer.java","raw_url":"https://github.com/apache/openjpa/raw/e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataSerializer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataSerializer.java?ref=e6ccbb0c0d88be3f36ea97f1f9ec9debcc5fc4e5","patch":"@@ -1032,7 +1032,12 @@ private void serializeCascades(ValueMetaData vmd)\n                 cascades = new ArrayList<String>();\n             cascades.add(\"cascade-refresh\");\n         }\n-        if (cascades != null && cascades.size() == 4) // ALL\n+        if (vmd.getCascadeDetach() == ValueMetaData.CASCADE_IMMEDIATE) {\n+            if (cascades == null)\n+                cascades = new ArrayList<String>();\n+            cascades.add(\"cascade-detach\");\n+        }\n+        if (cascades != null && cascades.size() == 5) // ALL\n         {\n             cascades.clear();\n             cascades.add(\"cascade-all\");"}]}

