{"sha":"e6f060175f6121a81c6bf028bdfab752070324e8","node_id":"MDY6Q29tbWl0MjA2MzY0OmU2ZjA2MDE3NWY2MTIxYTgxYzZiZjAyOGJkZmFiNzUyMDcwMzI0ZTg=","commit":{"author":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2008-08-15T22:19:36Z"},"committer":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2008-08-15T22:19:36Z"},"message":"Minor typo corrections in message files.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/1.2.x@686402 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"115e964e7acd6e4d84fb9f83daaa268432e18ff2","url":"https://api.github.com/repos/apache/openjpa/git/trees/115e964e7acd6e4d84fb9f83daaa268432e18ff2"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/e6f060175f6121a81c6bf028bdfab752070324e8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/e6f060175f6121a81c6bf028bdfab752070324e8","html_url":"https://github.com/apache/openjpa/commit/e6f060175f6121a81c6bf028bdfab752070324e8","comments_url":"https://api.github.com/repos/apache/openjpa/commits/e6f060175f6121a81c6bf028bdfab752070324e8/comments","author":null,"committer":null,"parents":[{"sha":"83a41e6f714aa26b749ae0282b44bd72e4482d04","url":"https://api.github.com/repos/apache/openjpa/commits/83a41e6f714aa26b749ae0282b44bd72e4482d04","html_url":"https://github.com/apache/openjpa/commit/83a41e6f714aa26b749ae0282b44bd72e4482d04"}],"stats":{"total":52,"additions":26,"deletions":26},"files":[{"sha":"401cd51bb487eb55df3421efe5ddec8347194ad7","filename":"openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/conf/localizer.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/e6f060175f6121a81c6bf028bdfab752070324e8/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/conf/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/e6f060175f6121a81c6bf028bdfab752070324e8/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/conf/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/conf/localizer.properties?ref=e6f060175f6121a81c6bf028bdfab752070324e8","patch":"@@ -69,7 +69,7 @@ EagerFetchMode-expert: true\n \n SubclassFetchMode-name: Subclass fetch mode\n SubclassFetchMode-desc: Specifies the default subclass fetch mode to use. \\\n-\tEitehr \"none\" to always select data in base class tables only, \"join\" to \\\n+\tEither \"none\" to always select data in base class tables only, \"join\" to \\\n \touter-join to tables for all subclasses, or \"parallel\" to execute a \\\n \tseparate select in parallel for each possible subclass.  Parallel mode is \\\n \tonly applicable to Query execution; in other situations it mirrors \\"},{"sha":"815e939edec7e7db2414e3469b1709a01f0dde82","filename":"openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/localizer.properties","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/e6f060175f6121a81c6bf028bdfab752070324e8/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/e6f060175f6121a81c6bf028bdfab752070324e8/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/localizer.properties?ref=e6f060175f6121a81c6bf028bdfab752070324e8","patch":"@@ -129,7 +129,7 @@ generic-no-fkcol-target-adapt: \"{0}\" does not supply a target for column \\\n generic-bad-fktarget: \"{0}\" defines a target of \"{1}\" for column \"{2}\", but \\\n \tthat target does not exist in table \"{3}\".\n generic-bad-fktargetcls: \"{0}\" defines target field \"{1}\" for column \\\n-\t\"{2}\", but OpenJPA cannot deterimine the owning class for that field.\n+\t\"{2}\", but OpenJPA cannot determine the owning class for that field.\n generic-bad-fktargetfield: \"{0}\" defines target field \"{1}\" for column \\\n \t\"{2}\", but that field does not exist in type \"{3}\".\n generic-fktargetfield-cols: \"{0}\" defines target field \"{1}\" for column \\\n@@ -146,7 +146,7 @@ generic-create-defer-fk: \"{0}\" marks its columns as having a deferred foreign \\\n \tdeferred constraints.  Creating an undeferred constraint.\n generic-unsupported-fk-action: \"{0}\" uses an unsupported foreign key delete or \\\n \tupdate action on its columns.  Reverting to a logical foreign key.\n-generic-const-join: \"{0}\" attmpts to join a constant value to another constant \\\n+generic-const-join: \"{0}\" attempts to join a constant value to another constant \\\n \tvalue.\n superclass-no-fk-cols: Type \"{0}\" is missing information on how to join to \\\n \tits superclass.\n@@ -169,7 +169,7 @@ superclass-no-fkcol-target-adapt: Type \"{0}\" does not supply a target for \\\n superclass-bad-fktarget: Type \"{0}\" defines a target of \"{1}\" for superclass \\\n \tjoin column \"{2}\", but that target does not exist in table \"{3}\".\n superclass-bad-fktargetcls: \"{0}\" defines target field \"{1}\" for superclass \\\n-\tjoin column \"{2}\", but OpenJPA cannot deterimine the owning class for that \\\n+\tjoin column \"{2}\", but OpenJPA cannot determine the owning class for that \\\n \tfield.\n superclass-bad-fktargetfield: Type \"{0}\" defines target field of \"{1}\" for \\\n \tsuperclass join column \"{2}\", but that field does not exist in type \"{3}\".\n@@ -191,7 +191,7 @@ superclass-create-defer-fk: Type \"{0}\" marks its superclass join columns as \\\n superclass-unsupported-fk-action: Type \"{0}\" uses an unsupported foreign key \\\n \tdelete or update action on its superclass join columns.  Reverting to a \\\n \tlogical foreign key.\n-superclass-const-join: \"{0}\" attmpts to join a constant value to another \\\n+superclass-const-join: \"{0}\" attempts to join a constant value to another \\\n \tconstant value.\n join-no-index-cols: \"{0}\" declares a join index, but has no join columns.\n join-index-exists: \"{0}\" marks its join columns as explicitly not indexed, but \\\n@@ -237,7 +237,7 @@ join-no-fkcol-target-adapt: \"{0}\" does not supply a target for join column \\\n join-bad-fktarget: \"{0}\" defines a target of \"{1}\" for join column \"{2}\", but \\\n \tthat target does not exist in table \"{3}\".\n join-bad-fktargetcls: \"{0}\" defines target field \"{1}\" for join column \"{2}\", \\\n-\tbut OpenJPA cannot deterimine the owning class for that field.\n+\tbut OpenJPA cannot determine the owning class for that field.\n join-bad-fktargetfield: \"{0}\" defines target field of \"{1}\" for join column \\\n \t\"{2}\", but that field does not exist in type \"{3}\".\n join-fktargetfield-cols: \"{0}\" defines target field \"{1}\" for join column \\\n@@ -255,7 +255,7 @@ join-create-defer-fk: \"{0}\" marks its join columns as having a deferred \\\n \tsupport deferred constraints.  Creating an undeferred constraint.\n join-unsupported-fk-action: \"{0}\" uses an unsupported foreign key delete or \\\n \tupdate action on its join columns.  Reverting to a logical foreign key.\n-join-const-join: \"{0}\" attmpts to join a constant value to another constant \\\n+join-const-join: \"{0}\" attempts to join a constant value to another constant \\\n \tvalue.\n unmapped: Attempt to map \"{0}\" failed: the owning entity is not mapped.\n col-wrong-table: When mapping \"{0}\" to table \"{1}\", found a column mapped to \\"},{"sha":"7a12b9fb29e6afd0efaf3565849a65f7a9d1655f","filename":"openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/strats/localizer.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/e6f060175f6121a81c6bf028bdfab752070324e8/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/strats/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/e6f060175f6121a81c6bf028bdfab752070324e8/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/strats/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/meta/strats/localizer.properties?ref=e6f060175f6121a81c6bf028bdfab752070324e8","patch":"@@ -126,7 +126,7 @@ outer-join-support: The subclass-join class indicator mapped to \"{0}\" requires \\\n \t\"traditional\" join syntax, which does not support outer joins.  To \\\n \tuse SQL 92 joins instead, set the following property:\\n\\\n \topenjpa.jdbc.DBDictionary: JoinSyntax=sql92\n-unknown-discrim-value: Could not map disciminator value \"{0}\" to any \\\n+unknown-discrim-value: Could not map discriminator value \"{0}\" to any \\\n \tknown subclasses of the requested class \"{1}\" (known discriminator \\\n \tvalues: {2}).\n bad-unmapped-rel: \"{0}\" cannot be mapped without stringifying the oid of \\"},{"sha":"434ffd2fe5a75c2b564d4cd8af6f61abd595c6e1","filename":"openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/localizer.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/e6f060175f6121a81c6bf028bdfab752070324e8/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/e6f060175f6121a81c6bf028bdfab752070324e8/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/localizer.properties?ref=e6f060175f6121a81c6bf028bdfab752070324e8","patch":"@@ -157,9 +157,9 @@ illegal-method: {0}.{1}() is illegal to be invoked\n column-not-mapped: SQLResultSetMapping \"{0}\" does not map the columns \"{1}\" \\\n \tthat are selected by the SQL query\\r\\n \"{2}\"\n dictionary-configuration: DBDictionary configuration: \\n{0}\n-oracle-timestamp-bug: An ArrayIndexOutOfBoundsException has occured when \\\n+oracle-timestamp-bug: An ArrayIndexOutOfBoundsException has occurred when \\\n     getting a timestamp value. This can happen when using versions of the \\\n-    Oracle JDBC driver greater than 9.2 in conjuncion with a server version \\\n+    Oracle JDBC driver greater than 9.2 in conjunction with a server version \\\n     less than 9.2. Downgrading the driver will solve this, or it can be \\\n     worked around by setting the \"SupportsTimestampNanos\" DBDictionary \\\n     property to \"true\"."},{"sha":"a02bf86a84ecc3bd67793c081dabfd2d2b16a8a2","filename":"openjpa-kernel/src/main/resources/org/apache/openjpa/conf/localizer.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/e6f060175f6121a81c6bf028bdfab752070324e8/openjpa-kernel/src/main/resources/org/apache/openjpa/conf/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/e6f060175f6121a81c6bf028bdfab752070324e8/openjpa-kernel/src/main/resources/org/apache/openjpa/conf/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/resources/org/apache/openjpa/conf/localizer.properties?ref=e6f060175f6121a81c6bf028bdfab752070324e8","patch":"@@ -129,7 +129,7 @@ MaxFetchDepth-displayorder: 50\n MaxFetchDepth-expert: true\n \n FetchGroups-name: Fetch groups to add to default fetch group\n-FetchGroups-desc: A comma-separated list of fetch group names that wll be \\\n+FetchGroups-desc: A comma-separated list of fetch group names that will be \\\n \tloaded by default when fetching data from the data store.\n FetchGroups-type: Optimization\n FetchGroups-cat: Fetching"},{"sha":"014e0aca1d83f02cf4df3dc635da0cadc4603f70","filename":"openjpa-kernel/src/main/resources/org/apache/openjpa/ee/localizer.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/e6f060175f6121a81c6bf028bdfab752070324e8/openjpa-kernel/src/main/resources/org/apache/openjpa/ee/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/e6f060175f6121a81c6bf028bdfab752070324e8/openjpa-kernel/src/main/resources/org/apache/openjpa/ee/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/resources/org/apache/openjpa/ee/localizer.properties?ref=e6f060175f6121a81c6bf028bdfab752070324e8","patch":"@@ -29,7 +29,7 @@ was-transaction-id-exception: Unable to determine identity of the current \\\n \tWebSphere managed transaction. Please ensure that your are running the \\\r\n \tapplication from within WebSphere Application Server (version 5.0.2 or \\ \r\n \tnewer).\r\n-was-reflection-exception: An error occured reflecting WebSphere proprietary \\\r\n+was-reflection-exception: An error occurred reflecting WebSphere proprietary \\\r\n \tinterfaces. Please ensure that you are running the application from within \\\r\n \tWebSphere Application Server (version 5.0.2 or newer).\r\n was-lookup-error: An error occurred looking up the WebSphere extended JTA \\\r"},{"sha":"d82698b08a8b9d08e2457606f0fb0ad8978f430c","filename":"openjpa-kernel/src/main/resources/org/apache/openjpa/enhance/localizer.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/e6f060175f6121a81c6bf028bdfab752070324e8/openjpa-kernel/src/main/resources/org/apache/openjpa/enhance/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/e6f060175f6121a81c6bf028bdfab752070324e8/openjpa-kernel/src/main/resources/org/apache/openjpa/enhance/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/resources/org/apache/openjpa/enhance/localizer.properties?ref=e6f060175f6121a81c6bf028bdfab752070324e8","patch":"@@ -78,7 +78,7 @@ enhance-adddefaultconst: The type \"{0}\" must have a no-args constructor. \\\n \tAdding a {1} no-args constructor.\n enhance-cloneable:The type \"{0}\" implements Cloneable but does not call \\\n \tsuper.clone ().  Adding protected super.clone () invocation.\n-enhance-uid-access: An IllegalAccessException occured when trying to \\\n+enhance-uid-access: An IllegalAccessException occurred when trying to \\\n \tobtain the serialVersionUID field for the class \"{0}\". This is a known \\\n \tbug in JDK 1.4+ when using a custom ClassLoader to enhance a \\\n \tclass that implements java.io.Serializable. If compatibility with \\\n@@ -91,7 +91,7 @@ pcdata-created: Dynamic PCData created: name=\"{0}\", for type=\"{1}\"\n factory-not-oidloader: Attempt to run the application id tool under metadata \\\n \tconfiguration that does not support it.  The application id tool can only \\\n \trun under certain metadata factory settings.\n-str-cons: The id type \"{0}\" specfied by persistent type \"{1}\" \\  \n+str-cons: The id type \"{0}\" specified by persistent type \"{1}\" \\  \n \tdoes not have a public {0}(String) or {0}(Class, String) constructor.\n appid-start: Generating an application id for type \"{0}\".\n appid-invalid: Type \"{0}\" does not have metadata, does not use application \\"},{"sha":"b44c422062c6094d9e2d1d2ba5d42fa941ff9631","filename":"openjpa-kernel/src/main/resources/org/apache/openjpa/kernel/jpql/localizer.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/e6f060175f6121a81c6bf028bdfab752070324e8/openjpa-kernel/src/main/resources/org/apache/openjpa/kernel/jpql/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/e6f060175f6121a81c6bf028bdfab752070324e8/openjpa-kernel/src/main/resources/org/apache/openjpa/kernel/jpql/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/resources/org/apache/openjpa/kernel/jpql/localizer.properties?ref=e6f060175f6121a81c6bf028bdfab752070324e8","patch":"@@ -30,7 +30,7 @@ cant-resolve-type: The entity \"{0}\" cannot be resolved; please ensure that \\\n not-identifer: The specified node (\"{0}\") is not a valid identifier.\n no-field: No field named \"{1}\" in class \"{0}\".\n unaccessible-field: The field named \"{1}\" in class \"{0}\" could not be accessed.\n-multi-children: Expression \"{0}\" does not allow mutliple children (\"{1}\").\n+multi-children: Expression \"{0}\" does not allow multiple children (\"{1}\").\n no-children: Expression \"{0}\" requires at least one child.\n unknown-comp: Unknown comparison operator \"{0}\".\n wrong-child-count: Wrong number of arguments to expression \\"},{"sha":"89df91627d9f31ad6c948760e62271f6cb5b5ebf","filename":"openjpa-kernel/src/main/resources/org/apache/openjpa/kernel/localizer.properties","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/e6f060175f6121a81c6bf028bdfab752070324e8/openjpa-kernel/src/main/resources/org/apache/openjpa/kernel/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/e6f060175f6121a81c6bf028bdfab752070324e8/openjpa-kernel/src/main/resources/org/apache/openjpa/kernel/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/resources/org/apache/openjpa/kernel/localizer.properties?ref=e6f060175f6121a81c6bf028bdfab752070324e8","patch":"@@ -38,7 +38,7 @@ pessimistic-mutate: You are attempting to directly mutate a persistent second \\\n \tclass object (such as a collection or map field) that you obtained before \\\n \tthe transaction began.  After beginning a datastore transaction, you \\\n \tmust re-obtain any references to mutable second class objects from the \\\n-\towning persistent object.  Detected attmpt to mutate value of field \"{0}\" \\\n+\towning persistent object.  Detected attempt to mutate value of field \"{0}\" \\\n \tin instance \"{1}\".  This instance may not be locked correctly.\n not-derefed: Encountered unknown dependent instance \"{0}\".  This error is \\\n \toften caused by either removing a dependent instance from one dependent \\\n@@ -291,7 +291,7 @@ unbound-params: Cannot execute query; some declared parameters were not given \\\n extra-params: More parameters were passed to execute() than were declared: \\\n \t{1} parameters were specified for query execution, but only {0} \\\n \tparameters were declared in the query.\n-null-primitive-param: Parameter \"{0}\" was declared with a primtive type, but \\\n+null-primitive-param: Parameter \"{0}\" was declared with a primitive type, but \\\n \thas been given a null value.\n merged-aggregate: This query on candidate type \"{0}\" with filter \"{1}\" \\\n \tinvolves combining the results of multiple sub-queries.  However, because \\\n@@ -342,7 +342,7 @@ bad-datastore-method: Method \"{0}(StoreContext, ClassMetaData, boolean, Map, \\\n \tthe method name supplied in your MethodQL query filter.  OpenJPA is \\\n \tattempting to execute this query against the datastore; if you implemented \\\n \tthe in-memory method instead (a method with the same signature but with an \\\n-\tObject argument) and want this query to execute in-memory, supplly a \\\n+\tObject argument) and want this query to execute in-memory, supply a \\\n \tCollection of candidates to filter.\n only-update-constants: Bulk update queries when executed in memory \\\n \tmay only update to constant values.\n@@ -358,7 +358,7 @@ savepoint-init: This savepoint has already been initialized.\n savepoint-flush-not-supported: The configured SavepointManager does not \\\n \tsupport incremental flushing when a savepoint has been set.  You must \\\n \trelease your savepoints before flushing.\n-callback-err: Errors occured processing listener callbacks.  See the nested \\\n+callback-err: Errors occurred processing listener callbacks.  See the nested \\\n     exceptions for details.\n bad-agg-listener-hint: Query hint value \"{0}\" ({1}) cannot be converted into \\\n \tan aggregate listener."},{"sha":"e2824a140e544ba470d5f0a8a9a5899e4805a847","filename":"openjpa-kernel/src/main/resources/org/apache/openjpa/meta/localizer.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/e6f060175f6121a81c6bf028bdfab752070324e8/openjpa-kernel/src/main/resources/org/apache/openjpa/meta/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/e6f060175f6121a81c6bf028bdfab752070324e8/openjpa-kernel/src/main/resources/org/apache/openjpa/meta/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/resources/org/apache/openjpa/meta/localizer.properties?ref=e6f060175f6121a81c6bf028bdfab752070324e8","patch":"@@ -311,8 +311,8 @@ scan-found-names: Scan of \"{1}\" found persistent types {0}.\n parse-found-names: parsePersistentTypeNames() found {0}.\n interface-load: Dynamic implementation of managed \"{0}\" can not be defined \\\n \tusing classloader \"{1}\". See nested exception for details.\n-interface-load2: Enhanced dynamic implementaion of managed \"{0}\" can not be \\\n+interface-load2: Enhanced dynamic implementation of managed \"{0}\" can not be \\\n \tdefined using classloader \"{1}\". See nested exception for details.\n-interface-badenhance: Dynamic implementaion of \"{0}\" can not be enhanced.\n+interface-badenhance: Dynamic implementation of \"{0}\" can not be enhanced.\n bad-externalized-value: Value \"{0}\" was not found in the list of \\\n \tExternalValues for field \"{2}\". Valid values are {1}"},{"sha":"ef55f95f89f3bb15968a45fc42256f1f8e1e0d06","filename":"openjpa-kernel/src/main/resources/org/apache/openjpa/util/localizer.properties","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/e6f060175f6121a81c6bf028bdfab752070324e8/openjpa-kernel/src/main/resources/org/apache/openjpa/util/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/e6f060175f6121a81c6bf028bdfab752070324e8/openjpa-kernel/src/main/resources/org/apache/openjpa/util/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/resources/org/apache/openjpa/util/localizer.properties?ref=e6f060175f6121a81c6bf028bdfab752070324e8","patch":"@@ -34,7 +34,7 @@ lock-timeout: Could not obtain a lock on object \"{0}\" in {1} milliseconds.\n not-found: The instance \"{0}\" does not exist in the data store.\n obj-exists: The instance \"{0}\" cannot be persisted, because it conflicts with \\\n \tan existing instance.\n-not-found-multi: The follwing instnaces do not exist in the data store: {0}\n+not-found-multi: The following instances do not exist in the data store: {0}\n opt-lock: An optimistic lock violation was detected when flushing object \\\n \tinstance \"{0}\" to the data store.  This indicates that the \\\n \tobject was concurrently modified in another transaction.\n@@ -44,7 +44,7 @@ opt-lock-multi: Optimistic locking errors were detected when flushing to the \\\n opt-lock-nested: Optimistic locking errors were detected when \\\n \tflushing to the data store.  This indicates that some objects were \\\n \tconcurrently modified in another transaction.  Each exception in \\\n-\tthe nested throwables array contains a failed object representing \\\n+\tthe nested Throwables array contains a failed object representing \\\n \ta concurrently modified object.\n bad-array: Unable to copy array: {0}.\n no-proxy-final: Unable to create a second class object proxy for final class \\"},{"sha":"8ddc13c3f109703b9425d880e36b7b787ca4fd3f","filename":"openjpa-lib/src/main/resources/org/apache/openjpa/lib/conf/localizer.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/e6f060175f6121a81c6bf028bdfab752070324e8/openjpa-lib/src/main/resources/org/apache/openjpa/lib/conf/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/e6f060175f6121a81c6bf028bdfab752070324e8/openjpa-lib/src/main/resources/org/apache/openjpa/lib/conf/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/resources/org/apache/openjpa/lib/conf/localizer.properties?ref=e6f060175f6121a81c6bf028bdfab752070324e8","patch":"@@ -21,7 +21,7 @@ obj-create: An instance of the class \"{0}\" could not be instantiated.  Make \\\n \tsure the class has a public no-args constructor.\n prop-parse: There was an error parsing the properties string \"{0}\".  Please \\\n \tcheck that the format is: \"<name1>=<value1> <name2>=<value2> ...\".\n-naming-err:\tThere was an error duing JNDI lookup of the name \"{0}\".\n+naming-err:\tThere was an error during JNDI lookup of the name \"{0}\".\n invalid-config-params: There was an error while setting up the configuration \\\n \tplugin option \"{0}\". The plugin was of type \"{1}\". Setter methods for the \\\n \tfollowing plugin properties were not available in that type: {2}. \\"},{"sha":"18fa1181156b75ec3908898eff8e12967af920f9","filename":"openjpa-lib/src/main/resources/org/apache/openjpa/lib/jdbc/localizer.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/e6f060175f6121a81c6bf028bdfab752070324e8/openjpa-lib/src/main/resources/org/apache/openjpa/lib/jdbc/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/e6f060175f6121a81c6bf028bdfab752070324e8/openjpa-lib/src/main/resources/org/apache/openjpa/lib/jdbc/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/resources/org/apache/openjpa/lib/jdbc/localizer.properties?ref=e6f060175f6121a81c6bf028bdfab752070324e8","patch":"@@ -35,7 +35,7 @@ tracker-total: total\n tracker-max: max\n tracker-average: average\n tracker-ms: ms\n-tracker-occurances: occurances\n+tracker-occurances: occurrences\n tracker-slowest-statements: slowest statements\n rsrc-closed: The connection \"{0}\" has already been closed.  The embedded \\\n \tstack trace for this exception details the closure point."},{"sha":"2323f27df46eff6e056cc37aebe611197356abdd","filename":"openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/e6f060175f6121a81c6bf028bdfab752070324e8/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/e6f060175f6121a81c6bf028bdfab752070324e8/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties?ref=e6f060175f6121a81c6bf028bdfab752070324e8","patch":"@@ -59,7 +59,7 @@ unnamed-fg: \"{0}\" declares an unnamed fetch group.  All fetch groups \\\n bad-fg-field: Fetch group \"{0}\" in type \"{1}\" includes field \"{2}\", but \\\n \tthis field is not declared in \"{1}\", or is not persistent.  Currently, \\\n \tOpenJPA only supports declared fields in fetch groups.\n-missing-included-fg:\"{0}\" declares a fecth group \"{1}\" includes \"{2}\". But \\\n+missing-included-fg:\"{0}\" declares a fetch group \"{1}\" includes \"{2}\". But \\\n \tthe included fetch group \"{2}\" can not be found in \"{0}\". Currently, all \\\n \tincluded fetch groups must be declared within the same entity scope.\n not-update-delete-query: Cannot perform an update or delete operation \\"}]}

