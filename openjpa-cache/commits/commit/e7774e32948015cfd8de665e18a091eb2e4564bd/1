{"sha":"e7774e32948015cfd8de665e18a091eb2e4564bd","node_id":"C_kwDOAAMmHNoAKGU3Nzc0ZTMyOTQ4MDE1Y2ZkOGRlNjY1ZTE4YTA5MWViMmU0NTY0YmQ","commit":{"author":{"name":"Romain Manni-Bucau","email":"rmannibucau@gmail.com","date":"2021-12-01T07:15:38Z"},"committer":{"name":"GitHub","email":"noreply@github.com","date":"2021-12-01T07:15:38Z"},"message":"Merge pull request #90 from bmarwell/OPENJPA-2891_annotation\n\n[OPENJPA-2891] allow configuration of @Generated annotation.","tree":{"sha":"f27ed471d15bb13f8e63cebc37608cf817a84510","url":"https://api.github.com/repos/apache/openjpa/git/trees/f27ed471d15bb13f8e63cebc37608cf817a84510"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/e7774e32948015cfd8de665e18a091eb2e4564bd","comment_count":0,"verification":{"verified":true,"reason":"valid","signature":"-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhpyEaCRBK7hj4Ov3rIwAA6M0IAD8cZxGymWeX+2QLVh1EBPRF\ngRlGMeucK1LcobNw9tdlfP2jk70biI5+OYlZFPH5N3hf0oF/jgWFTJUhrY7XRI5b\nGVywQyAIxhp7O9OJjzfgw7YRJtGoo5kFdD93JAsmXBZKUNPpONdY6QmxIEqOw7a0\nCKvrSlGqRg45Fb9rhCg12YFeSsbhx4k1g6rQ2G5gpgUYUS2XFCM9OY9h1G4IVtG7\nUwBFzkOFhLQoGfBLdCjA51BNmDoVgoE6TcrE2LUc64DbKKXD23WPyBtADj24XbMQ\nXNPO/ZGVw4y75YlWvml1hHNomTTXn7jZ9GCU8ztYytWcYuZ3Q/dHFDQvGckqv2s=\n=oHW4\n-----END PGP SIGNATURE-----\n","payload":"tree f27ed471d15bb13f8e63cebc37608cf817a84510\nparent cb258aee424374a79b9d4fd7728d5ee5eb2cdc17\nparent 3e9644d990cb5dd182303bd048622cae5f1f3882\nauthor Romain Manni-Bucau <rmannibucau@gmail.com> 1638342938 +0100\ncommitter GitHub <noreply@github.com> 1638342938 +0100\n\nMerge pull request #90 from bmarwell/OPENJPA-2891_annotation\n\n[OPENJPA-2891] allow configuration of @Generated annotation."}},"url":"https://api.github.com/repos/apache/openjpa/commits/e7774e32948015cfd8de665e18a091eb2e4564bd","html_url":"https://github.com/apache/openjpa/commit/e7774e32948015cfd8de665e18a091eb2e4564bd","comments_url":"https://api.github.com/repos/apache/openjpa/commits/e7774e32948015cfd8de665e18a091eb2e4564bd/comments","author":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","site_admin":false},"committer":{"login":"web-flow","id":19864447,"node_id":"MDQ6VXNlcjE5ODY0NDQ3","avatar_url":"https://avatars.githubusercontent.com/u/19864447?v=4","gravatar_id":"","url":"https://api.github.com/users/web-flow","html_url":"https://github.com/web-flow","followers_url":"https://api.github.com/users/web-flow/followers","following_url":"https://api.github.com/users/web-flow/following{/other_user}","gists_url":"https://api.github.com/users/web-flow/gists{/gist_id}","starred_url":"https://api.github.com/users/web-flow/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/web-flow/subscriptions","organizations_url":"https://api.github.com/users/web-flow/orgs","repos_url":"https://api.github.com/users/web-flow/repos","events_url":"https://api.github.com/users/web-flow/events{/privacy}","received_events_url":"https://api.github.com/users/web-flow/received_events","type":"User","site_admin":false},"parents":[{"sha":"cb258aee424374a79b9d4fd7728d5ee5eb2cdc17","url":"https://api.github.com/repos/apache/openjpa/commits/cb258aee424374a79b9d4fd7728d5ee5eb2cdc17","html_url":"https://github.com/apache/openjpa/commit/cb258aee424374a79b9d4fd7728d5ee5eb2cdc17"},{"sha":"3e9644d990cb5dd182303bd048622cae5f1f3882","url":"https://api.github.com/repos/apache/openjpa/commits/3e9644d990cb5dd182303bd048622cae5f1f3882","html_url":"https://github.com/apache/openjpa/commit/3e9644d990cb5dd182303bd048622cae5f1f3882"}],"stats":{"total":71,"additions":66,"deletions":5},"files":[{"sha":"481d334deca74ac7b44682756197b00dc73e89f0","filename":"openjpa-persistence/pom.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/e7774e32948015cfd8de665e18a091eb2e4564bd/openjpa-persistence/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/e7774e32948015cfd8de665e18a091eb2e4564bd/openjpa-persistence/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/pom.xml?ref=e7774e32948015cfd8de665e18a091eb2e4564bd","patch":"@@ -60,5 +60,10 @@\n             <version>4.2.0</version>\n             <scope>provided</scope>\n         </dependency>\n+        <!-- annotation javax.annotation.Generated -->\n+        <dependency>\n+            <groupId>javax.annotation</groupId>\n+            <artifactId>javax.annotation-api</artifactId>\n+        </dependency>\n     </dependencies>\n </project>"},{"sha":"10874449c7e0b779032dc3eca85f8bc7ea07f8df","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/meta/AnnotationProcessor6.java","status":"modified","additions":43,"deletions":5,"changes":48,"blob_url":"https://github.com/apache/openjpa/blob/e7774e32948015cfd8de665e18a091eb2e4564bd/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/meta/AnnotationProcessor6.java","raw_url":"https://github.com/apache/openjpa/raw/e7774e32948015cfd8de665e18a091eb2e4564bd/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/meta/AnnotationProcessor6.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/meta/AnnotationProcessor6.java?ref=e7774e32948015cfd8de665e18a091eb2e4564bd","patch":"@@ -99,7 +99,8 @@\n                     \"openjpa.source\",\n                     \"openjpa.naming\",\n                     \"openjpa.header\",\n-                    \"openjpa.metamodel\"\n+                    \"openjpa.metamodel\",\n+                    \"openjpa.addGeneratedAnnotation\"\n                   })\n \n public class AnnotationProcessor6 extends AbstractProcessor {\n@@ -111,6 +112,9 @@\n     private boolean active;\n     private static Localizer _loc =  Localizer.forPackage(AnnotationProcessor6.class);\n     private SourceVersion supportedSourceVersion;\n+    private String addGeneratedOption;\n+    private Class<?> generatedAnnotation;\n+    private Date generationDate;\n \n     /**\n      * Category of members as per JPA 2.0 type system.\n@@ -213,6 +217,8 @@ public synchronized void init(ProcessingEnvironment processingEnv) {\n         setNamingPolicy();\n         setHeader();\n         handler = new SourceAnnotationHandler(processingEnv, logger);\n+        setAddGeneratedAnnotation();\n+        this.generationDate = new Date();\n     }\n \n     /**\n@@ -311,10 +317,27 @@ private void annotate(SourceCode source, String originalClass) {\n         SourceCode.Class cls = source.getTopLevelClass();\n         cls.addAnnotation(StaticMetamodel.class.getName())\n             .addArgument(\"value\", originalClass + \".class\", false);\n-        if (generatedSourceVersion >= 6) {\n-            cls.addAnnotation(Generated.class.getName())\n-            .addArgument(\"value\", this.getClass().getName())\n-            .addArgument(\"date\", new Date().toString());\n+\n+        switch (this.addGeneratedOption) {\n+            case \"false\":\n+                return;\n+\n+            case \"force\":\n+                cls.addAnnotation(javax.annotation.Generated.class.getName())\n+                        .addArgument(\"value\", this.getClass().getName())\n+                        .addArgument(\"date\", this.generationDate.toString());\n+                break;\n+\n+            case \"auto\":\n+                // fall through\n+            default:\n+                // only add the annotation if it is on the classpath for Java 6+.\n+                if (generatedAnnotation != null && generatedSourceVersion >= 6) {\n+                    cls.addAnnotation(generatedAnnotation.getName())\n+                            .addArgument(\"value\", this.getClass().getName())\n+                            .addArgument(\"date\", this.generationDate.toString());\n+                }\n+                break;\n         }\n     }\n \n@@ -379,6 +402,21 @@ private void setHeader() {\n         }\n     }\n \n+    private void setAddGeneratedAnnotation() {\n+        this.addGeneratedOption = getOptionValue(\"openjpa.addGeneratedAnnotation\");\n+\n+        if (this.addGeneratedOption == null) {\n+            this.addGeneratedOption = \"auto\";\n+        }\n+\n+        // only add the annotation if it is on the classpath for Java 6+.\n+        try {\n+            this.generatedAnnotation = Class.forName(\"javax.annotation.Generated\", false, null);\n+        } catch (ClassNotFoundException generatedNotFoundEx) {\n+            logger.trace(_loc.get(\"mmg-annotation-not-found\"));\n+        }\n+    }\n+\n     /**\n      * Creates a file where source code of the given metaClass will be written.\n      *"},{"sha":"9a597c3af86157fb4ee8c3bf0704db510ce285ae","filename":"openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/meta/localizer.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/e7774e32948015cfd8de665e18a091eb2e4564bd/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/meta/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/e7774e32948015cfd8de665e18a091eb2e4564bd/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/meta/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/meta/localizer.properties?ref=e7774e32948015cfd8de665e18a091eb2e4564bd","patch":"@@ -36,6 +36,8 @@ field-key-type-mismatch: Actual key type of map field \"{0}\" \"{1}\" does not \\\n field-unrecognized: Field \"{0}\" is not recognized by its type code \"{1}\" to \\\n     be included in the meta model.\n getter-unmatched: Getter method \"{0}\" in \"{1}\" has no matching setter method.\n+mmg-annotation-not-found: Annotation javax.annotation.Generated not found in \\\n+    the classpath. It will not be added to generated static metamodels.\n mmg-tool-banner: Starting OpenJPA Annotation Processor for Metamodel Generation\n mmg-process: Generating canonical metamodel source code \"{0}\"\n mmg-process-error: Error while generating metamodel for \"{0}\". See exception \\"},{"sha":"d15a863d8414d583cee604e1ae85f6e96e66dcf5","filename":"openjpa-project/src/doc/manual/jpa_overview_criteria.xml","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/e7774e32948015cfd8de665e18a091eb2e4564bd/openjpa-project/src/doc/manual/jpa_overview_criteria.xml","raw_url":"https://github.com/apache/openjpa/raw/e7774e32948015cfd8de665e18a091eb2e4564bd/openjpa-project/src/doc/manual/jpa_overview_criteria.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_criteria.xml?ref=e7774e32948015cfd8de665e18a091eb2e4564bd","patch":"@@ -202,6 +202,16 @@ the name of a meta-class given the name of the original persistent Java entity c\n                By default, adds an OpenJPA proprietary text as comment block.\n              </para>\n         </listitem>\n+        <listitem>\n+            <para>\n+                -Aopenjpa.addGeneratedAnnotation=auto|force|false : Configure whether the annotation\n+                <code>javax.annotation.Generated</code> should be added to the generated metamodel classes.\n+                This annotation is not available on Java 9 upwards unless the <code>javax.annotation-api</code>\n+                is in the classpath.\n+                The default is <code>auto</code>. Set to <code>force</code> to add the annotation even if it is\n+                not in the classpath or to <code>false</code> to never add it to the generated class.\n+            </para>\n+        </listitem>\n     </itemizedlist>\n        </para>\n     </section>"},{"sha":"b99cc1bb794bf4dd40f6eb488b0cba39eec4daa8","filename":"pom.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/e7774e32948015cfd8de665e18a091eb2e4564bd/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/e7774e32948015cfd8de665e18a091eb2e4564bd/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/pom.xml?ref=e7774e32948015cfd8de665e18a091eb2e4564bd","patch":"@@ -1793,6 +1793,12 @@\n                 <artifactId>jaxb-api</artifactId>\n                 <version>2.2.1</version>\n             </dependency>\n+            <dependency>\n+                <groupId>javax.annotation</groupId>\n+                <artifactId>javax.annotation-api</artifactId>\n+                <version>1.3.2</version>\n+                <scope>provided</scope>\n+            </dependency>\n             <dependency>\n                 <groupId>com.sun.xml.bind</groupId>\n                 <artifactId>jaxb-impl</artifactId>"}]}

