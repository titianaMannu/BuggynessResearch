{"sha":"e889cd2aefeed17de3b84a58c586e3a44e5feacf","node_id":"MDY6Q29tbWl0MjA2MzY0OmU4ODljZDJhZWZlZWQxN2RlM2I4NGE1OGM1ODZlM2E0NGU1ZmVhY2Y=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2006-08-01T07:05:08Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2006-08-01T07:05:08Z"},"message":"cleaned up some imports; fixed a typo; changed test case to reduce output\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@427472 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"fd978fd7900e9112f15ee3d0423b85dda0f4ee1a","url":"https://api.github.com/repos/apache/openjpa/git/trees/fd978fd7900e9112f15ee3d0423b85dda0f4ee1a"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/e889cd2aefeed17de3b84a58c586e3a44e5feacf","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/e889cd2aefeed17de3b84a58c586e3a44e5feacf","html_url":"https://github.com/apache/openjpa/commit/e889cd2aefeed17de3b84a58c586e3a44e5feacf","comments_url":"https://api.github.com/repos/apache/openjpa/commits/e889cd2aefeed17de3b84a58c586e3a44e5feacf/comments","author":null,"committer":null,"parents":[{"sha":"eb96e89f4d55d240fdfcb3ea236492f84312a8af","url":"https://api.github.com/repos/apache/openjpa/commits/eb96e89f4d55d240fdfcb3ea236492f84312a8af","html_url":"https://github.com/apache/openjpa/commit/eb96e89f4d55d240fdfcb3ea236492f84312a8af"}],"stats":{"total":29,"additions":9,"deletions":20},"files":[{"sha":"07fc772e3f2ee78ba2e203bdf3f4ef9d9621e0cd","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCDataGenerator.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/e889cd2aefeed17de3b84a58c586e3a44e5feacf/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCDataGenerator.java","raw_url":"https://github.com/apache/openjpa/raw/e889cd2aefeed17de3b84a58c586e3a44e5feacf/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCDataGenerator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCDataGenerator.java?ref=e889cd2aefeed17de3b84a58c586e3a44e5feacf","patch":"@@ -20,7 +20,6 @@\n import java.util.Iterator;\n import java.util.LinkedList;\n import java.util.Map;\n-import java.util.Set;\n \n import org.apache.commons.lang.StringUtils;\n import org.apache.openjpa.conf.OpenJPAConfiguration;"},{"sha":"28f6374ca3098c891e46f129fe7a4dafee182261","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java","status":"modified","additions":1,"deletions":14,"changes":15,"blob_url":"https://github.com/apache/openjpa/blob/e889cd2aefeed17de3b84a58c586e3a44e5feacf/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/e889cd2aefeed17de3b84a58c586e3a44e5feacf/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java?ref=e889cd2aefeed17de3b84a58c586e3a44e5feacf","patch":"@@ -2793,20 +2793,7 @@ protected void loadField(int field, int lockLevel, boolean forWrite,\n     }\n \n     /**\n-     * Return whether the second field has any custom fetch groups in common \n-     * with the first.\n-     */\n-    private static boolean sharesCustomFetchGroups(FieldMetaData fmd1, \n-        FieldMetaData fmd2) {\n-        String[] fgs = fmd1.getCustomFetchGroups();\n-        for (int i = 0; i < fgs.length; i++)\n-            if (fmd2.isInFetchGroup(fgs[i]))\n-                return true;\n-        return false;\n-    }\n-\n-    /**\n-     * Helper method to privde the given field number to the given\n+     * Helper method to provide the given field number to the given\n      * field manager.\n      */\n     void provideField(PersistenceCapable pc, FieldManager store, int field) {"},{"sha":"54329f99cdbca784560ae67d73657987ecee8974","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingStatement.java","status":"modified","additions":1,"deletions":2,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/e889cd2aefeed17de3b84a58c586e3a44e5feacf/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingStatement.java","raw_url":"https://github.com/apache/openjpa/raw/e889cd2aefeed17de3b84a58c586e3a44e5feacf/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingStatement.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/DelegatingStatement.java?ref=e889cd2aefeed17de3b84a58c586e3a44e5feacf","patch":"@@ -266,5 +266,4 @@ public boolean execute(String s, String[] sa) throws SQLException {\n     public int getResultSetHoldability() throws SQLException {\n         throw new UnsupportedOperationException();\n     }\n-}\n-\n+}\n\\ No newline at end of file"},{"sha":"9aad4e94fc4c16dac17ba2b569b9de8aa28cb2de","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/XMLFactory.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/e889cd2aefeed17de3b84a58c586e3a44e5feacf/openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/XMLFactory.java","raw_url":"https://github.com/apache/openjpa/raw/e889cd2aefeed17de3b84a58c586e3a44e5feacf/openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/XMLFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/xml/XMLFactory.java?ref=e889cd2aefeed17de3b84a58c586e3a44e5feacf","patch":"@@ -20,7 +20,6 @@\n import javax.xml.parsers.ParserConfigurationException;\n import javax.xml.parsers.SAXParser;\n import javax.xml.parsers.SAXParserFactory;\n-import javax.xml.transform.sax.SAXTransformerFactory;\n \n import org.apache.commons.lang.exception.NestableRuntimeException;\n import org.w3c.dom.Document;\n@@ -42,7 +41,6 @@\n     // cache parsers and transformers in all possible configurations\n     private static SAXParserFactory[] _saxFactories = null;\n     private static DocumentBuilderFactory[] _domFactories = null;\n-    private static SAXTransformerFactory _transFactory = null;\n     private static ErrorHandler _validating;\n \n     static {"},{"sha":"043c30c10fc18646b867831974b2c5ac8638c4c9","filename":"openjpa-lib/src/test/java/org/apache/openjpa/lib/conf/test/TestConfigurationImpl.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/e889cd2aefeed17de3b84a58c586e3a44e5feacf/openjpa-lib/src/test/java/org/apache/openjpa/lib/conf/test/TestConfigurationImpl.java","raw_url":"https://github.com/apache/openjpa/raw/e889cd2aefeed17de3b84a58c586e3a44e5feacf/openjpa-lib/src/test/java/org/apache/openjpa/lib/conf/test/TestConfigurationImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/test/java/org/apache/openjpa/lib/conf/test/TestConfigurationImpl.java?ref=e889cd2aefeed17de3b84a58c586e3a44e5feacf","patch":"@@ -36,7 +36,6 @@\n public class TestConfigurationImpl extends AbstractTestCase {\n \n     private ConfigurationTest _conf = new ConfigurationTest();\n-    private String _def;\n \n     public TestConfigurationImpl(String test) {\n         super(test);\n@@ -308,5 +307,12 @@ public void setObjectKey(Object val) {\n         public void deriveObjectKey(Object val) {\n             _objectKey.set(val, true);\n         }\n+        \n+        protected boolean isInvalidProperty(String s) {\n+            if (\"openjpatest.properties\".equals(s))\n+                return false;\n+            else \n+                return super.isInvalidProperty(s);\n+        }\n     }\n }"}]}

