{"sha":"e9f3f9cdfcbb6479e02a477730debb320e5e5dbe","node_id":"MDY6Q29tbWl0MjA2MzY0OmU5ZjNmOWNkZmNiYjY0NzllMDJhNDc3NzMwZGViYjMyMGU1ZTVkYmU=","commit":{"author":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2021-03-31T17:09:03Z"},"committer":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2021-03-31T17:11:08Z"},"message":"OPENJPA-2883 fix handling of java.sql.Time on MSSQL","tree":{"sha":"4b90719169c78c6ae76a8d6be660d45bf54fb8c2","url":"https://api.github.com/repos/apache/openjpa/git/trees/4b90719169c78c6ae76a8d6be660d45bf54fb8c2"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/e9f3f9cdfcbb6479e02a477730debb320e5e5dbe","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/e9f3f9cdfcbb6479e02a477730debb320e5e5dbe","html_url":"https://github.com/apache/openjpa/commit/e9f3f9cdfcbb6479e02a477730debb320e5e5dbe","comments_url":"https://api.github.com/repos/apache/openjpa/commits/e9f3f9cdfcbb6479e02a477730debb320e5e5dbe/comments","author":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"committer":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"parents":[{"sha":"9a96e0cd89ee9bac41a39d89388468a0774a519d","url":"https://api.github.com/repos/apache/openjpa/commits/9a96e0cd89ee9bac41a39d89388468a0774a519d","html_url":"https://github.com/apache/openjpa/commit/9a96e0cd89ee9bac41a39d89388468a0774a519d"}],"stats":{"total":46,"additions":35,"deletions":11},"files":[{"sha":"a7061c47e0c984bf7c48319c1eb07916004cc995","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SQLServerDictionary.java","status":"modified","additions":19,"deletions":8,"changes":27,"blob_url":"https://github.com/apache/openjpa/blob/e9f3f9cdfcbb6479e02a477730debb320e5e5dbe/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SQLServerDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/e9f3f9cdfcbb6479e02a477730debb320e5e5dbe/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SQLServerDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SQLServerDictionary.java?ref=e9f3f9cdfcbb6479e02a477730debb320e5e5dbe","patch":"@@ -25,11 +25,13 @@\n import java.sql.PreparedStatement;\n import java.sql.ResultSet;\n import java.sql.SQLException;\n+import java.sql.Time;\n import java.sql.Types;\n import java.time.LocalDate;\n import java.time.LocalDateTime;\n import java.time.LocalTime;\n import java.time.OffsetDateTime;\n+import java.util.Calendar;\n import java.util.Locale;\n \n import org.apache.openjpa.jdbc.identifier.DBIdentifier;\n@@ -61,13 +63,12 @@\n     public boolean uniqueIdentifierAsVarbinary = true;\n \n     /**\n-     * Whether to send Time values as DateTime or as Time.\n-     * This affects how the Database actually looks like.\n-     * sendTimeAsDatetime is supported as of SQLServer2008 and\n-     * is only to be used with TIME columns.\n-     * Previous to that a DATETIME column had to be used with a fixed 1970-01-01 date.\n+     * SQLServer doesn't like a java.sql.Time as default.\n+     * So either we send it as String or people configure sendTimeAsDatetime=false on the Connection.\n+     * This is depending how the Database actually is setup.\n+     * To mitigate misconfiguration we can work around by sending the time as String to the JDBC driver.\n      */\n-    public Boolean sendTimeAsDatetime = null;\n+    public Boolean sendTimeAsString = null;\n \n     public SQLServerDictionary() {\n         platform = \"Microsoft SQL Server\";\n@@ -95,8 +96,8 @@ public void connectedConfiguration(Connection conn) throws SQLException {\n             // serverMajorVersion of 8==2000, 9==2005, 10==2008,  11==2012\n             if (meta.getDatabaseMajorVersion() >= 9) {\n                 setSupportsXMLColumn(true);\n-                if (sendTimeAsDatetime == null) {\n-                    sendTimeAsDatetime = Boolean.TRUE;\n+                if (sendTimeAsString == null) {\n+                    sendTimeAsString = Boolean.FALSE;\n                 }\n             }\n             if (meta.getDatabaseMajorVersion() >= 10) {\n@@ -404,6 +405,16 @@ public OffsetDateTime getOffsetDateTime(ResultSet rs, int column) throws SQLExce\n         return rs.getObject(column, OffsetDateTime.class);\n     }\n \n+    @Override\n+    public void setTime(PreparedStatement stmnt, int idx, Time val, Calendar cal, Column col) throws SQLException {\n+        if (sendTimeAsString) {\n+            stmnt.setString(idx, val.toString());\n+        }\n+        else {\n+            // use Time\n+            super.setTime(stmnt, idx, val, cal, col);\n+        }\n+    }\n \n     @Override\n     public void indexOf(SQLBuffer buf, FilterValue str, FilterValue find,"},{"sha":"923c19d057dfb0a286582bde6d487837937b076f","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestTemporalTypeQueryParameterBinding.java","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/e9f3f9cdfcbb6479e02a477730debb320e5e5dbe/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestTemporalTypeQueryParameterBinding.java","raw_url":"https://github.com/apache/openjpa/raw/e9f3f9cdfcbb6479e02a477730debb320e5e5dbe/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestTemporalTypeQueryParameterBinding.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/query/TestTemporalTypeQueryParameterBinding.java?ref=e9f3f9cdfcbb6479e02a477730debb320e5e5dbe","patch":"@@ -133,6 +133,15 @@ public void testNamedParameterConvertedFromDateValue() {\n         assertEquals(1, q.getResultList().size());\n     }\n \n+    public void testNamedTimeParam() {\n+        Date d2 = new Date(T2);\n+\n+        Query q = em.createQuery(\"SELECT p FROM TimeKeeper p WHERE p.time=:t\");\n+        q.setParameter(\"t\",  d2, TemporalType.TIME);\n+\n+        assertEquals(1, q.getResultList().size());\n+    }\n+\n     public void testPositionalParameterConvertedFromDateValue() {\n         Date d1 = new Date(T1);\n         Date d2 = new Date(T2);"},{"sha":"e75d6cff46f8da04040b08da9c145815e6420c04","filename":"openjpa-project/BUILDING.txt","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/e9f3f9cdfcbb6479e02a477730debb320e5e5dbe/openjpa-project/BUILDING.txt","raw_url":"https://github.com/apache/openjpa/raw/e9f3f9cdfcbb6479e02a477730debb320e5e5dbe/openjpa-project/BUILDING.txt","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/BUILDING.txt?ref=e9f3f9cdfcbb6479e02a477730debb320e5e5dbe","patch":"@@ -212,8 +212,8 @@ For running against a h2 based installation:\n For running against a hsqldb based installation:\n  -ea -Dopenjpa.ConnectionDriverName=org.hsqldb.Driver -Dopenjpa.ConnectionURL=jdbc:hsqldb:mem:openjpa20-hsqldb-database -Dopenjpa.ConnectionUserName=sa -Dopenjpa.ConnectionPassword=\n \n-For running tests against a SQLServer Docker based installation:\n- -ea -Dopenjpa.ConnectionDriverName=com.microsoft.sqlserver.jdbc.SQLServerDriver -Dopenjpa.ConnectionURL=jdbc:sqlserver://localhost:1433 -Dopenjpa.ConnectionUserName=SA -Dopenjpa.ConnectionPassword=OpenJP8tst\n+For running tests against a Microsoft SQLServer Docker based installation:\n+ -ea -Dopenjpa.ConnectionDriverName=com.microsoft.sqlserver.jdbc.SQLServerDriver -Dopenjpa.ConnectionURL=jdbc:sqlserver://localhost:1433;sendTimeAsDatetime=false -Dopenjpa.ConnectionUserName=SA -Dopenjpa.ConnectionPassword=OpenJP8tst\n \n TODO: finish!\n "},{"sha":"583d793baca6e069d03eb249ca5a7d5796e0ef96","filename":"pom.xml","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/e9f3f9cdfcbb6479e02a477730debb320e5e5dbe/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/e9f3f9cdfcbb6479e02a477730debb320e5e5dbe/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/pom.xml?ref=e9f3f9cdfcbb6479e02a477730debb320e5e5dbe","patch":"@@ -947,7 +947,11 @@\n                 <openjpa.mssql.dbname>openjpatst</openjpa.mssql.dbname>\n                 <openjpa.mssql.username>SA</openjpa.mssql.username>\n                 <openjpa.mssql.password>OpenJP8tst</openjpa.mssql.password>\n-                <openjpa.mssql.url>jdbc:sqlserver://localhost:${docker.external.mssql.port}</openjpa.mssql.url>\n+                <!--\n+                  * sendTimeAsDatetime=false is important to make SQLServer understand java.sql.Time parameters.\n+                  * Alternatively you can set the SQLServerDictionary parameter sendTimeAsString=true\n+                 -->\n+                <openjpa.mssql.url>jdbc:sqlserver://localhost:${docker.external.mssql.port};sendTimeAsDatetime=false</openjpa.mssql.url>\n \n                 <!--<connection.url>jdbc:postgresql://localhost/openjpa</connection.url>-->\n                 <connection.url>${openjpa.mssql.url}</connection.url>"}]}

