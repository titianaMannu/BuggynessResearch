{"sha":"ea499a8ed6331f519ec492dfab5618e7e7155dc4","node_id":"MDY6Q29tbWl0MjA2MzY0OmVhNDk5YThlZDYzMzFmNTE5ZWM0OTJkZmFiNTYxOGU3ZTcxNTVkYzQ=","commit":{"author":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2011-08-16T16:39:40Z"},"committer":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2011-08-16T16:39:40Z"},"message":"OPENJPA-2039: Update javadoc and minor formatting changes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1158364 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"60dc0665ad445aceefa911159a9317b88507b587","url":"https://api.github.com/repos/apache/openjpa/git/trees/60dc0665ad445aceefa911159a9317b88507b587"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/ea499a8ed6331f519ec492dfab5618e7e7155dc4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/ea499a8ed6331f519ec492dfab5618e7e7155dc4","html_url":"https://github.com/apache/openjpa/commit/ea499a8ed6331f519ec492dfab5618e7e7155dc4","comments_url":"https://api.github.com/repos/apache/openjpa/commits/ea499a8ed6331f519ec492dfab5618e7e7155dc4/comments","author":null,"committer":null,"parents":[{"sha":"e03262481396bc5246ef21e50234a84cd2085764","url":"https://api.github.com/repos/apache/openjpa/commits/e03262481396bc5246ef21e50234a84cd2085764","html_url":"https://github.com/apache/openjpa/commit/e03262481396bc5246ef21e50234a84cd2085764"}],"stats":{"total":26,"additions":18,"deletions":8},"files":[{"sha":"ad5eb183355a9c0f537a05cf595bccfae4406058","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCFetchConfiguration.java","status":"modified","additions":8,"deletions":4,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/ea499a8ed6331f519ec492dfab5618e7e7155dc4/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCFetchConfiguration.java","raw_url":"https://github.com/apache/openjpa/raw/ea499a8ed6331f519ec492dfab5618e7e7155dc4/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCFetchConfiguration.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCFetchConfiguration.java?ref=ea499a8ed6331f519ec492dfab5618e7e7155dc4","patch":"@@ -243,18 +243,22 @@\n     public JDBCFetchConfiguration addFetchInnerJoins(Collection<String> fields);\n     \n     /**\n-     * If true - Ignore whether or not a field is in the dfg for mappings that use 2-part selects to load fk table data.\n+     * Affirms if foreign key for a relation field will be pre-fetched as part of the owning object irrespective of\n+     * whether the field is included in the default fetch group of this fetch configuration. <br>\n+     * By default, foreign key for a relation field is pre-fetched as part of the owning object <em>only</em> if the\n+     * field in included in the default fetch group of this fetch configuration.\n      * \n      * @since 2.2.0\n-     * @return false\n      */\n     public boolean getIgnoreDfgForFkSelect();\n \n     /**\n-     * If true - Ignore whether or not a field is in the dfg for mappings that use 2-part selects to load fk table data.\n+     * Affirms if foreign key for a relation field will be pre-fetched as part of the owning object irrespective of\n+     * whether the field is included in the default fetch group of this fetch configuration. <br>\n+     * By default, foreign key for a relation field is pre-fetched as part of the owning object <em>only</em> if the\n+     * field in included in the default fetch group of this fetch configuration.\n      * \n      * @since 2.2.0\n-     * @return false\n      */\n     public void setIgnoreDfgForFkSelect(boolean b);\n }"},{"sha":"c9af34caa7ac90435715f26f0ad0a37a8c88dd75","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCFetchConfigurationImpl.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/ea499a8ed6331f519ec492dfab5618e7e7155dc4/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCFetchConfigurationImpl.java","raw_url":"https://github.com/apache/openjpa/raw/ea499a8ed6331f519ec492dfab5618e7e7155dc4/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCFetchConfigurationImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCFetchConfigurationImpl.java?ref=ea499a8ed6331f519ec492dfab5618e7e7155dc4","patch":"@@ -143,10 +143,12 @@ public void copy(FetchConfiguration fetch) {\n     public boolean getIgnoreDfgForFkSelect() {\n         return _state.ignoreDfgForFkSelect;\n     }\n+\n     @Override\n     public void setIgnoreDfgForFkSelect(boolean b) {\n         _state.ignoreDfgForFkSelect = b;\n     }\n+\n     public int getEagerFetchMode() {\n         return _state.eagerMode;\n     }"},{"sha":"8ceb76a5a7373b6f13496807a488b291717203b4","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCFetchPlan.java","status":"modified","additions":8,"deletions":4,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/ea499a8ed6331f519ec492dfab5618e7e7155dc4/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCFetchPlan.java","raw_url":"https://github.com/apache/openjpa/raw/ea499a8ed6331f519ec492dfab5618e7e7155dc4/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCFetchPlan.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/JDBCFetchPlan.java?ref=ea499a8ed6331f519ec492dfab5618e7e7155dc4","patch":"@@ -229,18 +229,22 @@\n     public JDBCFetchPlan setJoinSyntax(int syntax);\n     \n     /**\n-     * If true - Ignore whether or not a field is in the dfg for mappings that use 2-part selects to load fk table data.\n+     * Affirms if foreign key for a relation field will be pre-fetched as part of the owning object irrespective of\n+     * whether the field is included in the default fetch group of this fetch configuration. <br><br>\n+     * By default, foreign key for a relation field is pre-fetched as part of the owning object <em>only</em> if the\n+     * field in included in the default fetch group of this fetch configuration.\n      * \n      * @since 2.2.0\n-     * @return false\n      */\n     public boolean getIgnoreDfgForFkSelect();\n \n     /**\n-     * If true - Ignore whether or not a field is in the dfg for mappings that use 2-part selects to load fk table data.\n+     * Affirms if foreign key for a relation field will be pre-fetched as part of the owning object irrespective of\n+     * whether the field is included in the default fetch group of this fetch configuration. <br><br>\n+     * By default, foreign key for a relation field is pre-fetched as part of the owning object <em>only</em> if the\n+     * field in included in the default fetch group of this fetch configuration.\n      * \n      * @since 2.2.0\n-     * @return false\n      */\n     public void setIgnoreDfgForFkSelect(boolean b);\n }"}]}

