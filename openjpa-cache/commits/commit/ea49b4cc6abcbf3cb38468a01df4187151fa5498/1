{"sha":"ea49b4cc6abcbf3cb38468a01df4187151fa5498","node_id":"MDY6Q29tbWl0MjA2MzY0OmVhNDliNGNjNmFiY2JmM2NiMzg0NjhhMDFkZjQxODcxNTFmYTU0OTg=","commit":{"author":{"name":"Fay Wang","email":"faywang@apache.org","date":"2010-02-25T03:33:00Z"},"committer":{"name":"Fay Wang","email":"faywang@apache.org","date":"2010-02-25T03:33:00Z"},"message":"OPENJPA-1536: fix the where clause in sql generation problem when join table strategy is used in toOne eager fetch\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@916106 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"014272607b2649b2573567388459fab37f62db8f","url":"https://api.github.com/repos/apache/openjpa/git/trees/014272607b2649b2573567388459fab37f62db8f"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/ea49b4cc6abcbf3cb38468a01df4187151fa5498","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/ea49b4cc6abcbf3cb38468a01df4187151fa5498","html_url":"https://github.com/apache/openjpa/commit/ea49b4cc6abcbf3cb38468a01df4187151fa5498","comments_url":"https://api.github.com/repos/apache/openjpa/commits/ea49b4cc6abcbf3cb38468a01df4187151fa5498/comments","author":null,"committer":null,"parents":[{"sha":"be33af366ccef84a8767ceee03e99b171fc9ccff","url":"https://api.github.com/repos/apache/openjpa/commits/be33af366ccef84a8767ceee03e99b171fc9ccff","html_url":"https://github.com/apache/openjpa/commit/be33af366ccef84a8767ceee03e99b171fc9ccff"}],"stats":{"total":446,"additions":445,"deletions":1},"files":[{"sha":"94f33c9feb414fc70be9c2837377e6423f5023b6","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/InValueDiscriminatorStrategy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/ea49b4cc6abcbf3cb38468a01df4187151fa5498/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/InValueDiscriminatorStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/ea49b4cc6abcbf3cb38468a01df4187151fa5498/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/InValueDiscriminatorStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/InValueDiscriminatorStrategy.java?ref=ea49b4cc6abcbf3cb38468a01df4187151fa5498","patch":"@@ -141,10 +141,10 @@ public SQLBuffer getClassConditions(Select sel, Joins joins,\n         Column col = disc.getColumns()[0];\n         SQLBuffer sql = new SQLBuffer(sel.getConfiguration().\n             getDBDictionaryInstance());\n+        String alias = sel.getColumnAlias(col, joins);\n         boolean outer = joins != null && joins.isOuter();\n         if (outer)\n             sql.append(\"(\");\n-        String alias = sel.getColumnAlias(col, joins);\n         sql.append(alias);\n \n         // if not selecting subclasses, limit to just the given class"},{"sha":"10fd508e48af79141f1978541ecb4a2c3b098242","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/TestJoinTableStrategy.java","status":"added","additions":87,"deletions":0,"changes":87,"blob_url":"https://github.com/apache/openjpa/blob/ea49b4cc6abcbf3cb38468a01df4187151fa5498/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/TestJoinTableStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/ea49b4cc6abcbf3cb38468a01df4187151fa5498/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/TestJoinTableStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/TestJoinTableStrategy.java?ref=ea49b4cc6abcbf3cb38468a01df4187151fa5498","patch":"@@ -0,0 +1,87 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.openjpa.persistence.inheritance;\r\n+\r\n+import javax.persistence.EntityManager;\r\n+\r\n+import org.apache.openjpa.persistence.inheritance.entity.Department;\r\n+import org.apache.openjpa.persistence.inheritance.entity.Employee;\r\n+import org.apache.openjpa.persistence.inheritance.entity.FTEmployee;\r\n+import org.apache.openjpa.persistence.inheritance.entity.PTEmployee;\r\n+import org.apache.openjpa.persistence.inheritance.entity.Manager;\r\n+import org.apache.openjpa.persistence.test.SingleEMFTestCase;\r\n+\r\n+/**\r\n+ * Originally reported in the context of entities of a inheritance hierarchy with\r\n+ * JOIN_TABLE strategy.\r\n+ * \r\n+ * <A HREF=\"http://issues.apache.org/jira/browse/OPENJPA-1536\">OPENJPA-1536</A>\r\n+ * \r\n+ * @author Jody Grassel\r\n+ * @author Fay Wang\r\n+ * \r\n+ */\r\n+public class TestJoinTableStrategy extends SingleEMFTestCase {\r\n+\r\n+\tpublic void setUp() {\r\n+\t\tsuper.setUp(CLEAR_TABLES, Department.class, Employee.class,\r\n+\t\t\t\tPTEmployee.class, FTEmployee.class, Manager.class);\r\n+\r\n+\t\tEntityManager em = emf.createEntityManager();\r\n+\t\tem.getTransaction().begin();\r\n+        Manager m = new Manager();\r\n+        m.setId(1);\r\n+        m.setFirstName(\"mf1\");\r\n+        m.setLastName(\"ml1\");\r\n+        m.setSalary(1000000);\r\n+        m.setVacationDays(20);\r\n+                \r\n+        Department d = new Department();\r\n+        d.setId(1);\r\n+        d.setDepartmentName(\"d1\");\r\n+        d.setDepartmentManager(m);\r\n+        m.setDepartment(d);\r\n+        \r\n+        Employee e1 = new Employee();\r\n+        e1.setId(2);\r\n+        e1.setFirstName(\"ef1\");\r\n+        e1.setLastName(\"el1\");\r\n+        e1.setDepartment(d);\r\n+        e1.setManager(m);\r\n+        e1.setVacationDays(20);\r\n+        \r\n+        em.persist(m);\r\n+        em.persist(d);\r\n+        em.persist(e1);\r\n+\t\tem.getTransaction().commit();\r\n+\t\tem.close();\r\n+\t}\r\n+\r\n+\t@Override\r\n+\tpublic void tearDown() {\r\n+\t\t// problem deleting table in MySQL\r\n+\t}\r\n+\r\n+\tpublic void testFindEntity() {\r\n+\t\tEntityManager em1 = emf.createEntityManager();\r\n+        Manager m = em1.find(Manager.class, 1);\r\n+        assertNotNull(m);\r\n+\t\tem1.close();\r\n+\t}\r\n+}\r"},{"sha":"4bf596c4cab94ac25874dd9c09266e7e78062836","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entity/Department.java","status":"added","additions":91,"deletions":0,"changes":91,"blob_url":"https://github.com/apache/openjpa/blob/ea49b4cc6abcbf3cb38468a01df4187151fa5498/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entity/Department.java","raw_url":"https://github.com/apache/openjpa/raw/ea49b4cc6abcbf3cb38468a01df4187151fa5498/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entity/Department.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entity/Department.java?ref=ea49b4cc6abcbf3cb38468a01df4187151fa5498","patch":"@@ -0,0 +1,91 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.openjpa.persistence.inheritance.entity;\r\n+\r\n+import java.util.ArrayList;\r\n+import java.util.List;\r\n+\r\n+import javax.persistence.Entity;\r\n+import javax.persistence.Id;\r\n+import javax.persistence.ManyToOne;\r\n+import javax.persistence.OneToMany;\r\n+import javax.persistence.Table;\r\n+\r\n+/**\r\n+ * Test case and domain classes were originally part of the reported issue\r\n+ * <A href=\"https://issues.apache.org/jira/browse/OPENJPA-1536\">OPENJPA-1536</A>\r\n+ *  \r\n+ * @author Jody Grassel\r\n+ * @author Fay Wang\r\n+ *\r\n+ */\r\n+@Entity\r\n+@Table(name=\"CDepartment\")\r\n+public class Department {\r\n+    @Id\r\n+    private int id;\r\n+    \r\n+    private String departmentName;\r\n+    \r\n+    @ManyToOne\r\n+    private Manager departmentManager;\r\n+    \r\n+    @OneToMany(mappedBy=\"department\")\r\n+    private List<Employee> employeeList;\r\n+\r\n+    public Department() {\r\n+        this.employeeList = new ArrayList<Employee>();\r\n+    }\r\n+    \r\n+    public Department(int id, String departmentName) {\r\n+        this.employeeList = new ArrayList<Employee>();\r\n+        this.id = id;\r\n+        this.departmentName = departmentName;\r\n+    }\r\n+    \r\n+    public int getId() {\r\n+        return id;\r\n+    }\r\n+\r\n+    public void setId(int id) {\r\n+        this.id = id;\r\n+    }\r\n+\r\n+    public String getDepartmentName() {\r\n+        return departmentName;\r\n+    }\r\n+\r\n+    public void setDepartmentName(String departmentName) {\r\n+        this.departmentName = departmentName;\r\n+    }\r\n+\r\n+    public Manager getDepartmentManager() {\r\n+        return departmentManager;\r\n+    }\r\n+\r\n+    public void setDepartmentManager(Manager departmentManager) {\r\n+        this.departmentManager = departmentManager;\r\n+    }\r\n+\r\n+    public List<Employee> getEmployeeList() {\r\n+        return employeeList;\r\n+    }\r\n+\r\n+\r\n+}\r"},{"sha":"5dc26a726fcc9353b0d8afcfbf205b2f244eeb8a","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entity/Employee.java","status":"added","additions":123,"deletions":0,"changes":123,"blob_url":"https://github.com/apache/openjpa/blob/ea49b4cc6abcbf3cb38468a01df4187151fa5498/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entity/Employee.java","raw_url":"https://github.com/apache/openjpa/raw/ea49b4cc6abcbf3cb38468a01df4187151fa5498/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entity/Employee.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entity/Employee.java?ref=ea49b4cc6abcbf3cb38468a01df4187151fa5498","patch":"@@ -0,0 +1,123 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.openjpa.persistence.inheritance.entity;\r\n+\r\n+import javax.persistence.DiscriminatorColumn;\r\n+import javax.persistence.DiscriminatorType;\r\n+import javax.persistence.Entity;\r\n+import javax.persistence.Id;\r\n+import javax.persistence.Inheritance;\r\n+import javax.persistence.InheritanceType;\r\n+import javax.persistence.ManyToOne;\r\n+import javax.persistence.Table;\r\n+import javax.persistence.Version;\r\n+\r\n+/**\r\n+ * Test case and domain classes were originally part of the reported issue\r\n+ * <A href=\"https://issues.apache.org/jira/browse/OPENJPA-1536\">OPENJPA-1536</A>\r\n+ *  \r\n+ * @author Jody Grassel\r\n+ * @author Fay Wang\r\n+ *\r\n+ */\r\n+@Entity\r\n+@Table(name=\"CEmployee\")\r\n+@Inheritance(strategy=InheritanceType.JOINED)\r\n+@DiscriminatorColumn(name=\"EMP_TYPEL\", discriminatorType=DiscriminatorType.INTEGER)\r\n+public class Employee {\r\n+    \r\n+    @Id\r\n+    private int id;\r\n+    \r\n+    private String lastName;\r\n+    private String firstName;\r\n+\r\n+    private int vacationDays;\r\n+    \r\n+    @ManyToOne\r\n+    private Manager manager;\r\n+    \r\n+    @ManyToOne\r\n+    private Department department;\r\n+    \r\n+    @Version\r\n+    private long version;\r\n+    \r\n+    private transient String str = null;\r\n+    \r\n+    public int getId() {\r\n+        return id;\r\n+    }\r\n+\r\n+    public void setId(int id) {\r\n+        this.id = id;\r\n+        str = null;\r\n+    }\r\n+\r\n+    public String getLastName() {\r\n+        return lastName;\r\n+    }\r\n+\r\n+    public void setLastName(String lastName) {\r\n+        this.lastName = lastName;\r\n+        str = null;\r\n+    }\r\n+\r\n+    public String getFirstName() {\r\n+        return firstName;\r\n+    }\r\n+\r\n+    public void setFirstName(String firstName) {\r\n+        this.firstName = firstName;\r\n+        str = null;\r\n+    }\r\n+\r\n+    public int getVacationDays() {\r\n+        return vacationDays;\r\n+    }\r\n+\r\n+    public void setVacationDays(int vacationDays) {\r\n+        this.vacationDays = vacationDays;\r\n+        str = null;\r\n+    }\r\n+\r\n+    public Manager getManager() {\r\n+        return manager;\r\n+    }\r\n+\r\n+    public void setManager(Manager manager) {\r\n+        this.manager = manager;\r\n+        str = null;\r\n+    }\r\n+\r\n+    public Department getDepartment() {\r\n+        return department;\r\n+    }\r\n+\r\n+    public void setDepartment(Department department) {\r\n+        this.department = department;\r\n+        str = null;\r\n+    }\r\n+\r\n+    public long getVersion() {\r\n+        return version;\r\n+    }\r\n+\r\n+\r\n+}\r"},{"sha":"48202ea9256e6e40797266cff6ba3164d9f39ba2","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entity/FTEmployee.java","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/apache/openjpa/blob/ea49b4cc6abcbf3cb38468a01df4187151fa5498/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entity/FTEmployee.java","raw_url":"https://github.com/apache/openjpa/raw/ea49b4cc6abcbf3cb38468a01df4187151fa5498/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entity/FTEmployee.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entity/FTEmployee.java?ref=ea49b4cc6abcbf3cb38468a01df4187151fa5498","patch":"@@ -0,0 +1,46 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.openjpa.persistence.inheritance.entity;\r\n+\r\n+import javax.persistence.DiscriminatorValue;\r\n+import javax.persistence.Entity;\r\n+\r\n+/**\r\n+ * Test case and domain classes were originally part of the reported issue\r\n+ * <A href=\"https://issues.apache.org/jira/browse/OPENJPA-1536\">OPENJPA-1536</A>\r\n+ *  \r\n+ * @author Jody Grassel\r\n+ * @author Fay Wang\r\n+ *\r\n+ */\r\n+@Entity\r\n+@DiscriminatorValue(\"2\")\r\n+public class FTEmployee extends Employee {\r\n+    private double salary;\r\n+\r\n+    public double getSalary() {\r\n+        return salary;\r\n+    }\r\n+\r\n+    public void setSalary(double salary) {\r\n+        this.salary = salary;\r\n+    }\r\n+\r\n+\r\n+}\r"},{"sha":"4802685d129fb3eba36caf2e6c00bfd44df298a4","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entity/Manager.java","status":"added","additions":50,"deletions":0,"changes":50,"blob_url":"https://github.com/apache/openjpa/blob/ea49b4cc6abcbf3cb38468a01df4187151fa5498/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entity/Manager.java","raw_url":"https://github.com/apache/openjpa/raw/ea49b4cc6abcbf3cb38468a01df4187151fa5498/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entity/Manager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entity/Manager.java?ref=ea49b4cc6abcbf3cb38468a01df4187151fa5498","patch":"@@ -0,0 +1,50 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.openjpa.persistence.inheritance.entity;\r\n+\r\n+import java.util.List;\r\n+\r\n+import javax.persistence.DiscriminatorValue;\r\n+import javax.persistence.Entity;\r\n+import javax.persistence.OneToMany;\r\n+\r\n+/**\r\n+ * Test case and domain classes were originally part of the reported issue\r\n+ * <A href=\"https://issues.apache.org/jira/browse/OPENJPA-1536\">OPENJPA-1536</A>\r\n+ *  \r\n+ * @author Jody Grassel\r\n+ * @author Fay Wang\r\n+ *\r\n+ */\r\n+@Entity\r\n+@DiscriminatorValue(\"3\")\r\n+public class Manager extends FTEmployee {\r\n+    @OneToMany(mappedBy=\"manager\")\r\n+    private List<Employee> managesList;\r\n+\r\n+    public List<Employee> getManagesList() {\r\n+        return managesList;\r\n+    }\r\n+    \r\n+    public String toString() {\r\n+        String str = super.toString();\r\n+        return \"Manager \" + str;\r\n+    }\r\n+\r\n+}\r"},{"sha":"f472e0851411af5410c23f266520d43058c3f56d","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entity/PTEmployee.java","status":"added","additions":47,"deletions":0,"changes":47,"blob_url":"https://github.com/apache/openjpa/blob/ea49b4cc6abcbf3cb38468a01df4187151fa5498/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entity/PTEmployee.java","raw_url":"https://github.com/apache/openjpa/raw/ea49b4cc6abcbf3cb38468a01df4187151fa5498/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entity/PTEmployee.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entity/PTEmployee.java?ref=ea49b4cc6abcbf3cb38468a01df4187151fa5498","patch":"@@ -0,0 +1,47 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.openjpa.persistence.inheritance.entity;\r\n+import javax.persistence.*;\r\n+\r\n+/**\r\n+ * Test case and domain classes were originally part of the reported issue\r\n+ * <A href=\"https://issues.apache.org/jira/browse/OPENJPA-1536\">OPENJPA-1536</A>\r\n+ *  \r\n+ * @author Jody Grassel\r\n+ * @author Fay Wang\r\n+ *\r\n+ */\r\n+@Entity\r\n+@DiscriminatorValue(\"1\")\r\n+public class PTEmployee extends Employee {\r\n+    private float hourlyWage;\r\n+    \r\n+    public PTEmployee() {\r\n+        super();\r\n+    }\r\n+    \r\n+    public float getHourlyWage() {\r\n+        return hourlyWage;\r\n+    }\r\n+\r\n+    public void setHourlyWage(float hourlyWage) {\r\n+        this.hourlyWage = hourlyWage;\r\n+    }\r\n+\r\n+}\r"}]}

