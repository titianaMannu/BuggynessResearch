{"sha":"eb27482080af614ff7e387b9659e72571f8ce029","node_id":"MDY6Q29tbWl0MjA2MzY0OmViMjc0ODIwODBhZjYxNGZmN2UzODdiOTY1OWU3MjU3MWY4Y2UwMjk=","commit":{"author":{"name":"A. Abram White","email":"awhite@apache.org","date":"2007-03-20T19:00:38Z"},"committer":{"name":"A. Abram White","email":"awhite@apache.org","date":"2007-03-20T19:00:38Z"},"message":"OPENJPA-132 : Fix bugs with using a field of type java.sql.Date/Time/Timestamp \nas a single-field identity primary key.  Replaced \"generationtype\" test package\nwith \"identity\" test package and moved old identity generation tests to new\npackage, along with new test for java.sql.Date id fields.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@520522 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"7e925572e368cf84e92e70ac3e5b0145f1527fc9","url":"https://api.github.com/repos/apache/openjpa/git/trees/7e925572e368cf84e92e70ac3e5b0145f1527fc9"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/eb27482080af614ff7e387b9659e72571f8ce029","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/eb27482080af614ff7e387b9659e72571f8ce029","html_url":"https://github.com/apache/openjpa/commit/eb27482080af614ff7e387b9659e72571f8ce029","comments_url":"https://api.github.com/repos/apache/openjpa/commits/eb27482080af614ff7e387b9659e72571f8ce029/comments","author":null,"committer":null,"parents":[{"sha":"229f24547add9fdf5c7414cf98895bf85f83e9d6","url":"https://api.github.com/repos/apache/openjpa/commits/229f24547add9fdf5c7414cf98895bf85f83e9d6","html_url":"https://github.com/apache/openjpa/commit/229f24547add9fdf5c7414cf98895bf85f83e9d6"}],"stats":{"total":14,"additions":12,"deletions":2},"files":[{"sha":"da30e90ee67b248c300e949b1110d08ae1223610","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/eb27482080af614ff7e387b9659e72571f8ce029/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java","raw_url":"https://github.com/apache/openjpa/raw/eb27482080af614ff7e387b9659e72571f8ce029/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java?ref=eb27482080af614ff7e387b9659e72571f8ce029","patch":"@@ -1826,6 +1826,11 @@ private void addCopyKeyFieldsFromObjectIdMethod(boolean fieldManager)\n                             Object.class, null);\n                         if (!fieldManager && type != Object.class)\n                             code.checkcast().setType(fmds[i].getDeclaredType());\n+                    } else if (oidType == DateId.class) {\n+                        code.invokevirtual().setMethod(oidType, \"getId\",\n+                            Date.class, null);\n+                        if (!fieldManager && type != Date.class)\n+                            code.checkcast().setType(fmds[i].getDeclaredType());\n                     } else {\n                         code.invokevirtual().setMethod(oidType, \"getId\", \n                             unwrapped, null);\n@@ -2023,6 +2028,8 @@ else if (usesClsString == Boolean.FALSE)\n                 addExtractObjectIdFieldValueCode(code, pk);\n             if (_meta.getObjectIdType() == ObjectId.class)\n                 args = new Class[]{ Class.class, Object.class };\n+            else if (_meta.getObjectIdType() == Date.class)\n+                args = new Class[]{ Class.class, Date.class };\n             else\n                 args = new Class[]{ Class.class, pk.getObjectIdFieldType() };\n         }"},{"sha":"7716a870f07795f63c614a241110b9a921eb61fb","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/ApplicationIds.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/eb27482080af614ff7e387b9659e72571f8ce029/openjpa-kernel/src/main/java/org/apache/openjpa/util/ApplicationIds.java","raw_url":"https://github.com/apache/openjpa/raw/eb27482080af614ff7e387b9659e72571f8ce029/openjpa-kernel/src/main/java/org/apache/openjpa/util/ApplicationIds.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/ApplicationIds.java?ref=eb27482080af614ff7e387b9659e72571f8ce029","patch":"@@ -241,6 +241,9 @@ public static Object copy(Object oid, ClassMetaData meta) {\n                 case JavaTypes.OBJECT:\n                     return new ObjectId(cls, koid.getIdObject(), \n                         koid.hasSubclasses());\n+                case JavaTypes.DATE:\n+                    return new DateId(cls, ((DateId) oid).getId(),\n+                        koid.hasSubclasses());\n                 default:\n                     throw new InternalException();\n             }"},{"sha":"ee64d696dbf466df445fa6855a5cb3f6232327a3","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/identity/IdentityGenerationType.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/eb27482080af614ff7e387b9659e72571f8ce029/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/identity/IdentityGenerationType.java","raw_url":"https://github.com/apache/openjpa/raw/eb27482080af614ff7e387b9659e72571f8ce029/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/identity/IdentityGenerationType.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/identity/IdentityGenerationType.java?ref=eb27482080af614ff7e387b9659e72571f8ce029","patch":"@@ -13,7 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package org.apache.openjpa.persistence.generationtype;\n+package org.apache.openjpa.persistence.identity;\n \n import javax.persistence.Entity;\n import javax.persistence.GeneratedValue;","previous_filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/generationtype/IdentityGenerationType.java"},{"sha":"826202068af47a6d65133dc245639378166ffec4","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/identity/TestGenerationType.java","status":"renamed","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/eb27482080af614ff7e387b9659e72571f8ce029/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/identity/TestGenerationType.java","raw_url":"https://github.com/apache/openjpa/raw/eb27482080af614ff7e387b9659e72571f8ce029/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/identity/TestGenerationType.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/identity/TestGenerationType.java?ref=eb27482080af614ff7e387b9659e72571f8ce029","patch":"@@ -13,7 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package org.apache.openjpa.persistence.generationtype;\n+package org.apache.openjpa.persistence.identity;\n \n import java.util.HashMap;\n import java.util.List;","previous_filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/generationtype/TestGenerationType.java"}]}

