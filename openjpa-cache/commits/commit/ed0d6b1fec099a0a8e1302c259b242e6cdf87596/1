{"sha":"ed0d6b1fec099a0a8e1302c259b242e6cdf87596","node_id":"MDY6Q29tbWl0MjA2MzY0OmVkMGQ2YjFmZWMwOTlhMGE4ZTEzMDJjMjU5YjI0MmU2Y2RmODc1OTY=","commit":{"author":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-09-22T18:51:23Z"},"committer":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-09-22T18:51:23Z"},"message":"Version number fixes.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@449048 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a7993e52083cf64242af5b73b716cc11b9fea1aa","url":"https://api.github.com/repos/apache/openjpa/git/trees/a7993e52083cf64242af5b73b716cc11b9fea1aa"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/ed0d6b1fec099a0a8e1302c259b242e6cdf87596","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/ed0d6b1fec099a0a8e1302c259b242e6cdf87596","html_url":"https://github.com/apache/openjpa/commit/ed0d6b1fec099a0a8e1302c259b242e6cdf87596","comments_url":"https://api.github.com/repos/apache/openjpa/commits/ed0d6b1fec099a0a8e1302c259b242e6cdf87596/comments","author":null,"committer":null,"parents":[{"sha":"a9089d2688a7255e120391a51510332518d2e406","url":"https://api.github.com/repos/apache/openjpa/commits/a9089d2688a7255e120391a51510332518d2e406","html_url":"https://github.com/apache/openjpa/commit/a9089d2688a7255e120391a51510332518d2e406"}],"stats":{"total":29,"additions":14,"deletions":15},"files":[{"sha":"7bdbf52bf22185d7117f3a6341908f6f049c733f","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/conf/Compatibility.java","status":"modified","additions":14,"deletions":15,"changes":29,"blob_url":"https://github.com/apache/openjpa/blob/ed0d6b1fec099a0a8e1302c259b242e6cdf87596/openjpa-kernel/src/main/java/org/apache/openjpa/conf/Compatibility.java","raw_url":"https://github.com/apache/openjpa/raw/ed0d6b1fec099a0a8e1302c259b242e6cdf87596/openjpa-kernel/src/main/java/org/apache/openjpa/conf/Compatibility.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/conf/Compatibility.java?ref=ed0d6b1fec099a0a8e1302c259b242e6cdf87596","patch":"@@ -46,7 +46,7 @@ public void setStrictIdentityValues(boolean strictVals) {\n \n     /**\n      * Whether to interpret quoted numbers in query strings as numbers.\n-     * OpenJPA versions 3.1 and prior treated them as numbers; more recent\n+     * OpenJPA versions 0.3.1 and prior treated them as numbers; more recent\n      * versions treat them as strings.\n      */\n     public boolean getQuotedNumbersInQueries() {\n@@ -55,7 +55,7 @@ public boolean getQuotedNumbersInQueries() {\n \n     /**\n      * Whether to interpret quoted numbers in query strings as numbers.\n-     * OpenJPA versions 3.1 and prior treated them as numbers; more recent\n+     * OpenJPA versions 0.3.1 and prior treated them as numbers; more recent\n      * versions treat them as strings.\n      */\n     public void setQuotedNumbersInQueries(boolean quotedNumbers) {\n@@ -65,8 +65,8 @@ public void setQuotedNumbersInQueries(boolean quotedNumbers) {\n     /**\n      * Whether to return hollow instances to broker lookups with a\n      * <code>validate</code> parameter of false. OpenJPA versions prior to\n-     * 4.0 did not return hollow instances without special configuration\n-     * (the <code>ObjectLookupMode</code>). Beginning with 4.0, hollow\n+     * 0.4.0 did not return hollow instances without special configuration\n+     * (the <code>ObjectLookupMode</code>). Beginning with 0.4.0, hollow\n      * objects are the default.\n      */\n     public boolean getValidateFalseReturnsHollow() {\n@@ -76,8 +76,8 @@ public boolean getValidateFalseReturnsHollow() {\n     /**\n      * Whether to return hollow instances to broker lookups with a\n      * <code>validate</code> parameter of false. OpenJPA versions prior to\n-     * 4.0 did not return hollow instances without special configuration\n-     * (the <code>ObjectLookupMode</code>). Beginning with 4.0, hollow\n+     * 0.4.0 did not return hollow instances without special configuration\n+     * (the <code>ObjectLookupMode</code>). Beginning with 0.4.0, hollow\n      * objects are the default.\n      */\n     public void setValidateFalseReturnsHollow(boolean hollow) {\n@@ -87,7 +87,7 @@ public void setValidateFalseReturnsHollow(boolean hollow) {\n     /**\n      * Whether to check the datastore for the existence of a nontransactional\n      * cached object in broker lookups with a <code>validate</code> parameter\n-     * of true. OpenJPA versions prior to 4.0 checked the datastore.\n+     * of true. OpenJPA versions prior to 0.4.0 checked the datastore.\n      */\n     public boolean getValidateTrueChecksStore() {\n         return _checkStore;\n@@ -96,15 +96,15 @@ public boolean getValidateTrueChecksStore() {\n     /**\n      * Whether to check the datastore for the existence of a nontransactional\n      * cached object in broker lookups with a <code>validate</code> parameter\n-     * of true. OpenJPA versions prior to 4.0 checked the datastore.\n+     * of true. OpenJPA versions prior to 0.4.0 checked the datastore.\n      */\n     public void setValidateTrueChecksStore(boolean check) {\n         _checkStore = check;\n     }\n \n     /**\n      * Whether to copy identity objects before returning them to client code.\n-     * Versions of OpenJPA prior to 3.0 always copied identity objects. Also,\n+     * Versions of OpenJPA prior to 0.3.0 always copied identity objects. Also,\n      * you should configure OpenJPA to copy identity objects if you mutate them\n      * after use.\n      */\n@@ -114,7 +114,7 @@ public boolean getCopyObjectIds() {\n \n     /**\n      * Whether to copy identity objects before returning them to client code.\n-     * Versions of OpenJPA prior to 3.0 always copied identity objects. Also,\n+     * Versions of OpenJPA prior to 0.3.0 always copied identity objects. Also,\n      * you should configure OpenJPA to copy identity objects if you mutate them\n      * after use.\n      */\n@@ -124,23 +124,23 @@ public void setCopyObjectIds(boolean copy) {\n \n     /**\n      * Whether to close the broker when the managed transaction commits.\n-     * Versions of OpenJPA prior to 3.0 did not close the broker.\n+     * Versions of OpenJPA prior to 0.3.0 did not close the broker.\n      */\n     public boolean getCloseOnManagedCommit() {\n         return _closeOnCommit;\n     }\n \n     /**\n      * Whether to close the broker when the managed transaction commits.\n-     * Versions of OpenJPA prior to 3.0 did not close the broker.\n+     * Versions of OpenJPA prior to 0.3.0 did not close the broker.\n      */\n     public void setCloseOnManagedCommit(boolean close) {\n         _closeOnCommit = close;\n \t}\t\n \n     /** \n      * Whether or not to perform a version check on instances being updated\n-     * in a datastore transaction. Version of OpenJPA prior to 4.1 always\n+     * in a datastore transaction. Version of OpenJPA prior to 0.4.1 always\n      * forced a version check.\n      */\n     public void setNonOptimisticVersionCheck\n@@ -150,11 +150,10 @@ public void setCloseOnManagedCommit(boolean close) {\n \n     /** \n      * Whether or not to perform a version check on instances being updated\n-     * in a datastore transaction. Version of OpenJPA prior to 4.1 always\n+     * in a datastore transaction. Version of OpenJPA prior to 0.4.1 always\n      * forced a version check.\n      */\n     public boolean getNonOptimisticVersionCheck() {\n         return _nonOptimisticVersionCheck;\n     }\n-\n }"}]}

