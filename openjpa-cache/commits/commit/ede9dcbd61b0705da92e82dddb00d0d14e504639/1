{"sha":"ede9dcbd61b0705da92e82dddb00d0d14e504639","node_id":"MDY6Q29tbWl0MjA2MzY0OmVkZTlkY2JkNjFiMDcwNWRhOTJlODJkZGRiMDBkMGQxNGU1MDQ2Mzk=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-08-21T00:54:44Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-08-21T00:54:44Z"},"message":"OPENJPA-293. More-eager failures.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@567889 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"aa3b3fc479fcf80c0bbde3bc820c3aa55ffe5609","url":"https://api.github.com/repos/apache/openjpa/git/trees/aa3b3fc479fcf80c0bbde3bc820c3aa55ffe5609"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/ede9dcbd61b0705da92e82dddb00d0d14e504639","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/ede9dcbd61b0705da92e82dddb00d0d14e504639","html_url":"https://github.com/apache/openjpa/commit/ede9dcbd61b0705da92e82dddb00d0d14e504639","comments_url":"https://api.github.com/repos/apache/openjpa/commits/ede9dcbd61b0705da92e82dddb00d0d14e504639/comments","author":null,"committer":null,"parents":[{"sha":"dda1e8ef6f2ac6aacf75934425aa00fae9355838","url":"https://api.github.com/repos/apache/openjpa/commits/dda1e8ef6f2ac6aacf75934425aa00fae9355838","html_url":"https://github.com/apache/openjpa/commit/dda1e8ef6f2ac6aacf75934425aa00fae9355838"}],"stats":{"total":42,"additions":26,"deletions":16},"files":[{"sha":"09d08ded5f36b8c25a0fea4da82dcf6b77a54238","filename":"openjpa-kernel-5/src/main/java/org/apache/openjpa/enhance/ManagedClassSubclasser.java","status":"modified","additions":22,"deletions":12,"changes":34,"blob_url":"https://github.com/apache/openjpa/blob/ede9dcbd61b0705da92e82dddb00d0d14e504639/openjpa-kernel-5/src/main/java/org/apache/openjpa/enhance/ManagedClassSubclasser.java","raw_url":"https://github.com/apache/openjpa/raw/ede9dcbd61b0705da92e82dddb00d0d14e504639/openjpa-kernel-5/src/main/java/org/apache/openjpa/enhance/ManagedClassSubclasser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel-5/src/main/java/org/apache/openjpa/enhance/ManagedClassSubclasser.java?ref=ede9dcbd61b0705da92e82dddb00d0d14e504639","patch":"@@ -19,24 +19,25 @@\n package org.apache.openjpa.enhance;\r\n \r\n import java.io.IOException;\r\n-import java.util.Map;\r\n-import java.util.HashMap;\r\n+import java.util.ArrayList;\r\n import java.util.Collection;\r\n-import java.util.List;\r\n import java.util.Collections;\r\n-import java.util.ArrayList;\r\n+import java.util.HashMap;\r\n import java.util.Iterator;\r\n+import java.util.List;\r\n+import java.util.Map;\r\n \r\n import org.apache.openjpa.conf.OpenJPAConfiguration;\r\n-import org.apache.openjpa.lib.util.JavaVersions;\r\n+import org.apache.openjpa.lib.log.Log;\r\n import org.apache.openjpa.lib.util.BytecodeWriter;\r\n+import org.apache.openjpa.lib.util.JavaVersions;\r\n import org.apache.openjpa.lib.util.Localizer;\r\n-import org.apache.openjpa.lib.log.Log;\r\n-import org.apache.openjpa.util.GeneratedClasses;\r\n-import org.apache.openjpa.util.InternalException;\r\n import org.apache.openjpa.meta.ClassMetaData;\r\n import org.apache.openjpa.meta.FieldMetaData;\r\n import org.apache.openjpa.meta.JavaTypes;\r\n+import org.apache.openjpa.util.GeneratedClasses;\r\n+import org.apache.openjpa.util.InternalException;\r\n+import org.apache.openjpa.util.UserException;\r\n import serp.bytecode.BCClass;\r\n \r\n /**\r\n@@ -62,9 +63,10 @@\n      * will need to do state comparisons to detect changes to newly inserted\r\n      * instances after a flush has been called.\r\n      *\r\n-     * @return the new subclasses, or <code>null</code> if subclassing is\r\n-     * disabled in <code>conf</code> or <code>classes</code> is\r\n-     * <code>null</code>.\r\n+     * @return the new subclasses, or <code>null</code> if <code>classes</code>\r\n+     * is <code>null</code>.\r\n+     * @throws UserException if <code>conf</code> requires build-time\r\n+     * enhancement and <code>classes</code> includes unenhanced types.\r\n      *\r\n      * @since 1.0.0\r\n      */\r\n@@ -76,8 +78,16 @@\n             return null;\r\n         if (classes.size() == 0)\r\n             return Collections.EMPTY_LIST;\r\n-        if (!conf.getRuntimeClassOptimization())\r\n+        if (!conf.getRuntimeClassOptimization()) {\r\n+            Collection unenhanced = new ArrayList();\r\n+            for (Class cls : classes)\r\n+                if (!PersistenceCapable.class.isAssignableFrom(cls))\r\n+                    unenhanced.add(cls);\r\n+            if (unenhanced.size() > 0)\r\n+                throw new UserException(_loc.get(\r\n+                    \"runtime-optimization-disabled\", unenhanced));\r\n             return null;\r\n+        }\r\n \r\n         Log log = conf.getLog(OpenJPAConfiguration.LOG_ENHANCE);\r\n         boolean redefine = ClassRedefiner.canRedefineClasses();\r"},{"sha":"1d71881e3fcda5d02b0a769b9c3bb31a0e606e69","filename":"openjpa-kernel/src/main/resources/org/apache/openjpa/enhance/localizer.properties","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/ede9dcbd61b0705da92e82dddb00d0d14e504639/openjpa-kernel/src/main/resources/org/apache/openjpa/enhance/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/ede9dcbd61b0705da92e82dddb00d0d14e504639/openjpa-kernel/src/main/resources/org/apache/openjpa/enhance/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/resources/org/apache/openjpa/enhance/localizer.properties?ref=ede9dcbd61b0705da92e82dddb00d0d14e504639","patch":"@@ -38,6 +38,9 @@ detach-custom-extern: Type \"{0}\" is set to detach on serialize, but implements \\\n \ta custom readExternal and/or writeExternal method.  You cannot use custom \\\n \tserialization with detachment. \n enhance-start: Enhancing type \"{0}\".\n+runtime-optimization-disabled: This configuration disallows runtime \\\n+    optimization, but the following listed types were not enhanced at build \\\n+    time or at class load time with a javaagent: \"{0}\".\n enhance-and-subclass-and-redef-start: Creating subclass and redefining methods \\\n     for \"{0}\". This means that your application will be less efficient \\\n     than it would if you ran the OpenJPA enhancer."},{"sha":"340a6a5195a07807dc76a916c44b4a260b062da3","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/enhance/TestEnhancementConfiguration.java","status":"modified","additions":1,"deletions":4,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/ede9dcbd61b0705da92e82dddb00d0d14e504639/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/enhance/TestEnhancementConfiguration.java","raw_url":"https://github.com/apache/openjpa/raw/ede9dcbd61b0705da92e82dddb00d0d14e504639/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/enhance/TestEnhancementConfiguration.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/enhance/TestEnhancementConfiguration.java?ref=ede9dcbd61b0705da92e82dddb00d0d14e504639","patch":"@@ -33,10 +33,7 @@ public void testEnhancementConfiguration() {\n                 UnenhancedFieldAccess.class, CLEAR_TABLES);\r\n             assertFalse(ImplHelper.isManagedType(emf.getConfiguration(),\r\n                 UnenhancedFieldAccess.class));\r\n-            EntityManager em = emf.createEntityManager();\r\n-            em.getTransaction().begin();\r\n-            em.persist(new UnenhancedFieldAccess());\r\n-            em.getTransaction().rollback();\r\n+            emf.createEntityManager().close();\r\n             fail(\"should not be possible to fully-initialize a system \" +\r\n                 \"that depends on unenhanced types but disables runtime\" +\r\n                 \"redefinition.\");\r"}]}

