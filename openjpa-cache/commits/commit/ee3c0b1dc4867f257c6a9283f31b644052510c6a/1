{"sha":"ee3c0b1dc4867f257c6a9283f31b644052510c6a","node_id":"MDY6Q29tbWl0MjA2MzY0OmVlM2MwYjFkYzQ4NjdmMjU3YzZhOTI4M2YzMWI2NDQwNTI1MTBjNmE=","commit":{"author":{"name":"David J. Wisneski","email":"wisneskid@apache.org","date":"2007-06-15T23:41:50Z"},"committer":{"name":"David J. Wisneski","email":"wisneskid@apache.org","date":"2007-06-15T23:41:50Z"},"message":"OPENJPA-240 Feature:Persistent field mapping support for XML column type.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@547827 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0219b469808c88f2e5db83c302d9dd6220a05765","url":"https://api.github.com/repos/apache/openjpa/git/trees/0219b469808c88f2e5db83c302d9dd6220a05765"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/ee3c0b1dc4867f257c6a9283f31b644052510c6a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/ee3c0b1dc4867f257c6a9283f31b644052510c6a","html_url":"https://github.com/apache/openjpa/commit/ee3c0b1dc4867f257c6a9283f31b644052510c6a","comments_url":"https://api.github.com/repos/apache/openjpa/commits/ee3c0b1dc4867f257c6a9283f31b644052510c6a/comments","author":null,"committer":null,"parents":[{"sha":"90d053f4ef217ae2c3644f9d6258a6d5510260d0","url":"https://api.github.com/repos/apache/openjpa/commits/90d053f4ef217ae2c3644f9d6258a6d5510260d0","html_url":"https://github.com/apache/openjpa/commit/90d053f4ef217ae2c3644f9d6258a6d5510260d0"}],"stats":{"total":161,"additions":161,"deletions":0},"files":[{"sha":"339f6ee01e7994c5862e8133585c3c50d1b60470","filename":"openjpa-xmlmapping-5/pom.xml","status":"added","additions":64,"deletions":0,"changes":64,"blob_url":"https://github.com/apache/openjpa/blob/ee3c0b1dc4867f257c6a9283f31b644052510c6a/openjpa-xmlmapping-5/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/ee3c0b1dc4867f257c6a9283f31b644052510c6a/openjpa-xmlmapping-5/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-xmlmapping-5/pom.xml?ref=ee3c0b1dc4867f257c6a9283f31b644052510c6a","patch":"@@ -0,0 +1,64 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n+<!--\r\n+ Licensed to the Apache Software Foundation (ASF) under one\r\n+ or more contributor license agreements.  See the NOTICE file\r\n+ distributed with this work for additional information\r\n+ regarding copyright ownership.  The ASF licenses this file\r\n+ to you under the Apache License, Version 2.0 (the\r\n+ \"License\"); you may not use this file except in compliance\r\n+ with the License.  You may obtain a copy of the License at\r\n+ \r\n+ http://www.apache.org/licenses/LICENSE-2.0\r\n+ \r\n+ Unless required by applicable law or agreed to in writing,\r\n+ software distributed under the License is distributed on an\r\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ KIND, either express or implied.  See the License for the\r\n+ specific language governing permissions and limitations\r\n+ under the License.   \r\n+-->\r\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\r\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\r\n+    <modelVersion>4.0.0</modelVersion>\r\n+    <groupId>org.apache.openjpa</groupId>\r\n+    <artifactId>openjpa-xmlmapping-5</artifactId>\r\n+    <packaging>jar</packaging>\r\n+    <name>OpenJPA Xmlmapping 1.5</name>\r\n+    <description>OpenJPA Xmlmapping 1.5</description>\r\n+    <url>http://incubator.apache.org/projects/openjpa</url>\r\n+    <parent>\r\n+        <groupId>org.apache.openjpa</groupId>\r\n+        <artifactId>openjpa-parent</artifactId>\r\n+        <version>1.0.0-SNAPSHOT</version>\r\n+    </parent>\r\n+    <dependencies>\r\n+        <dependency>\r\n+            <groupId>org.apache.openjpa</groupId>\r\n+            <artifactId>openjpa-kernel</artifactId>\r\n+            <version>${pom.version}</version>\r\n+        </dependency>\r\n+        <dependency>\r\n+            <groupId>org.apache.openjpa</groupId>\r\n+            <artifactId>openjpa-jdbc</artifactId>\r\n+            <version>${pom.version}</version>\r\n+        </dependency>\t\r\n+\t    <dependency>\r\n+\t\t    <groupId>javax.xml.bind</groupId>\r\n+\t\t    <artifactId>jaxb-api</artifactId>\r\n+\t\t    <version>2.1</version>\r\n+\t    </dependency>\r\n+    </dependencies>\r\n+    <build>\r\n+        <plugins>\r\n+            <plugin>\r\n+                <groupId>org.apache.maven.plugins</groupId>\r\n+                <artifactId>maven-compiler-plugin</artifactId>\r\n+                <configuration>\r\n+                    <source>1.5</source>\r\n+                    <target>1.5</target>\r\n+                </configuration>\r\n+            </plugin>\r\n+        </plugins>\r\n+    </build>\r\n+</project>\n\\ No newline at end of file"},{"sha":"79b6c44978ca0a4c7e5837af490e08899679f6f8","filename":"openjpa-xmlmapping-5/src/main/java/org/apache/openjpa/xmlmapping/XmlValueHandler.java","status":"added","additions":97,"deletions":0,"changes":97,"blob_url":"https://github.com/apache/openjpa/blob/ee3c0b1dc4867f257c6a9283f31b644052510c6a/openjpa-xmlmapping-5/src/main/java/org/apache/openjpa/xmlmapping/XmlValueHandler.java","raw_url":"https://github.com/apache/openjpa/raw/ee3c0b1dc4867f257c6a9283f31b644052510c6a/openjpa-xmlmapping-5/src/main/java/org/apache/openjpa/xmlmapping/XmlValueHandler.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-xmlmapping-5/src/main/java/org/apache/openjpa/xmlmapping/XmlValueHandler.java?ref=ee3c0b1dc4867f257c6a9283f31b644052510c6a","patch":"@@ -0,0 +1,97 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.xmlmapping;\n+\n+import java.io.StringReader;\n+import java.io.StringWriter;\n+import java.io.Writer;\n+\n+import javax.xml.bind.JAXBContext;\n+import javax.xml.bind.JAXBException;\n+import javax.xml.bind.Marshaller;\n+import javax.xml.bind.Unmarshaller;\n+import javax.xml.transform.stream.StreamSource;\n+\n+import org.apache.openjpa.jdbc.kernel.JDBCStore;\n+import org.apache.openjpa.jdbc.meta.ValueMapping;\n+import org.apache.openjpa.jdbc.meta.strats.AbstractValueHandler;\n+import org.apache.openjpa.jdbc.schema.Column;\n+import org.apache.openjpa.jdbc.schema.ColumnIO;\n+import org.apache.openjpa.meta.JavaTypes;\n+import org.apache.openjpa.util.InternalException;\n+\n+/**\n+ * Base class for xml value handlers.\n+ *\n+ * @author Catalina Wei\n+ * @since 1.0\n+ */\n+public class XmlValueHandler\n+    extends AbstractValueHandler {\n+    private static final String PROXY_SUFFIX = \"$proxy\";\n+\n+    public Column[] map(ValueMapping vm, String name, ColumnIO io,\n+        boolean adapt) {\n+        Column col = new Column();\n+        col.setName(name);\n+        col.setJavaType(JavaTypes.STRING);\n+        col.setSize(-1);\n+        col.setTypeName(vm.getMappingRepository().getDBDictionary()\n+            .xmlTypeName);\n+        return new Column[]{ col };\n+    }\n+\n+    public Object toDataStoreValue(ValueMapping vm, Object val,\n+        JDBCStore store) {\n+        // check for null value.\n+        if (val == null) \n+            return null;\n+        try {\n+            JAXBContext jc = JAXBContext.newInstance(\n+                // on update val is a proxy, that can not be marshalled.\n+                // so we get original type if val is a proxy.\n+                (val.getClass().getName().endsWith(PROXY_SUFFIX))\n+                     ? val.getClass().getSuperclass()\n+                     : val.getClass());\n+            Marshaller m = jc.createMarshaller();            \n+            Writer result = new StringWriter();\n+            m.marshal( val, result );\n+            return result.toString();\n+        }\n+        catch(JAXBException je) {\n+            throw new InternalException(je);\n+        }\n+    }\n+\n+    public Object toObjectValue(ValueMapping vm, Object val) {\n+        // check for null value.\n+        if (val == null) \n+            return null;\n+        try {\n+            String packageName = vm.getDeclaredType().getPackage().getName();\n+            JAXBContext jc = JAXBContext.newInstance(packageName);\n+            Unmarshaller u = jc.createUnmarshaller();\n+            return u.unmarshal(new StreamSource(new StringReader\n+                    (val.toString())));\n+        }\n+        catch(JAXBException je) {\n+            throw new InternalException(je);\n+        }\n+    }\n+}"}]}

