{"sha":"ef2065122aec54bdee276b4e7f3777c94748826e","node_id":"MDY6Q29tbWl0MjA2MzY0OmVmMjA2NTEyMmFlYzU0YmRlZTI3NmI0ZTdmMzc3N2M5NDc0ODgyNmU=","commit":{"author":{"name":"Jody Grassel","email":"jgrassel@apache.org","date":"2012-09-10T20:27:56Z"},"committer":{"name":"Jody Grassel","email":"jgrassel@apache.org","date":"2012-09-10T20:27:56Z"},"message":"OPENJPA-2260: Parenthesis-augmented parameters are improperly processed at EM level\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1383100 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"7863935166a6340053aae09c67f6cbda7eb9c93b","url":"https://api.github.com/repos/apache/openjpa/git/trees/7863935166a6340053aae09c67f6cbda7eb9c93b"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/ef2065122aec54bdee276b4e7f3777c94748826e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/ef2065122aec54bdee276b4e7f3777c94748826e","html_url":"https://github.com/apache/openjpa/commit/ef2065122aec54bdee276b4e7f3777c94748826e","comments_url":"https://api.github.com/repos/apache/openjpa/commits/ef2065122aec54bdee276b4e7f3777c94748826e/comments","author":null,"committer":null,"parents":[{"sha":"1952ecd460306fb0539ee6b947d6d07fd84e9bfc","url":"https://api.github.com/repos/apache/openjpa/commits/1952ecd460306fb0539ee6b947d6d07fd84e9bfc","html_url":"https://github.com/apache/openjpa/commit/1952ecd460306fb0539ee6b947d6d07fd84e9bfc"}],"stats":{"total":86,"additions":85,"deletions":1},"files":[{"sha":"da6a82a447d98522230ff7a655da21d654206cba","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/entitymanager/TestEntityManagerConfiguration.java","status":"added","additions":79,"deletions":0,"changes":79,"blob_url":"https://github.com/apache/openjpa/blob/ef2065122aec54bdee276b4e7f3777c94748826e/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/entitymanager/TestEntityManagerConfiguration.java","raw_url":"https://github.com/apache/openjpa/raw/ef2065122aec54bdee276b4e7f3777c94748826e/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/entitymanager/TestEntityManagerConfiguration.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/entitymanager/TestEntityManagerConfiguration.java?ref=ef2065122aec54bdee276b4e7f3777c94748826e","patch":"@@ -0,0 +1,79 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+\n+package org.apache.openjpa.persistence.entitymanager;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import javax.persistence.EntityManager;\n+\n+import org.apache.openjpa.persistence.EntityManagerImpl;\n+import org.apache.openjpa.persistence.datacache.common.apps.PObject;\n+import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n+\n+public class TestEntityManagerConfiguration extends SingleEMFTestCase {\n+    public void setUp() throws Exception {\n+        super.setUp(PObject.class);\n+    }\n+    \n+    public void testEMConfig001() {\n+        Map propMap = new HashMap();\n+        EntityManager em = emf.createEntityManager(propMap);\n+        \n+        EntityManagerImpl eml = (EntityManagerImpl) em;\n+        assertTrue(eml.getQuerySQLCache());\n+    }\n+    \n+    public void testEMConfig002() {\n+        Map propMap = new HashMap();\n+        propMap.put(\"openjpa.jdbc.QuerySQLCache\", \"true(EnableStatistics=true)\");\n+        EntityManager em = emf.createEntityManager(propMap);\n+        \n+        EntityManagerImpl eml = (EntityManagerImpl) em;\n+        assertTrue(eml.getQuerySQLCache());\n+    }\n+    \n+    public void testEMConfig003() {\n+        Map propMap = new HashMap();\n+        propMap.put(\"openjpa.jdbc.QuerySQLCache\", \"false\");\n+        EntityManager em = emf.createEntityManager(propMap);\n+        \n+        EntityManagerImpl eml = (EntityManagerImpl) em;\n+        assertFalse(eml.getQuerySQLCache());\n+    }\n+    \n+    public void testEMConfig004() {\n+        Map propMap = new HashMap();\n+        propMap.put(\"openjpa.jdbc.QuerySQLCache\", \"false(EnableStatistics=true)\");\n+        EntityManager em = emf.createEntityManager(propMap);\n+        \n+        EntityManagerImpl eml = (EntityManagerImpl) em;\n+        assertFalse(eml.getQuerySQLCache());\n+    }\n+    \n+    public void testEMConfig005() {\n+        Map propMap = new HashMap();\n+        propMap.put(\"openjpa.jdbc.QuerySQLCache\", \"notabool\");\n+        EntityManager em = emf.createEntityManager(propMap);\n+        \n+        EntityManagerImpl eml = (EntityManagerImpl) em;\n+        assertFalse(eml.getQuerySQLCache());\n+    }\n+}"},{"sha":"48c4fe53d2a8f8b79361bfbae7bff4e40905bbbe","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/ef2065122aec54bdee276b4e7f3777c94748826e/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/ef2065122aec54bdee276b4e7f3777c94748826e/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java?ref=ef2065122aec54bdee276b4e7f3777c94748826e","patch":"@@ -1854,7 +1854,12 @@ Object convertUserValue(String key, Object value, Class<?> targetType) {\n             if (\"null\".equals(value)) {\n                 return null;\n             } else {\n-                return Strings.parse((String) value, targetType);\n+                String val = (String) value;\n+                int parenIndex = val.indexOf('(');\n+                if (!String.class.equals(targetType) && (parenIndex > 0)) {\n+                    val = val.substring(0, parenIndex);\n+                }\n+                return Strings.parse(val, targetType);\n             } \n         } else if (value instanceof AutoDetachType) {\n         \tEnumSet<AutoDetachType> autoDetachFlags = EnumSet.noneOf(AutoDetachType.class);"}]}

