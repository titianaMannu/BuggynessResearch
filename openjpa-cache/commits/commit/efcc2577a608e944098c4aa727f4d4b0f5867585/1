{"sha":"efcc2577a608e944098c4aa727f4d4b0f5867585","node_id":"MDY6Q29tbWl0MjA2MzY0OmVmY2MyNTc3YTYwOGU5NDQwOThjNGFhNzI3ZjRkNGIwZjU4Njc1ODU=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2008-05-05T20:52:29Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2008-05-05T20:52:29Z"},"message":"OPENJPA-590 committing patch provided by Fay Wang\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@653595 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"00933031f9c4a08b5ae842c22606fb1d985a5b00","url":"https://api.github.com/repos/apache/openjpa/git/trees/00933031f9c4a08b5ae842c22606fb1d985a5b00"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/efcc2577a608e944098c4aa727f4d4b0f5867585","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/efcc2577a608e944098c4aa727f4d4b0f5867585","html_url":"https://github.com/apache/openjpa/commit/efcc2577a608e944098c4aa727f4d4b0f5867585","comments_url":"https://api.github.com/repos/apache/openjpa/commits/efcc2577a608e944098c4aa727f4d4b0f5867585/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"40fec0073eed73711f9f92b334fe716929057434","url":"https://api.github.com/repos/apache/openjpa/commits/40fec0073eed73711f9f92b334fe716929057434","html_url":"https://github.com/apache/openjpa/commit/40fec0073eed73711f9f92b334fe716929057434"}],"stats":{"total":12,"additions":7,"deletions":5},"files":[{"sha":"087687baff8c6597fd7a132749c1f7ce333abd6d","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/QueryExpressions.java","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/efcc2577a608e944098c4aa727f4d4b0f5867585/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/QueryExpressions.java","raw_url":"https://github.com/apache/openjpa/raw/efcc2577a608e944098c4aa727f4d4b0f5867585/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/QueryExpressions.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/exps/QueryExpressions.java?ref=efcc2577a608e944098c4aa727f4d4b0f5867585","patch":"@@ -21,6 +21,7 @@\n import java.io.Serializable;\n import java.util.Collections;\n import java.util.HashMap;\n+import java.util.LinkedHashMap;\n import java.util.Map;\n \n import org.apache.commons.collections.map.LinkedMap;\n@@ -47,7 +48,7 @@\n     /**\n      * Map of {@link FieldMetaData},{@link Value} for update statements.\n      */\n-    public Map updates = Collections.EMPTY_MAP;\n+    public Map<Path, Value> updates = Collections.EMPTY_MAP;\n     public int distinct = DISTINCT_AUTO;\n     public String alias = null;\n     public Value[] projections = EMPTY_VALUES;\n@@ -86,7 +87,7 @@ public boolean isAggregate() {\n      */\n     public void putUpdate(Path path, Value val) {\n         if (updates == Collections.EMPTY_MAP)\n-            updates = new HashMap();\n+            updates = new LinkedHashMap<Path, Value>();\n         updates.put(path, val);\n     }\n "},{"sha":"a206f3b2fd9d9f8a786735cc73fb8016824722a1","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/jpql/JPQLExpressionBuilder.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/efcc2577a608e944098c4aa727f4d4b0f5867585/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/jpql/JPQLExpressionBuilder.java","raw_url":"https://github.com/apache/openjpa/raw/efcc2577a608e944098c4aa727f4d4b0f5867585/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/jpql/JPQLExpressionBuilder.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/jpql/JPQLExpressionBuilder.java?ref=efcc2577a608e944098c4aa727f4d4b0f5867585","patch":"@@ -26,6 +26,7 @@\n import java.util.Collection;\n import java.util.HashSet;\n import java.util.Iterator;\n+import java.util.LinkedHashSet;\n import java.util.Set;\n import java.util.Stack;\n import java.util.TreeSet;\n@@ -1569,12 +1570,12 @@ public void jjtClose() {\n         }\n \n         JPQLNode[] findChildrenByID(int id) {\n-            Collection set = new HashSet();\n+            Collection<JPQLNode> set = new LinkedHashSet<JPQLNode>();\n             findChildrenByID(id, set);\n-            return (JPQLNode[]) set.toArray(new JPQLNode[set.size()]);\n+            return set.toArray(new JPQLNode[set.size()]);\n         }\n \n-        private void findChildrenByID(int id, Collection set) {\n+        private void findChildrenByID(int id, Collection<JPQLNode> set) {\n             for (int i = 0; children != null && i < children.length; i++) {\n                 if (children[i].id == id)\n                     set.add(children[i]);"}]}

