{"sha":"f06d862ec60cd1ab679152e0c7c6588c3b6282e1","node_id":"MDY6Q29tbWl0MjA2MzY0OmYwNmQ4NjJlYzYwY2QxYWI2NzkxNTJlMGM3YzY1ODhjM2I2MjgyZTE=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2009-08-27T01:26:37Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2009-08-27T01:26:37Z"},"message":"OPENJPA-386:\nHandle abstract and non abstract MappedSuperClasses identically. \nSubmitted By: Jody Grassel\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@808243 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"7151122f3edc0675783e141efe7a23aad6b9a38a","url":"https://api.github.com/repos/apache/openjpa/git/trees/7151122f3edc0675783e141efe7a23aad6b9a38a"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/f06d862ec60cd1ab679152e0c7c6588c3b6282e1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/f06d862ec60cd1ab679152e0c7c6588c3b6282e1","html_url":"https://github.com/apache/openjpa/commit/f06d862ec60cd1ab679152e0c7c6588c3b6282e1","comments_url":"https://api.github.com/repos/apache/openjpa/commits/f06d862ec60cd1ab679152e0c7c6588c3b6282e1/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"f6ae418aa546bf481bf5079ade672c0aa41bf188","url":"https://api.github.com/repos/apache/openjpa/commits/f6ae418aa546bf481bf5079ade672c0aa41bf188","html_url":"https://github.com/apache/openjpa/commit/f6ae418aa546bf481bf5079ade672c0aa41bf188"}],"stats":{"total":168,"additions":167,"deletions":1},"files":[{"sha":"ad0f6eac4c88e4a5eb409cb821dba2c5a5a8d934","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/ClassMetaData.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/f06d862ec60cd1ab679152e0c7c6588c3b6282e1/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ClassMetaData.java","raw_url":"https://github.com/apache/openjpa/raw/f06d862ec60cd1ab679152e0c7c6588c3b6282e1/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ClassMetaData.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ClassMetaData.java?ref=f06d862ec60cd1ab679152e0c7c6588c3b6282e1","patch":"@@ -2042,7 +2042,8 @@ public boolean useIdClassFromParent() {\n     private boolean hasConcretePCSuperclass() {\n         if (_super == null)\n             return false;\n-        if (!Modifier.isAbstract(_super.getModifiers()))\n+        if (!Modifier.isAbstract(_super.getModifiers()) && \n+        \t\t(!getPCSuperclassMetaData().isAbstract()))\n             return true;\n         return getPCSuperclassMetaData().hasConcretePCSuperclass();\n     }"},{"sha":"4e31d4d20a1b66e2a1222860505cd02d402260c4","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/idclass/IdClassEntity.java","status":"added","additions":52,"deletions":0,"changes":52,"blob_url":"https://github.com/apache/openjpa/blob/f06d862ec60cd1ab679152e0c7c6588c3b6282e1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/idclass/IdClassEntity.java","raw_url":"https://github.com/apache/openjpa/raw/f06d862ec60cd1ab679152e0c7c6588c3b6282e1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/idclass/IdClassEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/idclass/IdClassEntity.java?ref=f06d862ec60cd1ab679152e0c7c6588c3b6282e1","patch":"@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.inheritance.mappedsuperclass.idclass;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+import javax.persistence.IdClass;\n+\n+@Entity\n+@IdClass(TIdClass.class)\n+public class IdClassEntity extends IdClassTestMSC {\n+\t@Id\n+\tprivate int id;\n+\t\n+\tprivate String someData;\n+\t\n+\tpublic IdClassEntity() {\n+\t\tsomeData = \"\";\n+\t}\n+\n+\tpublic int getId() {\n+\t\treturn id;\n+\t}\n+\n+\tpublic void setId(int id) {\n+\t\tthis.id = id;\n+\t}\n+\n+\tpublic String getSomeData() {\n+\t\treturn someData;\n+\t}\n+\n+\tpublic void setSomeData(String someData) {\n+\t\tthis.someData = someData;\n+\t}\n+}"},{"sha":"d67ca1b4d2a7c013af20b99114d3427828a254f2","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/idclass/IdClassTestMSC.java","status":"added","additions":34,"deletions":0,"changes":34,"blob_url":"https://github.com/apache/openjpa/blob/f06d862ec60cd1ab679152e0c7c6588c3b6282e1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/idclass/IdClassTestMSC.java","raw_url":"https://github.com/apache/openjpa/raw/f06d862ec60cd1ab679152e0c7c6588c3b6282e1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/idclass/IdClassTestMSC.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/idclass/IdClassTestMSC.java?ref=f06d862ec60cd1ab679152e0c7c6588c3b6282e1","patch":"@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.inheritance.mappedsuperclass.idclass;\n+\n+import javax.persistence.Column;\n+import javax.persistence.MappedSuperclass;\n+import javax.persistence.Version;\n+\n+@MappedSuperclass\n+public class IdClassTestMSC {\n+\t@Version\n+\t@Column(name=\"versionField\")\n+\tprivate int version;\n+\n+\tpublic int getVersion() {\n+\t\treturn version;\n+\t}\n+}"},{"sha":"af95c15bd5cf80d095e154ed435c24bffc88bd95","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/idclass/TIdClass.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/f06d862ec60cd1ab679152e0c7c6588c3b6282e1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/idclass/TIdClass.java","raw_url":"https://github.com/apache/openjpa/raw/f06d862ec60cd1ab679152e0c7c6588c3b6282e1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/idclass/TIdClass.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/idclass/TIdClass.java?ref=f06d862ec60cd1ab679152e0c7c6588c3b6282e1","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.inheritance.mappedsuperclass.idclass;\n+\n+import java.io.Serializable;\n+\n+public class TIdClass implements Serializable {\n+\tprivate int id;\n+\n+\tpublic int getId() {\n+\t\treturn id;\n+\t}\n+\n+\tpublic void setId(int id) {\n+\t\tthis.id = id;\n+\t}\n+\n+\tpublic boolean equals(Object obj) {\n+\t\treturn super.equals(obj);\n+\t}\n+\n+\tpublic int hashCode() {\n+\t\treturn super.hashCode();\n+\t}\n+}"},{"sha":"67b935f2415be28673c295ad412dcc3a336ababf","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/idclass/TestIdClass.java","status":"added","additions":38,"deletions":0,"changes":38,"blob_url":"https://github.com/apache/openjpa/blob/f06d862ec60cd1ab679152e0c7c6588c3b6282e1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/idclass/TestIdClass.java","raw_url":"https://github.com/apache/openjpa/raw/f06d862ec60cd1ab679152e0c7c6588c3b6282e1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/idclass/TestIdClass.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/mappedsuperclass/idclass/TestIdClass.java?ref=f06d862ec60cd1ab679152e0c7c6588c3b6282e1","patch":"@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.inheritance.mappedsuperclass.idclass;\n+\n+import javax.persistence.EntityManager;\n+import javax.persistence.Query;\n+\n+import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n+\n+public class TestIdClass extends SingleEMFTestCase {\n+\t public void setUp() {\n+\t        setUp(IdClassTestMSC.class, IdClassEntity.class);\n+\t }\n+\t \n+\t public void test001() {\n+\t\t EntityManager em = emf.createEntityManager();\n+\t\t Query query = em.createQuery(\"SELECT a from IdClassEntity a\");\n+\t\t query.getResultList();\n+\t\t em.close();\t\t \n+\t}\n+}\n+"}]}

