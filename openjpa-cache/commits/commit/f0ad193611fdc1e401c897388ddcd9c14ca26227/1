{"sha":"f0ad193611fdc1e401c897388ddcd9c14ca26227","node_id":"MDY6Q29tbWl0MjA2MzY0OmYwYWQxOTM2MTFmZGMxZTQwMWM4OTczODhkZGNkOWMxNGNhMjYyMjc=","commit":{"author":{"name":"Jeremy Bauer","email":"jrbauer@apache.org","date":"2009-11-04T17:48:29Z"},"committer":{"name":"Jeremy Bauer","email":"jrbauer@apache.org","date":"2009-11-04T17:48:29Z"},"message":"Fixed test case failure which occurs on DB platforms that use non-default max embedded LOB size.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@832816 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a683969df8c08bb1fb487478f6b49a01ffa9d931","url":"https://api.github.com/repos/apache/openjpa/git/trees/a683969df8c08bb1fb487478f6b49a01ffa9d931"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/f0ad193611fdc1e401c897388ddcd9c14ca26227","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/f0ad193611fdc1e401c897388ddcd9c14ca26227","html_url":"https://github.com/apache/openjpa/commit/f0ad193611fdc1e401c897388ddcd9c14ca26227","comments_url":"https://api.github.com/repos/apache/openjpa/commits/f0ad193611fdc1e401c897388ddcd9c14ca26227/comments","author":null,"committer":null,"parents":[{"sha":"ac531c58759a605d7865db218ff1625454c591b2","url":"https://api.github.com/repos/apache/openjpa/commits/ac531c58759a605d7865db218ff1625454c591b2","html_url":"https://github.com/apache/openjpa/commit/ac531c58759a605d7865db218ff1625454c591b2"}],"stats":{"total":19,"additions":17,"deletions":2},"files":[{"sha":"3a228f9b5309c66ab487f64d19d2af0b78e96d4f","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestMapCollectionToBlob.java","status":"modified","additions":17,"deletions":2,"changes":19,"blob_url":"https://github.com/apache/openjpa/blob/f0ad193611fdc1e401c897388ddcd9c14ca26227/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestMapCollectionToBlob.java","raw_url":"https://github.com/apache/openjpa/raw/f0ad193611fdc1e401c897388ddcd9c14ca26227/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestMapCollectionToBlob.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/relations/TestMapCollectionToBlob.java?ref=f0ad193611fdc1e401c897388ddcd9c14ca26227","patch":"@@ -20,9 +20,12 @@\n \n import java.sql.Types;\n \n+import org.apache.openjpa.jdbc.conf.JDBCConfiguration;\n import org.apache.openjpa.jdbc.meta.ClassMapping;\n import org.apache.openjpa.jdbc.meta.FieldMapping;\n import org.apache.openjpa.jdbc.meta.strats.HandlerFieldStrategy;\n+import org.apache.openjpa.jdbc.meta.strats.MaxEmbeddedBlobFieldStrategy;\n+import org.apache.openjpa.jdbc.sql.DBDictionary;\n import org.apache.openjpa.persistence.JPAFacadeHelper;\n import org.apache.openjpa.persistence.test.SingleEMTestCase;\n \n@@ -37,8 +40,8 @@ public void setUp() {\n     public void testHandlerToHandlerMaps() {\n         ClassMapping cm = (ClassMapping) JPAFacadeHelper.getMetaData(em,\n             HandlerToHandlerMapInstance.class);\n-        FieldMapping fm = cm.getFieldMapping(\"map\");        \n-        assertEquals(HandlerFieldStrategy.class, fm.getStrategy().getClass());\n+        FieldMapping fm = cm.getFieldMapping(\"map\");\n+        assertEquals(getBlobFieldStrategy(), fm.getStrategy().getClass());\n         assertEquals(\"NONSTD_MAPPING_MAP\", fm.getTable().getName());\n         assertEquals(fm.getTable().getColumn(\"MAP\").getType(), Types.BLOB);\n \n@@ -49,4 +52,16 @@ public void testHandlerToHandlerMaps() {\n         em.getTransaction().commit();\n         em.close();\n     }\n+\n+    /*\n+     * Returns the strategy that is used for handling blob fields, based upon\n+     * the configuration of the dictionary.\n+     */\n+    private Class<?> getBlobFieldStrategy() {\n+        DBDictionary dict = ((JDBCConfiguration)(emf.getConfiguration())).getDBDictionaryInstance();\n+        if (dict.maxEmbeddedBlobSize == -1) {\n+            return HandlerFieldStrategy.class;\n+        }\n+        return MaxEmbeddedBlobFieldStrategy.class;\n+    }\n }"}]}

