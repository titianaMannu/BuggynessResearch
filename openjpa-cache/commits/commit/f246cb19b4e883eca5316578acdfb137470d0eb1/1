{"sha":"f246cb19b4e883eca5316578acdfb137470d0eb1","node_id":"MDY6Q29tbWl0MjA2MzY0OmYyNDZjYjE5YjRlODgzZWNhNTMxNjU3OGFjZGZiMTM3NDcwZDBlYjE=","commit":{"author":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-09-06T04:01:29Z"},"committer":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-09-06T04:01:29Z"},"message":"fix test case problem for MySQL\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@811754 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"5394f66deed2041ae3104aa3f982d66db3765d80","url":"https://api.github.com/repos/apache/openjpa/git/trees/5394f66deed2041ae3104aa3f982d66db3765d80"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/f246cb19b4e883eca5316578acdfb137470d0eb1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/f246cb19b4e883eca5316578acdfb137470d0eb1","html_url":"https://github.com/apache/openjpa/commit/f246cb19b4e883eca5316578acdfb137470d0eb1","comments_url":"https://api.github.com/repos/apache/openjpa/commits/f246cb19b4e883eca5316578acdfb137470d0eb1/comments","author":null,"committer":null,"parents":[{"sha":"35ef9efaecb177d32d24a064bcbd40ae0578f6d5","url":"https://api.github.com/repos/apache/openjpa/commits/35ef9efaecb177d32d24a064bcbd40ae0578f6d5","html_url":"https://github.com/apache/openjpa/commit/35ef9efaecb177d32d24a064bcbd40ae0578f6d5"}],"stats":{"total":14,"additions":7,"deletions":7},"files":[{"sha":"95fee62dd44976a697ca9023a9dbefce96318762","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestDataCacheBehavesIdentical.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/f246cb19b4e883eca5316578acdfb137470d0eb1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestDataCacheBehavesIdentical.java","raw_url":"https://github.com/apache/openjpa/raw/f246cb19b4e883eca5316578acdfb137470d0eb1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestDataCacheBehavesIdentical.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/datacache/TestDataCacheBehavesIdentical.java?ref=f246cb19b4e883eca5316578acdfb137470d0eb1","patch":"@@ -316,7 +316,7 @@ public void verifyRefresh(boolean useDataCache, LockModeType lock,\n         // Modify the record in the database in a separate transaction using\n         // native SQL so that the in-memory instance is not altered \n         em.getTransaction().begin();\n-        String sql = \"UPDATE POBJECT SET NAME='\" + MARKER_DATABASE\n+        String sql = \"UPDATE PObject SET NAME='\" + MARKER_DATABASE\n         + \"' WHERE id=\" + oid;\n         em.createNativeQuery(sql).executeUpdate();\n         em.getTransaction().commit();"},{"sha":"5664738e5c58fd9b9492c5445212d6fd037b53fc","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/TestDefaultInheritanceStrategy.java","status":"modified","additions":6,"deletions":6,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/f246cb19b4e883eca5316578acdfb137470d0eb1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/TestDefaultInheritanceStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/f246cb19b4e883eca5316578acdfb137470d0eb1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/TestDefaultInheritanceStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/TestDefaultInheritanceStrategy.java?ref=f246cb19b4e883eca5316578acdfb137470d0eb1","patch":"@@ -122,7 +122,7 @@ public void testSimpleDefaultInheritance() {\n \n         em.clear();\n         \n-        verifyDtypeColumnEntriesAndMapping(em, \"BASECLASS\", 4, BaseClass.class);\n+        verifyDtypeColumnEntriesAndMapping(em, \"BaseClass\", 4, BaseClass.class);\n                 \n         verifyInheritanceQueryResult(em, \"SubclassA\", \n             classArray(SubclassA.class), 0, 1);\n@@ -309,7 +309,7 @@ public void testManagedInterfaceAndBase() {\n         verifyNoDypeColumn(em, \"SubclassF\");\n \n         // Verify that the base class does contain a discriminator column\n-        verifyDtypeColumnEntriesAndMapping(em, \"BASECLASS3\", 2, \n+        verifyDtypeColumnEntriesAndMapping(em, \"BaseClass3\", 2, \n             BaseClass3.class);\n \n         // Query the subclass table.  Make sure the counts are correct and\n@@ -356,7 +356,7 @@ public void testSubclassSpecifiedInheritance() {\n \n         em.clear();\n         \n-        verifyDtypeColumnEntriesAndMapping(em, \"BASECLASS4\", 2, \n+        verifyDtypeColumnEntriesAndMapping(em, \"BaseClass4\", 2, \n             BaseClass4.class);\n \n         // Verify that the subclass table does not contain a discriminator\n@@ -413,7 +413,7 @@ public void testCircularInheritedRelationships() {\n         \n         em.clear();\n \n-        verifyDtypeColumnEntriesAndMapping(em, \"BASECLASS5\", 3, \n+        verifyDtypeColumnEntriesAndMapping(em, \"BaseClass5\", 3, \n                 BaseClass5.class);\n \n         // Verify that the midclass table does not contain a discriminator\n@@ -491,7 +491,7 @@ public void testAbstractEntityInheritance() {\n         \n         em.clear();\n \n-        verifyDtypeColumnEntriesAndMapping(em, \"ABSTRACTCLASS\", 2, \n+        verifyDtypeColumnEntriesAndMapping(em, \"AbstractClass\", 2, \n                 AbstractClass.class);\n \n         // Verify that the midclass table does not contain a discriminator\n@@ -543,7 +543,7 @@ public void testMidNonEntityInheritance() {\n         \n         em.clear();\n         \n-        verifyDtypeColumnEntriesAndMapping(em, \"BASECLASS6\", 2, \n+        verifyDtypeColumnEntriesAndMapping(em, \"BaseClass6\", 2, \n                 BaseClass6.class);\n \n         // Verify that the subclass table does not contain a discriminator"}]}

