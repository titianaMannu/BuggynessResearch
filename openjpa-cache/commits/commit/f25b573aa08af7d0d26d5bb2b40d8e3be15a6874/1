{"sha":"f25b573aa08af7d0d26d5bb2b40d8e3be15a6874","node_id":"MDY6Q29tbWl0MjA2MzY0OmYyNWI1NzNhYTA4YWY3ZDBkMjZkNWJiMmI0MGQ4ZTNiZTE1YTY4NzQ=","commit":{"author":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2009-10-30T23:21:09Z"},"committer":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2009-10-30T23:21:09Z"},"message":"OPENJPA-1370 JPA2 missing implementation for createNamedQuery(String name, Class<T> resultClass)\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@831488 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"7230d7e4aa6e9f6e44d0ebdbcf08361999e33125","url":"https://api.github.com/repos/apache/openjpa/git/trees/7230d7e4aa6e9f6e44d0ebdbcf08361999e33125"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/f25b573aa08af7d0d26d5bb2b40d8e3be15a6874","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/f25b573aa08af7d0d26d5bb2b40d8e3be15a6874","html_url":"https://github.com/apache/openjpa/commit/f25b573aa08af7d0d26d5bb2b40d8e3be15a6874","comments_url":"https://api.github.com/repos/apache/openjpa/commits/f25b573aa08af7d0d26d5bb2b40d8e3be15a6874/comments","author":null,"committer":null,"parents":[{"sha":"e1dcbce754528e8f080449e17de06f99e3787c1a","url":"https://api.github.com/repos/apache/openjpa/commits/e1dcbce754528e8f080449e17de06f99e3787c1a","html_url":"https://github.com/apache/openjpa/commit/e1dcbce754528e8f080449e17de06f99e3787c1a"}],"stats":{"total":99,"additions":96,"deletions":3},"files":[{"sha":"6813159a96265d58d7ee8a9d5c7b5c0224af632f","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestQueryResultClassAPI.java","status":"added","additions":92,"deletions":0,"changes":92,"blob_url":"https://github.com/apache/openjpa/blob/f25b573aa08af7d0d26d5bb2b40d8e3be15a6874/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestQueryResultClassAPI.java","raw_url":"https://github.com/apache/openjpa/raw/f25b573aa08af7d0d26d5bb2b40d8e3be15a6874/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestQueryResultClassAPI.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestQueryResultClassAPI.java?ref=f25b573aa08af7d0d26d5bb2b40d8e3be15a6874","patch":"@@ -0,0 +1,92 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+package org.apache.openjpa.persistence.query;\r\n+\r\n+import java.util.Collection;\r\n+import java.util.List;\r\n+\r\n+import javax.persistence.EntityManager;\r\n+import javax.persistence.Query;\r\n+\r\n+\r\n+\r\n+import org.apache.openjpa.kernel.PreparedQuery;\r\n+import org.apache.openjpa.kernel.PreparedQueryCache;\r\n+import org.apache.openjpa.persistence.query.common.apps.QueryTest1;\r\n+import org.apache.openjpa.persistence.query.common.apps.QueryTest2;\r\n+import org.apache.openjpa.persistence.query.common.apps.QueryTest4;\r\n+import org.apache.openjpa.persistence.test.SingleEMFTestCase;\r\n+\r\n+public class TestQueryResultClassAPI extends SingleEMFTestCase {\r\n+\r\n+    public void setUp() {\r\n+        setUp(QueryTest1.class, QueryTest2.class, QueryTest4.class,\r\n+            \"openjpa.jdbc.QuerySQLCache\", \"true\",\r\n+            CLEAR_TABLES);\r\n+\r\n+        EntityManager em = emf.createEntityManager();\r\n+        em.getTransaction().begin();\r\n+        QueryTest1 pc = null;\r\n+        for (int i = 0; i < 10; i++) {\r\n+            pc = new QueryTest1();\r\n+            if (i < 5)\r\n+                pc.setNum(4);\r\n+            else\r\n+                pc.setNum(i + 10);\r\n+            pc.setDate(new java.util.Date(9999));\r\n+            em.persist(pc);\r\n+        }\r\n+        em.getTransaction().commit();\r\n+        em.close();\r\n+    }\r\n+\r\n+\r\n+    public void testQueryWithResultClass() {\r\n+        EntityManager em = emf.createEntityManager();\r\n+        String jpql = \"SELECT o FROM QueryTest1 o\";\r\n+\r\n+        Query query = em.createQuery(jpql, QueryTest1.class);\r\n+\r\n+        List rs = query.getResultList();\r\n+        assertTrue(rs.get(0) instanceof QueryTest1);\r\n+        PreparedQuery pq = getPreparedQueryCache().get(jpql);\r\n+        assertNotNull(pq);\r\n+\r\n+        Query query2 = em.createQuery(jpql, QueryTest1.class);\r\n+        PreparedQuery pq2 = getPreparedQueryCache().get(jpql);\r\n+        assertEquals(pq, pq2);\r\n+        rs = query2.getResultList();\r\n+        assertTrue(rs.get(0) instanceof QueryTest1);\r\n+\r\n+        jpql = \"SELECT o.datum FROM QueryTest1 o\";\r\n+        query = em.createQuery(jpql, java.util.Date.class);\r\n+        rs = query.getResultList();\r\n+        assertTrue(rs.get(0) instanceof java.util.Date);\r\n+\r\n+        query = em.createNamedQuery(\"named\", QueryTest1.class);\r\n+        rs = query.getResultList();\r\n+        assertTrue(rs.get(0) instanceof QueryTest1);\r\n+\r\n+        em.close();\r\n+    }\r\n+    \r\n+    PreparedQueryCache getPreparedQueryCache() {\r\n+        return emf.getConfiguration().getQuerySQLCacheInstance();\r\n+    }\r\n+}\r"},{"sha":"1f2317558dddac506789151f4f2c430bccce8e41","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java","status":"modified","additions":4,"deletions":3,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/f25b573aa08af7d0d26d5bb2b40d8e3be15a6874/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/f25b573aa08af7d0d26d5bb2b40d8e3be15a6874/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java?ref=f25b573aa08af7d0d26d5bb2b40d8e3be15a6874","patch":"@@ -947,9 +947,9 @@ public Generator getFieldGenerator(Class forClass, String fieldName) {\n         return new ExtentImpl<T>(this, _broker.newExtent(cls, subclasses));\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n     public <T> TypedQuery<T> createQuery(String query, Class<T> resultClass) {\n-        return new QueryImpl(this, _ret, \n-            _broker.newQuery(JPQLParser.LANG_JPQL, query));\n+        return createQuery(query).setResultClass(resultClass);\n     }\n     \n     public OpenJPAQuery createQuery(String query) {\n@@ -986,8 +986,9 @@ public OpenJPAQuery createQuery(Query query) {\n             q));\n     }\n     \n+    @SuppressWarnings(\"unchecked\")\n     public <T> TypedQuery<T> createNamedQuery(String name, Class<T> resultClass) {\n-        throw new UnsupportedOperationException();\n+        return createNamedQuery(name).setResultClass(resultClass);\n     }\n \n     public OpenJPAQuery createNamedQuery(String name) {"}]}

