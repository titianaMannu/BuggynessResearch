{"sha":"f4b2428008de297a7f993f48e1a6c98761c078f3","node_id":"MDY6Q29tbWl0MjA2MzY0OmY0YjI0MjgwMDhkZTI5N2E3Zjk5M2Y0OGUxYTZjOTg3NjFjMDc4ZjM=","commit":{"author":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2013-10-29T06:36:34Z"},"committer":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2013-10-29T06:36:34Z"},"message":"OPENJPA-2437 transactional listeners added too late to observe begin event\n\ntxs 2 rmannibucau for the fix.\nPatch applied with cleanup and tests pimped. \n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1536595 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0edbe9595cd0a5e189e16c4d92b05afc672a93e7","url":"https://api.github.com/repos/apache/openjpa/git/trees/0edbe9595cd0a5e189e16c4d92b05afc672a93e7"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/f4b2428008de297a7f993f48e1a6c98761c078f3","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/f4b2428008de297a7f993f48e1a6c98761c078f3","html_url":"https://github.com/apache/openjpa/commit/f4b2428008de297a7f993f48e1a6c98761c078f3","comments_url":"https://api.github.com/repos/apache/openjpa/commits/f4b2428008de297a7f993f48e1a6c98761c078f3/comments","author":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"committer":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"parents":[{"sha":"310be135084266fc21515569f297ac714147d8b8","url":"https://api.github.com/repos/apache/openjpa/commits/310be135084266fc21515569f297ac714147d8b8","html_url":"https://github.com/apache/openjpa/commit/310be135084266fc21515569f297ac714147d8b8"}],"stats":{"total":124,"additions":122,"deletions":2},"files":[{"sha":"5cb31a4d8a7ea9d4b857e23d39c32147866e76ea","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractBrokerFactory.java","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/f4b2428008de297a7f993f48e1a6c98761c078f3/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractBrokerFactory.java","raw_url":"https://github.com/apache/openjpa/raw/f4b2428008de297a7f993f48e1a6c98761c078f3/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractBrokerFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractBrokerFactory.java?ref=f4b2428008de297a7f993f48e1a6c98761c078f3","patch":"@@ -227,8 +227,6 @@ void initializeBroker(boolean managed, int connRetainMode, Broker broker, boolea\n         DelegatingStoreManager dsm = createDelegatingStoreManager();\n \n         ((BrokerImpl) broker).initialize(this, dsm, managed, connRetainMode, fromDeserialization);\n-        if (!fromDeserialization)\n-            addListeners(broker);\n \n         // if we're using remote events, register the event manager so\n         // that it can broadcast commit notifications from the broker"},{"sha":"cea84e0baa8c1540fa5e160a65189080c13d14e8","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/f4b2428008de297a7f993f48e1a6c98761c078f3/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/f4b2428008de297a7f993f48e1a6c98761c078f3/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java?ref=f4b2428008de297a7f993f48e1a6c98761c078f3","patch":"@@ -391,6 +391,11 @@ public void initialize(AbstractBrokerFactory factory,\n         _printParameters =\n             Boolean.parseBoolean(Configurations.parseProperties(_conf.getConnectionFactoryProperties()).getProperty(\n                 PRINT_PARAMETERS_CONFIG_STR, \"false\"));\n+\n+        // do it before begin event otherwise transactional listeners can't use it, see @Auditable\n+        if (!fromDeserialization)\n+            _factory.addListeners(this);\n+\n         // synch with the global transaction in progress, if any\n         if (_factory.syncWithManagedTransaction(this, false))\n             beginInternal();"},{"sha":"7add56eb39cbf9c681f7b3e376d85fa6166e9c6c","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/audit/TestBeginEventOnTransactionListener.java","status":"added","additions":106,"deletions":0,"changes":106,"blob_url":"https://github.com/apache/openjpa/blob/f4b2428008de297a7f993f48e1a6c98761c078f3/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/audit/TestBeginEventOnTransactionListener.java","raw_url":"https://github.com/apache/openjpa/raw/f4b2428008de297a7f993f48e1a6c98761c078f3/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/audit/TestBeginEventOnTransactionListener.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/audit/TestBeginEventOnTransactionListener.java?ref=f4b2428008de297a7f993f48e1a6c98761c078f3","patch":"@@ -0,0 +1,106 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.audit;\n+\n+import junit.framework.TestCase;\n+import org.apache.openjpa.ee.ManagedRuntime;\n+import org.apache.openjpa.kernel.Audited;\n+import org.apache.openjpa.kernel.Broker;\n+import org.apache.openjpa.lib.conf.Configuration;\n+import org.apache.openjpa.persistence.OpenJPAEntityManagerFactorySPI;\n+import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n+\n+import javax.persistence.EntityManager;\n+import javax.persistence.EntityManagerFactory;\n+import javax.persistence.Persistence;\n+import java.util.Collection;\n+\n+public class TestBeginEventOnTransactionListener extends SingleEMFTestCase {\n+\n+    public void setUp() {\n+        setUp(X.class, AuditedEntry.class, CLEAR_TABLES);\n+    }\n+\n+    @Override\n+    protected String getPersistenceUnitName() {\n+        return \"auditjta\";\n+    }\n+\n+\n+    public void test() throws Exception {\n+        doTest(emf);\n+        assertTrue(MockAuditor.called);\n+    }\n+\n+    private void doTest(final EntityManagerFactory emf) throws Exception {\n+        final ManagedRuntime runtime = OpenJPAEntityManagerFactorySPI.class.cast(emf)\n+                .getConfiguration().getManagedRuntimeInstance();\n+\n+        runtime.getTransactionManager().begin();\n+        try {\n+            final EntityManager em = emf.createEntityManager();\n+            em.joinTransaction();\n+\n+            final X x = new X();\n+            em.persist(x);\n+            runtime.getTransactionManager().commit();\n+        }\n+        finally {\n+            emf.close();\n+        }\n+    }\n+\n+\n+    public static class MockAuditor implements Auditor\n+    {\n+        public static boolean called = false;\n+\n+        @Override\n+        public void audit(Broker broker, Collection<Audited> newObjects,\n+                          Collection<Audited> updates, Collection<Audited> deletes) {\n+            called = true;\n+        }\n+\n+        @Override\n+        public boolean isRollbackOnError() {\n+            return false;\n+        }\n+\n+        @Override\n+        public void close() throws Exception {\n+\n+        }\n+\n+        @Override\n+        public void setConfiguration(Configuration conf) {\n+\n+        }\n+\n+        @Override\n+        public void startConfiguration() {\n+\n+        }\n+\n+        @Override\n+        public void endConfiguration() {\n+\n+        }\n+    }\n+\n+}"},{"sha":"6f68554902984d9c9739b9eb03e2ceee3f32e26a","filename":"openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/f4b2428008de297a7f993f48e1a6c98761c078f3/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/f4b2428008de297a7f993f48e1a6c98761c078f3/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml?ref=f4b2428008de297a7f993f48e1a6c98761c078f3","patch":"@@ -442,6 +442,17 @@\n     </persistence-unit>\n \n \n+  <persistence-unit name=\"auditjta\" transaction-type=\"JTA\">\n+    <class>org.apache.openjpa.audit.X</class>\n+    <class>org.apache.openjpa.audit.AuditedEntry</class>\n+\n+    <properties>\n+      <property name=\"openjpa.Auditor\" value=\"org.apache.openjpa.audit.TestBeginEventOnTransactionListener$MockAuditor\" />\n+      <property name=\"openjpa.jdbc.SynchronizeMappings\" value=\"buildSchema(ForeignKeys=true)\" />\n+      <property name=\"openjpa.DynamicEnhancementAgent\" value=\"false\" />\n+      <property name=\"openjpa.ManagedRuntime\" value=\"org.apache.openjpa.jta.JTAManagedRuntime\"/>\n+    </properties>\n+  </persistence-unit>\n \t<persistence-unit name=\"audit\">\n \t\t<class>org.apache.openjpa.audit.X</class>\n \t\t<class>org.apache.openjpa.audit.AuditedEntry</class>"}]}

