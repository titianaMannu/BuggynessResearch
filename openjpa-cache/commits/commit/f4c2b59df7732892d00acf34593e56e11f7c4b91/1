{"sha":"f4c2b59df7732892d00acf34593e56e11f7c4b91","node_id":"MDY6Q29tbWl0MjA2MzY0OmY0YzJiNTlkZjc3MzI4OTJkMDBhY2YzNDU5M2U1NmUxMWY3YzRiOTE=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-11-03T05:39:56Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-11-03T05:39:56Z"},"message":"Changed column name for Order.count to CNT to save HSQLDB\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@832304 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0b3878d41f65a89199e8d9a765d8e571d56b4d2a","url":"https://api.github.com/repos/apache/openjpa/git/trees/0b3878d41f65a89199e8d9a765d8e571d56b4d2a"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/f4c2b59df7732892d00acf34593e56e11f7c4b91","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/f4c2b59df7732892d00acf34593e56e11f7c4b91","html_url":"https://github.com/apache/openjpa/commit/f4c2b59df7732892d00acf34593e56e11f7c4b91","comments_url":"https://api.github.com/repos/apache/openjpa/commits/f4c2b59df7732892d00acf34593e56e11f7c4b91/comments","author":null,"committer":null,"parents":[{"sha":"073ad1d7976a26e2c6fdf1a6eaeaabab153bbfc6","url":"https://api.github.com/repos/apache/openjpa/commits/073ad1d7976a26e2c6fdf1a6eaeaabab153bbfc6","html_url":"https://github.com/apache/openjpa/commit/073ad1d7976a26e2c6fdf1a6eaeaabab153bbfc6"}],"stats":{"total":15,"additions":8,"deletions":7},"files":[{"sha":"aba579cb22b2f17e3eed7770556ac931cacc013a","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/AbstractCriteriaTestCase.java","status":"modified","additions":8,"deletions":7,"changes":15,"blob_url":"https://github.com/apache/openjpa/blob/f4c2b59df7732892d00acf34593e56e11f7c4b91/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/AbstractCriteriaTestCase.java","raw_url":"https://github.com/apache/openjpa/raw/f4c2b59df7732892d00acf34593e56e11f7c4b91/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/AbstractCriteriaTestCase.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/AbstractCriteriaTestCase.java?ref=f4c2b59df7732892d00acf34593e56e11f7c4b91","patch":"@@ -188,17 +188,17 @@ void executeAndCompareSQL(String jpql, Query cQ, Query jQ, String expectedSQL) {\n             return;\n \n         for (int i = 0; i < jSQL.size(); i++) {\n-            if (!jSQL.get(i).equals(cSQL.get(i))) {\n+            if (!jSQL.get(i).equalsIgnoreCase(cSQL.get(i))) {\n                 printSQL(\"Target SQL for JPQL\", jSQL);\n                 printSQL(\"Target SQL for CriteriaQuery\", cSQL);\n-                assertEquals(i + \"-th SQL for JPQL and CriteriaQuery for \" + jpql + \" is different\", jSQL.get(i), cSQL\n-                    .get(i));\n+                assertTrue(i + \"-th SQL for JPQL and CriteriaQuery for \" + jpql + \" is different\", \n+                        jSQL.get(i).equalsIgnoreCase(cSQL.get(i)));\n             }\n         }\n \n         if (expectedSQL != null) {\n-            assertEquals(\"SQL for JPQL and ExpectedSQL for \" + jpql + \" is different\", jSQL.get(0), \n-                    expectedSQL);\n+            assertTrue(\"SQL for JPQL \" + jpql + \" is different than expecetd \" + expectedSQL, \n+                    jSQL.get(0).equalsIgnoreCase(expectedSQL));\n             \n         }\n     }\n@@ -222,7 +222,7 @@ void executeAndCompareSQL(String jpql, String expectedSQL) {\n             if (!jSQL.get(i).equals(expectedSQL)) {\n                 printSQL(\"SQL for JPQL\", jSQL.get(i));\n                 printSQL(\"Expected SQL\", expectedSQL);\n-                assertTrue(i + \"-th Expected SQL and SQL for JPQL: \" + jpql + \" are different\", \n+                assertTrue(i + \"-th SQL for JPQL: \" + jpql + \" are different than Expected SQL \" + expectedSQL, \n                     expectedSQL.equalsIgnoreCase(jSQL.get(i)));\n             }\n         }\n@@ -247,7 +247,8 @@ void executeAndCompareSQL(Query jQ, String expectedSQL) {\n \n         if (!jSql.equalsIgnoreCase(expectedSQL)) {\n             printSQL(\"SQL for JPQL\", jSql);\n-            assertEquals(expectedSQL, jSql);\n+            assertTrue(\"SQL for JPQL \" + jSql + \" is different than expecetd \" + expectedSQL,\n+                    expectedSQL.equalsIgnoreCase(jSql));\n         }\n     }\n "}]}

