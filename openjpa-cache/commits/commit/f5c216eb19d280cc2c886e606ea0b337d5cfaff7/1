{"sha":"f5c216eb19d280cc2c886e606ea0b337d5cfaff7","node_id":"MDY6Q29tbWl0MjA2MzY0OmY1YzIxNmViMTlkMjgwY2MyYzg4NmU2MDZlYTBiMzM3ZDVjZmFmZjc=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-12-15T16:16:48Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-12-15T16:16:48Z"},"message":"OPENJPA-1050: Restore existing method signature but deprecate them.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@890859 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"e59cfdfec18df1af27b3f5418464277b2ef89fda","url":"https://api.github.com/repos/apache/openjpa/git/trees/e59cfdfec18df1af27b3f5418464277b2ef89fda"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/f5c216eb19d280cc2c886e606ea0b337d5cfaff7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/f5c216eb19d280cc2c886e606ea0b337d5cfaff7","html_url":"https://github.com/apache/openjpa/commit/f5c216eb19d280cc2c886e606ea0b337d5cfaff7","comments_url":"https://api.github.com/repos/apache/openjpa/commits/f5c216eb19d280cc2c886e606ea0b337d5cfaff7/comments","author":null,"committer":null,"parents":[{"sha":"fd5c79aabca0045a65cf93735df8b3fa0a094423","url":"https://api.github.com/repos/apache/openjpa/commits/fd5c79aabca0045a65cf93735df8b3fa0a094423","html_url":"https://github.com/apache/openjpa/commit/fd5c79aabca0045a65cf93735df8b3fa0a094423"}],"stats":{"total":45,"additions":37,"deletions":8},"files":[{"sha":"10ea04df17cdc72af0045a5ab46e564e82fc9842","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryImpl.java","status":"modified","additions":23,"deletions":6,"changes":29,"blob_url":"https://github.com/apache/openjpa/blob/f5c216eb19d280cc2c886e606ea0b337d5cfaff7/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryImpl.java","raw_url":"https://github.com/apache/openjpa/raw/f5c216eb19d280cc2c886e606ea0b337d5cfaff7/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/QueryImpl.java?ref=f5c216eb19d280cc2c886e606ea0b337d5cfaff7","patch":"@@ -31,6 +31,7 @@\n import java.util.Map;\n import java.util.concurrent.locks.ReentrantLock;\n \n+import org.apache.commons.collections.map.LinkedMap;\n import org.apache.commons.lang.ObjectUtils;\n import org.apache.commons.lang.StringUtils;\n import org.apache.openjpa.conf.OpenJPAConfiguration;\n@@ -809,7 +810,7 @@ private Object execute(int operation, Object[] params) {\n \n                 assertParameters(_storeQuery, ex, params);\n                 if (_log.isTraceEnabled())\n-                    logExecution(operation, ex.getParameterTypes(_storeQuery),\n+                    logExecution(operation, ex.getOrderedParameterTypes(_storeQuery),\n                         params);\n \n                 if (operation == OP_SELECT)\n@@ -1544,14 +1545,26 @@ public boolean hasGrouping() {\n         }\n     }\n \n-    public OrderedMap<Object,Class<?>> getParameterTypes() {\n+    public OrderedMap<Object,Class<?>> getOrderedParameterTypes() {\n         lock();\n         try {\n-            return compileForExecutor().getParameterTypes(_storeQuery);\n+            return compileForExecutor().getOrderedParameterTypes(_storeQuery);\n         } finally {\n             unlock();\n         }\n     }\n+    \n+    public LinkedMap getParameterTypes() {\n+        lock();\n+        try {\n+            LinkedMap wrap = new LinkedMap();\n+            wrap.putAll(compileForExecutor().getOrderedParameterTypes(_storeQuery));\n+            return wrap;\n+        } finally {\n+            unlock();\n+        }\n+    }\n+\n \n     public Map getUpdates() {\n         lock();\n@@ -1704,7 +1717,7 @@ protected void assertParameters(StoreQuery q, StoreQuery.Executor ex,\n         if (!q.requiresParameterDeclarations() || !isParsedQuery())\n             return;\n \n-        OrderedMap<Object,Class<?>> paramTypes = ex.getParameterTypes(q);\n+        OrderedMap<Object,Class<?>> paramTypes = ex.getOrderedParameterTypes(q);\n         int typeCount = paramTypes.size();\n         if (typeCount > params.length)\n             throw new UserException(_loc.get(\"unbound-params\",\n@@ -1723,7 +1736,7 @@ protected void assertParameters(StoreQuery q, StoreQuery.Executor ex, Map params\n         if (!q.requiresParameterDeclarations())\n             return;\n \n-        OrderedMap<Object,Class<?>> paramTypes = ex.getParameterTypes(q);\n+        OrderedMap<Object,Class<?>> paramTypes = ex.getOrderedParameterTypes(q);\n         for (Object actual : params.keySet()) {\n             if (!paramTypes.containsKey(actual))\n             throw new UserException(_loc.get(\"unbound-params\",\n@@ -1986,7 +1999,11 @@ public boolean hasGrouping(StoreQuery q) {\n             return _executors[0].hasGrouping(q);\n         }\n \n-        public OrderedMap<Object,Class<?>> getParameterTypes(StoreQuery q) {\n+        public OrderedMap<Object,Class<?>> getOrderedParameterTypes(StoreQuery q) {\n+            return _executors[0].getOrderedParameterTypes(q);\n+        }\n+        \n+        public LinkedMap getParameterTypes(StoreQuery q) {\n             return _executors[0].getParameterTypes(q);\n         }\n         "},{"sha":"27e234d92638a5c1f29816a48a0ded6666b89bda","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StoreQuery.java","status":"modified","additions":14,"deletions":2,"changes":16,"blob_url":"https://github.com/apache/openjpa/blob/f5c216eb19d280cc2c886e606ea0b337d5cfaff7/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StoreQuery.java","raw_url":"https://github.com/apache/openjpa/raw/f5c216eb19d280cc2c886e606ea0b337d5cfaff7/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StoreQuery.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StoreQuery.java?ref=f5c216eb19d280cc2c886e606ea0b337d5cfaff7","patch":"@@ -45,7 +45,9 @@\n     extends QueryOperations, Serializable {\n \n     // linkedmap doesn't allow a size of 0, so use 1\n-    public static final OrderedMap<Object, Class<?>> EMPTY_PARAMS = new OrderedMap<Object, Class<?>>();\n+    // This is deprecated\n+    public static final LinkedMap EMPTY_PARAMS = new LinkedMap(1);\n+    public static final OrderedMap<Object, Class<?>> EMPTY_ORDERED_PARAMS = new OrderedMap<Object, Class<?>>();\n     public static final ClassMetaData[] EMPTY_METAS = new ClassMetaData[0];\n     public static final String[] EMPTY_STRINGS = new String[0];\n     public static final Object[] EMPTY_OBJECTS = new Object[0];\n@@ -312,7 +314,17 @@ public Object getOrderingValue(StoreQuery q, Object[] params,\n          * {@link Map#entrySet}'s {@link Iterator} must return values in the\n          * order in which they were declared or used.\n          */\n-        public OrderedMap<Object, Class<?>> getParameterTypes(StoreQuery q);\n+        public OrderedMap<Object, Class<?>> getOrderedParameterTypes(StoreQuery q);\n+        \n+        /**\n+         * Return a map of parameter names to types. The returned\n+         * {@link Map#entrySet}'s {@link Iterator} must return values in the\n+         * order in which they were declared or used.<br>\n+         * \n+         * <B>Warning</B>: Deprecated. Use {@linkplain #getOrderedParameterTypes(StoreQuery)} instead.\n+         */\n+        @Deprecated\n+        public LinkedMap getParameterTypes(StoreQuery q);\n         \n         /**\n          * Return an array from the given user parameter values."}]}

