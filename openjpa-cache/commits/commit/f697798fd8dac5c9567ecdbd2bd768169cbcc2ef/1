{"sha":"f697798fd8dac5c9567ecdbd2bd768169cbcc2ef","node_id":"MDY6Q29tbWl0MjA2MzY0OmY2OTc3OThmZDhkYWM1Yzk1NjdlY2RiZDJiZDc2ODE2OWNiY2MyZWY=","commit":{"author":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-12-03T19:11:45Z"},"committer":{"name":"Fay Wang","email":"faywang@apache.org","date":"2009-12-03T19:11:45Z"},"message":"OPENJPA-782: fix default element collection table name to comply with the Spec\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@886883 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"9ae55ce0e35c62681f02b6b688023cb8f8abed0a","url":"https://api.github.com/repos/apache/openjpa/git/trees/9ae55ce0e35c62681f02b6b688023cb8f8abed0a"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/f697798fd8dac5c9567ecdbd2bd768169cbcc2ef","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/f697798fd8dac5c9567ecdbd2bd768169cbcc2ef","html_url":"https://github.com/apache/openjpa/commit/f697798fd8dac5c9567ecdbd2bd768169cbcc2ef","comments_url":"https://api.github.com/repos/apache/openjpa/commits/f697798fd8dac5c9567ecdbd2bd768169cbcc2ef/comments","author":null,"committer":null,"parents":[{"sha":"123e0b61202ec1cfd6632736954bd80d65d3f8b3","url":"https://api.github.com/repos/apache/openjpa/commits/123e0b61202ec1cfd6632736954bd80d65d3f8b3","html_url":"https://github.com/apache/openjpa/commit/123e0b61202ec1cfd6632736954bd80d65d3f8b3"}],"stats":{"total":121,"additions":117,"deletions":4},"files":[{"sha":"1775b23d677642baf10f9f798f882419ff7e3900","filename":"openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/PersistenceMappingDefaults.java","status":"modified","additions":6,"deletions":2,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/f697798fd8dac5c9567ecdbd2bd768169cbcc2ef/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/PersistenceMappingDefaults.java","raw_url":"https://github.com/apache/openjpa/raw/f697798fd8dac5c9567ecdbd2bd768169cbcc2ef/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/PersistenceMappingDefaults.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/java/org/apache/openjpa/persistence/jdbc/PersistenceMappingDefaults.java?ref=f697798fd8dac5c9567ecdbd2bd768169cbcc2ef","patch":"@@ -135,8 +135,12 @@ public String getTableName(FieldMapping fm, Schema schema) {\n         ClassMapping clm = fm.getDefiningMapping();\n         Table table = getTable(clm);\n         \n-        String name = table.getName();\n-\n+        String name = null;\n+        if (fm.isElementCollection()) \n+            name = clm.getTypeAlias();\n+        else \n+            name = table.getName();\n+        \n         // if this is an assocation table, spec says to suffix with table of\n         // the related type. spec doesn't cover other cases; we're going to\n         // suffix with the field name"},{"sha":"9703fca4b233a086a2b7d37b82bb135a1ee5516e","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/Person.java","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/f697798fd8dac5c9567ecdbd2bd768169cbcc2ef/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/Person.java","raw_url":"https://github.com/apache/openjpa/raw/f697798fd8dac5c9567ecdbd2bd768169cbcc2ef/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/Person.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/criteria/Person.java?ref=f697798fd8dac5c9567ecdbd2bd768169cbcc2ef","patch":"@@ -20,6 +20,7 @@\n \n import java.util.Set;\n \n+import javax.persistence.CollectionTable;\n import javax.persistence.ElementCollection;\n import javax.persistence.Entity;\n import javax.persistence.GeneratedValue;\n@@ -37,6 +38,7 @@\n     private String name;\n     \n \t@ElementCollection\n+\t@CollectionTable(name=\"CR_PSN_NICKNAMES\")\n \tprivate Set<String> nickNames;\n \t\n \tprotected Person() {"},{"sha":"ed66b2f71a83c8a997dd1a1ee5dcb397925e8891","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/A.java","status":"added","additions":72,"deletions":0,"changes":72,"blob_url":"https://github.com/apache/openjpa/blob/f697798fd8dac5c9567ecdbd2bd768169cbcc2ef/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/A.java","raw_url":"https://github.com/apache/openjpa/raw/f697798fd8dac5c9567ecdbd2bd768169cbcc2ef/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/A.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/A.java?ref=f697798fd8dac5c9567ecdbd2bd768169cbcc2ef","patch":"@@ -0,0 +1,72 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.embed;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import javax.persistence.*;\n+\n+@Entity\n+@Table(name = \"A_EMB\")\n+public class A implements java.io.Serializable {\n+\n+    @Id\n+    protected String id;\n+    \n+    String name;\n+    \n+    int value;\n+\n+    @ElementCollection\n+    protected Set<Embed> embeds = new HashSet();\n+\n+    public String getId() {\n+        return id;\n+    }\n+    \n+    public void setId(String id) {\n+        this.id = id;\n+    }\n+    \n+    public String getName() {\n+        return name;\n+    }\n+    \n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+    \n+    public int getValue() {\n+        return value;\n+    }\n+    \n+    public void setValue(int value) {\n+        this.value = value;\n+    }\n+    \n+    public Set<Embed> getEmbeds() {\n+        return embeds;\n+    }\n+\n+    public void setEmbeds(Set<Embed> embeds) {\n+        this.embeds = embeds;\n+    }\n+}    \n+   "},{"sha":"57e55f12c5cb30aaad3c5ac0a5278cd6686b22ed","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java","status":"modified","additions":33,"deletions":1,"changes":34,"blob_url":"https://github.com/apache/openjpa/blob/f697798fd8dac5c9567ecdbd2bd768169cbcc2ef/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java","raw_url":"https://github.com/apache/openjpa/raw/f697798fd8dac5c9567ecdbd2bd768169cbcc2ef/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbeddable.java?ref=f697798fd8dac5c9567ecdbd2bd768169cbcc2ef","patch":"@@ -27,6 +27,7 @@\n import java.util.Date;\n import java.util.GregorianCalendar;\n import java.util.HashMap;\n+import java.util.HashSet;\n import java.util.List;\n import java.util.Map;\n import java.util.Set;\n@@ -99,7 +100,7 @@ public void setUp() {\n             EntityA_Embed_MappedToOneCascadeDelete.class, EntityB2.class, \n             Book.class, Listing.class, Seller.class,\n             EntityA_Embed_Coll_Map.class, Embed_Coll_Map.class,\n-            EntityA_Embed_Complex.class, CLEAR_TABLES);\n+            EntityA_Embed_Complex.class, A.class, CLEAR_TABLES);\n             sql.clear();\n             DBDictionary dict = ((JDBCConfiguration)emf.getConfiguration()).getDBDictionaryInstance();\n             if (dict.getClass().getName().indexOf(\"oracle\") != -1) {\n@@ -2956,5 +2957,36 @@ public void testEmbeddableCollUsingArraysAsList() {\n         assertEquals(6, findA.getEmbeds().size());\n         em.close();\n     }\n+\n+    /*\n+     * test the default name for element collection table\n+     */\n+    public void testDefaultNameForElementCollection() {\n+        getLog().trace(\"testDefaultNameForElementCollection() - entered\");\n+        EntityManager em = emf.createEntityManager();\n+        EntityTransaction tran = em.getTransaction();\n+        tran.begin(); \n+        A a = new A();\n+        a.setId(\"1\");\n+        Embed embed = new Embed();\n+        embed.setIntVal1(1);\n+        embed.setIntVal2(2);\n+        embed.setIntVal3(3);\n+        Set embeds = new HashSet();\n+        embeds.add(embed);\n+        a.setEmbeds(embeds);\n+        tran.commit();\n+        em.close();\n+        boolean found = false;\n+        for (String sqlStr : sql) {\n+            if (sqlStr.toUpperCase().indexOf(\"A_EMBEDS\") != -1) {\n+                found = true;\n+                break;\n+            } \n+        }\n+        assertTrue(found);\n+        \n+    }\n+    \n     \n }"},{"sha":"4bae577250012c68c93a99e27a917601b323871d","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/attrOverrides/Employee.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/f697798fd8dac5c9567ecdbd2bd768169cbcc2ef/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/attrOverrides/Employee.java","raw_url":"https://github.com/apache/openjpa/raw/f697798fd8dac5c9567ecdbd2bd768169cbcc2ef/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/attrOverrides/Employee.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/attrOverrides/Employee.java?ref=f697798fd8dac5c9567ecdbd2bd768169cbcc2ef","patch":"@@ -61,6 +61,7 @@\n     ContactInfo contactInfo;\n     \n     @ElementCollection\n+    @CollectionTable(name=\"EMP_ATTROVER_jobInfos\")\n   \t@AssociationOverride (\n    \t\tname=\"value.pm\",\n    \t\tjoinColumns=@JoinColumn(name=\"PROGRAM_MGR\")"},{"sha":"2be1a3420cb90b1f895e7fcdbcdf0e994402606f","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/attrOverrides/Person.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/f697798fd8dac5c9567ecdbd2bd768169cbcc2ef/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/attrOverrides/Person.java","raw_url":"https://github.com/apache/openjpa/raw/f697798fd8dac5c9567ecdbd2bd768169cbcc2ef/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/attrOverrides/Person.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/attrOverrides/Person.java?ref=f697798fd8dac5c9567ecdbd2bd768169cbcc2ef","patch":"@@ -20,7 +20,7 @@\n \n import java.util.ArrayList;\n import java.util.List;\n-\n+import javax.persistence.CollectionTable;\n import javax.persistence.ElementCollection;\n import javax.persistence.Entity;\n import javax.persistence.Id;\n@@ -39,6 +39,7 @@\n     protected List<Address> residences = new ArrayList<Address>();\n     \n     @ElementCollection\n+    @CollectionTable(name=\"PSN_nickNames\")\n     @OrderBy(\"DESC\")\n     private List<String> nickNames = new ArrayList<String>();\n "},{"sha":"6e31ca13329416b3cb205d41459f28e5c4f1360a","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/attrOverrides/PropertyRecord.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/f697798fd8dac5c9567ecdbd2bd768169cbcc2ef/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/attrOverrides/PropertyRecord.java","raw_url":"https://github.com/apache/openjpa/raw/f697798fd8dac5c9567ecdbd2bd768169cbcc2ef/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/attrOverrides/PropertyRecord.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/attrOverrides/PropertyRecord.java?ref=f697798fd8dac5c9567ecdbd2bd768169cbcc2ef","patch":"@@ -36,6 +36,7 @@\n         @AttributeOverride(name=\"value.tax\", column=@Column(name=\"ASSESSMENT\"))\n     })\n     @ElementCollection\n+    @CollectionTable(name=\"PROPREC_ATTROVER_parcels\")\n     Map<Address, PropertyInfo> parcels = new HashMap<Address, PropertyInfo>();\n     \n     @Column(length = 10)"}]}

