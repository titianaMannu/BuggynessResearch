{"sha":"f6ba63def5596bfe9ef9e7fb3fe84e230afeb84d","node_id":"MDY6Q29tbWl0MjA2MzY0OmY2YmE2M2RlZjU1OTZiZmU5ZWY5ZTdmYjNmZTg0ZTIzMGFmZWI4NGQ=","commit":{"author":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2015-07-03T06:08:44Z"},"committer":{"name":"Mark Struberg","email":"struberg@apache.org","date":"2015-07-03T06:08:44Z"},"message":"OPENJPA-2341 fix ValueHandler pickup via FieldStrategies\n\nSadly this atm only works for fields which are Serializable. \nMenas the ValueHandler can just change the presentation right now\nbut it doesn't work for mapping non-Serializable classes like\njava.security.Principal.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1688947 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"182ef4b6019734d7d8e3ae0bab466c55be08214f","url":"https://api.github.com/repos/apache/openjpa/git/trees/182ef4b6019734d7d8e3ae0bab466c55be08214f"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/f6ba63def5596bfe9ef9e7fb3fe84e230afeb84d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/f6ba63def5596bfe9ef9e7fb3fe84e230afeb84d","html_url":"https://github.com/apache/openjpa/commit/f6ba63def5596bfe9ef9e7fb3fe84e230afeb84d","comments_url":"https://api.github.com/repos/apache/openjpa/commits/f6ba63def5596bfe9ef9e7fb3fe84e230afeb84d/comments","author":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"committer":{"login":"struberg","id":79310,"node_id":"MDQ6VXNlcjc5MzEw","avatar_url":"https://avatars.githubusercontent.com/u/79310?v=4","gravatar_id":"","url":"https://api.github.com/users/struberg","html_url":"https://github.com/struberg","followers_url":"https://api.github.com/users/struberg/followers","following_url":"https://api.github.com/users/struberg/following{/other_user}","gists_url":"https://api.github.com/users/struberg/gists{/gist_id}","starred_url":"https://api.github.com/users/struberg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/struberg/subscriptions","organizations_url":"https://api.github.com/users/struberg/orgs","repos_url":"https://api.github.com/users/struberg/repos","events_url":"https://api.github.com/users/struberg/events{/privacy}","received_events_url":"https://api.github.com/users/struberg/received_events","type":"User","site_admin":false},"parents":[{"sha":"a51d3c5c7b02af5ccb5606685d01f1785b3b79c7","url":"https://api.github.com/repos/apache/openjpa/commits/a51d3c5c7b02af5ccb5606685d01f1785b3b79c7","html_url":"https://github.com/apache/openjpa/commit/a51d3c5c7b02af5ccb5606685d01f1785b3b79c7"}],"stats":{"total":22,"additions":12,"deletions":10},"files":[{"sha":"ba76f513b3e6f66e87128b239f404216f3c9584a","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingRepository.java","status":"modified","additions":12,"deletions":10,"changes":22,"blob_url":"https://github.com/apache/openjpa/blob/f6ba63def5596bfe9ef9e7fb3fe84e230afeb84d/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingRepository.java","raw_url":"https://github.com/apache/openjpa/raw/f6ba63def5596bfe9ef9e7fb3fe84e230afeb84d/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingRepository.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/MappingRepository.java?ref=f6ba63def5596bfe9ef9e7fb3fe84e230afeb84d","patch":"@@ -840,6 +840,18 @@ protected FieldStrategy defaultStrategy(FieldMapping field,\n             return new HandlerFieldStrategy();\n         }\n \n+        // check for an explicitly mapped strategy\n+        Object explicitStrat = mappedStrategy(field, field.getType(), adapting);\n+        if (explicitStrat != null) {\n+            if (explicitStrat instanceof FieldStrategy)\n+                return (FieldStrategy) explicitStrat;\n+            if (explicitStrat != null) {\n+                if (installHandlers)\n+                    field.setHandler((ValueHandler) explicitStrat);\n+                return new HandlerFieldStrategy();\n+            }\n+        }\n+\n         if (field.isSerialized()) {\n             if (_dict.maxEmbeddedBlobSize != -1) {\n                 handler = defaultHandler(field, adapting);\n@@ -849,16 +861,6 @@ protected FieldStrategy defaultStrategy(FieldMapping field,\n                 }\n                 return new MaxEmbeddedBlobFieldStrategy();\n             }\n-        } else {\n-            // check for mapped strategy\n-            Object strat = mappedStrategy(field, field.getType(), adapting);\n-            if (strat instanceof FieldStrategy)\n-                return (FieldStrategy) strat;\n-            if (strat != null) {\n-                if (installHandlers)\n-                    field.setHandler((ValueHandler) strat);\n-                return new HandlerFieldStrategy();\n-            }\n         }\n \n         // check for known field strategies"}]}

