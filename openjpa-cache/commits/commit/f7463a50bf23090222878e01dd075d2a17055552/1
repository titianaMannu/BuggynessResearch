{"sha":"f7463a50bf23090222878e01dd075d2a17055552","node_id":"MDY6Q29tbWl0MjA2MzY0OmY3NDYzYTUwYmYyMzA5MDIyMjg3OGUwMWRkMDc1ZDJhMTcwNTU1NTI=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2009-06-30T01:15:19Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2009-06-30T01:15:19Z"},"message":"OPENJPA-1061 committing patch from Jody Grassel.\n\tmodified:   openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java\n\tmodified:   openjpa-kernel/src/main/java/org/apache/openjpa/meta/ClassMetaData.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/TestInheritanceWithMSCID.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/TestMappedSuperclass.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/EntityMapping.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/PrimitiveIDMappedSuperclass.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCEntityB.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCEntityD.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCLeafA.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCLeafB1.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCLeafB2.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCLeafC.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCLeafD1.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCLeafD2.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCMappedSuperclass.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCRootEntity.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCEntityB.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCEntityD.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCLeafA.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCLeafB1.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCLeafB2.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCLeafC.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCLeafD1.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCLeafD2.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCMappedSuperclass.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCRootEntity.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCEntityB.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCEntityD.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCLeafA.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCLeafB1.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCLeafB2.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCLeafC.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCLeafD1.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCLeafD2.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCMappedSuperclass.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCRootEntity.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCEntityB.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCEntityD.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCLeafA.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCLeafB1.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCLeafB2.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCLeafC.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCLeafD1.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCLeafD2.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCMappedSuperclass.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCRootEntity.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCEntityB.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCEntityD.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCLeafA.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCLeafB1.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCLeafB2.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCLeafC.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCLeafD1.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCLeafD2.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCMappedSuperclass.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCRootEntity.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCEntityB.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCEntityD.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCLeafA.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCLeafB1.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCLeafB2.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCLeafC.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCLeafD1.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCLeafD2.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCMappedSuperclass.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCRootEntity.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/EntityB.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/EntityD.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/LeafA.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/LeafB1.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/LeafB2.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/LeafC.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/LeafD1.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/LeafD2.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/MSC.java\n\tnew file:   openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/RootEntity.java\n\tmodified:   openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java\n\tmodified:   openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/1.2.x@789524 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0313b0fddb8d41f3bcecc1eaf5ada9a64373a859","url":"https://api.github.com/repos/apache/openjpa/git/trees/0313b0fddb8d41f3bcecc1eaf5ada9a64373a859"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/f7463a50bf23090222878e01dd075d2a17055552","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/f7463a50bf23090222878e01dd075d2a17055552","html_url":"https://github.com/apache/openjpa/commit/f7463a50bf23090222878e01dd075d2a17055552","comments_url":"https://api.github.com/repos/apache/openjpa/commits/f7463a50bf23090222878e01dd075d2a17055552/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"355f338e2c49f675c4dafe00cf19b1954112b246","url":"https://api.github.com/repos/apache/openjpa/commits/355f338e2c49f675c4dafe00cf19b1954112b246","html_url":"https://github.com/apache/openjpa/commit/355f338e2c49f675c4dafe00cf19b1954112b246"}],"stats":{"total":3896,"additions":3889,"deletions":7},"files":[{"sha":"6acefafe49b8d04a03f460903046c56f753db97b","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java","status":"modified","additions":38,"deletions":7,"changes":45,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -151,12 +151,12 @@\n             try {\n                 auxEnhancers.add(AccessController.doPrivileged(\n                     J2DoPrivHelper.newInstanceAction(classes[i])));\n-\t\t    } catch (Throwable t) {\n+            } catch (Throwable t) {\n                 // aux enhancer may rely on non-existant spec classes, etc\n-\t\t    }\n-\t\t}\n-    \t_auxEnhancers = (AuxiliaryEnhancer[]) auxEnhancers.toArray\n-            (new AuxiliaryEnhancer[auxEnhancers.size()]);\n+            }\n+        }\n+        _auxEnhancers = (AuxiliaryEnhancer[]) auxEnhancers.toArray\n+        (new AuxiliaryEnhancer[auxEnhancers.size()]);\n     }\n \n     private BCClass _pc;\n@@ -1093,8 +1093,13 @@ private void addPCMethods()\n             addCopyKeyFieldsToObjectIdMethod(false);\n             addCopyKeyFieldsFromObjectIdMethod(true);\n             addCopyKeyFieldsFromObjectIdMethod(false);\n+            if (_meta.hasAbstractPKField() == true) {\n+                addGetIDOwningClass();\n+            }\n             addNewObjectIdInstanceMethod(true);\n             addNewObjectIdInstanceMethod(false);\n+        } else if (_meta.hasPKFieldsFromAbstractClass()) {\n+            addGetIDOwningClass();\n         }\n     }\n \n@@ -2486,14 +2491,28 @@ private void addNewObjectIdInstanceMethod(boolean obj)\n             // new ObjectId (cls, oid)\n             code.anew().setType(ObjectId.class);\n             code.dup();\n-            code.classconstant().setClass(getType(_meta));\n+            if (_meta.hasAbstractPKField() == false) {\n+                code.classconstant().setClass(getType(_meta));\n+            } else {\n+                code.aload().setThis();\n+                code.invokevirtual().setMethod(\n+                        PRE + \"GetIDOwningClass\", Class.class, null);\n+            }\n         }\n \n         // new <oid class> ();\n         code.anew().setType(oidType);\n         code.dup();\n         if (_meta.isOpenJPAIdentity() || (obj && usesClsString == Boolean.TRUE))\n-            code.classconstant().setClass(getType(_meta));\n+        {\n+            if (_meta.hasAbstractPKField() == false) {\n+                code.classconstant().setClass(getType(_meta));\n+            } else {\n+                code.aload().setThis();\n+                code.invokevirtual().setMethod(\n+                    PRE + \"GetIDOwningClass\", Class.class, null);\n+            }\n+        }\n         if (obj) {\n             code.aload().setParam(0);\n             code.checkcast().setType(String.class);\n@@ -2526,6 +2545,18 @@ else if (_meta.getObjectIdType() == Date.class)\n         code.calculateMaxLocals();\n     }\n \n+    private void addGetIDOwningClass() throws NoSuchMethodException {\n+        BCMethod method = _pc.declareMethod(PRE + \"GetIDOwningClass\",\n+            Class.class, null);\n+        Code code = method.getCode(true);\n+\n+        code.classconstant().setClass(getType(_meta));\n+        code.areturn();\n+\n+        code.calculateMaxStack();\n+        code.calculateMaxLocals();\n+    }\n+\n     /**\n      * When communicating with the StateManager, many methods are used\n      * depending on the class of state being passed. This method,"},{"sha":"1fe2f9740416d1de2297c1949348d0dc2ca54435","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/ClassMetaData.java","status":"modified","additions":97,"deletions":0,"changes":97,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ClassMetaData.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ClassMetaData.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ClassMetaData.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -193,6 +193,9 @@\n     private FetchGroup[] _fgs = null;\n     private FetchGroup[] _customFGs = null;\n     private boolean _intercepting = false;\n+    private boolean _abstract = false;\n+    private Boolean _hasAbstractPKField = null;\n+    private Boolean _hasPKFieldsFromAbstractClass = null;\n \n     /**\n      * Constructor. Supply described type and repository.\n@@ -2426,4 +2429,98 @@ private boolean isCacheable(String candidateCacheName) {\n         }\n         return rval;\n     }\n+\n+    /**\n+     * Returns true if the pcType modeled by this ClassMetaData\n+     * object is abstract (ie, a MappedSuperclass in JPA terms.)\n+     *\n+     * @return\n+     */\n+    public boolean isAbstract() {\n+        return _abstract;\n+    }\n+\n+    /**\n+     * Sets the value determining if the pcType modeled by this\n+     * ClassMetaData object is abstract (ie, a MappedSuperclass in JPA terms.)\n+     *\n+     * @return\n+     */\n+    public void setAbstract(boolean flag) {\n+        _abstract = flag;\n+        _hasAbstractPKField = null;\n+    }\n+\n+    /**\n+     * Convenience method to determine if the pcType modeled by\n+     * this ClassMetaData object is both abstract and declares PKFields. This\n+     * method is used by the PCEnhancer to determine if special handling is\n+     * required.\n+     *\n+     * @return\n+     */\n+    public boolean hasAbstractPKField() {\n+        if (_hasAbstractPKField != null) {\n+            return _hasAbstractPKField.booleanValue();\n+        }\n+\n+        // Default to false, set to true only if this type is abstract and\n+        // declares a PKField.\n+        _hasAbstractPKField = Boolean.FALSE;\n+\n+        if (isAbstract() == true) {\n+            FieldMetaData[] declaredFields = getDeclaredFields();\n+            if (declaredFields != null && declaredFields.length != 0) {\n+                for (FieldMetaData fmd : declaredFields) {\n+                    if (fmd.isPrimaryKey()) {\n+                        _hasAbstractPKField = Boolean.TRUE;\n+                        break;\n+                    }\n+                }\n+            }\n+        }\n+\n+        return _hasAbstractPKField.booleanValue();\n+    }\n+\n+    /**\n+     * Convenience method to determine if this type is a direct\n+     * decendent of an abstract type declaring PKFields. Returns true if there\n+     * are no pcTypes mapped to a table between this type and an abstract pcType\n+     * declaring PKFields. Returns false if there no such abstract pcTypes in\n+     * the inheritance hierarchy or if there are any pcTypes mapped to tables in\n+     * between the type represented by this ClassMetaData object and the\n+     * abstract pcType declaring PKFields.\n+     *\n+     * @return\n+     */\n+    public boolean hasPKFieldsFromAbstractClass() {\n+        if (_hasPKFieldsFromAbstractClass != null) {\n+            return _hasPKFieldsFromAbstractClass.booleanValue();\n+        }\n+\n+        // Default to FALSE, until proven true.\n+        _hasPKFieldsFromAbstractClass = Boolean.FALSE;\n+\n+        FieldMetaData[] pkFields = getPrimaryKeyFields();\n+        for (FieldMetaData fmd : pkFields) {\n+            ClassMetaData fmdDMDA = fmd.getDeclaringMetaData();\n+            if (fmdDMDA.isAbstract()) {\n+                ClassMetaData cmd = getPCSuperclassMetaData();\n+                while (cmd != fmdDMDA) {\n+                    if (fmdDMDA.isAbstract()) {\n+                        cmd = cmd.getPCSuperclassMetaData();\n+                    } else {\n+                        break;\n+                    }\n+                }\n+                if (cmd == fmdDMDA) {\n+                    _hasPKFieldsFromAbstractClass = Boolean.TRUE;\n+                    break;\n+                }\n+            }\n+        }\n+\n+        return _hasPKFieldsFromAbstractClass.booleanValue();\n+    }\n }"},{"sha":"80029c78830cd47b5ceb616664952143b17166c0","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/TestInheritanceWithMSCID.java","status":"added","additions":283,"deletions":0,"changes":283,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/TestInheritanceWithMSCID.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/TestInheritanceWithMSCID.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/TestInheritanceWithMSCID.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,283 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance;\n+\n+import java.util.List;\n+\n+import javax.persistence.EntityManager;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.EntityMapping;\n+import org.apache.openjpa.persistence.inheritance.entities.EntityMapping.\n+    InheritanceEntityMapping;\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    RootEntity;\n+import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n+\n+public class TestInheritanceWithMSCID extends SingleEMFTestCase {\n+    @SuppressWarnings(\"unchecked\")\n+    public void setUp() {\n+        /*\n+         * All entities used by this test are defined in the enumeration\n+         * EntityMapping.InheritanceEntityMapping.\n+         */\n+        EntityMapping.InheritanceEntityMapping[] entityClassEnums = \n+            EntityMapping.InheritanceEntityMapping.values();\n+        \n+        Class[] entityClassTypes = new Class[entityClassEnums.length];\n+        int idx = 0;\n+        for (EntityMapping.InheritanceEntityMapping eEnum : entityClassEnums) {\n+            entityClassTypes[idx] = eEnum.getEntityClass();\n+            idx++;\n+        }\n+        \n+        setUp((Object[]) entityClassTypes);\n+    }\n+\n+    private InheritanceEntityMapping[][] allEntityGroups = { \n+            EntityMapping.PIdJTIDMSC, \n+            EntityMapping.PIdJTCDMSC,\n+            EntityMapping.PIdJTSDMSC,\n+            \n+            EntityMapping.PIdSTIDMSC, \n+            EntityMapping.PIdSTCDMSC,\n+            EntityMapping.PIdSTSDMSC\n+    };\n+    \n+    /**\n+     * Verifies that each entity type in the inheritance structure can be\n+     * persisted.  Entities are not cleared out of the persistence context\n+     * (the L1 cache) when they are created.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public void testPersistableWithEntitiesInL1Cache() {\n+        EntityManager em = emf.createEntityManager();\n+        \n+        for (InheritanceEntityMapping[] tEntities : allEntityGroups ) {\n+            int idx = 0;\n+            \n+            try {\n+                for (InheritanceEntityMapping tEntity : tEntities) {\n+                    RootEntity entity = (RootEntity) \n+                        EntityMapping.createEntityObjectInstance(tEntity);\n+                    entity.updateId(new Integer(idx++));\n+                    entity.setRootEntityData(\"Root \" + (idx - 1));\n+                    \n+                    em.getTransaction().begin();\n+                    em.persist(entity);\n+                    em.getTransaction().commit();\n+                }\n+            } catch (Exception e) {\n+                fail(\"Test failed with Exception\\n\" + e);\n+            }\n+            \n+            List<RootEntity> resultList = (List<RootEntity>) em.createQuery(\n+                    \"SELECT e FROM \" + tEntities[0].getEntityName() + \n+                    \" e ORDER BY e.id\").getResultList();\n+            assertEquals(tEntities.length, resultList.size());\n+      \n+            idx = 0;\n+            for (Object obj : resultList) {\n+                RootEntity entity = (RootEntity) obj;\n+                Class<? extends RootEntity> actualType = entity.getClass();\n+                Class<? extends RootEntity> expectedType = \n+                    tEntities[idx].getEntityClass();\n+                \n+                assertEquals(\n+                        \"Assert Entity \" + (idx + 1) + \"is entity of type \" + \n+                        expectedType, expectedType, actualType);\n+                \n+                idx++;\n+            }\n+        }\n+        \n+        em.close();\n+    }\n+    \n+    /**\n+     * Verifies that each entity type in the inheritance structure can be\n+     * persisted.  Entities are cleared out of the persistence context\n+     * (the L1 cache) after they are created.\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public void testPersistableWithEntitiesClearedFromL1Cache() {\n+        EntityManager em = emf.createEntityManager();       \n+        \n+        for (InheritanceEntityMapping[] tEntities : allEntityGroups ) {\n+            int idx = 0;\n+            \n+            try {\n+                for (InheritanceEntityMapping tEntity : tEntities) {\n+                    RootEntity entity = (RootEntity) \n+                        EntityMapping.createEntityObjectInstance(tEntity);\n+                    entity.updateId(new Integer(idx++));\n+                    entity.setRootEntityData(\"Root \" + (idx - 1));\n+                    \n+                    em.getTransaction().begin();\n+                    em.persist(entity);\n+                    em.getTransaction().commit();\n+                    em.clear();\n+                }\n+            } catch (Exception e) {\n+                fail(\"Test failed with Exception\\n\" + e);\n+            }\n+            \n+            List<RootEntity>  resultList = (List<RootEntity>) em.createQuery(\n+                    \"SELECT e FROM \" + tEntities[0].getEntityName() + \n+                    \" e ORDER BY e.id\").getResultList();\n+            assertEquals(tEntities.length, resultList.size());\n+      \n+            idx = 0;\n+            for (Object obj : resultList) {\n+                RootEntity entity = (RootEntity) obj;\n+                Class<? extends RootEntity> actualType = entity.getClass();\n+                Class<? extends RootEntity> expectedType = \n+                    tEntities[idx].getEntityClass();\n+                \n+                assertEquals(\n+                        \"Assert Entity \" + (idx + 1) + \"is entity of type \" + \n+                        expectedType, expectedType, actualType);\n+                \n+                idx++;\n+            }\n+        }\n+        \n+        em.close();\n+    }\n+    \n+\n+    \n+    /*\n+     * The following tests exercise the following scenario:\n+     * \n+     * Verify that all-inclusive SELECT against an entity that is a member\n+     * of an inheritance hierarchy will include all of its subclasses within\n+     * the query results as well.\n+     * \n+     * Variations of this test include clearing the L1 cache after db \n+     * population and between each Query check, and not clearing the L1 \n+     * cache.\n+     * \n+     */\n+    \n+    private boolean[][] queryLogic001AcceptenceMapping = new boolean[][] {\n+            // RootEntity\n+            new boolean[] { true, true, true, true, true, true, true, true,\n+                    true },\n+            // Leaf A\n+            new boolean[] { false, true, false, false, false, false, false,\n+                    false, false },\n+            // EntityB\n+            new boolean[] { false, false, true, true, true, false, false,\n+                    false, false },\n+            // Leaf B1\n+            new boolean[] { false, false, false, true, false, false, false,\n+                    false, false },\n+            // Leaf B2\n+            new boolean[] { false, false, false, false, true, false, false,\n+                    false, false },\n+            // Leaf C\n+            new boolean[] { false, false, false, false, false, true, false,\n+                    false, false },\n+            // Entity D\n+            new boolean[] { false, false, false, false, false, false, true,\n+                    true, true },\n+            // Leaf D1\n+            new boolean[] { false, false, false, false, false, false, false,\n+                    true, false },\n+            // Leaf D2\n+            new boolean[] { false, false, false, false, false, false, false,\n+                    false, true } };\n+\n+    @SuppressWarnings(\"unchecked\")\n+    private void query001TestLogic(boolean clearL1Cache) {\n+        EntityManager em = emf.createEntityManager();         \n+            \n+        boolean[][] acceptenceMapping = queryLogic001AcceptenceMapping;\n+        \n+        for (InheritanceEntityMapping[] tEntities : allEntityGroups ) {\n+            // Populate Database\n+            int idx = 0;\n+            try {\n+                for (InheritanceEntityMapping tEntity : tEntities) {\n+                    RootEntity entity = (RootEntity) \n+                        EntityMapping.createEntityObjectInstance(tEntity);\n+                    entity.updateId(new Integer(idx++));\n+                    entity.setRootEntityData(\"Root \" + (idx - 1));\n+                    \n+                    em.getTransaction().begin();\n+                    em.persist(entity);\n+                    em.getTransaction().commit();\n+                    \n+                    if (clearL1Cache)\n+                        em.clear();\n+                }\n+            } catch (Exception e) {\n+                fail(\"Test failed with Exception\\n\" + e);\n+            }\n+            \n+            // Run through acceptance tests\n+            idx = 0;\n+            for (boolean[] acceptenceMap : acceptenceMapping) {\n+                int expectedQueryResultListSize = 0;\n+                for (boolean acceptence : acceptenceMap) {\n+                    if (acceptence)\n+                        expectedQueryResultListSize++;\n+                }\n+                String queryStr = \"SELECT e FROM \" + \n+                    tEntities[idx].getEntityName() + \" e\";\n+                List<RootEntity> resultList = (List<RootEntity>)\n+                    em.createQuery(queryStr).getResultList();\n+\n+                assertEquals(\n+                        \"Assert the following query creates a result list \" +\n+                        \"with \" + expectedQueryResultListSize + \" entities: \" +\n+                        \"\\\"\" + queryStr + \"\\\".  \",\n+                        expectedQueryResultListSize, \n+                        resultList.size());\n+                idx++;\n+                \n+                if (clearL1Cache)\n+                    em.clear();\n+            }        \n+        }\n+\n+        em.close();\n+    }\n+    \n+    /**\n+     * Verify that all-inclusive SELECT against an entity that is a member of an\n+     * inheritance hierarchy will include all of its subclasses within the query\n+     * results as well.  Test will not clear the L1 cache after populating DB\n+     * and will not clear the L1 cache in between Query executions.\n+     */\n+    public void testQuery001WithL1() {\n+        query001TestLogic(false);\n+    }\n+    \n+    /**\n+     * Verify that all-inclusive SELECT against an entity that is a member of an\n+     * inheritance hierarchy will include all of its subclasses within the query\n+     * results as well.  Test will clear the L1 cache after populating DB\n+     * and will  clear the L1 cache in between Query executions.\n+     */\n+    public void testQuery001NoL1() {\n+        query001TestLogic(true);\n+    }\n+}"},{"sha":"6e5df22afc9e6d1586aa11b5eac93717b6738468","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/TestMappedSuperclass.java","status":"added","additions":108,"deletions":0,"changes":108,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/TestMappedSuperclass.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/TestMappedSuperclass.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/TestMappedSuperclass.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,108 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.inheritance;\n+\n+import javax.persistence.EntityManager;\n+\n+import org.apache.openjpa.persistence.inheritance.entity.BaseClass;\n+import org.apache.openjpa.persistence.inheritance.entity.MappedSuper;\n+import org.apache.openjpa.persistence.inheritance.entity.SubclassC;\n+import org.apache.openjpa.persistence.inheritance.entity.SubclassD;\n+import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n+\n+/**\n+ * This test verifies basic Mapped Superclass functionality as dictated by\n+ * the JPA Specification contract. \n+ * \n+ * OpenJPA JIRA: {@link http://issues.apache.org/jira/browse/OPENJPA-1061}\n+ *\n+ */\n+public class TestMappedSuperclass extends SingleEMFTestCase {\n+    public void setUp() {\n+        setUp(BaseClass.class, SubclassC.class, MappedSuper.class,\n+                SubclassD.class);\n+    }\n+\n+    private Class[] classArray(Class... classes) {\n+        return classes;\n+    }\n+\n+    /**\n+     * Verify that two entity classes, extending a Mapped Superclass that\n+     * defines an ID field, are not members of a common inheritance\n+     * hierarchy.  This test variant inserts new entities into the persistence\n+     * context by calling EntityManager.persist() on the new entity object.\n+     */\n+    public void testMappedSuperclassContract001() {\n+        EntityManager em = emf.createEntityManager();\n+\n+        // Create two entities, SubclassC and SubclassD, with the same\n+        // primary key value     \n+        SubclassC sc = new SubclassC();\n+        sc.setId(42);\n+        sc.setName(\"SubclassCMappedSuperName\");\n+        sc.setClassCName(\"SubclassCName\");\n+\n+        em.getTransaction().begin();\n+        em.persist(sc);\n+        em.getTransaction().commit();\n+\n+        SubclassD sd = new SubclassD();\n+        sd.setId(42);\n+        sd.setName(\"SubclassDMappedSuperName\");\n+        sd.setClassDName(\"SubclassDName\");\n+\n+        // No EntityExistsException should be thrown by the persist\n+        em.getTransaction().begin();\n+        em.persist(sd);\n+        em.getTransaction().commit();\n+    }\n+\n+    /**\n+     * Verify that two entity classes, extending a Mapped Superclass that\n+     * defines an ID field, are not members of a common inheritance\n+     * hierarchy.  This test variant inserts new entities into the persistence\n+     * context by calling EntityManager.merge() on the new entity object.\n+     */\n+    public void testMappedSuperclassContract002() {\n+        EntityManager em = emf.createEntityManager();\n+\n+        // Create two entities, SubclassC and SubclassD, with the same\n+        // primary key value\n+\n+        SubclassC sc = new SubclassC();\n+        sc.setId(43);\n+        sc.setName(\"SubclassCMappedSuperName\");\n+        sc.setClassCName(\"SubclassCName\");\n+\n+        em.getTransaction().begin();\n+        em.merge(sc);\n+        em.getTransaction().commit();\n+\n+        SubclassD sd = new SubclassD();\n+        sd.setId(43);\n+        sd.setName(\"SubclassDMappedSuperName\");\n+        sd.setClassDName(\"SubclassDName\");\n+\n+        // No EntityExistsException should be thrown by the merge\n+        em.getTransaction().begin();\n+        em.merge(sd);\n+        em.getTransaction().commit();\n+    }\n+}"},{"sha":"b67b8197eb33a06bcf2ec683a89fb0efbc8e4087","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/EntityMapping.java","status":"added","additions":559,"deletions":0,"changes":559,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/EntityMapping.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/EntityMapping.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/EntityMapping.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,559 @@\n+package org.apache.openjpa.persistence.inheritance.entities;\n+\n+import java.lang.reflect.Constructor;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    PrimitiveIDMappedSuperclass;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.jointable.chardiscriminator.PIdJTCDMSCEntityB;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.jointable.chardiscriminator.PIdJTCDMSCEntityD;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.jointable.chardiscriminator.PIdJTCDMSCLeafA;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.jointable.chardiscriminator.PIdJTCDMSCLeafB1;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.jointable.chardiscriminator.PIdJTCDMSCLeafB2;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.jointable.chardiscriminator.PIdJTCDMSCLeafC;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.jointable.chardiscriminator.PIdJTCDMSCLeafD1;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.jointable.chardiscriminator.PIdJTCDMSCLeafD2;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.jointable.chardiscriminator.PIdJTCDMSCMappedSuperclass;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.jointable.chardiscriminator.PIdJTCDMSCRootEntity;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.jointable.intdiscriminator.PIdJTIDMSCEntityB;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.jointable.intdiscriminator.PIdJTIDMSCEntityD;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.jointable.intdiscriminator.PIdJTIDMSCLeafA;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.jointable.intdiscriminator.PIdJTIDMSCLeafB1;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.jointable.intdiscriminator.PIdJTIDMSCLeafB2;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.jointable.intdiscriminator.PIdJTIDMSCLeafC;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.jointable.intdiscriminator.PIdJTIDMSCLeafD1;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.jointable.intdiscriminator.PIdJTIDMSCLeafD2;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.jointable.intdiscriminator.PIdJTIDMSCMappedSuperclass;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.jointable.intdiscriminator.PIdJTIDMSCRootEntity;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.jointable.stringdiscriminator.PIdJTSDMSCEntityB;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.jointable.stringdiscriminator.PIdJTSDMSCEntityD;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.jointable.stringdiscriminator.PIdJTSDMSCLeafA;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.jointable.stringdiscriminator.PIdJTSDMSCLeafB1;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.jointable.stringdiscriminator.PIdJTSDMSCLeafB2;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.jointable.stringdiscriminator.PIdJTSDMSCLeafC;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.jointable.stringdiscriminator.PIdJTSDMSCLeafD1;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.jointable.stringdiscriminator.PIdJTSDMSCLeafD2;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.jointable.stringdiscriminator.PIdJTSDMSCMappedSuperclass;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.jointable.stringdiscriminator.PIdJTSDMSCRootEntity;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.chardiscriminator.PIdSTCDMSCEntityB;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.chardiscriminator.PIdSTCDMSCEntityD;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.chardiscriminator.PIdSTCDMSCLeafA;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.chardiscriminator.PIdSTCDMSCLeafB1;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.chardiscriminator.PIdSTCDMSCLeafB2;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.chardiscriminator.PIdSTCDMSCLeafC;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.chardiscriminator.PIdSTCDMSCLeafD1;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.chardiscriminator.PIdSTCDMSCLeafD2;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.chardiscriminator.PIdSTCDMSCMappedSuperclass;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.chardiscriminator.PIdSTCDMSCRootEntity;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.intdiscriminator.PIdSTIDMSCEntityB;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.intdiscriminator.PIdSTIDMSCEntityD;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.intdiscriminator.PIdSTIDMSCLeafA;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.intdiscriminator.PIdSTIDMSCLeafB1;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.intdiscriminator.PIdSTIDMSCLeafB2;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.intdiscriminator.PIdSTIDMSCLeafC;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.intdiscriminator.PIdSTIDMSCLeafD1;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.intdiscriminator.PIdSTIDMSCLeafD2;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.intdiscriminator.PIdSTIDMSCMappedSuperclass;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.intdiscriminator.PIdSTIDMSCRootEntity;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.stringdiscriminator.PIdSTSDMSCEntityB;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.stringdiscriminator.PIdSTSDMSCEntityD;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.stringdiscriminator.PIdSTSDMSCLeafA;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.stringdiscriminator.PIdSTSDMSCLeafB1;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.stringdiscriminator.PIdSTSDMSCLeafB2;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.stringdiscriminator.PIdSTSDMSCLeafC;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.stringdiscriminator.PIdSTSDMSCLeafD1;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.stringdiscriminator.PIdSTSDMSCLeafD2;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.stringdiscriminator.PIdSTSDMSCMappedSuperclass;\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.stringdiscriminator.PIdSTSDMSCRootEntity;\n+\n+public class EntityMapping {\n+    @SuppressWarnings(\"unchecked\")\n+    public static enum InheritanceEntityMapping {\n+        /*\n+         * Primitive Identity defined on a Mapped Superclass, \n+         * Joined Table Entity Inheritance\n+         */\n+        \n+        // Primitive Identity defined on a Mapped Superclass, \n+        // Joined Table Entity Inheritance, Integer Discriminator\n+        PIdJTIDMSCRootEntity {         \n+            public Class getEntityClass() {\n+                return PIdJTIDMSCRootEntity.class;\n+            }\n+        },\n+        PIdJTIDMSCLeafA {\n+            public Class getEntityClass() {\n+                return PIdJTIDMSCLeafA.class;\n+            }\n+        },\n+        PIdJTIDMSCEntityB {\n+            public Class getEntityClass() {\n+                return PIdJTIDMSCEntityB.class;\n+            }\n+        },\n+        PIdJTIDMSCLeafB1 {\n+            public Class getEntityClass() {\n+                return PIdJTIDMSCLeafB1.class;\n+            }\n+        },\n+        PIdJTIDMSCLeafB2 {\n+            public Class getEntityClass() {\n+                return PIdJTIDMSCLeafB2.class;\n+            }\n+        },\n+        PIdJTIDMSCLeafC {\n+            public Class getEntityClass() {\n+                return PIdJTIDMSCLeafC.class;\n+            }\n+        },\n+        PIdJTIDMSCEntityD {\n+            public Class getEntityClass() {\n+                return PIdJTIDMSCEntityD.class;\n+            }\n+        },\n+        PIdJTIDMSCLeafD1 {\n+            public Class getEntityClass() {\n+                return PIdJTIDMSCLeafD1.class;\n+            }\n+        },\n+        PIdJTIDMSCLeafD2 {\n+            public Class getEntityClass() {\n+                return PIdJTIDMSCLeafD2.class;\n+            }\n+        },\n+        \n+        // Primitive Identity defined on a Mapped Superclass, \n+        // Joined Table Entity Inheritance, Char Discriminator\n+        PIdJTCDMSCRootEntity {\n+            public Class getEntityClass() {\n+                return PIdJTCDMSCRootEntity.class;\n+            }\n+        },\n+        PIdJTCDMSCLeafA {\n+            public Class getEntityClass() {\n+                return PIdJTCDMSCLeafA.class;\n+            }\n+        },\n+        PIdJTCDMSCEntityB {\n+            public Class getEntityClass() {\n+                return PIdJTCDMSCEntityB.class;\n+            }\n+        },\n+        PIdJTCDMSCLeafB1 {\n+            public Class getEntityClass() {\n+                return PIdJTCDMSCLeafB1.class;\n+            }\n+        },\n+        PIdJTCDMSCLeafB2 {\n+            public Class getEntityClass() {\n+                return PIdJTCDMSCLeafB2.class;\n+            }\n+        },\n+        PIdJTCDMSCLeafC {\n+            public Class getEntityClass() {\n+                return PIdJTCDMSCLeafC.class;\n+            }\n+        },\n+        PIdJTCDMSCEntityD {\n+            public Class getEntityClass() {\n+                return PIdJTCDMSCEntityD.class;\n+            }\n+        },\n+        PIdJTCDMSCLeafD1 {\n+            public Class getEntityClass() {\n+                return PIdJTCDMSCLeafD1.class;\n+            }\n+        },\n+        PIdJTCDMSCLeafD2 {\n+            public Class getEntityClass() {\n+                return PIdJTCDMSCLeafD2.class;\n+            }\n+        },\n+        \n+        // Primitive Identity defined on a Mapped Superclass, \n+        // Joined Table Entity Inheritance, String Discriminator\n+        PIdJTSDMSCRootEntity {\n+            public Class getEntityClass() {\n+                return PIdJTSDMSCRootEntity.class;\n+            }\n+        },\n+        PIdJTSDMSCLeafA {\n+            public Class getEntityClass() {\n+                return PIdJTSDMSCLeafA.class;\n+            }\n+        },\n+        PIdJTSDMSCEntityB {\n+            public Class getEntityClass() {\n+                return PIdJTSDMSCEntityB.class;\n+            }\n+        },\n+        PIdJTSDMSCLeafB1 {\n+            public Class getEntityClass() {\n+                return PIdJTSDMSCLeafB1.class;\n+            }\n+        },\n+        PIdJTSDMSCLeafB2 {\n+            public Class getEntityClass() {\n+                return PIdJTSDMSCLeafB2.class;\n+            }\n+        },\n+        PIdJTSDMSCLeafC {\n+            public Class getEntityClass() {\n+                return PIdJTSDMSCLeafC.class;\n+            }\n+        },\n+        PIdJTSDMSCEntityD {\n+            public Class getEntityClass() {\n+                return PIdJTSDMSCEntityD.class;\n+            }\n+        },\n+        PIdJTSDMSCLeafD1 {\n+            public Class getEntityClass() {\n+                return PIdJTSDMSCLeafD1.class;\n+            }\n+        },\n+        PIdJTSDMSCLeafD2 {\n+            public Class getEntityClass() {\n+                return PIdJTSDMSCLeafD2.class;\n+            }\n+        },\n+        \n+        /*\n+         * Primitive Identity defined on a Mapped Superclass, \n+         * Single Table Entity Inheritance\n+         */\n+        \n+        // Primitive Identity defined on a Mapped Superclass, \n+        // Single Table Entity Inheritance, Integer Discriminator\n+        PIdSTIDMSCRootEntity {\n+            public Class getEntityClass() {\n+                return PIdSTIDMSCRootEntity.class;\n+            }\n+        },\n+        PIdSTIDMSCLeafA {\n+            public Class getEntityClass() {\n+                return PIdSTIDMSCLeafA.class;\n+            }\n+        },\n+        PIdSTIDMSCEntityB {\n+            public Class getEntityClass() {\n+                return PIdSTIDMSCEntityB.class;\n+            }\n+        },\n+        PIdSTIDMSCLeafB1 {\n+            public Class getEntityClass() {\n+                return PIdSTIDMSCLeafB1.class;\n+            }\n+        },\n+        PIdSTIDMSCLeafB2 {\n+            public Class getEntityClass() {\n+                return PIdSTIDMSCLeafB2.class;\n+            }\n+        },\n+        PIdSTIDMSCLeafC {\n+            public Class getEntityClass() {\n+                return PIdSTIDMSCLeafC.class;\n+            }\n+        },\n+        PIdSTIDMSCEntityD {\n+            public Class getEntityClass() {\n+                return PIdSTIDMSCEntityD.class;\n+            }\n+        },\n+        PIdSTIDMSCLeafD1 {\n+            public Class getEntityClass() {\n+                return PIdSTIDMSCLeafD1.class;\n+            }\n+        },\n+        PIdSTIDMSCLeafD2 {\n+            public Class getEntityClass() {\n+                return PIdSTIDMSCLeafD2.class;\n+            }\n+        },\n+        \n+        // Primitive Identity defined on a Mapped Superclass, \n+        // Single Table Entity Inheritance, Char Discriminator\n+        PIdSTCDMSCRootEntity {\n+            public Class getEntityClass() {\n+                return PIdSTCDMSCRootEntity.class;\n+            }\n+        },\n+        PIdSTCDMSCLeafA {\n+            public Class getEntityClass() {\n+                return PIdSTCDMSCLeafA.class;\n+            }\n+        },\n+        PIdSTCDMSCEntityB {\n+            public Class getEntityClass() {\n+                return PIdSTCDMSCEntityB.class;\n+            }\n+        },\n+        PIdSTCDMSCLeafB1 {\n+            public Class getEntityClass() {\n+                return PIdSTCDMSCLeafB1.class;\n+            }\n+        },\n+        PIdSTCDMSCLeafB2 {\n+            public Class getEntityClass() {\n+                return PIdSTCDMSCLeafB2.class;\n+            }\n+        },\n+        PIdSTCDMSCLeafC {\n+            public Class getEntityClass() {\n+                return PIdSTCDMSCLeafC.class;\n+            }\n+        },\n+        PIdSTCDMSCEntityD {\n+            public Class getEntityClass() {\n+                return PIdSTCDMSCEntityD.class;\n+            }\n+        },\n+        PIdSTCDMSCLeafD1 {\n+            public Class getEntityClass() {\n+                return PIdSTCDMSCLeafD1.class;\n+            }\n+        },\n+        PIdSTCDMSCLeafD2 {\n+            public Class getEntityClass() {\n+                return PIdSTCDMSCLeafD2.class;\n+            }\n+        },\n+        \n+        // Primitive Identity defined on a Mapped Superclass, \n+        // Single Table Entity Inheritance, String Discriminator\n+        PIdSTSDMSCRootEntity {\n+            public Class getEntityClass() {\n+                return PIdSTSDMSCRootEntity.class;\n+            }\n+        },\n+        PIdSTSDMSCLeafA {\n+            public Class getEntityClass() {\n+                return PIdSTSDMSCLeafA.class;\n+            }\n+        },\n+        PIdSTSDMSCEntityB {\n+            public Class getEntityClass() {\n+                return PIdSTSDMSCEntityB.class;\n+            }\n+        },\n+        PIdSTSDMSCLeafB1 {\n+            public Class getEntityClass() {\n+                return PIdSTSDMSCLeafB1.class;\n+            }\n+        },\n+        PIdSTSDMSCLeafB2 {\n+            public Class getEntityClass() {\n+                return PIdSTSDMSCLeafB2.class;\n+            }\n+        },\n+        PIdSTSDMSCLeafC {\n+            public Class getEntityClass() {\n+                return PIdSTSDMSCLeafC.class;\n+            }\n+        },\n+        PIdSTSDMSCEntityD {\n+            public Class getEntityClass() {\n+                return PIdSTSDMSCEntityD.class;\n+            }\n+        },\n+        PIdSTSDMSCLeafD1 {\n+            public Class getEntityClass() {\n+                return PIdSTSDMSCLeafD1.class;\n+            }\n+        },\n+        PIdSTSDMSCLeafD2 {\n+            public Class getEntityClass() {\n+                return PIdSTSDMSCLeafD2.class;\n+            }\n+        },\n+\n+        \n+        /*\n+         * Non Entity PC-Aware Types\n+         */\n+        PrimitiveIDMappedSuperclass {\n+            public Class getEntityClass() {\n+                return PrimitiveIDMappedSuperclass.class;\n+            }\n+        }, \n+        PIdJTIDMSCMappedSuperclass {\n+            public Class getEntityClass() {\n+                return PIdJTIDMSCMappedSuperclass.class;\n+            }\n+        },\n+        PIdJTICMSCMappedSuperclass {\n+            public Class getEntityClass() {\n+                return PIdJTCDMSCMappedSuperclass.class;\n+            }\n+        },\n+        PIdJTISMSCMappedSuperclass {\n+            public Class getEntityClass() {\n+                return PIdJTSDMSCMappedSuperclass.class;\n+            }\n+        },\n+        PIdSTIDMSCMappedSuperclass {\n+            public Class getEntityClass() {\n+                return PIdSTIDMSCMappedSuperclass.class;\n+            }\n+        },\n+        PIdSTICMSCMappedSuperclass {\n+            public Class getEntityClass() {\n+                return PIdSTCDMSCMappedSuperclass.class;\n+            }\n+        },\n+        PIdSTISMSCMappedSuperclass {\n+            public Class getEntityClass() {\n+                return PIdSTSDMSCMappedSuperclass.class;\n+            }\n+        }\n+        \n+        ;\n+        \n+        public abstract Class getEntityClass();\n+        public String getEntityName() {\n+            return getEntityClass().getSimpleName();\n+        }\n+    };\n+    \n+    public final static InheritanceEntityMapping[] PIdJTIDMSC = {\n+        InheritanceEntityMapping.PIdJTIDMSCRootEntity,\n+        InheritanceEntityMapping.PIdJTIDMSCLeafA,\n+        InheritanceEntityMapping.PIdJTIDMSCEntityB,\n+        InheritanceEntityMapping.PIdJTIDMSCLeafB1,\n+        InheritanceEntityMapping.PIdJTIDMSCLeafB2,\n+        InheritanceEntityMapping.PIdJTIDMSCLeafC,\n+        InheritanceEntityMapping.PIdJTIDMSCEntityD,\n+        InheritanceEntityMapping.PIdJTIDMSCLeafD1,\n+        InheritanceEntityMapping.PIdJTIDMSCLeafD2\n+    };\n+    \n+    public final static InheritanceEntityMapping[] PIdJTCDMSC = {\n+        InheritanceEntityMapping.PIdJTCDMSCRootEntity,\n+        InheritanceEntityMapping.PIdJTCDMSCLeafA,\n+        InheritanceEntityMapping.PIdJTCDMSCEntityB,\n+        InheritanceEntityMapping.PIdJTCDMSCLeafB1,\n+        InheritanceEntityMapping.PIdJTCDMSCLeafB2,\n+        InheritanceEntityMapping.PIdJTCDMSCLeafC,\n+        InheritanceEntityMapping.PIdJTCDMSCEntityD,\n+        InheritanceEntityMapping.PIdJTCDMSCLeafD1,\n+        InheritanceEntityMapping.PIdJTCDMSCLeafD2\n+    };\n+    \n+    public final static InheritanceEntityMapping[] PIdJTSDMSC = {\n+        InheritanceEntityMapping.PIdJTSDMSCRootEntity,\n+        InheritanceEntityMapping.PIdJTSDMSCLeafA,\n+        InheritanceEntityMapping.PIdJTSDMSCEntityB,\n+        InheritanceEntityMapping.PIdJTSDMSCLeafB1,\n+        InheritanceEntityMapping.PIdJTSDMSCLeafB2,\n+        InheritanceEntityMapping.PIdJTSDMSCLeafC,\n+        InheritanceEntityMapping.PIdJTSDMSCEntityD,\n+        InheritanceEntityMapping.PIdJTSDMSCLeafD1,\n+        InheritanceEntityMapping.PIdJTSDMSCLeafD2\n+    };\n+    \n+    public final static InheritanceEntityMapping[] PIdSTIDMSC = {\n+        InheritanceEntityMapping.PIdSTIDMSCRootEntity,\n+        InheritanceEntityMapping.PIdSTIDMSCLeafA,\n+        InheritanceEntityMapping.PIdSTIDMSCEntityB,\n+        InheritanceEntityMapping.PIdSTIDMSCLeafB1,\n+        InheritanceEntityMapping.PIdSTIDMSCLeafB2,\n+        InheritanceEntityMapping.PIdSTIDMSCLeafC,\n+        InheritanceEntityMapping.PIdSTIDMSCEntityD,\n+        InheritanceEntityMapping.PIdSTIDMSCLeafD1,\n+        InheritanceEntityMapping.PIdSTIDMSCLeafD2\n+    };\n+    \n+    public final static InheritanceEntityMapping[] PIdSTCDMSC = {\n+        InheritanceEntityMapping.PIdSTCDMSCRootEntity,\n+        InheritanceEntityMapping.PIdSTCDMSCLeafA,\n+        InheritanceEntityMapping.PIdSTCDMSCEntityB,\n+        InheritanceEntityMapping.PIdSTCDMSCLeafB1,\n+        InheritanceEntityMapping.PIdSTCDMSCLeafB2,\n+        InheritanceEntityMapping.PIdSTCDMSCLeafC,\n+        InheritanceEntityMapping.PIdSTCDMSCEntityD,\n+        InheritanceEntityMapping.PIdSTCDMSCLeafD1,\n+        InheritanceEntityMapping.PIdSTCDMSCLeafD2\n+    };\n+    \n+    public final static InheritanceEntityMapping[] PIdSTSDMSC = {\n+        InheritanceEntityMapping.PIdSTSDMSCRootEntity,\n+        InheritanceEntityMapping.PIdSTSDMSCLeafA,\n+        InheritanceEntityMapping.PIdSTSDMSCEntityB,\n+        InheritanceEntityMapping.PIdSTSDMSCLeafB1,\n+        InheritanceEntityMapping.PIdSTSDMSCLeafB2,\n+        InheritanceEntityMapping.PIdSTSDMSCLeafC,\n+        InheritanceEntityMapping.PIdSTSDMSCEntityD,\n+        InheritanceEntityMapping.PIdSTSDMSCLeafD1,\n+        InheritanceEntityMapping.PIdSTSDMSCLeafD2\n+    };\n+\n+    \n+    @SuppressWarnings(\"unchecked\")\n+    public static Object createEntityObjectInstance(\n+            InheritanceEntityMapping eType) throws Exception {\n+        Class eClassType = eType.getEntityClass();\n+        \n+        Constructor c = eClassType.getConstructor(new Class[] {});\n+        Object eObj = c.newInstance(new Object[] {});\n+        return eObj;\n+    }\n+}"},{"sha":"81f445db3d51b070ce78f67c6d26045306a3c9f1","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/PrimitiveIDMappedSuperclass.java","status":"added","additions":49,"deletions":0,"changes":49,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/PrimitiveIDMappedSuperclass.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/PrimitiveIDMappedSuperclass.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/PrimitiveIDMappedSuperclass.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc;\n+\n+import javax.persistence.Id;\n+import javax.persistence.MappedSuperclass;\n+\n+/**\n+ * Mapped Superclass defining an integer-type primary key field.\n+ *\n+ */\n+@MappedSuperclass\n+public abstract class PrimitiveIDMappedSuperclass {\n+    @Id\n+    private int id;\n+\n+    public int getId() {\n+        return id;\n+    }\n+\n+    public void setId(int id) {\n+        this.id = id;\n+    }\n+    \n+    public Object fetchId() {\n+        return new Integer(getId());\n+    }\n+    \n+    public void updateId(Object obj) {\n+        Integer i = (Integer) obj;\n+        setId(i.intValue());\n+    }\n+}"},{"sha":"d46f74dda7ae6b68d546a91ee14f69f30a841081","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCEntityB.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCEntityB.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCEntityB.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCEntityB.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.jointable.chardiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    EntityB;\n+\n+@Entity\n+@DiscriminatorValue(\"C\")\n+public class PIdJTCDMSCEntityB \n+extends PIdJTCDMSCRootEntity implements EntityB {\n+    private String entityBData;\n+    \n+    public String getEntityBData() {\n+        return entityBData;\n+    }\n+    public void setEntityBData(String entityBData) {\n+        this.entityBData = entityBData;\n+    }\n+}"},{"sha":"1cddc7736e22d4be20de22776ac5509293519211","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCEntityD.java","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCEntityD.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCEntityD.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCEntityD.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.jointable.chardiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    EntityD;\n+@Entity\n+@DiscriminatorValue(\"G\")\n+public class PIdJTCDMSCEntityD \n+extends PIdJTCDMSCMappedSuperclass implements EntityD {\n+private String entityDData;\n+    \n+    public String getEntityDData() {\n+        return entityDData;\n+    }\n+    public void setEntityDData(String entityDData) {\n+        this.entityDData = entityDData;\n+    }\n+}"},{"sha":"6796d8ff7031a0b9f025488f1f2a96f9e647ff33","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCLeafA.java","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCLeafA.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCLeafA.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCLeafA.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.jointable.chardiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.LeafA;\n+\n+@Entity\n+@DiscriminatorValue(\"B\")\n+public class PIdJTCDMSCLeafA \n+extends PIdJTCDMSCRootEntity implements LeafA {\n+    private String leafAData;\n+    \n+    public String getLeafAData() \n+    {\n+        return leafAData;\n+    }\n+    \n+    public void setLeafAData(String leafAData) {\n+        this.leafAData = leafAData;\n+    }\n+}"},{"sha":"269ab2ebbe443fee00bb4d44efee66ae5849f3cc","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCLeafB1.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCLeafB1.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCLeafB1.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCLeafB1.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.jointable.chardiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    LeafB1;\n+\n+@Entity\n+@DiscriminatorValue(\"D\")\n+public class PIdJTCDMSCLeafB1 \n+extends PIdJTCDMSCEntityB implements LeafB1 {\n+    private String leafB1Data;\n+    \n+    public String getLeafB1Data() {\n+        return leafB1Data;\n+    }\n+    public void setLeafB1Data(String leafB1Data) {\n+        this.leafB1Data = leafB1Data;\n+    }\n+}"},{"sha":"bb7c3a11dee52bde6358e6e939147b55357abdd6","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCLeafB2.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCLeafB2.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCLeafB2.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCLeafB2.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.jointable.chardiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    LeafB2;\n+\n+@Entity\n+@DiscriminatorValue(\"E\")\n+public class PIdJTCDMSCLeafB2\n+extends PIdJTCDMSCEntityB implements LeafB2 {\n+private String leafB2Data;\n+    \n+    public String getLeafB2Data() {\n+        return leafB2Data;\n+    }\n+    public void setLeafB2Data(String leafB2Data) {\n+        this.leafB2Data = leafB2Data;\n+    }\n+}"},{"sha":"b3eda100dbda0edebbef11209bf130b3f92b9e65","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCLeafC.java","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCLeafC.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCLeafC.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCLeafC.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.jointable.chardiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.LeafC;\n+\n+@Entity\n+@DiscriminatorValue(\"F\")\n+public class PIdJTCDMSCLeafC \n+extends PIdJTCDMSCMappedSuperclass implements LeafC {\n+    private String leafCData;\n+    \n+    public String getLeafCData() \n+    {\n+        return leafCData;\n+    }\n+    \n+    public void setLeafCData(String leafCData) {\n+        this.leafCData = leafCData;\n+    }\n+}"},{"sha":"c76a667e125bda16707f7cc72ff2468461089bd7","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCLeafD1.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCLeafD1.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCLeafD1.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCLeafD1.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.jointable.chardiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    LeafD1;\n+\n+@Entity\n+@DiscriminatorValue(\"H\")\n+public class PIdJTCDMSCLeafD1 \n+extends PIdJTCDMSCEntityD implements LeafD1 {\n+    private String leafD1Data;\n+    \n+    public String getLeafD1Data() {\n+        return leafD1Data;\n+    }\n+    public void setLeafD1Data(String leafD1Data) {\n+        this.leafD1Data = leafD1Data;\n+    }\n+}"},{"sha":"a259099b95b236602ce1a88388e967fc0fd2e17c","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCLeafD2.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCLeafD2.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCLeafD2.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCLeafD2.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.jointable.chardiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    LeafD2;\n+\n+@Entity\n+@DiscriminatorValue(\"I\")\n+public class PIdJTCDMSCLeafD2 \n+extends PIdJTCDMSCEntityD implements LeafD2 {\n+    private String leafD2Data;\n+    \n+    public String getLeafD2Data() {\n+        return leafD2Data;\n+    }\n+    public void setLeafD2Data(String leafD2Data) {\n+        this.leafD2Data = leafD2Data;\n+    }\n+}"},{"sha":"71749061d185bed52147566fc6ba1e7e00176f86","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCMappedSuperclass.java","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCMappedSuperclass.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCMappedSuperclass.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCMappedSuperclass.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.jointable.chardiscriminator;\n+\n+import javax.persistence.MappedSuperclass;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.MSC;\n+\n+@MappedSuperclass\n+public class PIdJTCDMSCMappedSuperclass \n+extends PIdJTCDMSCRootEntity implements MSC {\n+    private String mappedSuperclassData;\n+    \n+    public String getMappedSuperclassData() {\n+        return mappedSuperclassData;\n+    }\n+    \n+    public void setMappedSuperclassData(String mappedSuperclassData) {\n+        this.mappedSuperclassData = mappedSuperclassData;\n+    }\n+}"},{"sha":"043272f03237b91503ef3d0cf3469ab53081e734","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCRootEntity.java","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCRootEntity.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCRootEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/chardiscriminator/PIdJTCDMSCRootEntity.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.jointable.chardiscriminator;\n+\n+import javax.persistence.DiscriminatorColumn;\n+import javax.persistence.DiscriminatorType;\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+import javax.persistence.Inheritance;\n+import javax.persistence.InheritanceType;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    PrimitiveIDMappedSuperclass;\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    RootEntity;\n+\n+@Entity\n+@Inheritance(strategy=InheritanceType.JOINED)\n+@DiscriminatorColumn(name=\"TYPE\", discriminatorType=DiscriminatorType.CHAR)\n+@DiscriminatorValue(\"A\")\n+public class PIdJTCDMSCRootEntity \n+    extends PrimitiveIDMappedSuperclass implements RootEntity {\n+    private String rootEntityData;\n+    \n+    public String getRootEntityData() {\n+        return rootEntityData;\n+    }\n+    public void setRootEntityData(String rootEntityData) {\n+        this.rootEntityData = rootEntityData;\n+    }\n+}"},{"sha":"f1aa597275976003899bff1d24a7d6f80e4ff1ae","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCEntityB.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCEntityB.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCEntityB.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCEntityB.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.jointable.intdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    EntityB;\n+\n+@Entity\n+@DiscriminatorValue(\"3\")\n+public class PIdJTIDMSCEntityB \n+extends PIdJTIDMSCRootEntity implements EntityB {\n+    private String entityBData;\n+    \n+    public String getEntityBData() {\n+        return entityBData;\n+    }\n+    public void setEntityBData(String entityBData) {\n+        this.entityBData = entityBData;\n+    }\n+}"},{"sha":"0ed8bd5e1b6a4b1fa52fc068ed8e6db84b2dc2f2","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCEntityD.java","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCEntityD.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCEntityD.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCEntityD.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.jointable.intdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    EntityD;\n+@Entity\n+@DiscriminatorValue(\"7\")\n+public class PIdJTIDMSCEntityD \n+extends PIdJTIDMSCMappedSuperclass implements EntityD {\n+private String entityDData;\n+    \n+    public String getEntityDData() {\n+        return entityDData;\n+    }\n+    public void setEntityDData(String entityDData) {\n+        this.entityDData = entityDData;\n+    }\n+}"},{"sha":"df88f1ddbb771814dacf6617ff47ddb82e9e3f23","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCLeafA.java","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCLeafA.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCLeafA.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCLeafA.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.jointable.intdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.LeafA;\n+\n+@Entity\n+@DiscriminatorValue(\"2\")\n+public class PIdJTIDMSCLeafA \n+extends PIdJTIDMSCRootEntity implements LeafA {\n+    private String leafAData;\n+    \n+    public String getLeafAData() \n+    {\n+        return leafAData;\n+    }\n+    \n+    public void setLeafAData(String leafAData) {\n+        this.leafAData = leafAData;\n+    }\n+}"},{"sha":"d1b0127135cddef1e082e1b6b6bdba9de8c83e10","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCLeafB1.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCLeafB1.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCLeafB1.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCLeafB1.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.jointable.intdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    LeafB1;\n+\n+@Entity\n+@DiscriminatorValue(\"4\")\n+public class PIdJTIDMSCLeafB1 \n+extends PIdJTIDMSCEntityB implements LeafB1 {\n+    private String leafB1Data;\n+    \n+    public String getLeafB1Data() {\n+        return leafB1Data;\n+    }\n+    public void setLeafB1Data(String leafB1Data) {\n+        this.leafB1Data = leafB1Data;\n+    }\n+}"},{"sha":"fbb4c2d6369135c7cd8485ef5249c8fa2b99104a","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCLeafB2.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCLeafB2.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCLeafB2.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCLeafB2.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.jointable.intdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    LeafB2;\n+\n+@Entity\n+@DiscriminatorValue(\"5\")\n+public class PIdJTIDMSCLeafB2\n+extends PIdJTIDMSCEntityB implements LeafB2 {\n+private String leafB2Data;\n+    \n+    public String getLeafB2Data() {\n+        return leafB2Data;\n+    }\n+    public void setLeafB2Data(String leafB2Data) {\n+        this.leafB2Data = leafB2Data;\n+    }\n+}"},{"sha":"ab711fda3d1d0b6160447f11954a8b9a38b8a11e","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCLeafC.java","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCLeafC.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCLeafC.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCLeafC.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.jointable.intdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.LeafC;\n+\n+@Entity\n+@DiscriminatorValue(\"6\")\n+public class PIdJTIDMSCLeafC \n+extends PIdJTIDMSCMappedSuperclass implements LeafC {\n+    private String leafCData;\n+    \n+    public String getLeafCData() \n+    {\n+        return leafCData;\n+    }\n+    \n+    public void setLeafCData(String leafCData) {\n+        this.leafCData = leafCData;\n+    }\n+}"},{"sha":"f8fc35024a564ab052e8caff36259f3c6619c7ac","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCLeafD1.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCLeafD1.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCLeafD1.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCLeafD1.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.jointable.intdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    LeafD1;\n+\n+@Entity\n+@DiscriminatorValue(\"8\")\n+public class PIdJTIDMSCLeafD1 \n+extends PIdJTIDMSCEntityD implements LeafD1 {\n+    private String leafD1Data;\n+    \n+    public String getLeafD1Data() {\n+        return leafD1Data;\n+    }\n+    public void setLeafD1Data(String leafD1Data) {\n+        this.leafD1Data = leafD1Data;\n+    }\n+}"},{"sha":"74a796af2bb97b73407348dd39e23e101947b05b","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCLeafD2.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCLeafD2.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCLeafD2.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCLeafD2.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.jointable.intdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    LeafD2;\n+\n+@Entity\n+@DiscriminatorValue(\"9\")\n+public class PIdJTIDMSCLeafD2 \n+extends PIdJTIDMSCEntityD implements LeafD2 {\n+    private String leafD2Data;\n+    \n+    public String getLeafD2Data() {\n+        return leafD2Data;\n+    }\n+    public void setLeafD2Data(String leafD2Data) {\n+        this.leafD2Data = leafD2Data;\n+    }\n+}"},{"sha":"3f98c625d9c6f33fa13834e178a817cd234b99bd","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCMappedSuperclass.java","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCMappedSuperclass.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCMappedSuperclass.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCMappedSuperclass.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.jointable.intdiscriminator;\n+\n+import javax.persistence.MappedSuperclass;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.MSC;\n+\n+@MappedSuperclass\n+public class PIdJTIDMSCMappedSuperclass \n+extends PIdJTIDMSCRootEntity implements MSC {\n+    private String mappedSuperclassData;\n+    \n+    public String getMappedSuperclassData() {\n+        return mappedSuperclassData;\n+    }\n+    \n+    public void setMappedSuperclassData(String mappedSuperclassData) {\n+        this.mappedSuperclassData = mappedSuperclassData;\n+    }\n+}"},{"sha":"262b50390eb4308a22f312971c897d301317a95b","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCRootEntity.java","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCRootEntity.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCRootEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/intdiscriminator/PIdJTIDMSCRootEntity.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.jointable.intdiscriminator;\n+\n+import javax.persistence.DiscriminatorColumn;\n+import javax.persistence.DiscriminatorType;\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+import javax.persistence.Inheritance;\n+import javax.persistence.InheritanceType;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    PrimitiveIDMappedSuperclass;\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    RootEntity;\n+\n+@Entity\n+@Inheritance(strategy=InheritanceType.JOINED)\n+@DiscriminatorColumn(name=\"TYPE\", discriminatorType=DiscriminatorType.INTEGER)\n+@DiscriminatorValue(\"1\")\n+public class PIdJTIDMSCRootEntity \n+    extends PrimitiveIDMappedSuperclass implements RootEntity {\n+    private String rootEntityData;\n+    \n+    public String getRootEntityData() {\n+        return rootEntityData;\n+    }\n+    public void setRootEntityData(String rootEntityData) {\n+        this.rootEntityData = rootEntityData;\n+    }\n+}"},{"sha":"eeaf2d49c350f9b7859ec0a30bd01aac585cfd62","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCEntityB.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCEntityB.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCEntityB.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCEntityB.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.jointable.stringdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    EntityB;\n+\n+@Entity\n+@DiscriminatorValue(\"StrC\")\n+public class PIdJTSDMSCEntityB \n+extends PIdJTSDMSCRootEntity implements EntityB {\n+    private String entityBData;\n+    \n+    public String getEntityBData() {\n+        return entityBData;\n+    }\n+    public void setEntityBData(String entityBData) {\n+        this.entityBData = entityBData;\n+    }\n+}"},{"sha":"c28e9a6527408622349f5c0f89a35f4058e4d9c2","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCEntityD.java","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCEntityD.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCEntityD.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCEntityD.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.jointable.stringdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    EntityD;\n+@Entity\n+@DiscriminatorValue(\"StrG\")\n+public class PIdJTSDMSCEntityD \n+extends PIdJTSDMSCMappedSuperclass implements EntityD {\n+private String entityDData;\n+    \n+    public String getEntityDData() {\n+        return entityDData;\n+    }\n+    public void setEntityDData(String entityDData) {\n+        this.entityDData = entityDData;\n+    }\n+}"},{"sha":"c987a4781ca52ca3948831b45b4eaf84c18e8356","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCLeafA.java","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCLeafA.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCLeafA.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCLeafA.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.jointable.stringdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.LeafA;\n+\n+@Entity\n+@DiscriminatorValue(\"StrB\")\n+public class PIdJTSDMSCLeafA \n+extends PIdJTSDMSCRootEntity implements LeafA {\n+    private String leafAData;\n+    \n+    public String getLeafAData() \n+    {\n+        return leafAData;\n+    }\n+    \n+    public void setLeafAData(String leafAData) {\n+        this.leafAData = leafAData;\n+    }\n+}"},{"sha":"dd4f48f3f5f789c70b84d0c9511e9f7d05384e9c","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCLeafB1.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCLeafB1.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCLeafB1.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCLeafB1.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.jointable.stringdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    LeafB1;\n+\n+@Entity\n+@DiscriminatorValue(\"StrD\")\n+public class PIdJTSDMSCLeafB1 \n+extends PIdJTSDMSCEntityB implements LeafB1 {\n+    private String leafB1Data;\n+    \n+    public String getLeafB1Data() {\n+        return leafB1Data;\n+    }\n+    public void setLeafB1Data(String leafB1Data) {\n+        this.leafB1Data = leafB1Data;\n+    }\n+}"},{"sha":"2079038359b77343244ed660995b77bf3392ed83","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCLeafB2.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCLeafB2.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCLeafB2.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCLeafB2.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.jointable.stringdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    LeafB2;\n+\n+@Entity\n+@DiscriminatorValue(\"StrE\")\n+public class PIdJTSDMSCLeafB2\n+extends PIdJTSDMSCEntityB implements LeafB2 {\n+private String leafB2Data;\n+    \n+    public String getLeafB2Data() {\n+        return leafB2Data;\n+    }\n+    public void setLeafB2Data(String leafB2Data) {\n+        this.leafB2Data = leafB2Data;\n+    }\n+}"},{"sha":"e2b5b961316b65e328210a4ed82410081d51ed38","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCLeafC.java","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCLeafC.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCLeafC.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCLeafC.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.jointable.stringdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.LeafC;\n+\n+@Entity\n+@DiscriminatorValue(\"StrF\")\n+public class PIdJTSDMSCLeafC \n+extends PIdJTSDMSCMappedSuperclass implements LeafC {\n+    private String leafCData;\n+    \n+    public String getLeafCData() \n+    {\n+        return leafCData;\n+    }\n+    \n+    public void setLeafCData(String leafCData) {\n+        this.leafCData = leafCData;\n+    }\n+}"},{"sha":"bb21f5607606b534d36f457fc7db8fff7a0cac33","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCLeafD1.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCLeafD1.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCLeafD1.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCLeafD1.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.jointable.stringdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    LeafD1;\n+\n+@Entity\n+@DiscriminatorValue(\"StrH\")\n+public class PIdJTSDMSCLeafD1 \n+extends PIdJTSDMSCEntityD implements LeafD1 {\n+    private String leafD1Data;\n+    \n+    public String getLeafD1Data() {\n+        return leafD1Data;\n+    }\n+    public void setLeafD1Data(String leafD1Data) {\n+        this.leafD1Data = leafD1Data;\n+    }\n+}"},{"sha":"989ab7db5f3eea3bf574c49d58132d962364d60b","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCLeafD2.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCLeafD2.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCLeafD2.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCLeafD2.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.jointable.stringdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    LeafD2;\n+\n+@Entity\n+@DiscriminatorValue(\"StrI\")\n+public class PIdJTSDMSCLeafD2 \n+extends PIdJTSDMSCEntityD implements LeafD2 {\n+    private String leafD2Data;\n+    \n+    public String getLeafD2Data() {\n+        return leafD2Data;\n+    }\n+    public void setLeafD2Data(String leafD2Data) {\n+        this.leafD2Data = leafD2Data;\n+    }\n+}"},{"sha":"af981bfb12b3003a5191c75422feb1b3bc146e5b","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCMappedSuperclass.java","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCMappedSuperclass.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCMappedSuperclass.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCMappedSuperclass.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.jointable.stringdiscriminator;\n+\n+import javax.persistence.MappedSuperclass;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.MSC;\n+\n+@MappedSuperclass\n+public class PIdJTSDMSCMappedSuperclass \n+extends PIdJTSDMSCRootEntity implements MSC {\n+    private String mappedSuperclassData;\n+    \n+    public String getMappedSuperclassData() {\n+        return mappedSuperclassData;\n+    }\n+    \n+    public void setMappedSuperclassData(String mappedSuperclassData) {\n+        this.mappedSuperclassData = mappedSuperclassData;\n+    }\n+}"},{"sha":"0eb40fce7fc29f36501d82001e1a8efb1c2bcd7b","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCRootEntity.java","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCRootEntity.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCRootEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/jointable/stringdiscriminator/PIdJTSDMSCRootEntity.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.jointable.stringdiscriminator;\n+\n+import javax.persistence.DiscriminatorColumn;\n+import javax.persistence.DiscriminatorType;\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+import javax.persistence.Inheritance;\n+import javax.persistence.InheritanceType;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    PrimitiveIDMappedSuperclass;\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    RootEntity;\n+\n+@Entity\n+@Inheritance(strategy=InheritanceType.JOINED)\n+@DiscriminatorColumn(name=\"TYPE\", discriminatorType=DiscriminatorType.STRING)\n+@DiscriminatorValue(\"StrA\")\n+public class PIdJTSDMSCRootEntity \n+    extends PrimitiveIDMappedSuperclass implements RootEntity {\n+    private String rootEntityData;\n+    \n+    public String getRootEntityData() {\n+        return rootEntityData;\n+    }\n+    public void setRootEntityData(String rootEntityData) {\n+        this.rootEntityData = rootEntityData;\n+    }\n+}"},{"sha":"2edbe0403f33c37b815105d2017671d6673354cf","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCEntityB.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCEntityB.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCEntityB.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCEntityB.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.singletable.chardiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    EntityB;\n+\n+@Entity\n+@DiscriminatorValue(\"C\")\n+public class PIdSTCDMSCEntityB \n+extends PIdSTCDMSCRootEntity implements EntityB {\n+    private String entityBData;\n+    \n+    public String getEntityBData() {\n+        return entityBData;\n+    }\n+    public void setEntityBData(String entityBData) {\n+        this.entityBData = entityBData;\n+    }\n+}"},{"sha":"f27f2e8ac1ddcdaf867182e8df4d486e4d1847e9","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCEntityD.java","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCEntityD.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCEntityD.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCEntityD.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.singletable.chardiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    EntityD;\n+@Entity\n+@DiscriminatorValue(\"G\")\n+public class PIdSTCDMSCEntityD \n+extends PIdSTCDMSCMappedSuperclass implements EntityD {\n+private String entityDData;\n+    \n+    public String getEntityDData() {\n+        return entityDData;\n+    }\n+    public void setEntityDData(String entityDData) {\n+        this.entityDData = entityDData;\n+    }\n+}"},{"sha":"49922316ecd5798e629e316edb21d7409b44d62c","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCLeafA.java","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCLeafA.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCLeafA.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCLeafA.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.singletable.chardiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.LeafA;\n+\n+@Entity\n+@DiscriminatorValue(\"B\")\n+public class PIdSTCDMSCLeafA \n+extends PIdSTCDMSCRootEntity implements LeafA {\n+    private String leafAData;\n+    \n+    public String getLeafAData() \n+    {\n+        return leafAData;\n+    }\n+    \n+    public void setLeafAData(String leafAData) {\n+        this.leafAData = leafAData;\n+    }\n+}"},{"sha":"edaca7f707093b1735a624e308be4e81757436bb","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCLeafB1.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCLeafB1.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCLeafB1.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCLeafB1.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.singletable.chardiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    LeafB1;\n+\n+@Entity\n+@DiscriminatorValue(\"D\")\n+public class PIdSTCDMSCLeafB1 \n+extends PIdSTCDMSCEntityB implements LeafB1 {\n+    private String leafB1Data;\n+    \n+    public String getLeafB1Data() {\n+        return leafB1Data;\n+    }\n+    public void setLeafB1Data(String leafB1Data) {\n+        this.leafB1Data = leafB1Data;\n+    }\n+}"},{"sha":"cfe28e6848e341bdba7fdd7effaa371d937cb18c","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCLeafB2.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCLeafB2.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCLeafB2.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCLeafB2.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.singletable.chardiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    LeafB2;\n+\n+@Entity\n+@DiscriminatorValue(\"E\")\n+public class PIdSTCDMSCLeafB2\n+extends PIdSTCDMSCEntityB implements LeafB2 {\n+private String leafB2Data;\n+    \n+    public String getLeafB2Data() {\n+        return leafB2Data;\n+    }\n+    public void setLeafB2Data(String leafB2Data) {\n+        this.leafB2Data = leafB2Data;\n+    }\n+}"},{"sha":"0c46e45b36605ed3083cf2ce1a6f4a284dfe2fc9","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCLeafC.java","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCLeafC.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCLeafC.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCLeafC.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.singletable.chardiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.LeafC;\n+\n+@Entity\n+@DiscriminatorValue(\"F\")\n+public class PIdSTCDMSCLeafC \n+extends PIdSTCDMSCMappedSuperclass implements LeafC {\n+    private String leafCData;\n+    \n+    public String getLeafCData() \n+    {\n+        return leafCData;\n+    }\n+    \n+    public void setLeafCData(String leafCData) {\n+        this.leafCData = leafCData;\n+    }\n+}"},{"sha":"68fbe80a0daf30965eb3ec172eb8097d5d41e560","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCLeafD1.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCLeafD1.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCLeafD1.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCLeafD1.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.singletable.chardiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    LeafD1;\n+\n+@Entity\n+@DiscriminatorValue(\"H\")\n+public class PIdSTCDMSCLeafD1 \n+extends PIdSTCDMSCEntityD implements LeafD1 {\n+    private String leafD1Data;\n+    \n+    public String getLeafD1Data() {\n+        return leafD1Data;\n+    }\n+    public void setLeafD1Data(String leafD1Data) {\n+        this.leafD1Data = leafD1Data;\n+    }\n+}"},{"sha":"45813b0848a1147a1a6a3d88a0da8d552875c2c8","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCLeafD2.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCLeafD2.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCLeafD2.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCLeafD2.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.singletable.chardiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    LeafD2;\n+\n+@Entity\n+@DiscriminatorValue(\"I\")\n+public class PIdSTCDMSCLeafD2 \n+extends PIdSTCDMSCEntityD implements LeafD2 {\n+    private String leafD2Data;\n+    \n+    public String getLeafD2Data() {\n+        return leafD2Data;\n+    }\n+    public void setLeafD2Data(String leafD2Data) {\n+        this.leafD2Data = leafD2Data;\n+    }\n+}"},{"sha":"4300029ea5d75fa01f96371e093637d07365be44","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCMappedSuperclass.java","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCMappedSuperclass.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCMappedSuperclass.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCMappedSuperclass.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.singletable.chardiscriminator;\n+\n+import javax.persistence.MappedSuperclass;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.MSC;\n+\n+@MappedSuperclass\n+public class PIdSTCDMSCMappedSuperclass \n+extends PIdSTCDMSCRootEntity implements MSC {\n+    private String mappedSuperclassData;\n+    \n+    public String getMappedSuperclassData() {\n+        return mappedSuperclassData;\n+    }\n+    \n+    public void setMappedSuperclassData(String mappedSuperclassData) {\n+        this.mappedSuperclassData = mappedSuperclassData;\n+    }\n+}"},{"sha":"4876a1e1a15c0a286b91c4a4f93b016675ee58d7","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCRootEntity.java","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCRootEntity.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCRootEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/chardiscriminator/PIdSTCDMSCRootEntity.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+primitiveidentity.singletable.chardiscriminator;\n+\n+import javax.persistence.DiscriminatorColumn;\n+import javax.persistence.DiscriminatorType;\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+import javax.persistence.Inheritance;\n+import javax.persistence.InheritanceType;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    PrimitiveIDMappedSuperclass;\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    RootEntity;\n+\n+@Entity\n+@Inheritance(strategy=InheritanceType.SINGLE_TABLE)\n+@DiscriminatorColumn(name=\"TYPE\", discriminatorType=DiscriminatorType.CHAR)\n+@DiscriminatorValue(\"A\")\n+public class PIdSTCDMSCRootEntity \n+    extends PrimitiveIDMappedSuperclass implements RootEntity {\n+    private String rootEntityData;\n+    \n+    public String getRootEntityData() {\n+        return rootEntityData;\n+    }\n+    public void setRootEntityData(String rootEntityData) {\n+        this.rootEntityData = rootEntityData;\n+    }\n+}"},{"sha":"cdb57cca846e798ed8cf65ddce6a2710d0853f79","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCEntityB.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCEntityB.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCEntityB.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCEntityB.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.intdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    EntityB;\n+\n+@Entity\n+@DiscriminatorValue(\"3\")\n+public class PIdSTIDMSCEntityB \n+extends PIdSTIDMSCRootEntity implements EntityB {\n+    private String entityBData;\n+    \n+    public String getEntityBData() {\n+        return entityBData;\n+    }\n+    public void setEntityBData(String entityBData) {\n+        this.entityBData = entityBData;\n+    }\n+}"},{"sha":"73b8f1ca4aedcae7b0f1a5096faf26bc6f008ac4","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCEntityD.java","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCEntityD.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCEntityD.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCEntityD.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.intdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    EntityD;\n+@Entity\n+@DiscriminatorValue(\"7\")\n+public class PIdSTIDMSCEntityD \n+extends PIdSTIDMSCMappedSuperclass implements EntityD {\n+private String entityDData;\n+    \n+    public String getEntityDData() {\n+        return entityDData;\n+    }\n+    public void setEntityDData(String entityDData) {\n+        this.entityDData = entityDData;\n+    }\n+}"},{"sha":"7d21cc2413a0914643201bb6f7f99963753067f0","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCLeafA.java","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCLeafA.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCLeafA.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCLeafA.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.intdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.LeafA;\n+\n+@Entity\n+@DiscriminatorValue(\"2\")\n+public class PIdSTIDMSCLeafA \n+extends PIdSTIDMSCRootEntity implements LeafA {\n+    private String leafAData;\n+    \n+    public String getLeafAData() \n+    {\n+        return leafAData;\n+    }\n+    \n+    public void setLeafAData(String leafAData) {\n+        this.leafAData = leafAData;\n+    }\n+}"},{"sha":"264829fedaaeaef53ec2b0c9e9605c5b028ba02d","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCLeafB1.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCLeafB1.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCLeafB1.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCLeafB1.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.intdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    LeafB1;\n+\n+@Entity\n+@DiscriminatorValue(\"4\")\n+public class PIdSTIDMSCLeafB1 \n+extends PIdSTIDMSCEntityB implements LeafB1 {\n+    private String leafB1Data;\n+    \n+    public String getLeafB1Data() {\n+        return leafB1Data;\n+    }\n+    public void setLeafB1Data(String leafB1Data) {\n+        this.leafB1Data = leafB1Data;\n+    }\n+}"},{"sha":"a7a58b74e87a3d69d3c036647ee0f9eb67fcea9d","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCLeafB2.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCLeafB2.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCLeafB2.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCLeafB2.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.intdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    LeafB2;\n+\n+@Entity\n+@DiscriminatorValue(\"5\")\n+public class PIdSTIDMSCLeafB2\n+extends PIdSTIDMSCEntityB implements LeafB2 {\n+private String leafB2Data;\n+    \n+    public String getLeafB2Data() {\n+        return leafB2Data;\n+    }\n+    public void setLeafB2Data(String leafB2Data) {\n+        this.leafB2Data = leafB2Data;\n+    }\n+}"},{"sha":"505ac495406a7a236d05b676db015fb7dc8330ce","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCLeafC.java","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCLeafC.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCLeafC.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCLeafC.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.intdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.LeafC;\n+\n+@Entity\n+@DiscriminatorValue(\"6\")\n+public class PIdSTIDMSCLeafC \n+extends PIdSTIDMSCMappedSuperclass implements LeafC {\n+    private String leafCData;\n+    \n+    public String getLeafCData() \n+    {\n+        return leafCData;\n+    }\n+    \n+    public void setLeafCData(String leafCData) {\n+        this.leafCData = leafCData;\n+    }\n+}"},{"sha":"c5faec12757c947e9a4be8ecea4c1c8b0009fa3e","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCLeafD1.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCLeafD1.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCLeafD1.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCLeafD1.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.intdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    LeafD1;\n+\n+@Entity\n+@DiscriminatorValue(\"8\")\n+public class PIdSTIDMSCLeafD1 \n+extends PIdSTIDMSCEntityD implements LeafD1 {\n+    private String leafD1Data;\n+    \n+    public String getLeafD1Data() {\n+        return leafD1Data;\n+    }\n+    public void setLeafD1Data(String leafD1Data) {\n+        this.leafD1Data = leafD1Data;\n+    }\n+}"},{"sha":"ba3d3ffee1b901afa5f5e720917c588a0f04c7e9","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCLeafD2.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCLeafD2.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCLeafD2.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCLeafD2.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.intdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    LeafD2;\n+\n+@Entity\n+@DiscriminatorValue(\"9\")\n+public class PIdSTIDMSCLeafD2 \n+extends PIdSTIDMSCEntityD implements LeafD2 {\n+    private String leafD2Data;\n+    \n+    public String getLeafD2Data() {\n+        return leafD2Data;\n+    }\n+    public void setLeafD2Data(String leafD2Data) {\n+        this.leafD2Data = leafD2Data;\n+    }\n+}"},{"sha":"c3ec42cc260ede06328efb1899566af3a7d7e4e1","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCMappedSuperclass.java","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCMappedSuperclass.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCMappedSuperclass.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCMappedSuperclass.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.intdiscriminator;\n+\n+import javax.persistence.MappedSuperclass;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.MSC;\n+\n+@MappedSuperclass\n+public class PIdSTIDMSCMappedSuperclass \n+extends PIdSTIDMSCRootEntity implements MSC {\n+    private String mappedSuperclassData;\n+    \n+    public String getMappedSuperclassData() {\n+        return mappedSuperclassData;\n+    }\n+    \n+    public void setMappedSuperclassData(String mappedSuperclassData) {\n+        this.mappedSuperclassData = mappedSuperclassData;\n+    }\n+}"},{"sha":"507b5e784c1163ecdbf50fe1646cb7c70c02bc94","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCRootEntity.java","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCRootEntity.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCRootEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/intdiscriminator/PIdSTIDMSCRootEntity.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.intdiscriminator;\n+\n+import javax.persistence.DiscriminatorColumn;\n+import javax.persistence.DiscriminatorType;\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+import javax.persistence.Inheritance;\n+import javax.persistence.InheritanceType;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    PrimitiveIDMappedSuperclass;\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    RootEntity;\n+\n+@Entity\n+@Inheritance(strategy=InheritanceType.SINGLE_TABLE)\n+@DiscriminatorColumn(name=\"TYPE\", discriminatorType=DiscriminatorType.INTEGER)\n+@DiscriminatorValue(\"1\")\n+public class PIdSTIDMSCRootEntity \n+    extends PrimitiveIDMappedSuperclass implements RootEntity {\n+    private String rootEntityData;\n+    \n+    public String getRootEntityData() {\n+        return rootEntityData;\n+    }\n+    public void setRootEntityData(String rootEntityData) {\n+        this.rootEntityData = rootEntityData;\n+    }\n+}"},{"sha":"d7c78ccc9097b7176ebd3da4419df73e33a55224","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCEntityB.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCEntityB.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCEntityB.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCEntityB.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.stringdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    EntityB;\n+\n+@Entity\n+@DiscriminatorValue(\"StrC\")\n+public class PIdSTSDMSCEntityB \n+extends PIdSTSDMSCRootEntity implements EntityB {\n+    private String entityBData;\n+    \n+    public String getEntityBData() {\n+        return entityBData;\n+    }\n+    public void setEntityBData(String entityBData) {\n+        this.entityBData = entityBData;\n+    }\n+}"},{"sha":"b7f06466a0bb9b7c477f0a2dd23bc20d241452de","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCEntityD.java","status":"added","additions":40,"deletions":0,"changes":40,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCEntityD.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCEntityD.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCEntityD.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.stringdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    EntityD;\n+@Entity\n+@DiscriminatorValue(\"StrG\")\n+public class PIdSTSDMSCEntityD \n+extends PIdSTSDMSCMappedSuperclass implements EntityD {\n+private String entityDData;\n+    \n+    public String getEntityDData() {\n+        return entityDData;\n+    }\n+    public void setEntityDData(String entityDData) {\n+        this.entityDData = entityDData;\n+    }\n+}"},{"sha":"88fff818d5c9021c6d60a6607a46f7e1eb79ed20","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCLeafA.java","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCLeafA.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCLeafA.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCLeafA.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.stringdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.LeafA;\n+\n+@Entity\n+@DiscriminatorValue(\"StrB\")\n+public class PIdSTSDMSCLeafA \n+extends PIdSTSDMSCRootEntity implements LeafA {\n+    private String leafAData;\n+    \n+    public String getLeafAData() \n+    {\n+        return leafAData;\n+    }\n+    \n+    public void setLeafAData(String leafAData) {\n+        this.leafAData = leafAData;\n+    }\n+}"},{"sha":"6b54e698a784640ffc58e138a733babb583c0049","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCLeafB1.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCLeafB1.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCLeafB1.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCLeafB1.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.stringdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    LeafB1;\n+\n+@Entity\n+@DiscriminatorValue(\"StrD\")\n+public class PIdSTSDMSCLeafB1 \n+extends PIdSTSDMSCEntityB implements LeafB1 {\n+    private String leafB1Data;\n+    \n+    public String getLeafB1Data() {\n+        return leafB1Data;\n+    }\n+    public void setLeafB1Data(String leafB1Data) {\n+        this.leafB1Data = leafB1Data;\n+    }\n+}"},{"sha":"403048f86ccc027cb767aa9777ba083667d41ac6","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCLeafB2.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCLeafB2.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCLeafB2.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCLeafB2.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.stringdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    LeafB2;\n+\n+@Entity\n+@DiscriminatorValue(\"StrE\")\n+public class PIdSTSDMSCLeafB2\n+extends PIdSTSDMSCEntityB implements LeafB2 {\n+private String leafB2Data;\n+    \n+    public String getLeafB2Data() {\n+        return leafB2Data;\n+    }\n+    public void setLeafB2Data(String leafB2Data) {\n+        this.leafB2Data = leafB2Data;\n+    }\n+}"},{"sha":"75282a9ded18bae75a0837d73c37cd490c28ca00","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCLeafC.java","status":"added","additions":42,"deletions":0,"changes":42,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCLeafC.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCLeafC.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCLeafC.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.stringdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.LeafC;\n+\n+@Entity\n+@DiscriminatorValue(\"StrF\")\n+public class PIdSTSDMSCLeafC \n+extends PIdSTSDMSCMappedSuperclass implements LeafC {\n+    private String leafCData;\n+    \n+    public String getLeafCData() \n+    {\n+        return leafCData;\n+    }\n+    \n+    public void setLeafCData(String leafCData) {\n+        this.leafCData = leafCData;\n+    }\n+}"},{"sha":"4f3ba6af888077ee9aed644675b6dfd0474f793c","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCLeafD1.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCLeafD1.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCLeafD1.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCLeafD1.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.stringdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    LeafD1;\n+\n+@Entity\n+@DiscriminatorValue(\"StrH\")\n+public class PIdSTSDMSCLeafD1 \n+extends PIdSTSDMSCEntityD implements LeafD1 {\n+    private String leafD1Data;\n+    \n+    public String getLeafD1Data() {\n+        return leafD1Data;\n+    }\n+    public void setLeafD1Data(String leafD1Data) {\n+        this.leafD1Data = leafD1Data;\n+    }\n+}"},{"sha":"624151f065d1cdb7ccb2410c690e50d35ebe1ca0","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCLeafD2.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCLeafD2.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCLeafD2.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCLeafD2.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.stringdiscriminator;\n+\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    LeafD2;\n+\n+@Entity\n+@DiscriminatorValue(\"StrI\")\n+public class PIdSTSDMSCLeafD2 \n+extends PIdSTSDMSCEntityD implements LeafD2 {\n+    private String leafD2Data;\n+    \n+    public String getLeafD2Data() {\n+        return leafD2Data;\n+    }\n+    public void setLeafD2Data(String leafD2Data) {\n+        this.leafD2Data = leafD2Data;\n+    }\n+}"},{"sha":"3751719f7eec329227c6d7cc3c00f8640812176a","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCMappedSuperclass.java","status":"added","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCMappedSuperclass.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCMappedSuperclass.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCMappedSuperclass.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.stringdiscriminator;\n+\n+import javax.persistence.MappedSuperclass;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.MSC;\n+\n+@MappedSuperclass\n+public class PIdSTSDMSCMappedSuperclass \n+extends PIdSTSDMSCRootEntity implements MSC {\n+    private String mappedSuperclassData;\n+    \n+    public String getMappedSuperclassData() {\n+        return mappedSuperclassData;\n+    }\n+    \n+    public void setMappedSuperclassData(String mappedSuperclassData) {\n+        this.mappedSuperclassData = mappedSuperclassData;\n+    }\n+}"},{"sha":"5850d32536642a353a0bbe3e1f10a103cd0fffc6","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCRootEntity.java","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCRootEntity.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCRootEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/idmsc/primitiveidentity/singletable/stringdiscriminator/PIdSTSDMSCRootEntity.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    primitiveidentity.singletable.stringdiscriminator;\n+\n+import javax.persistence.DiscriminatorColumn;\n+import javax.persistence.DiscriminatorType;\n+import javax.persistence.DiscriminatorValue;\n+import javax.persistence.Entity;\n+import javax.persistence.Inheritance;\n+import javax.persistence.InheritanceType;\n+\n+import org.apache.openjpa.persistence.inheritance.entities.idmsc.\n+    PrimitiveIDMappedSuperclass;\n+import org.apache.openjpa.persistence.inheritance.entities.testinterfaces.\n+    RootEntity;\n+\n+@Entity\n+@Inheritance(strategy=InheritanceType.SINGLE_TABLE)\n+@DiscriminatorColumn(name=\"TYPE\", discriminatorType=DiscriminatorType.STRING)\n+@DiscriminatorValue(\"StrA\")\n+public class PIdSTSDMSCRootEntity \n+    extends PrimitiveIDMappedSuperclass implements RootEntity {\n+    private String rootEntityData;\n+    \n+    public String getRootEntityData() {\n+        return rootEntityData;\n+    }\n+    public void setRootEntityData(String rootEntityData) {\n+        this.rootEntityData = rootEntityData;\n+    }\n+}"},{"sha":"5dcb57e5fb7b9119ee0ee5e6c67294caeb416f25","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/EntityB.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/EntityB.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/EntityB.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/EntityB.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.testinterfaces;\n+\n+public interface EntityB extends RootEntity {\n+    public String getEntityBData();\n+    public void setEntityBData(String entityBData);\n+}"},{"sha":"f3a5e4e18d98a392b78ed599ed69baf4241a9ce6","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/EntityD.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/EntityD.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/EntityD.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/EntityD.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.testinterfaces;\n+\n+public interface EntityD {\n+    public String getEntityDData();\n+    public void setEntityDData(String entityDData);\n+}"},{"sha":"4f8e3268708cd5968bb392f57baeec545b84e549","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/LeafA.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/LeafA.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/LeafA.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/LeafA.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.testinterfaces;\n+\n+public interface LeafA extends RootEntity {\n+    public String getLeafAData();\n+    public void setLeafAData(String leafAData);\n+}"},{"sha":"4d41bbeec2bb6332383ab30f9afc727aa7886c69","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/LeafB1.java","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/LeafB1.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/LeafB1.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/LeafB1.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,26 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.testinterfaces;\n+\n+public interface LeafB1 extends EntityB {\n+    public String getLeafB1Data(); \n+    \n+    public void setLeafB1Data(String leafB1Data);\n+}"},{"sha":"8e16582f0c162c99f3489a1141a7524dfbf03053","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/LeafB2.java","status":"added","additions":26,"deletions":0,"changes":26,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/LeafB2.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/LeafB2.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/LeafB2.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,26 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.testinterfaces;\n+\n+public interface LeafB2 {\n+    public String getLeafB2Data(); \n+    \n+    public void setLeafB2Data(String leafB2Data);\n+}"},{"sha":"8cf612480e6e437aa1becf77f2e51b0ce7d9f69a","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/LeafC.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/LeafC.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/LeafC.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/LeafC.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.testinterfaces;\n+\n+public interface LeafC {\n+    public String getLeafCData();\n+    public void setLeafCData(String leafCData);\n+}"},{"sha":"8072af4d2bf6a71e5cf492e5130a5742548e819c","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/LeafD1.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/LeafD1.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/LeafD1.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/LeafD1.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.testinterfaces;\n+\n+public interface LeafD1 {\n+    public String getLeafD1Data();\n+    public void setLeafD1Data(String leafD1Data);\n+}"},{"sha":"3218e05d208b495a8607ac5ce7ef643566fec9c0","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/LeafD2.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/LeafD2.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/LeafD2.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/LeafD2.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.testinterfaces;\n+\n+public interface LeafD2 {\n+    public String getLeafD2Data();\n+    public void setLeafD2Data(String leafD2Data);\n+}"},{"sha":"a49c07cba04ec63db305d9eb951b366e5270392a","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/MSC.java","status":"added","additions":25,"deletions":0,"changes":25,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/MSC.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/MSC.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/MSC.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,25 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.testinterfaces;\n+\n+public interface MSC {\n+    public String getMappedSuperclassData();\n+    public void setMappedSuperclassData(String mappedSuperclassData);\n+}"},{"sha":"22801d784d060958982677057a83d4c759252da4","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/RootEntity.java","status":"added","additions":28,"deletions":0,"changes":28,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/RootEntity.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/RootEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/inheritance/entities/testinterfaces/RootEntity.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -0,0 +1,28 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.openjpa.persistence.inheritance.entities.testinterfaces;\n+\n+public interface RootEntity {\n+    public Object fetchId();    \n+    public void updateId(Object obj);\n+    \n+    public String getRootEntityData();\n+    public void setRootEntityData(String rootEntityData);\n+}"},{"sha":"aef6a728bc17c243a6efecb2ee6379c53014ba89","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -482,7 +482,10 @@ private ClassMetaData parseClassAnnotations() {\n             return null;\n \n         Entity entity = (Entity) _cls.getAnnotation(Entity.class);\n+        MappedSuperclass mapped = (MappedSuperclass)\n+        _cls.getAnnotation(MappedSuperclass.class);\n         if (isMetaDataMode()) {\n+            meta.setAbstract(mapped != null);\n             // while the spec only provides for embedded exclusive, it doesn't\n             // seem hard to support otherwise\n             if (entity == null)"},{"sha":"e467f0e010cba8309deb59c4e6f5acca3970944e","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","raw_url":"https://github.com/apache/openjpa/raw/f7463a50bf23090222878e01dd075d2a17055552/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java?ref=f7463a50bf23090222878e01dd075d2a17055552","patch":"@@ -786,6 +786,7 @@ protected boolean startClass(String elem, Attributes attrs)\n             String name = attrs.getValue(\"name\");\n             if (!StringUtils.isEmpty(name))\n                 meta.setTypeAlias(name);\n+            meta.setAbstract(mappedSuper);\n             meta.setEmbeddedOnly(mappedSuper || \"embeddable\".equals(elem));\n             if (mappedSuper)\n                 meta.setIdentityType(meta.ID_UNKNOWN);"}]}

