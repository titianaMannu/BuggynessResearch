{"sha":"f81e627b27627374ea9574c6811d51645ba7428a","node_id":"MDY6Q29tbWl0MjA2MzY0OmY4MWU2MjdiMjc2MjczNzRlYTk1NzRjNjgxMWQ1MTY0NWJhNzQyOGE=","commit":{"author":{"name":"Jeremy Bauer","email":"jrbauer@apache.org","date":"2009-05-13T15:08:49Z"},"committer":{"name":"Jeremy Bauer","email":"jrbauer@apache.org","date":"2009-05-13T15:08:49Z"},"message":"OPENJPA-932 Committing test updates contributed by Rick Curtis\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@774393 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"669111d4cb04dc4f3b9eb42352d015c3ea63c1d1","url":"https://api.github.com/repos/apache/openjpa/git/trees/669111d4cb04dc4f3b9eb42352d015c3ea63c1d1"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/f81e627b27627374ea9574c6811d51645ba7428a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/f81e627b27627374ea9574c6811d51645ba7428a","html_url":"https://github.com/apache/openjpa/commit/f81e627b27627374ea9574c6811d51645ba7428a","comments_url":"https://api.github.com/repos/apache/openjpa/commits/f81e627b27627374ea9574c6811d51645ba7428a/comments","author":null,"committer":null,"parents":[{"sha":"90ef23a4a914626953407955d2dc6f53527c6eca","url":"https://api.github.com/repos/apache/openjpa/commits/90ef23a4a914626953407955d2dc6f53527c6eca","html_url":"https://github.com/apache/openjpa/commit/90ef23a4a914626953407955d2dc6f53527c6eca"}],"stats":{"total":143,"additions":88,"deletions":55},"files":[{"sha":"57d511fcaaa42f2a189e956450497e1650d5eeac","filename":"openjpa-persistence/pom.xml","status":"modified","additions":0,"deletions":52,"changes":52,"blob_url":"https://github.com/apache/openjpa/blob/f81e627b27627374ea9574c6811d51645ba7428a/openjpa-persistence/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/f81e627b27627374ea9574c6811d51645ba7428a/openjpa-persistence/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/pom.xml?ref=f81e627b27627374ea9574c6811d51645ba7428a","patch":"@@ -54,32 +54,6 @@\n   \t\t    <id>jdk5-compiler</id>\n             <build>\n               <plugins>\n-\t\t\t\t\t<plugin>\n-\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n-\t\t\t\t\t\t<artifactId>maven-surefire-plugin</artifactId>\n-\t\t\t\t\t\t<configuration>\n-\t\t\t\t\t\t\t<additionalClasspathElements>\n-\t\t\t\t\t\t\t\t<additionalClasspathElement>${basedir}/target/test-classes/second-persistence.jar</additionalClasspathElement>\n-\t\t\t\t\t\t\t</additionalClasspathElements>\n-\t\t\t\t\t\t</configuration>\n-\t\t\t\t\t</plugin>\n-\t\t\t\t\t<plugin>\n-\t\t\t\t\t\t<artifactId>maven-antrun-plugin</artifactId>\n-\t\t\t\t\t\t<executions>\n-\t\t\t\t\t\t\t<execution>\n-\t\t\t\t\t\t\t\t<phase>test-compile</phase>\n-\t\t\t\t\t\t\t\t<configuration>\n-\t\t\t\t\t\t\t\t\t<tasks>\n-\t\t\t\t\t\t\t\t\t\t<jar destfile=\"${basedir}/target/test-classes/second-persistence.jar\"\n-\t\t\t\t\t\t\t\t\t\t\tbasedir=\"${basedir}/src/test/resources/second-persistence\" />\n-\t\t\t\t\t\t\t\t\t</tasks>\n-\t\t\t\t\t\t\t\t</configuration>\n-\t\t\t\t\t\t\t\t<goals>\n-\t\t\t\t\t\t\t\t\t<goal>run</goal>\n-\t\t\t\t\t\t\t\t</goals>\n-\t\t\t\t\t\t\t</execution>\n-\t\t\t\t\t\t</executions>\n-\t\t\t\t\t</plugin>\n \t\t        <plugin>\n \t\t    \t\t<groupId>org.apache.maven.plugins</groupId>\n \t\t    \t\t<artifactId>maven-compiler-plugin</artifactId>\n@@ -106,32 +80,6 @@\n             <build>\n               <plugins>\n \t\t\t\t\t<plugin>\n-\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n-\t\t\t\t\t\t<artifactId>maven-surefire-plugin</artifactId>\n-\t\t\t\t\t\t<configuration>\n-\t\t\t\t\t\t\t<additionalClasspathElements>\n-\t\t\t\t\t\t\t\t<additionalClasspathElement>${basedir}/target/test-classes/second-persistence.jar</additionalClasspathElement>\n-\t\t\t\t\t\t\t</additionalClasspathElements>\n-\t\t\t\t\t\t</configuration>\n-\t\t\t\t\t</plugin>\n-\t\t\t\t\t<plugin>\n-\t\t\t\t\t\t<artifactId>maven-antrun-plugin</artifactId>\n-\t\t\t\t\t\t<executions>\n-\t\t\t\t\t\t\t<execution>\n-\t\t\t\t\t\t\t\t<phase>test-compile</phase>\n-\t\t\t\t\t\t\t\t<configuration>\n-\t\t\t\t\t\t\t\t\t<tasks>\n-\t\t\t\t\t\t\t\t\t\t<jar destfile=\"${basedir}/target/test-classes/second-persistence.jar\"\n-\t\t\t\t\t\t\t\t\t\t\tbasedir=\"${basedir}/src/test/resources/second-persistence\" />\n-\t\t\t\t\t\t\t\t\t</tasks>\n-\t\t\t\t\t\t\t\t</configuration>\n-\t\t\t\t\t\t\t\t<goals>\n-\t\t\t\t\t\t\t\t\t<goal>run</goal>\n-\t\t\t\t\t\t\t\t</goals>\n-\t\t\t\t\t\t\t</execution>\n-\t\t\t\t\t\t</executions>\n-\t\t\t\t\t</plugin>\n-\t\t        <plugin>\n \t\t    \t\t<groupId>org.apache.maven.plugins</groupId>\n \t\t    \t\t<artifactId>maven-antrun-plugin</artifactId>\n \t\t            <executions>"},{"sha":"dfa1a2ec58cf5c2f53e1046997efa14b4a22b083","filename":"openjpa-persistence/src/test/java/org/apache/openjpa/persistence/TestPersistenceProductDerivation.java","status":"modified","additions":88,"deletions":3,"changes":91,"blob_url":"https://github.com/apache/openjpa/blob/f81e627b27627374ea9574c6811d51645ba7428a/openjpa-persistence/src/test/java/org/apache/openjpa/persistence/TestPersistenceProductDerivation.java","raw_url":"https://github.com/apache/openjpa/raw/f81e627b27627374ea9574c6811d51645ba7428a/openjpa-persistence/src/test/java/org/apache/openjpa/persistence/TestPersistenceProductDerivation.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/test/java/org/apache/openjpa/persistence/TestPersistenceProductDerivation.java?ref=f81e627b27627374ea9574c6811d51645ba7428a","patch":"@@ -18,19 +18,77 @@\n  */\n package org.apache.openjpa.persistence;\n \n+import java.io.BufferedInputStream;\n+import java.io.BufferedOutputStream;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileOutputStream;\n+import java.net.URL;\n+import java.net.URLClassLoader;\n import java.util.Arrays;\n import java.util.List;\n+import java.util.jar.JarEntry;\n+import java.util.jar.JarOutputStream;\n \n import junit.framework.TestCase;\n \n public class TestPersistenceProductDerivation extends TestCase {\n-\n+    private File sourceFile;\n+    private File targetFile;\n+    \n+    ClassLoader originalLoader = null;\n+    ClassLoader tempLoader = null;\n+    \n+    protected void setUp() throws Exception {\n+        super.setUp();\n+        String currentDir = System.getProperty(\"user.dir\");\n+        \n+        // openjpa-persistence/src/test/resources/second-persistence/\n+        //   META-INF/persistence.xml\n+        sourceFile = new File(currentDir + File.separator + \"src\"+File.separator \n+            + \"test\" + File.separator + \"resources\"  + File.separator \n+                + \"second-persistence\" + File.separator + \"META-INF\" \n+                + File.separator + \"persistence.xml\");\n+        \n+        // openjpa-persistence/target/test-classes/\n+        //   TestPersistenceProductDerivation_generated_(time_stamp).jar        \n+        targetFile = new File(currentDir + File.separator + \"target\" + \n+            File.separator + \"test-classes\" + File.separator + \n+            \"TestPersistenceProductDerivation_generated_\" +\n+            System.currentTimeMillis() + \".jar\");\n+        \n+        targetFile.deleteOnExit();        \n+        buildJar(sourceFile,targetFile);\n+        \n+        // Hold a reference to the current classloader so we can cleanup\n+        // when we're done.\n+        originalLoader = Thread.currentThread().getContextClassLoader();\n+        tempLoader = new TempUrlLoader(new URL[]{targetFile.toURI().toURL()}\n+            ,originalLoader);        \n+        Thread.currentThread().setContextClassLoader(tempLoader);\n+            \n+    }\n+    \n+    protected void tearDown() throws Exception {\n+        super.tearDown();\n+        // Restore the original classloader.\n+        Thread.currentThread().setContextClassLoader(originalLoader);\n+        \n+        // For whatever reason, this file won't ever delete. I searched around\n+        // and found numerous documented problems with deleting files. Perhaps\n+        // sometime in the future this problem will be fixed. For now it doesn't\n+        // really matter since we generate a new file every time.       \n+        if(targetFile.delete()==false){\n+            System.out.println(\"The file \" + targetFile + \" wasn't deleted.\");\n+        }\n+    }\n     /**\n-     * Added for OPENJPA-932. Verifies a ppd properly loads pu's from multiple archives.\n+     * Added for OPENJPA-932. Verifies a ppd properly loads pu's from multiple \n+     * archives.\n      * \n      * @throws Exception\n      */\n-    public void testGetAnchorsInResource()throws Exception{\n+    public void testGetAnchorsInResource()throws Exception {\n         \n         List<String> expectedPUs = Arrays.asList(\n             new String[]{\"pu_1\",\"pu_2\",\"pu_3\"});\n@@ -40,4 +98,31 @@ public void testGetAnchorsInResource()throws Exception{\n         \n         assertEquals(expectedPUs, actual);        \n     }\n+    \n+    private void buildJar(File sourceFile, File targetFile) throws Exception {\n+        \n+        JarOutputStream out = new JarOutputStream(\n+            new BufferedOutputStream(new FileOutputStream(targetFile)));\n+        \n+        BufferedInputStream in = \n+            new BufferedInputStream(new FileInputStream(sourceFile));\n+\n+        out.putNextEntry(new JarEntry(\"META-INF/\"));\n+        out.putNextEntry(new JarEntry(\"META-INF/persistence.xml\"));\n+        //write the xml to the jar\n+        byte[] buf = new byte[1024];\n+        int i;\n+        while ((i = in.read(buf)) != -1) {\n+          out.write(buf, 0, i);\n+        }\n+        \n+        out.close();\n+        in.close();        \n+    }\n+\n+    class TempUrlLoader extends URLClassLoader {\n+        public TempUrlLoader(URL[] urls, ClassLoader parent) {\n+            super(urls,parent);\n+        }\n+    }\n }"}]}

