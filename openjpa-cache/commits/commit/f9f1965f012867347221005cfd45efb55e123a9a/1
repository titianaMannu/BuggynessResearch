{"sha":"f9f1965f012867347221005cfd45efb55e123a9a","node_id":"MDY6Q29tbWl0MjA2MzY0OmY5ZjE5NjVmMDEyODY3MzQ3MjIxMDA1Y2ZkNDVlZmI1NWUxMjNhOWE=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2008-10-15T01:33:18Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2008-10-15T01:33:18Z"},"message":"OPENJPA-733 Merging Jeremy's change to 1.2.x\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/1.2.x@704763 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"1d56099d8c24399d35409acacb5afa28b83e4af9","url":"https://api.github.com/repos/apache/openjpa/git/trees/1d56099d8c24399d35409acacb5afa28b83e4af9"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/f9f1965f012867347221005cfd45efb55e123a9a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/f9f1965f012867347221005cfd45efb55e123a9a","html_url":"https://github.com/apache/openjpa/commit/f9f1965f012867347221005cfd45efb55e123a9a","comments_url":"https://api.github.com/repos/apache/openjpa/commits/f9f1965f012867347221005cfd45efb55e123a9a/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"ef1c3363a77164c8a06f02be1364b2aa45f549a0","url":"https://api.github.com/repos/apache/openjpa/commits/ef1c3363a77164c8a06f02be1364b2aa45f549a0","html_url":"https://github.com/apache/openjpa/commit/ef1c3363a77164c8a06f02be1364b2aa45f549a0"}],"stats":{"total":78,"additions":76,"deletions":2},"files":[{"sha":"d78f9784589343b910fe0ecd5b36e35a4ca09e7f","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/f9f1965f012867347221005cfd45efb55e123a9a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/f9f1965f012867347221005cfd45efb55e123a9a/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/StateManagerImpl.java?ref=f9f1965f012867347221005cfd45efb55e123a9a","patch":"@@ -311,7 +311,8 @@ protected void initialize(PersistenceCapable pc, PCState state) {\n \n         // initialize our state and add ourselves to the broker's cache\n         setPCState(state);\n-        if (_broker.getStateManagerImplById(getObjectId(), false) == null) {\n+        if ( _oid == null ||  \n+            _broker.getStateManagerImplById(_oid, false) == null) {\n         \t_broker.setStateManager(_id, this, BrokerImpl.STATUS_INIT);\n         }\n         if (state == PCState.PNEW)"},{"sha":"bfabe6691f7157b659534e001e418163ee509bfc","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbedded.java","status":"modified","additions":71,"deletions":0,"changes":71,"blob_url":"https://github.com/apache/openjpa/blob/f9f1965f012867347221005cfd45efb55e123a9a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbedded.java","raw_url":"https://github.com/apache/openjpa/raw/f9f1965f012867347221005cfd45efb55e123a9a/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbedded.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/embed/TestEmbedded.java?ref=f9f1965f012867347221005cfd45efb55e123a9a","patch":"@@ -18,7 +18,11 @@\n  */\r\n package org.apache.openjpa.persistence.embed;\r\n \r\n+import java.util.List;\r\n+\r\n import javax.persistence.EntityManager;\r\n+import javax.persistence.EntityTransaction;\r\n+\r\n import org.apache.openjpa.persistence.test.SingleEMFTestCase;\r\n \r\n public class TestEmbedded extends SingleEMFTestCase {\r\n@@ -43,4 +47,71 @@ public void testInsertEmbedded() {\n         em.getTransaction().commit();\r\n     }\r\n \r\n+    /*\r\n+     * This variation verifies that an embedded entity can be accessed after\r\n+     * being detached. An entity /w embedded is persisted and then queried. The\r\n+     * em is closed, detaching the entities, and then a getter is called on the\r\n+     * embeddeded. If the embedded is still attached (it should not be) an\r\n+     * IllegalStateException will be thrown.\r\n+     * \r\n+     * JIRA Ref: OPENJPA-733 Authors: Chris Tillman, Jeremy Bauer\r\n+     */\r\n+    public void testDetachedQueryEmbedded() {\r\n+        Address a = new Address();\r\n+        a.setStreetAddress(\"456 Main St\");\r\n+        a.setCity(\"New York\");\r\n+        a.setState(\"NY\");\r\n+        a.setZip(12955);\r\n+        Geocode g = new Geocode();\r\n+        g.setLatitude(1.0f);\r\n+        g.setLongtitude(2.0f);\r\n+        a.setGeocode(g);\r\n+\r\n+        persistAddress(a);\r\n+\r\n+        Address a2 =\r\n+            queryAddresses(\r\n+                \"select address from Address address\"\r\n+                    + \" where address.streetAddress = '456 Main St'\").get(0);\r\n+\r\n+        assertEquals(a2.getGeocode().getLatitude(), 1.0f);\r\n+    }\r\n+\r\n+    private void persistAddress(Address address) {\r\n+        final EntityManager em = emf.createEntityManager();\r\n+        final EntityTransaction tx = em.getTransaction();\r\n+\r\n+        tx.begin();\r\n+\r\n+        try {\r\n+            em.persist(address);\r\n+            tx.commit();\r\n+        } finally {\r\n+            if (tx.isActive()) {\r\n+                tx.rollback();\r\n+            }\r\n+            em.close();\r\n+        }\r\n+        assertEquals(address.getGeocode().getLatitude(), 1.0f);\r\n+    }\r\n+\r\n+    private List<Address> queryAddresses(String query) {\r\n+        final EntityManager em = emf.createEntityManager();\r\n+        final EntityTransaction tx = em.getTransaction();\r\n+\r\n+        tx.begin();\r\n+\r\n+        try {\r\n+            final List<Address> list =\r\n+                (List<Address>) em.createQuery(query).getResultList();\r\n+            tx.commit();\r\n+            return list;\r\n+        } finally {\r\n+            if (tx.isActive()) {\r\n+                tx.rollback();\r\n+            }\r\n+            em.close();\r\n+        }\r\n+    }\r\n+\r\n }\n\\ No newline at end of file"},{"sha":"1b8e35d0cf0070d767e2e68851b0a18d229bf0c3","filename":"openjpa-project/NOTICE.txt","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/f9f1965f012867347221005cfd45efb55e123a9a/openjpa-project/NOTICE.txt","raw_url":"https://github.com/apache/openjpa/raw/f9f1965f012867347221005cfd45efb55e123a9a/openjpa-project/NOTICE.txt","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/NOTICE.txt?ref=f9f1965f012867347221005cfd45efb55e123a9a","patch":"@@ -16,5 +16,7 @@ COPYRIGHT NOTICES\n     Sun Microsystems and licensed under the CDDL 1.0. The source code is\r\n     available at: https://glassfish.dev.java.net/source/browse/glassfish/\r\n \r\n-* OpenJPA includes software written by Miroslav Nachev\r\n+* OpenJPA includes software written by Miroslav Nachev.\r\n+\r\n+* OpenJPA uses test code written by Charles Tillman.\r\n \r"}]}

