{"sha":"fad6f352012ad403752eee463a5b6b3456fc0d74","node_id":"MDY6Q29tbWl0MjA2MzY0OmZhZDZmMzUyMDEyYWQ0MDM3NTJlZWU0NjNhNWI2YjM0NTZmYzBkNzQ=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-11-21T11:42:01Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2007-11-21T11:42:01Z"},"message":"Removing the XML types from the default test runs to reduce complexity of unit test executions and to speed up overall test execution time.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@597041 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a807e177afec6733ee49a80dbd9244e0b0a97ee9","url":"https://api.github.com/repos/apache/openjpa/git/trees/a807e177afec6733ee49a80dbd9244e0b0a97ee9"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/fad6f352012ad403752eee463a5b6b3456fc0d74","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/fad6f352012ad403752eee463a5b6b3456fc0d74","html_url":"https://github.com/apache/openjpa/commit/fad6f352012ad403752eee463a5b6b3456fc0d74","comments_url":"https://api.github.com/repos/apache/openjpa/commits/fad6f352012ad403752eee463a5b6b3456fc0d74/comments","author":null,"committer":null,"parents":[{"sha":"c231cc814fed7c904880c3bb396d5be31d8fe397","url":"https://api.github.com/repos/apache/openjpa/commits/c231cc814fed7c904880c3bb396d5be31d8fe397","html_url":"https://github.com/apache/openjpa/commit/c231cc814fed7c904880c3bb396d5be31d8fe397"}],"stats":{"total":84,"additions":68,"deletions":16},"files":[{"sha":"567fbefb627a418d47945b5d95aeda030b0333ee","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/test/PersistenceTestCase.java","status":"modified","additions":10,"deletions":2,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/fad6f352012ad403752eee463a5b6b3456fc0d74/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/test/PersistenceTestCase.java","raw_url":"https://github.com/apache/openjpa/raw/fad6f352012ad403752eee463a5b6b3456fc0d74/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/test/PersistenceTestCase.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/test/PersistenceTestCase.java?ref=fad6f352012ad403752eee463a5b6b3456fc0d74","patch":"@@ -56,7 +56,15 @@\n      * configuration values in the form key,value,key,value...\n      */\n     protected OpenJPAEntityManagerFactorySPI createEMF(Object... props) {\n-        return createNamedEMF(\"test\", props);\n+        return createNamedEMF(getPersistenceUnitName(), props);\n+    }\n+\n+    /**\n+     * The name of the persistence unit that this test class should use\n+     * by default. This defaults to \"test\".\n+     */\n+    protected String getPersistenceUnitName() {\n+        return \"test\";\n     }\n \n     /**\n@@ -83,7 +91,7 @@ protected OpenJPAEntityManagerFactorySPI createNamedEMF(String pu,\n                     + \"SchemaAction='add,deleteTableContents')\");\n             } else if (props[i] instanceof Class)\n                 types.add((Class) props[i]);\n-            else\n+            else if (props[i] != null)\n                 prop = true;\n         }\n "},{"sha":"96c3baa001a38b131fa81f769d6560461d90139c","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/TestSimpleXmlEntity.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/fad6f352012ad403752eee463a5b6b3456fc0d74/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/TestSimpleXmlEntity.java","raw_url":"https://github.com/apache/openjpa/raw/fad6f352012ad403752eee463a5b6b3456fc0d74/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/TestSimpleXmlEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/TestSimpleXmlEntity.java?ref=fad6f352012ad403752eee463a5b6b3456fc0d74","patch":"@@ -25,7 +25,11 @@\n     extends SingleEMTestCase {\n \n     public void setUp() {\n-        setUp(SimpleXmlEntity.class);\n+        setUp(CLEAR_TABLES);\n+    }\n+\n+    protected String getPersistenceUnitName() {\n+        return \"xml-persistence-unit\";\n     }\n \n     public void testId() {"},{"sha":"155993f8bece5c5e0167279eb49961db619260fb","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/TestXmlOverrideEntity.java","status":"modified","additions":37,"deletions":2,"changes":39,"blob_url":"https://github.com/apache/openjpa/blob/fad6f352012ad403752eee463a5b6b3456fc0d74/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/TestXmlOverrideEntity.java","raw_url":"https://github.com/apache/openjpa/raw/fad6f352012ad403752eee463a5b6b3456fc0d74/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/TestXmlOverrideEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/xml/TestXmlOverrideEntity.java?ref=fad6f352012ad403752eee463a5b6b3456fc0d74","patch":"@@ -20,16 +20,51 @@\n \n import javax.persistence.EntityManager;\n \n+import org.apache.openjpa.enhance.PCRegistry;\n+import org.apache.openjpa.enhance.PersistenceCapable;\n import org.apache.openjpa.jdbc.meta.ClassMapping;\n import org.apache.openjpa.jdbc.meta.FieldMapping;\n import org.apache.openjpa.jdbc.schema.Column;\n+import org.apache.openjpa.meta.ClassMetaData;\n+import org.apache.openjpa.meta.MetaDataRepository;\n import org.apache.openjpa.persistence.InvalidStateException;\n+import org.apache.openjpa.persistence.JPAFacadeHelper;\n import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n \n public class TestXmlOverrideEntity extends SingleEMFTestCase {\n \n-    public void setUp() {\n-        setUp(XmlOverrideEntity.class);\n+    public void setUp() throws ClassNotFoundException {\n+        setUp(CLEAR_TABLES);\n+\n+        // make sure that XmlOverrideEntity is registered for our metadata tests\n+        Class.forName(XmlOverrideEntity.class.getName(), true,\n+            XmlOverrideEntity.class.getClassLoader());\n+    }\n+\n+    protected String getPersistenceUnitName() {\n+        return \"xml-persistence-unit\";\n+    }\n+\n+    public void testOverrideHappenedDuringEnhancement()\n+        throws ClassNotFoundException {\n+        // this mostly tests our test harness. Since XmlOverrideEntity\n+        // has annotation-based metadata, it is important that the first\n+        // PU in which it gets scanned-and-enhanced knows about overriding.\n+        assertTrue(PersistenceCapable.class.isAssignableFrom(\n+            XmlOverrideEntity.class));\n+        assertEquals(\"XmlOverride\",\n+            PCRegistry.getTypeAlias(XmlOverrideEntity.class));\n+    }\n+\n+    public void testOverriddenEntityName() {\n+        ClassMetaData meta = JPAFacadeHelper.getMetaData(emf,\n+            XmlOverrideEntity.class);\n+        assertEquals(\"XmlOverride\", meta.getTypeAlias());\n+        emf.createEntityManager().close();\n+        MetaDataRepository repo = emf.getConfiguration()\n+            .getMetaDataRepositoryInstance();\n+        assertEquals(meta, repo.getMetaData(\"XmlOverride\",\n+            XmlOverrideEntity.class.getClassLoader(), true));\n     }\n \n     /**"},{"sha":"aaadf3e1c51aa82b0dcc1eb9013200b47f2ece5f","filename":"openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","status":"modified","additions":16,"deletions":11,"changes":27,"blob_url":"https://github.com/apache/openjpa/blob/fad6f352012ad403752eee463a5b6b3456fc0d74/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/fad6f352012ad403752eee463a5b6b3456fc0d74/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml?ref=fad6f352012ad403752eee463a5b6b3456fc0d74","patch":"@@ -21,26 +21,31 @@\n     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n     version=\"1.0\">\n \n-    <persistence-unit name=\"test\">\n-        <!-- \n-        <provider>\n-            org.apache.openjpa.persistence.PersistenceProviderImpl\n-        </provider>\n-        -->\n-        <!--\n+    <persistence-unit name=\"xml-persistence-unit\">\n+        <description>\n             This needs to be listed because the OpenJPA test framework\n             does not provide any other means to incrementally enhance classes\n             for particular test cases, and the XML data must be available at\n             enhance time for XML data to get incorporated into PCRegistry.\n-        -->\n-        <mapping-file>org/apache/openjpa/persistence/xml/orm.xml</mapping-file>\n-        <!--\n+\n             In general, for persistent types that use annotations, you should\n             not list the persistent types here, but rather use the\n             PersistenceTestCase.setUp(Object...) method in your test case's\n             setUp() method, passing the Class objects for your persistent types\n             to that method.\n-        -->\n+\n+            This PU needs to be first because XmlOverrideEntity overrides the\n+            entity name, and that data is stored statically in the enhanced\n+            class.\n+        </description>\n+        <mapping-file>org/apache/openjpa/persistence/xml/orm.xml</mapping-file>\n+        <properties>\n+            <property name=\"openjpa.jdbc.SynchronizeMappings\"\n+                value=\"buildSchema(ForeignKeys=true)\"/>\n+        </properties>\n+    </persistence-unit>\n+\n+    <persistence-unit name=\"test\">\n         <properties>\n             <!--\n             These properties are instead passed via System properties"}]}

