{"sha":"fb2a45a739d463e21e76f16ce1b0db46b929a6b1","node_id":"MDY6Q29tbWl0MjA2MzY0OmZiMmE0NWE3MzlkNDYzZTIxZTc2ZjE2Y2UxYjBkYjQ2YjkyOWE2YjE=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2009-08-09T20:38:58Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2009-08-09T20:38:58Z"},"message":"OPENJPA-1234: \nAllowFailure checks for system property before running or logging exceptions from test methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@802587 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"4c73d43dac08052bc2d7a474708f8baa4fbba746","url":"https://api.github.com/repos/apache/openjpa/git/trees/4c73d43dac08052bc2d7a474708f8baa4fbba746"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/fb2a45a739d463e21e76f16ce1b0db46b929a6b1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/fb2a45a739d463e21e76f16ce1b0db46b929a6b1","html_url":"https://github.com/apache/openjpa/commit/fb2a45a739d463e21e76f16ce1b0db46b929a6b1","comments_url":"https://api.github.com/repos/apache/openjpa/commits/fb2a45a739d463e21e76f16ce1b0db46b929a6b1/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"3ec9136da70b2e1217f935c7011ad5099f47be5b","url":"https://api.github.com/repos/apache/openjpa/commits/3ec9136da70b2e1217f935c7011ad5099f47be5b","html_url":"https://github.com/apache/openjpa/commit/3ec9136da70b2e1217f935c7011ad5099f47be5b"}],"stats":{"total":57,"additions":43,"deletions":14},"files":[{"sha":"0bda0d5c435f1c64c652609f3b0855388af56b98","filename":"openjpa-integration/validation/src/test/java/org/apache/openjpa/integration/validation/SimpleEntity.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/fb2a45a739d463e21e76f16ce1b0db46b929a6b1/openjpa-integration/validation/src/test/java/org/apache/openjpa/integration/validation/SimpleEntity.java","raw_url":"https://github.com/apache/openjpa/raw/fb2a45a739d463e21e76f16ce1b0db46b929a6b1/openjpa-integration/validation/src/test/java/org/apache/openjpa/integration/validation/SimpleEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-integration/validation/src/test/java/org/apache/openjpa/integration/validation/SimpleEntity.java?ref=fb2a45a739d463e21e76f16ce1b0db46b929a6b1","patch":"@@ -57,7 +57,7 @@\n \n     @Id\n     @GeneratedValue\n-    @Column(name = \"ID\")\n+    @Column(name = \"ID\",columnDefinition=\"\")\n     private long id;\n \n     @Basic"},{"sha":"6b8f92c7b34079782086cb7ce31646cc78b1813a","filename":"openjpa-persistence-jdbc/pom.xml","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/fb2a45a739d463e21e76f16ce1b0db46b929a6b1/openjpa-persistence-jdbc/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/fb2a45a739d463e21e76f16ce1b0db46b929a6b1/openjpa-persistence-jdbc/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/pom.xml?ref=fb2a45a739d463e21e76f16ce1b0db46b929a6b1","patch":"@@ -41,6 +41,7 @@\n         <dbcp.args>MaxActive=${dbcp.maxActive},MaxIdle=${dbcp.maxIdle},MinIdle=${dbcp.minIdle},MaxWait=${dbcp.maxWait}</dbcp.args>\n         <derby.locks.waitTimeout>60</derby.locks.waitTimeout>        \n         <derby.locks.deadlockTimeout>5</derby.locks.deadlockTimeout>\n+        <tests.openjpa.allowfailure>ignore</tests.openjpa.allowfailure>\n     </properties>\n     <profiles>\n \n@@ -80,6 +81,10 @@\n                             <name>openjpa.ConnectionProperties</name>\n                             <value>DriverClassName=${connection.driver.name},Url=${connection.url},Username=${connection.username},Password=${connection.password},${dbcp.args}</value>\n                         </property>\n+                        <property>\n+                            <name>tests.openjpa.allowfailure</name>\n+                            <value>${tests.openjpa.allowfailure}</value>\n+                        </property>\n                     </systemProperties>\n                 </configuration>\n             </plugin>\n@@ -855,6 +860,10 @@\n                             <name>openjpa.ConnectionProperties</name>\n                             <value>DriverClassName=${connection.driver.name},Url=${connection.url},Username=${connection.username},Password=${connection.password},${dbcp.args}</value>\n                         </property>\n+                        <property>\n+                            <name>tests.openjpa.allowfailure</name>\n+                            <value>${tests.openjpa.allowfailure}</value>\n+                        </property>\n                     </systemProperties>\n                 </configuration>\n             </plugin>"},{"sha":"70335248e01ee72f8a18d12ce746970ae51fba84","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/test/PersistenceTestCase.java","status":"modified","additions":33,"deletions":13,"changes":46,"blob_url":"https://github.com/apache/openjpa/blob/fb2a45a739d463e21e76f16ce1b0db46b929a6b1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/test/PersistenceTestCase.java","raw_url":"https://github.com/apache/openjpa/raw/fb2a45a739d463e21e76f16ce1b0db46b929a6b1/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/test/PersistenceTestCase.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/test/PersistenceTestCase.java?ref=fb2a45a739d463e21e76f16ce1b0db46b929a6b1","patch":"@@ -66,6 +66,12 @@\n     public static final String RETAIN_DATA = \"Retain data after test run\";\n     private boolean retainDataOnTearDown; \n     protected boolean _fresh = false;\n+    \n+    public static String ALLOW_FAILURE_LOG = \"log\";\n+    public static String ALLOW_FAILURE_IGNORE = \"ignore\";\n+    public static String ALLOW_FAILURE_SYS_PROP= \"tests.openjpa.allowfailure\";\n+    \n+    private static String allowFailureConfig = System.getProperty(ALLOW_FAILURE_SYS_PROP, ALLOW_FAILURE_IGNORE);\n     /**\n      * Marker object you pass to {@link #setUp} to indicate that the\n      * database table rows should be cleared.\n@@ -469,21 +475,35 @@ public void printException(Throwable t, int tab) {\n      */\n     @Override\n     public void runBare() throws Throwable {\n-        if (!isRunsOnCurrentPlatform())\n+        if (!isRunsOnCurrentPlatform()) {\n             return;\n-        try {\n-            super.runBare();\n-        } catch (Throwable t) {\n-            AllowFailure allowFailure = getAllowFailure();\n-            if ( allowFailure != null && allowFailure.value()==true) {\n-                System.err.println(\"*** FAILED (but ignored): \" + this);\n-                System.err.println(\"***              Reason : \" \n-                    + allowFailure.message());\n-                System.err.println(\"Stacktrace of failure\");\n-                t.printStackTrace();\n-            } else {\n-                throw t;\n+        }\n+        runBare(getAllowFailure());\n+    }\n+    \n+    protected void runBare(AllowFailure allowFailureAnnotation) throws Throwable { \n+        boolean allowFailureValue = allowFailureAnnotation == null ? false : allowFailureAnnotation.value();\n+        \n+        if(allowFailureValue) { \n+            if(ALLOW_FAILURE_IGNORE.equalsIgnoreCase(allowFailureConfig)){ \n+                return; // skip this test\n             }\n+            else {\n+                try {\n+                    super.runBare();\n+                } catch (Throwable t) {\n+                    if (ALLOW_FAILURE_LOG.equalsIgnoreCase(allowFailureConfig)) {\n+                        System.err.println(\"*** FAILED (but ignored): \" + this);\n+                        System.err.println(\"***              Reason : \" + allowFailureAnnotation.message());\n+                        System.err.println(\"Stacktrace of failure\");\n+                        t.printStackTrace();\n+                    } else {\n+                        throw t;\n+                    }\n+                }\n+            }\n+        } else {\n+            super.runBare();\n         }\n     }\n     "}]}

