{"sha":"fb770599b09eb179ec9b9a9815941290468175e7","node_id":"MDY6Q29tbWl0MjA2MzY0OmZiNzcwNTk5YjA5ZWIxNzllYzliOWE5ODE1OTQxMjkwNDY4MTc1ZTc=","commit":{"author":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-11-09T23:55:41Z"},"committer":{"name":"A. Abram White","email":"awhite@apache.org","date":"2006-11-09T23:55:41Z"},"message":"Fix for deeply nested subqueries, and for the JPQL IN(<subquery>) construct.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@473140 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"920e2ef6c1963d52081477731eadbcb762daf300","url":"https://api.github.com/repos/apache/openjpa/git/trees/920e2ef6c1963d52081477731eadbcb762daf300"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/fb770599b09eb179ec9b9a9815941290468175e7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/fb770599b09eb179ec9b9a9815941290468175e7","html_url":"https://github.com/apache/openjpa/commit/fb770599b09eb179ec9b9a9815941290468175e7","comments_url":"https://api.github.com/repos/apache/openjpa/commits/fb770599b09eb179ec9b9a9815941290468175e7/comments","author":null,"committer":null,"parents":[{"sha":"fd57bd62ddb18cb8cd0f69185df0155d1b3a4794","url":"https://api.github.com/repos/apache/openjpa/commits/fd57bd62ddb18cb8cd0f69185df0155d1b3a4794","html_url":"https://github.com/apache/openjpa/commit/fd57bd62ddb18cb8cd0f69185df0155d1b3a4794"}],"stats":{"total":50,"additions":30,"deletions":20},"files":[{"sha":"e690b16f94ccafb08dda4896d14fc6fbbd30f653","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SQLBuffer.java","status":"modified","additions":25,"deletions":18,"changes":43,"blob_url":"https://github.com/apache/openjpa/blob/fb770599b09eb179ec9b9a9815941290468175e7/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SQLBuffer.java","raw_url":"https://github.com/apache/openjpa/raw/fb770599b09eb179ec9b9a9815941290468175e7/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SQLBuffer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SQLBuffer.java?ref=fb770599b09eb179ec9b9a9815941290468175e7","patch":"@@ -374,30 +374,15 @@ public List getParameters() {\n     public String getSQL() {\n         return getSQL(false);\n     }\n-\n+    \n     /**\n      * Returns the SQL for this buffer.\n      *\n      * @param replaceParams if true, then replace parameters with the\n      * actual parameter values\n      */\n     public String getSQL(boolean replaceParams) {\n-        if (_subsels != null && !_subsels.isEmpty()) {\n-            // add subsels backwards so that the stored insertion points of\n-            // later subsels remain valid\n-            Subselect sub;\n-            SQLBuffer buf;\n-            for (int i = _subsels.size() - 1; i >= 0; i--) {\n-                sub = (Subselect) _subsels.get(i);\n-                if (sub.count)\n-                    buf = sub.select.toSelectCount();\n-                else\n-                    buf = sub.select.toSelect(false, sub.fetch);\n-                append(buf, sub.sqlIndex, sub.paramIndex, false);\n-            }\n-            _subsels.clear();\n-        }\n-\n+        resolveSubselects();\n         String sql = _sql.toString();\n         if (!replaceParams || _params == null || _params.isEmpty())\n             return sql;\n@@ -423,6 +408,29 @@ else if (param instanceof String || param instanceof Character)\n         return buf.toString();\n     }\n \n+    /**\n+     * Resolve our delayed subselects.\n+     */\n+    private void resolveSubselects() {\n+        if (_subsels == null || _subsels.isEmpty())\n+            return;\n+\n+        // add subsels backwards so that the stored insertion points of\n+        // later subsels remain valid\n+        Subselect sub;\n+        SQLBuffer buf;\n+        for (int i = _subsels.size() - 1; i >= 0; i--) {\n+            sub = (Subselect) _subsels.get(i);\n+            if (sub.count)\n+                buf = sub.select.toSelectCount();\n+            else\n+                buf = sub.select.toSelect(false, sub.fetch);\n+            buf.resolveSubselects();\n+            append(buf, sub.sqlIndex, sub.paramIndex, false);\n+        }\n+        _subsels.clear();\n+    }\n+\n     /**\n      * Create and populate the parameters of a prepared statement using\n      * the SQL in this buffer.\n@@ -606,4 +614,3 @@ public Subselect clone(int sqlIndex, int paramIndex) {\n         }\n     }\n }\n-"},{"sha":"eeedcb12bd851644f4de6b006c274b8a38f55bf2","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/jpql/JPQLExpressionBuilder.java","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/fb770599b09eb179ec9b9a9815941290468175e7/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/jpql/JPQLExpressionBuilder.java","raw_url":"https://github.com/apache/openjpa/raw/fb770599b09eb179ec9b9a9815941290468175e7/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/jpql/JPQLExpressionBuilder.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/jpql/JPQLExpressionBuilder.java?ref=fb770599b09eb179ec9b9a9815941290468175e7","patch":"@@ -821,10 +821,14 @@ private Object eval(JPQLNode node) {\n \n                 while (inIterator.hasNext()) {\n                     val2 = getValue((JPQLNode) inIterator.next());\n-                    setImplicitTypes(val1, val2, null);\n+\n+                    // special case for <value> IN (<subquery>)\n+                    if (val2 instanceof Subquery && node.getChildCount() == 2)\n+                        return factory.contains(val2, val1); \n \n                     // this is currently a sequence of OR expressions, since we\n                     // do not have support for IN expressions\n+                    setImplicitTypes(val1, val2, null);\n                     if (inExp == null)\n                         inExp = factory.equal(val1, val2);\n                     else"},{"sha":"25fd3e9df7639c1a728fb8486f6e76214ea159ab","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Localizer.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/fb770599b09eb179ec9b9a9815941290468175e7/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Localizer.java","raw_url":"https://github.com/apache/openjpa/raw/fb770599b09eb179ec9b9a9815941290468175e7/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Localizer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Localizer.java?ref=fb770599b09eb179ec9b9a9815941290468175e7","patch":"@@ -86,7 +86,6 @@ public static Localizer forPackage(Class cls, Locale locale) {\n         String key = file + locale.toString();\n \n         // no locking; ok if bundle created multiple times\n-\n         // check for cached version\n         Localizer loc = (Localizer) _localizers.get(key);\n         if (loc != null)"}]}

