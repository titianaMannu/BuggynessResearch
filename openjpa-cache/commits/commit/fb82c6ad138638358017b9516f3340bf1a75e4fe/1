{"sha":"fb82c6ad138638358017b9516f3340bf1a75e4fe","node_id":"MDY6Q29tbWl0MjA2MzY0OmZiODJjNmFkMTM4NjM4MzU4MDE3Yjk1MTZmMzM0MGJmMWE3NWU0ZmU=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-11-16T22:23:09Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2009-11-16T22:23:09Z"},"message":"OPENJPA-1381: Ignore preapared query if lock mode changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@881011 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"333cfc87b7f77bddb60f6c1fe84006d25c650bfb","url":"https://api.github.com/repos/apache/openjpa/git/trees/333cfc87b7f77bddb60f6c1fe84006d25c650bfb"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/fb82c6ad138638358017b9516f3340bf1a75e4fe","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/fb82c6ad138638358017b9516f3340bf1a75e4fe","html_url":"https://github.com/apache/openjpa/commit/fb82c6ad138638358017b9516f3340bf1a75e4fe","comments_url":"https://api.github.com/repos/apache/openjpa/commits/fb82c6ad138638358017b9516f3340bf1a75e4fe/comments","author":null,"committer":null,"parents":[{"sha":"d9d6898558b809c0c630c0db869d4fe8f4ec61b4","url":"https://api.github.com/repos/apache/openjpa/commits/d9d6898558b809c0c630c0db869d4fe8f4ec61b4","html_url":"https://github.com/apache/openjpa/commit/d9d6898558b809c0c630c0db869d4fe8f4ec61b4"}],"stats":{"total":11,"additions":8,"deletions":3},"files":[{"sha":"bdf84cb9ad18954e645b2d4d538532bb0c3675d1","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/sqlcache/TestPreparedQueryCache.java","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/fb82c6ad138638358017b9516f3340bf1a75e4fe/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/sqlcache/TestPreparedQueryCache.java","raw_url":"https://github.com/apache/openjpa/raw/fb82c6ad138638358017b9516f3340bf1a75e4fe/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/sqlcache/TestPreparedQueryCache.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/sqlcache/TestPreparedQueryCache.java?ref=fb82c6ad138638358017b9516f3340bf1a75e4fe","patch":"@@ -751,8 +751,11 @@ public void testPreparedQueryIgnoredWhenLockModeIsSet() {\n         em.getTransaction().begin();\n         Query q2 = em.createQuery(jpql);\n         assertEquals(QueryLanguages.LANG_PREPARED_SQL, OpenJPAPersistence.cast(q2).getLanguage());\n+        LockModeType lmode1 = q2.getLockMode();\n         q2.setLockMode(LockModeType.OPTIMISTIC);\n+        LockModeType lmode2 = q2.getLockMode();\n         assertEquals(JPQLParser.LANG_JPQL, OpenJPAPersistence.cast(q2).getLanguage());\n+        assertFalse(lmode1.equals(lmode2));\n         List<Author> authors2 = q2.getResultList();\n         em.getTransaction().rollback();\n     }"},{"sha":"88031ad36d440db937dbcc102bd193891020525e","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryImpl.java","status":"modified","additions":5,"deletions":3,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/fb82c6ad138638358017b9516f3340bf1a75e4fe/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryImpl.java","raw_url":"https://github.com/apache/openjpa/raw/fb82c6ad138638358017b9516f3340bf1a75e4fe/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/QueryImpl.java?ref=fb82c6ad138638358017b9516f3340bf1a75e4fe","patch":"@@ -77,7 +77,6 @@\n @SuppressWarnings(\"serial\")\n public class QueryImpl<X> implements OpenJPAQuerySPI<X>, Serializable {\n \n-    private static final Object[] EMPTY_ARRAY = new Object[0];\n     private static final Localizer _loc = Localizer.forPackage(QueryImpl.class);\n \n \tprivate DelegatingQuery _query;\n@@ -86,7 +85,6 @@\n \n     private Map<Parameter<?>, Object> _boundParams;\n     private Map<Object, Parameter<?>> _declaredParams;\n-    private Class<?> _paramKeyType;\n \tprivate String _id;\n     private transient ReentrantLock _lock = null;\n \tprivate final HintHandler _hintHandler;\n@@ -377,7 +375,11 @@ public boolean isNative() {\n \t */\n \tvoid assertJPQLOrCriteriaQuery() {\n         String language = getLanguage();\n-        if (!(JPQLParser.LANG_JPQL.equals(language) || CriteriaBuilderImpl.LANG_CRITERIA.equals(language))) {\n+        if (JPQLParser.LANG_JPQL.equals(language) \n+         || QueryLanguages.LANG_PREPARED_SQL.equals(language)\n+         || CriteriaBuilderImpl.LANG_CRITERIA.equals(language)) {\n+            return;\n+        } else {\n             throw new IllegalStateException(_loc.get(\"not-jpql-or-criteria-query\").getMessage());\n         }\n \t}"}]}

