{"sha":"fbb7e1208aaa9c9462a00766e26e5147e4ab44f1","node_id":"MDY6Q29tbWl0MjA2MzY0OmZiYjdlMTIwOGFhYTljOTQ2MmEwMDc2NmUyNmU1MTQ3ZTRhYjQ0ZjE=","commit":{"author":{"name":"Jeremy Bauer","email":"jrbauer@apache.org","date":"2009-09-23T15:07:31Z"},"committer":{"name":"Jeremy Bauer","email":"jrbauer@apache.org","date":"2009-09-23T15:07:31Z"},"message":"OPENJPA-1325 Defer embeddable population until after class metadata is parsed.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@818134 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"dfe3512ba7b6603d0350414189b763a06cf71f04","url":"https://api.github.com/repos/apache/openjpa/git/trees/dfe3512ba7b6603d0350414189b763a06cf71f04"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/fbb7e1208aaa9c9462a00766e26e5147e4ab44f1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/fbb7e1208aaa9c9462a00766e26e5147e4ab44f1","html_url":"https://github.com/apache/openjpa/commit/fbb7e1208aaa9c9462a00766e26e5147e4ab44f1","comments_url":"https://api.github.com/repos/apache/openjpa/commits/fbb7e1208aaa9c9462a00766e26e5147e4ab44f1/comments","author":null,"committer":null,"parents":[{"sha":"6f1b9627fe928732b637e409c95669fd0cc94746","url":"https://api.github.com/repos/apache/openjpa/commits/6f1b9627fe928732b637e409c95669fd0cc94746","html_url":"https://github.com/apache/openjpa/commit/6f1b9627fe928732b637e409c95669fd0cc94746"}],"stats":{"total":15,"additions":13,"deletions":2},"files":[{"sha":"131dfe39cc9bc275c0766c9a201e1ab8ecd8864f","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","status":"modified","additions":13,"deletions":2,"changes":15,"blob_url":"https://github.com/apache/openjpa/blob/fbb7e1208aaa9c9462a00766e26e5147e4ab44f1/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","raw_url":"https://github.com/apache/openjpa/raw/fbb7e1208aaa9c9462a00766e26e5147e4ab44f1/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java?ref=fbb7e1208aaa9c9462a00766e26e5147e4ab44f1","patch":"@@ -114,6 +114,8 @@\n     // after embeddables are loaded.\n     private static final Map<Class<?>, ArrayList<MetaDataContext>> \n         _embeddables = new HashMap<Class<?>, ArrayList<MetaDataContext>>();\n+    private static final Map<Class<?>, Integer> \n+        _embeddableAccess = new HashMap<Class<?>, Integer>();\n \n     static {\n         _elems.put(ELEM_PKG, ELEM_PKG);\n@@ -896,7 +898,7 @@ protected boolean startClass(String elem, Attributes attrs)\n             \n             if (embeddable) {\n                 meta.setEmbeddable();\n-                addDeferredEmbeddableMetaData(_cls, access);\n+                setDeferredEmbeddableAccessType(_cls, access);\n             }\n         }\n         \n@@ -1955,8 +1957,12 @@ protected void addDeferredEmbeddableMetaData() {\n \t            new Class<?>[_embeddables.size()]);\n \t        for (int i = classes.length - 1 ; i >= 0; i--) {\n \t            try {\n+\t                Integer access = _embeddableAccess.get(classes[i]);\n+\t                if (access == null) {\n+\t                    access = AccessCode.UNKNOWN;\n+\t                }\n \t                addDeferredEmbeddableMetaData(classes[i], \n-\t                    AccessCode.UNKNOWN);\n+\t                    access);\n \t            }\n \t            catch (Exception e) {\n \t                throw new MetaDataException(\n@@ -1996,13 +2002,18 @@ else if (md instanceof ValueMetaData) {\n             _embeddables.remove(embedType);\n         }\n     }\n+    protected void setDeferredEmbeddableAccessType(Class<?> embedType,\n+        int access) {\n+        _embeddableAccess.put(embedType, access);\n+    }\n \n     /*\n      * Clear any deferred metadata\n      */\n     @Override\n     protected void clearDeferredMetaData() {\n         _embeddables.clear();\n+        _embeddableAccess.clear();\n     }\n \n     /*"}]}

