{"sha":"fc69f929e924622928c899ce7c65e1de85ce4840","node_id":"MDY6Q29tbWl0MjA2MzY0OmZjNjlmOTI5ZTkyNDYyMjkyOGM4OTljZTdjNjVlMWRlODVjZTQ4NDA=","commit":{"author":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2009-09-24T19:23:40Z"},"committer":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2009-09-24T19:23:40Z"},"message":"OPENJPA-1327 Doc update for JPA2 JPQL Query\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@818599 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"35c34ef89a642b048526d7e12d1aaffad4bb9046","url":"https://api.github.com/repos/apache/openjpa/git/trees/35c34ef89a642b048526d7e12d1aaffad4bb9046"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/fc69f929e924622928c899ce7c65e1de85ce4840","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/fc69f929e924622928c899ce7c65e1de85ce4840","html_url":"https://github.com/apache/openjpa/commit/fc69f929e924622928c899ce7c65e1de85ce4840","comments_url":"https://api.github.com/repos/apache/openjpa/commits/fc69f929e924622928c899ce7c65e1de85ce4840/comments","author":null,"committer":null,"parents":[{"sha":"7d3497781c1a9660863e9eb10ada9c2ae107360e","url":"https://api.github.com/repos/apache/openjpa/commits/7d3497781c1a9660863e9eb10ada9c2ae107360e","html_url":"https://github.com/apache/openjpa/commit/7d3497781c1a9660863e9eb10ada9c2ae107360e"}],"stats":{"total":86,"additions":83,"deletions":3},"files":[{"sha":"f2f2221a5d144c89cfcbb2df3f500b42e7061a19","filename":"openjpa-project/src/doc/manual/jpa_overview_query.xml","status":"modified","additions":83,"deletions":3,"changes":86,"blob_url":"https://github.com/apache/openjpa/blob/fc69f929e924622928c899ce7c65e1de85ce4840/openjpa-project/src/doc/manual/jpa_overview_query.xml","raw_url":"https://github.com/apache/openjpa/raw/fc69f929e924622928c899ce7c65e1de85ce4840/openjpa-project/src/doc/manual/jpa_overview_query.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_query.xml?ref=fc69f929e924622928c899ce7c65e1de85ce4840","patch":"@@ -353,6 +353,45 @@ SELECT x FROM Magazine x inner join x.articles y WHERE y.authorName = 'John Doe'\n                 </para>\n             </note>\n         </section>\n+        <section id=\"jpa_overview_query_embeddables\">\n+            <title>\n+                Embeddable Traversal\n+            </title>\n+            <para>\n+Similar to relation traversal, nested embeddable objects can be traversed using Java-like syntax.\n+For example, if the <classname>Compony</classname> class has a field named \"address\" of \n+an embeddable type <classname>Address</classname>, \n+and the <classname>Address</classname> has a field named \"geocode\" of\n+an embeddable type <classname>Geocode</classname>,\n+the <literal>geocode</literal> of a company's address can be queried as follows:\n+            </para>\n+<programlisting>\n+SELECT c.address.geocode FROM Company c WHERE c.name = 'Random House'\n+</programlisting>\n+            <note>\n+                <para>\n+The <literal>geocode</literal> returned by the above query will not be part of the state of any managed\n+entity. Modifications to these embeddable instances are not allowed.\n+                </para>\n+            </note>\n+            <para>\n+Traverse into embeddable's state field is also allowed as shown in the following query:\n+            </para>\n+<programlisting>\n+SELECT c.address.geocode.latitude FROM Company c WHERE c.name = 'Random House'\n+</programlisting>\n+            <para>\n+Embeddable objects may contain single-valued or collection-valued relations.\n+These relations can also be traversed using Java-like syntax.\n+For example, if the Address has a relation field named \"phoneLists\" of \n+an entity type <classname>PhoneNumber</classname>,\n+the following query returns the <classname>PhoneNumber</classname> entities of the <classname>Company</classname>\n+ named 'Random House':\n+            </para>\n+<programlisting>\n+SELECT p FROM Company c, IN(c.address.phoneLists) p WHERE c.name = 'Random House'\n+</programlisting>\n+        </section>\n         <section id=\"jpa_overview_join_fetch\">\n             <title>\n                 Fetch Joins\n@@ -374,6 +413,21 @@ returned instances.\n Multiple fields may be specified in separate <literal>join fetch</literal>\n declarations: <programlisting>\n SELECT x FROM Magazine x join fetch x.articles join fetch x.authors WHERE x.title = 'JDJ'\n+</programlisting>\n+            </para>\n+            <para>\n+Notice that in the above query, both <literal>articles</literal> and <literal>authors</literal>\n+are relation property in <classname>Magazine</classname>.\n+JPQL syntax does not allow range variable declared for paths on the right-hand side of \n+<literal>join fetch</literal>.\n+Therefore, if <classname>Article</classname> entity has a relation property of \n+<literal>publishers</literal>,\n+it is not possible to specify a query\n+that returns <classname>Magazine</classname> instances and pre-fetch \n+the <literal>articles</literal> and the <literal>publishers</literal>.\n+The following query will result in syntax error:\n+<programlisting>\n+SELECT x FROM Magazine x join fetch x.articles a join fetch a.publishers p WHERE x.title = 'JDJ'\n </programlisting>\n             </para>\n             <para>\n@@ -414,10 +468,12 @@ SELECT x FROM Magazine x WHERE CONCAT(x.title, 's') = 'JDJs'\n                             SUBSTRING function\n                         </primary>\n                     </indexterm>\n-<literal>SUBSTRING(string, startIndex, length)</literal>: Returns the part of\n+<literal>SUBSTRING(string, startIndex, [length])</literal>: Returns the part of\n the <literal>string</literal> argument starting at <literal>startIndex</literal>\n-(1-based) and ending at <literal>length</literal> characters past <literal>\n-startIndex</literal>.\n+(1-based) and optionally ending at <literal>length</literal> characters past <literal>\n+startIndex</literal>. If the <literal>length</literal> argument is not specified, \n+the substring from the <literal>startIndex</literal> to the end of the <literal>string</literal>\n+is returned.\n                     </para>\n <programlisting>\n SELECT x FROM Magazine x WHERE SUBSTRING(x.title, 1, 1) = 'J'\n@@ -536,6 +592,26 @@ SELECT x FROM Magazine x WHERE SQRT(x.price) &gt;= 1.00\n                     </para>\n <programlisting>\n SELECT x FROM Magazine x WHERE MOD(x.price, 10) = 0\n+</programlisting>\n+                </listitem>\n+                <listitem>\n+                    <para>\n+                    <indexterm>\n+                        <primary>\n+                            INDEX function\n+                        </primary>\n+                    </indexterm>\n+<literal>INDEX(identification_variable)</literal>: Returns an integer value corresponding\n+ to the position of its argument in an ordered list. \n+ The INDEX function can only be applied to identification variables denoting types for\n+which an order column has been specified.\n+                    </para>\n+                    <para>\n+In the following example, <literal>studentWaitlist</literal> is a list of students for which an order column has\n+been specified, the query returns the name of the first student on the waitiing list of the course named 'Calculus':\n+                    </para>\n+<programlisting>\n+SELECT w.name FROM Course c JOIN c.studentWaitlist w WHERE c.name = ‘Calculus’ AND INDEX(w) = 0\n </programlisting>\n                 </listitem>\n                 <listitem>\n@@ -585,6 +661,10 @@ example, the following query may return instances of <classname> Magazine\n Digest</classname> are <classname>Magazine</classname> subclasses.\n             </para>\n <programlisting>SELECT x FROM Magazine x WHERE x.price &lt; 5</programlisting>\n+            <para>\n+Non-polymorphic queries or queries whose polymorphism is restricted can be specified using entity\n+type expressions in the WHERE clause to restrict the domain of the query.\n+            </para>\n         </section>\n         <section id=\"jpa_overview_query_params\">\n             <title>"}]}

