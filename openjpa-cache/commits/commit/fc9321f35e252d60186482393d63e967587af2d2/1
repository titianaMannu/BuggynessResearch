{"sha":"fc9321f35e252d60186482393d63e967587af2d2","node_id":"MDY6Q29tbWl0MjA2MzY0OmZjOTMyMWYzNWUyNTJkNjAxODY0ODIzOTNkNjNlOTY3NTg3YWYyZDI=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2006-07-20T17:24:09Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2006-07-20T17:24:09Z"},"message":"removed some unused code\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@423996 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"fc4539f65c559a5529c86182e81b97f5bc26641a","url":"https://api.github.com/repos/apache/openjpa/git/trees/fc4539f65c559a5529c86182e81b97f5bc26641a"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/fc9321f35e252d60186482393d63e967587af2d2","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/fc9321f35e252d60186482393d63e967587af2d2","html_url":"https://github.com/apache/openjpa/commit/fc9321f35e252d60186482393d63e967587af2d2","comments_url":"https://api.github.com/repos/apache/openjpa/commits/fc9321f35e252d60186482393d63e967587af2d2/comments","author":null,"committer":null,"parents":[{"sha":"09e89d9cbb2523696e19ac6c1bca52d6b3b6ebe1","url":"https://api.github.com/repos/apache/openjpa/commits/09e89d9cbb2523696e19ac6c1bca52d6b3b6ebe1","html_url":"https://github.com/apache/openjpa/commit/09e89d9cbb2523696e19ac6c1bca52d6b3b6ebe1"}],"stats":{"total":48,"additions":10,"deletions":38},"files":[{"sha":"4b589a56eaf8d1f12bd991c56fcbb14c022c9800","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","status":"modified","additions":7,"deletions":9,"changes":16,"blob_url":"https://github.com/apache/openjpa/blob/fc9321f35e252d60186482393d63e967587af2d2/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/fc9321f35e252d60186482393d63e967587af2d2/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/BrokerImpl.java?ref=fc9321f35e252d60186482393d63e967587af2d2","patch":"@@ -733,7 +733,7 @@ protected Object find(Object oid, FetchState fetchState, BitSet exclude,\n                     // make sure all the configured fields are loaded; do this\n                     // after making instance transactional for locking\n                     if (!sm.isTransactional()\n-                        && useTransactionalState(sm, fetchState.\n+                        && useTransactionalState(fetchState.\n                         getFetchConfiguration()))\n                         sm.transactional();\n                     boolean loaded = sm.isLoading();\n@@ -824,7 +824,7 @@ protected StateManagerImpl initialize(StateManagerImpl sm, boolean load,\n         } else {\n             FetchConfiguration fetch = (fetchState == null)\n                 ? _fc : fetchState.getFetchConfiguration();\n-            PCState state = (useTransactionalState(sm, fetch))\n+            PCState state = (useTransactionalState(fetch))\n                 ? PCState.PCLEAN : PCState.PNONTRANS;\n             sm.setLoading(true);\n             try {\n@@ -878,7 +878,7 @@ protected StateManagerImpl initialize(StateManagerImpl sm, boolean load,\n             List load = null;\n             StateManagerImpl sm;\n             boolean initialized;\n-            boolean transState = useTransactionalState(null, fetch);\n+            boolean transState = useTransactionalState(fetch);\n             Object obj, oid;\n             int idx = 0;\n             for (Iterator itr = oids.iterator(); itr.hasNext(); idx++) {\n@@ -898,7 +898,7 @@ protected StateManagerImpl initialize(StateManagerImpl sm, boolean load,\n \n                 _loading.put(obj, sm);\n                 if (requiresLoad(sm, initialized, edata, flags)) {\n-                    transState = transState || useTransactionalState(sm, fetch);\n+                    transState = transState || useTransactionalState(fetch);\n                     if (initialized && !sm.isTransactional() && transState)\n                         sm.transactional();\n                     if (load == null)\n@@ -984,8 +984,7 @@ private boolean requiresLoad(OpenJPAStateManager sm, boolean initialized,\n     /**\n      * Return whether to use a transactional state.\n      */\n-    private boolean useTransactionalState(StateManagerImpl sm,\n-        FetchConfiguration fetch) {\n+    private boolean useTransactionalState(FetchConfiguration fetch) {\n         return (_flags & FLAG_ACTIVE) != 0 && (!_optimistic\n             || _autoClear == CLEAR_ALL\n             || fetch.getReadLockLevel() != LOCK_NONE);\n@@ -3328,8 +3327,7 @@ public Query newQuery(String language, Object query) {\n         try {\n             StoreQuery sq = _store.newQuery(language);\n             if (sq == null) {\n-                ExpressionParser ep = (ExpressionParser)\n-                    QueryLanguages.parserForLanguage(language);\n+                ExpressionParser ep = QueryLanguages.parserForLanguage(language);\n                 if (ep != null)\n                     sq = new ExpressionStoreQuery(ep);\n                 else if (QueryLanguages.LANG_METHODQL.equals(language))\n@@ -4475,7 +4473,7 @@ public Collection copy() {\n             // size may not be entirely accurate due to refs expiring, so\n             // manually copy each object; doesn't matter this way if size too\n             // big by some\n-            ArrayList copy = new ArrayList(size());\n+            List copy = new ArrayList(size());\n             if (_dirty != null)\n                 for (Iterator itr = _dirty.iterator(); itr.hasNext();)\n                     copy.add(itr.next());"},{"sha":"5644590dc31fbce1874ba6fc8e77ec2b170c13af","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configuration.java","status":"modified","additions":1,"deletions":11,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/fc9321f35e252d60186482393d63e967587af2d2/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configuration.java","raw_url":"https://github.com/apache/openjpa/raw/fc9321f35e252d60186482393d63e967587af2d2/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configuration.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/Configuration.java?ref=fc9321f35e252d60186482393d63e967587af2d2","patch":"@@ -71,7 +71,7 @@\n      * the property's name in XML format (i.e. two-words instead of TwoWords).\n      */\n     public static final String ATTRIBUTE_XML = \"xmlName\";\n-    \n+\n     /**\n      * Return the product name. Defaults to <code>solarmetric</code>.\n      */\n@@ -110,16 +110,6 @@\n      */\n     public Log getConfigurationLog();\n \n-    /**\n-     * Return the log to use for management messages.\n-     */\n-    public Log getManagementLog();\n-\n-    /**\n-     * Return the log to use for profiling messages.\n-     */\n-    public Log getProfilingLog();\n-\n     /**\n      * Return the {@link Value} for the given property, or null if none.\n      */"},{"sha":"6c469dd837b8d7338b094916e75119ead4eafa28","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationImpl.java","status":"modified","additions":2,"deletions":18,"changes":20,"blob_url":"https://github.com/apache/openjpa/blob/fc9321f35e252d60186482393d63e967587af2d2/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationImpl.java","raw_url":"https://github.com/apache/openjpa/raw/fc9321f35e252d60186482393d63e967587af2d2/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/conf/ConfigurationImpl.java?ref=fc9321f35e252d60186482393d63e967587af2d2","patch":"@@ -204,27 +204,11 @@ public Log getLog(String category) {\n     }\n \n     /**\n-     * Returns the logging channel <code>org.apache.openjpa.lib.Runtime</code> by\n+     * Returns the logging channel <code>org.apache.openjpa.Runtime</code> by\n      * default.\n      */\n     public Log getConfigurationLog() {\n-        return getLog(\"org.apache.openjpa.lib.Runtime\");\n-    }\n-\n-    /**\n-     * Returns the logging channel <code>org.apache.openjpa.lib.Manage</code> by\n-     * default.\n-     */\n-    public Log getManagementLog() {\n-        return getLog(\"org.apache.openjpa.lib.Manage\");\n-    }\n-\n-    /**\n-     * Returns the logging channel <code>org.apache.openjpa.lib.Profile</code> by\n-     * default.\n-     */\n-    public Log getProfilingLog() {\n-        return getLog(\"org.apache.openjpa.lib.Profile\");\n+        return getLog(\"org.apache.openjpa.Runtime\");\n     }\n \n     public Value[] getValues() {"}]}

