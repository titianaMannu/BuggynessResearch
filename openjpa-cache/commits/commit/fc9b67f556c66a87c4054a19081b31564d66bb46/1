{"sha":"fc9b67f556c66a87c4054a19081b31564d66bb46","node_id":"MDY6Q29tbWl0MjA2MzY0OmZjOWI2N2Y1NTZjNjZhODdjNDA1NGExOTA4MWIzMTU2NGQ2NmJiNDY=","commit":{"author":{"name":"Stephen Kim","email":"skim@apache.org","date":"2006-09-02T06:36:19Z"},"committer":{"name":"Stephen Kim","email":"skim@apache.org","date":"2006-09-02T06:36:19Z"},"message":"changed ordering to avoid super / subclass clashing\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@439550 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"93db6dac61943ee74bd07487d5bad3640106b0f5","url":"https://api.github.com/repos/apache/openjpa/git/trees/93db6dac61943ee74bd07487d5bad3640106b0f5"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/fc9b67f556c66a87c4054a19081b31564d66bb46","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/fc9b67f556c66a87c4054a19081b31564d66bb46","html_url":"https://github.com/apache/openjpa/commit/fc9b67f556c66a87c4054a19081b31564d66bb46","comments_url":"https://api.github.com/repos/apache/openjpa/commits/fc9b67f556c66a87c4054a19081b31564d66bb46/comments","author":null,"committer":null,"parents":[{"sha":"4f4b1b29fe9e7b777ce631a17d729c96463a1a31","url":"https://api.github.com/repos/apache/openjpa/commits/4f4b1b29fe9e7b777ce631a17d729c96463a1a31","html_url":"https://github.com/apache/openjpa/commit/4f4b1b29fe9e7b777ce631a17d729c96463a1a31"}],"stats":{"total":21,"additions":10,"deletions":11},"files":[{"sha":"9ee8d261fe012a070d35358390cf9eb7ecf3346e","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/meta/ClassMetaData.java","status":"modified","additions":10,"deletions":11,"changes":21,"blob_url":"https://github.com/apache/openjpa/blob/fc9b67f556c66a87c4054a19081b31564d66bb46/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ClassMetaData.java","raw_url":"https://github.com/apache/openjpa/raw/fc9b67f556c66a87c4054a19081b31564d66bb46/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ClassMetaData.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/meta/ClassMetaData.java?ref=fc9b67f556c66a87c4054a19081b31564d66bb46","patch":"@@ -1514,17 +1514,6 @@ protected void resolveMeta(boolean runtime) {\n             log.trace(_loc.get((embed) ? \"resolve-embed-meta\" : \"resolve-meta\",\n                 this + \"@\" + System.identityHashCode(this)));\n \n-        if (_type.isInterface()) {\n-            if (!embed && _interface != Boolean.TRUE)\n-                throw new MetaDataException(_loc.get(\"interface\", _type));\n-\n-            if (runtime) {\n-                _impl = _repos.getImplGenerator().createImpl(this);\n-                if (!embed)\n-                    _repos.setInterfaceImpl(this, _impl);\n-            }\n-        }\n-\n         if (runtime && !_type.isInterface() && \n             !PersistenceCapable.class.isAssignableFrom(_type))\n             throw new MetaDataException(_loc.get(\"not-enhanced\", _type));\n@@ -1600,6 +1589,16 @@ protected void resolveMeta(boolean runtime) {\n             for (Iterator itr = _fgMap.values().iterator(); itr.hasNext();)\n                 ((FetchGroup) itr.next()).resolve();\n \n+        if (!embed && _type.isInterface()) {\n+            if (_interface != Boolean.TRUE)\n+                throw new MetaDataException(_loc.get(\"interface\", _type));\n+\n+            if (runtime) {\n+                _impl = _repos.getImplGenerator().createImpl(this);\n+                _repos.setInterfaceImpl(this, _impl);\n+            }\n+        }\n+\n         // if this is runtime, create a pc instance and scan it for comparators\n         if (runtime && !Modifier.isAbstract(_type.getModifiers())) {\n             ProxySetupStateManager sm = new ProxySetupStateManager();"}]}

