{"sha":"fd4ca960502967429a242bbdbb51abd778346899","node_id":"MDY6Q29tbWl0MjA2MzY0OmZkNGNhOTYwNTAyOTY3NDI5YTI0MmJiZGJiNTFhYmQ3NzgzNDY4OTk=","commit":{"author":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2012-09-27T21:05:07Z"},"committer":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2012-09-27T21:05:07Z"},"message":"OPENJPA-2267: Fix NPE in ResultPacker when there is a null result.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1391218 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a4c6f0d899b3bc9b9af5261776e5d3fb9f0f848e","url":"https://api.github.com/repos/apache/openjpa/git/trees/a4c6f0d899b3bc9b9af5261776e5d3fb9f0f848e"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/fd4ca960502967429a242bbdbb51abd778346899","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/fd4ca960502967429a242bbdbb51abd778346899","html_url":"https://github.com/apache/openjpa/commit/fd4ca960502967429a242bbdbb51abd778346899","comments_url":"https://api.github.com/repos/apache/openjpa/commits/fd4ca960502967429a242bbdbb51abd778346899/comments","author":null,"committer":null,"parents":[{"sha":"e424097b564273b807f0637056ea244c40a125c3","url":"https://api.github.com/repos/apache/openjpa/commits/e424097b564273b807f0637056ea244c40a125c3","html_url":"https://github.com/apache/openjpa/commit/e424097b564273b807f0637056ea244c40a125c3"}],"stats":{"total":9,"additions":8,"deletions":1},"files":[{"sha":"153a1bfcf63479fc8e221f2278ae270687c6dd37","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/ResultPacker.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/fd4ca960502967429a242bbdbb51abd778346899/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/ResultPacker.java","raw_url":"https://github.com/apache/openjpa/raw/fd4ca960502967429a242bbdbb51abd778346899/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/ResultPacker.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/ResultPacker.java?ref=fd4ca960502967429a242bbdbb51abd778346899","patch":"@@ -199,7 +199,7 @@ private void assertConvertable(Class<?> candidate, Class<?>[] types,\n      * Pack the given object into an instance of the query's result class.\n      */\n     public Object pack(Object result) {\n-        if (_resultClass == result.getClass())\n+        if (result == null || _resultClass == result.getClass())\n             return result;\n         // special cases for efficient basic types where we want to avoid\n         // creating an array for call to general pack method below"},{"sha":"e1f91ed7a1aee0ae49517624c3d08f01f481e306","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/mapping/TestNativeQueries.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/fd4ca960502967429a242bbdbb51abd778346899/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/mapping/TestNativeQueries.java","raw_url":"https://github.com/apache/openjpa/raw/fd4ca960502967429a242bbdbb51abd778346899/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/mapping/TestNativeQueries.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/mapping/TestNativeQueries.java?ref=fd4ca960502967429a242bbdbb51abd778346899","patch":"@@ -31,6 +31,8 @@\n \n public class TestNativeQueries extends SingleEMFTestCase {\n     private static final String TABLE_NAME = \"entity_1\";\n+    private static final String TABLE_NAME_2 = \"ENTITY2\";\n+    \n     private static final String CONST_NAME = \"testSimple\";\n     private static final int CONST_INT = 42;\n     \n@@ -148,6 +150,11 @@ public void testHintsAreProcessed() {\n         assertEquals(\"abc\", q.getHints().get(hintKey));\n         \n     }\n+    \n+    public void testNullResult(){\n+        String sql = \"SELECT max(pk) FROM \" + TABLE_NAME_2+ \"\";\n+        assertNull(em.createNativeQuery(sql, Long.class).getSingleResult());\n+    }\n \n     public void assertSize(int num, List l) {\n         assertNotNull(l);"}]}

