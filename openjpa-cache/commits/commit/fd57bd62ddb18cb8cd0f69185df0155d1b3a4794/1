{"sha":"fd57bd62ddb18cb8cd0f69185df0155d1b3a4794","node_id":"MDY6Q29tbWl0MjA2MzY0OmZkNTdiZDYyZGRiMThjYjhjZDBmNjkxODVkZjAxNTVkMWIzYTQ3OTQ=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2006-11-09T20:13:27Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2006-11-09T20:13:27Z"},"message":"localizer optimizations for normal usage patterns\n\ngit-svn-id: https://svn.apache.org/repos/asf/incubator/openjpa/trunk@473057 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"4f6a259a4ea976ed28ad14de6f24f01b07c56368","url":"https://api.github.com/repos/apache/openjpa/git/trees/4f6a259a4ea976ed28ad14de6f24f01b07c56368"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/fd57bd62ddb18cb8cd0f69185df0155d1b3a4794","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/fd57bd62ddb18cb8cd0f69185df0155d1b3a4794","html_url":"https://github.com/apache/openjpa/commit/fd57bd62ddb18cb8cd0f69185df0155d1b3a4794","comments_url":"https://api.github.com/repos/apache/openjpa/commits/fd57bd62ddb18cb8cd0f69185df0155d1b3a4794/comments","author":null,"committer":null,"parents":[{"sha":"cf56e213a91bcbb7ad1e888a454155b001b28557","url":"https://api.github.com/repos/apache/openjpa/commits/cf56e213a91bcbb7ad1e888a454155b001b28557","html_url":"https://github.com/apache/openjpa/commit/cf56e213a91bcbb7ad1e888a454155b001b28557"}],"stats":{"total":60,"additions":33,"deletions":27},"files":[{"sha":"4b7cdc5cb766f897f0454aa7c1c23b8ef79ad9bf","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Localizer.java","status":"modified","additions":33,"deletions":27,"changes":60,"blob_url":"https://github.com/apache/openjpa/blob/fd57bd62ddb18cb8cd0f69185df0155d1b3a4794/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Localizer.java","raw_url":"https://github.com/apache/openjpa/raw/fd57bd62ddb18cb8cd0f69185df0155d1b3a4794/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Localizer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/util/Localizer.java?ref=fd57bd62ddb18cb8cd0f69185df0155d1b3a4794","patch":"@@ -53,12 +53,6 @@\n             new StreamResourceBundleProvider(),\n             new ZipResourceBundleProvider(), }));\n \n-    // the local file name and class' classloader\n-    private ResourceBundle _bundle = null;\n-\n-    // the package that this localizer was created for.\n-    private Package _package;\n-\n     /**\n      * Return a Localizer instance that will access the properties file\n      * in the package of the given class using the system default locale.\n@@ -83,12 +77,12 @@ public static Localizer forPackage(Class cls, Locale locale) {\n         if (locale == null)\n             locale = Locale.getDefault();\n \n-        int dot = (cls == null) ? -1 : cls.getName().lastIndexOf('.');\n+        Package pkg = cls == null ? null : cls.getPackage();\n         String file;\n-        if (dot == -1)\n+        if (pkg == null)\n             file = \"localizer\";\n         else\n-            file = cls.getName().substring(0, dot + 1) + \"localizer\";\n+            file = pkg.getName() + \".localizer\";\n         String key = file + locale.toString();\n \n         // no locking; ok if bundle created multiple times\n@@ -97,22 +91,12 @@ public static Localizer forPackage(Class cls, Locale locale) {\n         Localizer loc = (Localizer) _localizers.get(key);\n         if (loc != null)\n             return loc;\n-\n-        // find resource bundle\n-        ResourceBundle bundle = null;\n-        ClassLoader loader = (cls == null) ? null : cls.getClassLoader();\n-        for (Iterator itr = _providers.iterator(); itr.hasNext();) {\n-            bundle = ((ResourceBundleProvider) itr.next()).findResource\n-                (file, locale, loader);\n-            if (bundle != null)\n-                break;\n+        else {\n+            loc = new Localizer(pkg, file, locale, \n+                cls == null ? null : cls.getClassLoader());\n+            _localizers.put(key, loc);\n+            return loc;\n         }\n-\n-        // cache the localizer\n-        loc = new Localizer(cls == null ? null : cls.getPackage());\n-        loc._bundle = bundle;\n-        _localizers.put(key, loc);\n-        return loc;\n     }\n \n     /**\n@@ -129,8 +113,30 @@ public static boolean removeProvider(ResourceBundleProvider provider) {\n         return _providers.remove(provider);\n     }\n \n-    private Localizer(Package p) {\n+    private String _file;\n+    private ResourceBundle _bundle = null;\n+    private Package _package;\n+    private Locale _locale;\n+    private ClassLoader _loader;\n+\n+    private Localizer(Package p, String f, Locale locale, ClassLoader loader) {\n         _package = p;\n+        _file = f;\n+        _locale = locale;\n+        _loader = loader;\n+    }\n+    \n+    private ResourceBundle getBundle() {\n+        // no locking; it's ok to create multiple bundles\n+        if (_bundle == null) {\n+            // find resource bundle\n+            for (Iterator itr = _providers.iterator();\n+                itr.hasNext() && _bundle == null; ) {\n+                _bundle = ((ResourceBundleProvider) itr.next())\n+                    .findResource(_file, _locale, _loader);\n+            }\n+        }\n+        return _bundle;\n     }\n \n     /**\n@@ -207,7 +213,7 @@ public Message get(String key, Object sub1, Object sub2, Object sub3) {\n      * @see #get(String)\n      */\n     public Message get(String key, Object[] subs) {\n-        return new Message(_package, _bundle, key, subs, false);\n+        return new Message(_package, getBundle(), key, subs, false);\n     }\n \n     /**\n@@ -219,7 +225,7 @@ public Message get(String key, Object[] subs) {\n      * @see #getFatal(String)\n      */\n     public Message getFatal(String key, Object[] subs) {\n-        return new Message(_package, _bundle, key, subs, true);\n+        return new Message(_package, getBundle(), key, subs, true);\n     }\n \n     /**"}]}

