{"sha":"fd5cc0436cfdf426304a07cf950609094b46d8f4","node_id":"MDY6Q29tbWl0MjA2MzY0OmZkNWNjMDQzNmNmZGY0MjYzMDRhMDdjZjk1MDYwOTA5NGI0NmQ4ZjQ=","commit":{"author":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2013-02-19T22:54:35Z"},"committer":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2013-02-19T22:54:35Z"},"message":"OPENJPA-2328: Fix NoSuchElementException when using HandlerRelationMapTableFieldStrategy. Patch contributed by Guillaume Chauvet.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1447955 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c74b249d1cc4d782fd0d194f92b82400ccdfce95","url":"https://api.github.com/repos/apache/openjpa/git/trees/c74b249d1cc4d782fd0d194f92b82400ccdfce95"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/fd5cc0436cfdf426304a07cf950609094b46d8f4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/fd5cc0436cfdf426304a07cf950609094b46d8f4","html_url":"https://github.com/apache/openjpa/commit/fd5cc0436cfdf426304a07cf950609094b46d8f4","comments_url":"https://api.github.com/repos/apache/openjpa/commits/fd5cc0436cfdf426304a07cf950609094b46d8f4/comments","author":null,"committer":null,"parents":[{"sha":"4fbf3fc1f0a0431d29765d041e74756f319bc3fe","url":"https://api.github.com/repos/apache/openjpa/commits/4fbf3fc1f0a0431d29765d041e74756f319bc3fe","html_url":"https://github.com/apache/openjpa/commit/4fbf3fc1f0a0431d29765d041e74756f319bc3fe"}],"stats":{"total":160,"additions":159,"deletions":1},"files":[{"sha":"e43c32363a262eef365995ecc04dc81d567c73c6","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/HandlerRelationMapTableFieldStrategy.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/fd5cc0436cfdf426304a07cf950609094b46d8f4/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/HandlerRelationMapTableFieldStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/fd5cc0436cfdf426304a07cf950609094b46d8f4/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/HandlerRelationMapTableFieldStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/meta/strats/HandlerRelationMapTableFieldStrategy.java?ref=fd5cc0436cfdf426304a07cf950609094b46d8f4","patch":"@@ -317,7 +317,7 @@ public void update(OpenJPAStateManager sm, JDBCStore store, RowManager rm)\n                     if (field.isUni1ToMFK()){\n                         updateSetNull(sm, mkey, store, rm);\n                     } else { \n-                        HandlerStrategies.where(key, itr.next(), store, delRow,  _kcols);\n+                        HandlerStrategies.where(key, mkey, store, delRow,  _kcols);\n                         rm.flushSecondaryRow(delRow);\n                     }\n                 }"},{"sha":"60df9bec9d04b04441ca7d429fc8451730aa8465","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/strategy/MappedEntity.java","status":"added","additions":51,"deletions":0,"changes":51,"blob_url":"https://github.com/apache/openjpa/blob/fd5cc0436cfdf426304a07cf950609094b46d8f4/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/strategy/MappedEntity.java","raw_url":"https://github.com/apache/openjpa/raw/fd5cc0436cfdf426304a07cf950609094b46d8f4/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/strategy/MappedEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/strategy/MappedEntity.java?ref=fd5cc0436cfdf426304a07cf950609094b46d8f4","patch":"@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2013 Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.jdbc.strategy;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+\n+/**\n+ * Defines the aggregated side of the entity relation\n+ */\n+@Entity\n+public class MappedEntity {\n+\n+    public enum Key {\n+        A, B, C\n+    };\n+\n+    @Id\n+    @GeneratedValue(strategy = GenerationType.IDENTITY)\n+    private int id;\n+\n+    private long value = System.nanoTime();\n+\n+    public int getId() {\n+        return id;\n+    }\n+\n+    public long getValue() {\n+        return value;\n+    }\n+\n+    public void setValue(long value) {\n+        this.value = value;\n+    }\n+\n+}"},{"sha":"6934a46a920006d3f80a10b88db15b7c446c4b59","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/strategy/MapperEntity.java","status":"added","additions":53,"deletions":0,"changes":53,"blob_url":"https://github.com/apache/openjpa/blob/fd5cc0436cfdf426304a07cf950609094b46d8f4/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/strategy/MapperEntity.java","raw_url":"https://github.com/apache/openjpa/raw/fd5cc0436cfdf426304a07cf950609094b46d8f4/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/strategy/MapperEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/strategy/MapperEntity.java?ref=fd5cc0436cfdf426304a07cf950609094b46d8f4","patch":"@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2013 Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.jdbc.strategy;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import javax.persistence.CascadeType;\n+import javax.persistence.Entity;\n+import javax.persistence.EnumType;\n+import javax.persistence.FetchType;\n+import javax.persistence.MapKeyColumn;\n+import javax.persistence.MapKeyEnumerated;\n+import javax.persistence.OneToMany;\n+\n+import org.apache.openjpa.persistence.jdbc.strategy.MappedEntity.Key;\n+\n+/**\n+ * Defines the aggregator side of the entity relation\n+ */\n+@Entity\n+public class MapperEntity {\n+\n+    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.EAGER)\n+    @MapKeyColumn(name = \"CODE\")\n+    @MapKeyEnumerated(EnumType.STRING)\n+    private Map<Key, MappedEntity> values = new HashMap<Key, MappedEntity>();\n+\n+    public MappedEntity get(Key key) {\n+        if (!values.containsKey(key)) {\n+            values.put(key, new MappedEntity());\n+        }\n+        return values.get(key);\n+    }\n+\n+    public void remove(Key key) {\n+        values.remove(key);\n+    }\n+\n+}"},{"sha":"d6da027b61e5a6c34a51f0a694e74c7ddbb68e28","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/strategy/TestHandlerStrategy.java","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/apache/openjpa/blob/fd5cc0436cfdf426304a07cf950609094b46d8f4/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/strategy/TestHandlerStrategy.java","raw_url":"https://github.com/apache/openjpa/raw/fd5cc0436cfdf426304a07cf950609094b46d8f4/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/strategy/TestHandlerStrategy.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/strategy/TestHandlerStrategy.java?ref=fd5cc0436cfdf426304a07cf950609094b46d8f4","patch":"@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2013 Apache Software Foundation.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.openjpa.persistence.jdbc.strategy;\n+\n+import javax.persistence.EntityManager;\n+\n+import org.apache.openjpa.persistence.jdbc.strategy.MappedEntity.Key;\n+import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n+\n+/**\n+ */\n+public class TestHandlerStrategy extends SingleEMFTestCase {\n+\n+    @Override\n+    public void setUp() throws Exception {\n+        super.setUp(MappedEntity.class, MapperEntity.class, \"openjpa.jdbc.MappingDefaults\",\n+            \"ForeignKeyDeleteAction=restrict, JoinForeignKeyDeleteAction=restrict\", CLEAR_TABLES);\n+    }\n+\n+    /**\n+     * @see JIRA ticket OPENJPA-2328 for more explanation\n+     */\n+    public void testIssue_OPENJPA2328() {\n+        EntityManager em = emf.createEntityManager();\n+        MapperEntity ae = new MapperEntity();\n+        for (Key key : Key.values()) {\n+            ae.get(key).setValue(System.nanoTime());\n+        }\n+\n+        // First step : persist some data into database\n+        em.getTransaction().begin();\n+        em.persist(ae);\n+        em.getTransaction().commit();\n+\n+        // Second step : update & remove some data from collection\n+        em.getTransaction().begin();\n+        ae.get(Key.A).setValue(10L); // Required\n+        ae.remove(Key.B); // Required*\n+        em.getTransaction().commit();\n+    }\n+}"}]}

