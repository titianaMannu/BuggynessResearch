{"sha":"fdf58d63ba0f7bf1c844e4b5da3fb904b90cf546","node_id":"MDY6Q29tbWl0MjA2MzY0OmZkZjU4ZDYzYmEwZjdiZjFjODQ0ZTRiNWRhM2ZiOTA0YjkwY2Y1NDY=","commit":{"author":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2010-10-18T17:48:30Z"},"committer":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2010-10-18T17:48:30Z"},"message":"OPENJPA-1837 - reset Oracle dictionary maxEmbedded*lobSize = -1 for jdbc driver (11.2.0.x) that can handle *lob size > 4000 characters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/trunk@1023925 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2bace3d7c684b8da92490de600e586c867f2a9df","url":"https://api.github.com/repos/apache/openjpa/git/trees/2bace3d7c684b8da92490de600e586c867f2a9df"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/fdf58d63ba0f7bf1c844e4b5da3fb904b90cf546","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/fdf58d63ba0f7bf1c844e4b5da3fb904b90cf546","html_url":"https://github.com/apache/openjpa/commit/fdf58d63ba0f7bf1c844e4b5da3fb904b90cf546","comments_url":"https://api.github.com/repos/apache/openjpa/commits/fdf58d63ba0f7bf1c844e4b5da3fb904b90cf546/comments","author":null,"committer":null,"parents":[{"sha":"60e88f82faad894eddf23dc3a71c537e02baf4f1","url":"https://api.github.com/repos/apache/openjpa/commits/60e88f82faad894eddf23dc3a71c537e02baf4f1","html_url":"https://github.com/apache/openjpa/commit/60e88f82faad894eddf23dc3a71c537e02baf4f1"}],"stats":{"total":91,"additions":56,"deletions":35},"files":[{"sha":"64087f96672d09609894b23d7842ab0658743dc9","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/OracleDictionary.java","status":"modified","additions":9,"deletions":3,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/fdf58d63ba0f7bf1c844e4b5da3fb904b90cf546/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/OracleDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/fdf58d63ba0f7bf1c844e4b5da3fb904b90cf546/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/OracleDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/OracleDictionary.java?ref=fdf58d63ba0f7bf1c844e4b5da3fb904b90cf546","patch":"@@ -227,9 +227,15 @@ public void connectedConfiguration(Connection conn)\n             if (metadataClassName.startsWith(\"oracle.\")\n                 || url.indexOf(\"jdbc:oracle:\") != -1\n                 || \"Oracle JDBC driver\".equals(driverName)) {\n-                driverVendor = VENDOR_ORACLE + meta.getDriverMajorVersion()\n-                    + meta.getDriverMinorVersion();\n-\n+                int jdbcMajor = meta.getDriverMajorVersion();\n+                int jdbcMinor = meta.getDriverMinorVersion();\n+                driverVendor = VENDOR_ORACLE + jdbcMajor + jdbcMinor;\n+\n+                int jdbcVersion = jdbcMajor * 1000 + jdbcMinor;\n+                if( jdbcVersion >= 11002) {\n+                    maxEmbeddedBlobSize = -1;\n+                    maxEmbeddedClobSize = -1;\n+                }\n                 String productVersion = meta.getDatabaseProductVersion()\n                     .split(\"Release \",0)[1].split(\"\\\\.\",0)[0];\n                 int release = Integer.parseInt(productVersion);"},{"sha":"9280871df18bbd6123f96193f9a2c4ac67a0a3d3","filename":"openjpa-persistence-jdbc/pom.xml","status":"modified","additions":27,"deletions":27,"changes":54,"blob_url":"https://github.com/apache/openjpa/blob/fdf58d63ba0f7bf1c844e4b5da3fb904b90cf546/openjpa-persistence-jdbc/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/fdf58d63ba0f7bf1c844e4b5da3fb904b90cf546/openjpa-persistence-jdbc/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/pom.xml?ref=fdf58d63ba0f7bf1c844e4b5da3fb904b90cf546","patch":"@@ -7,18 +7,18 @@\n  to you under the Apache License, Version 2.0 (the\n  \"License\"); you may not use this file except in compliance\n  with the License.  You may obtain a copy of the License at\n- \n+\n  http://www.apache.org/licenses/LICENSE-2.0\n- \n+\n  Unless required by applicable law or agreed to in writing,\n  software distributed under the License is distributed on an\n  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  KIND, either express or implied.  See the License for the\n  specific language governing permissions and limitations\n- under the License.   \n+ under the License.\n -->\n-<!-- \n-    Maven release plugin requires the project tag to be on a single line. \n+<!--\n+    Maven release plugin requires the project tag to be on a single line.\n -->\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n \n@@ -268,7 +268,7 @@\n                 <connection.password>${openjpa.sybase.password}</connection.password>\n             </properties>\n         </profile>\n-        \n+\n         <!-- Profile for testing with Sybase DB using the jConnect driver -->\n         <profile>\n             <id>test-sybase-jconnect</id>\n@@ -288,7 +288,7 @@\n                 <connection.password>${openjpa.sybase.password}</connection.password>\n             </properties>\n         </profile>\n-        \n+\n         <!-- Profile for testing with Ingres DB -->\n         <profile>\n             <id>test-ingres</id>\n@@ -395,14 +395,14 @@\n                 <connection.password>${openjpa.custom.password}</connection.password>\n             </properties>\n         </profile>\n-        \n-        <!--  \n-            The test-custom2 profile does not work very well when used with a \n-            continuous build system. As a convenience I've added profiles for \n-            some of the proprietary databases to make testing easier. \n+\n+        <!--\n+            The test-custom2 profile does not work very well when used with a\n+            continuous build system. As a convenience I've added profiles for\n+            some of the proprietary databases to make testing easier.\n           -->\n         <profile>\n-            <!-- \n+            <!--\n                 Example db2 profile. You can use this profile if you:\n                 1) have the DB2 artifacts installed in a local repo and supply\n                 the URL:\n@@ -411,13 +411,13 @@\n                 commands :\n                     mvn install:install-file -Dfile=${path to db2jcc.jar} \\\n                                              -DgroupId=com.ibm.db2 \\\n-                                             -DartifactId=jcc-driver \\ \n+                                             -DartifactId=jcc-driver \\\n                                              -Dversion=9.5 \\\n                                              -Dpackaging=jar\n-                                         \n+\n                     mvn install:install-file -Dfile=${path to db2jcc_license.jar} \\\n                                              -DgroupId=com.ibm.db2 \\\n-                                             -DartifactId=jcc-license \\ \n+                                             -DartifactId=jcc-license \\\n                                              -Dversion=9.5 \\\n                                              -Dpackaging=jar\n \n@@ -481,7 +481,7 @@\n                     </releases>\n                 </repository>\n             </repositories>\n-        </profile>          \n+        </profile>\n \n         <!-- Profile for testing Apache Derby with the DB2 JCC driver -->\n         <profile>\n@@ -544,9 +544,9 @@\n \n         <!-- Profile for testing Informix with the DB2 JCC driver -->\n         <profile>\n-            <!-- \n+            <!--\n                 Example Informix JCC profile. You can use this profile if you:\n-                1a) have the DB2 JCC artifacts installed in a local repo and \n+                1a) have the DB2 JCC artifacts installed in a local repo and\n                 supply the URL:\n \t            -Dids.maven.repo=http://my.local.repo\n                 1b) or have a copy of the DB2 JCC driver and run the commands\n@@ -617,7 +617,7 @@\n \n         <!-- Profile for testing with Oracle DB -->\n         <profile>\n-            <!-- \n+            <!--\n                 Example oracle profile. You can use this profile if you:\n                 1) have the Oracle artifacts installed in a local repo and\n                 supply the URL:\n@@ -626,10 +626,10 @@\n                 command:\n                     mvn install:install-file -Dfile=${path to ojdbc.jar} \\\n                                              -DgroupId=com.oracle \\\n-                                             -DartifactId=jdbc-driver \\ \n+                                             -DartifactId=jdbc-driver \\\n                                              -Dversion=10g \\\n                                              -Dpackaging=jar\n-                                         \n+\n                 You must also set the following properties:\n                     -Dopenjpa.oracle.url\n                     -Dopenjpa.oracle.username\n@@ -658,7 +658,7 @@\n                 <oracle.maven.repo>http://not.a.real.repository</oracle.maven.repo>\n                 <oracle.groupid>com.oracle</oracle.groupid>\n                 <oracle.artifactid>jdbc-driver</oracle.artifactid>\n-                <oracle.version>10g</oracle.version>\n+                <oracle.version>11.2.0.1-jdbc6</oracle.version>\n                 <connection.driver.name>oracle.jdbc.driver.OracleDriver</connection.driver.name>\n                 <!--<connection.url>jdbc:oracle:thin:@localhost:1521:OPENJPA</connection.url>-->\n                 <connection.url>${openjpa.oracle.url}</connection.url>\n@@ -777,7 +777,7 @@\n                     <execution>\n                         <phase>process-test-classes</phase>\n                         <configuration>\n-                            <tasks>                           \n+                            <tasks>\n                                 <ant antfile=\"src/main/ant/enhancer.xml\" target=\"enhance\" inheritRefs=\"true\">\n                                     <property name=\"maven.test.skip\" value=\"${maven.test.skip}\" />\n                                     <property name=\"test\" value=\"${test}\" />\n@@ -801,15 +801,15 @@\n                 <configuration>\n                     <argLine>${surefire.jvm.args}</argLine>\n                     <excludes>\n-                        <!-- exclude classes that end with 'Test'; these \n+                        <!-- exclude classes that end with 'Test'; these\n                              are not test cases per OpenJPA standards -->\n                         <exclude>org/apache/openjpa/**/*Test.java</exclude>\n \n                         <!-- exclude classes that include a $; inner classes\n                              are not test cases per OpenJPA standards -->\n                         <exclude>org/apache/openjpa/**/*$*.class</exclude>\n                         <exclude>org/apache/openjpa/**/*.*.class</exclude>\n-                        \n+\n                         <!-- exclude \"no xsd\" test until a workaround is figured out (OPENJPA-513)  -->\n                         <exclude>org/apache/openjpa/persistence/xml/TestPersistenceUnitWithoutXSD.java</exclude>\n \n@@ -964,7 +964,7 @@\n                         <exclude>org/apache/openjpa/persistence/kernel/TestPMMemory.java</exclude>\n \n                         <exclude>org/apache/openjpa/persistence/meta/TestExternalValues.java</exclude>\n-                        \n+\n                         <!-- Exclude subclassing tests   -->\n                         <exclude>org/apache/openjpa/**/TestUnenhanced*.java</exclude>\n "},{"sha":"a15905057d7b230ded8b806b19371e0f507b8718","filename":"openjpa-project/src/doc/manual/supported_databases.xml","status":"modified","additions":20,"deletions":5,"changes":25,"blob_url":"https://github.com/apache/openjpa/blob/fdf58d63ba0f7bf1c844e4b5da3fb904b90cf546/openjpa-project/src/doc/manual/supported_databases.xml","raw_url":"https://github.com/apache/openjpa/raw/fdf58d63ba0f7bf1c844e4b5da3fb904b90cf546/openjpa-project/src/doc/manual/supported_databases.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/supported_databases.xml?ref=fdf58d63ba0f7bf1c844e4b5da3fb904b90cf546","patch":"@@ -1139,11 +1139,11 @@ List results = query.getResultList();\n                 <listitem>\n                     <para> \n The Oracle JDBC driver has significant differences between different versions. \n-It is important to use the officially supported version of the driver \n-(10.2.0.1.0), which is backward compatible with previous versions of the Oracle\n+It is important to use the officially supported version of the drivers \n+(10.2.0.1.0/11.2.0.x.0), which is backward compatible with previous versions of the Oracle\n server. It can be downloaded from \n-<ulink url=\"http://www.oracle.com/technology/software/tech/java/sqlj_jdbc/htdocs/jdbc101040.html\">\n-http://www.oracle.com/technology/software/tech/java/sqlj_jdbc/htdocs/jdbc101040.html</ulink>.\n+<ulink url=\"http://www.oracle.com/technetwork/database/features/jdbc/index-091264.html\">\n+http://www.oracle.com/technetwork/database/features/jdbc/index-091264.html</ulink>.\n                     </para>\n                 </listitem>\n                 <listitem>\n@@ -1211,7 +1211,22 @@ openjpa.ConnectionRetainMode: always\n Mapping persistent attributes to <link linkend=\"ref_guide_xmlmapping\">XML columns</link> requires\n a JDBC 4 compliant driver if XML strings are longer than 4000 bytes, as counted in database.\n Otherwise an <literal>ORA-01461: can bind a LONG value only for insert into a LONG column</literal>\n-error may result.\n+error may result. This limitation is removed in Oracle jdbc driver 11.2.0.x.\n+                    </para>\n+                </listitem>\n+                <listitem>\n+                    <para>\n+If Oracle dictionary property <literal>MaxEmbeddedBlobSize</literal> or\n+<literal>MaxEmbeddedClobSize</literal> is set to some limit (i.e. not -1) and embedded collection\n+with blob/clob attribute is used, a \n+<literal>\"org.apache.openjpa.persistence.ArgumentException:\n+\"x.y.z.EmbedOwner.embedCollection&lt;element:class x.y.z.EmbedValue&gt;\"\n+is mapped as embedded, but embedded field\n+\"x.y.z.EmbedOwner.embedCollection.x.y.z.EmbedValue.blob\" is not embeddable. \n+Embedded element/key/value types are limited to simple fields and direct relations to other \n+persistent types\"</literal> error may result. To overcome this limitation, either use jdbc driver\n+11.2.0.x.0 (or later version) or set both <literal>MaxEmbeddedBlobSize</literal> and\n+<literal>MaxEmbeddedClobSize</literal> oracle dictiionary properties to -1.\n                     </para>\n                 </listitem>\n             </itemizedlist>"}]}

