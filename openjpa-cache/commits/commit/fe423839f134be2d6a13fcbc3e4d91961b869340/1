{"sha":"fe423839f134be2d6a13fcbc3e4d91961b869340","node_id":"C_kwDOAAMmHNoAKGZlNDIzODM5ZjEzNGJlMmQ2YTEzZmNiYzNlNGQ5MTk2MWI4NjkzNDA","commit":{"author":{"name":"Benjamin Marwell","email":"bmarwell@apache.org","date":"2021-11-30T10:33:25Z"},"committer":{"name":"Benjamin Marwell","email":"bmarwell@apache.org","date":"2021-11-30T11:20:00Z"},"message":"[OPENJPA-2891] allow configuration of @Generated annotation.","tree":{"sha":"ec3942418a653d90cf469ac53c5f79ae8e9a6f04","url":"https://api.github.com/repos/apache/openjpa/git/trees/ec3942418a653d90cf469ac53c5f79ae8e9a6f04"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/fe423839f134be2d6a13fcbc3e4d91961b869340","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/fe423839f134be2d6a13fcbc3e4d91961b869340","html_url":"https://github.com/apache/openjpa/commit/fe423839f134be2d6a13fcbc3e4d91961b869340","comments_url":"https://api.github.com/repos/apache/openjpa/commits/fe423839f134be2d6a13fcbc3e4d91961b869340/comments","author":{"login":"bmarwell","id":1413391,"node_id":"MDQ6VXNlcjE0MTMzOTE=","avatar_url":"https://avatars.githubusercontent.com/u/1413391?v=4","gravatar_id":"","url":"https://api.github.com/users/bmarwell","html_url":"https://github.com/bmarwell","followers_url":"https://api.github.com/users/bmarwell/followers","following_url":"https://api.github.com/users/bmarwell/following{/other_user}","gists_url":"https://api.github.com/users/bmarwell/gists{/gist_id}","starred_url":"https://api.github.com/users/bmarwell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bmarwell/subscriptions","organizations_url":"https://api.github.com/users/bmarwell/orgs","repos_url":"https://api.github.com/users/bmarwell/repos","events_url":"https://api.github.com/users/bmarwell/events{/privacy}","received_events_url":"https://api.github.com/users/bmarwell/received_events","type":"User","site_admin":false},"committer":{"login":"bmarwell","id":1413391,"node_id":"MDQ6VXNlcjE0MTMzOTE=","avatar_url":"https://avatars.githubusercontent.com/u/1413391?v=4","gravatar_id":"","url":"https://api.github.com/users/bmarwell","html_url":"https://github.com/bmarwell","followers_url":"https://api.github.com/users/bmarwell/followers","following_url":"https://api.github.com/users/bmarwell/following{/other_user}","gists_url":"https://api.github.com/users/bmarwell/gists{/gist_id}","starred_url":"https://api.github.com/users/bmarwell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bmarwell/subscriptions","organizations_url":"https://api.github.com/users/bmarwell/orgs","repos_url":"https://api.github.com/users/bmarwell/repos","events_url":"https://api.github.com/users/bmarwell/events{/privacy}","received_events_url":"https://api.github.com/users/bmarwell/received_events","type":"User","site_admin":false},"parents":[{"sha":"cb258aee424374a79b9d4fd7728d5ee5eb2cdc17","url":"https://api.github.com/repos/apache/openjpa/commits/cb258aee424374a79b9d4fd7728d5ee5eb2cdc17","html_url":"https://github.com/apache/openjpa/commit/cb258aee424374a79b9d4fd7728d5ee5eb2cdc17"}],"stats":{"total":50,"additions":45,"deletions":5},"files":[{"sha":"481d334deca74ac7b44682756197b00dc73e89f0","filename":"openjpa-persistence/pom.xml","status":"modified","additions":5,"deletions":0,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/fe423839f134be2d6a13fcbc3e4d91961b869340/openjpa-persistence/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/fe423839f134be2d6a13fcbc3e4d91961b869340/openjpa-persistence/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/pom.xml?ref=fe423839f134be2d6a13fcbc3e4d91961b869340","patch":"@@ -60,5 +60,10 @@\n             <version>4.2.0</version>\n             <scope>provided</scope>\n         </dependency>\n+        <!-- annotation javax.annotation.Generated -->\n+        <dependency>\n+            <groupId>javax.annotation</groupId>\n+            <artifactId>javax.annotation-api</artifactId>\n+        </dependency>\n     </dependencies>\n </project>"},{"sha":"b3efc8abb1ce431530cbe811ab306642adc5182f","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/meta/AnnotationProcessor6.java","status":"modified","additions":32,"deletions":5,"changes":37,"blob_url":"https://github.com/apache/openjpa/blob/fe423839f134be2d6a13fcbc3e4d91961b869340/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/meta/AnnotationProcessor6.java","raw_url":"https://github.com/apache/openjpa/raw/fe423839f134be2d6a13fcbc3e4d91961b869340/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/meta/AnnotationProcessor6.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/meta/AnnotationProcessor6.java?ref=fe423839f134be2d6a13fcbc3e4d91961b869340","patch":"@@ -99,7 +99,8 @@\n                     \"openjpa.source\",\n                     \"openjpa.naming\",\n                     \"openjpa.header\",\n-                    \"openjpa.metamodel\"\n+                    \"openjpa.metamodel\",\n+                    \"openjpa.addGeneratedAnnotation\"\n                   })\n \n public class AnnotationProcessor6 extends AbstractProcessor {\n@@ -111,6 +112,9 @@\n     private boolean active;\n     private static Localizer _loc =  Localizer.forPackage(AnnotationProcessor6.class);\n     private SourceVersion supportedSourceVersion;\n+    private String addGeneratedOption;\n+    private Class<?> generatedAnnotation;\n+    private Date generationDate;\n \n     /**\n      * Category of members as per JPA 2.0 type system.\n@@ -213,6 +217,8 @@ public synchronized void init(ProcessingEnvironment processingEnv) {\n         setNamingPolicy();\n         setHeader();\n         handler = new SourceAnnotationHandler(processingEnv, logger);\n+        setAddGeneratedAnnotation();\n+        this.generationDate = new Date();\n     }\n \n     /**\n@@ -311,10 +317,21 @@ private void annotate(SourceCode source, String originalClass) {\n         SourceCode.Class cls = source.getTopLevelClass();\n         cls.addAnnotation(StaticMetamodel.class.getName())\n             .addArgument(\"value\", originalClass + \".class\", false);\n-        if (generatedSourceVersion >= 6) {\n-            cls.addAnnotation(Generated.class.getName())\n-            .addArgument(\"value\", this.getClass().getName())\n-            .addArgument(\"date\", new Date().toString());\n+        if (\"false\".equals(this.addGeneratedOption)) {\n+            return;\n+        }\n+\n+        if (\"force\".equals(this.addGeneratedOption)) {\n+            cls.addAnnotation(javax.annotation.Generated.class.getName())\n+                    .addArgument(\"value\", this.getClass().getName())\n+                    .addArgument(\"date\", this.generationDate.toString());\n+        }\n+\n+        // only add the annotation if it is on the classpath for Java 6+.\n+        if (generatedAnnotation != null && generatedSourceVersion >= 6) {\n+            cls.addAnnotation(generatedAnnotation.getName())\n+                    .addArgument(\"value\", this.getClass().getName())\n+                    .addArgument(\"date\", this.generationDate.toString());\n         }\n     }\n \n@@ -379,6 +396,16 @@ private void setHeader() {\n         }\n     }\n \n+    private void setAddGeneratedAnnotation() {\n+        this.addGeneratedOption = getOptionValue(\"openjpa.addGeneratedAnnotation\");\n+        // only add the annotation if it is on the classpath for Java 6+.\n+        try {\n+            this.generatedAnnotation = Class.forName(\"javax.annotation.Generated\", false, null);\n+        } catch (ClassNotFoundException generatedNotFoundEx) {\n+            logger.trace(_loc.get(\"mmg-annotation-not-found\"));\n+        }\n+    }\n+\n     /**\n      * Creates a file where source code of the given metaClass will be written.\n      *"},{"sha":"9a597c3af86157fb4ee8c3bf0704db510ce285ae","filename":"openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/meta/localizer.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/fe423839f134be2d6a13fcbc3e4d91961b869340/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/meta/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/fe423839f134be2d6a13fcbc3e4d91961b869340/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/meta/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/meta/localizer.properties?ref=fe423839f134be2d6a13fcbc3e4d91961b869340","patch":"@@ -36,6 +36,8 @@ field-key-type-mismatch: Actual key type of map field \"{0}\" \"{1}\" does not \\\n field-unrecognized: Field \"{0}\" is not recognized by its type code \"{1}\" to \\\n     be included in the meta model.\n getter-unmatched: Getter method \"{0}\" in \"{1}\" has no matching setter method.\n+mmg-annotation-not-found: Annotation javax.annotation.Generated not found in \\\n+    the classpath. It will not be added to generated static metamodels.\n mmg-tool-banner: Starting OpenJPA Annotation Processor for Metamodel Generation\n mmg-process: Generating canonical metamodel source code \"{0}\"\n mmg-process-error: Error while generating metamodel for \"{0}\". See exception \\"},{"sha":"b99cc1bb794bf4dd40f6eb488b0cba39eec4daa8","filename":"pom.xml","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/fe423839f134be2d6a13fcbc3e4d91961b869340/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/fe423839f134be2d6a13fcbc3e4d91961b869340/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/pom.xml?ref=fe423839f134be2d6a13fcbc3e4d91961b869340","patch":"@@ -1793,6 +1793,12 @@\n                 <artifactId>jaxb-api</artifactId>\n                 <version>2.2.1</version>\n             </dependency>\n+            <dependency>\n+                <groupId>javax.annotation</groupId>\n+                <artifactId>javax.annotation-api</artifactId>\n+                <version>1.3.2</version>\n+                <scope>provided</scope>\n+            </dependency>\n             <dependency>\n                 <groupId>com.sun.xml.bind</groupId>\n                 <artifactId>jaxb-impl</artifactId>"}]}

