{"url":"https://api.github.com/repos/apache/openjpa/compare/2.0.0...2.0.1","html_url":"https://github.com/apache/openjpa/compare/2.0.0...2.0.1","permalink_url":"https://github.com/apache/openjpa/compare/apache:3c60517...apache:805f554","diff_url":"https://github.com/apache/openjpa/compare/2.0.0...2.0.1.diff","patch_url":"https://github.com/apache/openjpa/compare/2.0.0...2.0.1.patch","base_commit":{"sha":"3c6051729cc63ac2daccb67569882c5857488496","node_id":"MDY6Q29tbWl0MjA2MzY0OjNjNjA1MTcyOWNjNjNhYzJkYWNjYjY3NTY5ODgyYzU4NTc0ODg0OTY=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-04-19T17:33:26Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-04-19T17:33:26Z"},"message":"[maven-release-plugin]  copy for tag 2.0.0\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/tags/2.0.0@935683 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"37e6762e3d18544384417f3e7c086059d9fa28ca","url":"https://api.github.com/repos/apache/openjpa/git/trees/37e6762e3d18544384417f3e7c086059d9fa28ca"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/3c6051729cc63ac2daccb67569882c5857488496","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/3c6051729cc63ac2daccb67569882c5857488496","html_url":"https://github.com/apache/openjpa/commit/3c6051729cc63ac2daccb67569882c5857488496","comments_url":"https://api.github.com/repos/apache/openjpa/commits/3c6051729cc63ac2daccb67569882c5857488496/comments","author":null,"committer":null,"parents":[{"sha":"47266d3f9316954259841268f9216286cceeb4e6","url":"https://api.github.com/repos/apache/openjpa/commits/47266d3f9316954259841268f9216286cceeb4e6","html_url":"https://github.com/apache/openjpa/commit/47266d3f9316954259841268f9216286cceeb4e6"},{"sha":"e52c11be3b99f62b7509454146278f159c55b329","url":"https://api.github.com/repos/apache/openjpa/commits/e52c11be3b99f62b7509454146278f159c55b329","html_url":"https://github.com/apache/openjpa/commit/e52c11be3b99f62b7509454146278f159c55b329"}]},"merge_base_commit":{"sha":"e52c11be3b99f62b7509454146278f159c55b329","node_id":"MDY6Q29tbWl0MjA2MzY0OmU1MmMxMWJlM2I5OWY2MmI3NTA5NDU0MTQ2Mjc4ZjE1OWM1NWIzMjk=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-04-19T17:33:22Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-04-19T17:33:22Z"},"message":"[maven-release-plugin] prepare release 2.0.0\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@935682 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"37e6762e3d18544384417f3e7c086059d9fa28ca","url":"https://api.github.com/repos/apache/openjpa/git/trees/37e6762e3d18544384417f3e7c086059d9fa28ca"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/e52c11be3b99f62b7509454146278f159c55b329","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/e52c11be3b99f62b7509454146278f159c55b329","html_url":"https://github.com/apache/openjpa/commit/e52c11be3b99f62b7509454146278f159c55b329","comments_url":"https://api.github.com/repos/apache/openjpa/commits/e52c11be3b99f62b7509454146278f159c55b329/comments","author":null,"committer":null,"parents":[{"sha":"7312e27fdeb7d5d640d9ffa1e96dcbe4ea146563","url":"https://api.github.com/repos/apache/openjpa/commits/7312e27fdeb7d5d640d9ffa1e96dcbe4ea146563","html_url":"https://github.com/apache/openjpa/commit/7312e27fdeb7d5d640d9ffa1e96dcbe4ea146563"}]},"status":"diverged","ahead_by":107,"behind_by":2,"total_commits":107,"commits":[{"sha":"14b6a637ded30377d1d9a04d84496c44b710432a","node_id":"MDY6Q29tbWl0MjA2MzY0OjE0YjZhNjM3ZGVkMzAzNzdkMWQ5YTA0ZDg0NDk2YzQ0YjcxMDQzMmE=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-04-19T17:33:42Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-04-19T17:33:42Z"},"message":"[maven-release-plugin] prepare for next development iteration\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@935684 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"cc93715b0c691a89f224781556b1c965a8e9ac5b","url":"https://api.github.com/repos/apache/openjpa/git/trees/cc93715b0c691a89f224781556b1c965a8e9ac5b"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/14b6a637ded30377d1d9a04d84496c44b710432a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/14b6a637ded30377d1d9a04d84496c44b710432a","html_url":"https://github.com/apache/openjpa/commit/14b6a637ded30377d1d9a04d84496c44b710432a","comments_url":"https://api.github.com/repos/apache/openjpa/commits/14b6a637ded30377d1d9a04d84496c44b710432a/comments","author":null,"committer":null,"parents":[{"sha":"e52c11be3b99f62b7509454146278f159c55b329","url":"https://api.github.com/repos/apache/openjpa/commits/e52c11be3b99f62b7509454146278f159c55b329","html_url":"https://github.com/apache/openjpa/commit/e52c11be3b99f62b7509454146278f159c55b329"}]},{"sha":"26bd0a50c83e7a2d9c1bc9f809160e734521fd54","node_id":"MDY6Q29tbWl0MjA2MzY0OjI2YmQwYTUwYzgzZTdhMmQ5YzFiYzlmODA5MTYwZTczNDUyMWZkNTQ=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2010-04-20T15:58:23Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2010-04-20T15:58:23Z"},"message":"OPENJPA-1682: Merge doc change from trunk\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@935970 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"aa733f684042036b2e5f51d70e83d287ad2fea8c","url":"https://api.github.com/repos/apache/openjpa/git/trees/aa733f684042036b2e5f51d70e83d287ad2fea8c"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/26bd0a50c83e7a2d9c1bc9f809160e734521fd54","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/26bd0a50c83e7a2d9c1bc9f809160e734521fd54","html_url":"https://github.com/apache/openjpa/commit/26bd0a50c83e7a2d9c1bc9f809160e734521fd54","comments_url":"https://api.github.com/repos/apache/openjpa/commits/26bd0a50c83e7a2d9c1bc9f809160e734521fd54/comments","author":null,"committer":null,"parents":[{"sha":"14b6a637ded30377d1d9a04d84496c44b710432a","url":"https://api.github.com/repos/apache/openjpa/commits/14b6a637ded30377d1d9a04d84496c44b710432a","html_url":"https://github.com/apache/openjpa/commit/14b6a637ded30377d1d9a04d84496c44b710432a"}]},{"sha":"e42f17fa48dd0a55342760ac4961877450ef2b76","node_id":"MDY6Q29tbWl0MjA2MzY0OmU0MmYxN2ZhNDhkZDBhNTUzNDI3NjBhYzQ5NjE4Nzc0NTBlZjJiNzY=","commit":{"author":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-04-21T18:54:35Z"},"committer":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-04-21T18:54:35Z"},"message":"OPENJPA-1604: Doc update.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@936440 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"936175644c5c264da4b63ebd8f6c719f838f733e","url":"https://api.github.com/repos/apache/openjpa/git/trees/936175644c5c264da4b63ebd8f6c719f838f733e"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/e42f17fa48dd0a55342760ac4961877450ef2b76","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/e42f17fa48dd0a55342760ac4961877450ef2b76","html_url":"https://github.com/apache/openjpa/commit/e42f17fa48dd0a55342760ac4961877450ef2b76","comments_url":"https://api.github.com/repos/apache/openjpa/commits/e42f17fa48dd0a55342760ac4961877450ef2b76/comments","author":null,"committer":null,"parents":[{"sha":"26bd0a50c83e7a2d9c1bc9f809160e734521fd54","url":"https://api.github.com/repos/apache/openjpa/commits/26bd0a50c83e7a2d9c1bc9f809160e734521fd54","html_url":"https://github.com/apache/openjpa/commit/26bd0a50c83e7a2d9c1bc9f809160e734521fd54"}]},{"sha":"cb34b9f07fb3ac884c9f6b1166b6770580495bf0","node_id":"MDY6Q29tbWl0MjA2MzY0OmNiMzRiOWYwN2ZiM2FjODg0YzlmNmIxMTY2YjY3NzA1ODA0OTViZjA=","commit":{"author":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-04-21T19:18:14Z"},"committer":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-04-21T19:18:14Z"},"message":"OPENJPA-1638: Add new testcase.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@936453 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"bf178b98f655dce8de03daa4909a1e1348ce9f0d","url":"https://api.github.com/repos/apache/openjpa/git/trees/bf178b98f655dce8de03daa4909a1e1348ce9f0d"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/cb34b9f07fb3ac884c9f6b1166b6770580495bf0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/cb34b9f07fb3ac884c9f6b1166b6770580495bf0","html_url":"https://github.com/apache/openjpa/commit/cb34b9f07fb3ac884c9f6b1166b6770580495bf0","comments_url":"https://api.github.com/repos/apache/openjpa/commits/cb34b9f07fb3ac884c9f6b1166b6770580495bf0/comments","author":null,"committer":null,"parents":[{"sha":"e42f17fa48dd0a55342760ac4961877450ef2b76","url":"https://api.github.com/repos/apache/openjpa/commits/e42f17fa48dd0a55342760ac4961877450ef2b76","html_url":"https://github.com/apache/openjpa/commit/e42f17fa48dd0a55342760ac4961877450ef2b76"}]},{"sha":"7f6d88f8a45b12890bf3d901b07765ebbb45f7f9","node_id":"MDY6Q29tbWl0MjA2MzY0OjdmNmQ4OGY4YTQ1YjEyODkwYmYzZDkwMWIwNzc2NWViYmI0NWY3Zjk=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-04-22T14:13:00Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-04-22T14:13:00Z"},"message":"OPENJPA-1639 Create some simple openjpa-xmlstore tests\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@936860 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a9d5c95642ba9486d1c081365d333b410005029a","url":"https://api.github.com/repos/apache/openjpa/git/trees/a9d5c95642ba9486d1c081365d333b410005029a"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/7f6d88f8a45b12890bf3d901b07765ebbb45f7f9","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/7f6d88f8a45b12890bf3d901b07765ebbb45f7f9","html_url":"https://github.com/apache/openjpa/commit/7f6d88f8a45b12890bf3d901b07765ebbb45f7f9","comments_url":"https://api.github.com/repos/apache/openjpa/commits/7f6d88f8a45b12890bf3d901b07765ebbb45f7f9/comments","author":null,"committer":null,"parents":[{"sha":"cb34b9f07fb3ac884c9f6b1166b6770580495bf0","url":"https://api.github.com/repos/apache/openjpa/commits/cb34b9f07fb3ac884c9f6b1166b6770580495bf0","html_url":"https://github.com/apache/openjpa/commit/cb34b9f07fb3ac884c9f6b1166b6770580495bf0"}]},{"sha":"32dad9975e63aa284bc328259ba5e0f21f74325c","node_id":"MDY6Q29tbWl0MjA2MzY0OjMyZGFkOTk3NWU2M2FhMjg0YmMzMjgyNTliYTVlMGYyMWY3NDMyNWM=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-04-22T14:27:37Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-04-22T14:27:37Z"},"message":"move openjpa-maven-plugin version to parent pom, since two modules are using it now\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@936865 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"d7ee574b7697f1689465ef9aa6f14c4f01bfd70f","url":"https://api.github.com/repos/apache/openjpa/git/trees/d7ee574b7697f1689465ef9aa6f14c4f01bfd70f"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/32dad9975e63aa284bc328259ba5e0f21f74325c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/32dad9975e63aa284bc328259ba5e0f21f74325c","html_url":"https://github.com/apache/openjpa/commit/32dad9975e63aa284bc328259ba5e0f21f74325c","comments_url":"https://api.github.com/repos/apache/openjpa/commits/32dad9975e63aa284bc328259ba5e0f21f74325c/comments","author":null,"committer":null,"parents":[{"sha":"7f6d88f8a45b12890bf3d901b07765ebbb45f7f9","url":"https://api.github.com/repos/apache/openjpa/commits/7f6d88f8a45b12890bf3d901b07765ebbb45f7f9","html_url":"https://github.com/apache/openjpa/commit/7f6d88f8a45b12890bf3d901b07765ebbb45f7f9"}]},{"sha":"2edfd4fa5c30e8e9b3f42717836e128f1ce7cb07","node_id":"MDY6Q29tbWl0MjA2MzY0OjJlZGZkNGZhNWMzMGU4ZTliM2Y0MjcxNzgzNmUxMjhmMWNlN2NiMDc=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-04-29T18:54:58Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-04-29T18:54:58Z"},"message":"Update manual on difference between nullable=false and optional=false\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@939452 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"fd645111bac37d3494b6f2a3ea6c3157679e3bf8","url":"https://api.github.com/repos/apache/openjpa/git/trees/fd645111bac37d3494b6f2a3ea6c3157679e3bf8"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/2edfd4fa5c30e8e9b3f42717836e128f1ce7cb07","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/2edfd4fa5c30e8e9b3f42717836e128f1ce7cb07","html_url":"https://github.com/apache/openjpa/commit/2edfd4fa5c30e8e9b3f42717836e128f1ce7cb07","comments_url":"https://api.github.com/repos/apache/openjpa/commits/2edfd4fa5c30e8e9b3f42717836e128f1ce7cb07/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"32dad9975e63aa284bc328259ba5e0f21f74325c","url":"https://api.github.com/repos/apache/openjpa/commits/32dad9975e63aa284bc328259ba5e0f21f74325c","html_url":"https://github.com/apache/openjpa/commit/32dad9975e63aa284bc328259ba5e0f21f74325c"}]},{"sha":"b31de158c8f2a12e8d35ba0db01cf70d23660ea0","node_id":"MDY6Q29tbWl0MjA2MzY0OmIzMWRlMTU4YzhmMmExMmU4ZDM1YmEwZGIwMWNmNzBkMjM2NjBlYTA=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-05-01T01:17:51Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-05-01T01:17:51Z"},"message":"update license files to include full CDDL+GPL license text for persistence schemas, even though we're choosing CDDL.  this was based on recent discussions between legal-discuss@apache, Aries and Geronimo projects.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@939893 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"43c8d3cf89119e625192813e79841015c4e7128c","url":"https://api.github.com/repos/apache/openjpa/git/trees/43c8d3cf89119e625192813e79841015c4e7128c"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/b31de158c8f2a12e8d35ba0db01cf70d23660ea0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/b31de158c8f2a12e8d35ba0db01cf70d23660ea0","html_url":"https://github.com/apache/openjpa/commit/b31de158c8f2a12e8d35ba0db01cf70d23660ea0","comments_url":"https://api.github.com/repos/apache/openjpa/commits/b31de158c8f2a12e8d35ba0db01cf70d23660ea0/comments","author":null,"committer":null,"parents":[{"sha":"2edfd4fa5c30e8e9b3f42717836e128f1ce7cb07","url":"https://api.github.com/repos/apache/openjpa/commits/2edfd4fa5c30e8e9b3f42717836e128f1ce7cb07","html_url":"https://github.com/apache/openjpa/commit/2edfd4fa5c30e8e9b3f42717836e128f1ce7cb07"}]},{"sha":"eaf2cb0417756340c30d25b67b74f6c9d6827e0f","node_id":"MDY6Q29tbWl0MjA2MzY0OmVhZjJjYjA0MTc3NTYzNDBjMzBkMjViNjdiNzRmNmM5ZDY4MjdlMGY=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-05-01T01:36:19Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-05-01T01:36:19Z"},"message":"strip eol chars\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@939897 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0a84a83ff03b1ae28d4ddbab9d1878fa3111b4d9","url":"https://api.github.com/repos/apache/openjpa/git/trees/0a84a83ff03b1ae28d4ddbab9d1878fa3111b4d9"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/eaf2cb0417756340c30d25b67b74f6c9d6827e0f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/eaf2cb0417756340c30d25b67b74f6c9d6827e0f","html_url":"https://github.com/apache/openjpa/commit/eaf2cb0417756340c30d25b67b74f6c9d6827e0f","comments_url":"https://api.github.com/repos/apache/openjpa/commits/eaf2cb0417756340c30d25b67b74f6c9d6827e0f/comments","author":null,"committer":null,"parents":[{"sha":"b31de158c8f2a12e8d35ba0db01cf70d23660ea0","url":"https://api.github.com/repos/apache/openjpa/commits/b31de158c8f2a12e8d35ba0db01cf70d23660ea0","html_url":"https://github.com/apache/openjpa/commit/b31de158c8f2a12e8d35ba0db01cf70d23660ea0"}]},{"sha":"6dd93052c8c6e596c9e118f4f35bd5ccf5b68337","node_id":"MDY6Q29tbWl0MjA2MzY0OjZkZDkzMDUyYzhjNmU1OTZjOWUxMThmNGYzNWJkNWNjZjViNjgzMzc=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-05-03T18:12:10Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-05-03T18:12:10Z"},"message":"OPENJPA-1622: setting svn:eol-style\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@940549 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0a84a83ff03b1ae28d4ddbab9d1878fa3111b4d9","url":"https://api.github.com/repos/apache/openjpa/git/trees/0a84a83ff03b1ae28d4ddbab9d1878fa3111b4d9"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/6dd93052c8c6e596c9e118f4f35bd5ccf5b68337","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/6dd93052c8c6e596c9e118f4f35bd5ccf5b68337","html_url":"https://github.com/apache/openjpa/commit/6dd93052c8c6e596c9e118f4f35bd5ccf5b68337","comments_url":"https://api.github.com/repos/apache/openjpa/commits/6dd93052c8c6e596c9e118f4f35bd5ccf5b68337/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"eaf2cb0417756340c30d25b67b74f6c9d6827e0f","url":"https://api.github.com/repos/apache/openjpa/commits/eaf2cb0417756340c30d25b67b74f6c9d6827e0f","html_url":"https://github.com/apache/openjpa/commit/eaf2cb0417756340c30d25b67b74f6c9d6827e0f"}]},{"sha":"44e8ae25cfda3c7f0934c96cba6121fc270434a1","node_id":"MDY6Q29tbWl0MjA2MzY0OjQ0ZThhZTI1Y2ZkYTNjN2YwOTM0Yzk2Y2JhNjEyMWZjMjcwNDM0YTE=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-05-11T15:54:42Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-05-11T15:54:42Z"},"message":"OPENJPA-1660 Add support to test with Apache Bean Validation provider\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@943157 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"4e5bcd4aa5a560b00fd624663dfea148fb6db6b9","url":"https://api.github.com/repos/apache/openjpa/git/trees/4e5bcd4aa5a560b00fd624663dfea148fb6db6b9"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/44e8ae25cfda3c7f0934c96cba6121fc270434a1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/44e8ae25cfda3c7f0934c96cba6121fc270434a1","html_url":"https://github.com/apache/openjpa/commit/44e8ae25cfda3c7f0934c96cba6121fc270434a1","comments_url":"https://api.github.com/repos/apache/openjpa/commits/44e8ae25cfda3c7f0934c96cba6121fc270434a1/comments","author":null,"committer":null,"parents":[{"sha":"6dd93052c8c6e596c9e118f4f35bd5ccf5b68337","url":"https://api.github.com/repos/apache/openjpa/commits/6dd93052c8c6e596c9e118f4f35bd5ccf5b68337","html_url":"https://github.com/apache/openjpa/commit/6dd93052c8c6e596c9e118f4f35bd5ccf5b68337"}]},{"sha":"33315f649621011ba98fcc5d85af2bd675edf1a4","node_id":"MDY6Q29tbWl0MjA2MzY0OjMzMzE1ZjY0OTYyMTAxMWJhOThmY2M1ZDg1YWYyYmQ2NzVlZGYxYTQ=","commit":{"author":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-05-20T18:01:33Z"},"committer":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-05-20T18:01:33Z"},"message":"Update svn:ignore for openjpa-integration\\daytrader\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@946729 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"4e5bcd4aa5a560b00fd624663dfea148fb6db6b9","url":"https://api.github.com/repos/apache/openjpa/git/trees/4e5bcd4aa5a560b00fd624663dfea148fb6db6b9"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/33315f649621011ba98fcc5d85af2bd675edf1a4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/33315f649621011ba98fcc5d85af2bd675edf1a4","html_url":"https://github.com/apache/openjpa/commit/33315f649621011ba98fcc5d85af2bd675edf1a4","comments_url":"https://api.github.com/repos/apache/openjpa/commits/33315f649621011ba98fcc5d85af2bd675edf1a4/comments","author":null,"committer":null,"parents":[{"sha":"44e8ae25cfda3c7f0934c96cba6121fc270434a1","url":"https://api.github.com/repos/apache/openjpa/commits/44e8ae25cfda3c7f0934c96cba6121fc270434a1","html_url":"https://github.com/apache/openjpa/commit/44e8ae25cfda3c7f0934c96cba6121fc270434a1"}]},{"sha":"ebd07c943a3d8ad2bf88496d949a45b8cd33ae86","node_id":"MDY6Q29tbWl0MjA2MzY0OmViZDA3Yzk0M2EzZDhhZDJiZjg4NDk2ZDk0OWE0NWI4Y2QzM2FlODY=","commit":{"author":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-05-20T18:05:01Z"},"committer":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-05-20T18:05:01Z"},"message":"OPENJPA-1673: Update 2.0.x docs for MetaDataRepository.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@946733 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"1f959eb693723de6917cf4d5136eca0f6096cc8e","url":"https://api.github.com/repos/apache/openjpa/git/trees/1f959eb693723de6917cf4d5136eca0f6096cc8e"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/ebd07c943a3d8ad2bf88496d949a45b8cd33ae86","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/ebd07c943a3d8ad2bf88496d949a45b8cd33ae86","html_url":"https://github.com/apache/openjpa/commit/ebd07c943a3d8ad2bf88496d949a45b8cd33ae86","comments_url":"https://api.github.com/repos/apache/openjpa/commits/ebd07c943a3d8ad2bf88496d949a45b8cd33ae86/comments","author":null,"committer":null,"parents":[{"sha":"33315f649621011ba98fcc5d85af2bd675edf1a4","url":"https://api.github.com/repos/apache/openjpa/commits/33315f649621011ba98fcc5d85af2bd675edf1a4","html_url":"https://github.com/apache/openjpa/commit/33315f649621011ba98fcc5d85af2bd675edf1a4"}]},{"sha":"65bf030d714675f3ce30e1f428ad5807543a6dd4","node_id":"MDY6Q29tbWl0MjA2MzY0OjY1YmYwMzBkNzE0Njc1ZjNjZTMwZTFmNDI4YWQ1ODA3NTQzYTZkZDQ=","commit":{"author":{"name":"Fay Wang","email":"faywang@apache.org","date":"2010-06-02T15:42:20Z"},"committer":{"name":"Fay Wang","email":"faywang@apache.org","date":"2010-06-02T15:42:20Z"},"message":"OPENJPA-1596: port the change to 2.0\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@950604 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"1b071ddb8becea608e49a5a7d2f838cd66b7dd91","url":"https://api.github.com/repos/apache/openjpa/git/trees/1b071ddb8becea608e49a5a7d2f838cd66b7dd91"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/65bf030d714675f3ce30e1f428ad5807543a6dd4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/65bf030d714675f3ce30e1f428ad5807543a6dd4","html_url":"https://github.com/apache/openjpa/commit/65bf030d714675f3ce30e1f428ad5807543a6dd4","comments_url":"https://api.github.com/repos/apache/openjpa/commits/65bf030d714675f3ce30e1f428ad5807543a6dd4/comments","author":null,"committer":null,"parents":[{"sha":"ebd07c943a3d8ad2bf88496d949a45b8cd33ae86","url":"https://api.github.com/repos/apache/openjpa/commits/ebd07c943a3d8ad2bf88496d949a45b8cd33ae86","html_url":"https://github.com/apache/openjpa/commit/ebd07c943a3d8ad2bf88496d949a45b8cd33ae86"}]},{"sha":"3ee3f244006a7f268157a6f98fcc9cdb22f5a272","node_id":"MDY6Q29tbWl0MjA2MzY0OjNlZTNmMjQ0MDA2YTdmMjY4MTU3YTZmOThmY2M5Y2RiMjJmNWEyNzI=","commit":{"author":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-06-09T19:57:32Z"},"committer":{"name":"Richard G. Curtis","email":"curtisr7@apache.org","date":"2010-06-09T19:57:32Z"},"message":"OPENJPA-620: Update CHANGES.txt\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@953136 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0f6cdc4225ea4d806d68ea5545ada201ce99b53c","url":"https://api.github.com/repos/apache/openjpa/git/trees/0f6cdc4225ea4d806d68ea5545ada201ce99b53c"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/3ee3f244006a7f268157a6f98fcc9cdb22f5a272","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/3ee3f244006a7f268157a6f98fcc9cdb22f5a272","html_url":"https://github.com/apache/openjpa/commit/3ee3f244006a7f268157a6f98fcc9cdb22f5a272","comments_url":"https://api.github.com/repos/apache/openjpa/commits/3ee3f244006a7f268157a6f98fcc9cdb22f5a272/comments","author":null,"committer":null,"parents":[{"sha":"65bf030d714675f3ce30e1f428ad5807543a6dd4","url":"https://api.github.com/repos/apache/openjpa/commits/65bf030d714675f3ce30e1f428ad5807543a6dd4","html_url":"https://github.com/apache/openjpa/commit/65bf030d714675f3ce30e1f428ad5807543a6dd4"}]},{"sha":"3963e826926e19ec83947f0b4db2fe631c4933d7","node_id":"MDY6Q29tbWl0MjA2MzY0OjM5NjNlODI2OTI2ZTE5ZWM4Mzk0N2YwYjRkYjJmZTYzMWM0OTMzZDc=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-06-14T17:52:29Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-06-14T17:52:29Z"},"message":"OPENJPA-1641: Try JDBC standard column names as well as Sybase specific ones\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@954567 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0ba941697f6a610aad044068bae85b87c1ca20f7","url":"https://api.github.com/repos/apache/openjpa/git/trees/0ba941697f6a610aad044068bae85b87c1ca20f7"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/3963e826926e19ec83947f0b4db2fe631c4933d7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/3963e826926e19ec83947f0b4db2fe631c4933d7","html_url":"https://github.com/apache/openjpa/commit/3963e826926e19ec83947f0b4db2fe631c4933d7","comments_url":"https://api.github.com/repos/apache/openjpa/commits/3963e826926e19ec83947f0b4db2fe631c4933d7/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"3ee3f244006a7f268157a6f98fcc9cdb22f5a272","url":"https://api.github.com/repos/apache/openjpa/commits/3ee3f244006a7f268157a6f98fcc9cdb22f5a272","html_url":"https://github.com/apache/openjpa/commit/3ee3f244006a7f268157a6f98fcc9cdb22f5a272"}]},{"sha":"939b1b5a95d7a28dc99b69ffc59aef63e33ed610","node_id":"MDY6Q29tbWl0MjA2MzY0OjkzOWIxYjVhOTVkN2EyOGRjOTliNjlmZmM1OWFlZjYzZTMzZWQ2MTA=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-06-15T22:26:47Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-06-15T22:26:47Z"},"message":"OPENJPA-1678: add printParameters property to prevent SQL parameter values from being logged in exceptions or trace\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@955073 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"464d37f8acbd8c8491143e12a42c3c807fa8783b","url":"https://api.github.com/repos/apache/openjpa/git/trees/464d37f8acbd8c8491143e12a42c3c807fa8783b"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/939b1b5a95d7a28dc99b69ffc59aef63e33ed610","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/939b1b5a95d7a28dc99b69ffc59aef63e33ed610","html_url":"https://github.com/apache/openjpa/commit/939b1b5a95d7a28dc99b69ffc59aef63e33ed610","comments_url":"https://api.github.com/repos/apache/openjpa/commits/939b1b5a95d7a28dc99b69ffc59aef63e33ed610/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"3963e826926e19ec83947f0b4db2fe631c4933d7","url":"https://api.github.com/repos/apache/openjpa/commits/3963e826926e19ec83947f0b4db2fe631c4933d7","html_url":"https://github.com/apache/openjpa/commit/3963e826926e19ec83947f0b4db2fe631c4933d7"}]},{"sha":"ae5c2c881ee5db3ac64c07a014ed5eaecd5c33d4","node_id":"MDY6Q29tbWl0MjA2MzY0OmFlNWMyYzg4MWVlNWRiM2FjNjRjMDdhMDE0ZWQ1ZWFlY2Q1YzMzZDQ=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-06-16T21:08:46Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-06-16T21:08:46Z"},"message":"OPENJPA-1678: Update documentation re: PrintParameters\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@955385 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"aa363ef9efc31567479e7285ee471c237898cc56","url":"https://api.github.com/repos/apache/openjpa/git/trees/aa363ef9efc31567479e7285ee471c237898cc56"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/ae5c2c881ee5db3ac64c07a014ed5eaecd5c33d4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/ae5c2c881ee5db3ac64c07a014ed5eaecd5c33d4","html_url":"https://github.com/apache/openjpa/commit/ae5c2c881ee5db3ac64c07a014ed5eaecd5c33d4","comments_url":"https://api.github.com/repos/apache/openjpa/commits/ae5c2c881ee5db3ac64c07a014ed5eaecd5c33d4/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"939b1b5a95d7a28dc99b69ffc59aef63e33ed610","url":"https://api.github.com/repos/apache/openjpa/commits/939b1b5a95d7a28dc99b69ffc59aef63e33ed610","html_url":"https://github.com/apache/openjpa/commit/939b1b5a95d7a28dc99b69ffc59aef63e33ed610"}]},{"sha":"d7a9cdf3de140aeca77164029fd98e433106660f","node_id":"MDY6Q29tbWl0MjA2MzY0OmQ3YTljZGYzZGUxNDBhZWNhNzcxNjQwMjlmZDk4ZTQzMzEwNjY2MGY=","commit":{"author":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2010-07-07T18:10:25Z"},"committer":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2010-07-07T18:10:25Z"},"message":"OPENJPA-1715: OpenJPA generates wrong SQL if a result variable that references an aggregate expression is used in ORDER BY clause\nadd testcase.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@961449 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2006da949a8d5e60f3790b0aa226314993c0b68f","url":"https://api.github.com/repos/apache/openjpa/git/trees/2006da949a8d5e60f3790b0aa226314993c0b68f"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/d7a9cdf3de140aeca77164029fd98e433106660f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/d7a9cdf3de140aeca77164029fd98e433106660f","html_url":"https://github.com/apache/openjpa/commit/d7a9cdf3de140aeca77164029fd98e433106660f","comments_url":"https://api.github.com/repos/apache/openjpa/commits/d7a9cdf3de140aeca77164029fd98e433106660f/comments","author":null,"committer":null,"parents":[{"sha":"ae5c2c881ee5db3ac64c07a014ed5eaecd5c33d4","url":"https://api.github.com/repos/apache/openjpa/commits/ae5c2c881ee5db3ac64c07a014ed5eaecd5c33d4","html_url":"https://github.com/apache/openjpa/commit/ae5c2c881ee5db3ac64c07a014ed5eaecd5c33d4"}]},{"sha":"5f2d51e23e1bcc86dff63fe08ebdd51886b9fdb5","node_id":"MDY6Q29tbWl0MjA2MzY0OjVmMmQ1MWUyM2UxYmNjODZkZmY2M2ZlMDhlYmRkNTE4ODZiOWZkYjU=","commit":{"author":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2010-07-07T18:37:29Z"},"committer":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2010-07-07T18:37:29Z"},"message":"OPENJPA-1715: OpenJPA generates wrong SQL if a result variable that references an aggregate expression is used in ORDER BY clause\nfix testcase.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@961472 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"e9447e3e6ea0a7da092478258fc59aac9837344e","url":"https://api.github.com/repos/apache/openjpa/git/trees/e9447e3e6ea0a7da092478258fc59aac9837344e"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/5f2d51e23e1bcc86dff63fe08ebdd51886b9fdb5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/5f2d51e23e1bcc86dff63fe08ebdd51886b9fdb5","html_url":"https://github.com/apache/openjpa/commit/5f2d51e23e1bcc86dff63fe08ebdd51886b9fdb5","comments_url":"https://api.github.com/repos/apache/openjpa/commits/5f2d51e23e1bcc86dff63fe08ebdd51886b9fdb5/comments","author":null,"committer":null,"parents":[{"sha":"d7a9cdf3de140aeca77164029fd98e433106660f","url":"https://api.github.com/repos/apache/openjpa/commits/d7a9cdf3de140aeca77164029fd98e433106660f","html_url":"https://github.com/apache/openjpa/commit/d7a9cdf3de140aeca77164029fd98e433106660f"}]},{"sha":"dcb8e626a3b634bbacb87c80f40a81643f5653d5","node_id":"MDY6Q29tbWl0MjA2MzY0OmRjYjhlNjI2YTNiNjM0YmJhY2I4N2M4MGY0MGE4MTY0M2Y1NjUzZDU=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-07-07T18:40:10Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-07-07T18:40:10Z"},"message":"OPENJPA-1713: correct the push/pop clean up processing in EntityManagerImpl _plans map.\nSubmitted By: Albert Lee\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@961473 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"13397a932bad49a59d5ab63e13e3eefcb4f04074","url":"https://api.github.com/repos/apache/openjpa/git/trees/13397a932bad49a59d5ab63e13e3eefcb4f04074"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/dcb8e626a3b634bbacb87c80f40a81643f5653d5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/dcb8e626a3b634bbacb87c80f40a81643f5653d5","html_url":"https://github.com/apache/openjpa/commit/dcb8e626a3b634bbacb87c80f40a81643f5653d5","comments_url":"https://api.github.com/repos/apache/openjpa/commits/dcb8e626a3b634bbacb87c80f40a81643f5653d5/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"5f2d51e23e1bcc86dff63fe08ebdd51886b9fdb5","url":"https://api.github.com/repos/apache/openjpa/commits/5f2d51e23e1bcc86dff63fe08ebdd51886b9fdb5","html_url":"https://github.com/apache/openjpa/commit/5f2d51e23e1bcc86dff63fe08ebdd51886b9fdb5"}]},{"sha":"a2d0e0564982b9573270092ed5014ed6f32bd09d","node_id":"MDY6Q29tbWl0MjA2MzY0OmEyZDBlMDU2NDk4MmI5NTczMjcwMDkyZWQ1MDE0ZWQ2ZjMyYmQwOWQ=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-07-19T20:02:23Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-07-19T20:02:23Z"},"message":"OPENJPA-1704: Fix PCEnhancer to generate proper readExternal method. Merged to 2.0.x - submitted by Rick Curtis\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@965610 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"2b5ccff1f93428097a28f4fc8756410c4ae80d96","url":"https://api.github.com/repos/apache/openjpa/git/trees/2b5ccff1f93428097a28f4fc8756410c4ae80d96"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/a2d0e0564982b9573270092ed5014ed6f32bd09d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/a2d0e0564982b9573270092ed5014ed6f32bd09d","html_url":"https://github.com/apache/openjpa/commit/a2d0e0564982b9573270092ed5014ed6f32bd09d","comments_url":"https://api.github.com/repos/apache/openjpa/commits/a2d0e0564982b9573270092ed5014ed6f32bd09d/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"dcb8e626a3b634bbacb87c80f40a81643f5653d5","url":"https://api.github.com/repos/apache/openjpa/commits/dcb8e626a3b634bbacb87c80f40a81643f5653d5","html_url":"https://github.com/apache/openjpa/commit/dcb8e626a3b634bbacb87c80f40a81643f5653d5"}]},{"sha":"e34e85396e08fda7c9ddec531869b0cc2dd6291b","node_id":"MDY6Q29tbWl0MjA2MzY0OmUzNGU4NTM5NmUwOGZkYTdjOWRkZWM1MzE4NjliMGNjMmRkNjI5MWI=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-07-21T13:42:53Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-07-21T13:42:53Z"},"message":"OPENJPA-1501: trim trailing whitespace for entities with String IDs\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@966225 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"315ca5699c7531b81368c8ea727f470c240a0537","url":"https://api.github.com/repos/apache/openjpa/git/trees/315ca5699c7531b81368c8ea727f470c240a0537"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/e34e85396e08fda7c9ddec531869b0cc2dd6291b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/e34e85396e08fda7c9ddec531869b0cc2dd6291b","html_url":"https://github.com/apache/openjpa/commit/e34e85396e08fda7c9ddec531869b0cc2dd6291b","comments_url":"https://api.github.com/repos/apache/openjpa/commits/e34e85396e08fda7c9ddec531869b0cc2dd6291b/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"a2d0e0564982b9573270092ed5014ed6f32bd09d","url":"https://api.github.com/repos/apache/openjpa/commits/a2d0e0564982b9573270092ed5014ed6f32bd09d","html_url":"https://github.com/apache/openjpa/commit/a2d0e0564982b9573270092ed5014ed6f32bd09d"}]},{"sha":"1d667e8d67dfa0f2d730dc121c657b1015f9da3e","node_id":"MDY6Q29tbWl0MjA2MzY0OjFkNjY3ZThkNjdkZmEwZjJkNzMwZGMxMjFjNjU3YjEwMTVmOWRhM2U=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-07-21T16:42:02Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-07-21T16:42:02Z"},"message":"OPENJPA-1719: Prepared SQL cache user parameter ordering problem with subqueries.\nOriginally fixed in trunk by Catalina Wei\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@966307 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"8a11d852c0d5ea211f497d90fc20dbb5db4d245c","url":"https://api.github.com/repos/apache/openjpa/git/trees/8a11d852c0d5ea211f497d90fc20dbb5db4d245c"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/1d667e8d67dfa0f2d730dc121c657b1015f9da3e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/1d667e8d67dfa0f2d730dc121c657b1015f9da3e","html_url":"https://github.com/apache/openjpa/commit/1d667e8d67dfa0f2d730dc121c657b1015f9da3e","comments_url":"https://api.github.com/repos/apache/openjpa/commits/1d667e8d67dfa0f2d730dc121c657b1015f9da3e/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"e34e85396e08fda7c9ddec531869b0cc2dd6291b","url":"https://api.github.com/repos/apache/openjpa/commits/e34e85396e08fda7c9ddec531869b0cc2dd6291b","html_url":"https://github.com/apache/openjpa/commit/e34e85396e08fda7c9ddec531869b0cc2dd6291b"}]},{"sha":"bfffc19ab640114fb703a7e92783a136c93aa2f8","node_id":"MDY6Q29tbWl0MjA2MzY0OmJmZmZjMTlhYjY0MDExNGZiNzAzYTdlOTI3ODNhMTM2YzkzYWEyZjg=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-07-21T18:00:18Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-07-21T18:00:18Z"},"message":"OPENJPA-1714 Added Optimistic check as part the logic for setting the default lock mode for named queries in order to retain 1.x behavior. \nOriginal changes made in trunk by Jeremy Bauer\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@966333 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"5db9d9776e2a4c4aa4d9f6831951ff8c955bafde","url":"https://api.github.com/repos/apache/openjpa/git/trees/5db9d9776e2a4c4aa4d9f6831951ff8c955bafde"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/bfffc19ab640114fb703a7e92783a136c93aa2f8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/bfffc19ab640114fb703a7e92783a136c93aa2f8","html_url":"https://github.com/apache/openjpa/commit/bfffc19ab640114fb703a7e92783a136c93aa2f8","comments_url":"https://api.github.com/repos/apache/openjpa/commits/bfffc19ab640114fb703a7e92783a136c93aa2f8/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"1d667e8d67dfa0f2d730dc121c657b1015f9da3e","url":"https://api.github.com/repos/apache/openjpa/commits/1d667e8d67dfa0f2d730dc121c657b1015f9da3e","html_url":"https://github.com/apache/openjpa/commit/1d667e8d67dfa0f2d730dc121c657b1015f9da3e"}]},{"sha":"3a993a604e63af1bcb25f5c2199fc74c0afc1f16","node_id":"MDY6Q29tbWl0MjA2MzY0OjNhOTkzYTYwNGU2M2FmMWJjYjI1ZjVjMjE5OWZjNzRjMGFmYzFmMTY=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-07-21T18:56:25Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-07-21T18:56:25Z"},"message":"OPENJPA-1737 Fix the openjpa bundle creation so MANIFEST.MF is the first artifact entry\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@966359 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"9500f64b4ec2d6b1614cc4b2798df89db30e0b89","url":"https://api.github.com/repos/apache/openjpa/git/trees/9500f64b4ec2d6b1614cc4b2798df89db30e0b89"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/3a993a604e63af1bcb25f5c2199fc74c0afc1f16","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/3a993a604e63af1bcb25f5c2199fc74c0afc1f16","html_url":"https://github.com/apache/openjpa/commit/3a993a604e63af1bcb25f5c2199fc74c0afc1f16","comments_url":"https://api.github.com/repos/apache/openjpa/commits/3a993a604e63af1bcb25f5c2199fc74c0afc1f16/comments","author":null,"committer":null,"parents":[{"sha":"bfffc19ab640114fb703a7e92783a136c93aa2f8","url":"https://api.github.com/repos/apache/openjpa/commits/bfffc19ab640114fb703a7e92783a136c93aa2f8","html_url":"https://github.com/apache/openjpa/commit/bfffc19ab640114fb703a7e92783a136c93aa2f8"}]},{"sha":"6595dac6b0ec220a748d602a5733d81c9bc8b250","node_id":"MDY6Q29tbWl0MjA2MzY0OjY1OTVkYWM2YjBlYzIyMGE3NDhkNjAyYTU3MzNkODFjOWJjOGIyNTA=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-07-21T19:55:59Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-07-21T19:55:59Z"},"message":"OPENJPA-1637 Upgrade to latest Geronimo Specs for JPA2 and Bean Validation which fixes some OSGi metadata and service registry for Apache Aries.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@966391 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"3803a692dab312a0d4f1d3890596388b062c25f1","url":"https://api.github.com/repos/apache/openjpa/git/trees/3803a692dab312a0d4f1d3890596388b062c25f1"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/6595dac6b0ec220a748d602a5733d81c9bc8b250","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/6595dac6b0ec220a748d602a5733d81c9bc8b250","html_url":"https://github.com/apache/openjpa/commit/6595dac6b0ec220a748d602a5733d81c9bc8b250","comments_url":"https://api.github.com/repos/apache/openjpa/commits/6595dac6b0ec220a748d602a5733d81c9bc8b250/comments","author":null,"committer":null,"parents":[{"sha":"3a993a604e63af1bcb25f5c2199fc74c0afc1f16","url":"https://api.github.com/repos/apache/openjpa/commits/3a993a604e63af1bcb25f5c2199fc74c0afc1f16","html_url":"https://github.com/apache/openjpa/commit/3a993a604e63af1bcb25f5c2199fc74c0afc1f16"}]},{"sha":"b0b74b2b58f143d74a99543f99e7d5239fc2e761","node_id":"MDY6Q29tbWl0MjA2MzY0OmIwYjc0YjJiNThmMTQzZDc0YTk5NTQzZjk5ZTdkNTIzOWZjMmU3NjE=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-07-21T21:32:05Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-07-21T21:32:05Z"},"message":"OPENJPA-1735 Mark commons-logging as provided in the build to remove transient maven dependency\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@966426 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c27d7ba06738d9212584644fdc4706ac480ed345","url":"https://api.github.com/repos/apache/openjpa/git/trees/c27d7ba06738d9212584644fdc4706ac480ed345"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/b0b74b2b58f143d74a99543f99e7d5239fc2e761","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/b0b74b2b58f143d74a99543f99e7d5239fc2e761","html_url":"https://github.com/apache/openjpa/commit/b0b74b2b58f143d74a99543f99e7d5239fc2e761","comments_url":"https://api.github.com/repos/apache/openjpa/commits/b0b74b2b58f143d74a99543f99e7d5239fc2e761/comments","author":null,"committer":null,"parents":[{"sha":"6595dac6b0ec220a748d602a5733d81c9bc8b250","url":"https://api.github.com/repos/apache/openjpa/commits/6595dac6b0ec220a748d602a5733d81c9bc8b250","html_url":"https://github.com/apache/openjpa/commit/6595dac6b0ec220a748d602a5733d81c9bc8b250"}]},{"sha":"a6f62b829c605518e6404f5a63d52a5fbe4b74fc","node_id":"MDY6Q29tbWl0MjA2MzY0OmE2ZjYyYjgyOWM2MDU1MThlNjQwNGY1YTYzZDUyYTVmYmU0Yjc0ZmM=","commit":{"author":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2010-07-22T02:43:16Z"},"committer":{"name":"Patrick Linskey","email":"pcl@apache.org","date":"2010-07-22T02:43:16Z"},"message":"resolves OPENJPA-1743: anchors in mappingtool config invocation\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@966482 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"59aab1deafaeb26f69e22f6fbe89899ae2af8329","url":"https://api.github.com/repos/apache/openjpa/git/trees/59aab1deafaeb26f69e22f6fbe89899ae2af8329"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/a6f62b829c605518e6404f5a63d52a5fbe4b74fc","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/a6f62b829c605518e6404f5a63d52a5fbe4b74fc","html_url":"https://github.com/apache/openjpa/commit/a6f62b829c605518e6404f5a63d52a5fbe4b74fc","comments_url":"https://api.github.com/repos/apache/openjpa/commits/a6f62b829c605518e6404f5a63d52a5fbe4b74fc/comments","author":null,"committer":null,"parents":[{"sha":"b0b74b2b58f143d74a99543f99e7d5239fc2e761","url":"https://api.github.com/repos/apache/openjpa/commits/b0b74b2b58f143d74a99543f99e7d5239fc2e761","html_url":"https://github.com/apache/openjpa/commit/b0b74b2b58f143d74a99543f99e7d5239fc2e761"}]},{"sha":"51805b02f0bfc630316206975a2cd8ee642b2bd1","node_id":"MDY6Q29tbWl0MjA2MzY0OjUxODA1YjAyZjBiZmM2MzAzMTYyMDY5NzVhMmNkOGVlNjQyYjJiZDE=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-07-22T03:49:38Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-07-22T03:49:38Z"},"message":"OPENJPA-1743: reverting in 2.0.x at least for now.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@966496 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c27d7ba06738d9212584644fdc4706ac480ed345","url":"https://api.github.com/repos/apache/openjpa/git/trees/c27d7ba06738d9212584644fdc4706ac480ed345"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/51805b02f0bfc630316206975a2cd8ee642b2bd1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/51805b02f0bfc630316206975a2cd8ee642b2bd1","html_url":"https://github.com/apache/openjpa/commit/51805b02f0bfc630316206975a2cd8ee642b2bd1","comments_url":"https://api.github.com/repos/apache/openjpa/commits/51805b02f0bfc630316206975a2cd8ee642b2bd1/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"a6f62b829c605518e6404f5a63d52a5fbe4b74fc","url":"https://api.github.com/repos/apache/openjpa/commits/a6f62b829c605518e6404f5a63d52a5fbe4b74fc","html_url":"https://github.com/apache/openjpa/commit/a6f62b829c605518e6404f5a63d52a5fbe4b74fc"}]},{"sha":"d39c5806886fb5c81c2b959e5e0a602e7c93352c","node_id":"MDY6Q29tbWl0MjA2MzY0OmQzOWM1ODA2ODg2ZmI1YzgxYzJiOTU5ZTVlMGE2MDJlN2M5MzM1MmM=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-07-22T11:58:16Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-07-22T11:58:16Z"},"message":"OPENJPA-1742: move cfName logic to JDBCConfiguration, add tests for nonJTADataSource\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@966602 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"de4801bfa05e437362b656800968f8b203aa172f","url":"https://api.github.com/repos/apache/openjpa/git/trees/de4801bfa05e437362b656800968f8b203aa172f"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/d39c5806886fb5c81c2b959e5e0a602e7c93352c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/d39c5806886fb5c81c2b959e5e0a602e7c93352c","html_url":"https://github.com/apache/openjpa/commit/d39c5806886fb5c81c2b959e5e0a602e7c93352c","comments_url":"https://api.github.com/repos/apache/openjpa/commits/d39c5806886fb5c81c2b959e5e0a602e7c93352c/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"51805b02f0bfc630316206975a2cd8ee642b2bd1","url":"https://api.github.com/repos/apache/openjpa/commits/51805b02f0bfc630316206975a2cd8ee642b2bd1","html_url":"https://github.com/apache/openjpa/commit/51805b02f0bfc630316206975a2cd8ee642b2bd1"}]},{"sha":"f847c41369c0ce544bbb00d6a98d46d3eb406a06","node_id":"MDY6Q29tbWl0MjA2MzY0OmY4NDdjNDEzNjljMGNlNTQ0YmJiMDBkNmE5OGQ0NmQzZWI0MDZhMDY=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-07-22T15:06:07Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-07-22T15:06:07Z"},"message":"OPENJPA-1742: add documentation\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@966702 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"4cd761fa6defe7f552ea6a0cf54467e92c9b200a","url":"https://api.github.com/repos/apache/openjpa/git/trees/4cd761fa6defe7f552ea6a0cf54467e92c9b200a"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/f847c41369c0ce544bbb00d6a98d46d3eb406a06","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/f847c41369c0ce544bbb00d6a98d46d3eb406a06","html_url":"https://github.com/apache/openjpa/commit/f847c41369c0ce544bbb00d6a98d46d3eb406a06","comments_url":"https://api.github.com/repos/apache/openjpa/commits/f847c41369c0ce544bbb00d6a98d46d3eb406a06/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"d39c5806886fb5c81c2b959e5e0a602e7c93352c","url":"https://api.github.com/repos/apache/openjpa/commits/d39c5806886fb5c81c2b959e5e0a602e7c93352c","html_url":"https://github.com/apache/openjpa/commit/d39c5806886fb5c81c2b959e5e0a602e7c93352c"}]},{"sha":"2b92c3586a87dca68f09ed16a52d4ba531473959","node_id":"MDY6Q29tbWl0MjA2MzY0OjJiOTJjMzU4NmE4N2RjYTY4ZjA5ZWQxNmE1MmQ0YmE1MzE0NzM5NTk=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-07-22T16:22:16Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-07-22T16:22:16Z"},"message":"OPENJPA-1742: setting eol-style native\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@966730 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"4cd761fa6defe7f552ea6a0cf54467e92c9b200a","url":"https://api.github.com/repos/apache/openjpa/git/trees/4cd761fa6defe7f552ea6a0cf54467e92c9b200a"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/2b92c3586a87dca68f09ed16a52d4ba531473959","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/2b92c3586a87dca68f09ed16a52d4ba531473959","html_url":"https://github.com/apache/openjpa/commit/2b92c3586a87dca68f09ed16a52d4ba531473959","comments_url":"https://api.github.com/repos/apache/openjpa/commits/2b92c3586a87dca68f09ed16a52d4ba531473959/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"f847c41369c0ce544bbb00d6a98d46d3eb406a06","url":"https://api.github.com/repos/apache/openjpa/commits/f847c41369c0ce544bbb00d6a98d46d3eb406a06","html_url":"https://github.com/apache/openjpa/commit/f847c41369c0ce544bbb00d6a98d46d3eb406a06"}]},{"sha":"426db6e2b63b7004d054df5408cbc24ba9800702","node_id":"MDY6Q29tbWl0MjA2MzY0OjQyNmRiNmUyYjYzYjcwMDRkMDU0ZGY1NDA4Y2JjMjRiYTk4MDA3MDI=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-07-26T17:32:01Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-07-26T17:32:01Z"},"message":"OPENJPA-1719: Prepared SQL cache user parameter ordering problem with subqueries. Merged from Catalina's changes for trunk.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@979375 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"96e71b0bcfff57374d2f9ed349d01621b2399fe4","url":"https://api.github.com/repos/apache/openjpa/git/trees/96e71b0bcfff57374d2f9ed349d01621b2399fe4"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/426db6e2b63b7004d054df5408cbc24ba9800702","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/426db6e2b63b7004d054df5408cbc24ba9800702","html_url":"https://github.com/apache/openjpa/commit/426db6e2b63b7004d054df5408cbc24ba9800702","comments_url":"https://api.github.com/repos/apache/openjpa/commits/426db6e2b63b7004d054df5408cbc24ba9800702/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"2b92c3586a87dca68f09ed16a52d4ba531473959","url":"https://api.github.com/repos/apache/openjpa/commits/2b92c3586a87dca68f09ed16a52d4ba531473959","html_url":"https://github.com/apache/openjpa/commit/2b92c3586a87dca68f09ed16a52d4ba531473959"}]},{"sha":"d20e84a2949dbdb9945e979b7e897bb63b259dc5","node_id":"MDY6Q29tbWl0MjA2MzY0OmQyMGU4NGEyOTQ5ZGJkYjk5NDVlOTc5YjdlODk3YmI2M2IyNTlkYzU=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-07-26T19:43:36Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-07-26T19:43:36Z"},"message":"OPENJPA-1722, OPENJPA-1690: Make DistinctResultList serializable, and add writeReplace method. \nSubmitted by: Dianne Richards and Pinaki Poddar\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@979418 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0d6cc1faeb92b3b0ef337fb61e59b8415f6b6c05","url":"https://api.github.com/repos/apache/openjpa/git/trees/0d6cc1faeb92b3b0ef337fb61e59b8415f6b6c05"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/d20e84a2949dbdb9945e979b7e897bb63b259dc5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/d20e84a2949dbdb9945e979b7e897bb63b259dc5","html_url":"https://github.com/apache/openjpa/commit/d20e84a2949dbdb9945e979b7e897bb63b259dc5","comments_url":"https://api.github.com/repos/apache/openjpa/commits/d20e84a2949dbdb9945e979b7e897bb63b259dc5/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"426db6e2b63b7004d054df5408cbc24ba9800702","url":"https://api.github.com/repos/apache/openjpa/commits/426db6e2b63b7004d054df5408cbc24ba9800702","html_url":"https://github.com/apache/openjpa/commit/426db6e2b63b7004d054df5408cbc24ba9800702"}]},{"sha":"dba341a7d91133122f08c869d1b80bbcd65f4305","node_id":"MDY6Q29tbWl0MjA2MzY0OmRiYTM0MWE3ZDkxMTMzMTIyZjA4Yzg2OWQxYjgwYmJjZDY1ZjQzMDU=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-07-27T15:45:13Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-07-27T15:45:13Z"},"message":"Fix timing window with TestTimestampVerson and MySQL\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@979755 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"3d29311e4805597a4b0facde321c671a5141dae4","url":"https://api.github.com/repos/apache/openjpa/git/trees/3d29311e4805597a4b0facde321c671a5141dae4"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/dba341a7d91133122f08c869d1b80bbcd65f4305","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/dba341a7d91133122f08c869d1b80bbcd65f4305","html_url":"https://github.com/apache/openjpa/commit/dba341a7d91133122f08c869d1b80bbcd65f4305","comments_url":"https://api.github.com/repos/apache/openjpa/commits/dba341a7d91133122f08c869d1b80bbcd65f4305/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"d20e84a2949dbdb9945e979b7e897bb63b259dc5","url":"https://api.github.com/repos/apache/openjpa/commits/d20e84a2949dbdb9945e979b7e897bb63b259dc5","html_url":"https://github.com/apache/openjpa/commit/d20e84a2949dbdb9945e979b7e897bb63b259dc5"}]},{"sha":"4a1501ed9dbadbcf047a76fd4c614448768cb253","node_id":"MDY6Q29tbWl0MjA2MzY0OjRhMTUwMWVkOWRiYWRiY2YwNDdhNzZmZDRjNjE0NDQ4NzY4Y2IyNTM=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-07-28T20:32:42Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-07-28T20:32:42Z"},"message":"OPENJPA-1749: Throw exception when incompatible configuration options are set\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@980199 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"fa0b14a864cedab52102ab95957996a2847feab0","url":"https://api.github.com/repos/apache/openjpa/git/trees/fa0b14a864cedab52102ab95957996a2847feab0"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/4a1501ed9dbadbcf047a76fd4c614448768cb253","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/4a1501ed9dbadbcf047a76fd4c614448768cb253","html_url":"https://github.com/apache/openjpa/commit/4a1501ed9dbadbcf047a76fd4c614448768cb253","comments_url":"https://api.github.com/repos/apache/openjpa/commits/4a1501ed9dbadbcf047a76fd4c614448768cb253/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"dba341a7d91133122f08c869d1b80bbcd65f4305","url":"https://api.github.com/repos/apache/openjpa/commits/dba341a7d91133122f08c869d1b80bbcd65f4305","html_url":"https://github.com/apache/openjpa/commit/dba341a7d91133122f08c869d1b80bbcd65f4305"}]},{"sha":"010870ed56f6610196252d635b248b30fde0d09f","node_id":"MDY6Q29tbWl0MjA2MzY0OjAxMDg3MGVkNTZmNjYxMDE5NjI1MmQ2MzViMjQ4YjMwZmRlMGQwOWY=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-06T18:49:38Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-06T18:49:38Z"},"message":"OPENJPA-1712 Some POM cleanup\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@983095 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"f56b4262dd419f1318c433a238ba00b1318f9b52","url":"https://api.github.com/repos/apache/openjpa/git/trees/f56b4262dd419f1318c433a238ba00b1318f9b52"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/010870ed56f6610196252d635b248b30fde0d09f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/010870ed56f6610196252d635b248b30fde0d09f","html_url":"https://github.com/apache/openjpa/commit/010870ed56f6610196252d635b248b30fde0d09f","comments_url":"https://api.github.com/repos/apache/openjpa/commits/010870ed56f6610196252d635b248b30fde0d09f/comments","author":null,"committer":null,"parents":[{"sha":"4a1501ed9dbadbcf047a76fd4c614448768cb253","url":"https://api.github.com/repos/apache/openjpa/commits/4a1501ed9dbadbcf047a76fd4c614448768cb253","html_url":"https://github.com/apache/openjpa/commit/4a1501ed9dbadbcf047a76fd4c614448768cb253"}]},{"sha":"697b34b9eef07f913fd1533494a8dff9d6f61f46","node_id":"MDY6Q29tbWl0MjA2MzY0OjY5N2IzNGI5ZWVmMDdmOTEzZmQxNTMzNDk0YThkZmY5ZDZmNjFmNDY=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-07T14:00:37Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-07T14:00:37Z"},"message":"OPENJPA-1712 Upgrade builds to use Apache hosted Nexus repo.  Backported from trunk.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@983230 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"460c06ecbe367ae0ccab180f1afb1e791f280075","url":"https://api.github.com/repos/apache/openjpa/git/trees/460c06ecbe367ae0ccab180f1afb1e791f280075"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/697b34b9eef07f913fd1533494a8dff9d6f61f46","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/697b34b9eef07f913fd1533494a8dff9d6f61f46","html_url":"https://github.com/apache/openjpa/commit/697b34b9eef07f913fd1533494a8dff9d6f61f46","comments_url":"https://api.github.com/repos/apache/openjpa/commits/697b34b9eef07f913fd1533494a8dff9d6f61f46/comments","author":null,"committer":null,"parents":[{"sha":"010870ed56f6610196252d635b248b30fde0d09f","url":"https://api.github.com/repos/apache/openjpa/commits/010870ed56f6610196252d635b248b30fde0d09f","html_url":"https://github.com/apache/openjpa/commit/010870ed56f6610196252d635b248b30fde0d09f"}]},{"sha":"df61400a8c1d52ae48446f90cd3c41f40f2792d4","node_id":"MDY6Q29tbWl0MjA2MzY0OmRmNjE0MDBhOGMxZDUyYWU0ODQ0NmY5MGNkM2M0MWY0MGYyNzkyZDQ=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-10T12:41:55Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-10T12:41:55Z"},"message":"OPENJPA-1712 cleanup some whitespace formatting\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@983965 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"96c2c30f31101c2191276eb5b2f468c56bc0780b","url":"https://api.github.com/repos/apache/openjpa/git/trees/96c2c30f31101c2191276eb5b2f468c56bc0780b"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/df61400a8c1d52ae48446f90cd3c41f40f2792d4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/df61400a8c1d52ae48446f90cd3c41f40f2792d4","html_url":"https://github.com/apache/openjpa/commit/df61400a8c1d52ae48446f90cd3c41f40f2792d4","comments_url":"https://api.github.com/repos/apache/openjpa/commits/df61400a8c1d52ae48446f90cd3c41f40f2792d4/comments","author":null,"committer":null,"parents":[{"sha":"697b34b9eef07f913fd1533494a8dff9d6f61f46","url":"https://api.github.com/repos/apache/openjpa/commits/697b34b9eef07f913fd1533494a8dff9d6f61f46","html_url":"https://github.com/apache/openjpa/commit/697b34b9eef07f913fd1533494a8dff9d6f61f46"}]},{"sha":"0a7765ecaf7616ec26438dfc56fd83c0d47d154f","node_id":"MDY6Q29tbWl0MjA2MzY0OjBhNzc2NWVjYWY3NjE2ZWMyNjQzOGRmYzU2ZmQ4M2MwZDQ3ZDE1NGY=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-10T12:48:15Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-10T12:48:15Z"},"message":"OPENJPA-1712 switch validation providers from Hibernate to Apache BVAL to match trunk and to fix Java SE 5 testing\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@983972 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"e77fa337fbcfb3d30001500f3e3022c440147324","url":"https://api.github.com/repos/apache/openjpa/git/trees/e77fa337fbcfb3d30001500f3e3022c440147324"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/0a7765ecaf7616ec26438dfc56fd83c0d47d154f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/0a7765ecaf7616ec26438dfc56fd83c0d47d154f","html_url":"https://github.com/apache/openjpa/commit/0a7765ecaf7616ec26438dfc56fd83c0d47d154f","comments_url":"https://api.github.com/repos/apache/openjpa/commits/0a7765ecaf7616ec26438dfc56fd83c0d47d154f/comments","author":null,"committer":null,"parents":[{"sha":"df61400a8c1d52ae48446f90cd3c41f40f2792d4","url":"https://api.github.com/repos/apache/openjpa/commits/df61400a8c1d52ae48446f90cd3c41f40f2792d4","html_url":"https://github.com/apache/openjpa/commit/df61400a8c1d52ae48446f90cd3c41f40f2792d4"}]},{"sha":"c39937c68f8a860deedcd3b56a1ccb7171de5c92","node_id":"MDY6Q29tbWl0MjA2MzY0OmMzOTkzN2M2OGY4YTg2MGRlZWRjZDNiNTZhMWNjYjcxNzFkZTVjOTI=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-10T13:17:25Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-10T13:17:25Z"},"message":"OPENJPA-1712 add validation build notes for Java SE 5 testing\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@983986 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"91dbf8ebab582bd75aad38ca49b559ec33311c90","url":"https://api.github.com/repos/apache/openjpa/git/trees/91dbf8ebab582bd75aad38ca49b559ec33311c90"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/c39937c68f8a860deedcd3b56a1ccb7171de5c92","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/c39937c68f8a860deedcd3b56a1ccb7171de5c92","html_url":"https://github.com/apache/openjpa/commit/c39937c68f8a860deedcd3b56a1ccb7171de5c92","comments_url":"https://api.github.com/repos/apache/openjpa/commits/c39937c68f8a860deedcd3b56a1ccb7171de5c92/comments","author":null,"committer":null,"parents":[{"sha":"0a7765ecaf7616ec26438dfc56fd83c0d47d154f","url":"https://api.github.com/repos/apache/openjpa/commits/0a7765ecaf7616ec26438dfc56fd83c0d47d154f","html_url":"https://github.com/apache/openjpa/commit/0a7765ecaf7616ec26438dfc56fd83c0d47d154f"}]},{"sha":"78fe423ce18137694431da7b29e2397bd9c65eec","node_id":"MDY6Q29tbWl0MjA2MzY0Ojc4ZmU0MjNjZTE4MTM3Njk0NDMxZGE3YjI5ZTIzOTdiZDljNjVlZWM=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-10T18:04:38Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-10T18:04:38Z"},"message":"OPENJPA-1712 BVAL requires commons-lang 2.4 or later\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@984151 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"055c14c9a9de1bceedf254b9b321573123f85a7f","url":"https://api.github.com/repos/apache/openjpa/git/trees/055c14c9a9de1bceedf254b9b321573123f85a7f"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/78fe423ce18137694431da7b29e2397bd9c65eec","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/78fe423ce18137694431da7b29e2397bd9c65eec","html_url":"https://github.com/apache/openjpa/commit/78fe423ce18137694431da7b29e2397bd9c65eec","comments_url":"https://api.github.com/repos/apache/openjpa/commits/78fe423ce18137694431da7b29e2397bd9c65eec/comments","author":null,"committer":null,"parents":[{"sha":"c39937c68f8a860deedcd3b56a1ccb7171de5c92","url":"https://api.github.com/repos/apache/openjpa/commits/c39937c68f8a860deedcd3b56a1ccb7171de5c92","html_url":"https://github.com/apache/openjpa/commit/c39937c68f8a860deedcd3b56a1ccb7171de5c92"}]},{"sha":"077f9d7f823dedc4d7a4fcda989b4be0ebb1f32a","node_id":"MDY6Q29tbWl0MjA2MzY0OjA3N2Y5ZDdmODIzZGVkYzRkN2E0ZmNkYTk4OWI0YmUwZWJiMWYzMmE=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-08-12T22:05:27Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-08-12T22:05:27Z"},"message":"OPENJPA-1668: Allow custom sequence SQL strings for DB2 on z/os and iseries. \nSubmitted By: Heath Thomann\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@985013 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"57efd7d3ce648523c2d2428449f49122cb4b8e7c","url":"https://api.github.com/repos/apache/openjpa/git/trees/57efd7d3ce648523c2d2428449f49122cb4b8e7c"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/077f9d7f823dedc4d7a4fcda989b4be0ebb1f32a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/077f9d7f823dedc4d7a4fcda989b4be0ebb1f32a","html_url":"https://github.com/apache/openjpa/commit/077f9d7f823dedc4d7a4fcda989b4be0ebb1f32a","comments_url":"https://api.github.com/repos/apache/openjpa/commits/077f9d7f823dedc4d7a4fcda989b4be0ebb1f32a/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"78fe423ce18137694431da7b29e2397bd9c65eec","url":"https://api.github.com/repos/apache/openjpa/commits/78fe423ce18137694431da7b29e2397bd9c65eec","html_url":"https://github.com/apache/openjpa/commit/78fe423ce18137694431da7b29e2397bd9c65eec"}]},{"sha":"d1ed604dc14307ca585ebcf7e3f55c6f3f578245","node_id":"MDY6Q29tbWl0MjA2MzY0OmQxZWQ2MDRkYzE0MzA3Y2E1ODVlYmNmN2UzZjU1YzZmM2Y1NzgyNDU=","commit":{"author":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2010-08-13T16:50:34Z"},"committer":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2010-08-13T16:50:34Z"},"message":"OPENJPA-1753 Update same test case changes from trunk to 2.0.x.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@985280 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"1d1f0bf6a0ff3022b1115762cc45eda82408ef09","url":"https://api.github.com/repos/apache/openjpa/git/trees/1d1f0bf6a0ff3022b1115762cc45eda82408ef09"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/d1ed604dc14307ca585ebcf7e3f55c6f3f578245","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/d1ed604dc14307ca585ebcf7e3f55c6f3f578245","html_url":"https://github.com/apache/openjpa/commit/d1ed604dc14307ca585ebcf7e3f55c6f3f578245","comments_url":"https://api.github.com/repos/apache/openjpa/commits/d1ed604dc14307ca585ebcf7e3f55c6f3f578245/comments","author":null,"committer":null,"parents":[{"sha":"077f9d7f823dedc4d7a4fcda989b4be0ebb1f32a","url":"https://api.github.com/repos/apache/openjpa/commits/077f9d7f823dedc4d7a4fcda989b4be0ebb1f32a","html_url":"https://github.com/apache/openjpa/commit/077f9d7f823dedc4d7a4fcda989b4be0ebb1f32a"}]},{"sha":"83560d0854cd0aea5119c551aa4131aa11bf1139","node_id":"MDY6Q29tbWl0MjA2MzY0OjgzNTYwZDA4NTRjZDBhZWE1MTE5YzU1MWFhNDEzMWFhMTFiZjExMzk=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-08-13T20:18:48Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-08-13T20:18:48Z"},"message":"OPENJPA-1424: Adding testcase. \nSubmitted By: Heath Thomann and Daryl Stultz\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@985343 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"209abbb33524201d679d320c30551d23e409ca3d","url":"https://api.github.com/repos/apache/openjpa/git/trees/209abbb33524201d679d320c30551d23e409ca3d"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/83560d0854cd0aea5119c551aa4131aa11bf1139","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/83560d0854cd0aea5119c551aa4131aa11bf1139","html_url":"https://github.com/apache/openjpa/commit/83560d0854cd0aea5119c551aa4131aa11bf1139","comments_url":"https://api.github.com/repos/apache/openjpa/commits/83560d0854cd0aea5119c551aa4131aa11bf1139/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"d1ed604dc14307ca585ebcf7e3f55c6f3f578245","url":"https://api.github.com/repos/apache/openjpa/commits/d1ed604dc14307ca585ebcf7e3f55c6f3f578245","html_url":"https://github.com/apache/openjpa/commit/d1ed604dc14307ca585ebcf7e3f55c6f3f578245"}]},{"sha":"0a0d7f78100b5b6243751a66d1f4d6ed59ebaa0b","node_id":"MDY6Q29tbWl0MjA2MzY0OjBhMGQ3Zjc4MTAwYjViNjI0Mzc1MWE2NmQxZjRkNmVkNTllYmFhMGI=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-08-14T18:09:18Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-08-14T18:09:18Z"},"message":"Check if database supports query timeouts, merged from Fay's changes for OPENJPA-1726\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@985551 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"e75e63085f0ae0066bf254ce44552099af40521c","url":"https://api.github.com/repos/apache/openjpa/git/trees/e75e63085f0ae0066bf254ce44552099af40521c"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/0a0d7f78100b5b6243751a66d1f4d6ed59ebaa0b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/0a0d7f78100b5b6243751a66d1f4d6ed59ebaa0b","html_url":"https://github.com/apache/openjpa/commit/0a0d7f78100b5b6243751a66d1f4d6ed59ebaa0b","comments_url":"https://api.github.com/repos/apache/openjpa/commits/0a0d7f78100b5b6243751a66d1f4d6ed59ebaa0b/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"83560d0854cd0aea5119c551aa4131aa11bf1139","url":"https://api.github.com/repos/apache/openjpa/commits/83560d0854cd0aea5119c551aa4131aa11bf1139","html_url":"https://github.com/apache/openjpa/commit/83560d0854cd0aea5119c551aa4131aa11bf1139"}]},{"sha":"212bfb1a4a9eac4a9cbf1412a3e26d1121ef89a7","node_id":"MDY6Q29tbWl0MjA2MzY0OjIxMmJmYjFhNGE5ZWFjNGE5Y2JmMTQxMmEzZTI2ZDExMjFlZjg5YTc=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-08-14T18:37:41Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-08-14T18:37:41Z"},"message":"OPENJPA-1752: TestPessimisticLocks JUNIT test produced inconsistent behavior with various backends.\nSubmitted By: Catalina Wei\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@985560 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"b631f3318eb90305906acf9011f186999f40e123","url":"https://api.github.com/repos/apache/openjpa/git/trees/b631f3318eb90305906acf9011f186999f40e123"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/212bfb1a4a9eac4a9cbf1412a3e26d1121ef89a7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/212bfb1a4a9eac4a9cbf1412a3e26d1121ef89a7","html_url":"https://github.com/apache/openjpa/commit/212bfb1a4a9eac4a9cbf1412a3e26d1121ef89a7","comments_url":"https://api.github.com/repos/apache/openjpa/commits/212bfb1a4a9eac4a9cbf1412a3e26d1121ef89a7/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"0a0d7f78100b5b6243751a66d1f4d6ed59ebaa0b","url":"https://api.github.com/repos/apache/openjpa/commits/0a0d7f78100b5b6243751a66d1f4d6ed59ebaa0b","html_url":"https://github.com/apache/openjpa/commit/0a0d7f78100b5b6243751a66d1f4d6ed59ebaa0b"}]},{"sha":"4560ddf64fd5150b1fcb0ac7f9b53deaae3e09f1","node_id":"MDY6Q29tbWl0MjA2MzY0OjQ1NjBkZGY2NGZkNTE1MGIxZmNiMGFjN2Y5YjUzZGVhYWUzZTA5ZjE=","commit":{"author":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-08-14T19:39:01Z"},"committer":{"name":"Michael Dick","email":"mikedd@apache.org","date":"2010-08-14T19:39:01Z"},"message":"get lock clause from DBDictionary\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@985574 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"057213ac1697d2382f00c20163efc3fe038dcf8f","url":"https://api.github.com/repos/apache/openjpa/git/trees/057213ac1697d2382f00c20163efc3fe038dcf8f"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/4560ddf64fd5150b1fcb0ac7f9b53deaae3e09f1","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/4560ddf64fd5150b1fcb0ac7f9b53deaae3e09f1","html_url":"https://github.com/apache/openjpa/commit/4560ddf64fd5150b1fcb0ac7f9b53deaae3e09f1","comments_url":"https://api.github.com/repos/apache/openjpa/commits/4560ddf64fd5150b1fcb0ac7f9b53deaae3e09f1/comments","author":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"committer":{"login":"mikedd","id":669432,"node_id":"MDQ6VXNlcjY2OTQzMg==","avatar_url":"https://avatars.githubusercontent.com/u/669432?v=4","gravatar_id":"","url":"https://api.github.com/users/mikedd","html_url":"https://github.com/mikedd","followers_url":"https://api.github.com/users/mikedd/followers","following_url":"https://api.github.com/users/mikedd/following{/other_user}","gists_url":"https://api.github.com/users/mikedd/gists{/gist_id}","starred_url":"https://api.github.com/users/mikedd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikedd/subscriptions","organizations_url":"https://api.github.com/users/mikedd/orgs","repos_url":"https://api.github.com/users/mikedd/repos","events_url":"https://api.github.com/users/mikedd/events{/privacy}","received_events_url":"https://api.github.com/users/mikedd/received_events","type":"User","site_admin":false},"parents":[{"sha":"212bfb1a4a9eac4a9cbf1412a3e26d1121ef89a7","url":"https://api.github.com/repos/apache/openjpa/commits/212bfb1a4a9eac4a9cbf1412a3e26d1121ef89a7","html_url":"https://github.com/apache/openjpa/commit/212bfb1a4a9eac4a9cbf1412a3e26d1121ef89a7"}]},{"sha":"315a0d0e436654be8ff92c3b0d66521ba7e7faa7","node_id":"MDY6Q29tbWl0MjA2MzY0OjMxNWEwZDBlNDM2NjU0YmU4ZmY5MmMzYjBkNjY1MjFiYTdlN2ZhYTc=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-16T19:22:06Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-16T19:22:06Z"},"message":"OPENJPA-1712 Move common test-java5 profile depends to the parent pom\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@986101 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"f240f680396ea899303de9707ef6516873db3071","url":"https://api.github.com/repos/apache/openjpa/git/trees/f240f680396ea899303de9707ef6516873db3071"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/315a0d0e436654be8ff92c3b0d66521ba7e7faa7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/315a0d0e436654be8ff92c3b0d66521ba7e7faa7","html_url":"https://github.com/apache/openjpa/commit/315a0d0e436654be8ff92c3b0d66521ba7e7faa7","comments_url":"https://api.github.com/repos/apache/openjpa/commits/315a0d0e436654be8ff92c3b0d66521ba7e7faa7/comments","author":null,"committer":null,"parents":[{"sha":"4560ddf64fd5150b1fcb0ac7f9b53deaae3e09f1","url":"https://api.github.com/repos/apache/openjpa/commits/4560ddf64fd5150b1fcb0ac7f9b53deaae3e09f1","html_url":"https://github.com/apache/openjpa/commit/4560ddf64fd5150b1fcb0ac7f9b53deaae3e09f1"}]},{"sha":"5185b5900f6980b53a6731c1cf1dd505108d839f","node_id":"MDY6Q29tbWl0MjA2MzY0OjUxODViNTkwMGY2OTgwYjUzYTY3MzFjMWNmMWRkNTA1MTA4ZDgzOWY=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-16T21:39:30Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-16T21:39:30Z"},"message":"updating release notes for 2.0.1\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@986134 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"fd2236e3dd54b178e44dbcbb92033bc50adbcea6","url":"https://api.github.com/repos/apache/openjpa/git/trees/fd2236e3dd54b178e44dbcbb92033bc50adbcea6"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/5185b5900f6980b53a6731c1cf1dd505108d839f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/5185b5900f6980b53a6731c1cf1dd505108d839f","html_url":"https://github.com/apache/openjpa/commit/5185b5900f6980b53a6731c1cf1dd505108d839f","comments_url":"https://api.github.com/repos/apache/openjpa/commits/5185b5900f6980b53a6731c1cf1dd505108d839f/comments","author":null,"committer":null,"parents":[{"sha":"315a0d0e436654be8ff92c3b0d66521ba7e7faa7","url":"https://api.github.com/repos/apache/openjpa/commits/315a0d0e436654be8ff92c3b0d66521ba7e7faa7","html_url":"https://github.com/apache/openjpa/commit/315a0d0e436654be8ff92c3b0d66521ba7e7faa7"}]},{"sha":"5e38145fa1b86fecaf9398b03b1418b84356151c","node_id":"MDY6Q29tbWl0MjA2MzY0OjVlMzgxNDVmYTFiODZmZWNhZjkzOThiMDNiMTQxOGI4NDM1NjE1MWM=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-17T12:30:40Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-17T12:30:40Z"},"message":"OPENJPA-1712 use project.version instead of pom.version\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@986294 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"236ae8770bf0aef2d0befa86a58f8f97e78a5b8f","url":"https://api.github.com/repos/apache/openjpa/git/trees/236ae8770bf0aef2d0befa86a58f8f97e78a5b8f"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/5e38145fa1b86fecaf9398b03b1418b84356151c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/5e38145fa1b86fecaf9398b03b1418b84356151c","html_url":"https://github.com/apache/openjpa/commit/5e38145fa1b86fecaf9398b03b1418b84356151c","comments_url":"https://api.github.com/repos/apache/openjpa/commits/5e38145fa1b86fecaf9398b03b1418b84356151c/comments","author":null,"committer":null,"parents":[{"sha":"5185b5900f6980b53a6731c1cf1dd505108d839f","url":"https://api.github.com/repos/apache/openjpa/commits/5185b5900f6980b53a6731c1cf1dd505108d839f","html_url":"https://github.com/apache/openjpa/commit/5185b5900f6980b53a6731c1cf1dd505108d839f"}]},{"sha":"aa2cbe7623f2a5bfaad7c8ce9c6017a9de5ef64a","node_id":"MDY6Q29tbWl0MjA2MzY0OmFhMmNiZTc2MjNmMmE1YmZhYWQ3YzhjZTljNjAxN2E5ZGU1ZWY2NGE=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-17T14:32:04Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-17T14:32:04Z"},"message":"OPENJPA-1712 add missing license header\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@986326 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"ad156fac1b5e859e628cd521f80600a1f5c2eb42","url":"https://api.github.com/repos/apache/openjpa/git/trees/ad156fac1b5e859e628cd521f80600a1f5c2eb42"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/aa2cbe7623f2a5bfaad7c8ce9c6017a9de5ef64a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/aa2cbe7623f2a5bfaad7c8ce9c6017a9de5ef64a","html_url":"https://github.com/apache/openjpa/commit/aa2cbe7623f2a5bfaad7c8ce9c6017a9de5ef64a","comments_url":"https://api.github.com/repos/apache/openjpa/commits/aa2cbe7623f2a5bfaad7c8ce9c6017a9de5ef64a/comments","author":null,"committer":null,"parents":[{"sha":"5e38145fa1b86fecaf9398b03b1418b84356151c","url":"https://api.github.com/repos/apache/openjpa/commits/5e38145fa1b86fecaf9398b03b1418b84356151c","html_url":"https://github.com/apache/openjpa/commit/5e38145fa1b86fecaf9398b03b1418b84356151c"}]},{"sha":"620dcb9a0bbe18efb8481f89e8993f2c3207e31e","node_id":"MDY6Q29tbWl0MjA2MzY0OjYyMGRjYjlhMGJiZTE4ZWZiODQ4MWY4OWU4OTkzZjJjMzIwN2UzMWU=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-17T14:33:26Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-17T14:33:26Z"},"message":"OPENJPA-1712 remove duplicate openjpa-parent pom entries that are defined in apache-7.pom and simplify build to always run full apache-rat and source.jar targets\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@986328 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"f608a970f6a9c47806667fd5246172d7dcd438ff","url":"https://api.github.com/repos/apache/openjpa/git/trees/f608a970f6a9c47806667fd5246172d7dcd438ff"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/620dcb9a0bbe18efb8481f89e8993f2c3207e31e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/620dcb9a0bbe18efb8481f89e8993f2c3207e31e","html_url":"https://github.com/apache/openjpa/commit/620dcb9a0bbe18efb8481f89e8993f2c3207e31e","comments_url":"https://api.github.com/repos/apache/openjpa/commits/620dcb9a0bbe18efb8481f89e8993f2c3207e31e/comments","author":null,"committer":null,"parents":[{"sha":"aa2cbe7623f2a5bfaad7c8ce9c6017a9de5ef64a","url":"https://api.github.com/repos/apache/openjpa/commits/aa2cbe7623f2a5bfaad7c8ce9c6017a9de5ef64a","html_url":"https://github.com/apache/openjpa/commit/aa2cbe7623f2a5bfaad7c8ce9c6017a9de5ef64a"}]},{"sha":"1ba05bac062c9338b59685cd58fd45d1be945592","node_id":"MDY6Q29tbWl0MjA2MzY0OjFiYTA1YmFjMDYyYzkzMzhiNTk2ODVjZDU4ZmQ0NWQxYmU5NDU1OTI=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-17T14:47:03Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-17T14:47:03Z"},"message":"OPENJPA-1712 remove cyclical depend in openjpa-maven-plugin\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@986334 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"535e339b31e71b8c80616966141128ede40ad962","url":"https://api.github.com/repos/apache/openjpa/git/trees/535e339b31e71b8c80616966141128ede40ad962"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/1ba05bac062c9338b59685cd58fd45d1be945592","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/1ba05bac062c9338b59685cd58fd45d1be945592","html_url":"https://github.com/apache/openjpa/commit/1ba05bac062c9338b59685cd58fd45d1be945592","comments_url":"https://api.github.com/repos/apache/openjpa/commits/1ba05bac062c9338b59685cd58fd45d1be945592/comments","author":null,"committer":null,"parents":[{"sha":"620dcb9a0bbe18efb8481f89e8993f2c3207e31e","url":"https://api.github.com/repos/apache/openjpa/commits/620dcb9a0bbe18efb8481f89e8993f2c3207e31e","html_url":"https://github.com/apache/openjpa/commit/620dcb9a0bbe18efb8481f89e8993f2c3207e31e"}]},{"sha":"934143df65cb9847da379270721496e8ec9febfe","node_id":"MDY6Q29tbWl0MjA2MzY0OjkzNDE0M2RmNjVjYjk4NDdkYTM3OTI3MDcyMTQ5NmU4ZWM5ZmViZmU=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-17T14:50:36Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-17T14:50:36Z"},"message":"OPENJPA-1712 fix exclusion\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@986337 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"057a93d620d0be07ee9f2b42bf4d8234bd79deba","url":"https://api.github.com/repos/apache/openjpa/git/trees/057a93d620d0be07ee9f2b42bf4d8234bd79deba"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/934143df65cb9847da379270721496e8ec9febfe","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/934143df65cb9847da379270721496e8ec9febfe","html_url":"https://github.com/apache/openjpa/commit/934143df65cb9847da379270721496e8ec9febfe","comments_url":"https://api.github.com/repos/apache/openjpa/commits/934143df65cb9847da379270721496e8ec9febfe/comments","author":null,"committer":null,"parents":[{"sha":"1ba05bac062c9338b59685cd58fd45d1be945592","url":"https://api.github.com/repos/apache/openjpa/commits/1ba05bac062c9338b59685cd58fd45d1be945592","html_url":"https://github.com/apache/openjpa/commit/1ba05bac062c9338b59685cd58fd45d1be945592"}]},{"sha":"f51ead3fb521a287392e38dde4d0117e1ac3dabb","node_id":"MDY6Q29tbWl0MjA2MzY0OmY1MWVhZDNmYjUyMWEyODczOTJlMzhkZGU0ZDAxMTdlMWFjM2RhYmI=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-17T15:25:27Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-17T15:25:27Z"},"message":"OPENJPA-1712 more openjpa-maven-plugin tweaks\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@986357 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"4d810b776e06024647e5ed1fe98040e250f42e8f","url":"https://api.github.com/repos/apache/openjpa/git/trees/4d810b776e06024647e5ed1fe98040e250f42e8f"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/f51ead3fb521a287392e38dde4d0117e1ac3dabb","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/f51ead3fb521a287392e38dde4d0117e1ac3dabb","html_url":"https://github.com/apache/openjpa/commit/f51ead3fb521a287392e38dde4d0117e1ac3dabb","comments_url":"https://api.github.com/repos/apache/openjpa/commits/f51ead3fb521a287392e38dde4d0117e1ac3dabb/comments","author":null,"committer":null,"parents":[{"sha":"934143df65cb9847da379270721496e8ec9febfe","url":"https://api.github.com/repos/apache/openjpa/commits/934143df65cb9847da379270721496e8ec9febfe","html_url":"https://github.com/apache/openjpa/commit/934143df65cb9847da379270721496e8ec9febfe"}]},{"sha":"4283d0d8406d9a4fca7fe76e0ff1b09d7b33cda5","node_id":"MDY6Q29tbWl0MjA2MzY0OjQyODNkMGQ4NDA2ZDlhNGZjYTdmZTc2ZTBmZjFiMDlkN2IzM2NkYTU=","commit":{"author":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2010-08-17T18:29:58Z"},"committer":{"name":"Pinaki Poddar","email":"ppoddar@apache.org","date":"2010-08-17T18:29:58Z"},"message":"Documentaion edit on CriteriaQuery API\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@986441 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"03f7784bec4e0084573360e5aa072ee445c96cf5","url":"https://api.github.com/repos/apache/openjpa/git/trees/03f7784bec4e0084573360e5aa072ee445c96cf5"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/4283d0d8406d9a4fca7fe76e0ff1b09d7b33cda5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/4283d0d8406d9a4fca7fe76e0ff1b09d7b33cda5","html_url":"https://github.com/apache/openjpa/commit/4283d0d8406d9a4fca7fe76e0ff1b09d7b33cda5","comments_url":"https://api.github.com/repos/apache/openjpa/commits/4283d0d8406d9a4fca7fe76e0ff1b09d7b33cda5/comments","author":null,"committer":null,"parents":[{"sha":"f51ead3fb521a287392e38dde4d0117e1ac3dabb","url":"https://api.github.com/repos/apache/openjpa/commits/f51ead3fb521a287392e38dde4d0117e1ac3dabb","html_url":"https://github.com/apache/openjpa/commit/f51ead3fb521a287392e38dde4d0117e1ac3dabb"}]},{"sha":"419899a387f81cdcf493a1346104d083ee51525c","node_id":"MDY6Q29tbWl0MjA2MzY0OjQxOTg5OWEzODdmODFjZGNmNDkzYTEzNDYxMDRkMDgzZWU1MTUyNWM=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-17T19:32:49Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-17T19:32:49Z"},"message":"OPENJPA-1712 Try using classifier again for o-p-j-test-base depend\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@986460 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"b9efa6eb9b86b9374cb3fd9bb8db318a9151956f","url":"https://api.github.com/repos/apache/openjpa/git/trees/b9efa6eb9b86b9374cb3fd9bb8db318a9151956f"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/419899a387f81cdcf493a1346104d083ee51525c","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/419899a387f81cdcf493a1346104d083ee51525c","html_url":"https://github.com/apache/openjpa/commit/419899a387f81cdcf493a1346104d083ee51525c","comments_url":"https://api.github.com/repos/apache/openjpa/commits/419899a387f81cdcf493a1346104d083ee51525c/comments","author":null,"committer":null,"parents":[{"sha":"4283d0d8406d9a4fca7fe76e0ff1b09d7b33cda5","url":"https://api.github.com/repos/apache/openjpa/commits/4283d0d8406d9a4fca7fe76e0ff1b09d7b33cda5","html_url":"https://github.com/apache/openjpa/commit/4283d0d8406d9a4fca7fe76e0ff1b09d7b33cda5"}]},{"sha":"84320dacb10107548816c7af7f979415dea63705","node_id":"MDY6Q29tbWl0MjA2MzY0Ojg0MzIwZGFjYjEwMTA3NTQ4ODE2YzdhZjdmOTc5NDE1ZGVhNjM3MDU=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-17T19:44:22Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-17T19:44:22Z"},"message":"OPENJPA-1712 try another test-jar workaround\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@986464 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"bb4ad17e8915cce0fab344a44f9cb38a59d60f78","url":"https://api.github.com/repos/apache/openjpa/git/trees/bb4ad17e8915cce0fab344a44f9cb38a59d60f78"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/84320dacb10107548816c7af7f979415dea63705","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/84320dacb10107548816c7af7f979415dea63705","html_url":"https://github.com/apache/openjpa/commit/84320dacb10107548816c7af7f979415dea63705","comments_url":"https://api.github.com/repos/apache/openjpa/commits/84320dacb10107548816c7af7f979415dea63705/comments","author":null,"committer":null,"parents":[{"sha":"419899a387f81cdcf493a1346104d083ee51525c","url":"https://api.github.com/repos/apache/openjpa/commits/419899a387f81cdcf493a1346104d083ee51525c","html_url":"https://github.com/apache/openjpa/commit/419899a387f81cdcf493a1346104d083ee51525c"}]},{"sha":"0082fa48cdd7019c9fadf446010786cf4664ab81","node_id":"MDY6Q29tbWl0MjA2MzY0OjAwODJmYTQ4Y2RkNzAxOWM5ZmFkZjQ0NjAxMDc4NmNmNDY2NGFiODE=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-18T02:40:39Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-18T02:40:39Z"},"message":"OPENJPA-1712 Split creation of o-p-j-test-base.jar into its own build, as jar:test-jar doesn't allow creation of 2 tests.jar in the same module and maven can't get the dependency scope right if jar:jar is used to create the artifact.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@986552 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"443ad0fece6af54d1a49b39faaf08120e1349c1f","url":"https://api.github.com/repos/apache/openjpa/git/trees/443ad0fece6af54d1a49b39faaf08120e1349c1f"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/0082fa48cdd7019c9fadf446010786cf4664ab81","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/0082fa48cdd7019c9fadf446010786cf4664ab81","html_url":"https://github.com/apache/openjpa/commit/0082fa48cdd7019c9fadf446010786cf4664ab81","comments_url":"https://api.github.com/repos/apache/openjpa/commits/0082fa48cdd7019c9fadf446010786cf4664ab81/comments","author":null,"committer":null,"parents":[{"sha":"84320dacb10107548816c7af7f979415dea63705","url":"https://api.github.com/repos/apache/openjpa/commits/84320dacb10107548816c7af7f979415dea63705","html_url":"https://github.com/apache/openjpa/commit/84320dacb10107548816c7af7f979415dea63705"}]},{"sha":"820a7bf245d1088c4c690107cf4fd2be30282edb","node_id":"MDY6Q29tbWl0MjA2MzY0OjgyMGE3YmYyNDVkMTA4OGM0YzY5MDEwN2NmNGZkMmJlMzAyODJlZGI=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-18T17:33:00Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-18T17:33:00Z"},"message":"OPENJPA-1712 test-java5 profile is failing\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@986809 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"fd7d81a5268cee868beb72ed9d109a32fb9ac7c3","url":"https://api.github.com/repos/apache/openjpa/git/trees/fd7d81a5268cee868beb72ed9d109a32fb9ac7c3"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/820a7bf245d1088c4c690107cf4fd2be30282edb","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/820a7bf245d1088c4c690107cf4fd2be30282edb","html_url":"https://github.com/apache/openjpa/commit/820a7bf245d1088c4c690107cf4fd2be30282edb","comments_url":"https://api.github.com/repos/apache/openjpa/commits/820a7bf245d1088c4c690107cf4fd2be30282edb/comments","author":null,"committer":null,"parents":[{"sha":"0082fa48cdd7019c9fadf446010786cf4664ab81","url":"https://api.github.com/repos/apache/openjpa/commits/0082fa48cdd7019c9fadf446010786cf4664ab81","html_url":"https://github.com/apache/openjpa/commit/0082fa48cdd7019c9fadf446010786cf4664ab81"}]},{"sha":"41c67a03543d21d3983b4ffa2fa001bd19021b58","node_id":"MDY6Q29tbWl0MjA2MzY0OjQxYzY3YTAzNTQzZDIxZDM5ODNiNGZmYTJmYTAwMWJkMTkwMjFiNTg=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-18T18:14:19Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-18T18:14:19Z"},"message":"OPENJPA-1712 revert to original test-java5 profile setup\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@986829 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c38af5f44abe4d66631be5abe436a0002b2644f9","url":"https://api.github.com/repos/apache/openjpa/git/trees/c38af5f44abe4d66631be5abe436a0002b2644f9"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/41c67a03543d21d3983b4ffa2fa001bd19021b58","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/41c67a03543d21d3983b4ffa2fa001bd19021b58","html_url":"https://github.com/apache/openjpa/commit/41c67a03543d21d3983b4ffa2fa001bd19021b58","comments_url":"https://api.github.com/repos/apache/openjpa/commits/41c67a03543d21d3983b4ffa2fa001bd19021b58/comments","author":null,"committer":null,"parents":[{"sha":"820a7bf245d1088c4c690107cf4fd2be30282edb","url":"https://api.github.com/repos/apache/openjpa/commits/820a7bf245d1088c4c690107cf4fd2be30282edb","html_url":"https://github.com/apache/openjpa/commit/820a7bf245d1088c4c690107cf4fd2be30282edb"}]},{"sha":"4d9c4ea5ca4f04d08be58485d00e5dfac1e91e8a","node_id":"MDY6Q29tbWl0MjA2MzY0OjRkOWM0ZWE1Y2E0ZjA0ZDA4YmU1ODQ4NWQwMGU1ZGZhYzFlOTFlOGE=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-18T20:15:50Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-18T20:15:50Z"},"message":"OPENJPA-1712 Fix creation of openjpa-all jar\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@986905 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"377ba23db0ef2931818972b121c43abbb86f7a3f","url":"https://api.github.com/repos/apache/openjpa/git/trees/377ba23db0ef2931818972b121c43abbb86f7a3f"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/4d9c4ea5ca4f04d08be58485d00e5dfac1e91e8a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/4d9c4ea5ca4f04d08be58485d00e5dfac1e91e8a","html_url":"https://github.com/apache/openjpa/commit/4d9c4ea5ca4f04d08be58485d00e5dfac1e91e8a","comments_url":"https://api.github.com/repos/apache/openjpa/commits/4d9c4ea5ca4f04d08be58485d00e5dfac1e91e8a/comments","author":null,"committer":null,"parents":[{"sha":"41c67a03543d21d3983b4ffa2fa001bd19021b58","url":"https://api.github.com/repos/apache/openjpa/commits/41c67a03543d21d3983b4ffa2fa001bd19021b58","html_url":"https://github.com/apache/openjpa/commit/41c67a03543d21d3983b4ffa2fa001bd19021b58"}]},{"sha":"77da50942f79199a82ee496e3834b853ba92af80","node_id":"MDY6Q29tbWl0MjA2MzY0Ojc3ZGE1MDk0MmY3OTE5OWE4MmVlNDk2ZTM4MzRiODUzYmE5MmFmODA=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-18T21:16:20Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-18T21:16:20Z"},"message":"OPENJPA-1712 Default apache-7.pom level of maven-compiler-plugin-2.0.2 doesn't work for forking off our JDK5 tests, so upgrade to the latest\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@986945 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"fc9d5b780f4b3ad20e1d2a647eefe6cf72f8a8ac","url":"https://api.github.com/repos/apache/openjpa/git/trees/fc9d5b780f4b3ad20e1d2a647eefe6cf72f8a8ac"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/77da50942f79199a82ee496e3834b853ba92af80","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/77da50942f79199a82ee496e3834b853ba92af80","html_url":"https://github.com/apache/openjpa/commit/77da50942f79199a82ee496e3834b853ba92af80","comments_url":"https://api.github.com/repos/apache/openjpa/commits/77da50942f79199a82ee496e3834b853ba92af80/comments","author":null,"committer":null,"parents":[{"sha":"4d9c4ea5ca4f04d08be58485d00e5dfac1e91e8a","url":"https://api.github.com/repos/apache/openjpa/commits/4d9c4ea5ca4f04d08be58485d00e5dfac1e91e8a","html_url":"https://github.com/apache/openjpa/commit/4d9c4ea5ca4f04d08be58485d00e5dfac1e91e8a"}]},{"sha":"6e1906988e9419b2f401d72acba5eb8bc157095f","node_id":"MDY6Q29tbWl0MjA2MzY0OjZlMTkwNjk4OGU5NDE5YjJmNDAxZDcyYWNiYTVlYjhiYzE1NzA5NWY=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-19T15:22:04Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-19T15:22:04Z"},"message":"OPENJPA-1712 Fix test-java5 profile failures by explicitly adding maven-compiler-plugin into build settings.  Revert required maven level to 2.0.9 for developers, but you still need 2.2.1 for releasing signed artifacts.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@987187 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"f1a64131ba3dfa87d89be66de5d6cda205d1d6bd","url":"https://api.github.com/repos/apache/openjpa/git/trees/f1a64131ba3dfa87d89be66de5d6cda205d1d6bd"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/6e1906988e9419b2f401d72acba5eb8bc157095f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/6e1906988e9419b2f401d72acba5eb8bc157095f","html_url":"https://github.com/apache/openjpa/commit/6e1906988e9419b2f401d72acba5eb8bc157095f","comments_url":"https://api.github.com/repos/apache/openjpa/commits/6e1906988e9419b2f401d72acba5eb8bc157095f/comments","author":null,"committer":null,"parents":[{"sha":"77da50942f79199a82ee496e3834b853ba92af80","url":"https://api.github.com/repos/apache/openjpa/commits/77da50942f79199a82ee496e3834b853ba92af80","html_url":"https://github.com/apache/openjpa/commit/77da50942f79199a82ee496e3834b853ba92af80"}]},{"sha":"b54c79fb110c971d849b8920a708d73d8b07057f","node_id":"MDY6Q29tbWl0MjA2MzY0OmI1NGM3OWZiMTEwYzk3MWQ4NDliODkyMGE3MDhkNzNkOGIwNzA1N2Y=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-19T15:49:33Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-19T15:49:33Z"},"message":"OPENJPA-1771 Upgrade to latest Apache BVAL release for testing and apache-rat plugin\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@987198 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"7a5191b4986b56ef10d66b1f140337a12dd67e88","url":"https://api.github.com/repos/apache/openjpa/git/trees/7a5191b4986b56ef10d66b1f140337a12dd67e88"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/b54c79fb110c971d849b8920a708d73d8b07057f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/b54c79fb110c971d849b8920a708d73d8b07057f","html_url":"https://github.com/apache/openjpa/commit/b54c79fb110c971d849b8920a708d73d8b07057f","comments_url":"https://api.github.com/repos/apache/openjpa/commits/b54c79fb110c971d849b8920a708d73d8b07057f/comments","author":null,"committer":null,"parents":[{"sha":"6e1906988e9419b2f401d72acba5eb8bc157095f","url":"https://api.github.com/repos/apache/openjpa/commits/6e1906988e9419b2f401d72acba5eb8bc157095f","html_url":"https://github.com/apache/openjpa/commit/6e1906988e9419b2f401d72acba5eb8bc157095f"}]},{"sha":"903e243af29c8da921dcab99d576204498ce26fb","node_id":"MDY6Q29tbWl0MjA2MzY0OjkwM2UyNDNhZjI5YzhkYTkyMWRjYWI5OWQ1NzYyMDQ0OThjZTI2ZmI=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-19T17:32:28Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-19T17:32:28Z"},"message":"OPENJPA-1712 remove/cleanup comments\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@987239 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"6ab7a3e05deba05d3ed9490ce0932700d879f909","url":"https://api.github.com/repos/apache/openjpa/git/trees/6ab7a3e05deba05d3ed9490ce0932700d879f909"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/903e243af29c8da921dcab99d576204498ce26fb","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/903e243af29c8da921dcab99d576204498ce26fb","html_url":"https://github.com/apache/openjpa/commit/903e243af29c8da921dcab99d576204498ce26fb","comments_url":"https://api.github.com/repos/apache/openjpa/commits/903e243af29c8da921dcab99d576204498ce26fb/comments","author":null,"committer":null,"parents":[{"sha":"b54c79fb110c971d849b8920a708d73d8b07057f","url":"https://api.github.com/repos/apache/openjpa/commits/b54c79fb110c971d849b8920a708d73d8b07057f","html_url":"https://github.com/apache/openjpa/commit/b54c79fb110c971d849b8920a708d73d8b07057f"}]},{"sha":"ca261cca1330f106da506438c52484cc0168a26a","node_id":"MDY6Q29tbWl0MjA2MzY0OmNhMjYxY2NhMTMzMGYxMDZkYTUwNjQzOGM1MjQ4NGNjMDE2OGEyNmE=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-19T19:11:43Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-19T19:11:43Z"},"message":"OPENJPA-1712 Fix depend scope\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@987273 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"8ab42e119785e979bf18e177dd7b5d1fcec85fcb","url":"https://api.github.com/repos/apache/openjpa/git/trees/8ab42e119785e979bf18e177dd7b5d1fcec85fcb"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/ca261cca1330f106da506438c52484cc0168a26a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/ca261cca1330f106da506438c52484cc0168a26a","html_url":"https://github.com/apache/openjpa/commit/ca261cca1330f106da506438c52484cc0168a26a","comments_url":"https://api.github.com/repos/apache/openjpa/commits/ca261cca1330f106da506438c52484cc0168a26a/comments","author":null,"committer":null,"parents":[{"sha":"903e243af29c8da921dcab99d576204498ce26fb","url":"https://api.github.com/repos/apache/openjpa/commits/903e243af29c8da921dcab99d576204498ce26fb","html_url":"https://github.com/apache/openjpa/commit/903e243af29c8da921dcab99d576204498ce26fb"}]},{"sha":"07a4eb52e4570358c646bd0946e998751ecd6e4a","node_id":"MDY6Q29tbWl0MjA2MzY0OjA3YTRlYjUyZTQ1NzAzNThjNjQ2YmQwOTQ2ZTk5ODc1MWVjZDZlNGE=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-19T19:34:41Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-19T19:34:41Z"},"message":"OPENJPA-1712 Remove explicit depend\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@987278 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"22c41521a8c76da3bb9756c1f4f25afaa566f4c9","url":"https://api.github.com/repos/apache/openjpa/git/trees/22c41521a8c76da3bb9756c1f4f25afaa566f4c9"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/07a4eb52e4570358c646bd0946e998751ecd6e4a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/07a4eb52e4570358c646bd0946e998751ecd6e4a","html_url":"https://github.com/apache/openjpa/commit/07a4eb52e4570358c646bd0946e998751ecd6e4a","comments_url":"https://api.github.com/repos/apache/openjpa/commits/07a4eb52e4570358c646bd0946e998751ecd6e4a/comments","author":null,"committer":null,"parents":[{"sha":"ca261cca1330f106da506438c52484cc0168a26a","url":"https://api.github.com/repos/apache/openjpa/commits/ca261cca1330f106da506438c52484cc0168a26a","html_url":"https://github.com/apache/openjpa/commit/ca261cca1330f106da506438c52484cc0168a26a"}]},{"sha":"96e28690486d55e72c24a6551ba1f09812c76792","node_id":"MDY6Q29tbWl0MjA2MzY0Ojk2ZTI4NjkwNDg2ZDU1ZTcyYzI0YTY1NTFiYTFmMDk4MTJjNzY3OTI=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-19T19:35:13Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-19T19:35:13Z"},"message":"[maven-release-plugin] rollback the release of 2.0.1\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@987279 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"8ab42e119785e979bf18e177dd7b5d1fcec85fcb","url":"https://api.github.com/repos/apache/openjpa/git/trees/8ab42e119785e979bf18e177dd7b5d1fcec85fcb"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/96e28690486d55e72c24a6551ba1f09812c76792","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/96e28690486d55e72c24a6551ba1f09812c76792","html_url":"https://github.com/apache/openjpa/commit/96e28690486d55e72c24a6551ba1f09812c76792","comments_url":"https://api.github.com/repos/apache/openjpa/commits/96e28690486d55e72c24a6551ba1f09812c76792/comments","author":null,"committer":null,"parents":[{"sha":"07a4eb52e4570358c646bd0946e998751ecd6e4a","url":"https://api.github.com/repos/apache/openjpa/commits/07a4eb52e4570358c646bd0946e998751ecd6e4a","html_url":"https://github.com/apache/openjpa/commit/07a4eb52e4570358c646bd0946e998751ecd6e4a"}]},{"sha":"eab035f0c69787bbb06971863bff013da22cfd19","node_id":"MDY6Q29tbWl0MjA2MzY0OmVhYjAzNWYwYzY5Nzg3YmJiMDY5NzE4NjNiZmYwMTNkYTIyY2ZkMTk=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-19T21:40:57Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-19T21:40:57Z"},"message":"OPENJPA-1712 Use maven-dependency-plugin instead of maven-antrun-plugin for jar extractions\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@987322 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"a1b4210cb38780acb3222f72f1e66a4eda17eb52","url":"https://api.github.com/repos/apache/openjpa/git/trees/a1b4210cb38780acb3222f72f1e66a4eda17eb52"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/eab035f0c69787bbb06971863bff013da22cfd19","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/eab035f0c69787bbb06971863bff013da22cfd19","html_url":"https://github.com/apache/openjpa/commit/eab035f0c69787bbb06971863bff013da22cfd19","comments_url":"https://api.github.com/repos/apache/openjpa/commits/eab035f0c69787bbb06971863bff013da22cfd19/comments","author":null,"committer":null,"parents":[{"sha":"96e28690486d55e72c24a6551ba1f09812c76792","url":"https://api.github.com/repos/apache/openjpa/commits/96e28690486d55e72c24a6551ba1f09812c76792","html_url":"https://github.com/apache/openjpa/commit/96e28690486d55e72c24a6551ba1f09812c76792"}]},{"sha":"eda4713ff72f8de337610e7d328a72ca51cdcf7d","node_id":"MDY6Q29tbWl0MjA2MzY0OmVkYTQ3MTNmZjcyZjhkZTMzNzYxMGU3ZDMyOGE3MmNhNTFjZGNmN2Q=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-19T23:20:20Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-19T23:20:20Z"},"message":"OPENJPA-1712 Remove explicit depend\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@987347 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"7877f3ecba89cebafebc3e8f0278036038713b66","url":"https://api.github.com/repos/apache/openjpa/git/trees/7877f3ecba89cebafebc3e8f0278036038713b66"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/eda4713ff72f8de337610e7d328a72ca51cdcf7d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/eda4713ff72f8de337610e7d328a72ca51cdcf7d","html_url":"https://github.com/apache/openjpa/commit/eda4713ff72f8de337610e7d328a72ca51cdcf7d","comments_url":"https://api.github.com/repos/apache/openjpa/commits/eda4713ff72f8de337610e7d328a72ca51cdcf7d/comments","author":null,"committer":null,"parents":[{"sha":"eab035f0c69787bbb06971863bff013da22cfd19","url":"https://api.github.com/repos/apache/openjpa/commits/eab035f0c69787bbb06971863bff013da22cfd19","html_url":"https://github.com/apache/openjpa/commit/eab035f0c69787bbb06971863bff013da22cfd19"}]},{"sha":"c2926be235d38052abd46a59c296e4ecb2eadce7","node_id":"MDY6Q29tbWl0MjA2MzY0OmMyOTI2YmUyMzVkMzgwNTJhYmQ0NmE1OWMyOTZlNGVjYjJlYWRjZTc=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-20T00:51:29Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-20T00:51:29Z"},"message":"OPENJPA-1712 Remove test-javadoc target which is failing release:prepare\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@987358 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"f5db7376894a0023504cac32a2871991a9ca4003","url":"https://api.github.com/repos/apache/openjpa/git/trees/f5db7376894a0023504cac32a2871991a9ca4003"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/c2926be235d38052abd46a59c296e4ecb2eadce7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/c2926be235d38052abd46a59c296e4ecb2eadce7","html_url":"https://github.com/apache/openjpa/commit/c2926be235d38052abd46a59c296e4ecb2eadce7","comments_url":"https://api.github.com/repos/apache/openjpa/commits/c2926be235d38052abd46a59c296e4ecb2eadce7/comments","author":null,"committer":null,"parents":[{"sha":"eda4713ff72f8de337610e7d328a72ca51cdcf7d","url":"https://api.github.com/repos/apache/openjpa/commits/eda4713ff72f8de337610e7d328a72ca51cdcf7d","html_url":"https://github.com/apache/openjpa/commit/eda4713ff72f8de337610e7d328a72ca51cdcf7d"}]},{"sha":"2bf26a40794abf157f584abf58fe4991654120e5","node_id":"MDY6Q29tbWl0MjA2MzY0OjJiZjI2YTQwNzk0YWJmMTU3ZjU4NGFiZjU4ZmU0OTkxNjU0MTIwZTU=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-20T01:37:46Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-20T01:37:46Z"},"message":"OPENJPA-1712 javadoc still failing release:prepare\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@987362 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"1799bd8ec0a00b6fc9cebddbd4a7fd4f8aa4b76e","url":"https://api.github.com/repos/apache/openjpa/git/trees/1799bd8ec0a00b6fc9cebddbd4a7fd4f8aa4b76e"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/2bf26a40794abf157f584abf58fe4991654120e5","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/2bf26a40794abf157f584abf58fe4991654120e5","html_url":"https://github.com/apache/openjpa/commit/2bf26a40794abf157f584abf58fe4991654120e5","comments_url":"https://api.github.com/repos/apache/openjpa/commits/2bf26a40794abf157f584abf58fe4991654120e5/comments","author":null,"committer":null,"parents":[{"sha":"c2926be235d38052abd46a59c296e4ecb2eadce7","url":"https://api.github.com/repos/apache/openjpa/commits/c2926be235d38052abd46a59c296e4ecb2eadce7","html_url":"https://github.com/apache/openjpa/commit/c2926be235d38052abd46a59c296e4ecb2eadce7"}]},{"sha":"7531c4b09b2726430f0733a35a710cc6a39c63ca","node_id":"MDY6Q29tbWl0MjA2MzY0Ojc1MzFjNGIwOWIyNzI2NDMwZjA3MzNhMzVhNzEwY2M2YTM5YzYzY2E=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-20T14:11:13Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-20T14:11:13Z"},"message":"OPENJPA-1712 javadoc still failing release:prepare\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@987514 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"ef77a78a206de16a217fa6f8ef2d8503ef144d3d","url":"https://api.github.com/repos/apache/openjpa/git/trees/ef77a78a206de16a217fa6f8ef2d8503ef144d3d"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/7531c4b09b2726430f0733a35a710cc6a39c63ca","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/7531c4b09b2726430f0733a35a710cc6a39c63ca","html_url":"https://github.com/apache/openjpa/commit/7531c4b09b2726430f0733a35a710cc6a39c63ca","comments_url":"https://api.github.com/repos/apache/openjpa/commits/7531c4b09b2726430f0733a35a710cc6a39c63ca/comments","author":null,"committer":null,"parents":[{"sha":"2bf26a40794abf157f584abf58fe4991654120e5","url":"https://api.github.com/repos/apache/openjpa/commits/2bf26a40794abf157f584abf58fe4991654120e5","html_url":"https://github.com/apache/openjpa/commit/2bf26a40794abf157f584abf58fe4991654120e5"}]},{"sha":"bce022519f160bd9a9ff77a031d1b85a8d9a0668","node_id":"MDY6Q29tbWl0MjA2MzY0OmJjZTAyMjUxOWYxNjBiZDlhOWZmNzdhMDMxZDFiODVhOGQ5YTA2Njg=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-20T14:17:29Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-20T14:17:29Z"},"message":"OPENJPA-1712 javadoc still failing release:prepare\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@987517 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"941618a5b613298443d3108b584eaf49ad016523","url":"https://api.github.com/repos/apache/openjpa/git/trees/941618a5b613298443d3108b584eaf49ad016523"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/bce022519f160bd9a9ff77a031d1b85a8d9a0668","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/bce022519f160bd9a9ff77a031d1b85a8d9a0668","html_url":"https://github.com/apache/openjpa/commit/bce022519f160bd9a9ff77a031d1b85a8d9a0668","comments_url":"https://api.github.com/repos/apache/openjpa/commits/bce022519f160bd9a9ff77a031d1b85a8d9a0668/comments","author":null,"committer":null,"parents":[{"sha":"7531c4b09b2726430f0733a35a710cc6a39c63ca","url":"https://api.github.com/repos/apache/openjpa/commits/7531c4b09b2726430f0733a35a710cc6a39c63ca","html_url":"https://github.com/apache/openjpa/commit/7531c4b09b2726430f0733a35a710cc6a39c63ca"}]},{"sha":"71f0968568637ea4091ba97e9cdcdcdd314d1f41","node_id":"MDY6Q29tbWl0MjA2MzY0OjcxZjA5Njg1Njg2MzdlYTQwOTFiYTk3ZTljZGNkY2RkMzE0ZDFmNDE=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-20T14:25:47Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-20T14:25:47Z"},"message":"OPENJPA-1712 javadoc still failing release:prepare\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@987521 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"36e95b53f4bb434022da7b26dd4b48cbb11138ff","url":"https://api.github.com/repos/apache/openjpa/git/trees/36e95b53f4bb434022da7b26dd4b48cbb11138ff"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/71f0968568637ea4091ba97e9cdcdcdd314d1f41","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/71f0968568637ea4091ba97e9cdcdcdd314d1f41","html_url":"https://github.com/apache/openjpa/commit/71f0968568637ea4091ba97e9cdcdcdd314d1f41","comments_url":"https://api.github.com/repos/apache/openjpa/commits/71f0968568637ea4091ba97e9cdcdcdd314d1f41/comments","author":null,"committer":null,"parents":[{"sha":"bce022519f160bd9a9ff77a031d1b85a8d9a0668","url":"https://api.github.com/repos/apache/openjpa/commits/bce022519f160bd9a9ff77a031d1b85a8d9a0668","html_url":"https://github.com/apache/openjpa/commit/bce022519f160bd9a9ff77a031d1b85a8d9a0668"}]},{"sha":"59eba994118b80531521f1052c4b0eb8c49e55b0","node_id":"MDY6Q29tbWl0MjA2MzY0OjU5ZWJhOTk0MTE4YjgwNTMxNTIxZjEwNTJjNGIwZWI4YzQ5ZTU1YjA=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-20T16:53:41Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-20T16:53:41Z"},"message":"OPENJPA-1712 Remove javadoc creation from some modules, which now lets a build pass in offline mode with no prior artifacts in the repo\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@987571 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"b8b1c8a332a951197b387c42a0a275d47560a6c9","url":"https://api.github.com/repos/apache/openjpa/git/trees/b8b1c8a332a951197b387c42a0a275d47560a6c9"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/59eba994118b80531521f1052c4b0eb8c49e55b0","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/59eba994118b80531521f1052c4b0eb8c49e55b0","html_url":"https://github.com/apache/openjpa/commit/59eba994118b80531521f1052c4b0eb8c49e55b0","comments_url":"https://api.github.com/repos/apache/openjpa/commits/59eba994118b80531521f1052c4b0eb8c49e55b0/comments","author":null,"committer":null,"parents":[{"sha":"71f0968568637ea4091ba97e9cdcdcdd314d1f41","url":"https://api.github.com/repos/apache/openjpa/commits/71f0968568637ea4091ba97e9cdcdcdd314d1f41","html_url":"https://github.com/apache/openjpa/commit/71f0968568637ea4091ba97e9cdcdcdd314d1f41"}]},{"sha":"c91b6699c7d55a0b3bb93ca3c8447e085bf437f4","node_id":"MDY6Q29tbWl0MjA2MzY0OmM5MWI2Njk5YzdkNTVhMGIzYmI5M2NhM2M4NDQ3ZTA4NWJmNDM3ZjQ=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-20T17:02:55Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-20T17:02:55Z"},"message":"[maven-release-plugin] prepare release 2.0.1\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@987574 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0867e40531974a9f31c59660e53a598317414f00","url":"https://api.github.com/repos/apache/openjpa/git/trees/0867e40531974a9f31c59660e53a598317414f00"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/c91b6699c7d55a0b3bb93ca3c8447e085bf437f4","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/c91b6699c7d55a0b3bb93ca3c8447e085bf437f4","html_url":"https://github.com/apache/openjpa/commit/c91b6699c7d55a0b3bb93ca3c8447e085bf437f4","comments_url":"https://api.github.com/repos/apache/openjpa/commits/c91b6699c7d55a0b3bb93ca3c8447e085bf437f4/comments","author":null,"committer":null,"parents":[{"sha":"59eba994118b80531521f1052c4b0eb8c49e55b0","url":"https://api.github.com/repos/apache/openjpa/commits/59eba994118b80531521f1052c4b0eb8c49e55b0","html_url":"https://github.com/apache/openjpa/commit/59eba994118b80531521f1052c4b0eb8c49e55b0"}]},{"sha":"403d61d02f3b005a3151082605b1d4f76fd2bf19","node_id":"MDY6Q29tbWl0MjA2MzY0OjQwM2Q2MWQwMmYzYjAwNWEzMTUxMDgyNjA1YjFkNGY3NmZkMmJmMTk=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-20T17:02:59Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-20T17:02:59Z"},"message":"[maven-scm] copy for tag 2.0.1\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/tags/2.0.1@987575 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0867e40531974a9f31c59660e53a598317414f00","url":"https://api.github.com/repos/apache/openjpa/git/trees/0867e40531974a9f31c59660e53a598317414f00"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/403d61d02f3b005a3151082605b1d4f76fd2bf19","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/403d61d02f3b005a3151082605b1d4f76fd2bf19","html_url":"https://github.com/apache/openjpa/commit/403d61d02f3b005a3151082605b1d4f76fd2bf19","comments_url":"https://api.github.com/repos/apache/openjpa/commits/403d61d02f3b005a3151082605b1d4f76fd2bf19/comments","author":null,"committer":null,"parents":[{"sha":"c91b6699c7d55a0b3bb93ca3c8447e085bf437f4","url":"https://api.github.com/repos/apache/openjpa/commits/c91b6699c7d55a0b3bb93ca3c8447e085bf437f4","html_url":"https://github.com/apache/openjpa/commit/c91b6699c7d55a0b3bb93ca3c8447e085bf437f4"}]},{"sha":"e69d17669b49c04ad9f129c49cd637cee0040031","node_id":"MDY6Q29tbWl0MjA2MzY0OmU2OWQxNzY2OWI0OWMwNGFkOWYxMjljNDljZDYzN2NlZTAwNDAwMzE=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-20T17:03:07Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-20T17:03:07Z"},"message":"[maven-release-plugin] prepare for next development iteration\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@987576 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c66f56f35a7eaa4d6f8e80ed044f0d85a573c554","url":"https://api.github.com/repos/apache/openjpa/git/trees/c66f56f35a7eaa4d6f8e80ed044f0d85a573c554"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/e69d17669b49c04ad9f129c49cd637cee0040031","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/e69d17669b49c04ad9f129c49cd637cee0040031","html_url":"https://github.com/apache/openjpa/commit/e69d17669b49c04ad9f129c49cd637cee0040031","comments_url":"https://api.github.com/repos/apache/openjpa/commits/e69d17669b49c04ad9f129c49cd637cee0040031/comments","author":null,"committer":null,"parents":[{"sha":"c91b6699c7d55a0b3bb93ca3c8447e085bf437f4","url":"https://api.github.com/repos/apache/openjpa/commits/c91b6699c7d55a0b3bb93ca3c8447e085bf437f4","html_url":"https://github.com/apache/openjpa/commit/c91b6699c7d55a0b3bb93ca3c8447e085bf437f4"}]},{"sha":"a3f4e2c329f2cdeac5ae4b087b6cad6d989e50c8","node_id":"MDY6Q29tbWl0MjA2MzY0OmEzZjRlMmMzMjlmMmNkZWFjNWFlNGIwODdiNmNhZDZkOTg5ZTUwYzg=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-20T17:25:58Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-20T17:25:58Z"},"message":"[maven-release-plugin] rollback the release of 2.0.1\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@987583 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"b8b1c8a332a951197b387c42a0a275d47560a6c9","url":"https://api.github.com/repos/apache/openjpa/git/trees/b8b1c8a332a951197b387c42a0a275d47560a6c9"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/a3f4e2c329f2cdeac5ae4b087b6cad6d989e50c8","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/a3f4e2c329f2cdeac5ae4b087b6cad6d989e50c8","html_url":"https://github.com/apache/openjpa/commit/a3f4e2c329f2cdeac5ae4b087b6cad6d989e50c8","comments_url":"https://api.github.com/repos/apache/openjpa/commits/a3f4e2c329f2cdeac5ae4b087b6cad6d989e50c8/comments","author":null,"committer":null,"parents":[{"sha":"e69d17669b49c04ad9f129c49cd637cee0040031","url":"https://api.github.com/repos/apache/openjpa/commits/e69d17669b49c04ad9f129c49cd637cee0040031","html_url":"https://github.com/apache/openjpa/commit/e69d17669b49c04ad9f129c49cd637cee0040031"}]},{"sha":"b38d85f64e64e77b8b6d3057c2dd1c3feaae54a7","node_id":"MDY6Q29tbWl0MjA2MzY0OmIzOGQ4NWY2NGU2NGU3N2I4YjZkMzA1N2MyZGQxYzNmZWFhZTU0YTc=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-20T17:44:11Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-20T17:44:11Z"},"message":"OPENJPA-1712 Revert to apache-7 level of plugin and add back in some removed settings\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@987588 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"df2eea64af7b81a1cc7ac9a1c17647b6cb450697","url":"https://api.github.com/repos/apache/openjpa/git/trees/df2eea64af7b81a1cc7ac9a1c17647b6cb450697"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/b38d85f64e64e77b8b6d3057c2dd1c3feaae54a7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/b38d85f64e64e77b8b6d3057c2dd1c3feaae54a7","html_url":"https://github.com/apache/openjpa/commit/b38d85f64e64e77b8b6d3057c2dd1c3feaae54a7","comments_url":"https://api.github.com/repos/apache/openjpa/commits/b38d85f64e64e77b8b6d3057c2dd1c3feaae54a7/comments","author":null,"committer":null,"parents":[{"sha":"a3f4e2c329f2cdeac5ae4b087b6cad6d989e50c8","url":"https://api.github.com/repos/apache/openjpa/commits/a3f4e2c329f2cdeac5ae4b087b6cad6d989e50c8","html_url":"https://github.com/apache/openjpa/commit/a3f4e2c329f2cdeac5ae4b087b6cad6d989e50c8"}]},{"sha":"b96289c695954a866dfa070d89858f246823d1a7","node_id":"MDY6Q29tbWl0MjA2MzY0OmI5NjI4OWM2OTU5NTRhODY2ZGZhMDcwZDg5ODU4ZjI0NjgyM2QxYTc=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-20T18:52:18Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-20T18:52:18Z"},"message":"[maven-release-plugin] prepare release 2.0.1\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@987600 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"91400d33fccc3a8862ba0770d582c08ef2274837","url":"https://api.github.com/repos/apache/openjpa/git/trees/91400d33fccc3a8862ba0770d582c08ef2274837"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/b96289c695954a866dfa070d89858f246823d1a7","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/b96289c695954a866dfa070d89858f246823d1a7","html_url":"https://github.com/apache/openjpa/commit/b96289c695954a866dfa070d89858f246823d1a7","comments_url":"https://api.github.com/repos/apache/openjpa/commits/b96289c695954a866dfa070d89858f246823d1a7/comments","author":null,"committer":null,"parents":[{"sha":"b38d85f64e64e77b8b6d3057c2dd1c3feaae54a7","url":"https://api.github.com/repos/apache/openjpa/commits/b38d85f64e64e77b8b6d3057c2dd1c3feaae54a7","html_url":"https://github.com/apache/openjpa/commit/b38d85f64e64e77b8b6d3057c2dd1c3feaae54a7"}]},{"sha":"61f7483b826f6c9d849c0f993ad95cdafad6f3be","node_id":"MDY6Q29tbWl0MjA2MzY0OjYxZjc0ODNiODI2ZjZjOWQ4NDljMGY5OTNhZDk1Y2RhZmFkNmYzYmU=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-20T18:52:22Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-20T18:52:22Z"},"message":"[maven-scm] copy for tag 2.0.1\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/tags/2.0.1@987601 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"91400d33fccc3a8862ba0770d582c08ef2274837","url":"https://api.github.com/repos/apache/openjpa/git/trees/91400d33fccc3a8862ba0770d582c08ef2274837"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/61f7483b826f6c9d849c0f993ad95cdafad6f3be","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/61f7483b826f6c9d849c0f993ad95cdafad6f3be","html_url":"https://github.com/apache/openjpa/commit/61f7483b826f6c9d849c0f993ad95cdafad6f3be","comments_url":"https://api.github.com/repos/apache/openjpa/commits/61f7483b826f6c9d849c0f993ad95cdafad6f3be/comments","author":null,"committer":null,"parents":[{"sha":"403d61d02f3b005a3151082605b1d4f76fd2bf19","url":"https://api.github.com/repos/apache/openjpa/commits/403d61d02f3b005a3151082605b1d4f76fd2bf19","html_url":"https://github.com/apache/openjpa/commit/403d61d02f3b005a3151082605b1d4f76fd2bf19"},{"sha":"b96289c695954a866dfa070d89858f246823d1a7","url":"https://api.github.com/repos/apache/openjpa/commits/b96289c695954a866dfa070d89858f246823d1a7","html_url":"https://github.com/apache/openjpa/commit/b96289c695954a866dfa070d89858f246823d1a7"}]},{"sha":"2c03991db10d96b7a05a74e7ddd94009892084fc","node_id":"MDY6Q29tbWl0MjA2MzY0OjJjMDM5OTFkYjEwZDk2YjdhMDVhNzRlN2RkZDk0MDA5ODkyMDg0ZmM=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-20T18:52:30Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-20T18:52:30Z"},"message":"[maven-release-plugin] prepare for next development iteration\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@987602 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"5cbf2944ea32acfab5a048687951b237cc61152d","url":"https://api.github.com/repos/apache/openjpa/git/trees/5cbf2944ea32acfab5a048687951b237cc61152d"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/2c03991db10d96b7a05a74e7ddd94009892084fc","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/2c03991db10d96b7a05a74e7ddd94009892084fc","html_url":"https://github.com/apache/openjpa/commit/2c03991db10d96b7a05a74e7ddd94009892084fc","comments_url":"https://api.github.com/repos/apache/openjpa/commits/2c03991db10d96b7a05a74e7ddd94009892084fc/comments","author":null,"committer":null,"parents":[{"sha":"b96289c695954a866dfa070d89858f246823d1a7","url":"https://api.github.com/repos/apache/openjpa/commits/b96289c695954a866dfa070d89858f246823d1a7","html_url":"https://github.com/apache/openjpa/commit/b96289c695954a866dfa070d89858f246823d1a7"}]},{"sha":"5b119ab0a93fcbc89a77b4032e60e2487a5deeba","node_id":"MDY6Q29tbWl0MjA2MzY0OjViMTE5YWIwYTkzZmNiYzg5YTc3YjQwMzJlNjBlMjQ4N2E1ZGVlYmE=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-20T19:54:05Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-20T19:54:05Z"},"message":"[maven-release-plugin] rollback the release of 2.0.1\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@987616 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"df2eea64af7b81a1cc7ac9a1c17647b6cb450697","url":"https://api.github.com/repos/apache/openjpa/git/trees/df2eea64af7b81a1cc7ac9a1c17647b6cb450697"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/5b119ab0a93fcbc89a77b4032e60e2487a5deeba","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/5b119ab0a93fcbc89a77b4032e60e2487a5deeba","html_url":"https://github.com/apache/openjpa/commit/5b119ab0a93fcbc89a77b4032e60e2487a5deeba","comments_url":"https://api.github.com/repos/apache/openjpa/commits/5b119ab0a93fcbc89a77b4032e60e2487a5deeba/comments","author":null,"committer":null,"parents":[{"sha":"2c03991db10d96b7a05a74e7ddd94009892084fc","url":"https://api.github.com/repos/apache/openjpa/commits/2c03991db10d96b7a05a74e7ddd94009892084fc","html_url":"https://github.com/apache/openjpa/commit/2c03991db10d96b7a05a74e7ddd94009892084fc"}]},{"sha":"82c9f910b598085f1c861a2067640167179b080f","node_id":"MDY6Q29tbWl0MjA2MzY0OjgyYzlmOTEwYjU5ODA4NWYxYzg2MWEyMDY3NjQwMTY3MTc5YjA4MGY=","commit":{"author":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2010-08-21T15:46:49Z"},"committer":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2010-08-21T15:46:49Z"},"message":"OPENJPA-1736: Mappings with foreign keys as identity fields sometimes not resolved correctly\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@987773 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"45ffb22616f7eb63bba491e20e3bf920b2ab3f12","url":"https://api.github.com/repos/apache/openjpa/git/trees/45ffb22616f7eb63bba491e20e3bf920b2ab3f12"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/82c9f910b598085f1c861a2067640167179b080f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/82c9f910b598085f1c861a2067640167179b080f","html_url":"https://github.com/apache/openjpa/commit/82c9f910b598085f1c861a2067640167179b080f","comments_url":"https://api.github.com/repos/apache/openjpa/commits/82c9f910b598085f1c861a2067640167179b080f/comments","author":null,"committer":null,"parents":[{"sha":"5b119ab0a93fcbc89a77b4032e60e2487a5deeba","url":"https://api.github.com/repos/apache/openjpa/commits/5b119ab0a93fcbc89a77b4032e60e2487a5deeba","html_url":"https://github.com/apache/openjpa/commit/5b119ab0a93fcbc89a77b4032e60e2487a5deeba"}]},{"sha":"f0c38d38a5e2e1046f9aec40cfdff33eb56a795a","node_id":"MDY6Q29tbWl0MjA2MzY0OmYwYzM4ZDM4YTVlMmUxMDQ2ZjlhZWM0MGNmZGZmMzNlYjU2YTc5NWE=","commit":{"author":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2010-08-23T19:45:14Z"},"committer":{"name":"Catalina Wei","email":"fancy@apache.org","date":"2010-08-23T19:45:14Z"},"message":"OPENJPA-1736: Mappings with foreign keys as identity fields sometimes not resolved correctly\nback-out changes in 2.0.x branch.\nmust be pre-approved before committing changes to 2.0.x.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@988277 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"df2eea64af7b81a1cc7ac9a1c17647b6cb450697","url":"https://api.github.com/repos/apache/openjpa/git/trees/df2eea64af7b81a1cc7ac9a1c17647b6cb450697"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/f0c38d38a5e2e1046f9aec40cfdff33eb56a795a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/f0c38d38a5e2e1046f9aec40cfdff33eb56a795a","html_url":"https://github.com/apache/openjpa/commit/f0c38d38a5e2e1046f9aec40cfdff33eb56a795a","comments_url":"https://api.github.com/repos/apache/openjpa/commits/f0c38d38a5e2e1046f9aec40cfdff33eb56a795a/comments","author":null,"committer":null,"parents":[{"sha":"82c9f910b598085f1c861a2067640167179b080f","url":"https://api.github.com/repos/apache/openjpa/commits/82c9f910b598085f1c861a2067640167179b080f","html_url":"https://github.com/apache/openjpa/commit/82c9f910b598085f1c861a2067640167179b080f"}]},{"sha":"9f5ccf76bc7d5ecc355a470e434a9bd86b9998bd","node_id":"MDY6Q29tbWl0MjA2MzY0OjlmNWNjZjc2YmM3ZDVlY2MzNTVhNDcwZTQzNGE5YmQ4NmI5OTk4YmQ=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-24T21:13:32Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-24T21:13:32Z"},"message":"OPENJPA-1712 Restore separate apache-rat configs.  Still does not produce aggregate Javadocs....\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@988731 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"d495c7940c8c2f14491aa50d6b9c019af7876f79","url":"https://api.github.com/repos/apache/openjpa/git/trees/d495c7940c8c2f14491aa50d6b9c019af7876f79"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/9f5ccf76bc7d5ecc355a470e434a9bd86b9998bd","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/9f5ccf76bc7d5ecc355a470e434a9bd86b9998bd","html_url":"https://github.com/apache/openjpa/commit/9f5ccf76bc7d5ecc355a470e434a9bd86b9998bd","comments_url":"https://api.github.com/repos/apache/openjpa/commits/9f5ccf76bc7d5ecc355a470e434a9bd86b9998bd/comments","author":null,"committer":null,"parents":[{"sha":"f0c38d38a5e2e1046f9aec40cfdff33eb56a795a","url":"https://api.github.com/repos/apache/openjpa/commits/f0c38d38a5e2e1046f9aec40cfdff33eb56a795a","html_url":"https://github.com/apache/openjpa/commit/f0c38d38a5e2e1046f9aec40cfdff33eb56a795a"}]},{"sha":"d684274e4e6b1473c023de8b9610d095c6a61e3a","node_id":"MDY6Q29tbWl0MjA2MzY0OmQ2ODQyNzRlNGU2YjE0NzNjMDIzZGU4Yjk2MTBkMDk1YzZhNjFlM2E=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-25T15:49:37Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-25T15:49:37Z"},"message":"OPENJPA-1712 Remove openjpa-testsupport that Maven 3.0-beta-2 can't handle.  Simplify javadoc creation.\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@989185 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"37745802a25fdde9d0c3157ad48fe71c94e39955","url":"https://api.github.com/repos/apache/openjpa/git/trees/37745802a25fdde9d0c3157ad48fe71c94e39955"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/d684274e4e6b1473c023de8b9610d095c6a61e3a","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/d684274e4e6b1473c023de8b9610d095c6a61e3a","html_url":"https://github.com/apache/openjpa/commit/d684274e4e6b1473c023de8b9610d095c6a61e3a","comments_url":"https://api.github.com/repos/apache/openjpa/commits/d684274e4e6b1473c023de8b9610d095c6a61e3a/comments","author":null,"committer":null,"parents":[{"sha":"9f5ccf76bc7d5ecc355a470e434a9bd86b9998bd","url":"https://api.github.com/repos/apache/openjpa/commits/9f5ccf76bc7d5ecc355a470e434a9bd86b9998bd","html_url":"https://github.com/apache/openjpa/commit/9f5ccf76bc7d5ecc355a470e434a9bd86b9998bd"}]},{"sha":"37d40eb6e24bc699858d71cdf9ac06c2669316df","node_id":"MDY6Q29tbWl0MjA2MzY0OjM3ZDQwZWI2ZTI0YmM2OTk4NThkNzFjZGY5YWMwNmMyNjY5MzE2ZGY=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-25T16:50:51Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-25T16:50:51Z"},"message":"OPENJPA-1712 Add in ciManagement info\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@989217 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"534402de7e8068bb9bdfffb6dd6f845f591e5ce7","url":"https://api.github.com/repos/apache/openjpa/git/trees/534402de7e8068bb9bdfffb6dd6f845f591e5ce7"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/37d40eb6e24bc699858d71cdf9ac06c2669316df","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/37d40eb6e24bc699858d71cdf9ac06c2669316df","html_url":"https://github.com/apache/openjpa/commit/37d40eb6e24bc699858d71cdf9ac06c2669316df","comments_url":"https://api.github.com/repos/apache/openjpa/commits/37d40eb6e24bc699858d71cdf9ac06c2669316df/comments","author":null,"committer":null,"parents":[{"sha":"d684274e4e6b1473c023de8b9610d095c6a61e3a","url":"https://api.github.com/repos/apache/openjpa/commits/d684274e4e6b1473c023de8b9610d095c6a61e3a","html_url":"https://github.com/apache/openjpa/commit/d684274e4e6b1473c023de8b9610d095c6a61e3a"}]},{"sha":"d85b6191bb3b8e91cd9c8ea4e599fbc7389db862","node_id":"MDY6Q29tbWl0MjA2MzY0OmQ4NWI2MTkxYmIzYjhlOTFjZDljOGVhNGU1OTlmYmM3Mzg5ZGI4NjI=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-25T16:53:17Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-25T16:53:17Z"},"message":"OPENJPA-1712 Even though license and org is defined in parent, make it obvious to our users\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@989219 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"063a460d77baa0e2232788891bddf9299b6d4eee","url":"https://api.github.com/repos/apache/openjpa/git/trees/063a460d77baa0e2232788891bddf9299b6d4eee"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/d85b6191bb3b8e91cd9c8ea4e599fbc7389db862","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/d85b6191bb3b8e91cd9c8ea4e599fbc7389db862","html_url":"https://github.com/apache/openjpa/commit/d85b6191bb3b8e91cd9c8ea4e599fbc7389db862","comments_url":"https://api.github.com/repos/apache/openjpa/commits/d85b6191bb3b8e91cd9c8ea4e599fbc7389db862/comments","author":null,"committer":null,"parents":[{"sha":"37d40eb6e24bc699858d71cdf9ac06c2669316df","url":"https://api.github.com/repos/apache/openjpa/commits/37d40eb6e24bc699858d71cdf9ac06c2669316df","html_url":"https://github.com/apache/openjpa/commit/37d40eb6e24bc699858d71cdf9ac06c2669316df"}]},{"sha":"fbdcce9b5b468627784a48643de210b48298ba9b","node_id":"MDY6Q29tbWl0MjA2MzY0OmZiZGNjZTliNWI0Njg2Mjc3ODRhNDg2NDNkZTIxMGI0ODI5OGJhOWI=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-25T17:37:04Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-25T17:37:04Z"},"message":"OPENJPA-1712 Add createSource options back in and remove test-javadoc reports which we don't need and take way too long to build\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@989243 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"8a5d2742cb7e8dbff973d359e6d7f1cf756c1c48","url":"https://api.github.com/repos/apache/openjpa/git/trees/8a5d2742cb7e8dbff973d359e6d7f1cf756c1c48"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/fbdcce9b5b468627784a48643de210b48298ba9b","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/fbdcce9b5b468627784a48643de210b48298ba9b","html_url":"https://github.com/apache/openjpa/commit/fbdcce9b5b468627784a48643de210b48298ba9b","comments_url":"https://api.github.com/repos/apache/openjpa/commits/fbdcce9b5b468627784a48643de210b48298ba9b/comments","author":null,"committer":null,"parents":[{"sha":"d85b6191bb3b8e91cd9c8ea4e599fbc7389db862","url":"https://api.github.com/repos/apache/openjpa/commits/d85b6191bb3b8e91cd9c8ea4e599fbc7389db862","html_url":"https://github.com/apache/openjpa/commit/d85b6191bb3b8e91cd9c8ea4e599fbc7389db862"}]},{"sha":"5f8fdfd1c66002ed7479c221645bab1848122121","node_id":"MDY6Q29tbWl0MjA2MzY0OjVmOGZkZmQxYzY2MDAyZWQ3NDc5YzIyMTY0NWJhYjE4NDgxMjIxMjE=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-25T18:12:35Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-25T18:12:35Z"},"message":"[maven-release-plugin] prepare release 2.0.1\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@989274 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"bf329645a447dc9354f01eeb22088c7dca7bfb20","url":"https://api.github.com/repos/apache/openjpa/git/trees/bf329645a447dc9354f01eeb22088c7dca7bfb20"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/5f8fdfd1c66002ed7479c221645bab1848122121","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/5f8fdfd1c66002ed7479c221645bab1848122121","html_url":"https://github.com/apache/openjpa/commit/5f8fdfd1c66002ed7479c221645bab1848122121","comments_url":"https://api.github.com/repos/apache/openjpa/commits/5f8fdfd1c66002ed7479c221645bab1848122121/comments","author":null,"committer":null,"parents":[{"sha":"fbdcce9b5b468627784a48643de210b48298ba9b","url":"https://api.github.com/repos/apache/openjpa/commits/fbdcce9b5b468627784a48643de210b48298ba9b","html_url":"https://github.com/apache/openjpa/commit/fbdcce9b5b468627784a48643de210b48298ba9b"}]},{"sha":"f364f83a9c702eb17b6064050343fbed1118b245","node_id":"MDY6Q29tbWl0MjA2MzY0OmYzNjRmODNhOWM3MDJlYjE3YjYwNjQwNTAzNDNmYmVkMTExOGIyNDU=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-25T18:12:40Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-25T18:12:40Z"},"message":"[maven-scm] copy for tag 2.0.1\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/tags/2.0.1@989275 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"bf329645a447dc9354f01eeb22088c7dca7bfb20","url":"https://api.github.com/repos/apache/openjpa/git/trees/bf329645a447dc9354f01eeb22088c7dca7bfb20"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/f364f83a9c702eb17b6064050343fbed1118b245","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/f364f83a9c702eb17b6064050343fbed1118b245","html_url":"https://github.com/apache/openjpa/commit/f364f83a9c702eb17b6064050343fbed1118b245","comments_url":"https://api.github.com/repos/apache/openjpa/commits/f364f83a9c702eb17b6064050343fbed1118b245/comments","author":null,"committer":null,"parents":[{"sha":"61f7483b826f6c9d849c0f993ad95cdafad6f3be","url":"https://api.github.com/repos/apache/openjpa/commits/61f7483b826f6c9d849c0f993ad95cdafad6f3be","html_url":"https://github.com/apache/openjpa/commit/61f7483b826f6c9d849c0f993ad95cdafad6f3be"},{"sha":"5f8fdfd1c66002ed7479c221645bab1848122121","url":"https://api.github.com/repos/apache/openjpa/commits/5f8fdfd1c66002ed7479c221645bab1848122121","html_url":"https://github.com/apache/openjpa/commit/5f8fdfd1c66002ed7479c221645bab1848122121"}]},{"sha":"a248a3e865c355aff38deee520bc54b9f7f3861d","node_id":"MDY6Q29tbWl0MjA2MzY0OmEyNDhhM2U4NjVjMzU1YWZmMzhkZWVlNTIwYmM1NGI5ZjdmMzg2MWQ=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-25T18:12:49Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-25T18:12:49Z"},"message":"[maven-release-plugin] prepare for next development iteration\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@989276 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"329a4fb0b3c8bb2eaf08cc73dea3fae678700e11","url":"https://api.github.com/repos/apache/openjpa/git/trees/329a4fb0b3c8bb2eaf08cc73dea3fae678700e11"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/a248a3e865c355aff38deee520bc54b9f7f3861d","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/a248a3e865c355aff38deee520bc54b9f7f3861d","html_url":"https://github.com/apache/openjpa/commit/a248a3e865c355aff38deee520bc54b9f7f3861d","comments_url":"https://api.github.com/repos/apache/openjpa/commits/a248a3e865c355aff38deee520bc54b9f7f3861d/comments","author":null,"committer":null,"parents":[{"sha":"5f8fdfd1c66002ed7479c221645bab1848122121","url":"https://api.github.com/repos/apache/openjpa/commits/5f8fdfd1c66002ed7479c221645bab1848122121","html_url":"https://github.com/apache/openjpa/commit/5f8fdfd1c66002ed7479c221645bab1848122121"}]},{"sha":"3983a156e991fdf20404e650874c1cdb089c889f","node_id":"MDY6Q29tbWl0MjA2MzY0OjM5ODNhMTU2ZTk5MWZkZjIwNDA0ZTY1MDg3NGMxY2RiMDg5Yzg4OWY=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-25T19:37:41Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-25T19:37:41Z"},"message":"[maven-release-plugin] rollback the release of 2.0.1\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@989318 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"8a5d2742cb7e8dbff973d359e6d7f1cf756c1c48","url":"https://api.github.com/repos/apache/openjpa/git/trees/8a5d2742cb7e8dbff973d359e6d7f1cf756c1c48"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/3983a156e991fdf20404e650874c1cdb089c889f","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/3983a156e991fdf20404e650874c1cdb089c889f","html_url":"https://github.com/apache/openjpa/commit/3983a156e991fdf20404e650874c1cdb089c889f","comments_url":"https://api.github.com/repos/apache/openjpa/commits/3983a156e991fdf20404e650874c1cdb089c889f/comments","author":null,"committer":null,"parents":[{"sha":"a248a3e865c355aff38deee520bc54b9f7f3861d","url":"https://api.github.com/repos/apache/openjpa/commits/a248a3e865c355aff38deee520bc54b9f7f3861d","html_url":"https://github.com/apache/openjpa/commit/a248a3e865c355aff38deee520bc54b9f7f3861d"}]},{"sha":"4b205c47974bcff7f22ceed1e49854b9ffe8516e","node_id":"MDY6Q29tbWl0MjA2MzY0OjRiMjA1YzQ3OTc0YmNmZjdmMjJjZWVkMWU0OTg1NGI5ZmZlODUxNmU=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-25T19:47:09Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-25T19:47:09Z"},"message":"OPENJPA-1712 Explicit gpg-plugin config and tweak reporting\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@989322 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"afcbd0c1232eb5abeb3c7630c835ab9cca3bd1b3","url":"https://api.github.com/repos/apache/openjpa/git/trees/afcbd0c1232eb5abeb3c7630c835ab9cca3bd1b3"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/4b205c47974bcff7f22ceed1e49854b9ffe8516e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/4b205c47974bcff7f22ceed1e49854b9ffe8516e","html_url":"https://github.com/apache/openjpa/commit/4b205c47974bcff7f22ceed1e49854b9ffe8516e","comments_url":"https://api.github.com/repos/apache/openjpa/commits/4b205c47974bcff7f22ceed1e49854b9ffe8516e/comments","author":null,"committer":null,"parents":[{"sha":"3983a156e991fdf20404e650874c1cdb089c889f","url":"https://api.github.com/repos/apache/openjpa/commits/3983a156e991fdf20404e650874c1cdb089c889f","html_url":"https://github.com/apache/openjpa/commit/3983a156e991fdf20404e650874c1cdb089c889f"}]},{"sha":"089407d4260e6842174bc1b80e638a56048fbefc","node_id":"MDY6Q29tbWl0MjA2MzY0OjA4OTQwN2Q0MjYwZTY4NDIxNzRiYzFiODBlNjM4YTU2MDQ4ZmJlZmM=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-25T20:06:53Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-25T20:06:53Z"},"message":"[maven-release-plugin] prepare release 2.0.1\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@989331 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0d864a11d905e5703d3e62394df2832197e8a5bd","url":"https://api.github.com/repos/apache/openjpa/git/trees/0d864a11d905e5703d3e62394df2832197e8a5bd"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/089407d4260e6842174bc1b80e638a56048fbefc","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/089407d4260e6842174bc1b80e638a56048fbefc","html_url":"https://github.com/apache/openjpa/commit/089407d4260e6842174bc1b80e638a56048fbefc","comments_url":"https://api.github.com/repos/apache/openjpa/commits/089407d4260e6842174bc1b80e638a56048fbefc/comments","author":null,"committer":null,"parents":[{"sha":"4b205c47974bcff7f22ceed1e49854b9ffe8516e","url":"https://api.github.com/repos/apache/openjpa/commits/4b205c47974bcff7f22ceed1e49854b9ffe8516e","html_url":"https://github.com/apache/openjpa/commit/4b205c47974bcff7f22ceed1e49854b9ffe8516e"}]},{"sha":"fbbbaf9ce360331fd77ed9bc5f2fcdc71710ff75","node_id":"MDY6Q29tbWl0MjA2MzY0OmZiYmJhZjljZTM2MDMzMWZkNzdlZDliYzVmMmZjZGM3MTcxMGZmNzU=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-25T20:06:57Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-25T20:06:57Z"},"message":"[maven-scm] copy for tag 2.0.1\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/tags/2.0.1@989332 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"0d864a11d905e5703d3e62394df2832197e8a5bd","url":"https://api.github.com/repos/apache/openjpa/git/trees/0d864a11d905e5703d3e62394df2832197e8a5bd"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/fbbbaf9ce360331fd77ed9bc5f2fcdc71710ff75","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/fbbbaf9ce360331fd77ed9bc5f2fcdc71710ff75","html_url":"https://github.com/apache/openjpa/commit/fbbbaf9ce360331fd77ed9bc5f2fcdc71710ff75","comments_url":"https://api.github.com/repos/apache/openjpa/commits/fbbbaf9ce360331fd77ed9bc5f2fcdc71710ff75/comments","author":null,"committer":null,"parents":[{"sha":"f364f83a9c702eb17b6064050343fbed1118b245","url":"https://api.github.com/repos/apache/openjpa/commits/f364f83a9c702eb17b6064050343fbed1118b245","html_url":"https://github.com/apache/openjpa/commit/f364f83a9c702eb17b6064050343fbed1118b245"},{"sha":"089407d4260e6842174bc1b80e638a56048fbefc","url":"https://api.github.com/repos/apache/openjpa/commits/089407d4260e6842174bc1b80e638a56048fbefc","html_url":"https://github.com/apache/openjpa/commit/089407d4260e6842174bc1b80e638a56048fbefc"}]},{"sha":"a2d8195aac36631b40a81e2c5e79b93bd1d17b14","node_id":"MDY6Q29tbWl0MjA2MzY0OmEyZDgxOTVhYWMzNjYzMWI0MGE4MWUyYzVlNzliOTNiZDFkMTdiMTQ=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-25T20:07:05Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-25T20:07:05Z"},"message":"[maven-release-plugin] prepare for next development iteration\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@989333 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"c12d2bb46e132f560b8ccc7d7896604eb8a2c74b","url":"https://api.github.com/repos/apache/openjpa/git/trees/c12d2bb46e132f560b8ccc7d7896604eb8a2c74b"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/a2d8195aac36631b40a81e2c5e79b93bd1d17b14","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/a2d8195aac36631b40a81e2c5e79b93bd1d17b14","html_url":"https://github.com/apache/openjpa/commit/a2d8195aac36631b40a81e2c5e79b93bd1d17b14","comments_url":"https://api.github.com/repos/apache/openjpa/commits/a2d8195aac36631b40a81e2c5e79b93bd1d17b14/comments","author":null,"committer":null,"parents":[{"sha":"089407d4260e6842174bc1b80e638a56048fbefc","url":"https://api.github.com/repos/apache/openjpa/commits/089407d4260e6842174bc1b80e638a56048fbefc","html_url":"https://github.com/apache/openjpa/commit/089407d4260e6842174bc1b80e638a56048fbefc"}]},{"sha":"c741363f8f47bd6210195ba4e3c7bc66cbb88880","node_id":"MDY6Q29tbWl0MjA2MzY0OmM3NDEzNjNmOGY0N2JkNjIxMDE5NWJhNGUzYzdiYzY2Y2JiODg4ODA=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-25T21:40:13Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-25T21:40:13Z"},"message":"[maven-release-plugin] rollback the release of 2.0.1\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@989380 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"afcbd0c1232eb5abeb3c7630c835ab9cca3bd1b3","url":"https://api.github.com/repos/apache/openjpa/git/trees/afcbd0c1232eb5abeb3c7630c835ab9cca3bd1b3"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/c741363f8f47bd6210195ba4e3c7bc66cbb88880","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/c741363f8f47bd6210195ba4e3c7bc66cbb88880","html_url":"https://github.com/apache/openjpa/commit/c741363f8f47bd6210195ba4e3c7bc66cbb88880","comments_url":"https://api.github.com/repos/apache/openjpa/commits/c741363f8f47bd6210195ba4e3c7bc66cbb88880/comments","author":null,"committer":null,"parents":[{"sha":"a2d8195aac36631b40a81e2c5e79b93bd1d17b14","url":"https://api.github.com/repos/apache/openjpa/commits/a2d8195aac36631b40a81e2c5e79b93bd1d17b14","html_url":"https://github.com/apache/openjpa/commit/a2d8195aac36631b40a81e2c5e79b93bd1d17b14"}]},{"sha":"31730d9f7b2d53cdf95a3978fa478c271a6bf49e","node_id":"MDY6Q29tbWl0MjA2MzY0OjMxNzMwZDlmN2IyZDUzY2RmOTVhMzk3OGZhNDc4YzI3MWE2YmY0OWU=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-25T21:43:22Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-25T21:43:22Z"},"message":"OPENJPA-1712 Remove explicit gpg and stop creating sources jars which are not getting signed...\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@989382 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"e52d62eee29881748d99d36dae7bf68dfcc7194c","url":"https://api.github.com/repos/apache/openjpa/git/trees/e52d62eee29881748d99d36dae7bf68dfcc7194c"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/31730d9f7b2d53cdf95a3978fa478c271a6bf49e","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/31730d9f7b2d53cdf95a3978fa478c271a6bf49e","html_url":"https://github.com/apache/openjpa/commit/31730d9f7b2d53cdf95a3978fa478c271a6bf49e","comments_url":"https://api.github.com/repos/apache/openjpa/commits/31730d9f7b2d53cdf95a3978fa478c271a6bf49e/comments","author":null,"committer":null,"parents":[{"sha":"c741363f8f47bd6210195ba4e3c7bc66cbb88880","url":"https://api.github.com/repos/apache/openjpa/commits/c741363f8f47bd6210195ba4e3c7bc66cbb88880","html_url":"https://github.com/apache/openjpa/commit/c741363f8f47bd6210195ba4e3c7bc66cbb88880"}]},{"sha":"4c0a76f2d712d0d088d163fcec1c8922db176ecc","node_id":"MDY6Q29tbWl0MjA2MzY0OjRjMGE3NmYyZDcxMmQwZDA4OGQxNjNmY2VjMWM4OTIyZGIxNzZlY2M=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-26T01:42:20Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-26T01:42:20Z"},"message":"[maven-release-plugin] prepare release 2.0.1\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/branches/2.0.x@989423 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"ef6a2c0c6617506bc29ff3741a855f2cc09d67e1","url":"https://api.github.com/repos/apache/openjpa/git/trees/ef6a2c0c6617506bc29ff3741a855f2cc09d67e1"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/4c0a76f2d712d0d088d163fcec1c8922db176ecc","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/4c0a76f2d712d0d088d163fcec1c8922db176ecc","html_url":"https://github.com/apache/openjpa/commit/4c0a76f2d712d0d088d163fcec1c8922db176ecc","comments_url":"https://api.github.com/repos/apache/openjpa/commits/4c0a76f2d712d0d088d163fcec1c8922db176ecc/comments","author":null,"committer":null,"parents":[{"sha":"31730d9f7b2d53cdf95a3978fa478c271a6bf49e","url":"https://api.github.com/repos/apache/openjpa/commits/31730d9f7b2d53cdf95a3978fa478c271a6bf49e","html_url":"https://github.com/apache/openjpa/commit/31730d9f7b2d53cdf95a3978fa478c271a6bf49e"}]},{"sha":"805f554ba1896e417b28a547388ec059ba990f31","node_id":"MDY6Q29tbWl0MjA2MzY0OjgwNWY1NTRiYTE4OTZlNDE3YjI4YTU0NzM4OGVjMDU5YmE5OTBmMzE=","commit":{"author":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-26T01:42:25Z"},"committer":{"name":"Donald Woods","email":"dwoods@apache.org","date":"2010-08-26T01:42:25Z"},"message":"[maven-scm] copy for tag 2.0.1\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/tags/2.0.1@989424 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"ef6a2c0c6617506bc29ff3741a855f2cc09d67e1","url":"https://api.github.com/repos/apache/openjpa/git/trees/ef6a2c0c6617506bc29ff3741a855f2cc09d67e1"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/805f554ba1896e417b28a547388ec059ba990f31","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/805f554ba1896e417b28a547388ec059ba990f31","html_url":"https://github.com/apache/openjpa/commit/805f554ba1896e417b28a547388ec059ba990f31","comments_url":"https://api.github.com/repos/apache/openjpa/commits/805f554ba1896e417b28a547388ec059ba990f31/comments","author":null,"committer":null,"parents":[{"sha":"fbbbaf9ce360331fd77ed9bc5f2fcdc71710ff75","url":"https://api.github.com/repos/apache/openjpa/commits/fbbbaf9ce360331fd77ed9bc5f2fcdc71710ff75","html_url":"https://github.com/apache/openjpa/commit/fbbbaf9ce360331fd77ed9bc5f2fcdc71710ff75"},{"sha":"4c0a76f2d712d0d088d163fcec1c8922db176ecc","url":"https://api.github.com/repos/apache/openjpa/commits/4c0a76f2d712d0d088d163fcec1c8922db176ecc","html_url":"https://github.com/apache/openjpa/commit/4c0a76f2d712d0d088d163fcec1c8922db176ecc"}]}],"files":[{"sha":"5718cf5f7ab8bfead00d23b1029a031fda9b906c","filename":"LICENSE.txt","status":"modified","additions":518,"deletions":348,"changes":866,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/LICENSE.txt","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/LICENSE.txt","contents_url":"https://api.github.com/repos/apache/openjpa/contents/LICENSE.txt?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -1,348 +1,518 @@\n-\r\n-                                 Apache License\r\n-                           Version 2.0, January 2004\r\n-                        http://www.apache.org/licenses/\r\n-\r\n-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\r\n-\r\n-   1. Definitions.\r\n-\r\n-      \"License\" shall mean the terms and conditions for use, reproduction,\r\n-      and distribution as defined by Sections 1 through 9 of this document.\r\n-\r\n-      \"Licensor\" shall mean the copyright owner or entity authorized by\r\n-      the copyright owner that is granting the License.\r\n-\r\n-      \"Legal Entity\" shall mean the union of the acting entity and all\r\n-      other entities that control, are controlled by, or are under common\r\n-      control with that entity. For the purposes of this definition,\r\n-      \"control\" means (i) the power, direct or indirect, to cause the\r\n-      direction or management of such entity, whether by contract or\r\n-      otherwise, or (ii) ownership of fifty percent (50%) or more of the\r\n-      outstanding shares, or (iii) beneficial ownership of such entity.\r\n-\r\n-      \"You\" (or \"Your\") shall mean an individual or Legal Entity\r\n-      exercising permissions granted by this License.\r\n-\r\n-      \"Source\" form shall mean the preferred form for making modifications,\r\n-      including but not limited to software source code, documentation\r\n-      source, and configuration files.\r\n-\r\n-      \"Object\" form shall mean any form resulting from mechanical\r\n-      transformation or translation of a Source form, including but\r\n-      not limited to compiled object code, generated documentation,\r\n-      and conversions to other media types.\r\n-\r\n-      \"Work\" shall mean the work of authorship, whether in Source or\r\n-      Object form, made available under the License, as indicated by a\r\n-      copyright notice that is included in or attached to the work\r\n-      (an example is provided in the Appendix below).\r\n-\r\n-      \"Derivative Works\" shall mean any work, whether in Source or Object\r\n-      form, that is based on (or derived from) the Work and for which the\r\n-      editorial revisions, annotations, elaborations, or other modifications\r\n-      represent, as a whole, an original work of authorship. For the purposes\r\n-      of this License, Derivative Works shall not include works that remain\r\n-      separable from, or merely link (or bind by name) to the interfaces of,\r\n-      the Work and Derivative Works thereof.\r\n-\r\n-      \"Contribution\" shall mean any work of authorship, including\r\n-      the original version of the Work and any modifications or additions\r\n-      to that Work or Derivative Works thereof, that is intentionally\r\n-      submitted to Licensor for inclusion in the Work by the copyright owner\r\n-      or by an individual or Legal Entity authorized to submit on behalf of\r\n-      the copyright owner. For the purposes of this definition, \"submitted\"\r\n-      means any form of electronic, verbal, or written communication sent\r\n-      to the Licensor or its representatives, including but not limited to\r\n-      communication on electronic mailing lists, source code control systems,\r\n-      and issue tracking systems that are managed by, or on behalf of, the\r\n-      Licensor for the purpose of discussing and improving the Work, but\r\n-      excluding communication that is conspicuously marked or otherwise\r\n-      designated in writing by the copyright owner as \"Not a Contribution.\"\r\n-\r\n-      \"Contributor\" shall mean Licensor and any individual or Legal Entity\r\n-      on behalf of whom a Contribution has been received by Licensor and\r\n-      subsequently incorporated within the Work.\r\n-\r\n-   2. Grant of Copyright License. Subject to the terms and conditions of\r\n-      this License, each Contributor hereby grants to You a perpetual,\r\n-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\r\n-      copyright license to reproduce, prepare Derivative Works of,\r\n-      publicly display, publicly perform, sublicense, and distribute the\r\n-      Work and such Derivative Works in Source or Object form.\r\n-\r\n-   3. Grant of Patent License. Subject to the terms and conditions of\r\n-      this License, each Contributor hereby grants to You a perpetual,\r\n-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\r\n-      (except as stated in this section) patent license to make, have made,\r\n-      use, offer to sell, sell, import, and otherwise transfer the Work,\r\n-      where such license applies only to those patent claims licensable\r\n-      by such Contributor that are necessarily infringed by their\r\n-      Contribution(s) alone or by combination of their Contribution(s)\r\n-      with the Work to which such Contribution(s) was submitted. If You\r\n-      institute patent litigation against any entity (including a\r\n-      cross-claim or counterclaim in a lawsuit) alleging that the Work\r\n-      or a Contribution incorporated within the Work constitutes direct\r\n-      or contributory patent infringement, then any patent licenses\r\n-      granted to You under this License for that Work shall terminate\r\n-      as of the date such litigation is filed.\r\n-\r\n-   4. Redistribution. You may reproduce and distribute copies of the\r\n-      Work or Derivative Works thereof in any medium, with or without\r\n-      modifications, and in Source or Object form, provided that You\r\n-      meet the following conditions:\r\n-\r\n-      (a) You must give any other recipients of the Work or\r\n-          Derivative Works a copy of this License; and\r\n-\r\n-      (b) You must cause any modified files to carry prominent notices\r\n-          stating that You changed the files; and\r\n-\r\n-      (c) You must retain, in the Source form of any Derivative Works\r\n-          that You distribute, all copyright, patent, trademark, and\r\n-          attribution notices from the Source form of the Work,\r\n-          excluding those notices that do not pertain to any part of\r\n-          the Derivative Works; and\r\n-\r\n-      (d) If the Work includes a \"NOTICE\" text file as part of its\r\n-          distribution, then any Derivative Works that You distribute must\r\n-          include a readable copy of the attribution notices contained\r\n-          within such NOTICE file, excluding those notices that do not\r\n-          pertain to any part of the Derivative Works, in at least one\r\n-          of the following places: within a NOTICE text file distributed\r\n-          as part of the Derivative Works; within the Source form or\r\n-          documentation, if provided along with the Derivative Works; or,\r\n-          within a display generated by the Derivative Works, if and\r\n-          wherever such third-party notices normally appear. The contents\r\n-          of the NOTICE file are for informational purposes only and\r\n-          do not modify the License. You may add Your own attribution\r\n-          notices within Derivative Works that You distribute, alongside\r\n-          or as an addendum to the NOTICE text from the Work, provided\r\n-          that such additional attribution notices cannot be construed\r\n-          as modifying the License.\r\n-\r\n-      You may add Your own copyright statement to Your modifications and\r\n-      may provide additional or different license terms and conditions\r\n-      for use, reproduction, or distribution of Your modifications, or\r\n-      for any such Derivative Works as a whole, provided Your use,\r\n-      reproduction, and distribution of the Work otherwise complies with\r\n-      the conditions stated in this License.\r\n-\r\n-   5. Submission of Contributions. Unless You explicitly state otherwise,\r\n-      any Contribution intentionally submitted for inclusion in the Work\r\n-      by You to the Licensor shall be under the terms and conditions of\r\n-      this License, without any additional terms or conditions.\r\n-      Notwithstanding the above, nothing herein shall supersede or modify\r\n-      the terms of any separate license agreement you may have executed\r\n-      with Licensor regarding such Contributions.\r\n-\r\n-   6. Trademarks. This License does not grant permission to use the trade\r\n-      names, trademarks, service marks, or product names of the Licensor,\r\n-      except as required for reasonable and customary use in describing the\r\n-      origin of the Work and reproducing the content of the NOTICE file.\r\n-\r\n-   7. Disclaimer of Warranty. Unless required by applicable law or\r\n-      agreed to in writing, Licensor provides the Work (and each\r\n-      Contributor provides its Contributions) on an \"AS IS\" BASIS,\r\n-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\r\n-      implied, including, without limitation, any warranties or conditions\r\n-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\r\n-      PARTICULAR PURPOSE. You are solely responsible for determining the\r\n-      appropriateness of using or redistributing the Work and assume any\r\n-      risks associated with Your exercise of permissions under this License.\r\n-\r\n-   8. Limitation of Liability. In no event and under no legal theory,\r\n-      whether in tort (including negligence), contract, or otherwise,\r\n-      unless required by applicable law (such as deliberate and grossly\r\n-      negligent acts) or agreed to in writing, shall any Contributor be\r\n-      liable to You for damages, including any direct, indirect, special,\r\n-      incidental, or consequential damages of any character arising as a\r\n-      result of this License or out of the use or inability to use the\r\n-      Work (including but not limited to damages for loss of goodwill,\r\n-      work stoppage, computer failure or malfunction, or any and all\r\n-      other commercial damages or losses), even if such Contributor\r\n-      has been advised of the possibility of such damages.\r\n-\r\n-   9. Accepting Warranty or Additional Liability. While redistributing\r\n-      the Work or Derivative Works thereof, You may choose to offer,\r\n-      and charge a fee for, acceptance of support, warranty, indemnity,\r\n-      or other liability obligations and/or rights consistent with this\r\n-      License. However, in accepting such obligations, You may act only\r\n-      on Your own behalf and on Your sole responsibility, not on behalf\r\n-      of any other Contributor, and only if You agree to indemnify,\r\n-      defend, and hold each Contributor harmless for any liability\r\n-      incurred by, or claims asserted against, such Contributor by reason\r\n-      of your accepting any such warranty or additional liability.\r\n-\r\n-   END OF TERMS AND CONDITIONS\r\n-\r\n-   APPENDIX: How to apply the Apache License to your work.\r\n-\r\n-      To apply the Apache License to your work, attach the following\r\n-      boilerplate notice, with the fields enclosed by brackets \"[]\"\r\n-      replaced with your own identifying information. (Don't include\r\n-      the brackets!)  The text should be enclosed in the appropriate\r\n-      comment syntax for the file format. We also recommend that a\r\n-      file or class name and description of purpose be included on the\r\n-      same \"printed page\" as the copyright notice for easier\r\n-      identification within third-party archives.\r\n-\r\n-   Copyright [yyyy] [name of copyright owner]\r\n-\r\n-   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n-   you may not use this file except in compliance with the License.\r\n-   You may obtain a copy of the License at\r\n-\r\n-       http://www.apache.org/licenses/LICENSE-2.0\r\n-\r\n-   Unless required by applicable law or agreed to in writing, software\r\n-   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n-   See the License for the specific language governing permissions and\r\n-   limitations under the License.\r\n-\r\n-\r\n-======================================\r\n-  LICENSES FOR INCLUDED DEPENDENCIES\r\n-======================================\r\n-\r\n-All the source code for the OpenJPA project is released under the\r\n-license above. Additionally, the OpenJPA binary distribution\r\n-includes a number of third-party files that are required in\r\n-order to the software to function. Unless noted below, these jars\r\n-and resource files are also released under the ASF license above.\r\n-\r\n-The exceptions are as follows:\r\n-\r\n-===========================\r\n-  orm-xsd.rsrc - included in the openjpa jar, taken from:\r\n-    http://java.sun.com/xml/ns/persistence/orm_1_0.xsd)\r\n-  orm_2_0-xsd.rsrc - included in the openjpa jar, taken from:\r\n-    http://java.sun.com/xml/ns/persistence/orm_2_0.xsd)\r\n-  persistence-xsd.rsrc - included in the openjpa jar, taken from:\r\n-    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd)\r\n-  persistence_2_0-xsd.rsrc - included in the openjpa jar, taken from:\r\n-    http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd)\r\n-  websphere-uow-api.jar - this jar file contains WebSphere proprietary\r\n-    API code which is licensed for use when compiling OpenJPA. The\r\n-    jar is not distributed with OpenJPA and is only included with the\r\n-    source archive in order to resolve compilation dependencies. \r\n-===========================\r\n-\r\n-COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL) Version 1.0\r\n-\r\n-1. Definitions.\r\n-\r\n-1.1. Contributor means each individual or entity that creates or contributes to the creation of Modifications.\r\n-\r\n-1.2. Contributor Version means the combination of the Original Software, prior Modifications used by a Contributor (if any), and the Modifications made by that particular Contributor.\r\n-\r\n-1.3. Covered Software means (a) the Original Software, or (b) Modifications, or (c) the combination of files containing Original Software with files containing Modifications, in each case including portions thereof.\r\n-\r\n-1.4. Executable means the Covered Software in any form other than Source Code.\r\n-\r\n-1.5. Initial Developer means the individual or entity that first makes Original Software available under this License.\r\n-\r\n-1.6. Larger Work means a work which combines Covered Software or portions thereof with code not governed by the terms of this License.\r\n-\r\n-1.7. License means this document.\r\n-\r\n-1.8. Licensable means having the right to grant, to the maximum extent possible, whether at the time of the initial grant or subsequently acquired, any and all of the rights conveyed herein.\r\n-\r\n-1.9. Modifications means the Source Code and Executable form of any of the following:\r\n-\r\n-A. Any file that results from an addition to, deletion from or modification of the contents of a file containing Original Software or previous Modifications;\r\n-\r\n-B. Any new file that contains any part of the Original Software or previous Modification; or\r\n-\r\n-C. Any new file that is contributed or otherwise made available under the terms of this License.\r\n-\r\n-1.10. Original Software means the Source Code and Executable form of computer software code that is originally released under this License.\r\n-\r\n-1.11. Patent Claims means any patent claim(s), now owned or hereafter acquired, including without limitation, method, process, and apparatus claims, in any patent Licensable by grantor.\r\n-\r\n-1.12. Source Code means (a) the common form of computer software code in which modifications are made and (b) associated documentation included in or with such code.\r\n-\r\n-1.13. You (or Your) means an individual or a legal entity exercising rights under, and complying with all of the terms of, this License. For legal entities, You includes any entity which controls, is controlled by, or is under common control with You. For purposes of this definition, control means (a)�the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (b)�ownership of more than fifty percent (50%) of the outstanding shares or beneficial ownership of such entity.\r\n-\r\n-2. License Grants.\r\n-\r\n-2.1. The Initial Developer Grant.\r\n-Conditioned upon Your compliance with Section 3.1 below and subject to third party intellectual property claims, the Initial Developer hereby grants You a world-wide, royalty-free, non-exclusive license:\r\n-(a) under intellectual property rights (other than patent or trademark) Licensable by Initial Developer, to use, reproduce, modify, display, perform, sublicense and distribute the Original Software (or portions thereof), with or without Modifications, and/or as part of a Larger Work; and\r\n-(b) under Patent Claims infringed by the making, using or selling of Original Software, to make, have made, use, practice, sell, and offer for sale, and/or otherwise dispose of the Original Software (or portions thereof).\r\n-(c) The licenses granted in Sections�2.1(a) and (b) are effective on the date Initial Developer first distributes or otherwise makes the Original Software available to a third party under the terms of this License.\r\n-(d) Notwithstanding Section�2.1(b) above, no patent license is granted: (1)�for code that You delete from the Original Software, or (2)�for infringements caused by: (i)�the modification of the Original Software, or (ii)�the combination of the Original Software with other software or devices.\r\n-\r\n-2.2. Contributor Grant.\r\n-Conditioned upon Your compliance with Section 3.1 below and subject to third party intellectual property claims, each Contributor hereby grants You a world-wide, royalty-free, non-exclusive license:\r\n-(a) under intellectual property rights (other than patent or trademark) Licensable by Contributor to use, reproduce, modify, display, perform, sublicense and distribute the Modifications created by such Contributor (or portions thereof), either on an unmodified basis, with other Modifications, as Covered Software and/or as part of a Larger Work; and\r\n-(b) under Patent Claims infringed by the making, using, or selling of Modifications made by that Contributor either alone and/or in combination with its Contributor Version (or portions of such combination), to make, use, sell, offer for sale, have made, and/or otherwise dispose of: (1)�Modifications made by that Contributor (or portions thereof); and (2)�the combination of Modifications made by that Contributor with its Contributor Version (or portions of such combination).\r\n-(c) The licenses granted in Sections�2.2(a) and 2.2(b) are effective on the date Contributor first distributes or otherwise makes the Modifications available to a third party.\r\n-(d) Notwithstanding Section�2.2(b) above, no patent license is granted: (1)�for any code that Contributor has deleted from the Contributor Version; (2)�for infringements caused by: (i)�third party modifications of Contributor Version, or (ii)�the combination of Modifications made by that Contributor with other software (except as part of the Contributor Version) or other devices; or (3)�under Patent Claims infringed by Covered Software in the absence of Modifications made by that Contributor.\r\n-\r\n-3. Distribution Obligations.\r\n-\r\n-3.1. Availability of Source Code.\r\n-\r\n-Any Covered Software that You distribute or otherwise make available in Executable form must also be made available in Source Code form and that Source Code form must be distributed only under the terms of this License. You must include a copy of this License with every copy of the Source Code form of the Covered Software You distribute or otherwise make available. You must inform recipients of any such Covered Software in Executable form as to how they can obtain such Covered Software in Source Code form in a reasonable manner on or through a medium customarily used for software exchange.\r\n-\r\n-3.2. Modifications.\r\n-\r\n-The Modifications that You create or to which You contribute are governed by the terms of this License. You represent that You believe Your Modifications are Your original creation(s) and/or You have sufficient rights to grant the rights conveyed by this License.\r\n-\r\n-3.3. Required Notices.\r\n-You must include a notice in each of Your Modifications that identifies You as the Contributor of the Modification. You may not remove or alter any copyright, patent or trademark notices contained within the Covered Software, or any notices of licensing or any descriptive text giving attribution to any Contributor or the Initial Developer.\r\n-\r\n-3.4. Application of Additional Terms.\r\n-You may not offer or impose any terms on any Covered Software in Source Code form that alters or restricts the applicable version of this License or the recipients rights hereunder. You may choose to offer, and to charge a fee for, warranty, support, indemnity or liability obligations to one or more recipients of Covered Software. However, you may do so only on Your own behalf, and not on behalf of the Initial Developer or any Contributor. You must make it absolutely clear that any such warranty, support, indemnity or liability obligation is offered by You alone, and You hereby agree to indemnify the Initial Developer and every Contributor for any liability incurred by the Initial Developer or such Contributor as a result of warranty, support, indemnity or liability terms You offer.\r\n-\r\n-3.5. Distribution of Executable Versions.\r\n-You may distribute the Executable form of the Covered Software under the terms of this License or under the terms of a license of Your choice, which may contain terms different from this License, provided that You are in compliance with the terms of this License and that the license for the Executable form does not attempt to limit or alter the recipients rights in the Source Code form from the rights set forth in this License. If You distribute the Covered Software in Executable form under a different license, You must make it absolutely clear that any terms which differ from this License are offered by You alone, not by the Initial Developer or Contributor. You hereby agree to indemnify the Initial Developer and every Contributor for any liability incurred by the Initial Developer or such Contributor as a result of any such terms You offer.\r\n-\r\n-3.6. Larger Works.\r\n-You may create a Larger Work by combining Covered Software with other code not governed by the terms of this License and distribute the Larger Work as a single product. In such a case, You must make sure the requirements of this License are fulfilled for the Covered Software.\r\n-\r\n-4. Versions of the License.\r\n-\r\n-4.1. New Versions.\r\n-Sun Microsystems, Inc. is the initial license steward and may publish revised and/or new versions of this License from time to time. Each version will be given a distinguishing version number. Except as provided in Section 4.3, no one other than the license steward has the right to modify this License.\r\n-\r\n-4.2. Effect of New Versions.\r\n-\r\n-You may always continue to use, distribute or otherwise make the Covered Software available under the terms of the version of the License under which You originally received the Covered Software. If the Initial Developer includes a notice in the Original Software prohibiting it from being distributed or otherwise made available under any subsequent version of the License, You must distribute and make the Covered Software available under the terms of the version of the License under which You originally received the Covered Software. Otherwise, You may also choose to use, distribute or otherwise make the Covered Software available under the terms of any subsequent version of the License published by the license steward.\r\n-4.3. Modified Versions.\r\n-\r\n-When You are an Initial Developer and You want to create a new license for Your Original Software, You may create and use a modified version of this License if You: (a)�rename the license and remove any references to the name of the license steward (except to note that the license differs from this License); and (b)�otherwise make it clear that the license contains terms which differ from this License.\r\n-\r\n-5. DISCLAIMER OF WARRANTY.\r\n-\r\n-COVERED SOFTWARE IS PROVIDED UNDER THIS LICENSE ON AN AS IS BASIS, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, WITHOUT LIMITATION, WARRANTIES THAT THE COVERED SOFTWARE IS FREE OF DEFECTS, MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE OR NON-INFRINGING. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE COVERED SOFTWARE IS WITH YOU. SHOULD ANY COVERED SOFTWARE PROVE DEFECTIVE IN ANY RESPECT, YOU (NOT THE INITIAL DEVELOPER OR ANY OTHER CONTRIBUTOR) ASSUME THE COST OF ANY NECESSARY SERVICING, REPAIR OR CORRECTION. THIS DISCLAIMER OF WARRANTY CONSTITUTES AN ESSENTIAL PART OF THIS LICENSE. NO USE OF ANY COVERED SOFTWARE IS AUTHORIZED HEREUNDER EXCEPT UNDER THIS DISCLAIMER.\r\n-\r\n-6. TERMINATION.\r\n-\r\n-6.1. This License and the rights granted hereunder will terminate automatically if You fail to comply with terms herein and fail to cure such breach within 30 days of becoming aware of the breach. Provisions which, by their nature, must remain in effect beyond the termination of this License shall survive.\r\n-\r\n-6.2. If You assert a patent infringement claim (excluding declaratory judgment actions) against Initial Developer or a Contributor (the Initial Developer or Contributor against whom You assert such claim is referred to as Participant) alleging that the Participant Software (meaning the Contributor Version where the Participant is a Contributor or the Original Software where the Participant is the Initial Developer) directly or indirectly infringes any patent, then any and all rights granted directly or indirectly to You by such Participant, the Initial Developer (if the Initial Developer is not the Participant) and all Contributors under Sections�2.1 and/or 2.2 of this License shall, upon 60 days notice from Participant terminate prospectively and automatically at the expiration of such 60 day notice period, unless if within such 60 day period You withdraw Your claim with respect to the Participant Software against such Participant either unilaterally or pursuant to a written agreement with Participant.\r\n-\r\n-6.3. In the event of termination under Sections�6.1 or 6.2 above, all end user licenses that have been validly granted by You or any distributor hereunder prior to termination (excluding licenses granted to You by any distributor) shall survive termination.\r\n-\r\n-7. LIMITATION OF LIABILITY.\r\n-\r\n-UNDER NO CIRCUMSTANCES AND UNDER NO LEGAL THEORY, WHETHER TORT (INCLUDING NEGLIGENCE), CONTRACT, OR OTHERWISE, SHALL YOU, THE INITIAL DEVELOPER, ANY OTHER CONTRIBUTOR, OR ANY DISTRIBUTOR OF COVERED SOFTWARE, OR ANY SUPPLIER OF ANY OF SUCH PARTIES, BE LIABLE TO ANY PERSON FOR ANY INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES OF ANY CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOST PROFITS, LOSS OF GOODWILL, WORK STOPPAGE, COMPUTER FAILURE OR MALFUNCTION, OR ANY AND ALL OTHER COMMERCIAL DAMAGES OR LOSSES, EVEN IF SUCH PARTY SHALL HAVE BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES. THIS LIMITATION OF LIABILITY SHALL NOT APPLY TO LIABILITY FOR DEATH OR PERSONAL INJURY RESULTING FROM SUCH PARTYS NEGLIGENCE TO THE EXTENT APPLICABLE LAW PROHIBITS SUCH LIMITATION. SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL OR CONSEQUENTIAL DAMAGES, SO THIS EXCLUSION AND LIMITATION MAY NOT APPLY TO YOU.\r\n-\r\n-8. U.S. GOVERNMENT END USERS.\r\n-\r\n-The Covered Software is a commercial item, as that term is defined in 48�C.F.R.�2.101 (Oct. 1995), consisting of commercial computer software (as that term is defined at 48 C.F.R. �252.227-7014(a)(1)) and commercial computer software documentation as such terms are used in 48�C.F.R.�12.212 (Sept. 1995). Consistent with 48 C.F.R. 12.212 and 48 C.F.R. 227.7202-1 through 227.7202-4 (June 1995), all U.S. Government End Users acquire Covered Software with only those rights set forth herein. This U.S. Government Rights clause is in lieu of, and supersedes, any other FAR, DFAR, or other clause or provision that addresses Government rights in computer software under this License.\r\n-\r\n-9. MISCELLANEOUS.\r\n-\r\n-This License represents the complete agreement concerning subject matter hereof. If any provision of this License is held to be unenforceable, such provision shall be reformed only to the extent necessary to make it enforceable. This License shall be governed by the law of the jurisdiction specified in a notice contained within the Original Software (except to the extent applicable law, if any, provides otherwise), excluding such jurisdictions conflict-of-law provisions. Any litigation relating to this License shall be subject to the jurisdiction of the courts located in the jurisdiction and venue specified in a notice contained within the Original Software, with the losing party responsible for costs, including, without limitation, court costs and reasonable attorneys fees and expenses. The application of the United Nations Convention on Contracts for the International Sale of Goods is expressly excluded. Any law or regulation which provides that the language of a contract shall be construed against the drafter shall not apply to this License. You agree that You alone are responsible for compliance with the United States export administration regulations (and the export control laws and regulation of any other countries) when You use, distribute or otherwise make available any Covered Software.\r\n-\r\n-10. RESPONSIBILITY FOR CLAIMS.\r\n-\r\n-As between Initial Developer and the Contributors, each party is responsible for claims and damages arising, directly or indirectly, out of its utilization of rights under this License and You agree to work with Initial Developer and Contributors to distribute such responsibility on an equitable basis. Nothing herein is intended or shall be deemed to constitute any admission of liability.\r\n-\r\n-NOTICE PURSUANT TO SECTION 9 OF THE COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL)\r\n-The GlassFish code released under the CDDL shall be governed by the laws of the State of California (excluding conflict-of-law provisions). Any litigation relating to this License shall be subject to the jurisdiction of the Federal Courts of the Northern District of California and the state courts of the State of California, with venue lying in Santa Clara County, California. \r\n-\r\n+\n+                                 Apache License\n+                           Version 2.0, January 2004\n+                        http://www.apache.org/licenses/\n+\n+   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n+\n+   1. Definitions.\n+\n+      \"License\" shall mean the terms and conditions for use, reproduction,\n+      and distribution as defined by Sections 1 through 9 of this document.\n+\n+      \"Licensor\" shall mean the copyright owner or entity authorized by\n+      the copyright owner that is granting the License.\n+\n+      \"Legal Entity\" shall mean the union of the acting entity and all\n+      other entities that control, are controlled by, or are under common\n+      control with that entity. For the purposes of this definition,\n+      \"control\" means (i) the power, direct or indirect, to cause the\n+      direction or management of such entity, whether by contract or\n+      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n+      outstanding shares, or (iii) beneficial ownership of such entity.\n+\n+      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n+      exercising permissions granted by this License.\n+\n+      \"Source\" form shall mean the preferred form for making modifications,\n+      including but not limited to software source code, documentation\n+      source, and configuration files.\n+\n+      \"Object\" form shall mean any form resulting from mechanical\n+      transformation or translation of a Source form, including but\n+      not limited to compiled object code, generated documentation,\n+      and conversions to other media types.\n+\n+      \"Work\" shall mean the work of authorship, whether in Source or\n+      Object form, made available under the License, as indicated by a\n+      copyright notice that is included in or attached to the work\n+      (an example is provided in the Appendix below).\n+\n+      \"Derivative Works\" shall mean any work, whether in Source or Object\n+      form, that is based on (or derived from) the Work and for which the\n+      editorial revisions, annotations, elaborations, or other modifications\n+      represent, as a whole, an original work of authorship. For the purposes\n+      of this License, Derivative Works shall not include works that remain\n+      separable from, or merely link (or bind by name) to the interfaces of,\n+      the Work and Derivative Works thereof.\n+\n+      \"Contribution\" shall mean any work of authorship, including\n+      the original version of the Work and any modifications or additions\n+      to that Work or Derivative Works thereof, that is intentionally\n+      submitted to Licensor for inclusion in the Work by the copyright owner\n+      or by an individual or Legal Entity authorized to submit on behalf of\n+      the copyright owner. For the purposes of this definition, \"submitted\"\n+      means any form of electronic, verbal, or written communication sent\n+      to the Licensor or its representatives, including but not limited to\n+      communication on electronic mailing lists, source code control systems,\n+      and issue tracking systems that are managed by, or on behalf of, the\n+      Licensor for the purpose of discussing and improving the Work, but\n+      excluding communication that is conspicuously marked or otherwise\n+      designated in writing by the copyright owner as \"Not a Contribution.\"\n+\n+      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n+      on behalf of whom a Contribution has been received by Licensor and\n+      subsequently incorporated within the Work.\n+\n+   2. Grant of Copyright License. Subject to the terms and conditions of\n+      this License, each Contributor hereby grants to You a perpetual,\n+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n+      copyright license to reproduce, prepare Derivative Works of,\n+      publicly display, publicly perform, sublicense, and distribute the\n+      Work and such Derivative Works in Source or Object form.\n+\n+   3. Grant of Patent License. Subject to the terms and conditions of\n+      this License, each Contributor hereby grants to You a perpetual,\n+      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n+      (except as stated in this section) patent license to make, have made,\n+      use, offer to sell, sell, import, and otherwise transfer the Work,\n+      where such license applies only to those patent claims licensable\n+      by such Contributor that are necessarily infringed by their\n+      Contribution(s) alone or by combination of their Contribution(s)\n+      with the Work to which such Contribution(s) was submitted. If You\n+      institute patent litigation against any entity (including a\n+      cross-claim or counterclaim in a lawsuit) alleging that the Work\n+      or a Contribution incorporated within the Work constitutes direct\n+      or contributory patent infringement, then any patent licenses\n+      granted to You under this License for that Work shall terminate\n+      as of the date such litigation is filed.\n+\n+   4. Redistribution. You may reproduce and distribute copies of the\n+      Work or Derivative Works thereof in any medium, with or without\n+      modifications, and in Source or Object form, provided that You\n+      meet the following conditions:\n+\n+      (a) You must give any other recipients of the Work or\n+          Derivative Works a copy of this License; and\n+\n+      (b) You must cause any modified files to carry prominent notices\n+          stating that You changed the files; and\n+\n+      (c) You must retain, in the Source form of any Derivative Works\n+          that You distribute, all copyright, patent, trademark, and\n+          attribution notices from the Source form of the Work,\n+          excluding those notices that do not pertain to any part of\n+          the Derivative Works; and\n+\n+      (d) If the Work includes a \"NOTICE\" text file as part of its\n+          distribution, then any Derivative Works that You distribute must\n+          include a readable copy of the attribution notices contained\n+          within such NOTICE file, excluding those notices that do not\n+          pertain to any part of the Derivative Works, in at least one\n+          of the following places: within a NOTICE text file distributed\n+          as part of the Derivative Works; within the Source form or\n+          documentation, if provided along with the Derivative Works; or,\n+          within a display generated by the Derivative Works, if and\n+          wherever such third-party notices normally appear. The contents\n+          of the NOTICE file are for informational purposes only and\n+          do not modify the License. You may add Your own attribution\n+          notices within Derivative Works that You distribute, alongside\n+          or as an addendum to the NOTICE text from the Work, provided\n+          that such additional attribution notices cannot be construed\n+          as modifying the License.\n+\n+      You may add Your own copyright statement to Your modifications and\n+      may provide additional or different license terms and conditions\n+      for use, reproduction, or distribution of Your modifications, or\n+      for any such Derivative Works as a whole, provided Your use,\n+      reproduction, and distribution of the Work otherwise complies with\n+      the conditions stated in this License.\n+\n+   5. Submission of Contributions. Unless You explicitly state otherwise,\n+      any Contribution intentionally submitted for inclusion in the Work\n+      by You to the Licensor shall be under the terms and conditions of\n+      this License, without any additional terms or conditions.\n+      Notwithstanding the above, nothing herein shall supersede or modify\n+      the terms of any separate license agreement you may have executed\n+      with Licensor regarding such Contributions.\n+\n+   6. Trademarks. This License does not grant permission to use the trade\n+      names, trademarks, service marks, or product names of the Licensor,\n+      except as required for reasonable and customary use in describing the\n+      origin of the Work and reproducing the content of the NOTICE file.\n+\n+   7. Disclaimer of Warranty. Unless required by applicable law or\n+      agreed to in writing, Licensor provides the Work (and each\n+      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n+      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n+      implied, including, without limitation, any warranties or conditions\n+      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n+      PARTICULAR PURPOSE. You are solely responsible for determining the\n+      appropriateness of using or redistributing the Work and assume any\n+      risks associated with Your exercise of permissions under this License.\n+\n+   8. Limitation of Liability. In no event and under no legal theory,\n+      whether in tort (including negligence), contract, or otherwise,\n+      unless required by applicable law (such as deliberate and grossly\n+      negligent acts) or agreed to in writing, shall any Contributor be\n+      liable to You for damages, including any direct, indirect, special,\n+      incidental, or consequential damages of any character arising as a\n+      result of this License or out of the use or inability to use the\n+      Work (including but not limited to damages for loss of goodwill,\n+      work stoppage, computer failure or malfunction, or any and all\n+      other commercial damages or losses), even if such Contributor\n+      has been advised of the possibility of such damages.\n+\n+   9. Accepting Warranty or Additional Liability. While redistributing\n+      the Work or Derivative Works thereof, You may choose to offer,\n+      and charge a fee for, acceptance of support, warranty, indemnity,\n+      or other liability obligations and/or rights consistent with this\n+      License. However, in accepting such obligations, You may act only\n+      on Your own behalf and on Your sole responsibility, not on behalf\n+      of any other Contributor, and only if You agree to indemnify,\n+      defend, and hold each Contributor harmless for any liability\n+      incurred by, or claims asserted against, such Contributor by reason\n+      of your accepting any such warranty or additional liability.\n+\n+   END OF TERMS AND CONDITIONS\n+\n+   APPENDIX: How to apply the Apache License to your work.\n+\n+      To apply the Apache License to your work, attach the following\n+      boilerplate notice, with the fields enclosed by brackets \"[]\"\n+      replaced with your own identifying information. (Don't include\n+      the brackets!)  The text should be enclosed in the appropriate\n+      comment syntax for the file format. We also recommend that a\n+      file or class name and description of purpose be included on the\n+      same \"printed page\" as the copyright notice for easier\n+      identification within third-party archives.\n+\n+   Copyright [yyyy] [name of copyright owner]\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+\n+\n+======================================\n+  LICENSES FOR INCLUDED DEPENDENCIES\n+======================================\n+\n+All the source code for the OpenJPA project is released under the\n+license above. Additionally, the OpenJPA source and/or binary\n+distribution includes a number of third-party files that are required in\n+order to the software to function. Unless noted below, these jars\n+and resource files are also released under the ASF license above.\n+\n+The exceptions are as follows:\n+\n+===========================\n+openjpa-kernel -\n+  websphere-uow-api.jar - IBM License - this jar file contains WebSphere proprietary\n+    API code which is licensed for use when compiling OpenJPA. The\n+    jar is not distributed with OpenJPA and is only included with the\n+    source archive in order to resolve compilation dependencies\n+===========================\n+\n+You may use or redistribute the files or modules contained in this\n+jar subject to the following terms:\n+\n+The WebSphere Application Server files or modules contained in this jar\n+may be redistributed as provided by IBM to you, and only as part of Your\n+application distribution.\n+\n+You may not use IBM's name or trademarks in connection with the marketing\n+of Your applications without IBM's prior written consent.\n+\n+IBM PROVIDES THESE FILES OR MODULES ON AN \"AS IS\" BASIS AND IBM DISCLAIMS\n+ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\n+WARRANTY OF NON-INFRINGEMENT AND THE IMPLIED WARRANTIES OF MERCHANTABILITY\n+OR FITNESS FOR A PARTICULAR PURPOSE.  IBM SHALL NOT BE LIABLE FOR ANY\n+DIRECT, INDIRECT, INCIDENTAL, SPECIAL OR CONSEQUENTIAL DAMAGES ARISING OUT\n+OF THE USE OR OPERATION OF THE FILES OR MODULES .  IBM HAS NO OBLIGATION\n+TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS OR MODIFICATIONS TO\n+THE FILES OR MODULES .\n+\n+===========================\n+openjpa-persistence -\n+  orm-xsd.rsrc - CDDL 1.0 - included in the openjpa jar, taken from:\n+    http://java.sun.com/xml/ns/persistence/orm_1_0.xsd)\n+  orm_2_0-xsd.rsrc - CDDL 1.0 - included in the openjpa jar, taken from:\n+    http://java.sun.com/xml/ns/persistence/orm_2_0.xsd)\n+  persistence-xsd.rsrc - CDDL 1.0 - included in the openjpa jar, taken from:\n+    http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd)\n+  persistence_2_0-xsd.rsrc - CDDL 1.0 - included in the openjpa jar, taken from:\n+    http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd). \n+===========================\n+\n+COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL) Version 1.0\n+\n+1. Definitions.\n+\n+   1.1. Contributor. means each individual or entity that creates or contributes to the creation of Modifications.\n+\n+   1.2. Contributor Version. means the combination of the Original Software, prior Modifications used by a Contributor (if any), and the Modifications made by that particular Contributor.\n+\n+   1.3. Covered Software. means (a) the Original Software, or (b) Modifications, or (c) the combination of files containing Original Software with files containing Modifications, in each case including portions thereof.\n+\n+   1.4. Executable. means the Covered Software in any form other than Source Code.\n+\n+   1.5. Initial Developer. means the individual or entity that first makes Original Software available under this License.\n+\n+   1.6. Larger Work. means a work which combines Covered Software or portions thereof with code not governed by the terms of this License.\n+\n+   1.7. License. means this document.\n+\n+   1.8. Licensable. means having the right to grant, to the maximum extent possible, whether at the time of the initial grant or subsequently acquired, any and all of the rights conveyed herein.\n+\n+   1.9. Modifications. means the Source Code and Executable form of any of the following:\n+\n+        A. Any file that results from an addition to, deletion from or modification of the contents of a file containing Original Software or previous Modifications;\n+\n+        B. Any new file that contains any part of the Original Software or previous Modification; or\n+\n+        C. Any new file that is contributed or otherwise made available under the terms of this License.\n+\n+   1.10. Original Software. means the Source Code and Executable form of computer software code that is originally released under this License.\n+\n+   1.11. Patent Claims. means any patent claim(s), now owned or hereafter acquired, including without limitation, method, process, and apparatus claims, in any patent Licensable by grantor.\n+\n+   1.12. Source Code. means (a) the common form of computer software code in which modifications are made and (b) associated documentation included in or with such code.\n+\n+   1.13. You. (or .Your.) means an individual or a legal entity exercising rights under, and complying with all of the terms of, this License. For legal entities, .You. includes any entity which controls, is controlled by, or is under common control with You. For purposes of this definition, .control. means (a) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (b) ownership of more than fifty percent (50%) of the outstanding shares or beneficial ownership of such entity.\n+\n+2. License Grants.\n+\n+      2.1. The Initial Developer Grant.\n+\n+      Conditioned upon Your compliance with Section 3.1 below and subject to third party intellectual property claims, the Initial Developer hereby grants You a world-wide, royalty-free, non-exclusive license:\n+\n+         (a) under intellectual property rights (other than patent or trademark) Licensable by Initial Developer, to use, reproduce, modify, display, perform, sublicense and distribute the Original Software (or portions thereof), with or without Modifications, and/or as part of a Larger Work; and\n+\n+         (b) under Patent Claims infringed by the making, using or selling of Original Software, to make, have made, use, practice, sell, and offer for sale, and/or otherwise dispose of the Original Software (or portions thereof).\n+\n+        (c) The licenses granted in Sections 2.1(a) and (b) are effective on the date Initial Developer first distributes or otherwise makes the Original Software available to a third party under the terms of this License.\n+\n+        (d) Notwithstanding Section 2.1(b) above, no patent license is granted: (1) for code that You delete from the Original Software, or (2) for infringements caused by: (i) the modification of the Original Software, or (ii) the combination of the Original Software with other software or devices.\n+\n+    2.2. Contributor Grant.\n+\n+    Conditioned upon Your compliance with Section 3.1 below and subject to third party intellectual property claims, each Contributor hereby grants You a world-wide, royalty-free, non-exclusive license:\n+\n+        (a) under intellectual property rights (other than patent or trademark) Licensable by Contributor to use, reproduce, modify, display, perform, sublicense and distribute the Modifications created by such Contributor (or portions thereof), either on an unmodified basis, with other Modifications, as Covered Software and/or as part of a Larger Work; and\n+\n+        (b) under Patent Claims infringed by the making, using, or selling of Modifications made by that Contributor either alone and/or in combination with its Contributor Version (or portions of such combination), to make, use, sell, offer for sale, have made, and/or otherwise dispose of: (1) Modifications made by that Contributor (or portions thereof); and (2) the combination of Modifications made by that Contributor with its Contributor Version (or portions of such combination).\n+\n+        (c) The licenses granted in Sections 2.2(a) and 2.2(b) are effective on the date Contributor first distributes or otherwise makes the Modifications available to a third party.\n+\n+        (d) Notwithstanding Section 2.2(b) above, no patent license is granted: (1) for any code that Contributor has deleted from the Contributor Version; (2) for infringements caused by: (i) third party modifications of Contributor Version, or (ii) the combination of Modifications made by that Contributor with other software (except as part of the Contributor Version) or other devices; or (3) under Patent Claims infringed by Covered Software in the absence of Modifications made by that Contributor.\n+\n+3. Distribution Obligations.\n+\n+      3.1. Availability of Source Code.\n+      Any Covered Software that You distribute or otherwise make available in Executable form must also be made available in Source Code form and that Source Code form must be distributed only under the terms of this License. You must include a copy of this License with every copy of the Source Code form of the Covered Software You distribute or otherwise make available. You must inform recipients of any such Covered Software in Executable form as to how they can obtain such Covered Software in Source Code form in a reasonable manner on or through a medium customarily used for software exchange.\n+\n+      3.2. Modifications.\n+      The Modifications that You create or to which You contribute are governed by the terms of this License. You represent that You believe Your Modifications are Your original creation(s) and/or You have sufficient rights to grant the rights conveyed by this License.\n+\n+      3.3. Required Notices.\n+      You must include a notice in each of Your Modifications that identifies You as the Contributor of the Modification. You may not remove or alter any copyright, patent or trademark notices contained within the Covered Software, or any notices of licensing or any descriptive text giving attribution to any Contributor or the Initial Developer.\n+\n+      3.4. Application of Additional Terms.\n+      You may not offer or impose any terms on any Covered Software in Source Code form that alters or restricts the applicable version of this License or the recipients. rights hereunder. You may choose to offer, and to charge a fee for, warranty, support, indemnity or liability obligations to one or more recipients of Covered Software. However, you may do so only on Your own behalf, and not on behalf of the Initial Developer or any Contributor. You must make it absolutely clear that any such warranty, support, indemnity or liability obligation is offered by You alone, and You hereby agree to indemnify the Initial Developer and every Contributor for any liability incurred by the Initial Developer or such Contributor as a result of warranty, support, indemnity or liability terms You offer.\n+\n+      3.5. Distribution of Executable Versions.\n+      You may distribute the Executable form of the Covered Software under the terms of this License or under the terms of a license of Your choice, which may contain terms different from this License, provided that You are in compliance with the terms of this License and that the license for the Executable form does not attempt to limit or alter the recipient.s rights in the Source Code form from the rights set forth in this License. If You distribute the Covered Software in Executable form under a different license, You must make it absolutely clear that any terms which differ from this License are offered by You alone, not by the Initial Developer or Contributor. You hereby agree to indemnify the Initial Developer and every Contributor for any liability incurred by the Initial Developer or such Contributor as a result of any such terms You offer.\n+\n+      3.6. Larger Works.\n+      You may create a Larger Work by combining Covered Software with other code not governed by the terms of this License and distribute the Larger Work as a single product. In such a case, You must make sure the requirements of this License are fulfilled for the Covered Software.\n+\n+4. Versions of the License.\n+\n+      4.1. New Versions.\n+      Sun Microsystems, Inc. is the initial license steward and may publish revised and/or new versions of this License from time to time. Each version will be given a distinguishing version number. Except as provided in Section 4.3, no one other than the license steward has the right to modify this License.\n+\n+      4.2. Effect of New Versions.\n+      You may always continue to use, distribute or otherwise make the Covered Software available under the terms of the version of the License under which You originally received the Covered Software. If the Initial Developer includes a notice in the Original Software prohibiting it from being distributed or otherwise made available under any subsequent version of the License, You must distribute and make the Covered Software available under the terms of the version of the License under which You originally received the Covered Software. Otherwise, You may also choose to use, distribute or otherwise make the Covered Software available under the terms of any subsequent version of the License published by the license steward.\n+\n+      4.3. Modified Versions.\n+      When You are an Initial Developer and You want to create a new license for Your Original Software, You may create and use a modified version of this License if You: (a) rename the license and remove any references to the name of the license steward (except to note that the license differs from this License); and (b) otherwise make it clear that the license contains terms which differ from this License.\n+\n+5. DISCLAIMER OF WARRANTY.\n+\n+   COVERED SOFTWARE IS PROVIDED UNDER THIS LICENSE ON AN .AS IS. BASIS, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, WITHOUT LIMITATION, WARRANTIES THAT THE COVERED SOFTWARE IS FREE OF DEFECTS, MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE OR NON-INFRINGING. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE COVERED SOFTWARE IS WITH YOU. SHOULD ANY COVERED SOFTWARE PROVE DEFECTIVE IN ANY RESPECT, YOU (NOT THE INITIAL DEVELOPER OR ANY OTHER CONTRIBUTOR) ASSUME THE COST OF ANY NECESSARY SERVICING, REPAIR OR CORRECTION. THIS DISCLAIMER OF WARRANTY CONSTITUTES AN ESSENTIAL PART OF THIS LICENSE. NO USE OF ANY COVERED SOFTWARE IS AUTHORIZED HEREUNDER EXCEPT UNDER THIS DISCLAIMER.\n+\n+6. TERMINATION.\n+\n+      6.1. This License and the rights granted hereunder will terminate automatically if You fail to comply with terms herein and fail to cure such breach within 30 days of becoming aware of the breach. Provisions which, by their nature, must remain in effect beyond the termination of this License shall survive.\n+\n+      6.2. If You assert a patent infringement claim (excluding declaratory judgment actions) against Initial Developer or a Contributor (the Initial Developer or Contributor against whom You assert such claim is referred to as .Participant.) alleging that the Participant Software (meaning the Contributor Version where the Participant is a Contributor or the Original Software where the Participant is the Initial Developer) directly or indirectly infringes any patent, then any and all rights granted directly or indirectly to You by such Participant, the Initial Developer (if the Initial Developer is not the Participant) and all Contributors under Sections 2.1 and/or 2.2 of this License shall, upon 60 days notice from Participant terminate prospectively and automatically at the expiration of such 60 day notice period, unless if within such 60 day period You withdraw Your claim with respect to the Participant Software against such Participant either unilaterally or pursuant to a written agreement with Participant.\n+\n+      6.3. In the event of termination under Sections 6.1 or 6.2 above, all end user licenses that have been validly granted by You or any distributor hereunder prior to termination (excluding licenses granted to You by any distributor) shall survive termination.\n+\n+7. LIMITATION OF LIABILITY.\n+\n+   UNDER NO CIRCUMSTANCES AND UNDER NO LEGAL THEORY, WHETHER TORT (INCLUDING NEGLIGENCE), CONTRACT, OR OTHERWISE, SHALL YOU, THE INITIAL DEVELOPER, ANY OTHER CONTRIBUTOR, OR ANY DISTRIBUTOR OF COVERED SOFTWARE, OR ANY SUPPLIER OF ANY OF SUCH PARTIES, BE LIABLE TO ANY PERSON FOR ANY INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES OF ANY CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOST PROFITS, LOSS OF GOODWILL, WORK STOPPAGE, COMPUTER FAILURE OR MALFUNCTION, OR ANY AND ALL OTHER COMMERCIAL DAMAGES OR LOSSES, EVEN IF SUCH PARTY SHALL HAVE BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES. THIS LIMITATION OF LIABILITY SHALL NOT APPLY TO LIABILITY FOR DEATH OR PERSONAL INJURY RESULTING FROM SUCH PARTY.S NEGLIGENCE TO THE EXTENT APPLICABLE LAW PROHIBITS SUCH LIMITATION. SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL OR CONSEQUENTIAL DAMAGES, SO THIS EXCLUSION AND LIMITATION MAY NOT APPLY TO YOU.\n+\n+8. U.S. GOVERNMENT END USERS.\n+\n+   The Covered Software is a .commercial item,. as that term is defined in 48 C.F.R. 2.101 (Oct. 1995), consisting of .commercial computer software. (as that term is defined at 48 C.F.R. ? 252.227-7014(a)(1)) and .commercial computer software documentation. as such terms are used in 48 C.F.R. 12.212 (Sept. 1995). Consistent with 48 C.F.R. 12.212 and 48 C.F.R. 227.7202-1 through 227.7202-4 (June 1995), all U.S. Government End Users acquire Covered Software with only those rights set forth herein. This U.S. Government Rights clause is in lieu of, and supersedes, any other FAR, DFAR, or other clause or provision that addresses Government rights in computer software under this License.\n+\n+9. MISCELLANEOUS.\n+\n+   This License represents the complete agreement concerning subject matter hereof. If any provision of this License is held to be unenforceable, such provision shall be reformed only to the extent necessary to make it enforceable. This License shall be governed by the law of the jurisdiction specified in a notice contained within the Original Software (except to the extent applicable law, if any, provides otherwise), excluding such jurisdiction.s conflict-of-law provisions. Any litigation relating to this License shall be subject to the jurisdiction of the courts located in the jurisdiction and venue specified in a notice contained within the Original Software, with the losing party responsible for costs, including, without limitation, court costs and reasonable attorneys. fees and expenses. The application of the United Nations Convention on Contracts for the International Sale of Goods is expressly excluded. Any law or regulation which provides that the language of a contract shall be construed against the drafter shall not apply to this License. You agree that You alone are responsible for compliance with the United States export administration regulations (and the export control laws and regulation of any other countries) when You use, distribute or otherwise make available any Covered Software.\n+\n+10. RESPONSIBILITY FOR CLAIMS.\n+\n+   As between Initial Developer and the Contributors, each party is responsible for claims and damages arising, directly or indirectly, out of its utilization of rights under this License and You agree to work with Initial Developer and Contributors to distribute such responsibility on an equitable basis. Nothing herein is intended or shall be deemed to constitute any admission of liability.\n+\n+   NOTICE PURSUANT TO SECTION 9 OF THE COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL)\n+\n+   The code released under the CDDL shall be governed by the laws of the State of California (excluding conflict-of-law provisions). Any litigation relating to this License shall be subject to the jurisdiction of the Federal Courts of the Northern District of California and the state courts of the State of California, with venue lying in Santa Clara County, California.\n+\n+\n+The GNU General Public License (GPL) Version 2, June 1991\n+\n+\n+Copyright (C) 1989, 1991 Free Software Foundation, Inc. 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n+\n+Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.\n+\n+Preamble\n+\n+The licenses for most software are designed to take away your freedom to share and change it. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users. This General Public License applies to most of the Free Software Foundation's software and to any other program whose authors commit to using it. (Some other Free Software Foundation software is covered by the GNU Library General Public License instead.) You can apply it to your programs, too.\n+\n+When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs; and that you know you can do these things.\n+\n+To protect your rights, we need to make restrictions that forbid anyone to deny you these rights or to ask you to surrender the rights. These restrictions translate to certain responsibilities for you if you distribute copies of the software, or if you modify it.\n+\n+For example, if you distribute copies of such a program, whether gratis or for a fee, you must give the recipients all the rights that you have. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights.\n+\n+We protect your rights with two steps: (1) copyright the software, and (2) offer you this license which gives you legal permission to copy, distribute and/or modify the software.\n+\n+Also, for each author's protection and ours, we want to make certain that everyone understands that there is no warranty for this free software. If the software is modified by someone else and passed on, we want its recipients to know that what they have is not the original, so that any problems introduced by others will not reflect on the original authors' reputations.\n+\n+Finally, any free program is threatened constantly by software patents. We wish to avoid the danger that redistributors of a free program will individually obtain patent licenses, in effect making the program proprietary. To prevent this, we have made it clear that any patent must be licensed for everyone's free use or not licensed at all.\n+\n+The precise terms and conditions for copying, distribution and modification follow.\n+\n+\n+TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n+\n+0. This License applies to any program or other work which contains a notice placed by the copyright holder saying it may be distributed under the terms of this General Public License. The \"Program\", below, refers to any such program or work, and a \"work based on the Program\" means either the Program or any derivative work under copyright law: that is to say, a work containing the Program or a portion of it, either verbatim or with modifications and/or translated into another language. (Hereinafter, translation is included without limitation in the term \"modification\".) Each licensee is addressed as \"you\".\n+\n+Activities other than copying, distribution and modification are not covered by this License; they are outside its scope. The act of running the Program is not restricted, and the output from the Program is covered only if its contents constitute a work based on the Program (independent of having been made by running the Program). Whether that is true depends on what the Program does.\n+\n+1. You may copy and distribute verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and give any other recipients of the Program a copy of this License along with the Program.\n+\n+You may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee.\n+\n+2. You may modify your copy or copies of the Program or any portion of it, thus forming a work based on the Program, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions:\n+\n+   a) You must cause the modified files to carry prominent notices stating that you changed the files and the date of any change.\n+\n+   b) You must cause any work that you distribute or publish, that in whole or in part contains or is derived from the Program or any part thereof, to be licensed as a whole at no charge to all third parties under the terms of this License.\n+\n+   c) If the modified program normally reads commands interactively when run, you must cause it, when started running for such interactive use in the most ordinary way, to print or display an announcement including an appropriate copyright notice and a notice that there is no warranty (or else, saying that you provide a warranty) and that users may redistribute the program under these conditions, and telling the user how to view a copy of this License. (Exception: if the Program itself is interactive but does not normally print such an announcement, your work based on the Program is not required to print an announcement.)\n+\n+These requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Program, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Program, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it.\n+\n+Thus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Program.\n+\n+In addition, mere aggregation of another work not based on the Program with the Program (or with a work based on the Program) on a volume of a storage or distribution medium does not bring the other work under the scope of this License.\n+\n+3. You may copy and distribute the Program (or a work based on it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you also do one of the following:\n+\n+   a) Accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or,\n+\n+   b) Accompany it with a written offer, valid for at least three years, to give any third party, for a charge no more than your cost of physically performing source distribution, a complete machine-readable copy of the corresponding source code, to be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or,\n+\n+   c) Accompany it with the information you received as to the offer to distribute corresponding source code. (This alternative is allowed only for noncommercial distribution and only if you received the program in object code or executable form with such an offer, in accord with Subsection b above.)\n+\n+The source code for a work means the preferred form of the work for making modifications to it. For an executable work, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the executable. However, as a special exception, the source code distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable.\n+\n+If distribution of executable or object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place counts as distribution of the source code, even though third parties are not compelled to copy the source along with the object code.\n+\n+4. You may not copy, modify, sublicense, or distribute the Program except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense or distribute the Program is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance.\n+\n+5. You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Program or its derivative works. These actions are prohibited by law if you do not accept this License. Therefore, by modifying or distributing the Program (or any work based on the Program), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Program or works based on it.\n+\n+6. Each time you redistribute the Program (or any work based on the Program), the recipient automatically receives a license from the original licensor to copy, distribute or modify the Program subject to these terms and conditions. You may not impose any further restrictions on the recipients' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties to this License.\n+\n+7. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Program at all. For example, if a patent license would not permit royalty-free redistribution of the Program by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Program.\n+\n+If any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply and the section as a whole is intended to apply in other circumstances.\n+\n+It is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system, which is implemented by public license practices. Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice.\n+\n+This section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License.\n+\n+8. If the distribution and/or use of the Program is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Program under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded. In such case, this License incorporates the limitation as if written in the body of this License.\n+\n+9. The Free Software Foundation may publish revised and/or new versions of the General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.\n+\n+Each version is given a distinguishing version number. If the Program specifies a version number of this License which applies to it and \"any later version\", you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of this License, you may choose any version ever published by the Free Software Foundation.\n+\n+10. If you wish to incorporate parts of the Program into other free programs whose distribution conditions are different, write to the author to ask for permission. For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this. Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally.\n+\n+NO WARRANTY\n+\n+11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n+\n+12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n+\n+END OF TERMS AND CONDITIONS\n+\n+\n+How to Apply These Terms to Your New Programs\n+\n+If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.\n+\n+To do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively convey the exclusion of warranty; and each file should have at least the \"copyright\" line and a pointer to where the full notice is found.\n+\n+   One line to give the program's name and a brief idea of what it does.\n+\n+   Copyright (C)\n+\n+   This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n+\n+Also add information on how to contact you by electronic and paper mail.\n+\n+If the program is interactive, make it output a short notice like this when it starts in an interactive mode:\n+\n+   Gnomovision version 69, Copyright (C) year name of author\n+   Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details.\n+\n+The hypothetical commands `show w' and `show c' should show the appropriate parts of the General Public License. Of course, the commands you use may be called something other than `show w' and `show c'; they could even be mouse-clicks or menu items--whatever suits your program.\n+\n+You should also get your employer (if you work as a programmer) or your school, if any, to sign a \"copyright disclaimer\" for the program, if necessary. Here is a sample; alter the names:\n+\n+   Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.\n+\n+   signature of Ty Coon, 1 April 1989\n+   Ty Coon, President of Vice\n+\n+This General Public License does not permit incorporating your program into proprietary programs. If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library. If this is what you want to do, use the GNU Library General Public License instead of this License.\n+\n+\n+\"CLASSPATH\" EXCEPTION TO THE GPL VERSION 2\n+\n+Certain source files distributed by Sun Microsystems, Inc. are subject to the following clarification and special exception to the GPL Version 2, but only where Sun has expressly included in the particular source file's header the words\n+\n+\"Sun designates this particular file as subject to the \"Classpath\" exception as provided by Sun in the License file that accompanied this code.\"\n+\n+Linking this library statically or dynamically with other modules is making a combined work based on this library. Thus, the terms and conditions of the GNU General Public License Version 2 cover the whole combination.\n+\n+As a special exception, the copyright holders of this library give you permission to link this library with independent modules to produce an executable, regardless of the license terms of these independent modules, and to copy and distribute the resulting executable under terms of your choice, provided that you also meet, for each linked independent module, the terms and conditions of the license of that module.? An independent module is a module which is not derived from or based on this library.? If you modify this library, you may extend this exception to your version of the library, but you are not obligated to do so.? If you do not wish to do so, delete this exception statement from your version."},{"sha":"ad6ecd4809febc822486d1f58e9dcbee087823e4","filename":"NOTICE.txt","status":"modified","additions":27,"deletions":29,"changes":56,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/NOTICE.txt","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/NOTICE.txt","contents_url":"https://api.github.com/repos/apache/openjpa/contents/NOTICE.txt?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -1,29 +1,27 @@\n-\r\n-Apache OpenJPA\r\n-Copyright 2006-2010 The Apache Software Foundation\r\n-\r\n-This product includes software developed by\r\n-The Apache Software Foundation (http://www.apache.org/).\r\n-\r\n-Apache, the Apache feather logo and OpenJPA are trademarks of The Apache Software Foundation.\r\n-\r\n-\r\n-The following copyright notice(s) were affixed to portions of this code\r\n-with which this file is now or was at one time distributed.\r\n-\r\n-\r\n-OpenJPA includes software developed by the SERP project\r\n-Copyright (c) 2002-2006, A. Abram White. All rights reserved.\r\n-\r\n-OpenJPA includes the persistence and orm schemas from the JPA specifications.\r\n-Copyright 2005-2009 Sun Microsystems, Inc. All rights reserved.\r\n-OpenJPA elects to include this software in this distribution under the\r\n-CDDL license.  You can obtain a copy of the License at:\r\n-    https://glassfish.dev.java.net/public/CDDL+GPL.html\r\n-The source code is available at:\r\n-    https://glassfish.dev.java.net/source/browse/glassfish/\r\n-\r\n-OpenJPA includes software written by Miroslav Nachev\r\n-\r\n-OpenJPA uses test code written by Charles Tillman.\r\n-\r\n+\n+Apache OpenJPA\n+Copyright 2006-2010 The Apache Software Foundation\n+\n+This product includes software developed by\n+The Apache Software Foundation (http://www.apache.org/).\n+\n+\n+The following copyright notice(s) were affixed to portions of this code\n+with which this file is now or was at one time distributed.\n+\n+\n+OpenJPA includes software developed by the SERP project\n+Copyright (c) 2002-2006, A. Abram White. All rights reserved.\n+\n+OpenJPA includes the persistence and orm schemas from the JPA specifications.\n+Copyright 2005-2009 Sun Microsystems, Inc. All rights reserved.\n+OpenJPA elects to include this software in this distribution under the\n+CDDL license.  You can obtain a copy of the License at:\n+    https://glassfish.dev.java.net/public/CDDL+GPL.html\n+The source code is available at:\n+    https://glassfish.dev.java.net/source/browse/glassfish/\n+\n+OpenJPA includes software written by Miroslav Nachev\n+\n+OpenJPA uses test code written by Charles Tillman.\n+"},{"sha":"361e0284d3918f9bcdabd153278bc0145b6747a4","filename":"README.txt","status":"modified","additions":3,"deletions":2,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/README.txt","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/README.txt","contents_url":"https://api.github.com/repos/apache/openjpa/contents/README.txt?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -1,5 +1,6 @@\n-Apache OpenJPA README\n-=====================\n+Apache OpenJPA - README.txt\n+Licensed under Apache License 2.0 - http://www.apache.org/licenses/LICENSE-2.0\n+--------------------------------------------------------------------------------\n \n Thank you for downloading this release of Apache OpenJPA.\n "},{"sha":"03f36f2e35c3e3c0c40948ffd13ff26a15aad099","filename":"openjpa-all/pom.xml","status":"modified","additions":36,"deletions":10,"changes":46,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-all/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-all/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-all/pom.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -22,32 +22,53 @@\n     the release plugin.\n -->\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n     <modelVersion>4.0.0</modelVersion>\n-    <artifactId>openjpa-all</artifactId>\n-    <packaging>jar</packaging>\n-    <name>OpenJPA Aggregate Jar with Dependencies</name>\n+\n     <parent>\n         <groupId>org.apache.openjpa</groupId>\n         <artifactId>openjpa-parent</artifactId>\n-        <version>2.0.0</version>\n+        <version>2.0.1</version>\n     </parent>\n \n+    <groupId>org.apache.openjpa</groupId>\n+    <artifactId>openjpa-all</artifactId>\n+    <packaging>jar</packaging>\n+    <name>OpenJPA Aggregate Jar with Dependencies</name>\n+\n     <build>\n         <plugins>\n+            <!-- disable creating javadoc for this module -->\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-javadoc-plugin</artifactId>\n+                <configuration>\n+                    <skip>true</skip>\n+                </configuration>\n+            </plugin>   \n+            <!-- disable creating source jars for this module -->\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-source-plugin</artifactId>\n+                <configuration>\n+                    <attach>false</attach>\n+                </configuration>\n+            </plugin>\n             <!--\n-                 Need to disable source plugin here, as it overwrites the shade\n-                 plugin created sources jar.\n+                 Need to disable jar plugin here, as it overwrites the shade\n+                 plugin created binary jar.\n             -->\n             <plugin>\n                 <groupId>org.apache.maven.plugins</groupId>\n-                <artifactId>maven-source-plugin</artifactId>\n+                <artifactId>maven-jar-plugin</artifactId>\n                 <executions>\n                     <execution>\n-                        <id>attach-sources</id>\n+                        <id>default-jar</id>\n                         <phase>none</phase>\n                     </execution>\n                 </executions>\n             </plugin>\n+\n             <!-- Create our aggregate all JAR -->\n             <plugin>\n                 <groupId>org.apache.maven.plugins</groupId>\n@@ -98,13 +119,18 @@\n \n     <dependencies>\n         <!--\n-            Only include openjpa.jar here, as the maven-shade-plugin will\n+            Start with openjpa.jar and let the maven-shade-plugin\n             determine the transitive dependencies to include from it.\n         -->\n         <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa</artifactId>\n-            <version>${pom.version}</version>\n+            <version>${project.version}</version>\n+        </dependency>\n+        <!-- include commons-logging -->\n+        <dependency>\n+            <groupId>commons-logging</groupId>\n+            <artifactId>commons-logging</artifactId>\n         </dependency>\n     </dependencies>\n </project>"},{"sha":"c7aecd18fc4408cda5f4d38644c3c1e6016ddde0","filename":"openjpa-all/src/main/appended-resources/META-INF/LICENSE.vm","status":"modified","additions":252,"deletions":91,"changes":343,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-all/src/main/appended-resources/META-INF/LICENSE.vm","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-all/src/main/appended-resources/META-INF/LICENSE.vm","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-all/src/main/appended-resources/META-INF/LICENSE.vm?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -1,3 +1,21 @@\n+##\n+## Licensed to the Apache Software Foundation (ASF) under one\n+## or more contributor license agreements.  See the NOTICE file\n+## distributed with this work for additional information\n+## regarding copyright ownership.  The ASF licenses this file\n+## to you under the Apache License, Version 2.0 (the\n+## \"License\"); you may not use this file except in compliance\n+## with the License.  You may obtain a copy of the License at\n+##\n+##  http://www.apache.org/licenses/LICENSE-2.0\n+##\n+## Unless required by applicable law or agreed to in writing,\n+## software distributed under the License is distributed on an\n+## \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+## KIND, either express or implied.  See the License for the\n+## specific language governing permissions and limitations\n+## under the License.\n+##\n \n                                  Apache License\n                            Version 2.0, January 2004\n@@ -214,165 +232,308 @@ and resource files are also released under the ASF license above.\n \n The exceptions are as follows:\n \n+=============================\n+serp-1.13.1.jar - BSD License\n+=============================\n+\n+Copyright (c) 2002, A. Abram White\n+All rights reserved.\n+\n+Redistribution and use in source and binary forms, with or without \n+modification, are permitted provided that the following conditions are met:\n+\n+* Redistributions of source code must retain the above copyright notice, this \n+  list of conditions and the following disclaimer.\n+* Redistributions in binary form must reproduce the above copyright notice, \n+  this list of conditions and the following disclaimer in the documentation \n+  and/or other materials provided with the distribution.\n+* Neither the name of 'serp' nor the names of its contributors may\n+  be used to endorse or promote products derived from this software without \n+  specific prior written permission.\n+\n+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED \n+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE \n+DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n+(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; \n+LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON \n+ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT \n+(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS \n+SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+\n ===========================\n-  orm-xsd.rsrc - included in the openjpa jar, taken from:\n+openjpa-persistence -\n+  orm-xsd.rsrc - CDDL 1.0 - included in the openjpa jar, taken from:\n     http://java.sun.com/xml/ns/persistence/orm_1_0.xsd)\n-  orm_2_0-xsd.rsrc - included in the openjpa jar, taken from:\n+  orm_2_0-xsd.rsrc - CDDL 1.0 - included in the openjpa jar, taken from:\n     http://java.sun.com/xml/ns/persistence/orm_2_0.xsd)\n-  persistence-xsd.rsrc - included in the openjpa jar, taken from:\n+  persistence-xsd.rsrc - CDDL 1.0 - included in the openjpa jar, taken from:\n     http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd)\n-  persistence_2_0-xsd.rsrc - included in the openjpa jar, taken from:\n-    http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd)\n-  websphere-uow-api.jar - this jar file contains WebSphere proprietary\n-    API code which is licensed for use when compiling OpenJPA. The\n-    jar is not distributed with OpenJPA and is only included with the\n-    source archive in order to resolve compilation dependencies. \n+  persistence_2_0-xsd.rsrc - CDDL 1.0 - included in the openjpa jar, taken from:\n+    http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd). \n ===========================\n \n COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL) Version 1.0\n \n 1. Definitions.\n \n-1.1. Contributor means each individual or entity that creates or contributes to the creation of Modifications.\n+   1.1. Contributor. means each individual or entity that creates or contributes to the creation of Modifications.\n \n-1.2. Contributor Version means the combination of the Original Software, prior Modifications used by a Contributor (if any), and the Modifications made by that particular Contributor.\n+   1.2. Contributor Version. means the combination of the Original Software, prior Modifications used by a Contributor (if any), and the Modifications made by that particular Contributor.\n \n-1.3. Covered Software means (a) the Original Software, or (b) Modifications, or (c) the combination of files containing Original Software with files containing Modifications, in each case including portions thereof.\n+   1.3. Covered Software. means (a) the Original Software, or (b) Modifications, or (c) the combination of files containing Original Software with files containing Modifications, in each case including portions thereof.\n \n-1.4. Executable means the Covered Software in any form other than Source Code.\n+   1.4. Executable. means the Covered Software in any form other than Source Code.\n \n-1.5. Initial Developer means the individual or entity that first makes Original Software available under this License.\n+   1.5. Initial Developer. means the individual or entity that first makes Original Software available under this License.\n \n-1.6. Larger Work means a work which combines Covered Software or portions thereof with code not governed by the terms of this License.\n+   1.6. Larger Work. means a work which combines Covered Software or portions thereof with code not governed by the terms of this License.\n \n-1.7. License means this document.\n+   1.7. License. means this document.\n \n-1.8. Licensable means having the right to grant, to the maximum extent possible, whether at the time of the initial grant or subsequently acquired, any and all of the rights conveyed herein.\n+   1.8. Licensable. means having the right to grant, to the maximum extent possible, whether at the time of the initial grant or subsequently acquired, any and all of the rights conveyed herein.\n \n-1.9. Modifications means the Source Code and Executable form of any of the following:\n+   1.9. Modifications. means the Source Code and Executable form of any of the following:\n \n-A. Any file that results from an addition to, deletion from or modification of the contents of a file containing Original Software or previous Modifications;\n+        A. Any file that results from an addition to, deletion from or modification of the contents of a file containing Original Software or previous Modifications;\n \n-B. Any new file that contains any part of the Original Software or previous Modification; or\n+        B. Any new file that contains any part of the Original Software or previous Modification; or\n \n-C. Any new file that is contributed or otherwise made available under the terms of this License.\n+        C. Any new file that is contributed or otherwise made available under the terms of this License.\n \n-1.10. Original Software means the Source Code and Executable form of computer software code that is originally released under this License.\n+   1.10. Original Software. means the Source Code and Executable form of computer software code that is originally released under this License.\n \n-1.11. Patent Claims means any patent claim(s), now owned or hereafter acquired, including without limitation, method, process, and apparatus claims, in any patent Licensable by grantor.\n+   1.11. Patent Claims. means any patent claim(s), now owned or hereafter acquired, including without limitation, method, process, and apparatus claims, in any patent Licensable by grantor.\n \n-1.12. Source Code means (a) the common form of computer software code in which modifications are made and (b) associated documentation included in or with such code.\n+   1.12. Source Code. means (a) the common form of computer software code in which modifications are made and (b) associated documentation included in or with such code.\n \n-1.13. You (or Your) means an individual or a legal entity exercising rights under, and complying with all of the terms of, this License. For legal entities, You includes any entity which controls, is controlled by, or is under common control with You. For purposes of this definition, control means (a)�the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (b)�ownership of more than fifty percent (50%) of the outstanding shares or beneficial ownership of such entity.\n+   1.13. You. (or .Your.) means an individual or a legal entity exercising rights under, and complying with all of the terms of, this License. For legal entities, .You. includes any entity which controls, is controlled by, or is under common control with You. For purposes of this definition, .control. means (a) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (b) ownership of more than fifty percent (50%) of the outstanding shares or beneficial ownership of such entity.\n \n 2. License Grants.\n \n-2.1. The Initial Developer Grant.\n-Conditioned upon Your compliance with Section 3.1 below and subject to third party intellectual property claims, the Initial Developer hereby grants You a world-wide, royalty-free, non-exclusive license:\n-(a) under intellectual property rights (other than patent or trademark) Licensable by Initial Developer, to use, reproduce, modify, display, perform, sublicense and distribute the Original Software (or portions thereof), with or without Modifications, and/or as part of a Larger Work; and\n-(b) under Patent Claims infringed by the making, using or selling of Original Software, to make, have made, use, practice, sell, and offer for sale, and/or otherwise dispose of the Original Software (or portions thereof).\n-(c) The licenses granted in Sections�2.1(a) and (b) are effective on the date Initial Developer first distributes or otherwise makes the Original Software available to a third party under the terms of this License.\n-(d) Notwithstanding Section�2.1(b) above, no patent license is granted: (1)�for code that You delete from the Original Software, or (2)�for infringements caused by: (i)�the modification of the Original Software, or (ii)�the combination of the Original Software with other software or devices.\n+      2.1. The Initial Developer Grant.\n \n-2.2. Contributor Grant.\n-Conditioned upon Your compliance with Section 3.1 below and subject to third party intellectual property claims, each Contributor hereby grants You a world-wide, royalty-free, non-exclusive license:\n-(a) under intellectual property rights (other than patent or trademark) Licensable by Contributor to use, reproduce, modify, display, perform, sublicense and distribute the Modifications created by such Contributor (or portions thereof), either on an unmodified basis, with other Modifications, as Covered Software and/or as part of a Larger Work; and\n-(b) under Patent Claims infringed by the making, using, or selling of Modifications made by that Contributor either alone and/or in combination with its Contributor Version (or portions of such combination), to make, use, sell, offer for sale, have made, and/or otherwise dispose of: (1)�Modifications made by that Contributor (or portions thereof); and (2)�the combination of Modifications made by that Contributor with its Contributor Version (or portions of such combination).\n-(c) The licenses granted in Sections�2.2(a) and 2.2(b) are effective on the date Contributor first distributes or otherwise makes the Modifications available to a third party.\n-(d) Notwithstanding Section�2.2(b) above, no patent license is granted: (1)�for any code that Contributor has deleted from the Contributor Version; (2)�for infringements caused by: (i)�third party modifications of Contributor Version, or (ii)�the combination of Modifications made by that Contributor with other software (except as part of the Contributor Version) or other devices; or (3)�under Patent Claims infringed by Covered Software in the absence of Modifications made by that Contributor.\n+      Conditioned upon Your compliance with Section 3.1 below and subject to third party intellectual property claims, the Initial Developer hereby grants You a world-wide, royalty-free, non-exclusive license:\n \n-3. Distribution Obligations.\n+         (a) under intellectual property rights (other than patent or trademark) Licensable by Initial Developer, to use, reproduce, modify, display, perform, sublicense and distribute the Original Software (or portions thereof), with or without Modifications, and/or as part of a Larger Work; and\n \n-3.1. Availability of Source Code.\n+         (b) under Patent Claims infringed by the making, using or selling of Original Software, to make, have made, use, practice, sell, and offer for sale, and/or otherwise dispose of the Original Software (or portions thereof).\n \n-Any Covered Software that You distribute or otherwise make available in Executable form must also be made available in Source Code form and that Source Code form must be distributed only under the terms of this License. You must include a copy of this License with every copy of the Source Code form of the Covered Software You distribute or otherwise make available. You must inform recipients of any such Covered Software in Executable form as to how they can obtain such Covered Software in Source Code form in a reasonable manner on or through a medium customarily used for software exchange.\n+        (c) The licenses granted in Sections 2.1(a) and (b) are effective on the date Initial Developer first distributes or otherwise makes the Original Software available to a third party under the terms of this License.\n \n-3.2. Modifications.\n+        (d) Notwithstanding Section 2.1(b) above, no patent license is granted: (1) for code that You delete from the Original Software, or (2) for infringements caused by: (i) the modification of the Original Software, or (ii) the combination of the Original Software with other software or devices.\n \n-The Modifications that You create or to which You contribute are governed by the terms of this License. You represent that You believe Your Modifications are Your original creation(s) and/or You have sufficient rights to grant the rights conveyed by this License.\n+    2.2. Contributor Grant.\n \n-3.3. Required Notices.\n-You must include a notice in each of Your Modifications that identifies You as the Contributor of the Modification. You may not remove or alter any copyright, patent or trademark notices contained within the Covered Software, or any notices of licensing or any descriptive text giving attribution to any Contributor or the Initial Developer.\n+    Conditioned upon Your compliance with Section 3.1 below and subject to third party intellectual property claims, each Contributor hereby grants You a world-wide, royalty-free, non-exclusive license:\n \n-3.4. Application of Additional Terms.\n-You may not offer or impose any terms on any Covered Software in Source Code form that alters or restricts the applicable version of this License or the recipients rights hereunder. You may choose to offer, and to charge a fee for, warranty, support, indemnity or liability obligations to one or more recipients of Covered Software. However, you may do so only on Your own behalf, and not on behalf of the Initial Developer or any Contributor. You must make it absolutely clear that any such warranty, support, indemnity or liability obligation is offered by You alone, and You hereby agree to indemnify the Initial Developer and every Contributor for any liability incurred by the Initial Developer or such Contributor as a result of warranty, support, indemnity or liability terms You offer.\n+        (a) under intellectual property rights (other than patent or trademark) Licensable by Contributor to use, reproduce, modify, display, perform, sublicense and distribute the Modifications created by such Contributor (or portions thereof), either on an unmodified basis, with other Modifications, as Covered Software and/or as part of a Larger Work; and\n \n-3.5. Distribution of Executable Versions.\n-You may distribute the Executable form of the Covered Software under the terms of this License or under the terms of a license of Your choice, which may contain terms different from this License, provided that You are in compliance with the terms of this License and that the license for the Executable form does not attempt to limit or alter the recipients rights in the Source Code form from the rights set forth in this License. If You distribute the Covered Software in Executable form under a different license, You must make it absolutely clear that any terms which differ from this License are offered by You alone, not by the Initial Developer or Contributor. You hereby agree to indemnify the Initial Developer and every Contributor for any liability incurred by the Initial Developer or such Contributor as a result of any such terms You offer.\n+        (b) under Patent Claims infringed by the making, using, or selling of Modifications made by that Contributor either alone and/or in combination with its Contributor Version (or portions of such combination), to make, use, sell, offer for sale, have made, and/or otherwise dispose of: (1) Modifications made by that Contributor (or portions thereof); and (2) the combination of Modifications made by that Contributor with its Contributor Version (or portions of such combination).\n \n-3.6. Larger Works.\n-You may create a Larger Work by combining Covered Software with other code not governed by the terms of this License and distribute the Larger Work as a single product. In such a case, You must make sure the requirements of this License are fulfilled for the Covered Software.\n+        (c) The licenses granted in Sections 2.2(a) and 2.2(b) are effective on the date Contributor first distributes or otherwise makes the Modifications available to a third party.\n \n-4. Versions of the License.\n+        (d) Notwithstanding Section 2.2(b) above, no patent license is granted: (1) for any code that Contributor has deleted from the Contributor Version; (2) for infringements caused by: (i) third party modifications of Contributor Version, or (ii) the combination of Modifications made by that Contributor with other software (except as part of the Contributor Version) or other devices; or (3) under Patent Claims infringed by Covered Software in the absence of Modifications made by that Contributor.\n \n-4.1. New Versions.\n-Sun Microsystems, Inc. is the initial license steward and may publish revised and/or new versions of this License from time to time. Each version will be given a distinguishing version number. Except as provided in Section 4.3, no one other than the license steward has the right to modify this License.\n+3. Distribution Obligations.\n \n-4.2. Effect of New Versions.\n+      3.1. Availability of Source Code.\n+      Any Covered Software that You distribute or otherwise make available in Executable form must also be made available in Source Code form and that Source Code form must be distributed only under the terms of this License. You must include a copy of this License with every copy of the Source Code form of the Covered Software You distribute or otherwise make available. You must inform recipients of any such Covered Software in Executable form as to how they can obtain such Covered Software in Source Code form in a reasonable manner on or through a medium customarily used for software exchange.\n \n-You may always continue to use, distribute or otherwise make the Covered Software available under the terms of the version of the License under which You originally received the Covered Software. If the Initial Developer includes a notice in the Original Software prohibiting it from being distributed or otherwise made available under any subsequent version of the License, You must distribute and make the Covered Software available under the terms of the version of the License under which You originally received the Covered Software. Otherwise, You may also choose to use, distribute or otherwise make the Covered Software available under the terms of any subsequent version of the License published by the license steward.\n-4.3. Modified Versions.\n+      3.2. Modifications.\n+      The Modifications that You create or to which You contribute are governed by the terms of this License. You represent that You believe Your Modifications are Your original creation(s) and/or You have sufficient rights to grant the rights conveyed by this License.\n \n-When You are an Initial Developer and You want to create a new license for Your Original Software, You may create and use a modified version of this License if You: (a)�rename the license and remove any references to the name of the license steward (except to note that the license differs from this License); and (b)�otherwise make it clear that the license contains terms which differ from this License.\n+      3.3. Required Notices.\n+      You must include a notice in each of Your Modifications that identifies You as the Contributor of the Modification. You may not remove or alter any copyright, patent or trademark notices contained within the Covered Software, or any notices of licensing or any descriptive text giving attribution to any Contributor or the Initial Developer.\n+\n+      3.4. Application of Additional Terms.\n+      You may not offer or impose any terms on any Covered Software in Source Code form that alters or restricts the applicable version of this License or the recipients. rights hereunder. You may choose to offer, and to charge a fee for, warranty, support, indemnity or liability obligations to one or more recipients of Covered Software. However, you may do so only on Your own behalf, and not on behalf of the Initial Developer or any Contributor. You must make it absolutely clear that any such warranty, support, indemnity or liability obligation is offered by You alone, and You hereby agree to indemnify the Initial Developer and every Contributor for any liability incurred by the Initial Developer or such Contributor as a result of warranty, support, indemnity or liability terms You offer.\n+\n+      3.5. Distribution of Executable Versions.\n+      You may distribute the Executable form of the Covered Software under the terms of this License or under the terms of a license of Your choice, which may contain terms different from this License, provided that You are in compliance with the terms of this License and that the license for the Executable form does not attempt to limit or alter the recipient.s rights in the Source Code form from the rights set forth in this License. If You distribute the Covered Software in Executable form under a different license, You must make it absolutely clear that any terms which differ from this License are offered by You alone, not by the Initial Developer or Contributor. You hereby agree to indemnify the Initial Developer and every Contributor for any liability incurred by the Initial Developer or such Contributor as a result of any such terms You offer.\n+\n+      3.6. Larger Works.\n+      You may create a Larger Work by combining Covered Software with other code not governed by the terms of this License and distribute the Larger Work as a single product. In such a case, You must make sure the requirements of this License are fulfilled for the Covered Software.\n+\n+4. Versions of the License.\n+\n+      4.1. New Versions.\n+      Sun Microsystems, Inc. is the initial license steward and may publish revised and/or new versions of this License from time to time. Each version will be given a distinguishing version number. Except as provided in Section 4.3, no one other than the license steward has the right to modify this License.\n+\n+      4.2. Effect of New Versions.\n+      You may always continue to use, distribute or otherwise make the Covered Software available under the terms of the version of the License under which You originally received the Covered Software. If the Initial Developer includes a notice in the Original Software prohibiting it from being distributed or otherwise made available under any subsequent version of the License, You must distribute and make the Covered Software available under the terms of the version of the License under which You originally received the Covered Software. Otherwise, You may also choose to use, distribute or otherwise make the Covered Software available under the terms of any subsequent version of the License published by the license steward.\n+\n+      4.3. Modified Versions.\n+      When You are an Initial Developer and You want to create a new license for Your Original Software, You may create and use a modified version of this License if You: (a) rename the license and remove any references to the name of the license steward (except to note that the license differs from this License); and (b) otherwise make it clear that the license contains terms which differ from this License.\n \n 5. DISCLAIMER OF WARRANTY.\n \n-COVERED SOFTWARE IS PROVIDED UNDER THIS LICENSE ON AN AS IS BASIS, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, WITHOUT LIMITATION, WARRANTIES THAT THE COVERED SOFTWARE IS FREE OF DEFECTS, MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE OR NON-INFRINGING. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE COVERED SOFTWARE IS WITH YOU. SHOULD ANY COVERED SOFTWARE PROVE DEFECTIVE IN ANY RESPECT, YOU (NOT THE INITIAL DEVELOPER OR ANY OTHER CONTRIBUTOR) ASSUME THE COST OF ANY NECESSARY SERVICING, REPAIR OR CORRECTION. THIS DISCLAIMER OF WARRANTY CONSTITUTES AN ESSENTIAL PART OF THIS LICENSE. NO USE OF ANY COVERED SOFTWARE IS AUTHORIZED HEREUNDER EXCEPT UNDER THIS DISCLAIMER.\n+   COVERED SOFTWARE IS PROVIDED UNDER THIS LICENSE ON AN .AS IS. BASIS, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, WITHOUT LIMITATION, WARRANTIES THAT THE COVERED SOFTWARE IS FREE OF DEFECTS, MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE OR NON-INFRINGING. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE COVERED SOFTWARE IS WITH YOU. SHOULD ANY COVERED SOFTWARE PROVE DEFECTIVE IN ANY RESPECT, YOU (NOT THE INITIAL DEVELOPER OR ANY OTHER CONTRIBUTOR) ASSUME THE COST OF ANY NECESSARY SERVICING, REPAIR OR CORRECTION. THIS DISCLAIMER OF WARRANTY CONSTITUTES AN ESSENTIAL PART OF THIS LICENSE. NO USE OF ANY COVERED SOFTWARE IS AUTHORIZED HEREUNDER EXCEPT UNDER THIS DISCLAIMER.\n \n 6. TERMINATION.\n \n-6.1. This License and the rights granted hereunder will terminate automatically if You fail to comply with terms herein and fail to cure such breach within 30 days of becoming aware of the breach. Provisions which, by their nature, must remain in effect beyond the termination of this License shall survive.\n+      6.1. This License and the rights granted hereunder will terminate automatically if You fail to comply with terms herein and fail to cure such breach within 30 days of becoming aware of the breach. Provisions which, by their nature, must remain in effect beyond the termination of this License shall survive.\n \n-6.2. If You assert a patent infringement claim (excluding declaratory judgment actions) against Initial Developer or a Contributor (the Initial Developer or Contributor against whom You assert such claim is referred to as Participant) alleging that the Participant Software (meaning the Contributor Version where the Participant is a Contributor or the Original Software where the Participant is the Initial Developer) directly or indirectly infringes any patent, then any and all rights granted directly or indirectly to You by such Participant, the Initial Developer (if the Initial Developer is not the Participant) and all Contributors under Sections�2.1 and/or 2.2 of this License shall, upon 60 days notice from Participant terminate prospectively and automatically at the expiration of such 60 day notice period, unless if within such 60 day period You withdraw Your claim with respect to the Participant Software against such Participant either unilaterally or pursuant to a written agreement with Participant.\n+      6.2. If You assert a patent infringement claim (excluding declaratory judgment actions) against Initial Developer or a Contributor (the Initial Developer or Contributor against whom You assert such claim is referred to as .Participant.) alleging that the Participant Software (meaning the Contributor Version where the Participant is a Contributor or the Original Software where the Participant is the Initial Developer) directly or indirectly infringes any patent, then any and all rights granted directly or indirectly to You by such Participant, the Initial Developer (if the Initial Developer is not the Participant) and all Contributors under Sections 2.1 and/or 2.2 of this License shall, upon 60 days notice from Participant terminate prospectively and automatically at the expiration of such 60 day notice period, unless if within such 60 day period You withdraw Your claim with respect to the Participant Software against such Participant either unilaterally or pursuant to a written agreement with Participant.\n \n-6.3. In the event of termination under Sections�6.1 or 6.2 above, all end user licenses that have been validly granted by You or any distributor hereunder prior to termination (excluding licenses granted to You by any distributor) shall survive termination.\n+      6.3. In the event of termination under Sections 6.1 or 6.2 above, all end user licenses that have been validly granted by You or any distributor hereunder prior to termination (excluding licenses granted to You by any distributor) shall survive termination.\n \n 7. LIMITATION OF LIABILITY.\n \n-UNDER NO CIRCUMSTANCES AND UNDER NO LEGAL THEORY, WHETHER TORT (INCLUDING NEGLIGENCE), CONTRACT, OR OTHERWISE, SHALL YOU, THE INITIAL DEVELOPER, ANY OTHER CONTRIBUTOR, OR ANY DISTRIBUTOR OF COVERED SOFTWARE, OR ANY SUPPLIER OF ANY OF SUCH PARTIES, BE LIABLE TO ANY PERSON FOR ANY INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES OF ANY CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOST PROFITS, LOSS OF GOODWILL, WORK STOPPAGE, COMPUTER FAILURE OR MALFUNCTION, OR ANY AND ALL OTHER COMMERCIAL DAMAGES OR LOSSES, EVEN IF SUCH PARTY SHALL HAVE BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES. THIS LIMITATION OF LIABILITY SHALL NOT APPLY TO LIABILITY FOR DEATH OR PERSONAL INJURY RESULTING FROM SUCH PARTYS NEGLIGENCE TO THE EXTENT APPLICABLE LAW PROHIBITS SUCH LIMITATION. SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL OR CONSEQUENTIAL DAMAGES, SO THIS EXCLUSION AND LIMITATION MAY NOT APPLY TO YOU.\n+   UNDER NO CIRCUMSTANCES AND UNDER NO LEGAL THEORY, WHETHER TORT (INCLUDING NEGLIGENCE), CONTRACT, OR OTHERWISE, SHALL YOU, THE INITIAL DEVELOPER, ANY OTHER CONTRIBUTOR, OR ANY DISTRIBUTOR OF COVERED SOFTWARE, OR ANY SUPPLIER OF ANY OF SUCH PARTIES, BE LIABLE TO ANY PERSON FOR ANY INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES OF ANY CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOST PROFITS, LOSS OF GOODWILL, WORK STOPPAGE, COMPUTER FAILURE OR MALFUNCTION, OR ANY AND ALL OTHER COMMERCIAL DAMAGES OR LOSSES, EVEN IF SUCH PARTY SHALL HAVE BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES. THIS LIMITATION OF LIABILITY SHALL NOT APPLY TO LIABILITY FOR DEATH OR PERSONAL INJURY RESULTING FROM SUCH PARTY.S NEGLIGENCE TO THE EXTENT APPLICABLE LAW PROHIBITS SUCH LIMITATION. SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL OR CONSEQUENTIAL DAMAGES, SO THIS EXCLUSION AND LIMITATION MAY NOT APPLY TO YOU.\n \n 8. U.S. GOVERNMENT END USERS.\n \n-The Covered Software is a commercial item, as that term is defined in 48�C.F.R.�2.101 (Oct. 1995), consisting of commercial computer software (as that term is defined at 48 C.F.R. �252.227-7014(a)(1)) and commercial computer software documentation as such terms are used in 48�C.F.R.�12.212 (Sept. 1995). Consistent with 48 C.F.R. 12.212 and 48 C.F.R. 227.7202-1 through 227.7202-4 (June 1995), all U.S. Government End Users acquire Covered Software with only those rights set forth herein. This U.S. Government Rights clause is in lieu of, and supersedes, any other FAR, DFAR, or other clause or provision that addresses Government rights in computer software under this License.\n+   The Covered Software is a .commercial item,. as that term is defined in 48 C.F.R. 2.101 (Oct. 1995), consisting of .commercial computer software. (as that term is defined at 48 C.F.R. ? 252.227-7014(a)(1)) and .commercial computer software documentation. as such terms are used in 48 C.F.R. 12.212 (Sept. 1995). Consistent with 48 C.F.R. 12.212 and 48 C.F.R. 227.7202-1 through 227.7202-4 (June 1995), all U.S. Government End Users acquire Covered Software with only those rights set forth herein. This U.S. Government Rights clause is in lieu of, and supersedes, any other FAR, DFAR, or other clause or provision that addresses Government rights in computer software under this License.\n \n 9. MISCELLANEOUS.\n \n-This License represents the complete agreement concerning subject matter hereof. If any provision of this License is held to be unenforceable, such provision shall be reformed only to the extent necessary to make it enforceable. This License shall be governed by the law of the jurisdiction specified in a notice contained within the Original Software (except to the extent applicable law, if any, provides otherwise), excluding such jurisdictions conflict-of-law provisions. Any litigation relating to this License shall be subject to the jurisdiction of the courts located in the jurisdiction and venue specified in a notice contained within the Original Software, with the losing party responsible for costs, including, without limitation, court costs and reasonable attorneys fees and expenses. The application of the United Nations Convention on Contracts for the International Sale of Goods is expressly excluded. Any law or regulation which provides that the language of a contract shall be construed against the drafter shall not apply to this License. You agree that You alone are responsible for compliance with the United States export administration regulations (and the export control laws and regulation of any other countries) when You use, distribute or otherwise make available any Covered Software.\n+   This License represents the complete agreement concerning subject matter hereof. If any provision of this License is held to be unenforceable, such provision shall be reformed only to the extent necessary to make it enforceable. This License shall be governed by the law of the jurisdiction specified in a notice contained within the Original Software (except to the extent applicable law, if any, provides otherwise), excluding such jurisdiction.s conflict-of-law provisions. Any litigation relating to this License shall be subject to the jurisdiction of the courts located in the jurisdiction and venue specified in a notice contained within the Original Software, with the losing party responsible for costs, including, without limitation, court costs and reasonable attorneys. fees and expenses. The application of the United Nations Convention on Contracts for the International Sale of Goods is expressly excluded. Any law or regulation which provides that the language of a contract shall be construed against the drafter shall not apply to this License. You agree that You alone are responsible for compliance with the United States export administration regulations (and the export control laws and regulation of any other countries) when You use, distribute or otherwise make available any Covered Software.\n \n 10. RESPONSIBILITY FOR CLAIMS.\n \n-As between Initial Developer and the Contributors, each party is responsible for claims and damages arising, directly or indirectly, out of its utilization of rights under this License and You agree to work with Initial Developer and Contributors to distribute such responsibility on an equitable basis. Nothing herein is intended or shall be deemed to constitute any admission of liability.\n+   As between Initial Developer and the Contributors, each party is responsible for claims and damages arising, directly or indirectly, out of its utilization of rights under this License and You agree to work with Initial Developer and Contributors to distribute such responsibility on an equitable basis. Nothing herein is intended or shall be deemed to constitute any admission of liability.\n \n-NOTICE PURSUANT TO SECTION 9 OF THE COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL)\n-The GlassFish code released under the CDDL shall be governed by the laws of the State of California (excluding conflict-of-law provisions). Any litigation relating to this License shall be subject to the jurisdiction of the Federal Courts of the Northern District of California and the state courts of the State of California, with venue lying in Santa Clara County, California. \n+   NOTICE PURSUANT TO SECTION 9 OF THE COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL)\n \n+   The code released under the CDDL shall be governed by the laws of the State of California (excluding conflict-of-law provisions). Any litigation relating to this License shall be subject to the jurisdiction of the Federal Courts of the Northern District of California and the state courts of the State of California, with venue lying in Santa Clara County, California.\n \n-serp-1.13.1.jar - BSD License\n-=============================\n \n-Copyright (c) 2002, A. Abram White\n-All rights reserved.\n+The GNU General Public License (GPL) Version 2, June 1991\n \n-Redistribution and use in source and binary forms, with or without \n-modification, are permitted provided that the following conditions are met:\n \n-* Redistributions of source code must retain the above copyright notice, this \n-  list of conditions and the following disclaimer.\n-* Redistributions in binary form must reproduce the above copyright notice, \n-  this list of conditions and the following disclaimer in the documentation \n-  and/or other materials provided with the distribution.\n-* Neither the name of 'serp' nor the names of its contributors may\n-  be used to endorse or promote products derived from this software without \n-  specific prior written permission.\n+Copyright (C) 1989, 1991 Free Software Foundation, Inc. 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n \n-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n-ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED \n-WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE \n-DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n-ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n-(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; \n-LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON \n-ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT \n-(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS \n-SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.\n+\n+Preamble\n+\n+The licenses for most software are designed to take away your freedom to share and change it. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users. This General Public License applies to most of the Free Software Foundation's software and to any other program whose authors commit to using it. (Some other Free Software Foundation software is covered by the GNU Library General Public License instead.) You can apply it to your programs, too.\n+\n+When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs; and that you know you can do these things.\n+\n+To protect your rights, we need to make restrictions that forbid anyone to deny you these rights or to ask you to surrender the rights. These restrictions translate to certain responsibilities for you if you distribute copies of the software, or if you modify it.\n+\n+For example, if you distribute copies of such a program, whether gratis or for a fee, you must give the recipients all the rights that you have. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights.\n+\n+We protect your rights with two steps: (1) copyright the software, and (2) offer you this license which gives you legal permission to copy, distribute and/or modify the software.\n+\n+Also, for each author's protection and ours, we want to make certain that everyone understands that there is no warranty for this free software. If the software is modified by someone else and passed on, we want its recipients to know that what they have is not the original, so that any problems introduced by others will not reflect on the original authors' reputations.\n+\n+Finally, any free program is threatened constantly by software patents. We wish to avoid the danger that redistributors of a free program will individually obtain patent licenses, in effect making the program proprietary. To prevent this, we have made it clear that any patent must be licensed for everyone's free use or not licensed at all.\n+\n+The precise terms and conditions for copying, distribution and modification follow.\n+\n+\n+TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n+\n+0. This License applies to any program or other work which contains a notice placed by the copyright holder saying it may be distributed under the terms of this General Public License. The \"Program\", below, refers to any such program or work, and a \"work based on the Program\" means either the Program or any derivative work under copyright law: that is to say, a work containing the Program or a portion of it, either verbatim or with modifications and/or translated into another language. (Hereinafter, translation is included without limitation in the term \"modification\".) Each licensee is addressed as \"you\".\n+\n+Activities other than copying, distribution and modification are not covered by this License; they are outside its scope. The act of running the Program is not restricted, and the output from the Program is covered only if its contents constitute a work based on the Program (independent of having been made by running the Program). Whether that is true depends on what the Program does.\n+\n+1. You may copy and distribute verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and give any other recipients of the Program a copy of this License along with the Program.\n+\n+You may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee.\n+\n+2. You may modify your copy or copies of the Program or any portion of it, thus forming a work based on the Program, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions:\n+\n+   a) You must cause the modified files to carry prominent notices stating that you changed the files and the date of any change.\n+\n+   b) You must cause any work that you distribute or publish, that in whole or in part contains or is derived from the Program or any part thereof, to be licensed as a whole at no charge to all third parties under the terms of this License.\n+\n+   c) If the modified program normally reads commands interactively when run, you must cause it, when started running for such interactive use in the most ordinary way, to print or display an announcement including an appropriate copyright notice and a notice that there is no warranty (or else, saying that you provide a warranty) and that users may redistribute the program under these conditions, and telling the user how to view a copy of this License. (Exception: if the Program itself is interactive but does not normally print such an announcement, your work based on the Program is not required to print an announcement.)\n+\n+These requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Program, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Program, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it.\n+\n+Thus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Program.\n+\n+In addition, mere aggregation of another work not based on the Program with the Program (or with a work based on the Program) on a volume of a storage or distribution medium does not bring the other work under the scope of this License.\n+\n+3. You may copy and distribute the Program (or a work based on it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you also do one of the following:\n+\n+   a) Accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or,\n+\n+   b) Accompany it with a written offer, valid for at least three years, to give any third party, for a charge no more than your cost of physically performing source distribution, a complete machine-readable copy of the corresponding source code, to be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or,\n+\n+   c) Accompany it with the information you received as to the offer to distribute corresponding source code. (This alternative is allowed only for noncommercial distribution and only if you received the program in object code or executable form with such an offer, in accord with Subsection b above.)\n+\n+The source code for a work means the preferred form of the work for making modifications to it. For an executable work, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the executable. However, as a special exception, the source code distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable.\n+\n+If distribution of executable or object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place counts as distribution of the source code, even though third parties are not compelled to copy the source along with the object code.\n+\n+4. You may not copy, modify, sublicense, or distribute the Program except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense or distribute the Program is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance.\n+\n+5. You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Program or its derivative works. These actions are prohibited by law if you do not accept this License. Therefore, by modifying or distributing the Program (or any work based on the Program), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Program or works based on it.\n+\n+6. Each time you redistribute the Program (or any work based on the Program), the recipient automatically receives a license from the original licensor to copy, distribute or modify the Program subject to these terms and conditions. You may not impose any further restrictions on the recipients' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties to this License.\n+\n+7. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Program at all. For example, if a patent license would not permit royalty-free redistribution of the Program by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Program.\n+\n+If any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply and the section as a whole is intended to apply in other circumstances.\n+\n+It is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system, which is implemented by public license practices. Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice.\n+\n+This section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License.\n+\n+8. If the distribution and/or use of the Program is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Program under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded. In such case, this License incorporates the limitation as if written in the body of this License.\n+\n+9. The Free Software Foundation may publish revised and/or new versions of the General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.\n+\n+Each version is given a distinguishing version number. If the Program specifies a version number of this License which applies to it and \"any later version\", you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of this License, you may choose any version ever published by the Free Software Foundation.\n+\n+10. If you wish to incorporate parts of the Program into other free programs whose distribution conditions are different, write to the author to ask for permission. For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this. Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally.\n+\n+NO WARRANTY\n+\n+11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n+\n+12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n+\n+END OF TERMS AND CONDITIONS\n+\n+\n+How to Apply These Terms to Your New Programs\n+\n+If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.\n+\n+To do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively convey the exclusion of warranty; and each file should have at least the \"copyright\" line and a pointer to where the full notice is found.\n+\n+   One line to give the program's name and a brief idea of what it does.\n+\n+   Copyright (C)\n+\n+   This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n+\n+Also add information on how to contact you by electronic and paper mail.\n+\n+If the program is interactive, make it output a short notice like this when it starts in an interactive mode:\n+\n+   Gnomovision version 69, Copyright (C) year name of author\n+   Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details.\n+\n+The hypothetical commands `show w' and `show c' should show the appropriate parts of the General Public License. Of course, the commands you use may be called something other than `show w' and `show c'; they could even be mouse-clicks or menu items--whatever suits your program.\n+\n+You should also get your employer (if you work as a programmer) or your school, if any, to sign a \"copyright disclaimer\" for the program, if necessary. Here is a sample; alter the names:\n+\n+   Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.\n+\n+   signature of Ty Coon, 1 April 1989\n+   Ty Coon, President of Vice\n+\n+This General Public License does not permit incorporating your program into proprietary programs. If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library. If this is what you want to do, use the GNU Library General Public License instead of this License.\n+\n+\n+\"CLASSPATH\" EXCEPTION TO THE GPL VERSION 2\n+\n+Certain source files distributed by Sun Microsystems, Inc. are subject to the following clarification and special exception to the GPL Version 2, but only where Sun has expressly included in the particular source file's header the words\n+\n+\"Sun designates this particular file as subject to the \"Classpath\" exception as provided by Sun in the License file that accompanied this code.\"\n+\n+Linking this library statically or dynamically with other modules is making a combined work based on this library. Thus, the terms and conditions of the GNU General Public License Version 2 cover the whole combination.\n \n+As a special exception, the copyright holders of this library give you permission to link this library with independent modules to produce an executable, regardless of the license terms of these independent modules, and to copy and distribute the resulting executable under terms of your choice, provided that you also meet, for each linked independent module, the terms and conditions of the license of that module.? An independent module is a module which is not derived from or based on this library.? If you modify this library, you may extend this exception to your version of the library, but you are not obligated to do so.? If you do not wish to do so, delete this exception statement from your version."},{"sha":"7ad5456eb25b1d7fa51f6d6def07039d9c8a816b","filename":"openjpa-all/src/main/appended-resources/META-INF/NOTICE.vm","status":"modified","additions":18,"deletions":2,"changes":20,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-all/src/main/appended-resources/META-INF/NOTICE.vm","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-all/src/main/appended-resources/META-INF/NOTICE.vm","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-all/src/main/appended-resources/META-INF/NOTICE.vm?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -1,5 +1,21 @@\n-\n-Apache, the Apache feather logo and OpenJPA are trademarks of The Apache Software Foundation.\n+##\n+## Licensed to the Apache Software Foundation (ASF) under one\n+## or more contributor license agreements.  See the NOTICE file\n+## distributed with this work for additional information\n+## regarding copyright ownership.  The ASF licenses this file\n+## to you under the Apache License, Version 2.0 (the\n+## \"License\"); you may not use this file except in compliance\n+## with the License.  You may obtain a copy of the License at\n+##\n+##  http://www.apache.org/licenses/LICENSE-2.0\n+##\n+## Unless required by applicable law or agreed to in writing,\n+## software distributed under the License is distributed on an\n+## \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+## KIND, either express or implied.  See the License for the\n+## specific language governing permissions and limitations\n+## under the License.\n+##\n \n openjpa-all includes software developed by the:\n     Apache Commons Collections project"},{"sha":"1a98bf5997cf9c2386ee3b1e9e538c8d1f06f045","filename":"openjpa-examples/pom.xml","status":"modified","additions":30,"deletions":42,"changes":72,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-examples/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-examples/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-examples/pom.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -22,23 +22,31 @@\n     the release plugin.\n -->\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n     <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <groupId>org.apache.openjpa</groupId>\n+        <artifactId>openjpa-parent</artifactId>\n+        <version>2.0.1</version>\n+    </parent>\n+\n     <groupId>org.apache.openjpa</groupId>\n     <artifactId>openjpa-examples</artifactId>\n     <packaging>jar</packaging>\n     <name>OpenJPA Examples</name>\n     <description>OpenJPA Examples</description>\n-    <url>http://openjpa.apache.org</url>\n-    <parent>\n-        <groupId>org.apache.openjpa</groupId>\n-        <artifactId>openjpa-parent</artifactId>\n-        <version>2.0.0</version>\n-    </parent>\n+\n+    <properties>\n+        <openjpa.Log>DefaultLevel=WARN</openjpa.Log>\n+        <checkstyle.config.location>${project.basedir}/../openjpa-project/checkstyle.xml</checkstyle.config.location>\n+    </properties>\n+\n     <dependencies>\n         <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa-persistence-jdbc</artifactId>\n-            <version>${pom.version}</version>\n+            <version>${project.version}</version>\n         </dependency>\n         <dependency>\n             <groupId>org.apache.derby</groupId>\n@@ -56,8 +64,23 @@\n             <scope>test</scope>\n         </dependency>\n     </dependencies>\n+\n     <build>\n         <plugins>\n+            <!-- disable creating javadoc for this module -->\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-javadoc-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>attach-javadocs</id>\n+                        <phase>none</phase>\n+                        <goals>\n+                            <goal>jar</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n             <plugin>\n                 <groupId>org.apache.maven.plugins</groupId>\n                 <artifactId>maven-compiler-plugin</artifactId>\n@@ -71,41 +94,6 @@\n                     </excludes>\n                 </configuration>\n             </plugin>\n-            <plugin>\n-                <groupId>org.apache.maven.plugins</groupId>\n-                <artifactId>maven-jar-plugin</artifactId>\n-                <configuration>\n-                    <archive>\n-                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>\n-                    </archive>\n-                </configuration>\n-            </plugin>\n-            <plugin>\n-                <groupId>org.apache.felix</groupId>\n-                <artifactId>maven-bundle-plugin</artifactId>\n-                <extensions>true</extensions>\n-                <configuration>\n-                    <instructions>\n-                        <Bundle-Name>${artifactId}</Bundle-Name>\n-                        <Bundle-SymbolicName>${groupId}.${artifactId};singleton=true</Bundle-SymbolicName>\n-                        <Bundle-DocURL>http://openjpa.apache.org/documentation.html</Bundle-DocURL>\n-                        <Bundle-Activator>hellojpa.Main</Bundle-Activator>\n-                        <!-- Eclipse metadata -->\n-                        <Eclipse-Autostart>false</Eclipse-Autostart>\n-                        <Bundle-ClassPath>.</Bundle-ClassPath>\n-                    </instructions>\n-                    <unpackBundle>true</unpackBundle>\n-                </configuration>\n-                <executions>\n-                    <execution>\n-                        <id>bundle-manifest</id>\n-                        <phase>process-classes</phase>\n-                        <goals>\n-                            <goal>manifest</goal>\n-                        </goals>\n-                    </execution>\n-                </executions>\n-            </plugin>\n         </plugins>\n     </build>\n </project>"},{"sha":"2d0378325accab25b434bd4eac279dcf3e9751e7","filename":"openjpa-integration/daytrader/pom.xml","status":"modified","additions":7,"deletions":20,"changes":27,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-integration/daytrader/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-integration/daytrader/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-integration/daytrader/pom.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -21,12 +21,13 @@\n     Maven release plugin requires the project tag to be on a single line. \n -->\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n     <modelVersion>4.0.0</modelVersion>\n \n     <parent>\n         <groupId>org.apache.openjpa</groupId>\n         <artifactId>openjpa-integration</artifactId>\n-        <version>2.0.0</version>\n+        <version>2.0.1</version>\n     </parent>\n \n     <artifactId>openjpa-integration-daytrader</artifactId>\n@@ -47,7 +48,7 @@\n         <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa</artifactId>\n-            <version>${pom.version}</version>\n+            <version>${project.version}</version>\n         </dependency>\n         <!-- Maybe one day we can used published artifacts for this...\n         <dependency>\n@@ -64,7 +65,7 @@\n         <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa-persistence-jdbc</artifactId>\n-            <version>${pom.version}</version>\n+            <version>${project.version}</version>\n             <classifier>tests</classifier>\n             <scope>test</scope>\n         </dependency>\n@@ -93,20 +94,6 @@\n \n     <build>\n         <plugins>\n-            <plugin>\n-                <groupId>org.apache.maven.plugins</groupId>\n-                <artifactId>maven-jar-plugin</artifactId>\n-                <executions>\n-                    <execution>\n-                        <id>attach-tests</id>\n-                        <phase>verify</phase>\n-                        <goals>\n-                            <goal>test-jar</goal>\n-                        </goals>\n-                    </execution>\n-                </executions>\n-            </plugin>\n-\n             <!-- old way of using antrun to enhance classes\n             <plugin>\n                 <groupId>org.apache.maven.plugins</groupId>\n@@ -138,7 +125,6 @@\n             <plugin>\n                 <groupId>org.codehaus.mojo</groupId>\n                 <artifactId>openjpa-maven-plugin</artifactId>\n-                <version>1.1</version>\n                 <configuration>\n                     <includes>org/apache/openjpa/integration/daytrader/*Bean.class</includes>\n                     <excludes>org/apache/openjpa/persistence/**/*.class</excludes>\n@@ -155,10 +141,11 @@\n                     </execution>\n                 </executions>\n                 <dependencies>\n+                    <!-- use o-p-j instead of openjpa to avoid cyclical dependency in maven graph -->\n                     <dependency>\n                         <groupId>org.apache.openjpa</groupId>\n-                        <artifactId>openjpa</artifactId>\n-                        <version>${pom.version}</version>\n+                        <artifactId>openjpa-persistence-jdbc</artifactId>\n+                        <version>${project.version}</version>\n                     </dependency>\n                 </dependencies>\n             </plugin>"},{"sha":"7ae8d5af743a0e784b07cb8a59064f767ed596d0","filename":"openjpa-integration/examples/pom.xml","status":"modified","additions":12,"deletions":8,"changes":20,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-integration/examples/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-integration/examples/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-integration/examples/pom.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -31,17 +31,21 @@\n     the release plugin.\n -->\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n     <modelVersion>4.0.0</modelVersion>\n-    <artifactId>openjpa-integration-examples</artifactId>\n-    <packaging>pom</packaging>\n-    <name>OpenJPA Integration Tests - Examples</name>\n-    <description>OpenJPA Integration Tests - Examples</description>\n+\n     <parent>\n         <groupId>org.apache.openjpa</groupId>\n         <artifactId>openjpa-integration</artifactId>\n-        <version>2.0.0</version>\n+        <version>2.0.1</version>\n     </parent>\n \n+    <groupId>org.apache.openjpa</groupId>\n+    <artifactId>openjpa-integration-examples</artifactId>\n+    <packaging>pom</packaging>\n+    <name>OpenJPA Integration Tests - Examples</name>\n+    <description>OpenJPA Integration Tests - Examples</description>\n+\n     <profiles>\n     <profile>\n     <id>examples-profile</id>\n@@ -62,11 +66,11 @@\n                         <delete dir=\"${examples.base}\" quiet=\"true\" />\n                         <mkdir dir=\"${examples.base}\" />\n \n-                        <unzip overwrite=\"false\" dest=\"${examples.base}\" src=\"../../openjpa-project/target/site/downloads/apache-openjpa-${pom.version}-binary.zip\" />\n+                        <unzip overwrite=\"false\" dest=\"${examples.base}\" src=\"../../openjpa-project/target/site/downloads/apache-openjpa-${project.version}-binary.zip\" />\n \n                         <path id=\"assembly.classpath\"> \n                             <fileset dir=\"${examples.base}\">\n-                                <include name=\"**/openjpa-all-${pom.version}.jar\" />\n+                                <include name=\"**/openjpa-all-${project.version}.jar\" />\n                             </fileset>\n                         </path>\n                         <available classname=\"org.apache.openjpa.conf.OpenJPAVersion\" classpathref=\"assembly.classpath\" property=\"unzip.success\" />\n@@ -95,7 +99,7 @@\n         <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa-all</artifactId>\n-            <version>${pom.version}</version>\n+            <version>${project.version}</version>\n         </dependency>\n     </dependencies>\n </project>"},{"sha":"bad462b0e299c405c9f4437f5152ff94d6c07463","filename":"openjpa-integration/pom.xml","status":"modified","additions":25,"deletions":4,"changes":29,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-integration/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-integration/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-integration/pom.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -22,19 +22,40 @@\n     the release plugin.\n -->\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n     <modelVersion>4.0.0</modelVersion>\n-    <artifactId>openjpa-integration</artifactId>\n-    <packaging>pom</packaging>\n-    <name>OpenJPA Integration Tests</name>\n+\n     <parent>\n         <groupId>org.apache.openjpa</groupId>\n         <artifactId>openjpa-parent</artifactId>\n-        <version>2.0.0</version>\n+        <version>2.0.1</version>\n     </parent>\n+\n+    <groupId>org.apache.openjpa</groupId>\n+    <artifactId>openjpa-integration</artifactId>\n+    <packaging>pom</packaging>\n+    <name>OpenJPA Integration Tests</name>\n+\n     <modules>\n         <module>daytrader</module>\n         <module>examples</module>\n         <module>tck</module>\n         <module>validation</module>\n     </modules>\n+\n+    <build>\n+        <pluginManagement>\n+            <plugins>\n+                <!-- disable creating javadoc for these modules -->\n+                <plugin>\n+                    <groupId>org.apache.maven.plugins</groupId>\n+                    <artifactId>maven-javadoc-plugin</artifactId>\n+                    <configuration>\n+                        <skip>true</skip>\n+                    </configuration>\n+                    <inherited>true</inherited>\n+                </plugin>\n+            </plugins>\n+        </pluginManagement>\n+    </build>\n </project>"},{"sha":"909772c9116868d6c56a24d1b9eaf8b54e0a6fac","filename":"openjpa-integration/tck/pom.xml","status":"modified","additions":24,"deletions":7,"changes":31,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-integration/tck/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-integration/tck/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-integration/tck/pom.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -62,21 +62,38 @@\n     the release plugin.\n -->\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n     <modelVersion>4.0.0</modelVersion>\n-    <artifactId>openjpa-integration-tck</artifactId>\n-    <packaging>pom</packaging>\n-    <name>OpenJPA Integration Tests - JPA TCK</name>\n-    <description>OpenJPA Integration Tests - JPA TCK</description>\n+\n     <parent>\n         <groupId>org.apache.openjpa</groupId>\n         <artifactId>openjpa-integration</artifactId>\n-        <version>2.0.0</version>\n+        <version>2.0.1</version>\n     </parent>\n \n+    <groupId>org.apache.openjpa</groupId>\n+    <artifactId>openjpa-integration-tck</artifactId>\n+    <packaging>pom</packaging>\n+    <name>OpenJPA Integration Tests - JPA TCK</name>\n+    <description>OpenJPA Integration Tests - JPA TCK</description>\n+\n     <properties>\n         <openjpa.Log>DefaultLevel=WARN</openjpa.Log>\n     </properties>\n \n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-deploy-plugin</artifactId>\n+                <configuration>\n+                    <!-- Don't publish these artifacts to central -->\n+                    <skip>true</skip>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n     <profiles>\n       <profile>\n         <!-- JPA 2.0 TCK Profile -->\n@@ -184,7 +201,7 @@\n           <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa-all</artifactId>\n-            <version>${pom.version}</version>\n+            <version>${project.version}</version>\n           </dependency>\n         </dependencies>\n       </profile>\n@@ -413,7 +430,7 @@ databaseName=${db.name}\n           <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa-kernel</artifactId>\n-            <version>${pom.version}</version>\n+            <version>${project.version}</version>\n           </dependency>\n         </dependencies>\n       </profile>"},{"sha":"e26dd0edc2dc88ed0c3f2f87373384e5994eacd9","filename":"openjpa-integration/validation/pom.xml","status":"modified","additions":60,"deletions":68,"changes":128,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-integration/validation/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-integration/validation/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-integration/validation/pom.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -21,116 +21,91 @@\n     Maven release plugin requires the project tag to be on a single line. \n -->\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n     <modelVersion>4.0.0</modelVersion>\n \n     <parent>\n         <groupId>org.apache.openjpa</groupId>\n         <artifactId>openjpa-integration</artifactId>\n-        <version>2.0.0</version>\n+        <version>2.0.1</version>\n     </parent>\n \n+    <groupId>org.apache.openjpa</groupId>\n     <artifactId>openjpa-integration-validation</artifactId>\n     <packaging>jar</packaging>\n     <name>OpenJPA Integration Tests - Bean Validation</name>\n     <description>OpenJPA Integration Tests - Bean Validation</description>\n \n-    <properties>\n-        <dbcp.maxActive>10</dbcp.maxActive>\n-        <dbcp.maxIdle>5</dbcp.maxIdle>\n-        <dbcp.minIdle>2</dbcp.minIdle>\n-        <dbcp.maxWait>10000</dbcp.maxWait>\n-        <dbcp.args>MaxActive=${dbcp.maxActive},MaxIdle=${dbcp.maxIdle},MinIdle=${dbcp.minIdle},MaxWait=${dbcp.maxWait}</dbcp.args>\n-        <connection.driver.name>org.apache.derby.jdbc.EmbeddedDriver</connection.driver.name>\n-        <connection.url>jdbc:derby:target/database/openjpa-derby-database;create=true</connection.url>\n-        <connection.username />\n-        <connection.password />\n-    </properties>\n-\n     <profiles>\n-        <!-- Profile for testing with Agimatec validation provider -->\n+        <!-- Default profile for testing with Apache BVAL provider -->\n+        <!-- See http://incubator.apache.org/projects/beanvalidation.html -->\n         <profile>\n-            <id>agimatec</id>\n+            <id>bval</id>\n             <activation>\n+                <activeByDefault>true</activeByDefault>\n                 <property>\n-                    <name>agimatec</name>\n+                    <name>bval</name>\n                 </property>\n             </activation>\n             <dependencies>\n-                <!-- See http://code.google.com/p/agimatec-validation/wiki/GettingStarted -->\n-                <!-- Validation API RI, which we'll test with the RI\n-                <dependency>\n-                    <groupId>javax.validation</groupId>\n-                    <artifactId>validation-api</artifactId>\n-                    <version>1.0.0.GA</version>\n-                    <scope>test</scope>\n-                </dependency>\n-                -->\n                 <dependency>\n                     <groupId>org.apache.geronimo.specs</groupId>\n                     <artifactId>geronimo-validation_1.0_spec</artifactId>\n                     <scope>test</scope>\n                 </dependency>\n                 <dependency>\n-                    <groupId>com.agimatec</groupId>\n-                    <artifactId>agimatec-jsr303</artifactId>\n-                    <version>0.9.6</version>\n+                    <groupId>org.apache.bval</groupId>\n+                    <artifactId>org.apache.bval.bundle</artifactId>\n                     <scope>test</scope>\n                     <exclusions>\n                         <!-- force usage of the geronimo-validation_1.0_spec -->\n                         <exclusion>\n                             <groupId>javax.validation</groupId>\n                             <artifactId>validation-api</artifactId>\n                         </exclusion>\n-                        <!-- use our level of the geronimo-jpa_2.0_spec -->\n-                        <exclusion>\n-                            <groupId>javax.validation</groupId>\n-                            <artifactId>validation-api</artifactId>\n-                        </exclusion>\n                     </exclusions>\n                 </dependency>\n-                <dependency>\n-                    <groupId>com.agimatec</groupId>\n-                    <artifactId>agimatec-validation</artifactId>\n-                    <version>0.9.6</version>\n-                    <scope>test</scope>\n-                </dependency>\n                 <dependency>\n                     <groupId>commons-beanutils</groupId>\n                     <artifactId>commons-beanutils</artifactId>\n-                    <version>1.8.2</version>\n+                    <version>1.8.3</version>\n                     <scope>test</scope>\n                 </dependency>\n                 <dependency>\n                     <groupId>commons-lang</groupId>\n                     <artifactId>commons-lang</artifactId>\n+                    <!-- BVAL requires 2.4 or later -->\n                     <version>2.4</version>\n                     <scope>test</scope>\n                 </dependency>\n             </dependencies>\n-            <repositories>\n-                <repository>\n-                    <id>agimatec.oss.sonatype.org</id>\n-                    <name>Sonatype OSS Repository</name>\n-                    <url>http://oss.sonatype.org/content/repositories/agimatec</url>\n-                    <layout>default</layout>\n-                    <snapshots>\n-                        <enabled>true</enabled>\n-                        <checksumPolicy>ignore</checksumPolicy>\n-                        <updatePolicy>daily</updatePolicy>\n-                    </snapshots>\n-                    <releases>\n-                        <enabled>true</enabled>\n-                        <checksumPolicy>fail</checksumPolicy>\n-                    </releases>\n-                </repository>\n-            </repositories>\n         </profile>\n \n-        <!-- Default profile for testing with Hibernate Bean Validation RI -->\n+        <!-- Test profile for testing with Apache BVAL and Java SE 5 -->\n+        <!-- Note:  You have to set -Ptest-java5,bval together -->\n+        <profile>\n+            <id>test-java5</id>\n+            <activation>\n+                <activeByDefault>false</activeByDefault>\n+            </activation>\n+            <dependencies>\n+                <dependency>\n+                    <groupId>javax.xml.bind</groupId>\n+                    <artifactId>jaxb-api</artifactId>\n+                    <version>2.1</version>\n+                </dependency>\n+                <dependency>\n+                    <groupId>com.sun.xml.bind</groupId>\n+                    <artifactId>jaxb-impl</artifactId>\n+                    <version>2.1.3</version>\n+                </dependency>\n+            </dependencies>\n+        </profile>\n+\n+        <!-- Profile for testing with Hibernate Bean Validation RI -->\n         <profile>\n             <id>hibernate</id>\n             <activation>\n-                <activeByDefault>true</activeByDefault>\n                 <property>\n                     <name>hibernate</name>\n                 </property>\n@@ -195,7 +170,7 @@\n         <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa</artifactId>\n-            <version>${pom.version}</version>\n+            <version>${project.version}</version>\n             <!-- allow profiles to decide which validation spec to use -->\n             <exclusions>\n                 <exclusion>\n@@ -207,8 +182,7 @@\n         <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa-persistence-jdbc</artifactId>\n-            <version>${pom.version}</version>\n-            <!-- <classifier>tests</classifier> -->\n+            <version>${project.version}</version>\n             <type>test-jar</type>\n             <scope>test</scope>\n         </dependency>\n@@ -231,19 +205,33 @@\n \n     <build>\n         <plugins>\n+            <!-- Extract the common test support files from o-p-j-tests.jar -->\n             <plugin>\n                 <groupId>org.apache.maven.plugins</groupId>\n-                <artifactId>maven-jar-plugin</artifactId>\n+                <artifactId>maven-dependency-plugin</artifactId>\n                 <executions>\n                     <execution>\n-                        <id>attach-tests</id>\n-                        <phase>verify</phase>\n+                        <id>unpack</id>\n+                        <phase>test-compile</phase>\n                         <goals>\n-                            <goal>test-jar</goal>\n+                            <goal>unpack</goal>\n                         </goals>\n+                        <configuration>\n+                            <artifactItems>\n+                                <artifactItem>\n+                                    <groupId>org.apache.openjpa</groupId>\n+                                    <artifactId>openjpa-persistence-jdbc</artifactId>\n+                                    <version>${project.version}</version>\n+                                    <type>test-jar</type>\n+                                    <outputDirectory>${project.build.testOutputDirectory}</outputDirectory>\n+                                    <includes>org/apache/openjpa/persistence/test/*.class</includes>\n+                                </artifactItem>\n+                            </artifactItems>\n+                        </configuration>\n                     </execution>\n                 </executions>\n             </plugin>\n+\n             <plugin>\n                 <groupId>org.apache.maven.plugins</groupId>\n                 <artifactId>maven-antrun-plugin</artifactId>\n@@ -303,16 +291,20 @@\n                         </property>\n                         <property>\n                             <name>derby.locks.deadlockTimeout</name>\n-                            <value>5</value>\n+                            <value>${derby.locks.deadlockTimeout}</value>\n                         </property>\n                         <property>\n                             <name>derby.locks.waitTimeout</name>\n-                            <value>6</value>\n+                            <value>${derby.locks.waitTimeout}</value>\n                         </property>\n                         <property>\n                             <name>openjpa.ConnectionProperties</name>\n                             <value>DriverClassName=${connection.driver.name},Url=${connection.url},Username=${connection.username},Password=${connection.password},${dbcp.args}</value>\n                         </property>\n+                        <property>\n+                            <name>tests.openjpa.allowfailure</name>\n+                            <value>${tests.openjpa.allowfailure}</value>\n+                        </property>\n                     </systemProperties>\n                 </configuration>\n             </plugin>"},{"sha":"4f39abb622e36a7eb9328f6317980e684223ebef","filename":"openjpa-integration/validation/src/test/java/org/apache/openjpa/integration/validation/TestTraversableResolver.java","status":"modified","additions":9,"deletions":1,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-integration/validation/src/test/java/org/apache/openjpa/integration/validation/TestTraversableResolver.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-integration/validation/src/test/java/org/apache/openjpa/integration/validation/TestTraversableResolver.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-integration/validation/src/test/java/org/apache/openjpa/integration/validation/TestTraversableResolver.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -236,6 +236,14 @@ private void createBook(int id, String title, int pages) {\n         } catch (ClassNotFoundException e) {\n             log.trace(\"getLeafNodeFromPath: Did not find org.hibernate.validator.engine.PathImpl\");\n         }\n+        if (PathImpl == null) {\n+            try {\n+                PathImpl = Class.forName(\"org.apache.bval.jsr303.util.PathImpl\",\n+                    true, AccessController.doPrivileged(J2DoPrivHelper.getContextClassLoaderAction()));\n+            } catch (ClassNotFoundException e) {\n+                log.trace(\"getLeafNodeFromPath: Did not find org.apache.bval.jsr303.util.PathImpl\");\n+            }\n+        }\n         if (PathImpl == null) {\n             try {\n                 PathImpl = Class.forName(\"com.agimatec.validation.jsr303.util.PathImpl\",\n@@ -244,7 +252,7 @@ private void createBook(int id, String title, int pages) {\n                 log.trace(\"getLeafNodeFromPath: Did not find com.agimatec.validation.jsr303.util.PathImpl\");\n             }\n         }\n-        assertNotNull(PathImpl);\n+        assertNotNull(\"Could not load a Bean Validation provider specific PathImpl\", PathImpl);\n         try {\n             Method createPathFromString = PathImpl.getMethod(\"createPathFromString\", String.class);\n             assertNotNull(createPathFromString);"},{"sha":"9dcf0038d446d2e049a2f2df965f314f29d462b5","filename":"openjpa-jdbc/pom.xml","status":"modified","additions":10,"deletions":25,"changes":35,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-jdbc/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-jdbc/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/pom.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -21,23 +21,26 @@\n     Maven release plugin requires the project tag to be on a single line. \n -->\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n     <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <groupId>org.apache.openjpa</groupId>\n+        <artifactId>openjpa-parent</artifactId>\n+        <version>2.0.1</version>\n+    </parent>\n+\n     <groupId>org.apache.openjpa</groupId>\n     <artifactId>openjpa-jdbc</artifactId>\n     <packaging>jar</packaging>\n     <name>OpenJPA JDBC</name>\n     <description>OpenJPA JDBC</description>\n-    <url>http://openjpa.apache.org</url>\n-    <parent>\n-        <groupId>org.apache.openjpa</groupId>\n-        <artifactId>openjpa-parent</artifactId>\n-        <version>2.0.0</version>\n-    </parent>\n+\n     <dependencies>\n         <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa-kernel</artifactId>\n-            <version>${pom.version}</version>\n+            <version>${project.version}</version>\n         </dependency>\n         <dependency>\n             <groupId>javax.xml.bind</groupId>\n@@ -78,22 +81,4 @@\n             <scope>test</scope>\n         </dependency>\n     </dependencies>\n-\n-    <build>\n-        <plugins>\n-            <plugin>\n-                <groupId>org.apache.maven.plugins</groupId>\n-                <artifactId>maven-jar-plugin</artifactId>\n-                <executions>\n-                    <execution>\n-                        <id>attach-tests</id>\n-                        <phase>verify</phase>\n-                        <goals>\n-                            <goal>test-jar</goal>\n-                        </goals>\n-                    </execution>\n-                </executions>\n-            </plugin>\n-        </plugins>\n-    </build>\n </project>"},{"sha":"55488212d177309cd7e29c53b59ef0ec7407c127","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/JDBCConfigurationImpl.java","status":"modified","additions":64,"deletions":6,"changes":70,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/JDBCConfigurationImpl.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/JDBCConfigurationImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/conf/JDBCConfigurationImpl.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -55,6 +55,7 @@\n import org.apache.openjpa.lib.log.Log;\n import org.apache.openjpa.lib.util.Localizer;\n import org.apache.openjpa.meta.MetaDataFactory;\n+import org.apache.openjpa.util.UserException;\n \n /**\n  * Default implementation of the {@link JDBCConfiguration} interface.\n@@ -91,6 +92,8 @@\n     private String firstPass = null;\n     private DecoratingDataSource dataSource = null;\n     private DecoratingDataSource dataSource2 = null;\n+    \n+    private static final Localizer _loc = Localizer.forPackage(JDBCConfigurationImpl.class);\n \n     /**\n      * Default constructor. Attempts to load default properties.\n@@ -826,7 +829,7 @@ public DecoratingDataSource createConnectionFactory() {\n         Log log = getLog(LOG_JDBC);\n         if (ds != null) {\n             if (log.isTraceEnabled())\n-                log.trace(\"createConnectionFactory: DataSource:\"+ds);\n+                log.trace(\"createConnectionFactory: DataSource:\" + ds);\n \n             return setupConnectionFactory(ds, false);\n         }\n@@ -841,15 +844,70 @@ public DecoratingDataSource createConnectionFactory() {\n         return setupConnectionFactory(ds, false);\n     }\n \n-    public DataSource getDataSource(StoreContext ctx) {\n-        return getDataSource(ctx, (DataSource) getConnectionFactory());\n+    public DataSource getDataSource(StoreContext ctx) {       \n+        Log log = getLog(LOG_RUNTIME);\n+        DataSource ds = null;\n+        \n+        if(ctx != null && StringUtils.isNotEmpty(ctx.getConnectionFactoryName())) {\n+            ds =  getDataSource(ctx, (DataSource) ctx.getConnectionFactory()); \n+            // fail fast if a cfName has been provided, but was not available in JNDI\n+            if (ds == null) {\n+                throw new UserException(_loc.get(\"invalid-datasource\", ctx.getConnectionFactoryName())).setFatal(true);\n+            }\n+            if(! (ds instanceof DecoratingDataSource)) { \n+                ds = DataSourceFactory.decorateDataSource(ds, this, false);\n+            }\n+            if (log.isTraceEnabled()) {\n+                log.trace(\"Found datasource1: \" + ds + \" from StoreContext using jndiName: \"\n+                    + ctx.getConnectionFactory2Name());\n+            }\n+            return ds; \n+        }\n+        else {\n+            ds = getDataSource(ctx, (DataSource) getConnectionFactory());\n+            if (log.isTraceEnabled()) {\n+                log.trace(\"Found datasource1: \" + ds + \" from configuration. StoreContext: \" + ctx );\n+            }\n+            return ds; \n+        }\n     }\n \n     public DataSource getDataSource2(StoreContext ctx) {\n-        // if there is no connection factory 2, use the primary factory\n-        DataSource ds = (DataSource) getConnectionFactory2();\n-        if (ds == null)\n+        Log log = getLog(LOG_RUNTIME);\n+        DataSource ds = null;\n+\n+        // Try to obtain from the StoreContext first.\n+        if (ctx != null && StringUtils.isNotEmpty(ctx.getConnectionFactory2Name())) {\n+            ds = (DataSource) ctx.getConnectionFactory2();\n+            if (ds == null) {\n+                // fail fast. If the non-jta-data-source is configured on the context we want an immediate error. \n+                throw new UserException(_loc.get(\"invalid-datasource\", ctx.getConnectionFactory2Name())).setFatal(true);\n+            }\n+            if(! (ds instanceof DecoratingDataSource)) { \n+                ds = DataSourceFactory.decorateDataSource(ds, this, false);\n+            }\n+            if (log.isTraceEnabled()) {\n+                log.trace(\"Found datasource2: \" + ds + \" from StoreContext using jndiName: \"\n+                    + ctx.getConnectionFactory2Name());\n+            }\n+            return ds;\n+        }\n+\n+        // If not set on context or value from context is not available try cf2 from config\n+        else{ \n+            ds = (DataSource) getConnectionFactory2();\n+            if (log.isTraceEnabled()) {\n+                log.trace(\"Found datasource 2: \"+ ds + \" from config. StoreContext: \" + ctx);\n+            }\n+        }\n+        \n+        // fallback to cf1 / datasource1\n+        if (ds == null) {\n+            if(log.isTraceEnabled()) { \n+                log.trace(\"Trying datasource1\");\n+            }\n             return getDataSource(ctx);\n+        }\n \n         // prefer the global connection 2 auth info if given\n         String user = getConnection2UserName();"},{"sha":"1cfd8a0a08e5e82239935ca1ed1f8a1a436535bb","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStoreManager.java","status":"modified","additions":5,"deletions":25,"changes":30,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStoreManager.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStoreManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/JDBCStoreManager.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -169,33 +169,13 @@ private final boolean useConnectionFactory2(StoreContext ctx) {\n     private final DataSource getDataSource(StoreContext ctx) {\n         DataSource ds;\n \n-        if (useConnectionFactory2(ctx)) {\n-            ds = (DataSource) ctx.getConnectionFactory2();\n-            if (ds != null) {\n-                ds = DataSourceFactory.decorateDataSource(ds, _conf, false);\n-            }\n-            else {\n-                ds = _conf.getDataSource2(ctx);\n-            }\n-        } else {\n-            ds = (DataSource) ctx.getConnectionFactory();\n-            if (ds != null) {\n-                ds = DataSourceFactory.decorateDataSource(ds, _conf, false);   \n-            }\n-            else {\n-                ds = _conf.getDataSource(ctx);\n-            }\n+        if(useConnectionFactory2(ctx)) { \n+            ds = _conf.getDataSource2(ctx); \n         }\n-        return ds;\n-    }\n-    \n-    private boolean useContextToGetDataSource(StoreContext ctx) { \n-        // configuration check to enable goes here. \n-        if (StringUtils.isBlank(ctx.getConnectionFactoryName()) \n-                && StringUtils.isBlank(ctx.getConnectionFactory2Name())) {\n-            return false;\n+        else {\n+            ds = _conf.getDataSource(ctx);\n         }\n-        return true;\n+        return ds; \n     }\n \n     public JDBCConfiguration getConfiguration() {"},{"sha":"51ce99f9fb8ed45e3673e60055022c75620f38c9","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/PreparedQueryImpl.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/PreparedQueryImpl.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/PreparedQueryImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/PreparedQueryImpl.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -42,6 +42,7 @@\n import org.apache.openjpa.kernel.QueryLanguages;\n import org.apache.openjpa.kernel.StoreQuery;\n import org.apache.openjpa.kernel.PreparedQueryCache.Exclusion;\n+import org.apache.openjpa.kernel.exps.Parameter;\n import org.apache.openjpa.kernel.exps.QueryExpressions;\n import org.apache.openjpa.lib.rop.RangeResultObjectProvider;\n import org.apache.openjpa.lib.rop.ResultList;\n@@ -406,7 +407,7 @@ private void setCollectionValuedParameter(Map<Integer,Object> result,\n     void setUserParameterPositions(List list) {\n         _userParamPositions = new HashMap<Object, int[]>();\n         for (int i = 1; list != null && i < list.size(); i += 2) {\n-            Object key = list.get(i);\n+            Object key = ((Parameter)list.get(i)).getParameterKey();\n             int p = (Integer)list.get(i-1);\n             int[] positions = _userParamPositions.get(key);\n             if (positions == null) {"},{"sha":"5bcaa41c2b619baef027d031390a49ba29b6fe8a","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/CollectionParam.java","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/CollectionParam.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/CollectionParam.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/CollectionParam.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -56,6 +56,13 @@ public CollectionParam(Object key, Class type) {\n         setImplicitType(type);\n     }\n \n+    public CollectionParam clone() {\n+        CollectionParam c = new CollectionParam(this._key, this._type);\n+        c._idx = this._idx;\n+        c._container = this._container;\n+        return c;\n+    }\n+\n     public Object getParameterKey() {\n         return _key;\n     }"},{"sha":"49d7376855265dbfd00c139bfc86664872fac65b","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java","status":"modified","additions":25,"deletions":8,"changes":33,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DB2Dictionary.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -33,6 +33,7 @@\n import java.util.StringTokenizer;\n \n import org.apache.openjpa.jdbc.identifier.DBIdentifier;\n+import org.apache.openjpa.jdbc.identifier.QualifiedDBIdentifier;\n import org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration;\n import org.apache.openjpa.jdbc.kernel.exps.FilterValue;\n import org.apache.openjpa.jdbc.kernel.exps.Lit;\n@@ -83,6 +84,9 @@\n     protected static final String useKeepExclusiveLockClause\n         = \"USE AND KEEP EXCLUSIVE LOCKS\";\n     protected static final String forReadOnlyClause = \"FOR READ ONLY\";\n+    protected static final String defaultSequenceSQL \n+        = \"SELECT SEQSCHEMA AS SEQUENCE_SCHEMA, SEQNAME AS SEQUENCE_NAME FROM SYSCAT.SEQUENCES\";\n+\n     protected String databaseProductName = \"\";\n     protected String databaseProductVersion = \"\";\n     protected int maj = 0;\n@@ -98,8 +102,7 @@ public DB2Dictionary() {\n \n         nextSequenceQuery = \"VALUES NEXTVAL FOR {0}\";\n \n-        sequenceSQL = \"SELECT SEQSCHEMA AS SEQUENCE_SCHEMA, \"\n-            + \"SEQNAME AS SEQUENCE_NAME FROM SYSCAT.SEQUENCES\";\n+        sequenceSQL = defaultSequenceSQL;\n         sequenceSchemaSQL = \"SEQSCHEMA = ?\";\n         sequenceNameSQL = \"SEQNAME = ?\";\n         characterColumnSize = 254;\n@@ -354,8 +357,14 @@ else if (isDB2UDBV82OrLater())\n                 + \"SYSIBM.SYSDUMMY1\";\n             nextSequenceQuery = \"SELECT NEXTVAL FOR {0} FROM \"\n                 + \"SYSIBM.SYSDUMMY1\";\n-            sequenceSQL = \"SELECT SCHEMA AS SEQUENCE_SCHEMA, \"\n-                + \"NAME AS SEQUENCE_NAME FROM SYSIBM.SYSSEQUENCES\";\n+            // allow users to set a non default sequenceSQL. \n+            if (defaultSequenceSQL.equals(sequenceSQL)){            \t\n+\t            sequenceSQL = \"SELECT SCHEMA AS SEQUENCE_SCHEMA, \"\n+\t                + \"NAME AS SEQUENCE_NAME FROM SYSIBM.SYSSEQUENCES\";\n+\t            \n+                if (log.isTraceEnabled())\n+                    log.trace(_loc.get(\"sequencesql-override\", new Object[] {defaultSequenceSQL, sequenceSQL}));\n+            }\n             sequenceSchemaSQL = \"SCHEMA = ?\";\n             sequenceNameSQL = \"NAME = ?\";\n             if (maj == 8) {\n@@ -372,8 +381,14 @@ else if (isDB2UDBV82OrLater())\n                 + \"SYSIBM.SYSDUMMY1\";\n             validationSQL = \"SELECT DISTINCT(CURRENT TIMESTAMP) FROM \"\n                 + \"QSYS2.SYSTABLES\";\n-            sequenceSQL = \"SELECT SEQUENCE_SCHEMA, \"\n-                + \"SEQUENCE_NAME FROM QSYS2.SYSSEQUENCES\";\n+            // allow users to set a non default sequenceSQL.\n+            if (defaultSequenceSQL.equals(sequenceSQL)){            \n+\t            sequenceSQL = \"SELECT SEQUENCE_SCHEMA, \"\n+\t                + \"SEQUENCE_NAME FROM QSYS2.SYSSEQUENCES\";\n+\t            \n+                if (log.isTraceEnabled())\n+                    log.trace(_loc.get(\"sequencesql-override\", new Object[] {defaultSequenceSQL, sequenceSQL}));\n+            }\n             sequenceSchemaSQL = \"SEQUENCE_SCHEMA = ?\";\n             sequenceNameSQL = \"SEQUENCE_NAME = ?\";\n             break;\n@@ -912,8 +927,10 @@ public void createIndexIfNecessary(Schema schema, DBIdentifier table,\n             // build the index for the sequence tables\n             // the index name will be the fully qualified table name + _IDX\n             Table tab = schema.getTable(table);\n-            DBIdentifier idxName = DBIdentifier.append(tab.getFullIdentifier(), \"IDX\");\n-            Index idx = tab.addIndex(getValidIndexName(idxName, tab));\n+            DBIdentifier fullIdxId = tab.getFullIdentifier().clone();\n+            DBIdentifier unQualifiedName = DBIdentifier.append(fullIdxId.getUnqualifiedName(), \"IDX\");\n+            fullIdxId.setName(getValidIndexName(unQualifiedName, tab));\n+            Index idx = tab.addIndex(fullIdxId);\n             idx.setUnique(true);\n             idx.addColumn(pkColumn);\n         }"},{"sha":"1bea4cd4cbe5d8cb6f94d38eed4168ca82687a15","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","status":"modified","additions":6,"deletions":1,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/DBDictionary.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -3408,8 +3408,13 @@ protected StringBuilder comment(StringBuilder buf, String comment) {\n         buf.append(\"CREATE \");\n         if (index.isUnique())\n             buf.append(\"UNIQUE \");\n-        String indexName = checkNameLength(toDBName(index.getIdentifier()), maxIndexNameLength, \n+        \n+        DBIdentifier fullIdxName = index.getIdentifier();\n+        DBIdentifier unQualifiedName = fullIdxName.getUnqualifiedName();\n+        checkNameLength(toDBName(unQualifiedName), maxIndexNameLength, \n                 \"long-index-name\");\n+        String indexName = toDBName(fullIdxName);\n+         \n         buf.append(\"INDEX \").append(indexName);\n         buf.append(\" ON \").append(getFullName(index.getTable(), false));\n         buf.append(\" (\").append(namingUtil.appendColumns(index.getColumns()))."},{"sha":"d98483e7287c54d29510c693e9c93bf1a6c0bab7","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SQLBuffer.java","status":"modified","additions":37,"deletions":24,"changes":61,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SQLBuffer.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SQLBuffer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SQLBuffer.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -32,6 +32,7 @@\n import org.apache.commons.lang.ObjectUtils;\n import org.apache.openjpa.jdbc.identifier.DBIdentifier;\n import org.apache.openjpa.jdbc.kernel.JDBCFetchConfiguration;\n+import org.apache.openjpa.jdbc.kernel.exps.CollectionParam;\n import org.apache.openjpa.jdbc.kernel.exps.Val;\n import org.apache.openjpa.jdbc.schema.Column;\n import org.apache.openjpa.jdbc.schema.Sequence;\n@@ -64,8 +65,9 @@\n     private List _cols = null;\n     \n     // Even element refers to an index of the _params list\n-    // Odd element refers to the user parameter key\n+    // Odd element refers to the user parameter\n     private List _userIndex = null;\n+    private List _userParams = null;\n     \n     /**\n      * Default constructor.\n@@ -142,44 +144,47 @@ private void append(SQLBuffer buf, int sqlIndex, int paramIndex,\n \n             if (paramIndex == _params.size()) {\n                 _params.addAll(buf._params);\n+                if (buf._userParams != null) {\n+                    if (_userParams == null)\n+                        _userParams = new ArrayList();\n+                   _userParams.addAll(paramIndex, buf._userParams);\n+                }\n+                if (buf._userIndex != null) {\n+                    if (_userIndex == null)\n+                        _userIndex = new ArrayList();\n+                    _userIndex.addAll(buf._userIndex);\n+                }\n                 if (buf._cols != null)\n                     _cols.addAll(buf._cols);\n                 else if (_cols != null)\n                     while (_cols.size() < _params.size())\n                         _cols.add(null);\n             } else {\n                 _params.addAll(paramIndex, buf._params);\n+                if ( buf._userParams != null) {\n+                    if (_userParams == null)\n+                        _userParams = new ArrayList();\n+                    _userParams.addAll(paramIndex, buf._userParams);\n+                }\n+                if (buf._userIndex != null) {\n+                     if (_userIndex == null) {\n+                         _userIndex = new ArrayList();\n+                     }\n+                     _userIndex.addAll(buf._userIndex);\n+                }\n                 if (buf._cols != null)\n                     _cols.addAll(paramIndex, buf._cols);\n                 else if (_cols != null)\n                     while (_cols.size() < _params.size())\n                         _cols.add(paramIndex, null);\n             }\n         }\n-        \n-        // adding user parameters from another buffer to this buffer\n-        // this buffer's user parameter index gets modified\n-        if (buf._userIndex == null && this._userIndex == null) {\n-            // do nothing\n-        } else if (buf._userIndex != null && this._userIndex == null) {\n-            // copy the other buffers data\n-            this._userIndex = new ArrayList(buf._userIndex);\n-        } else if (buf._userIndex == null && this._userIndex != null) {\n-            // nothing to add from the other buffer\n-        } else { // both has data. \n-            // modify this buffer's user parameter index\n-            int otherSize = buf._userIndex.size()/2;\n+\n+        if (_userIndex != null) {\n+            // fix up user parameter index\n             for (int i = 0; i < _userIndex.size(); i+=2) {\n-                int newIndex = ((Integer)_userIndex.get(i)).intValue() + otherSize;\n-                _userIndex.set(i, newIndex);\n+                _userIndex.set(i, _userParams.indexOf(_userIndex.get(i+1)));\n             }\n-            // append the other buffer's user parameters to this one\n-            for (int i = 0; i < buf._userIndex.size(); i+=2) {\n-                Object otherIndex = buf._userIndex.get(i);\n-                Object otherParam = buf._userIndex.get(i+1);\n-                _userIndex.add(otherIndex);\n-                _userIndex.add(otherParam);\n-            }            \n         }\n     }\n     \n@@ -293,6 +298,8 @@ else if (o instanceof Raw)\n             // we get the first non-null col\n             if (_params == null)\n                 _params = new ArrayList();\n+            if (_userParams == null)\n+                _userParams = new ArrayList();\n             if (col != null && _cols == null) {\n                 _cols = new ArrayList();\n                 while (_cols.size() < _params.size())\n@@ -301,12 +308,18 @@ else if (o instanceof Raw)\n \n             _params.add(o);\n             if (userParam != null) {\n+                Object param = userParam;\n+                if (userParam instanceof CollectionParam)\n+                    param = ((CollectionParam) userParam).clone();\n+                _userParams.add(param);\n                 if (_userIndex == null)\n                     _userIndex = new ArrayList();\n                 int index = _params.size()-1;\n                 _userIndex.add(index);\n-                _userIndex.add(userParam.getParameterKey());\n+                _userIndex.add(param);\n             }\n+            else\n+                _userParams.add(o);\n             if (_cols != null)\n                 _cols.add(col);\n         }"},{"sha":"11ed12367b73292c05fc90fab4431602e0a27933","filename":"openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SybaseDictionary.java","status":"modified","additions":46,"deletions":9,"changes":55,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SybaseDictionary.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SybaseDictionary.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/sql/SybaseDictionary.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -323,17 +323,50 @@ public Connection decorate(Connection conn)\n         \n         return ConcreteClassGenerator.newInstance(sybaseConnectionImpl, conn);\n     }\n+    \n+    /**\n+     * Helper method obtains a string value from a given column in a ResultSet. Strings provided are column names,\n+     * jdbcName will be tried first if an SQLException occurs we'll try the sybase name.\n+     */\n+    protected String getStringFromResultSet(ResultSet rs, String jdbcName, String sybaseName) throws SQLException {\n+        try { \n+            return rs.getString(jdbcName);\n+        }\n+        catch(SQLException sqle) { \n+            // if the generic JDBC identifier isn't found an SQLException will be thrown\n+            // try the Sybase specific id\n+            return rs.getString(sybaseName);\n+        }\n+    }\n+    /**\n+     * Helper method obtains a boolean value from a given column in a ResultSet. Strings provided are column names,\n+     * jdbcName will be tried first if an SQLException occurs we'll try the sybase name.\n+     */\n+    protected boolean getBooleanFromResultSet(ResultSet rs, String jdbcName, String sybaseName) throws SQLException {\n+        try { \n+            return rs.getBoolean(jdbcName);\n+        }\n+        catch(SQLException sqle) {\n+            // if the generic JDBC identifier isn't found an SQLException will be thrown\n+            // try the Sybase specific id\n+            return rs.getBoolean(sybaseName);\n+        }\n+    }\n \n     /**\n      * Create a new primary key from the information in the schema metadata.\n      */\n     protected PrimaryKey newPrimaryKey(ResultSet pkMeta)\n         throws SQLException {\n         PrimaryKey pk = new PrimaryKey();\n-        pk.setSchemaIdentifier(fromDBName(pkMeta.getString(\"table_owner\"), DBIdentifierType.SCHEMA));\n-        pk.setTableIdentifier(fromDBName(pkMeta.getString(\"table_name\"), DBIdentifierType.TABLE));\n-        pk.setColumnIdentifier(fromDBName(pkMeta.getString(\"column_name\"), DBIdentifierType.COLUMN));\n-        pk.setIdentifier(fromDBName(pkMeta.getString(\"index_name\"), DBIdentifierType.CONSTRAINT));\n+        pk.setSchemaIdentifier(fromDBName(getStringFromResultSet(pkMeta, \"TABLE_SCHEM\", \"table_owner\"),\n+            DBIdentifierType.SCHEMA));\n+        pk.setTableIdentifier(fromDBName(getStringFromResultSet(pkMeta, \"TABLE_NAME\", \"table_name\"),\n+            DBIdentifierType.TABLE));\n+        pk.setColumnIdentifier(fromDBName(getStringFromResultSet(pkMeta, \"COLUMN_NAME\", \"column_name\"),\n+            DBIdentifierType.COLUMN));\n+        pk.setIdentifier(fromDBName(getStringFromResultSet(pkMeta, \"PK_NAME\", \"index_name\"),\n+            DBIdentifierType.CONSTRAINT));\n         return pk;\n     }\n \n@@ -343,11 +376,15 @@ protected PrimaryKey newPrimaryKey(ResultSet pkMeta)\n     protected Index newIndex(ResultSet idxMeta)\n         throws SQLException {\n         Index idx = new Index();\n-        idx.setSchemaIdentifier(fromDBName(idxMeta.getString(\"table_owner\"), DBIdentifierType.SCHEMA));\n-        idx.setTableIdentifier(fromDBName(idxMeta.getString(\"table_name\"), DBIdentifierType.TABLE));\n-        idx.setColumnIdentifier(fromDBName(idxMeta.getString(\"column_name\"), DBIdentifierType.COLUMN));\n-        idx.setIdentifier(fromDBName(idxMeta.getString(\"index_name\"), DBIdentifierType.INDEX));\n-        idx.setUnique(!idxMeta.getBoolean(\"non_unique\"));\n+        idx.setSchemaIdentifier(fromDBName(getStringFromResultSet(idxMeta, \"TABLE_SCHEM\", \"table_owner\"),\n+            DBIdentifierType.SCHEMA));\n+        idx.setTableIdentifier(fromDBName(getStringFromResultSet(idxMeta, \"TABLE_NAME\", \"table_name\"),\n+            DBIdentifierType.TABLE));\n+        idx.setColumnIdentifier(fromDBName(getStringFromResultSet(idxMeta, \"COLUMN_NAME\", \"column_name\"),\n+            DBIdentifierType.COLUMN));\n+        idx.setIdentifier(fromDBName(getStringFromResultSet(idxMeta, \"INDEX_NAME\", \"index_name\"),\n+            DBIdentifierType.INDEX));\n+        idx.setUnique(!getBooleanFromResultSet(idxMeta, \"NON_UNIQUE\", \"non_unique\"));\n         return idx;\n     }\n "},{"sha":"e291620c51ca6345b29642cadbeca2544be49819","filename":"openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/conf/localizer.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/conf/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/conf/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/conf/localizer.properties?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -246,3 +246,5 @@ map-factory: Using mapping factory \"{0}\".\n meta-factory: Using metadata factory \"{0}\".\n unknown-datasource: JNDI lookup for \"{0}\" returned \"{1}\", which is not a  \\\n \tjavax.sql.DataSource object. \n+invalid-datasource: JNDI lookup for \"{0}\" specified on the StoreContext (\\\n+    EntityManager) returned null, the resulting EntityManager cannot be used. "},{"sha":"4a4cbdf4c4e015a12922f6fc7ed1ade8a9eb4b4c","filename":"openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/localizer.properties","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-jdbc/src/main/resources/org/apache/openjpa/jdbc/sql/localizer.properties?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -208,4 +208,12 @@ can_not_get_current_schema: Unable to get current schema. SQLException message i\n cannot-determine-identifier-base-case: Unable to determine the case to use for \\\n     identifiers.  The default value of \"{0}\" will be used.\n can-not-execute: Unable to execute {0}.\n+sequencesql-override: Going to override the DB2 specific default for the \\\n+    DBDictionary.sequenceSQL string, which is: \"{0}\" \\\n+    with the value of: \"{1}\", which is the default sequenceSQL string for DB2 on the give operating system.  \\\n+    If the user intends to use a value of: \"{0}\" by defining it as a DBDictionary property, \\\n+    please change the case of at least one of the charaters of the string defined in \\\n+    the property.  This will allow openJPA to detect a difference between the DB2 default \\\n+    string and the string set in the property and will further allow openJPA to use the \\\n+    string defined by the property rather than the default string for DB2.\n "},{"sha":"ee1cae0d69443aa5d00be5d1a5e31de13b7d0a46","filename":"openjpa-kernel/pom.xml","status":"modified","additions":29,"deletions":15,"changes":44,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-kernel/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-kernel/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/pom.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -21,23 +21,26 @@\n     Maven release plugin requires the project tag to be on a single line. \n -->\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n     <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <groupId>org.apache.openjpa</groupId>\n+        <artifactId>openjpa-parent</artifactId>\n+        <version>2.0.1</version>\n+    </parent>\n+\n     <groupId>org.apache.openjpa</groupId>\n     <artifactId>openjpa-kernel</artifactId>\n     <packaging>jar</packaging>\n     <name>OpenJPA Kernel</name>\n     <description>OpenJPA Kernel</description>\n-    <url>http://openjpa.apache.org</url>\n-    <parent>\n-        <groupId>org.apache.openjpa</groupId>\n-        <artifactId>openjpa-parent</artifactId>\n-        <version>2.0.0</version>\n-    </parent>\n+\n     <dependencies>\n         <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa-lib</artifactId>\n-            <version>${pom.version}</version>\n+            <version>${project.version}</version>\n         </dependency>\n         <dependency>\n             <groupId>org.apache.geronimo.specs</groupId>\n@@ -63,6 +66,7 @@\n             <scope>provided</scope>\n         </dependency>\n     </dependencies>\n+\n     <build>\n         <plugins>\n             <plugin>\n@@ -118,17 +122,26 @@\n             <plugin>\n                 <groupId>org.apache.maven.plugins</groupId>\n                 <artifactId>maven-jar-plugin</artifactId>\n-                <configuration>\n-                    <archive>\n-                        <manifestEntries>\n-                            <Agent-Class>org.apache.openjpa.enhance.InstrumentationFactory</Agent-Class>\n-                        </manifestEntries>\n-                    </archive>\n-                </configuration>\n                 <executions>\n+                    <execution>\n+                        <id>default-jar</id>\n+                        <goals>\n+                            <goal>jar</goal>\n+                        </goals>\n+                        <configuration>\n+                            <archive>\n+                                <manifest>\n+                                   <addDefaultImplementationEntries>true</addDefaultImplementationEntries>\n+                                </manifest>\n+                                <manifestEntries>\n+                                    <Implementation-Build>${buildNumber}</Implementation-Build>\n+                                    <Agent-Class>org.apache.openjpa.enhance.InstrumentationFactory</Agent-Class>\n+                                </manifestEntries>\n+                            </archive>\n+                        </configuration>\n+                    </execution>\n                     <execution>\n                         <id>attach-tests</id>\n-                        <phase>verify</phase>\n                         <goals>\n                             <goal>test-jar</goal>\n                         </goals>\n@@ -137,6 +150,7 @@\n             </plugin>\n         </plugins>\n     </build>\n+\n     <repositories>\n         <!-- \n             Internal (in SVN) repository which contains jar files that are not"},{"sha":"5f4e683c0dc1415646ba6109edc87d1dd5a709fc","filename":"openjpa-kernel/src/main/appended-resources/META-INF/NOTICE.vm","status":"modified","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-kernel/src/main/appended-resources/META-INF/NOTICE.vm","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-kernel/src/main/appended-resources/META-INF/NOTICE.vm","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/appended-resources/META-INF/NOTICE.vm?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -1,3 +1,21 @@\n+##\n+## Licensed to the Apache Software Foundation (ASF) under one\n+## or more contributor license agreements.  See the NOTICE file\n+## distributed with this work for additional information\n+## regarding copyright ownership.  The ASF licenses this file\n+## to you under the Apache License, Version 2.0 (the\n+## \"License\"); you may not use this file except in compliance\n+## with the License.  You may obtain a copy of the License at\n+##\n+##  http://www.apache.org/licenses/LICENSE-2.0\n+##\n+## Unless required by applicable law or agreed to in writing,\n+## software distributed under the License is distributed on an\n+## \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+## KIND, either express or implied.  See the License for the\n+## specific language governing permissions and limitations\n+## under the License.\n+##\n \n openjpa-kernel includes software written by Miroslav Nachev\n "},{"sha":"6af2487050e11bda646485fcda65e31dbf98246f","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java","status":"modified","additions":6,"deletions":10,"changes":16,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/enhance/PCEnhancer.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -117,7 +117,7 @@\n     // public int getEnhancementContractVersion()\n     public static final int ENHANCER_VERSION = 2;\n     \n-    boolean _addVersionInitFlag = true;\n+    boolean _addVersionInitFlag = true; \n \n     public static final int ENHANCE_NONE = 0;\n     public static final int ENHANCE_AWARE = 2 << 0;\n@@ -2772,7 +2772,7 @@ private void addFields() {\n         _pc.declareField(PRE + \"FieldTypes\", Class[].class).setStatic(true);\n         _pc.declareField(PRE + \"FieldFlags\", byte[].class).setStatic(true);\n         _pc.declareField(SUPER, Class.class).setStatic(true);\n-        if(_addVersionInitFlag && _meta.getVersionField()!=null){\n+        if (_addVersionInitFlag && _meta.getVersionField() != null) {\n             // protected transient boolean pcVersionInit;\n             BCField field = _pc.declareField(VERSION_INIT_STR, boolean.class);\n             field.makeProtected();\n@@ -3229,17 +3229,15 @@ private boolean writeIsDetachedMethod(Code code)\n             if (!_addVersionInitFlag){\n                 // else return false;\n                 ifins.setTarget(code.getstatic().setField(Boolean.class, \"FALSE\", Boolean.class));\n-            }else{\n-                FieldMetaData versionInit = _meta.getDeclaredField(VERSION_INIT_STR);\n-                \n+            }else{              \n                 // noop\n                 ifins.setTarget(code.nop());\n                 // if (pcVersionInit != false)\n                 // return true\n                 // else return false;\n                 loadManagedInstance(code, false);\n-                getfield(code, null, versionInit.getName());\n-                ifins = ifDefaultValue(code, versionInit);\n+                getfield(code, null, VERSION_INIT_STR);\n+                ifins = code.ifeq();\n                 code.getstatic().setField(Boolean.class, \"TRUE\", Boolean.class);\n                 code.areturn();\n                 ifins.setTarget(code.nop());\n@@ -3709,12 +3707,10 @@ private void addSetMethod(int index, FieldMetaData fmd)\n         addSetManagedValueCode(code, fmd);\n         if(fmd.isVersion()==true && _addVersionInitFlag){\n             // if we are setting the version, flip the versionInit flag to true\n-            FieldMetaData v = _meta.addDeclaredField(VERSION_INIT_STR, boolean.class);\n-            v.setTransient(true);\n             loadManagedInstance(code, true);\n             code.constant().setValue(1);\n             // pcVersionInit = true;\n-            putfield(code, null, v.getName(), v.getDeclaredType());   \n+            putfield(code, null, VERSION_INIT_STR, boolean.class);   \n         }\n         code.vreturn();\n "},{"sha":"3972a32a8c4b9799e44365a6ac2c62010c2a6c62","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractBrokerFactory.java","status":"modified","additions":13,"deletions":0,"changes":13,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractBrokerFactory.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractBrokerFactory.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/AbstractBrokerFactory.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -31,13 +31,15 @@\n import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.locks.ReentrantLock;\n \n+import javax.naming.NamingException;\n import javax.transaction.Status;\n import javax.transaction.Synchronization;\n import javax.transaction.Transaction;\n import javax.transaction.TransactionManager;\n \n import org.apache.commons.collections.set.MapBackedSet;\n import org.apache.commons.lang.StringUtils;\n+import org.apache.commons.lang.exception.NestableRuntimeException;\n import org.apache.openjpa.conf.BrokerValue;\n import org.apache.openjpa.conf.MetaDataRepositoryValue;\n import org.apache.openjpa.conf.OpenJPAConfiguration;\n@@ -190,6 +192,17 @@ public Broker newBroker(String user, String pass, boolean managed, int connRetai\n         String cf1Name, String cf2Name) {\n         try {\n             assertOpen();\n+            \n+            if(StringUtils.isNotEmpty(cf1Name)) {\n+                // If the cfName has been set on the broker try looking up now.\n+                try { \n+                    _conf.getConnectionFactory();\n+                }\n+                catch(UserException ue) { \n+                     // try setting the broker's CF into the configuration. \n+                    _conf.setConnectionFactoryName(cf1Name); \n+                }\n+            }\n             makeReadOnly();\n \n             Broker broker = null;"},{"sha":"8e4c31293d4b0ca3e6ceff96ae23d6fce1cb6c8b","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DistinctResultList.java","status":"modified","additions":10,"deletions":1,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DistinctResultList.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DistinctResultList.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/kernel/DistinctResultList.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.openjpa.kernel;\n \n+import java.io.ObjectStreamException;\n+import java.io.Serializable;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Iterator;\n@@ -39,7 +41,9 @@\n  * @param <E>\n  *            element type\n  */\n-public class DistinctResultList<E> implements List<E> {\n+public class DistinctResultList<E> implements List<E>, Serializable {\n+    private static final long serialVersionUID = -6140119764940777922L;\n+\n     private final ArrayList<E> _del;\n     private final RuntimeExceptionTranslator _trans;\n \n@@ -204,4 +208,9 @@ protected RuntimeException translate(RuntimeException re) {\n         return (_trans == null) ? re : _trans.translate(re);\n     }\n \n+    public Object writeReplace()\n+        throws ObjectStreamException {\n+        return _del;\n+    }\n+\n }"},{"sha":"d5148a0fbe0f98a1b1b5af679cdd7298c8ea2f00","filename":"openjpa-kernel/src/main/java/org/apache/openjpa/util/StringId.java","status":"modified","additions":6,"deletions":4,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-kernel/src/main/java/org/apache/openjpa/util/StringId.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-kernel/src/main/java/org/apache/openjpa/util/StringId.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-kernel/src/main/java/org/apache/openjpa/util/StringId.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -18,6 +18,8 @@\n  */\n package org.apache.openjpa.util;\n \n+import org.apache.commons.lang.StringUtils;\n+\n /**\n  * {@link OpenJPAId} subclass appropriate for String fields.\n  *\n@@ -27,14 +29,14 @@\n \n     private final String key;\n \n-    public StringId(Class cls, String key) {\n+    public StringId(Class<?> cls, String key) {\n         super(cls);\n-        this.key = (key == null) ? \"\" : key;\n+        this.key = (key == null) ? \"\" : StringUtils.stripEnd(key, null);\n     }\n \n-    public StringId(Class cls, String key, boolean subs) {\n+    public StringId(Class<?> cls, String key, boolean subs) {\n         super(cls, subs);\n-        this.key = (key == null) ? \"\" : key;\n+        this.key = (key == null) ? \"\" : StringUtils.stripEnd(key, null);\n     }\n \n     public String getId() {"},{"sha":"c47d69f7680658759cc95efbe3004bbf439daaa5","filename":"openjpa-lib/pom.xml","status":"modified","additions":11,"deletions":19,"changes":30,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-lib/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-lib/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/pom.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -21,18 +21,21 @@\n     Maven release plugin requires the project tag to be on a single line. \n -->\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n     <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <groupId>org.apache.openjpa</groupId>\n+        <artifactId>openjpa-parent</artifactId>\n+        <version>2.0.1</version>\n+    </parent>\n+\n     <groupId>org.apache.openjpa</groupId>\n     <artifactId>openjpa-lib</artifactId>\n     <packaging>jar</packaging>\n     <name>OpenJPA Utilities Library</name>\n     <description>OpenJPA Utilities Library</description>\n-    <url>http://openjpa.apache.org</url>\n-    <parent>\n-        <groupId>org.apache.openjpa</groupId>\n-        <artifactId>openjpa-parent</artifactId>\n-        <version>2.0.0</version>\n-    </parent>\n+\n     <dependencies>\n         <dependency>\n             <groupId>jakarta-regexp</groupId>\n@@ -42,6 +45,7 @@\n         <dependency>\n             <groupId>commons-logging</groupId>\n             <artifactId>commons-logging</artifactId>\n+            <scope>provided</scope>\n         </dependency>\n         <dependency>\n             <groupId>log4j</groupId>\n@@ -71,6 +75,7 @@\n             <scope>provided</scope>\n         </dependency>        \n     </dependencies>\n+\n     <build>\n         <plugins>\n             <!--\n@@ -115,19 +120,6 @@ openjpa.version=${project.version}</echo>\n                     </execution>\n                 </executions>\n             </plugin>\n-            <plugin>\n-                <groupId>org.apache.maven.plugins</groupId>\n-                <artifactId>maven-jar-plugin</artifactId>\n-                <executions>\n-                    <execution>\n-                        <id>attach-tests</id>\n-                        <phase>verify</phase>\n-                        <goals>\n-                            <goal>test-jar</goal>\n-                        </goals>\n-                    </execution>\n-                </executions>\n-            </plugin>\n         </plugins>\n     </build>\n </project>"},{"sha":"cef48dfea947efaac65847c2c3261db77b418661","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator.java","status":"modified","additions":22,"deletions":1,"changes":23,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/jdbc/LoggingConnectionDecorator.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -125,6 +125,7 @@\n     private int _warningAction = WARN_IGNORE;\n     private SQLWarningHandler _warningHandler;\n     private boolean _trackParameters = true;\n+    private boolean _printParameters = false;\n \n     /**\n      * If set to <code>true</code>, pretty-print SQL by running it\n@@ -182,6 +183,21 @@ public boolean getTrackParameters() {\n         return _trackParameters;\n     }\n \n+    /**\n+     * <p>\n+     * Whether parameter values will be printed in exception messages or in trace. This is different from\n+     * trackParameters which controls whether OpenJPA will track parameters internally (visible while debugging and used\n+     * in batching).\n+     * </p>\n+     */\n+    public boolean getPrintParameters() {\n+        return _printParameters;\n+    }\n+\n+    public void setPrintParameters(boolean printParameters) {\n+        _printParameters = printParameters;\n+    }\n+\n     /**\n      * What to do with SQL warnings.\n      */\n@@ -1392,7 +1408,12 @@ protected void appendInfo(StringBuffer buf) {\n                     paramBuf = new StringBuilder();\n                     for (Iterator<String> itr = _params.iterator(); itr\n                         .hasNext();) {\n-                        paramBuf.append(itr.next());\n+                        if(_printParameters) { \n+                            paramBuf.append(itr.next());\n+                        } else { \n+                            paramBuf.append(\"?\");\n+                            itr.next();\n+                        }\n                         if (itr.hasNext())\n                             paramBuf.append(\", \");\n                     }"},{"sha":"ef67d3ac0e19fe957fc2036f8ca2b466f68a2c79","filename":"openjpa-persistence-jdbc/pom.xml","status":"modified","additions":8,"deletions":39,"changes":47,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/pom.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -27,7 +27,7 @@\n     <parent>\n         <groupId>org.apache.openjpa</groupId>\n         <artifactId>openjpa-parent</artifactId>\n-        <version>2.0.0</version>\n+        <version>2.0.1</version>\n     </parent>\n \n     <groupId>org.apache.openjpa</groupId>\n@@ -160,6 +160,10 @@\n                 <connection.url>${openjpa.postgresql.url}</connection.url>\n                 <connection.username>${openjpa.postgresql.username}</connection.username>\n                 <connection.password>${openjpa.postgresql.password}</connection.password>\n+                <!-- DBCP overrides -->\n+                <dbcp.maxIdle>0</dbcp.maxIdle>\n+                <dbcp.minIdle>0</dbcp.minIdle>\n+                <dbcp.maxActive>20</dbcp.maxActive>\n             </properties>\n         </profile>\n \n@@ -679,12 +683,12 @@\n         <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa-jdbc</artifactId>\n-            <version>${pom.version}</version>\n+            <version>${project.version}</version>\n         </dependency>\n         <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa-persistence</artifactId>\n-            <version>${pom.version}</version>\n+            <version>${project.version}</version>\n         </dependency>\n         <dependency>\n             <groupId>commons-dbcp</groupId>\n@@ -719,6 +723,7 @@\n             <scope>test</scope>\n         </dependency>\n     </dependencies>\n+\n     <build>\n         <plugins>\n             <plugin>\n@@ -745,42 +750,6 @@\n                     </execution>\n                 </executions>\n             </plugin>\n-            <!-- \n-                 Create a o-p-j-tests.jar so we can reuse some of the base\n-                 TestCase classes in other modules, like openjpa-integration.\n-            -->\n-            <plugin> \n-                <groupId>org.apache.maven.plugins</groupId>\n-                <artifactId>maven-jar-plugin</artifactId>\n-                <executions>\n-                    <execution>\n-                        <goals>\n-                            <goal>jar</goal>\n-                        </goals>\n-                        <configuration>\n-                            <classifier>test-base</classifier>\n-                            <classesDirectory>${project.build.testOutputDirectory}</classesDirectory>\n-                            <includes>\n-                                <!-- Note: Including entities in this jar will\n-                                     cause problems for any modules that need\n-                                     to enhance their own entities.\n-                                -->\n-                                <include>**/org/apache/openjpa/persistence/test/*.class</include>\n-                                <include>META-INF/LICENSE*</include>\n-                                <include>META-INF/NOTICE*</include>\n-                                <include>META-INF/DISCLAIM*</include>\n-                            </includes>\n-                        </configuration>\n-                    </execution>\n-                    <execution>\n-                        <id>attach-tests</id>\n-                        <phase>verify</phase>\n-                        <goals>\n-                            <goal>test-jar</goal>\n-                        </goals>\n-                    </execution>\n-                </executions>\n-            </plugin>\n             <plugin>\n                 <groupId>org.apache.maven.plugins</groupId>\n                 <artifactId>maven-surefire-plugin</artifactId>"},{"sha":"3359bfd9a11e424a5c24dd59a325a11e6285c4d9","filename":"openjpa-persistence-jdbc/src/main/ant/enhancer.xml","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/main/ant/enhancer.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/main/ant/enhancer.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/ant/enhancer.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -75,6 +75,7 @@\n                  dir=\"${project.build.testOutputDirectory}\">\n             <include name=\"**/*.class\" />\n             <exclude name=\"**/inheritance/serializable/*.class\" />\n+            <exclude name=\"**/detach/serializable/*.class\" />\n             <exclude name=\"**/xml/*.class\" />\n             <exclude name=\"**/Unenhanced*.class\" />\n             <exclude name=\"**/AbstractUnenhanced*.class\" />\n@@ -92,6 +93,7 @@\n             <classpath refid=\"cp\" />\n             <fileset dir=\"${project.build.testOutputDirectory}\">\n                 <include name=\"**/inheritance/serializable/*.class\" />\n+                <include name=\"**/detach/serializable/*.class\" />\n                 <!--  include files from orm.xml -->\n                 <include name=\"**/xml/*.class\" />\n \t\t\t\t<exclude name=\"**/persistence/delimited/identifiers/xml/*.class\"/>"},{"sha":"c51e3fd1af51e69eec99925822e3beeb6384f1a2","filename":"openjpa-persistence-jdbc/src/main/appended-resources/META-INF/NOTICE.vm","status":"modified","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/main/appended-resources/META-INF/NOTICE.vm","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/main/appended-resources/META-INF/NOTICE.vm","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/main/appended-resources/META-INF/NOTICE.vm?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -1 +1,20 @@\n+##\n+## Licensed to the Apache Software Foundation (ASF) under one\n+## or more contributor license agreements.  See the NOTICE file\n+## distributed with this work for additional information\n+## regarding copyright ownership.  The ASF licenses this file\n+## to you under the Apache License, Version 2.0 (the\n+## \"License\"); you may not use this file except in compliance\n+## with the License.  You may obtain a copy of the License at\n+##\n+##  http://www.apache.org/licenses/LICENSE-2.0\n+##\n+## Unless required by applicable law or agreed to in writing,\n+## software distributed under the License is distributed on an\n+## \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+## KIND, either express or implied.  See the License for the\n+## specific language governing permissions and limitations\n+## under the License.\n+##\n+\n "},{"sha":"b102c9a9e119612a91b5d10bf1b90e41499f6cf1","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/batch/exception/TestBatchLimitException.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/batch/exception/TestBatchLimitException.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/batch/exception/TestBatchLimitException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/batch/exception/TestBatchLimitException.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -51,6 +51,7 @@ public EntityManagerFactory newEmf(String batchLimit) {\n                 \"openjpa.jdbc.SynchronizeMappings\", \n                 \"buildSchema(ForeignKeys=true)\",\n                 \"openjpa.jdbc.DBDictionary\", batchLimit, \n+                \"openjpa.ConnectionFactoryProperties\", \"PrintParameters=true\",\n                 CLEAR_TABLES);\n \n         assertNotNull(\"Unable to create EntityManagerFactory\", emf);"},{"sha":"e40f9bdf7c651b46ee8f2a7616a597656766a71e","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/conf/Person.java","status":"modified","additions":6,"deletions":0,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/conf/Person.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/conf/Person.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/conf/Person.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -47,6 +47,12 @@ public Person(int id) {\n         setId(id);\n     }\n \n+    public Person(int id, String name) {\n+        super();\n+        setId(id);\n+        setName(name);\n+    }\n+\n     public int getId() {\n         return id;\n     }"},{"sha":"f2c553b1e02e8045ab6d74456c9c3957b6c77503","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/conf/TestOverrideNonJtaDataSource.java","status":"added","additions":211,"deletions":0,"changes":211,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/conf/TestOverrideNonJtaDataSource.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/conf/TestOverrideNonJtaDataSource.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/conf/TestOverrideNonJtaDataSource.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -0,0 +1,211 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.conf;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import javax.persistence.EntityExistsException;\n+import javax.persistence.EntityManager;\n+import javax.persistence.EntityManagerFactory;\n+import javax.persistence.RollbackException;\n+\n+import org.apache.openjpa.persistence.ArgumentException;\n+import org.apache.openjpa.persistence.test.AbstractPersistenceTestCase;\n+\n+public class TestOverrideNonJtaDataSource extends AbstractPersistenceTestCase {\n+    private String defaultJndiName = \"jdbc/mocked\";\n+    private String[] jndiNames = { \"jdbc/mocked1\" };\n+\n+    protected void init(String cfName) {\n+        EntityManagerFactory emf = getEmf(\"openjpa.ConnectionFactoryName\", cfName, true);\n+        EntityManager em = emf.createEntityManager();\n+        em.getTransaction().begin();\n+        em.createQuery(\"Delete from confPerson\").executeUpdate();\n+        em.getTransaction().commit();\n+        em.close();\n+        emf.close();\n+    }\n+\n+    protected void setUp() {\n+        // create an EMF for each database.\n+        init(defaultJndiName);\n+        init(jndiNames[0]);\n+    }\n+    \n+    protected EntityManagerFactory getEmf(String cfPropertyName, String cfPropertyValue) {\n+        return getEmf(cfPropertyName, cfPropertyValue, false);\n+    }\n+\n+    protected EntityManagerFactory getEmf(String cfPropertyName, String cfPropertyValue, boolean syncMappings) {\n+        // null out the driver to prevent system properties from taking effect.\n+        if (syncMappings) {\n+            return createEMF(\n+                \"openjpa.jdbc.SynchronizeMappings\", \"buildSchema\",\n+                \"openjpa.ConnectionDriverName\", \"\",\n+                \"openjpa.ConnectionFactoryMode\", \"managed\",\n+                \"openjpa.ConnectionFactoryName\", defaultJndiName,  // must have a cf1, to initialize configuration\n+                cfPropertyName,cfPropertyValue, \n+                Person.class);\n+        }\n+        return createEMF(\n+            \"openjpa.ConnectionDriverName\", \"\", \n+            \"openjpa.ConnectionFactoryMode\", \"managed\",\n+            \"openjpa.ConnectionFactoryName\", defaultJndiName, // must have a cf1, to initialize configuration\n+            cfPropertyName,cfPropertyValue, \n+            Person.class);\n+    }\n+\n+    protected EntityManager getEm(EntityManagerFactory emf, String name, String value) {\n+        Map<String, Object> props = new HashMap<String, Object>();\n+        props.put(name, value);\n+        return emf.createEntityManager(props);\n+    }\n+\n+    public String getPersistenceUnitName() {\n+        return \"TestCfSwitching\";\n+    }\n+\n+    public void testConnectionFactoryName() {\n+        // TODO Disable for non derby.\n+        // split out so that we can try javax.persistence.jtaDataSource in the future.\n+        overridePropertyOnEM(\"openjpa.ConnectionFactory2Name\", jndiNames[0]);\n+    }\n+\n+    public void testJtaDataSource() {\n+        // TODO Disable for non derby.\n+        // split out so that we can try javax.persistence.jtaDataSource in the future.\n+        overridePropertyOnEM(\"javax.persistence.nonJtaDataSource\", jndiNames[0]);\n+    }\n+\n+    public void overridePropertyOnEM(String name, String value) {\n+        // use the default JndiName for the base EntityManagerFactory\n+        EntityManagerFactory emf = getEmf(name, defaultJndiName);\n+        assertNotNull(emf);\n+\n+        EntityManager em = emf.createEntityManager();\n+        assertNotNull(em);\n+\n+        EntityManager em1 = getEm(emf, name, value);\n+        assertNotNull(em1);\n+\n+        // 'prove' that we're using a different database by inserting the same row\n+        em.getTransaction().begin();\n+        em.persist(new Person(1, \"em\"));\n+        em.getTransaction().commit();\n+\n+        em1.getTransaction().begin();\n+        em1.persist(new Person(1, \"em1\"));\n+        em1.getTransaction().commit();\n+\n+        em.clear();\n+        em1.clear();\n+\n+        Person p = em.find(Person.class, 1);\n+        Person p1 = em1.find(Person.class, 1);\n+        assertNotSame(p, p1);\n+        assertEquals(\"em\", p.getName());\n+        assertEquals(\"em1\", p1.getName());\n+\n+        em.clear();\n+        em1.clear();\n+\n+        // make sure inserting the same row again fails.\n+        em.getTransaction().begin();\n+        em.persist(new Person(1));\n+        try {\n+            em.getTransaction().commit();\n+            fail(\"Should not be able to commit the same row a second time\");\n+        } catch (RollbackException rbe) {\n+            assertTrue(rbe.getCause() instanceof EntityExistsException);\n+            // expected\n+        }\n+\n+        em1.getTransaction().begin();\n+        em1.persist(new Person(1));\n+        try {\n+            em1.getTransaction().commit();\n+            fail(\"Should not be able to commit the same row a second time\");\n+        } catch (RollbackException rbe) {\n+            assertTrue(rbe.getCause() instanceof EntityExistsException);\n+            // expected\n+        }\n+        em.close();\n+        em1.close();\n+        emf.close();\n+    }\n+\n+    public void testInvalidCfName() throws Exception {\n+        // ensure EM creation fails - when provided an invalid JNDI name\n+        EntityManagerFactory emf = null;\n+        try {\n+            emf = getEmf(\"openjpa.ConnectionFactory2Name\", defaultJndiName);\n+            getEm(emf, \"openjpa.ConnectionFactory2Name\", \"jdbc/NotReal\");\n+            fail(\"Expected an excepton when creating an EM with a bogus JNDI name\");\n+        } catch (ArgumentException e) {\n+            assertTrue(e.isFatal());\n+            System.out.println(e);\n+            assertTrue(e.getMessage().contains(\"jdbc/NotReal\")); // ensure failing JNDI name is in the message\n+            assertTrue(e.getMessage().contains(\"EntityManager\")); // ensure where the JNDI name came from is in message\n+        }\n+    }\n+    \n+    public void testDataCache() { \n+        EntityManagerFactory emf = null;\n+    \n+        emf = getEmf(\"openjpa.DataCache\", \"true\");\n+        try {\n+            getEm(emf, \"openjpa.ConnectionFactoryName\", \"jdbc/NotReal\");\n+            fail(\"Expected an excepton when creating an EM with a bogus JNDI name\");\n+        } catch (ArgumentException e) {\n+            assertTrue(e.isFatal());\n+            assertTrue(e.getMessage().contains(\"jdbc/NotReal\")); \n+            assertTrue(e.getMessage().contains(\"L2 Cache\")); \n+        }\n+    }\n+    \n+    public void testQueryCache() { \n+        EntityManagerFactory emf = null;\n+    \n+        emf = getEmf(\"openjpa.QueryCache\", \"true\");\n+        try {\n+            getEm(emf, \"openjpa.ConnectionFactoryName\", \"jdbc/NotReal\");\n+            fail(\"Expected an excepton when creating an EM with a bogus JNDI name\");\n+        } catch (ArgumentException e) {\n+            assertTrue(e.isFatal());\n+            assertTrue(e.getMessage().contains(\"jdbc/NotReal\")); \n+            assertTrue(e.getMessage().contains(\"openjpa.QueryCache\")); \n+        }\n+    }\n+    \n+    public void testSyncMappings() { \n+        EntityManagerFactory emf = null;\n+    \n+        emf = getEmf(\"openjpa.jdbc.SynchronizeMappings\", \"buildSchema\");\n+        try {\n+            getEm(emf, \"openjpa.ConnectionFactoryName\", \"jdbc/NotReal\");\n+            fail(\"Expected an excepton when creating an EM with a bogus JNDI name\");\n+        } catch (ArgumentException e) {\n+            assertTrue(e.isFatal());\n+            assertTrue(e.getMessage().contains(\"jdbc/NotReal\")); \n+            assertTrue(e.getMessage().contains(\"openjpa.jdbc.SynchronizeMappings\")); \n+        }\n+    }\n+}\n+"},{"sha":"ede39d324169cddce48584c4769d4cf66190a39c","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/conf/TestSwitchConnection.java","status":"modified","additions":108,"deletions":28,"changes":136,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/conf/TestSwitchConnection.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/conf/TestSwitchConnection.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/conf/TestSwitchConnection.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -26,78 +26,103 @@\n import javax.persistence.EntityManagerFactory;\n import javax.persistence.RollbackException;\n \n+import org.apache.openjpa.persistence.ArgumentException;\n import org.apache.openjpa.persistence.test.AbstractPersistenceTestCase;\n+import org.apache.openjpa.util.UserException;\n \n public class TestSwitchConnection extends AbstractPersistenceTestCase {\n     private String defaultJndiName = \"jdbc/mocked\";\n     private String[] jndiNames = { \"jdbc/mocked1\" };\n-    \n-    protected void initEMF(String cfName) { \n-        EntityManagerFactory emf = getEmf(\"openjpa.ConnectionFactoryName\", cfName);\n-        \n+\n+    protected void init(String cfName) {\n+        EntityManagerFactory emf = getEmf(\"openjpa.ConnectionFactoryName\", cfName, true);\n         EntityManager em = emf.createEntityManager();\n         em.getTransaction().begin();\n         em.createQuery(\"Delete from confPerson\").executeUpdate();\n         em.getTransaction().commit();\n         em.close();\n-        \n         emf.close();\n     }\n+\n+    protected void setUp() {\n+        // create an EMF for each database.\n+        init(defaultJndiName);\n+        init(jndiNames[0]);\n+    }\n+\n+    protected EntityManagerFactory getEmf(String cfPropertyName, String cfPropertyValue) {\n+        return getEmf(cfPropertyName, cfPropertyValue, false);\n+    }\n     \n-    protected EntityManagerFactory getEmf(String cfPropertyName, String cfPropertyValue) { \n+    protected EntityManagerFactory getEmf(String cfPropertyName, String cfPropertyValue, boolean syncMappings) {\n         // null out the driver to prevent system properties from taking effect.\n-        // do not set connectionFactoryModeManaged - or connectionFactory2 will be used. \n+        // do not set connectionFactoryModeManaged - or connectionFactory2 will be used.\n+        if(syncMappings) { \n+            return createEMF( \n+                \"openjpa.jdbc.SynchronizeMappings\", \"buildSchema\",\n+                \"openjpa.ConnectionDriverName\", \"\",\n+                cfPropertyName,cfPropertyValue);\n+        }\n         return createEMF(\n-            \"openjpa.ConnectionDriverName\", \"\", \n-            cfPropertyName, cfPropertyValue,\n-            Person.class); \n+            \"openjpa.ConnectionDriverName\", \"\",\n+            cfPropertyName,cfPropertyValue);\n     }\n-    \n+\n     protected EntityManager getEm(EntityManagerFactory emf, String name, String value) {\n         Map<String, Object> props = new HashMap<String, Object>();\n         props.put(name, value);\n         return emf.createEntityManager(props);\n     }\n-    \n-    protected void createTables() { \n-        // create an EMF for each database;\n-        initEMF(defaultJndiName);\n-        initEMF(jndiNames[0]);\n+\n+    public String getPersistenceUnitName() {\n+        return \"TestCfSwitching\";\n     }\n-    \n-    public void testConnectionFactoryName() { \n-        // split out so that we can try javax.persistence.jtaDataSource in the future. \n+\n+    public void testConnectionFactoryName() {\n+        // TODO Disable for non derby.\n+        // split out so that we can try javax.persistence.jtaDataSource in the future.\n         overridePropertyOnEM(\"openjpa.ConnectionFactoryName\", jndiNames[0]);\n     }\n+    \n+    public void testJtaDataSource() {\n+        // TODO Disable for non derby.\n+        // split out so that we can try javax.persistence.jtaDataSource in the future.\n+        overridePropertyOnEM(\"javax.persistence.jtaDataSource\", jndiNames[0]);\n+    }\n \n     public void overridePropertyOnEM(String name, String value) {\n-        // TODO Disable for non derby. \n-        createTables();\n-        \n         // use the default JndiName for the base EntityManagerFactory\n         EntityManagerFactory emf = getEmf(name, defaultJndiName);\n         assertNotNull(emf);\n \n         EntityManager em = emf.createEntityManager();\n         assertNotNull(em);\n \n-        EntityManager em1 = getEm(emf, name, value); \n+        EntityManager em1 = getEm(emf, name, value);\n         assertNotNull(em1);\n \n         // 'prove' that we're using a different database by inserting the same row\n         em.getTransaction().begin();\n-        em.persist(new Person(1));\n+        em.persist(new Person(1, \"em\"));\n         em.getTransaction().commit();\n \n         em1.getTransaction().begin();\n-        em1.persist(new Person(1));\n+        em1.persist(new Person(1, \"em1\"));\n         em1.getTransaction().commit();\n \n         em.clear();\n         em1.clear();\n \n-        // sanity test, make sure inserting the same row again fails.\n-        \n+        Person p = em.find(Person.class, 1);\n+        Person p1 = em1.find(Person.class, 1);\n+        assertNotSame(p, p1);\n+        assertEquals(\"em\", p.getName());\n+        assertEquals(\"em1\", p1.getName());\n+\n+        em.clear();\n+        em1.clear();\n+\n+        // make sure inserting the same row again fails.\n         em.getTransaction().begin();\n         em.persist(new Person(1));\n         try {\n@@ -117,9 +142,64 @@ public void overridePropertyOnEM(String name, String value) {\n             assertTrue(rbe.getCause() instanceof EntityExistsException);\n             // expected\n         }\n-        \n         em.close();\n         em1.close();\n         emf.close();\n     }\n+\n+    public void testInvalidCfName() throws Exception {\n+        // ensure EM creation fails - when provided an invalid JNDI name\n+        EntityManagerFactory emf = null;\n+        try {\n+            emf = getEmf(\"openjpa.ConnectionFactoryName\", defaultJndiName); \n+            getEm(emf, \"openjpa.ConnectionFactoryName\", \"jdbc/NotReal\");\n+            fail(\"Expected an excepton when creating an EM with a bogus JNDI name\");\n+        } catch (ArgumentException e) {\n+            assertTrue(e.isFatal());\n+            assertTrue(e.getMessage().contains(\"jdbc/NotReal\")); // ensure failing JNDI name is in the message\n+            assertTrue(e.getMessage().contains(\"EntityManager\")); // ensure where the JNDI name came from is in message\n+        }\n+    }\n+    \n+    public void testDataCache() { \n+        EntityManagerFactory emf = null;\n+    \n+        emf = getEmf(\"openjpa.DataCache\", \"true\");\n+        try {\n+            getEm(emf, \"openjpa.ConnectionFactoryName\", \"jdbc/NotReal\");\n+            fail(\"Expected an excepton when creating an EM with a bogus JNDI name\");\n+        } catch (ArgumentException e) {\n+            assertTrue(e.isFatal());\n+            assertTrue(e.getMessage().contains(\"jdbc/NotReal\")); \n+            assertTrue(e.getMessage().contains(\"L2 Cache\")); \n+        }\n+    }\n+    \n+    public void testQueryCache() { \n+        EntityManagerFactory emf = null;\n+    \n+        emf = getEmf(\"openjpa.QueryCache\", \"true\");\n+        try {\n+            getEm(emf, \"openjpa.ConnectionFactoryName\", \"jdbc/NotReal\");\n+            fail(\"Expected an excepton when creating an EM with a bogus JNDI name\");\n+        } catch (ArgumentException e) {\n+            assertTrue(e.isFatal());\n+            assertTrue(e.getMessage().contains(\"jdbc/NotReal\")); \n+            assertTrue(e.getMessage().contains(\"openjpa.QueryCache\")); \n+        }\n+    }\n+    \n+    public void testSyncMappings() { \n+        EntityManagerFactory emf = null;\n+    \n+        emf = getEmf(\"openjpa.jdbc.SynchronizeMappings\", \"buildSchema\");\n+        try {\n+            getEm(emf, \"openjpa.ConnectionFactoryName\", \"jdbc/NotReal\");\n+            fail(\"Expected an excepton when creating an EM with a bogus JNDI name\");\n+        } catch (ArgumentException e) {\n+            assertTrue(e.isFatal());\n+            assertTrue(e.getMessage().contains(\"jdbc/NotReal\")); \n+            assertTrue(e.getMessage().contains(\"openjpa.jdbc.SynchronizeMappings\")); \n+        }\n+    }\n }"},{"sha":"c1d57752cea4f09e0538898b3d0defae50da8944","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/serializable/SerializableDetachedStateManager.java","status":"added","additions":48,"deletions":0,"changes":48,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/serializable/SerializableDetachedStateManager.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/serializable/SerializableDetachedStateManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/serializable/SerializableDetachedStateManager.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.detach.serializable;\n+\n+import java.io.Serializable;\n+import java.sql.Date;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.Temporal;\n+import javax.persistence.TemporalType;\n+import javax.persistence.Version;\n+\n+@Entity  \n+public class SerializableDetachedStateManager implements Serializable { \n+    /**\n+     * \n+     */\n+    private static final long serialVersionUID = 80701492251635740L;\n+\n+    @Id\n+    @GeneratedValue(strategy=GenerationType.AUTO)\n+    int id;\n+\n+    @Version\n+    int version;\n+\n+    @Temporal(TemporalType.TIMESTAMP)\n+    Date zDate;\n+}"},{"sha":"eff31de117b03594117ed93806089098862ef7b8","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/serializable/TestSerializableDetachedStateManager.java","status":"added","additions":44,"deletions":0,"changes":44,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/serializable/TestSerializableDetachedStateManager.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/serializable/TestSerializableDetachedStateManager.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/detach/serializable/TestSerializableDetachedStateManager.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.detach.serializable;\n+\n+import java.sql.Date;\n+\n+import org.apache.openjpa.persistence.OpenJPAEntityManagerSPI;\n+import org.apache.openjpa.persistence.test.AbstractPersistenceTestCase;\n+import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n+\n+public class TestSerializableDetachedStateManager extends SingleEMFTestCase {\n+    public void setUp() {\n+        setUp(CLEAR_TABLES, SerializableDetachedStateManager.class, DROP_TABLES, \"openjpa.DetachState\",\n+            \"fgs(DetachedStateField=true)\");\n+    }\n+    \n+    public void testRoundTrip() throws Exception {\n+        SerializableDetachedStateManager c = new SerializableDetachedStateManager();\n+        c.zDate = new Date(System.currentTimeMillis());\n+        OpenJPAEntityManagerSPI em = emf.createEntityManager();\n+        \n+        em.getTransaction().begin();\n+        em.persist(c);\n+        em.getTransaction().commit();\n+        em.close();\n+        AbstractPersistenceTestCase.roundtrip(c);\n+    }\n+}"},{"sha":"7505594a545e7255105731aa3b3725663b4e1f2c","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/exception/TestParameterLogging.java","status":"added","additions":111,"deletions":0,"changes":111,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/exception/TestParameterLogging.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/exception/TestParameterLogging.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/exception/TestParameterLogging.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -0,0 +1,111 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.exception;\n+\n+import java.io.BufferedReader;\n+import java.io.File;\n+import java.io.FileReader;\n+import java.util.regex.Pattern;\n+\n+import javax.persistence.EntityManager;\n+import javax.persistence.EntityManagerFactory;\n+import javax.persistence.EntityTransaction;\n+import javax.persistence.RollbackException;\n+\n+import org.apache.openjpa.persistence.test.PersistenceTestCase;\n+\n+public class TestParameterLogging extends PersistenceTestCase {\n+\n+    String _regex = \".*params=.*1,.*]\";\n+\n+    /*\n+     * Persist the same row twice in the same transaction - will throw an exception with the failing SQL statement\n+     */\n+    private RollbackException getRollbackException(Object... props) {\n+        EntityManagerFactory emf = createEMF(props);\n+        EntityManager em = emf.createEntityManager();\n+        EntityTransaction tran = em.getTransaction();\n+\n+        PObject p1, p2;\n+        p1 = new PObject();\n+        p2 = new PObject();\n+\n+        p1.setId(1);\n+        p2.setId(1);\n+\n+        try {\n+            tran.begin();\n+            em.persist(p1);\n+            em.persist(p2);\n+            tran.commit();\n+            em.close();\n+            fail(\"Expected a RollbackException\");\n+            return null;\n+        } catch (RollbackException re) {\n+            return re;\n+        } finally {\n+            if (tran.isActive()) {\n+                tran.rollback();\n+            }\n+            if (em.isOpen()) {\n+                em.close();\n+            }\n+            if (emf.isOpen()) {\n+                emf.close();\n+            }\n+        }\n+    }\n+\n+    /*\n+     * Ensure that parameter values are not included in exception text by default.\n+     */\n+    public void testNoParamsByDefault() {\n+        RollbackException e = getRollbackException(PObject.class, CLEAR_TABLES);\n+\n+        assertFalse(Pattern.matches(_regex, e.toString()));\n+        Throwable nested = e.getCause();\n+        while (nested != null) {\n+            if (Pattern.matches(\".*INSERT.*\", nested.toString())) {\n+                // only check if the message contains the insert statement.\n+                assertFalse(Pattern.matches(_regex, nested.toString()));\n+            }\n+            nested = nested.getCause();\n+        }\n+    }\n+\n+    /*\n+     * If the EMF is created with PrintParameters=true the parameter values will be logged in exception text.\n+     */\n+    public void testParamsEnabledByConfig() {\n+        RollbackException e =\n+            getRollbackException(PObject.class, CLEAR_TABLES, \"openjpa.ConnectionFactoryProperties\",\n+                \"PrintParameters=true\");\n+        assertFalse(Pattern.matches(_regex, e.toString()));\n+        Throwable nested = e.getCause();\n+        assertNotNull(nested); // expecting at least one nested exception.\n+        while (nested != null) {\n+            if (Pattern.matches(\".*INSERT.*\", nested.toString())) {\n+                // only check if the message contains the insert statement.\n+                assertTrue(Pattern.matches(_regex, nested.toString()));\n+            }\n+            nested = nested.getCause();\n+        }\n+    }\n+}\n+"},{"sha":"625459db9d380350b4b7396c8495fb67efc5f004","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/identity/StringIdEntity.java","status":"added","additions":52,"deletions":0,"changes":52,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/identity/StringIdEntity.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/identity/StringIdEntity.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/identity/StringIdEntity.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.identity;\n+\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+\n+@Entity\n+public class StringIdEntity {\n+    @Id\n+    @Column(length = 12)\n+    private String id;\n+    private int data;\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public void setId(String id) {\n+        this.id = id;\n+    }\n+\n+    public int getData() {\n+        return data;\n+    }\n+\n+    public void setData(int data) {\n+        this.data = data;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"StringIdEntity [data=\" + data + \", id='\" + id + \"']\";\n+    }\n+}"},{"sha":"6ab295b1f04bcdb81ea123631a9ea836c8b66aa6","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/identity/TestStringId.java","status":"added","additions":112,"deletions":0,"changes":112,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/identity/TestStringId.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/identity/TestStringId.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/identity/TestStringId.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -0,0 +1,112 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.identity;\n+\n+import javax.persistence.EntityManager;\n+import javax.persistence.EntityManagerFactory;\n+\n+import org.apache.openjpa.persistence.test.AbstractPersistenceTestCase;\n+\n+public class TestStringId extends AbstractPersistenceTestCase {\n+    private static EntityManagerFactory _emf;\n+\n+    public void setUp() {\n+        _emf = createEMF(StringIdEntity.class);\n+\n+        cleanup();\n+    }\n+\n+    public void tearDown() {\n+        _emf.close();\n+    }\n+\n+    private void cleanup() {\n+        EntityManager em = _emf.createEntityManager();\n+        em.getTransaction().begin();\n+        em.createQuery(\"Delete from StringIdEntity\").executeUpdate();\n+        em.getTransaction().commit();\n+        em.close();\n+    }\n+\n+    public void testTrailingWhitespace() {\n+        StringIdEntity sie1 = new StringIdEntity();\n+        sie1.setId(\"ABC \");\n+\n+        EntityManager em = _emf.createEntityManager();\n+        em.getTransaction().begin();\n+        em.persist(sie1);\n+        em.getTransaction().commit();\n+        assertTrue(em.contains(sie1));\n+\n+        StringIdEntity sie2 = em.find(StringIdEntity.class, \"ABC\");\n+        assertSame(\"Find should return the same instance with trailing whitespace\", sie1, sie2);\n+\n+        StringIdEntity sie3 = em.find(StringIdEntity.class, \"ABC  \");\n+        assertSame(\"Find should return the same instance with trailing whitespace\", sie1, sie3);\n+\n+        assertNotSame(\"Leading WS should not match\", sie1, em.find(StringIdEntity.class, \" ABC\"));\n+\n+        em.close();\n+    }\n+\n+    public void testLeadingWhitespace() {\n+        StringIdEntity sie1 = new StringIdEntity();\n+        sie1.setId(\" ABC\");\n+\n+        EntityManager em = _emf.createEntityManager();\n+        em.getTransaction().begin();\n+        em.persist(sie1);\n+        em.getTransaction().commit();\n+        assertTrue(em.contains(sie1));\n+\n+        StringIdEntity sie2 = em.find(StringIdEntity.class, \"ABC\");\n+        assertNotSame(\"Find should not return the same instance with leading whitespace\", sie1, sie2);\n+\n+        StringIdEntity sie3 = em.find(StringIdEntity.class, \"   ABC\");\n+        assertNotSame(\"Find should not return the same instance with leading whitespace\", sie1, sie3);\n+\n+        assertSame(sie1, em.find(StringIdEntity.class, \" ABC\"));\n+\n+        assertNotSame(\"Trailing WS should not match\", sie1, em.find(StringIdEntity.class, \"ABC \"));\n+        em.close();\n+    }\n+\n+    public void testInnerWhitespace() {\n+        StringIdEntity sie1 = new StringIdEntity();\n+        sie1.setId(\"A B C\");\n+\n+        EntityManager em = _emf.createEntityManager();\n+        em.getTransaction().begin();\n+        em.persist(sie1);\n+        em.getTransaction().commit();\n+        assertTrue(em.contains(sie1));\n+\n+        StringIdEntity sie2 = em.find(StringIdEntity.class, \"ABC\");\n+        assertNotSame(\"Find should not return the same instance with inner whitespace\", sie1, sie2);\n+\n+        StringIdEntity sie3 = em.find(StringIdEntity.class, \"   ABC\");\n+        assertNotSame(\"Find should not return the same instance with inner whitespace\", sie1, sie3);\n+\n+        assertSame(sie1, em.find(StringIdEntity.class, \"A B C\"));\n+\n+        assertNotSame(\"Trailing WS should not match\", sie1, em.find(StringIdEntity.class, \"ABC \"));\n+\n+        em.close();\n+    }\n+}"},{"sha":"4239f51fef6914905dc73d7b6e2f2acc60fce795","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/sqlcache/TestPreparedQueryCache.java","status":"modified","additions":61,"deletions":4,"changes":65,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/sqlcache/TestPreparedQueryCache.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/sqlcache/TestPreparedQueryCache.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/sqlcache/TestPreparedQueryCache.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -47,7 +47,6 @@\n import org.apache.openjpa.persistence.OpenJPAPersistence;\n import org.apache.openjpa.persistence.OpenJPAQuery;\n import org.apache.openjpa.persistence.jdbc.sqlcache.Employee.Category;\n-import org.apache.openjpa.persistence.test.AllowFailure;\n \n /**\n  * Tests correctness and performance of queries with and without Prepared Query Cacheing.\n@@ -213,7 +212,38 @@ public void tearDown() throws Exception {\n \t        em.close();\n \t\tsuper.tearDown();\n \t}\n-\t\n+    \n+    public void testRepeatedParameterInSubqueryInDifferentOrderSubQLast() {\n+        OpenJPAEntityManager em = emf.createEntityManager();\n+       \n+        String jpql = \"SELECT o from OrderJPA o \" +\n+                \"WHERE (o.CustomerId = :customerId) \" +\n+                \"AND (o.WarehouseId = :warehouseId) \" +\n+                \"AND (o.DistrictId = :districtId) \" +\n+                \"AND o.OrderId IN (SELECT MAX (o1.OrderId) from OrderJPA o1 \" +\n+                    \"WHERE ((o1.CustomerId = :customerId) \" +\n+                    \"AND    (o1.DistrictId = :districtId) \" +\n+                    \"AND    (o1.WarehouseId = :warehouseId)))\";\n+        \n+        em.getTransaction().begin();\n+        TypedQuery<OrderJPA> q1 = em.createQuery(jpql, OrderJPA.class);\n+        q1.setParameter(\"customerId\", 339)\n+          .setParameter(\"districtId\", 3)\n+          .setParameter(\"warehouseId\", 23);\n+                  \n+        assertEquals(JPQLParser.LANG_JPQL, OpenJPAPersistence.cast(q1).getLanguage());\n+        assertFalse(q1.getResultList().isEmpty());        \n+        \n+        TypedQuery<OrderJPA> q2 = em.createQuery(jpql, OrderJPA.class);\n+        assertEquals(QueryLanguages.LANG_PREPARED_SQL, OpenJPAPersistence.cast(q2).getLanguage());\n+        q2.setParameter(\"customerId\", 2967)\n+          .setParameter(\"districtId\", 5)\n+          .setParameter(\"warehouseId\", 22);\n+        \n+        assertFalse(q2.getResultList().isEmpty());\n+        em.getTransaction().rollback();\n+        \n+    }\n \n \tpublic void testPreparedQueryCacheIsActiveByDefault() {\n \t\tassertNotNull(getPreparedQueryCache());\n@@ -725,8 +755,7 @@ public void testQueryWithEagerRelationIsNotCached() {\n         assertFalse(book2.getAuthors().isEmpty());\n     }\n \n-    @AllowFailure(message=\"We have problems with reparametrization of subquery + constant literals\")\n-    public void xtestQueryWithUserDefinedAndInternalParamtersInSubquery() {\n+    public void testQueryWithUserDefinedAndInternalParamtersInSubquery() {\n         String jpql = \"Select a From Address a Where Not Exists (\"\n             + \"     Select s.id From Singer As s Where \"\n             + \"        s.address = a  And \"\n@@ -856,6 +885,34 @@ public void testNoParameterOnExternalizedFieldIsIncluded() {\n        assertFalse(q2.getResultList().isEmpty());\n     }\n     \n+    public void testSubqueryParameters() {\n+        EntityManager em = emf.createEntityManager();\n+        String query = \"select e from Employee e \"\n+            + \"inner join e.department d \"\n+            + \"inner join d.company c \"\n+            + \"where mod(c.startYear, 100) = 0 \"\n+            + \"and exists (select e2 from Employee e2 \"\n+                + \"inner join e2.department d2 \"\n+                + \"inner join d2.company c2 \"\n+                + \"where e2.address.city = e.address.city \"\n+                + \"and e2.isManager = false \"\n+                + \"and d2.name = d.name \"\n+                + \"and c2.name = :companyName) \"\n+            + \"and d.name = :departmentName\";\n+\n+        em.getTransaction().begin();\n+        TypedQuery<Employee> q1 = em.createQuery(query, Employee.class);\n+        q1.setParameter(\"companyName\", \"acme.org\");\n+        q1.setParameter(\"departmentName\", \"Engineering\");\n+        assertEquals(q1.getResultList().size(), 6);\n+\n+        TypedQuery<Employee> q2 = em.createQuery(query, Employee.class);\n+        q2.setParameter(\"companyName\", \"acme.org\");\n+        q2.setParameter(\"departmentName\", \"Engineering\");\n+        assertEquals(q2.getResultList().size(), 6);\n+        em.getTransaction().rollback();\n+    }\n+\n     public void testRepeatedParameterInSubqueryInDifferentOrder() {\n         OpenJPAEntityManager em = emf.createEntityManager();\n         String jpql =  \"select o from OrderJPA o \" "},{"sha":"da16ea344c41c6e55de6f2b1ef0bef386858b920","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/update/TestTimestampVersion.java","status":"modified","additions":1,"deletions":3,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/update/TestTimestampVersion.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/update/TestTimestampVersion.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jdbc/update/TestTimestampVersion.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -47,7 +47,7 @@ public void testBulkUpdateOnTimestampedVersion() {\n         \n         try {\n             // delay to ensure the new timestamp exceeds the timer's resolution.\n-            Thread.sleep(500);\n+            Thread.sleep(1000);\n         } catch (InterruptedException e) {\n         }\n \n@@ -89,6 +89,4 @@ public void testBulkUpdateOnNumericVersion() {\n         int newVersion = pc.getVersion();\n         assertEquals(newVersion, oldVersion+1);\n     }\n-\n-\t\n }"},{"sha":"4373b1a6e7a4cb47975a2e515864c7d96701f1df","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/expressions/TestJPQLScalarExpressions.java","status":"modified","additions":21,"deletions":0,"changes":21,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/expressions/TestJPQLScalarExpressions.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/expressions/TestJPQLScalarExpressions.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/jpql/expressions/TestJPQLScalarExpressions.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -20,6 +20,7 @@\n \n import java.util.List;\n import javax.persistence.EntityManager;\n+import javax.persistence.Query;\n \n import org.apache.openjpa.persistence.common.apps.*;\n import org.apache.openjpa.persistence.common.utils.AbstractTestCase;\n@@ -69,6 +70,26 @@ public void setUp() {\n         endEm(em);\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n+    public void testAggregateResultVariable() {\n+        EntityManager em = currentEntityManager();\n+        String querys[] = {\n+            \"SELECT c.name as name, SUM(c.age) as sage FROM CompUser c group by c.name order by sage desc, name\",\n+            \"SELECT c.name, AVG(c.age) as age FROM CompUser c group by c.name order by age desc, c.name\",\n+        };\n+        for (int i = 0; i < querys.length; i++) {\n+            Query query = em.createQuery(querys[i]);\n+            query.setFirstResult(1);\n+            query.setMaxResults(4);\n+            List<Object[]> rs = query.getResultList();\n+            Object val = ((Object[]) rs.get(0))[1];\n+            if (val instanceof Integer)\n+                assertTrue((Integer) val > 0);\n+            else if (val instanceof Long)\n+                assertTrue((Long) val > 0);\n+        }\n+    }\n+\n     @SuppressWarnings(\"unchecked\")\n     public void testMathAndAggregate() {\n         EntityManager em = currentEntityManager();"},{"sha":"290cf8f4d57ff86434539fb74e529bd42fa7efae","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/Case.java","status":"added","additions":76,"deletions":0,"changes":76,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/Case.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/Case.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/Case.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.query;\n+\n+import java.util.List;\n+\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.OneToMany;\n+import javax.persistence.Table;\n+\n+@Entity\n+@Table(name = \"cases\")\n+public class Case {\n+\n+    @Id\n+    @GeneratedValue\n+    @Column(name = \"caseid\")\n+    private Integer id;\n+\n+    @ManyToOne(fetch = FetchType.EAGER)\n+    @JoinColumn(name = \"scheduledayid\", nullable = false)\n+    private ScheduleDay scheduleDay;\n+\n+    @OneToMany(fetch = FetchType.LAZY, mappedBy = \"caze\")\n+    private List<ScheduledAssignment> scheduledAssignments;\n+\n+    public Integer getId() {\n+        return id;\n+    }\n+\n+    public void setId(Integer id) {\n+        this.id = id;\n+    }\n+\n+    public ScheduleDay getScheduleDay() {\n+        return scheduleDay;\n+    }\n+\n+    public void setScheduleDay(ScheduleDay scheduleDay) {\n+        this.scheduleDay = scheduleDay;\n+    }\n+\n+    public List<ScheduledAssignment> getScheduledAssignments() {\n+        return scheduledAssignments;\n+    }\n+\n+    public void setScheduledAssignments(List<ScheduledAssignment> scheduledAssignments) {\n+        this.scheduledAssignments = scheduledAssignments;\n+    }\n+\n+    public void addScheduledAssignment(ScheduledAssignment scheduledAssignment) {\n+        scheduledAssignments.add(scheduledAssignment);\n+    }\n+}"},{"sha":"7ede47d79045c0a71165526e3b7d1d4879f9e4f4","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/Lookup.java","status":"added","additions":54,"deletions":0,"changes":54,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/Lookup.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/Lookup.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/Lookup.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.query;\n+\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+import javax.persistence.Table;\n+\n+@Entity\n+@Table(name = \"lookups\")\n+public class Lookup {\n+\n+    @Id\n+    @Column(name = \"ruleid\")\n+    private Integer id;\n+    @Column(name = \"name\", nullable = false, length = 100)\n+    private String name;\n+\n+    public Lookup() {\n+    }\n+\n+    public Integer getId() {\n+        return this.id;\n+    }\n+\n+    public void setId(Integer id) {\n+        this.id = id;\n+    }\n+\n+    public String getName() {\n+        return this.name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+}"},{"sha":"35d547b13f61c732209069979512d512649652fb","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/Role.java","status":"added","additions":61,"deletions":0,"changes":61,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/Role.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/Role.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/Role.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.query;\n+\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.Table;\n+\n+@Entity\n+@Table(name = \"roles\")\n+public class Role {\n+\n+    @Id\n+    @GeneratedValue\n+    @Column(name = \"roleid\")\n+    private Integer id;\n+    @ManyToOne(fetch = FetchType.EAGER, optional = false)\n+    @JoinColumn(name = \"lookupid\", nullable = false)\n+    private Lookup lookup;\n+\n+    public Role() {\n+        super();\n+    }\n+\n+    public Integer getId() {\n+        return this.id;\n+    }\n+\n+    public void setId(Integer roleid) {\n+        this.id = roleid;\n+    }\n+\n+    public Lookup getLookup() {\n+        return lookup;\n+    }\n+\n+    public void setLookup(Lookup lookup) {\n+        this.lookup = lookup;\n+    }\n+}"},{"sha":"483a71c29676fcff7873579c9816610b6ac9a076","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/ScheduleDay.java","status":"added","additions":63,"deletions":0,"changes":63,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/ScheduleDay.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/ScheduleDay.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/ScheduleDay.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -0,0 +1,63 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.query;\n+\n+import java.util.Date;\n+\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.Table;\n+import javax.persistence.Temporal;\n+import javax.persistence.TemporalType;\n+import javax.persistence.UniqueConstraint;\n+\n+@Entity\n+@Table(name = \"scheduledays\", uniqueConstraints = @UniqueConstraint(columnNames = \"scheduledate\"))\n+public class ScheduleDay {\n+\n+    @Id\n+    @GeneratedValue\n+    @Column(name = \"scheduledayid\")\n+    private Integer id;\n+    @Temporal(TemporalType.DATE)\n+    @Column(name = \"scheduledate\", unique = true, nullable = false, length = 4)\n+    private Date date;\n+\n+    public ScheduleDay() {\n+        super();\n+    }\n+\n+    public Integer getId() {\n+        return this.id;\n+    }\n+\n+    public void setId(Integer scheduledayid) {\n+        this.id = scheduledayid;\n+    }\n+\n+    public Date getDate() {\n+        return this.date;\n+    }\n+\n+    public void setDate(Date scheduledate) {\n+        this.date = scheduledate;\n+    }\n+}"},{"sha":"759ba9edeb619c5319dd2e63d8d916bdecb881aa","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/ScheduledAssignment.java","status":"added","additions":126,"deletions":0,"changes":126,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/ScheduledAssignment.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/ScheduledAssignment.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/ScheduledAssignment.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -0,0 +1,126 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.query;\n+\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.FetchType;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.Table;\n+\n+@Entity\n+@Table(name = \"scheduledassignments\")\n+public class ScheduledAssignment {\n+\n+    @Id\n+    @GeneratedValue\n+    @Column(name = \"scheduledassignmentid\")\n+    private Integer id;\n+    @ManyToOne(fetch = FetchType.LAZY)\n+    @JoinColumn(name = \"autoassignid\")\n+    private ScheduledAssignment parentScheduledAssignment;\n+\n+    @ManyToOne(fetch = FetchType.EAGER, optional = false)\n+    @JoinColumn(name = \"scheduledayid\", nullable = false)\n+    private ScheduleDay scheduleDay;\n+    @ManyToOne(fetch = FetchType.LAZY)\n+    @JoinColumn(name = \"caseid\")\n+    private Case caze;\n+\n+    @ManyToOne(fetch = FetchType.EAGER, optional = false)\n+    @JoinColumn(name = \"roleid\", nullable = false)\n+    private Role role;\n+    @ManyToOne(fetch = FetchType.LAZY)\n+    @JoinColumn(name = \"lookupId\")\n+    private Lookup brokenRuleLookup;\n+\n+    @Column(name = \"brokencustomruleexplanation\")\n+    private String brokenCustomRuleExplanation; // somehow, removing this has an effect\n+\n+    public ScheduledAssignment() {\n+        super();\n+    }\n+\n+    public Integer getId() {\n+        return this.id;\n+    }\n+\n+    public void setId(Integer id) {\n+        this.id = id;\n+    }\n+\n+    public ScheduledAssignment getParentScheduledAssignment() {\n+        return this.parentScheduledAssignment;\n+    }\n+\n+    public void setParentScheduledAssignment(ScheduledAssignment scheduledassignments) {\n+        this.parentScheduledAssignment = scheduledassignments;\n+    }\n+\n+    public ScheduleDay getScheduleDay() {\n+        return this.scheduleDay;\n+    }\n+\n+    public void setScheduleDay(ScheduleDay scheduleDay) {\n+        this.scheduleDay = scheduleDay;\n+    }\n+\n+    public Case getCase() {\n+        return caze;\n+    }\n+\n+    public void setCase(Case caze) {\n+        this.caze = caze;\n+    }\n+\n+    public Role getRole() {\n+        return this.role;\n+    }\n+\n+    public void setRole(Role roles) {\n+        this.role = roles;\n+    }\n+\n+    public Lookup getBrokenRuleLookup() {\n+        return brokenRuleLookup;\n+    }\n+\n+    public void setBrokenRuleLookup(Lookup brokenRuleLookup) {\n+        this.brokenRuleLookup = brokenRuleLookup;\n+    }\n+\n+    public Case getCaze() {\n+        return caze;\n+    }\n+\n+    public void setCaze(Case caze) {\n+        this.caze = caze;\n+    }\n+\n+    public String getBrokenCustomRuleExplanation() {\n+        return brokenCustomRuleExplanation;\n+    }\n+\n+    public void setBrokenCustomRuleExplanation(String brokenCustomRuleExplanation) {\n+        this.brokenCustomRuleExplanation = brokenCustomRuleExplanation;\n+    }\n+}"},{"sha":"fc265b7324a9315bf0e8d624fa3caf12c0588605","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestOutOfBoundsEx.java","status":"added","additions":110,"deletions":0,"changes":110,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestOutOfBoundsEx.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestOutOfBoundsEx.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/TestOutOfBoundsEx.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -0,0 +1,110 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.query;\n+\n+import java.util.Calendar;\n+import java.util.Date;\n+import java.util.List;\n+\n+import javax.persistence.EntityManager;\n+import javax.persistence.Query;\n+\n+import org.apache.openjpa.persistence.FetchPlan;\n+import org.apache.openjpa.persistence.QueryImpl;\n+import org.apache.openjpa.persistence.test.SingleEMFTestCase;\n+\n+public class TestOutOfBoundsEx extends SingleEMFTestCase {\n+\tprivate EntityManager em = null;\n+\tprivate Lookup lookup;\n+\t\n+\tpublic void setUp() throws Exception {\n+\t\tsuper.setUp(Lookup.class, Case.class, Role.class, ScheduledAssignment.class, ScheduleDay.class, \n+        DROP_TABLES);\n+\t\tem = emf.createEntityManager();\n+\t\tinsertLookups();\n+\t}\n+\t\n+\tpublic void testOutOfBounds() throws Exception {\n+\t\tCalendar cal = Calendar.getInstance();\n+\t\tfinal Date date = cal.getTime();\n+\t\tScheduleDay sd = insertScheduleDay(date);\n+\t\t\n+\t\tRole role1 = insertJob();\n+\t\tRole role2 = insertJob();\n+\t\tCase kase1 = insertCase(sd);\n+\t\tCase kase2 = insertCase(sd);\n+\t\tinsertScheduledAssignmentInCase(role1, kase2);\n+\t\t\n+\t\t// simulate new web transaction on different em\n+\t\tem.close();\n+\t\tem = emf.createEntityManager();\n+\t\t\n+\t\tQuery query = em.createQuery(\"select o from Case as o\" +\n+\t\t\t\t\" where o.scheduleDay = :sd\");\n+\t\tquery.setParameter(\"sd\", sd);\n+\t\tFetchPlan fetchPlan = ((QueryImpl) query).getFetchPlan();\n+\t\tfetchPlan.addField(Case.class, \"scheduledAssignments\");\n+\t\t\n+\t\t//Without the changes of OJ1424, this next call would cause an \n+\t\t//ArrayIndexOutOfBoundsException.\n+\t\tList<Case> allCases = query.getResultList();\n+\t}\n+\n+\tpublic void insertLookups() {\n+\t\tlookup = new Lookup();\n+\t\tlookup.setName(\"XYZ\");\n+\t\tlookup.setId(1);\n+\t\tsave(lookup);\n+\t}\n+\n+\tpublic void save(Object obj) {\n+\t\tem.getTransaction().begin();\n+\t\tem.persist(obj);\n+\t\tem.getTransaction().commit();\n+\t}\n+\t\n+\tpublic Role insertJob() {\n+\t\tRole role = new Role();\n+\t\trole.setLookup(lookup);\n+\t\tsave(role);\n+\t\treturn role;\n+\t}\n+\n+\tpublic Case insertCase(ScheduleDay sd) throws Exception {\n+\t\tCase kase = new Case();\n+\t\tkase.setScheduleDay(sd);\n+\t\tsave(kase);\n+\t\treturn kase;\n+\t}\n+\n+\tpublic void insertScheduledAssignmentInCase(Role job, Case kase) {\n+\t\tScheduledAssignment sa = new ScheduledAssignment();\n+\t\tsa.setRole(job);\n+\t\tsa.setCase(kase);\n+\t\tsa.setScheduleDay(kase.getScheduleDay());\n+\t\tsave(sa);\n+\t}\n+\n+\tpublic ScheduleDay insertScheduleDay(Date date) {\n+\t\tScheduleDay sd = new ScheduleDay();\n+\t\tsd.setDate(date);\n+\t\tsave(sd);\n+\t\treturn sd;\n+\t}\t\n+}"},{"sha":"24bdb6bcb89f51ffe146e53b3038cec9dc127c0d","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/results/TestListResultSerialization.java","status":"added","additions":59,"deletions":0,"changes":59,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/results/TestListResultSerialization.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/results/TestListResultSerialization.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/query/results/TestListResultSerialization.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.persistence.query.results;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.openjpa.lib.rop.ListResultList;\n+import org.apache.openjpa.lib.rop.ResultList;\n+\n+import org.apache.openjpa.kernel.DistinctResultList;\n+import org.apache.openjpa.persistence.EntityManagerImpl;\n+import org.apache.openjpa.persistence.PersistenceExceptions;\n+import org.apache.openjpa.persistence.test.SQLListenerTestCase;\n+import org.apache.openjpa.util.RuntimeExceptionTranslator;\n+\n+/**\n+ * Test that the DistinctResultList serializes correctly and without error.\n+ *\n+ * @since 2.1.0\n+ */\n+public class TestListResultSerialization extends SQLListenerTestCase {\n+    public void setUp() throws Exception {\n+        super.setUp();\n+        assertNotNull(emf);\n+    }\n+    \n+    public void testRoundtrip() {\n+        List<String> list = new ArrayList<String>();\n+        list.add(\"xxx\");\n+        list.add(\"yyy\");\n+        ResultList resultList = new ListResultList(list);\n+        EntityManagerImpl em = (EntityManagerImpl)emf.createEntityManager();\n+        em.close();\n+        RuntimeExceptionTranslator trans = PersistenceExceptions.getRollbackTranslator(em);\n+        DistinctResultList distinctResultList = new DistinctResultList(resultList, trans);\n+        try {\n+            roundtrip(distinctResultList);\n+        } catch (Exception e) {\n+            e.printStackTrace();\n+            fail(\"unexpected exception - see stack trace in output\");\n+        }\n+    }\n+}"},{"sha":"5b141f0487007cfd1862921da433a01b59565176","filename":"openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/test/SingleEMFTestCase.java","status":"modified","additions":11,"deletions":0,"changes":11,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/test/SingleEMFTestCase.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/test/SingleEMFTestCase.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/java/org/apache/openjpa/persistence/test/SingleEMFTestCase.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -201,5 +201,16 @@ protected void setSupportedDatabases(Class<?> ... dbs) {\n     protected Log getLog() {\n         return emf.getConfiguration().getLog(\"Tests\");\n     }\n+    \n+    protected String getForUpdateClause() {\n+        DBDictionary dict = ((JDBCConfiguration) emf.getConfiguration()).getDBDictionaryInstance();\n+        if (dict.forUpdateClause != null) {\n+            return dict.forUpdateClause;\n+        }\n+        if (dict.tableForUpdateClause != null) {\n+            return dict.tableForUpdateClause;\n+        }\n+        return \"\";\n+    }\n }\n "},{"sha":"0531b2d442867182c7f96b22a58b5db794f28bc6","filename":"openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/META-INF/persistence.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -363,6 +363,10 @@\n             <property name=\"openjpa.jdbc.Schema\" value=\"EJB30\" />\n             -->\n         </properties>\n+    </persistence-unit>    \n+    \n+    <persistence-unit name=\"TestCfSwitching\">\n+        <class>org.apache.openjpa.persistence.conf.Person</class>\n     </persistence-unit>\n \n </persistence>"},{"sha":"ccf0e1a280b898a485ae3fbc72038e5cd9ea9491","filename":"openjpa-persistence-locking/pom.xml","status":"modified","additions":40,"deletions":17,"changes":57,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-locking/pom.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -27,7 +27,7 @@\n     <parent>\n         <groupId>org.apache.openjpa</groupId>\n         <artifactId>openjpa-parent</artifactId>\n-        <version>2.0.0</version>\n+        <version>2.0.1</version>\n     </parent>\n \n     <groupId>org.apache.openjpa</groupId>\n@@ -688,13 +688,12 @@\n         <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa-persistence-jdbc</artifactId>\n-            <version>${pom.version}</version>\n+            <version>${project.version}</version>\n         </dependency>\n         <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa-persistence-jdbc</artifactId>\n-            <version>${pom.version}</version>\n-            <!-- <classifier>test-base</classifier> -->\n+            <version>${project.version}</version>\n             <type>test-jar</type>\n             <scope>test</scope>\n         </dependency>\n@@ -714,8 +713,45 @@\n             <scope>test</scope>\n         </dependency>\n     </dependencies>\n+\n     <build>\n         <plugins>\n+            <!-- disable creating javadoc for this module -->\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-javadoc-plugin</artifactId>\n+                <configuration>\n+                    <skip>true</skip>\n+                </configuration>\n+            </plugin>\n+\n+            <!-- Extract the common test support files from o-p-j-tests.jar -->\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-dependency-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>unpack</id>\n+                        <phase>test-compile</phase>\n+                        <goals>\n+                            <goal>unpack</goal>\n+                        </goals>\n+                        <configuration>\n+                            <artifactItems>\n+                                <artifactItem>\n+                                    <groupId>org.apache.openjpa</groupId>\n+                                    <artifactId>openjpa-persistence-jdbc</artifactId>\n+                                    <version>${project.version}</version>\n+                                    <type>test-jar</type>\n+                                    <outputDirectory>${project.build.testOutputDirectory}</outputDirectory>\n+                                    <includes>org/apache/openjpa/persistence/test/*.class</includes>\n+                                </artifactItem>\n+                            </artifactItems>\n+                        </configuration>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+\n             <plugin>\n                 <groupId>org.apache.maven.plugins</groupId>\n                 <artifactId>maven-antrun-plugin</artifactId>\n@@ -740,19 +776,6 @@\n                     </execution>\n                 </executions>\n             </plugin>\n-            <plugin>\n-                <groupId>org.apache.maven.plugins</groupId>\n-                <artifactId>maven-jar-plugin</artifactId>\n-                <executions>\n-                    <execution>\n-                        <id>attach-tests</id>\n-                        <phase>verify</phase>\n-                        <goals>\n-                            <goal>test-jar</goal>\n-                        </goals>\n-                    </execution>\n-                </executions>\n-            </plugin>\n             <plugin>\n                 <groupId>org.apache.maven.plugins</groupId>\n                 <artifactId>maven-surefire-plugin</artifactId>"},{"sha":"148ebb03d1c1996c617d6f6b0ea0f303b2107284","filename":"openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/SequencedActionsTest.java","status":"modified","additions":15,"deletions":12,"changes":27,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/SequencedActionsTest.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/SequencedActionsTest.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/SequencedActionsTest.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -81,6 +81,7 @@\n     private String empTableName;\n     private List<TestThread> threads = null;\n \n+    @SuppressWarnings(\"deprecation\")\n     protected void commonSetUp() {\n         empTableName = getMapping(LockEmployee.class).getTable().getFullName();\n \n@@ -326,10 +327,12 @@ private void launchCommonSequence(TestThread thisThread ) {\n         LockEmployee employee = null;\n         LockModeType lockMode = null;\n         Act curAction = null;\n+        int actIndex = 0;\n         Object[][] threadSequence = actions[threadToRun];\n         for (Object[] args : threadSequence) {\n             curAction = (Act) args[0];\n-            log.trace(\"** Act=\" + Arrays.toString(args));\n+            String curAct = \"Act[t\" + threadToRun + \":\" + (++actIndex) +\"]=\" + Arrays.toString(args);\n+            log.trace(\"** \" + curAct);\n             try {\n                 switch (curAction) {\n                 case CreateEm:\n@@ -591,7 +594,7 @@ private void launchCommonSequence(TestThread thisThread ) {\n                         id = (Integer)args[1];\n                     }\n                     employee = employees.get(id);\n-                    assertNotNull(employee);\n+                    assertNotNull(curAct, employee);\n                     break;\n                 case TestEmployee:\n                     id = 1;\n@@ -602,22 +605,22 @@ private void launchCommonSequence(TestThread thisThread ) {\n                     switch (args.length) {\n                     case 4:\n                         if (args[3] != null) {\n-                            assertEquals(\"\", saveVersion\n+                            assertEquals(curAct, saveVersion\n                                 + (Integer) args[3], employee.getVersion());\n                         }\n                     case 3:\n                         if (args[2] != null) {\n-                            assertEquals(\"\", (String) args[2], employee\n+                            assertEquals(curAct, (String) args[2], employee\n                                 .getFirstName());\n                         }\n                     case 2:\n                         if (args[1] != null) {\n-                            assertEquals(\"\", id.intValue(),\n+                            assertEquals(curAct, id.intValue(),\n                                 employee.getId());\n                         }\n                         break;\n                     case 1:\n-                        assertNull(employee);\n+                        assertNull(curAct, employee);\n                     }\n                     break;\n                 case SaveVersion:\n@@ -640,7 +643,7 @@ private void launchCommonSequence(TestThread thisThread ) {\n                         + (saveVersion + increment) + \", testing=\"\n                         + employee.getVersion());\n \n-                    assertEquals(\"\", saveVersion + increment, employee\n+                    assertEquals(curAct, saveVersion + increment, employee\n                         .getVersion());\n                     break;\n                 case TestLockMode:\n@@ -654,7 +657,7 @@ private void launchCommonSequence(TestThread thisThread ) {\n                     log.trace(\"test version: expected=\" + expectedlockMode\n                         + \", testing=\" + testinglockMode);\n \n-                    assertEquals(\"\", getCanonical(expectedlockMode),\n+                    assertEquals(curAct, getCanonical(expectedlockMode),\n                         getCanonical(testinglockMode));\n                     break;\n                 case ResetException:\n@@ -696,7 +699,7 @@ private void launchCommonSequence(TestThread thisThread ) {\n                         && expectedExceptions.size() > 0) {\n                         for (Class<?> expectedException :\n                             expectedExceptions) {\n-                            if (matchExpectedException(expectedException,\n+                            if (matchExpectedException(curAct, expectedException,\n                                 curThrowable)) {\n                                 exMatched = true;\n                                 break;\n@@ -713,7 +716,7 @@ private void launchCommonSequence(TestThread thisThread ) {\n                             logStack(curThrowable);\n                         }\n                     }\n-                    assertTrue(\"Expecting=\" + expectedExceptions\n+                    assertTrue(curAct + \":Expecting=\" + expectedExceptions\n                         + \", Testing=\" + testExClass, exMatched);\n                     exThread.throwable = null;\n                     break;\n@@ -908,9 +911,9 @@ private String processException(Act curAction, Throwable t) {\n         return props;\n     }\n \n-    private boolean matchExpectedException(Class<?> expected,\n+    private boolean matchExpectedException(String curAct, Class<?> expected,\n         Throwable tested) {\n-        assertNotNull(expected);\n+        assertNotNull(curAct, expected);\n         Class<?> testExClass = null;\n         boolean exMatched = true;\n         if (tested != null) {"},{"sha":"daee91e131ace28349f6ad1dea17b5c0fae74f7a","filename":"openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestEmLockMode.java","status":"modified","additions":10,"deletions":2,"changes":12,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestEmLockMode.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestEmLockMode.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestEmLockMode.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -36,8 +36,7 @@\n public class TestEmLockMode extends SequencedActionsTest {\n     private static String NON_SUPPORTED_OPTIMISTIC_SQL = \n         \"SELECT .* FROM LockEmployee .*\";\n-    private static String NON_SUPPORTED_FOR_UPDATE_SQL = \n-        \"SELECT .* FROM LockEmployee .* FOR UPDATE.*\";\n+    private static String NON_SUPPORTED_FOR_UPDATE_SQL = \"\" ; // append lock clause from dict\n     private static String VERSION_UPDATE_SQL = \n         \"UPDATE LockEmployee SET version .* WHERE .*\";\n     private static String DB2_OPTIMISTIC_SQL = \n@@ -50,6 +49,15 @@\n     public void setUp() {\n         setUp(LockEmployee.class, \"openjpa.LockManager\", \"mixed\");\n         commonSetUp();\n+        NON_SUPPORTED_FOR_UPDATE_SQL = NON_SUPPORTED_OPTIMISTIC_SQL + \" \" + escapeRegex(getForUpdateClause()) + \".*\";\n+    }\n+    \n+    private String escapeRegex(String clause) {\n+        // escape an update clause for use in a regex. \n+        // only handling ( ) for now\n+        String rval = clause.replace(\"(\", \"\\\\(\");\n+        rval = rval.replace(\")\", \"\\\\)\");\n+        return rval;\n     }\n \n     /*"},{"sha":"7227f308dbaeb583808cd095269daf43bb5815ec","filename":"openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestFetchHints.java","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestFetchHints.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestFetchHints.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestFetchHints.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -20,7 +20,6 @@\n \n import java.sql.Connection;\n import java.sql.ResultSet;\n-import java.util.HashMap;\n \n import javax.persistence.EntityManager;\n import javax.persistence.LockModeType;"},{"sha":"11ebae8e28aa5e43799d907b6d139200c97f62f1","filename":"openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerDeadlock.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerDeadlock.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerDeadlock.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerDeadlock.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -121,7 +121,8 @@ private void commonNamedQueryTest( String testName,\n             {Act.WaitAllChildren},\n             {Act.TestException, 1, t1Exceptions},\n \n-            {Act.RollbackTx}\n+            {Act.RollbackTx},\n+            {Act.CloseEm}\n         };\n         Object[][] thread1 = {\n             {Act.CreateEm},\n@@ -134,6 +135,7 @@ private void commonNamedQueryTest( String testName,\n             {Act.NamedQueryWithLock, \"findEmployeeById\", 1, t1Lock, \"openjpa.hint.IgnorePreparedQuery\", true},            \n \n             {Act.RollbackTx},\n+            {Act.CloseEm}\n         };\n         launchActionSequence(testName, parameters, threadMain, thread1);\n     }"},{"sha":"149dbd3b5806826f5614d3dc5fa7e1e35a6532fc","filename":"openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerFindBasic.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerFindBasic.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerFindBasic.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerFindBasic.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -111,6 +111,7 @@ public void testCommon(String testName, LockModeType lockMode,\n             { Act.Clear },\n             { Act.Find, 1 },\n             { Act.TestEmployee, 1, lockMode.toString(), 0 },\n+            { Act.CloseEm }\n         };\n \n         launchActionSequence(testName, \"LockMode=\" + lockMode, threadMain);"},{"sha":"859d3f5000e42309ab958d57b3027416dd563cbb","filename":"openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerFindException.java","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerFindException.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerFindException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerFindException.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -67,6 +67,7 @@ public void testFindTxReqExceptions() {\n             \n             {Act.FindWithLock, 1, LockModeType.PESSIMISTIC_FORCE_INCREMENT },\n             {Act.TestException, 0, TransactionRequiredException.class },\n+            {Act.CloseEm},\n         };\n         launchActionSequence(\"testLockTxReqExceptions()\",\n             null, threadMainTxReqTest);\n@@ -182,6 +183,7 @@ public void testFindIllegalArgrumentExceptions() {\n             {Act.FindObject, LockEmployee.class, Boolean.TRUE, \n                 LockModeType.PESSIMISTIC_FORCE_INCREMENT },\n             {Act.TestException, 0, IllegalArgumentException.class },\n+            {Act.CloseEm}\n         };\n         launchActionSequence(\"testLockIllegalArgrumentExceptions()\",\n             \"Test invalid entity.\", threadMainInvEntityIllegalArgTest);\n@@ -239,6 +241,7 @@ public void commonLockOptimisticLockExceptions(LockModeType lockMode,\n                 ? OptimisticLockException.class : null},\n             {Act.TestException, 1, expectingOptLockException2\n                     ? OptimisticLockException.class : null},\n+            {Act.CloseEm}\n         };\n         Object[][] thread1OptLockExTest = {\n             {Act.CreateEm},\n@@ -252,6 +255,7 @@ public void commonLockOptimisticLockExceptions(LockModeType lockMode,\n             \n             {Act.CommitTx},\n             {Act.Notify, 0},\n+            {Act.CloseEm}\n         };        \n         launchActionSequence(\"testLockOptimisticLockExceptions()\", null,\n             threadMainOptLockExTest, thread1OptLockExTest);"},{"sha":"8f57c1997cfcd00fb0c94b5b7ea4d5a3edde130f","filename":"openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerFindPermutation.java","status":"modified","additions":66,"deletions":60,"changes":126,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerFindPermutation.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerFindPermutation.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerFindPermutation.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -59,8 +59,8 @@ public void testFindReadWrite() {\n     public void testFindReadPessimisticRead() {\n         commonFindTest(\n             \"testFind(Read,Commit/PessimisticRead,Commit)\",\n-            LockModeType.READ, Act.CommitTx, 1, null, \n-            LockModeType.PESSIMISTIC_READ, Act.CommitTx, 0, null);\n+            LockModeType.READ, Act.CommitTx, 1, ExpectingOptimisticLockExClass, \n+            LockModeType.PESSIMISTIC_READ, Act.CommitTx, 1, null);\n         commonFindTest(\n             \"testFind(Read,Commit/PessimisticRead,Rollback)\",\n             LockModeType.READ, Act.CommitTx, 1, null,\n@@ -70,8 +70,8 @@ public void testFindReadPessimisticRead() {\n     public void testFindReadPessimisticWrite() {\n         commonFindTest(\n             \"testFind(Read,Commit/PessimisticWrite,Commit)\",\n-            LockModeType.READ, Act.CommitTx, 1, null, \n-            LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 0, null);\n+            LockModeType.READ, Act.CommitTx, 1, ExpectingOptimisticLockExClass, \n+            LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 1, null);\n         commonFindTest(\n             \"testFind(Read,Commit/PessimisticWrite,Rollback)\",\n             LockModeType.READ, Act.CommitTx, 1, null,\n@@ -115,8 +115,8 @@ public void testFindWriteWrite() {\n     public void testFindWritePessimisticRead() {\n         commonFindTest(\n             \"testFind(Write,Commit/PessimisticRead,Commit)\",\n-            LockModeType.WRITE, Act.CommitTx, 1, null, \n-            LockModeType.PESSIMISTIC_READ, Act.CommitTx, 0, null);\n+            LockModeType.WRITE, Act.CommitTx, 1, ExpectingOptimisticLockExClass, \n+            LockModeType.PESSIMISTIC_READ, Act.CommitTx, 1, null);\n         commonFindTest(\n             \"testFind(Write,Commit/PessimisticRead,Rollback)\",\n             LockModeType.WRITE, Act.CommitTx, 1, null,\n@@ -126,8 +126,8 @@ public void testFindWritePessimisticRead() {\n     public void testFindWritePessimisticWrite() {\n         commonFindTest(\n             \"testFind(Write,Commit/PessimisticWrite,Commit)\",\n-            LockModeType.WRITE, Act.CommitTx, 1, null, \n-            LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 0, null);\n+            LockModeType.WRITE, Act.CommitTx, 1, ExpectingOptimisticLockExClass, \n+            LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 1, null);\n         commonFindTest(\n             \"testFind(Write,Commit/PessimisticWrite,Rollback)\",\n             LockModeType.WRITE, Act.CommitTx, 1, null,\n@@ -172,7 +172,7 @@ public void testFindPessimisticReadPessimisticRead() {\n         commonFindTest(\n             \"testFind(PessimisticRead,Commit/PessimisticRead,Commit)\",\n             LockModeType.PESSIMISTIC_READ, Act.CommitTx, 1, null, \n-            LockModeType.PESSIMISTIC_READ, Act.CommitTx, 0, null);\n+            LockModeType.PESSIMISTIC_READ, Act.CommitTx, 1, null);\n         commonFindTest(\n             \"testFind(PessimisticRead,Commit/PessimisticRead,Rollback)\",\n             LockModeType.PESSIMISTIC_READ, Act.CommitTx, 1, null,\n@@ -183,7 +183,7 @@ public void testFindPessimisticReadPessimisticWrite() {\n         commonFindTest(\n             \"testFind(PessimisticRead,Commit/PessimisticWrite,Commit)\",\n             LockModeType.PESSIMISTIC_READ, Act.CommitTx, 1, null, \n-            LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 0, null); \n+            LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 1, null); \n         commonFindTest(\n             \"testFind(PessimisticRead,Commit/PessimisticWrite,Rollback)\",\n             LockModeType.PESSIMISTIC_READ, Act.CommitTx, 1, null,\n@@ -228,7 +228,7 @@ public void testFindPessimsiticWritePessimisticRead() {\n         commonFindTest(\n             \"testFind(PessimsiticWrite,Commit/PessimisticRead,Commit)\",\n             LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 1, null, \n-            LockModeType.PESSIMISTIC_READ, Act.CommitTx, 0, null); \n+            LockModeType.PESSIMISTIC_READ, Act.CommitTx, 1, null); \n         commonFindTest(\n             \"testFind(PessimsiticWrite,Commit/PessimisticRead,Rollback)\",\n             LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 1, null,\n@@ -239,7 +239,7 @@ public void testFindPessimsiticWritePessimisticWrite() {\n         commonFindTest(\n             \"testFind(PessimsiticWrite,Commit/PessimisticWrite,Commit)\",\n             LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 1, null, \n-            LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 0, null); \n+            LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 1, null); \n         commonFindTest(\n             \"testFind(PessimsiticWrite,Commit/PessimisticWrite,Rollback)\",\n             LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 1, null,\n@@ -284,7 +284,7 @@ public void testFindPessimsiticForceIncPessimisticRead() {\n         commonFindTest(\n             \"testFind(PessimsiticForceInc,Commit/PessimisticRead,Commit)\",\n             LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 1, null, \n-            LockModeType.PESSIMISTIC_READ, Act.CommitTx, 0, null); \n+            LockModeType.PESSIMISTIC_READ, Act.CommitTx, 1, null); \n         commonFindTest(\n             \"testFind(PessimsiticForceInc,Commit/PessimisticRead,Rollback)\",\n             LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 1, null,\n@@ -295,7 +295,7 @@ public void testFindPessimsiticForceIncPessimisticWrite() {\n         commonFindTest(\n             \"testFind(PessimsiticForceInc,Commit/PessimisticWrite,Commit)\",\n             LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 1, null, \n-            LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 0, null);\n+            LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 1, null);\n         commonFindTest(\n             \"testFind(PessimsiticForceInc,Commit/PessimisticWrite,Rollback)\",\n             LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 1, null,\n@@ -327,51 +327,57 @@ private void commonFindTest( String testName,\n                 \", expectedEx= \" + Arrays.toString(t2Exceptions)};\n             \n         Object[][] threadMain = {\n-            {Act.CreateEm},\n-            {Act.Find},\n-            {Act.SaveVersion},\n-            {Act.TestEmployee, 1, Default_FirstName},\n-            \n-            {Act.NewThread, 1 },\n-            {Act.NewThread, 2 },\n-            {Act.StartThread, 1 },\n-            {Act.Wait},\n-            {Act.StartThread, 2 },\n-            {Act.Notify, 1, 1000 },\n-            {Act.Notify, 2, 1000 },\n-            {Act.WaitAllChildren},\n-            {Act.Find},\n-            {Act.TestEmployee, 1},\n-            {Act.TestException, 1, t1Exceptions },\n-            {Act.TestException, 2, t2Exceptions },\n-        };\n-        Object[][] thread1 = {\n-            {Act.CreateEm},\n-            {Act.StartTx},\n-            {Act.FindWithLock, 1, t1Lock},\n-            {Act.SaveVersion},\n-            {Act.TestException},\n-            {Act.Notify, 0},\n-            {Act.Wait},\n-            {Act.UpdateEmployee},\n-            \n-            {t1IsCommit},\n-            {Act.Find},\n-            {Act.TestEmployee, 1, null, t1VersionInc}\n-        };\n-        Object[][] thread2 = {\n-            {Act.CreateEm},\n-            {Act.StartTx},\n-            {Act.FindWithLock, 1, t2Lock},\n-            {Act.SaveVersion},\n-            {Act.Notify, 0},\n-            {Act.Wait},\n-            \n-            {t2IsCommit},\n-            {Act.Find},\n-            {Act.TestEmployee, 1, null, t2VersionInc}\n-        };\n-        launchActionSequence(testName, parameters, threadMain, thread1,\n-            thread2);\n+                {Act.CreateEm},\n+                {Act.Find},\n+                {Act.SaveVersion},\n+                {Act.TestEmployee, 1, Default_FirstName},\n+                {Act.CloseEm},\n+                {Act.Sleep, 100},\n+\n+                {Act.CreateEm},\n+                {Act.StartTx},\n+                {Act.FindWithLock, 1, t1Lock},\n+                {Act.SaveVersion},\n+                {Act.TestException},\n+                \n+                {Act.NewThread, 1 },\n+                {Act.StartThread, 1 },\n+                \n+                {Act.Wait},\n+                {Act.UpdateEmployee},                \n+                {t1IsCommit},\n+                \n+                {Act.Notify, 1},\n+\n+                {Act.Find},\n+                \n+                {Act.WaitAllChildren},\n+                {Act.Find},\n+                {Act.TestEmployee, 1, null, t1VersionInc},\n+                {Act.TestException, 0, t1Exceptions },\n+                {Act.TestException, 1, t2Exceptions },\n+                {Act.CloseEm}\n+            };\n+\n+            Object[][] thread1 = {\n+                {Act.CreateEm},\n+                {Act.StartTx},\n+                {Act.FindWithLock, 1, t2Lock},\n+                {Act.SaveVersion},\n+                {Act.TestException},\n+                {Act.Notify, 0},\n+                \n+                {Act.Wait},\n+                {Act.Sleep, 2000},  // sleep for at least 2 sec so that the entity name updated with timestamp \n+                                    // in each of the 2 threads are different. \n+                {Act.UpdateEmployee},\n+                \n+                {t2IsCommit},\n+                {Act.Sleep, 1000},\n+                {Act.Find},\n+                {Act.TestEmployee, 1, null, t2VersionInc},\n+                {Act.CloseEm}\n+            };\n+            launchActionSequence(testName, parameters, threadMain, thread1);\n     }\n }"},{"sha":"c4b7f3401bb8521dfe5aa749c30ca12bcbcf11a4","filename":"openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerLockBasic.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerLockBasic.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerLockBasic.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerLockBasic.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -109,6 +109,7 @@ public void testCommon(String testName, LockModeType lockMode,\n             { Act.Clear },\n             { Act.Find, 1 },\n             { Act.TestEmployee, 1, lockMode.toString(), 0 },\n+            { Act.CloseEm }\n         };\n         launchActionSequence(testName, \"LockMode=\" + lockMode, threadMain);\n     }"},{"sha":"4ecc9b03273041f58e52963c809b8e1f5ba75477","filename":"openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerLockException.java","status":"modified","additions":8,"deletions":1,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerLockException.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerLockException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerLockException.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -66,6 +66,7 @@ public void testLockTxReqExceptions() {\n             \n             {Act.Lock, 1, LockModeType.PESSIMISTIC_FORCE_INCREMENT },\n             {Act.TestException, 0, TransactionRequiredException.class },\n+            {Act.CloseEm}\n         };\n         \n         launchActionSequence(\"testLockTxReqExceptions()\",\n@@ -124,7 +125,8 @@ public void testLockIllegalArgrumentExceptions() {\n             {Act.TestException, 0, IllegalArgumentException.class },\n             {Act.LockObject, \"null\", LockModeType.PESSIMISTIC_FORCE_INCREMENT },\n             {Act.TestException, 0, IllegalArgumentException.class },\n-        };\n+            {Act.CloseEm}\n+       };\n         launchActionSequence(\"testLockIllegalArgrumentExceptions()\",\n             \"Test invalid entity.\", threadMainInvEntityIllegalArgTest);\n         \n@@ -163,6 +165,7 @@ public void testLockIllegalArgrumentExceptions() {\n \n             {Act.Lock, 2, LockModeType.PESSIMISTIC_FORCE_INCREMENT },\n             {Act.TestException, 0, IllegalArgumentException.class },\n+            {Act.CloseEm}\n         };\n         launchActionSequence(\"testLockIllegalArgrumentExceptions()\",\n             \"Test detached entity.\", threadMainDetachEntityIllegalArgTest);\n@@ -200,6 +203,7 @@ public void testLockIllegalArgrumentExceptions() {\n \n             {Act.Lock, 2, LockModeType.PESSIMISTIC_FORCE_INCREMENT },\n             {Act.TestException, 0, IllegalArgumentException.class },\n+            {Act.CloseEm}\n         };        \n         launchActionSequence(\"testLockIllegalArgrumentExceptions()\",\n             \"Test detached entity using serialization.\",\n@@ -238,6 +242,7 @@ public void testLockIllegalArgrumentExceptions() {\n             {Act.TestException},\n             \n             {Act.RollbackTx},\n+            {Act.CloseEm}\n         };\n         launchActionSequence(\n             \"testLockIllegalArgrumentExceptions()\",\n@@ -296,6 +301,7 @@ public void commonLockOptimisticLockExceptions(LockModeType lockMode,\n                 ? OptimisticLockException.class : null},\n             \n             {Act.RollbackTx},\n+            {Act.CloseEm}\n         };\n         Object[][] thread1OptLockExTest = {\n             {Act.CreateEm},\n@@ -309,6 +315,7 @@ public void commonLockOptimisticLockExceptions(LockModeType lockMode,\n             \n             {Act.CommitTx},\n             {Act.Notify, 0},\n+            {Act.CloseEm}\n         };        \n         launchActionSequence(\"testLockOptimisticLockExceptions()\", null,\n             threadMainOptLockExTest, thread1OptLockExTest);"},{"sha":"ee6993e86860febfb2d8ec9dda0531f90b8c82f9","filename":"openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerLockPermutation.java","status":"modified","additions":118,"deletions":103,"changes":221,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerLockPermutation.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerLockPermutation.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerLockPermutation.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -38,286 +38,295 @@ public void testLockReadRead() {\n         commonLockTest(\n             \"testLock(Read,Commit/Read,Commit)\",\n             LockModeType.READ, Act.CommitTx, 1, null, \n-            LockModeType.READ, Act.CommitTx, 1, ExpectingOptimisticLockExClass);\n+            LockModeType.READ, Act.CommitTx, 1, null, ExpectingOptimisticLockExClass);\n         commonLockTest(\n             \"testLock(Read,Commit/Read,Rollback)\",\n             LockModeType.READ, Act.CommitTx, 1, null,\n-            LockModeType.READ, Act.RollbackTx, 1, null);\n+            LockModeType.READ, Act.RollbackTx, 1, null, null);\n     }\n     \n     public void testLockReadWrite() {\n         commonLockTest(\n             \"testLock(Read,Commit/Write,Commit)\",\n             LockModeType.READ, Act.CommitTx, 1, null,\n-            LockModeType.WRITE, Act.CommitTx, 1, ExpectingOptimisticLockExClass);\n+            LockModeType.WRITE, Act.CommitTx, 1, null, ExpectingOptimisticLockExClass);\n         commonLockTest(\n             \"testLock(Read,Commit/Write,Rollback)\",\n             LockModeType.READ, Act.CommitTx, 1, null,\n-            LockModeType.WRITE, Act.RollbackTx, 1, null);\n+            LockModeType.WRITE, Act.RollbackTx, 1, null, null);\n     }\n     \n     public void testLockReadPessimisticRead() {\n         commonLockTest(\n             \"testLock(Read,Commit/PessimisticRead,Commit)\",\n-            LockModeType.READ, Act.CommitTx, 1, null, \n-            LockModeType.PESSIMISTIC_READ, Act.CommitTx, 0, null);\n+            LockModeType.READ, Act.CommitTx, 1, ExpectingOptimisticLockExClass, \n+            LockModeType.PESSIMISTIC_READ, Act.CommitTx, 1, null, null);\n         commonLockTest(\n             \"testLock(Read,Commit/PessimisticRead,Rollback)\",\n             LockModeType.READ, Act.CommitTx, 1, null,\n-            LockModeType.PESSIMISTIC_READ, Act.RollbackTx, 1, null);\n+            LockModeType.PESSIMISTIC_READ, Act.RollbackTx, 1, null, null);\n     }\n     \n     public void testLockReadPessimisticWrite() {\n         commonLockTest(\n             \"testLock(Read,Commit/PessimisticWrite,Commit)\",\n-            LockModeType.READ, Act.CommitTx, 1, null, \n-            LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 0, null);\n+            LockModeType.READ, Act.CommitTx, 1, ExpectingOptimisticLockExClass, \n+            LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 1, null, null);\n         commonLockTest(\n             \"testLock(Read,Commit/PessimisticWrite,Rollback)\",\n             LockModeType.READ, Act.CommitTx, 1, null,\n-            LockModeType.PESSIMISTIC_WRITE, Act.RollbackTx, 1, null);\n+            LockModeType.PESSIMISTIC_WRITE, Act.RollbackTx, 1, null, null);\n     }\n     \n     public void testLockReadPessimisticForceInc() {\n         commonLockTest(\n             \"testLock(Read,Commit/PessimisticForceInc,Commit)\",\n             LockModeType.READ, Act.CommitTx, 1, ExpectingOptimisticLockExClass, \n-            LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 1, null);\n+            LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 1, null, null);\n         commonLockTest(\n             \"testLock(Read,Commit/PessimisticForceInc,Rollback)\",\n             LockModeType.READ, Act.CommitTx, 1, null,\n-            LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.RollbackTx, 1, null);\n+            LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.RollbackTx, 1, null, null);\n     }\n     \n     /* ======== Thread 1 : Write Lock ============*/\n     public void testLockWriteRead() {\n         commonLockTest(\n             \"testLock(Write,Commit/Read,Commit)\",\n             LockModeType.WRITE, Act.CommitTx, 1, null, \n-            LockModeType.READ, Act.CommitTx, 1, ExpectingOptimisticLockExClass);\n+            LockModeType.READ, Act.CommitTx, 1, null, ExpectingOptimisticLockExClass);\n         commonLockTest(\n             \"testLock(Write,Commit/Read,Rollback)\",\n             LockModeType.WRITE, Act.CommitTx, 1, null,\n-            LockModeType.READ, Act.RollbackTx, 1, null);\n+            LockModeType.READ, Act.RollbackTx, 1, null, null);\n     }\n     \n     public void testLockWriteWrite() {\n         commonLockTest(\n             \"testLock(Write,Commit/Write,Commit)\",\n             LockModeType.WRITE, Act.CommitTx, 1, null,\n-            LockModeType.WRITE, Act.CommitTx, 1, ExpectingOptimisticLockExClass);\n+            LockModeType.WRITE, Act.CommitTx, 1, null, ExpectingOptimisticLockExClass);\n         commonLockTest(\n             \"testLock(Write,Commit/Write,Rollback)\",\n             LockModeType.WRITE, Act.CommitTx, 1, null,\n-            LockModeType.WRITE, Act.RollbackTx, 1, null);\n+            LockModeType.WRITE, Act.RollbackTx, 1, null, null);\n     }\n     \n     public void testLockWritePessimisticRead() {\n         commonLockTest(\n             \"testLock(Write,Commit/PessimisticRead,Commit)\",\n-            LockModeType.WRITE, Act.CommitTx, 1, null, \n-            LockModeType.PESSIMISTIC_READ, Act.CommitTx, 0, null);\n+            LockModeType.WRITE, Act.CommitTx, 1, ExpectingOptimisticLockExClass, \n+            LockModeType.PESSIMISTIC_READ, Act.CommitTx, 1, null, null);\n         commonLockTest(\n             \"testLock(Write,Commit/PessimisticRead,Rollback)\",\n             LockModeType.WRITE, Act.CommitTx, 1, null,\n-            LockModeType.PESSIMISTIC_READ, Act.RollbackTx, 1, null);\n+            LockModeType.PESSIMISTIC_READ, Act.RollbackTx, 1, null, null);\n     }\n     \n     public void testLockWritePessimisticWrite() {\n         commonLockTest(\n             \"testLock(Write,Commit/PessimisticWrite,Commit)\",\n-            LockModeType.WRITE, Act.CommitTx, 1, null, \n-            LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 0, null);\n+            LockModeType.WRITE, Act.CommitTx, 1, ExpectingOptimisticLockExClass, \n+            LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 1, null, null);\n         commonLockTest(\n             \"testLock(Write,Commit/PessimisticWrite,Rollback)\",\n             LockModeType.WRITE, Act.CommitTx, 1, null,\n-            LockModeType.PESSIMISTIC_WRITE, Act.RollbackTx, 1, null);\n+            LockModeType.PESSIMISTIC_WRITE, Act.RollbackTx, 1, null, null);\n     }\n     \n     public void testLockWritePessimisticForceInc() {\n         commonLockTest(\n             \"testLock(Write,Commit/PessimisticForceInc,Commit)\",\n             LockModeType.WRITE, Act.CommitTx, 1, ExpectingOptimisticLockExClass, \n-            LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 1, null);\n+            LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 1, null, null);\n         commonLockTest(\n             \"testLock(Write,Commit/PessimisticForceInc,Rollback)\",\n             LockModeType.WRITE, Act.CommitTx, 1, null,\n-            LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.RollbackTx, 1, null);\n+            LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.RollbackTx, 1, null, null);\n     }\n     \n     /* ======== Thread 1 : PessimisticRead Lock ============*/\n     public void testLockPessimisticReadRead() {\n         commonLockTest(\n             \"testLock(PessimisticRead,Commit/Read,Commit)\",\n             LockModeType.PESSIMISTIC_READ, Act.CommitTx, 1, null, \n-            LockModeType.READ, Act.CommitTx, 1, ExpectingOptimisticLockExClass);\n+            LockModeType.READ, Act.CommitTx, 1, null, ExpectingOptimisticLockExClass);\n         commonLockTest(\n             \"testLock(PessimisticRead,Commit/Read,Rollback)\",\n             LockModeType.PESSIMISTIC_READ, Act.CommitTx, 1, null,\n-            LockModeType.READ, Act.RollbackTx, 1, null);\n+            LockModeType.READ, Act.RollbackTx, 1, null, null);\n     }\n     \n     public void testLockPessimisticReadWrite() {\n         commonLockTest(\n             \"testLock(PessimisticRead,Commit/Write,Commit)\",\n             LockModeType.PESSIMISTIC_READ, Act.CommitTx, 1, null,\n-            LockModeType.WRITE, Act.CommitTx, 1, ExpectingOptimisticLockExClass);\n+            LockModeType.WRITE, Act.CommitTx, 1, null, ExpectingOptimisticLockExClass);\n         commonLockTest(\n             \"testLock(PessimisticRead,Commit/Write,Rollback)\",\n             LockModeType.PESSIMISTIC_READ, Act.CommitTx, 1, null,\n-            LockModeType.WRITE, Act.RollbackTx, 1, null);\n+            LockModeType.WRITE, Act.RollbackTx, 1, null, null);\n     }\n     \n     public void testLockPessimisticReadPessimisticRead() {\n         commonLockTest(\n             \"testLock(PessimisticRead,Commit/PessimisticRead,Commit)\",\n             LockModeType.PESSIMISTIC_READ, Act.CommitTx, 1, null, \n-            LockModeType.PESSIMISTIC_READ, Act.CommitTx, 1, ExpectingOptimisticLockExClass);\n+            LockModeType.PESSIMISTIC_READ, Act.CommitTx, 1, ExpectingOptimisticLockExClass,\n+            ExpectingOptimisticLockExClass);\n         commonLockTest(\n             \"testLock(PessimisticRead,Commit/PessimisticRead,Rollback)\",\n             LockModeType.PESSIMISTIC_READ, Act.CommitTx, 1, null,\n-            LockModeType.PESSIMISTIC_READ, Act.RollbackTx, 1, ExpectingOptimisticLockExClass);\n+            LockModeType.PESSIMISTIC_READ, Act.RollbackTx, 1, ExpectingOptimisticLockExClass, null);\n     }\n     \n     public void testLockPessimisticReadPessimisticWrite() {\n         commonLockTest(\n             \"testLock(PessimisticRead,Commit/PessimisticWrite,Commit)\",\n             LockModeType.PESSIMISTIC_READ, Act.CommitTx, 1, null, \n-            LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 1, ExpectingOptimisticLockExClass);\n+            LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 1, ExpectingOptimisticLockExClass,\n+            ExpectingOptimisticLockExClass);\n         commonLockTest(\n             \"testLock(PessimisticRead,Commit/PessimisticWrite,Rollback)\",\n             LockModeType.PESSIMISTIC_READ, Act.CommitTx, 1, null,\n-            LockModeType.PESSIMISTIC_WRITE, Act.RollbackTx, 1, ExpectingOptimisticLockExClass);\n+            LockModeType.PESSIMISTIC_WRITE, Act.RollbackTx, 1, ExpectingOptimisticLockExClass, null);\n     }\n     \n     public void testLockPessimisticReadPessimisticForceInc() {\n         commonLockTest(\n             \"testLock(PessimisticRead,Commit/PessimisticForceInc,Commit)\",\n             LockModeType.PESSIMISTIC_READ, Act.CommitTx, 1, null, \n-            LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 1, ExpectingOptimisticLockExClass);\n+            LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 1, ExpectingOptimisticLockExClass,\n+            ExpectingOptimisticLockExClass);\n         commonLockTest(\n             \"testLock(PessimisticRead,Commit/PessimisticForceInc,Rollback)\",\n             LockModeType.PESSIMISTIC_READ, Act.CommitTx, 1, null,\n-            LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.RollbackTx, 1, ExpectingOptimisticLockExClass);\n+            LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.RollbackTx, 1, ExpectingOptimisticLockExClass, null);\n     }\n     \n     /* ======== Thread 1 : Pessimsitic Write Lock ============*/\n     public void testLockPessimsiticWriteRead() {\n         commonLockTest(\n             \"testLock(PessimsiticWrite,Commit/Read,Commit)\",\n             LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 1, null, \n-            LockModeType.READ, Act.CommitTx, 1, ExpectingOptimisticLockExClass);\n+            LockModeType.READ, Act.CommitTx, 1, null, ExpectingOptimisticLockExClass);\n         commonLockTest(\n             \"testLock(PessimsiticWrite,Commit/Read,Rollback)\",\n             LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 1, null,\n-            LockModeType.READ, Act.RollbackTx, 1, null);\n+            LockModeType.READ, Act.RollbackTx, 1, null, null);\n     }\n     \n     public void testLockPessimsiticWriteWrite() {\n         commonLockTest(\n             \"testLock(PessimsiticWrite,Commit/Write,Commit)\",\n             LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 1, null,\n-            LockModeType.WRITE, Act.CommitTx, 1, ExpectingOptimisticLockExClass);\n+            LockModeType.WRITE, Act.CommitTx, 1, null, ExpectingOptimisticLockExClass);\n         commonLockTest(\n             \"testLock(PessimsiticWrite,Commit/Write,Rollback)\",\n             LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 1, null,\n-            LockModeType.WRITE, Act.RollbackTx, 1, null);\n+            LockModeType.WRITE, Act.RollbackTx, 1, null, null);\n     }\n     \n     public void testLockPessimsiticWritePessimisticRead() {\n         commonLockTest(\n             \"testLock(PessimsiticWrite,Commit/PessimisticRead,Commit)\",\n             LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 1, null, \n-            LockModeType.PESSIMISTIC_READ, Act.CommitTx, 1, ExpectingOptimisticLockExClass);\n+            LockModeType.PESSIMISTIC_READ, Act.CommitTx, 1, ExpectingOptimisticLockExClass,\n+            ExpectingOptimisticLockExClass);\n         commonLockTest(\n             \"testLock(PessimsiticWrite,Commit/PessimisticRead,Rollback)\",\n             LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 1, null,\n-            LockModeType.PESSIMISTIC_READ, Act.RollbackTx, 1, ExpectingOptimisticLockExClass);\n+            LockModeType.PESSIMISTIC_READ, Act.RollbackTx, 1, ExpectingOptimisticLockExClass, null);\n     }\n     \n     public void testLockPessimsiticWritePessimisticWrite() {\n         commonLockTest(\n             \"testLock(PessimsiticWrite,Commit/PessimisticWrite,Commit)\",\n             LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 1, null, \n-            LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 1, ExpectingOptimisticLockExClass);\n+            LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 1, ExpectingOptimisticLockExClass,\n+            ExpectingOptimisticLockExClass);\n         commonLockTest(\n             \"testLock(PessimsiticWrite,Commit/PessimisticWrite,Rollback)\",\n             LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 1, null,\n-            LockModeType.PESSIMISTIC_WRITE, Act.RollbackTx, 1, ExpectingOptimisticLockExClass);\n+            LockModeType.PESSIMISTIC_WRITE, Act.RollbackTx, 1, ExpectingOptimisticLockExClass, null);\n     }\n     \n     public void testLockPessimsiticWritePessimisticForceInc() {\n         commonLockTest(\n             \"testLock(PessimsiticWrite,Commit/PessimisticForceInc,Commit)\",\n             LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 1, null, \n-            LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 1, ExpectingOptimisticLockExClass);\n+            LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 1, ExpectingOptimisticLockExClass,\n+            ExpectingOptimisticLockExClass);\n         commonLockTest(\n             \"testLock(PessimsiticWrite,Commit/PessimisticForceInc,Rollback)\",\n             LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 1, null,\n-            LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.RollbackTx, 1, ExpectingOptimisticLockExClass);\n+            LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.RollbackTx, 1, ExpectingOptimisticLockExClass, null);\n     }\n     \n     /* ======== Thread 1 : Pessimsitic Force Increment Lock ============*/\n     public void testLockPessimsiticForceIncRead() {\n         commonLockTest(\n             \"testLock(PessimsiticForceInc,Commit/Read,Commit)\",\n             LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 1, null, \n-            LockModeType.READ, Act.CommitTx, 1, ExpectingOptimisticLockExClass);\n+            LockModeType.READ, Act.CommitTx, 1, null, ExpectingOptimisticLockExClass);\n         commonLockTest(\n             \"testLock(PessimsiticForceInc,Commit/Read,Rollback)\",\n             LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 1, null,\n-            LockModeType.READ, Act.RollbackTx, 1, null);\n+            LockModeType.READ, Act.RollbackTx, 1, null, null);\n     }\n     \n     public void testLockPessimsiticForceIncWrite() {\n         commonLockTest(\n             \"testLock(PessimsiticForceInc,Commit/Write,Commit)\",\n             LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 1, null,\n-            LockModeType.WRITE, Act.CommitTx, 1, ExpectingOptimisticLockExClass);\n+            LockModeType.WRITE, Act.CommitTx, 1, null, ExpectingOptimisticLockExClass);\n         commonLockTest(\n             \"testLock(PessimsiticForceInc,Commit/Write,Rollback)\",\n             LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 1, null,\n-            LockModeType.WRITE, Act.RollbackTx, 1, null);\n+            LockModeType.WRITE, Act.RollbackTx, 1, null, null);\n     }\n     \n     public void testLockPessimsiticForceIncPessimisticRead() {\n         commonLockTest(\n             \"testLock(PessimsiticForceInc,Commit/PessimisticRead,Commit)\",\n             LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 1, null, \n-            LockModeType.PESSIMISTIC_READ, Act.CommitTx, 1, ExpectingOptimisticLockExClass);\n+            LockModeType.PESSIMISTIC_READ, Act.CommitTx, 1, ExpectingOptimisticLockExClass,\n+            ExpectingOptimisticLockExClass);\n         commonLockTest(\n             \"testLock(PessimsiticForceInc,Commit/PessimisticRead,Rollback)\",\n             LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 1, null,\n-            LockModeType.PESSIMISTIC_READ, Act.RollbackTx, 1, ExpectingOptimisticLockExClass);\n+            LockModeType.PESSIMISTIC_READ, Act.RollbackTx, 1, ExpectingOptimisticLockExClass, null);\n     }\n     \n     public void testLockPessimsiticForceIncPessimisticWrite() {\n         commonLockTest(\n             \"testLock(PessimsiticForceInc,Commit/PessimisticWrite,Commit)\",\n             LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 1, null, \n-            LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 1, ExpectingOptimisticLockExClass);\n+            LockModeType.PESSIMISTIC_WRITE, Act.CommitTx, 1, ExpectingOptimisticLockExClass,\n+            ExpectingOptimisticLockExClass);\n         commonLockTest(\n             \"testLock(PessimsiticForceInc,Commit/PessimisticWrite,Rollback)\",\n             LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 1, null,\n-            LockModeType.PESSIMISTIC_WRITE, Act.RollbackTx, 1, ExpectingOptimisticLockExClass);\n+            LockModeType.PESSIMISTIC_WRITE, Act.RollbackTx, 1, ExpectingOptimisticLockExClass, null);\n     }\n     \n     public void testLockPessimsiticForceIncPessimisticForceInc() {\n         commonLockTest(\n             \"testLock(PessimsiticForceInc,Commit/PessimisticForceInc,Commit)\",\n             LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 1, null, \n-            LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 1, ExpectingOptimisticLockExClass);\n+            LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 1, ExpectingOptimisticLockExClass,\n+            ExpectingOptimisticLockExClass);\n         commonLockTest(\n             \"testLock(PessimsiticForceInc,Commit/PessimisticForceInc,Rollback)\",\n             LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 1, null,\n-            LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.RollbackTx, 1, ExpectingOptimisticLockExClass);\n+            LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.RollbackTx, 1, ExpectingOptimisticLockExClass, null);\n     }\n \n     private void commonLockTest( String testName, \n         LockModeType t1Lock, Act t1IsCommit, int t1VersionInc, \n             Class<?>[] t1Exceptions, \n         LockModeType t2Lock, Act t2IsCommit, int t2VersionInc,\n-            Class<?>[] t2Exceptions ) {\n+            Class<?>[] t2Exceptions, Class<?>[] t3Exceptions ) {\n         String[] parameters = new String[] {\n             \"Thread 1: lock= \" + t1Lock + \", isCommit= \" + t1IsCommit +\n                 \", versionInc= +\" + t1VersionInc +\n@@ -327,53 +336,59 @@ private void commonLockTest( String testName,\n                 \", expectedEx= \" + Arrays.toString(t2Exceptions)};\n             \n         Object[][] threadMain = {\n-            {Act.CreateEm},\n-            {Act.Find},\n-            {Act.SaveVersion},\n-            {Act.TestEmployee, 1, Default_FirstName},\n-            \n-            {Act.NewThread, 1 },\n-            {Act.NewThread, 2 },\n-            {Act.StartThread, 1 },\n-            {Act.Wait},\n-            {Act.StartThread, 2 },\n-            {Act.Notify, 1, 1000 },\n-            {Act.Notify, 2, 1000 },\n-            {Act.WaitAllChildren},\n-            {Act.Find},\n-            {Act.TestEmployee, 1},\n-            {Act.TestException, 1, t1Exceptions },\n-            {Act.TestException, 2, t2Exceptions },\n-        };\n-        Object[][] thread1 = {\n-            {Act.CreateEm},\n-            {Act.StartTx},\n-            {Act.Find},\n-            {Act.SaveVersion},\n-            {Act.Lock, 1, t1Lock },\n-            {Act.TestException},\n-            {Act.Notify, 0},\n-            {Act.Wait},\n-            {Act.UpdateEmployee},\n-            \n-            {t1IsCommit},\n-            {Act.Find},\n-            {Act.TestEmployee, 1, null, t1VersionInc}\n-        };\n-        Object[][] thread2 = {\n-            {Act.CreateEm},\n-            {Act.StartTx},\n-            {Act.Find},\n-            {Act.SaveVersion},\n-            {Act.Lock, 1, t2Lock },\n-            {Act.Notify, 0},\n-            {Act.Wait},\n-            \n-            {t2IsCommit},\n-            {Act.Find},\n-            {Act.TestEmployee, 1, null, t2VersionInc}\n-        };\n-        launchActionSequence(testName, parameters, threadMain, thread1,\n-            thread2);\n+                {Act.CreateEm},\n+                {Act.Find},\n+                {Act.SaveVersion},\n+                {Act.TestEmployee, 1, Default_FirstName},\n+                {Act.CloseEm},\n+                {Act.Sleep, 100},\n+\n+                {Act.CreateEm},\n+                {Act.StartTx},\n+                {Act.Find},\n+                {Act.SaveVersion},\n+                {Act.Lock, 1, t1Lock},\n+                {Act.TestException},\n+                \n+                {Act.NewThread, 1 },\n+                {Act.StartThread, 1 },\n+                \n+                {Act.Wait},\n+                {Act.UpdateEmployee},                \n+                {t1IsCommit},\n+                \n+                {Act.Notify, 1},\n+\n+                {Act.Find},\n+                \n+                {Act.WaitAllChildren},\n+                {Act.Find},\n+                {Act.TestEmployee, 1, null, t1VersionInc},\n+                {Act.TestException, 0, t1Exceptions },\n+                {Act.TestException, 1, t3Exceptions },\n+                {Act.CloseEm}\n+            };\n+\n+            Object[][] thread1 = {\n+                {Act.CreateEm},\n+                {Act.StartTx},\n+                {Act.Find},\n+                {Act.SaveVersion},\n+                {Act.Lock, 1, t2Lock},\n+                {Act.TestException, 1, t2Exceptions},\n+                {Act.Notify, 0},\n+                \n+                {Act.Wait},\n+                {Act.Sleep, 2000},  // sleep for at least 2 sec so that the entity name updated with timestamp \n+                                    // in each of the 2 threads are different. \n+                {Act.UpdateEmployee},\n+                \n+                {t2IsCommit},\n+                {Act.Sleep, 1000},\n+                {Act.Find},\n+                {Act.TestEmployee, 1, null, t2VersionInc},\n+                {Act.CloseEm}\n+            };\n+            launchActionSequence(testName, parameters, threadMain, thread1);\n     }\n }"},{"sha":"ef06c8a20144cb20d6b8a7257fb1ab4427ec9152","filename":"openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerRefreshBasic.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerRefreshBasic.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerRefreshBasic.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerRefreshBasic.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -116,6 +116,7 @@ public void testCommon(String testName, LockModeType lockMode,\n             { Act.Clear },\n             { Act.Find, 1 },\n             { Act.TestEmployee, 1, lockMode.toString(), 0 },\n+            { Act.CloseEm }\n         };\n         launchActionSequence(testName, \"LockMode=\" + lockMode, threadMain);\n     }"},{"sha":"922f8a495b917fedf9d326c829b48229235ca88d","filename":"openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerRefreshException.java","status":"modified","additions":7,"deletions":1,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerRefreshException.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerRefreshException.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerRefreshException.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -66,6 +66,7 @@ public void testRefreshNoTxReqExceptions() {\n             \n             {Act.Refresh, 1, LockModeType.PESSIMISTIC_FORCE_INCREMENT },\n             {Act.TestException, 0, null },\n+            {Act.CloseEm}\n         };\n         launchActionSequence(\"testLockTxReqExceptions()\",\n             null, threadMainTxReqTest);\n@@ -104,6 +105,7 @@ public void testRefreshTxReqExceptions() {\n             \n             {Act.RefreshWithLock, 1, LockModeType.PESSIMISTIC_FORCE_INCREMENT },\n             {Act.TestException, 0, TransactionRequiredException.class },\n+            {Act.CloseEm}\n         };\n         launchActionSequence(\"testLockTxReqExceptions()\",\n             null, threadMainTxReqTest);\n@@ -165,6 +167,7 @@ public void testRefreshIllegalArgrumentExceptions() {\n             {Act.RefreshObject, \"null\", \n                 LockModeType.PESSIMISTIC_FORCE_INCREMENT },\n             {Act.TestException, 0, IllegalArgumentException.class },\n+            {Act.CloseEm}\n         };\n         launchActionSequence(\"testLockIllegalArgrumentExceptions()\",\n             \"Test invalid entity.\", threadMainInvEntityIllegalArgTest);\n@@ -204,6 +207,7 @@ public void testRefreshIllegalArgrumentExceptions() {\n \n             {Act.Refresh, 2, LockModeType.PESSIMISTIC_FORCE_INCREMENT },\n             {Act.TestException, 0, IllegalArgumentException.class },\n+            {Act.CloseEm}\n         };\n         launchActionSequence(\"testLockIllegalArgrumentExceptions()\",\n             \"Test detached entity.\", threadMainDetachEntityIllegalArgTest);\n@@ -241,7 +245,8 @@ public void testRefreshIllegalArgrumentExceptions() {\n \n             {Act.Refresh, 2, LockModeType.PESSIMISTIC_FORCE_INCREMENT },\n             {Act.TestException, 0, IllegalArgumentException.class },\n-        };        \n+            {Act.CloseEm}\n+       };        \n         launchActionSequence(\"testLockIllegalArgrumentExceptions()\",\n             \"Test detached entity using serialization.\",\n             threadMainDetachSerializeIllegalArgTest);\n@@ -279,6 +284,7 @@ public void testRefreshIllegalArgrumentExceptions() {\n             {Act.TestException, 1, IllegalArgumentException.class },\n             \n             {Act.RollbackTx},\n+            {Act.CloseEm}\n         };\n         launchActionSequence(\n             \"testLockIllegalArgrumentExceptions()\","},{"sha":"2e5cba2ea2444a8d8a50ec6d612f2c943145c5f6","filename":"openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerRefreshPermutation.java","status":"modified","additions":62,"deletions":79,"changes":141,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerRefreshPermutation.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerRefreshPermutation.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestMixedLockManagerRefreshPermutation.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -308,7 +308,7 @@ public void testRefreshPessimsiticForceIncPessimisticForceInc() {\n         commonRefreshTest(\n             \"testRefresh(PessimsiticForceInc,Commit/PessimisticForceInc,Commit)\",\n             LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 3, null, \n-            LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 3, null);\n+            LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 2, null);\n         commonRefreshTest(\n             \"testRefresh(PessimsiticForceInc,Commit/PessimisticForceInc,Rollback)\",\n             LockModeType.PESSIMISTIC_FORCE_INCREMENT, Act.CommitTx, 2, null,\n@@ -328,87 +328,70 @@ private void commonRefreshTest( String testName,\n                 \", versionInc= +\" + t2VersionInc +\n                 \", expectedEx= \" + Arrays.toString(t2Exceptions)};\n             \n-        String t1Message1 = \"Refresh in Thread 1\";\n-        String t1Message2 = \"Refresh in Thread 1 Again\";\n-        String t2Message1 = \"Refresh in Thread 2\";\n+        String t1Message1 = \"Refresh in Thread 0\";\n+        String t1Message2 = \"Refresh in Thread 0 Again\";\n+        String t2Message1 = \"Refresh in Thread 1\";\n         \n         Object[][] threadMain = {\n-            {Act.CreateEm},\n-            {Act.Find},\n-            {Act.SaveVersion},\n-            {Act.TestEmployee, 1, Default_FirstName},\n-            \n-            {Act.NewThread, 1 },\n-            {Act.NewThread, 2 },\n-            \n-            {Act.StartThread, 1 },\n-            {Act.Wait},\n-            \n-            {Act.StartThread, 2 },            \n-            {Act.WaitAllChildren},\n-            \n-            {Act.Find},\n-            {Act.TestEmployee, 1},\n-            {Act.TestException, 1, t1Exceptions },\n-            {Act.TestException, 2, t2Exceptions },\n-        };\n-        Object[][] thread1 = {\n-            {Act.CreateEm},\n-            {Act.Find, 1},\n-            {Act.SaveVersion},\n-            {Act.TestEmployee, 1, Default_FirstName},\n-            {Act.Notify, 0},\n-            {Act.Wait},\n-            \n-            {Act.StartTx},\n-            {Act.UpdateEmployee, 1, t1Message1},\n-            {Act.TestEmployee, 1, t1Message1},\n-            {Act.CommitTx},\n-            {Act.TestException},\n-            {Act.Notify, 2},\n-            {Act.Wait},\n-            \n-            {Act.StartTx},\n-            {Act.RefreshWithLock, 1, t1Lock },\n-            {Act.TestLockMode, 1, t1Lock},\n-            {Act.TestEmployee, 1, t1Message1},\n-            {Act.UpdateEmployee, 1, t1Message2},\n-            {Act.TestEmployee, 1, t1Message2},\n-            \n-            {t1IsCommit},\n-            {Act.Notify, 2},\n-            {Act.Notify, 2},\n-            \n-            {Act.Clear},\n-            {Act.Find},\n-            {Act.TestEmployee, 1, null, t1VersionInc}\n-        };\n-        Object[][] thread2 = {\n-            {Act.CreateEm},\n-            {Act.Find, 1},\n-            {Act.SaveVersion},\n-            {Act.TestEmployee, 1, Default_FirstName},\n-            {Act.Notify, 1},\n-            {Act.Wait},\n+                {Act.CreateEm},\n+                {Act.Find},\n+                {Act.SaveVersion},\n+                {Act.TestEmployee, 1, Default_FirstName},\n+                \n+                {Act.NewThread, 1 },\n+                {Act.StartThread, 1 },\n+                {Act.Wait},\n+      \n+                {Act.StartTx},\n+                {Act.UpdateEmployee, 1, t1Message1},\n+                {Act.TestEmployee, 1, t1Message1},\n+                {Act.CommitTx},\n+                {Act.TestException},\n+                {Act.Notify, 1},\n+                {Act.Wait},\n+        \n+                {Act.StartTx},\n+                {Act.RefreshWithLock, 1, t1Lock},\n+                {Act.TestLockMode, 1, t1Lock},\n+                {Act.TestEmployee, 1, t1Message1},\n+                {Act.UpdateEmployee, 1, t1Message2},\n+                {Act.TestEmployee, 1, t1Message2},\n+        \n+                {t1IsCommit},\n+                \n+                {Act.Notify, 1},\n \n-            {Act.StartTx},\n-            {Act.UpdateEmployee, 1, t2Message1},\n-            {Act.TestEmployee, 1, t2Message1},\n-            {Act.RefreshWithLock, 1, t2Lock },\n-            {Act.TestLockMode, 1, t2Lock},\n-            {Act.TestEmployee, 1, t1Message1},\n-            \n-            {Act.Notify, 1},\n-            {Act.Wait},\n-            {t2IsCommit},\n-            {Act.Wait},\n-            \n-            {Act.Clear},\n-            {Act.Find},\n-            {Act.TestEmployee, 1, null, t2VersionInc},\n-        };\n+                {Act.WaitAllChildren},\n+                {Act.Find},\n+                {Act.TestEmployee, 1, null, t1VersionInc},\n+        \n+                {Act.TestException, 0, t1Exceptions },\n+                {Act.TestException, 1, t2Exceptions },\n+                {Act.CloseEm}\n+            };\n+\n+            Object[][] thread1 = {\n+                {Act.CreateEm},\n+                {Act.Find, 1},\n+                {Act.SaveVersion},\n+                {Act.TestEmployee, 1, Default_FirstName},\n+                {Act.TestException},\n+                {Act.Notify, 0},\n+                {Act.Wait},\n+                \n+                {Act.StartTx},\n+                {Act.UpdateEmployee, 1, t2Message1},\n+                {Act.TestEmployee, 1, t2Message1},\n+                {Act.RefreshWithLock, 1, t2Lock },\n+                {Act.TestLockMode, 1, t2Lock},\n+                {Act.TestEmployee, 1, t1Message1},\n+        \n+                {Act.Notify, 0},\n+                {Act.Wait},\n+                {t2IsCommit},\n         \n-        launchActionSequence(testName, parameters, threadMain, thread1,\n-            thread2);\n+                {Act.CloseEm}\n+            };\n+            launchActionSequence(testName, parameters, threadMain, thread1);\n     }\n }"},{"sha":"e67fd6cf0c663342b9349421d0f97784f082f096","filename":"openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestNamedQueryLockMode.java","status":"modified","additions":33,"deletions":9,"changes":42,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestNamedQueryLockMode.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestNamedQueryLockMode.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestNamedQueryLockMode.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -19,8 +19,13 @@\n package org.apache.openjpa.persistence.lockmgr;\n \n import javax.persistence.EntityManager;\n+import javax.persistence.LockModeType;\n import javax.persistence.Query;\n \n+import org.apache.openjpa.persistence.FetchPlan;\n+import org.apache.openjpa.persistence.OpenJPAEntityManager;\n+import org.apache.openjpa.persistence.OpenJPAEntityManagerSPI;\n+import org.apache.openjpa.persistence.OpenJPAQuery;\n import org.apache.openjpa.persistence.TransactionRequiredException;\n import org.apache.openjpa.persistence.test.AllowFailure;\n import org.apache.openjpa.persistence.test.SQLListenerTestCase;\n@@ -32,23 +37,26 @@\n  * \n  */\n public class TestNamedQueryLockMode extends SQLListenerTestCase {\n+    String lockClause = \"FOR UPDATE\";\n+    \n     public void setUp() {\n         super.setUp(CLEAR_TABLES, LockEmployee.class, \n             \"openjpa.LockManager\", \"pessimistic\", \n             \"openjpa.Optimistic\", \"false\"\n             );\n+        lockClause = getForUpdateClause();\n     }\n \n     public void testForUpdateClausePresentInNamedQueryWithLockMode() {\n         EntityManager em = emf.createEntityManager();\n         em.getTransaction().begin();\n-        assertClausePresentInSQL(\"FOR UPDATE\", em.createNamedQuery(\"findEmployeeByIdWithLock\").setParameter(\"id\", 0));\n+        assertClausePresentInSQL(lockClause, em.createNamedQuery(\"findEmployeeByIdWithLock\").setParameter(\"id\", 0));\n         em.getTransaction().rollback();\n         em.getTransaction().begin();\n-        assertClausePresentInSQL(\"FOR UPDATE\", em.createNamedQuery(\"findEmployeeByIdWithLock\").setParameter(\"id\", 0));\n+        assertClausePresentInSQL(lockClause, em.createNamedQuery(\"findEmployeeByIdWithLock\").setParameter(\"id\", 0));\n         em.getTransaction().rollback();\n         em.getTransaction().begin();\n-        assertClausePresentInSQL(\"FOR UPDATE\", em.createNamedQuery(\"findEmployeeByIdWithLock\").setParameter(\"id\", 0));\n+        assertClausePresentInSQL(lockClause, em.createNamedQuery(\"findEmployeeByIdWithLock\").setParameter(\"id\", 0));\n         em.getTransaction().rollback();\n     }\n \n@@ -57,8 +65,7 @@ public void testNamedQueryWithLockModeMustExecuteInTransaction() {\n         EntityManager em = emf.createEntityManager();\n         // execute without a transaction\n          try {\n-         em.createNamedQuery(\"findEmployeeByIdWithLock\").setParameter(\"id\",\n-         0).getResultList();\n+         em.createNamedQuery(\"findEmployeeByIdWithLock\").setParameter(\"id\", 0).getResultList();\n          fail(\"Expected \" + TransactionRequiredException.class.getName());\n          } catch (TransactionRequiredException e) {\n          // Expected\n@@ -68,17 +75,34 @@ public void testNamedQueryWithLockModeMustExecuteInTransaction() {\n     public void testForUpdateClausePresentInQueryWithDefault() {\n         EntityManager em = emf.createEntityManager();\n         em.getTransaction().begin();\n-        assertClausePresentInSQL(\"FOR UPDATE\", em.createNamedQuery(\"findEmployeeById\").setParameter(\"id\", 0));\n-        assertClausePresentInSQL(\"FOR UPDATE\", em.createNamedQuery(\"findEmployeeById\").setParameter(\"id\", 0));\n+        assertClausePresentInSQL(lockClause, em.createNamedQuery(\"findEmployeeById\").setParameter(\"id\", 0));\n+        assertClausePresentInSQL(lockClause, em.createNamedQuery(\"findEmployeeById\").setParameter(\"id\", 0));        \n+        em.getTransaction().commit();\n+    }\n+    \n+    public void testForUpdateClauseAbsentInQueryWithFetchPlanNoneLockMode() {\n+        OpenJPAEntityManagerSPI em = emf.createEntityManager();\n+        em.getTransaction().begin();\n+        \n+        OpenJPAQuery<?> q = em.createNamedQuery(\"findEmployeeById\").setParameter(\"id\", 0); \n+        FetchPlan fp = q.getFetchPlan();\n+        fp.setReadLockMode(LockModeType.NONE);\n+        assertClauseAbsentInSQL(lockClause, q);\n+        \n+        q = em.createNamedQuery(\"findEmployeeByIdWithNoLock\").setParameter(\"id\", 0); \n+        fp = q.getFetchPlan();\n+        fp.setReadLockMode(LockModeType.NONE);\n+        assertClauseAbsentInSQL(lockClause, q);\n+        \n         em.getTransaction().commit();\n     }\n \n     @AllowFailure\n     public void testForUpdateClauseAbsentInQueryWithExplictNoLock() {\n         EntityManager em = emf.createEntityManager();\n         em.getTransaction().begin();\n-        assertClauseAbsentInSQL(\"FOR UPDATE\", em.createNamedQuery(\"findEmployeeByIdWithNoLock\").setParameter(\"id\", 0));\n-        assertClauseAbsentInSQL(\"FOR UPDATE\", em.createNamedQuery(\"findEmployeeByIdWithNoLock\").setParameter(\"id\", 0));\n+        assertClauseAbsentInSQL(lockClause, em.createNamedQuery(\"findEmployeeByIdWithNoLock\").setParameter(\"id\", 0));\n+        assertClauseAbsentInSQL(lockClause, em.createNamedQuery(\"findEmployeeByIdWithNoLock\").setParameter(\"id\", 0));\n         em.getTransaction().commit();\n     }\n "},{"sha":"2850dd998bf49b4f8cb663915defc2f479beacfc","filename":"openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestOptimisticNamedQueryLockMode.java","status":"added","additions":132,"deletions":0,"changes":132,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestOptimisticNamedQueryLockMode.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestOptimisticNamedQueryLockMode.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestOptimisticNamedQueryLockMode.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -0,0 +1,132 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.openjpa.persistence.lockmgr;\n+\n+import javax.persistence.EntityManager;\n+import javax.persistence.LockModeType;\n+import javax.persistence.Query;\n+\n+import org.apache.openjpa.jdbc.conf.JDBCConfiguration;\n+import org.apache.openjpa.jdbc.sql.DBDictionary;\n+import org.apache.openjpa.persistence.FetchPlan;\n+import org.apache.openjpa.persistence.OpenJPAEntityManager;\n+import org.apache.openjpa.persistence.OpenJPAEntityManagerSPI;\n+import org.apache.openjpa.persistence.OpenJPAQuery;\n+import org.apache.openjpa.persistence.test.SQLListenerTestCase;\n+\n+/**\n+ * Tests whether the lock mode on named query emits a FOR UPDATE clause in target SQL\n+ * query when Optimistic=true (default), with pessimistic lock manager.\n+ */\n+public class TestOptimisticNamedQueryLockMode extends SQLListenerTestCase {\n+    String lockClause = \"FOR UPDATE\"; \n+    \n+    public void setUp() {\n+        super.setUp(CLEAR_TABLES, LockEmployee.class, \n+            \"openjpa.LockManager\", \"pessimistic\"\n+            );\n+         lockClause = getForUpdateClause();\n+    }\n+\n+    /*\n+     * Optimistic=true, but a lock mode specified - assert statement will lock.\n+     */\n+    public void testForUpdateClausePresentInNamedQueryWithLockMode() {\n+        EntityManager em = emf.createEntityManager();\n+        em.getTransaction().begin();\n+        assertClausePresentInSQL(lockClause, em.createNamedQuery(\"findEmployeeByIdWithLock\").setParameter(\"id\", 0));\n+        em.getTransaction().rollback();\n+        em.getTransaction().begin();\n+        assertClausePresentInSQL(lockClause, em.createNamedQuery(\"findEmployeeByIdWithLock\").setParameter(\"id\", 0));\n+        em.getTransaction().rollback();\n+        em.getTransaction().begin();\n+        assertClausePresentInSQL(lockClause, em.createNamedQuery(\"findEmployeeByIdWithLock\").setParameter(\"id\", 0));\n+        em.getTransaction().rollback();\n+        em.close();\n+    }\n+\n+    /*\n+     * Optimistic=true, but a no lock mode specified - assert statement does not lock.\n+     */\n+    public void testForUpdateClausePresentInQueryWithDefault() {\n+        EntityManager em = emf.createEntityManager();\n+        em.getTransaction().begin();\n+        assertClauseAbsentInSQL(lockClause, em.createNamedQuery(\"findEmployeeById\").setParameter(\"id\", 0));\n+        assertClauseAbsentInSQL(lockClause, em.createNamedQuery(\"findEmployeeById\").setParameter(\"id\", 0));\n+        \n+        OpenJPAEntityManager oem = (OpenJPAEntityManager)em;\n+        OpenJPAQuery<?> q = oem.createNamedQuery(\"findEmployeeById\").setParameter(\"id\", 0); \n+        FetchPlan fp = q.getFetchPlan();\n+        fp.setReadLockMode(LockModeType.NONE);\n+\n+        em.getTransaction().commit();\n+        em.close();\n+    }\n+    \n+    /*\n+     * Optimistic=true, lock mode = none set explicitly on the fetch plan.\n+     */\n+    public void testForUpdateClauseAbsentInQueryWithFetchPlanNoneLockMode() {\n+        OpenJPAEntityManagerSPI em = emf.createEntityManager();\n+        em.getTransaction().begin();\n+        \n+        OpenJPAQuery<?> q = em.createNamedQuery(\"findEmployeeById\").setParameter(\"id\", 0); \n+        FetchPlan fp = q.getFetchPlan();\n+        fp.setReadLockMode(LockModeType.NONE);\n+        assertClauseAbsentInSQL(lockClause, q);\n+        \n+        q = em.createNamedQuery(\"findEmployeeByIdWithNoLock\").setParameter(\"id\", 0); \n+        fp = q.getFetchPlan();\n+        fp.setReadLockMode(LockModeType.NONE);\n+        assertClauseAbsentInSQL(lockClause, q);\n+        \n+        em.getTransaction().commit();\n+        em.close();\n+    }\n+\n+    /*\n+    * Optimistic = false, explicit no locking on the named query\n+    */\n+    public void testForUpdateClauseAbsentInQueryWithExplictNoLock() {\n+        EntityManager em = emf.createEntityManager();\n+        em.getTransaction().begin();\n+        assertClauseAbsentInSQL(lockClause, em.createNamedQuery(\"findEmployeeByIdWithNoLock\").setParameter(\"id\", 0));\n+        assertClauseAbsentInSQL(lockClause, em.createNamedQuery(\"findEmployeeByIdWithNoLock\").setParameter(\"id\", 0));\n+        em.getTransaction().commit();\n+        em.close();\n+    }\n+\n+    String getLastSQL() {\n+        String last = sql.get(getSQLCount() - 1);\n+        assertNotNull(\"No last sql found\", last);\n+        return last;\n+    }\n+\n+    void assertClausePresentInSQL(String clause, Query q) {\n+        q.getResultList();\n+        String last = getLastSQL();\n+        assertTrue(clause + \" is not present in \" + last, last.toUpperCase().indexOf(clause) != -1);\n+    }\n+\n+    void assertClauseAbsentInSQL(String clause, Query q) {\n+        q.getResultList();\n+        String last = getLastSQL();\n+        assertTrue(clause + \" is not absent in \" + last, last.toUpperCase().indexOf(clause) == -1);\n+    }\n+}"},{"sha":"e154e55c58080ce6d6b1db0aad40959f580710c8","filename":"openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestPessimisticLocks.java","status":"modified","additions":64,"deletions":24,"changes":88,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestPessimisticLocks.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestPessimisticLocks.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/TestPessimisticLocks.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -34,6 +34,7 @@\n import org.apache.openjpa.jdbc.conf.JDBCConfiguration;\n import org.apache.openjpa.jdbc.sql.DBDictionary;\n import org.apache.openjpa.persistence.LockTimeoutException;\n+import org.apache.openjpa.persistence.OpenJPAEntityManagerFactorySPI;\n import org.apache.openjpa.persistence.test.SQLListenerTestCase;\n import org.apache.openjpa.util.OpenJPAException;\n \n@@ -44,8 +45,26 @@\n public class TestPessimisticLocks extends SQLListenerTestCase {\n \n     private DBDictionary dict = null;\n+    private int lockWaitTime = 2000;\n \n     public void setUp() {\n+        // Disable tests for any DB that has supportsQueryTimeout==false, like Postgres\n+        OpenJPAEntityManagerFactorySPI tempEMF = emf;\n+        if (tempEMF == null) {\n+            tempEMF = createEMF();\n+        }\n+        assertNotNull(tempEMF);\n+        dict = ((JDBCConfiguration)tempEMF.getConfiguration()).getDBDictionaryInstance();\n+        assertNotNull(dict);\n+        if (!dict.supportsQueryTimeout)\n+            setTestsDisabled(true);\n+        if (emf == null) {\n+            closeEMF(tempEMF);\n+        }\n+\n+        if (isTestsDisabled())\n+            return;\n+        \n         setUp(CLEAR_TABLES, Employee.class, Department.class, \"openjpa.LockManager\", \"mixed\");\n \n         EntityManager em = null;\n@@ -93,22 +112,25 @@ public void testFindAfterQueryWithPessimisticLocks() {\n         // Lock all selected Employees, skip the first one, i.e should lock\n         // Employee(2)\n         query.setLockMode(LockModeType.PESSIMISTIC_READ);\n-        query.setHint(\"javax.persistence.query.timeout\", 2000);\n+        query.setHint(\"javax.persistence.query.timeout\", lockWaitTime);\n         List<Employee> employees = query.getResultList();\n         assertEquals(\"Expected 1 element with emplyee id=2\", employees.size(), 1);\n         assertTrue(\"Test Employee first name = 'first.2'\", employees.get(0).getFirstName().equals(\"first.1\")\n                 || employees.get(0).getFirstName().equals(\"first.2\"));\n \n         em2.getTransaction().begin();\n         Map<String, Object> hints = new HashMap<String, Object>();\n-        hints.put(\"javax.persistence.lock.timeout\", 2000);\n+        hints.put(\"javax.persistence.lock.timeout\", lockWaitTime);\n         // find Employee(2) with a lock, should block and expected a\n         // PessimisticLockException\n         try {\n             em2.find(Employee.class, 2, LockModeType.PESSIMISTIC_READ, hints);\n             fail(\"Unexcpected find succeeded. Should throw a PessimisticLockException.\");\n-        } catch (Throwable e) {\n-            assertError(e, PessimisticLockException.class);\n+        } catch (Throwable e) {            \n+            if (!dict.supportsLockingWithMultipleTables)\n+                assertError(e, PessimisticLockException.class);\n+            else \n+                assertError(e, LockTimeoutException.class);\n         } finally {\n             if (em1.getTransaction().isActive())\n                 em1.getTransaction().rollback();\n@@ -122,15 +144,15 @@ public void testFindAfterQueryWithPessimisticLocks() {\n         // Lock all selected Departments, skip the first one, i.e should\n         // lock Department(20)\n         query.setLockMode(LockModeType.PESSIMISTIC_READ);\n-        query.setHint(\"javax.persistence.query.timeout\", 2000);\n+        query.setHint(\"javax.persistence.query.timeout\", lockWaitTime);\n         List<Department> depts = query2.getResultList();\n         assertEquals(\"Expected 1 element with department id=20\", depts.size(), 1);\n         assertTrue(\"Test department name = 'D20'\", depts.get(0).getName().equals(\"D10\")\n                 || depts.get(0).getName().equals(\"D20\"));\n \n         em2.getTransaction().begin();\n         Map<String, Object> map = new HashMap<String, Object>();\n-        map.put(\"javax.persistence.lock.timeout\", 2000);\n+        map.put(\"javax.persistence.lock.timeout\", lockWaitTime);\n         // find Employee(2) with a lock, no block since only department was\n         // locked\n         try {\n@@ -160,21 +182,24 @@ public void testFindAfterQueryOrderByWithPessimisticLocks() {\n         // Lock all selected Employees, skip the first one, i.e should lock\n         // Employee(2)\n         query.setLockMode(LockModeType.PESSIMISTIC_READ);\n-        query.setHint(\"javax.persistence.query.timeout\", 2000);\n+        query.setHint(\"javax.persistence.query.timeout\", lockWaitTime);\n         List<Employee> q = query.getResultList();\n         assertEquals(\"Expected 1 element with emplyee id=2\", q.size(), 1);\n         assertEquals(\"Test Employee first name = 'first.2'\", q.get(0).getFirstName(), \"first.2\");\n \n         em2.getTransaction().begin();\n         Map<String, Object> map = new HashMap<String, Object>();\n-        map.put(\"javax.persistence.lock.timeout\", 2000);\n+        map.put(\"javax.persistence.lock.timeout\", lockWaitTime);\n         // find Employee(2) with a lock, should block and expected a\n         // PessimisticLockException\n         try {\n             em2.find(Employee.class, 2, LockModeType.PESSIMISTIC_READ, map);\n             fail(\"Unexcpected find succeeded. Should throw a PessimisticLockException.\");\n         } catch (Exception e) {\n-            assertError(e, PessimisticLockException.class);\n+            if (!dict.supportsLockingWithMultipleTables)\n+                assertError(e, PessimisticLockException.class);\n+            else\n+                assertError(e, LockTimeoutException.class);\n         } finally {\n             if (em1.getTransaction().isActive())\n                 em1.getTransaction().rollback();\n@@ -188,22 +213,25 @@ public void testFindAfterQueryOrderByWithPessimisticLocks() {\n         // Lock all selected Departments, skip the first one, i.e should\n         // lock Department(20)\n         query.setLockMode(LockModeType.PESSIMISTIC_READ);\n-        query.setHint(\"javax.persistence.query.timeout\", 2000);\n+        query.setHint(\"javax.persistence.query.timeout\", lockWaitTime);\n         List<Department> result = query.getResultList();\n         assertEquals(\"Expected 1 element with department id=20\", q.size(), 1);\n         assertEquals(\"Test department name = 'D20'\", result.get(0).getName(), \"D20\");\n \n         em2.getTransaction().begin();\n         map.clear();\n-        map.put(\"javax.persistence.lock.timeout\", 2000);\n+        map.put(\"javax.persistence.lock.timeout\", lockWaitTime);\n         // find Employee(2) with a lock, no block since only department was\n         // locked\n         try {\n             Employee emp = em2.find(Employee.class, 1, LockModeType.PESSIMISTIC_READ, map);\n             assertNotNull(\"Query locks department only, therefore should find Employee.\", emp);\n             assertEquals(\"Test Employee first name = 'first.1'\", emp.getFirstName(), \"first.1\");\n         } catch (Exception ex) {\n-            fail(\"Caught unexpected \" + ex.getClass().getName() + \":\" + ex.getMessage());\n+            if (!dict.supportsLockingWithOrderClause)\n+                fail(\"Caught unexpected \" + ex.getClass().getName() + \":\" + ex.getMessage());\n+            else \n+                assertError(ex, LockTimeoutException.class);\n         } finally {\n             if (em1.getTransaction().isActive())\n                 em1.getTransaction().rollback();\n@@ -223,22 +251,25 @@ public void testQueryAfterFindWithPessimisticLocks() {\n         try {\n             em2.getTransaction().begin();\n             Map<String, Object> map = new HashMap<String, Object>();\n-            map.put(\"javax.persistence.lock.timeout\", 2000);\n+            map.put(\"javax.persistence.lock.timeout\", lockWaitTime);\n             // Lock Emplyee(1), no department should be locked\n             em2.find(Employee.class, 1, LockModeType.PESSIMISTIC_READ, map);\n \n             em1.getTransaction().begin();\n             Query query = em1.createQuery(\"select e.department from Employee e where e.id < 10\").setFirstResult(1);\n             query.setLockMode(LockModeType.PESSIMISTIC_READ);\n-            query.setHint(\"javax.persistence.query.timeout\", 2000);\n+            query.setHint(\"javax.persistence.query.timeout\", lockWaitTime);\n             // Lock all selected Department but skip the first, i.e. lock\n             // Department(20), should query successfully.\n             List<Department> q = query.getResultList();\n             assertEquals(\"Expected 1 element with department id=20\", q.size(), 1);\n             assertTrue(\"Test department name = 'D20'\", q.get(0).getName().equals(\"D10\")\n                     || q.get(0).getName().equals(\"D20\"));\n         } catch (Exception ex) {\n-            fail(\"Caught unexpected \" + ex.getClass().getName() + \":\" + ex.getMessage());\n+            if (!dict.supportsLockingWithMultipleTables)\n+                fail(\"Caught unexpected \" + ex.getClass().getName() + \":\" + ex.getMessage());\n+            else\n+                assertError(ex, QueryTimeoutException.class);\n         } finally {\n             if (em1.getTransaction().isActive())\n                 em1.getTransaction().rollback();\n@@ -249,7 +280,7 @@ public void testQueryAfterFindWithPessimisticLocks() {\n         em2.getTransaction().begin();\n \n         Map<String, Object> map = new HashMap<String, Object>();\n-        map.put(\"javax.persistence.lock.timeout\", 2000);\n+        map.put(\"javax.persistence.lock.timeout\", lockWaitTime);\n         // Lock Emplyee(2), no department should be locked\n         em2.find(Employee.class, 2, LockModeType.PESSIMISTIC_READ, map);\n \n@@ -258,12 +289,15 @@ public void testQueryAfterFindWithPessimisticLocks() {\n         // Lock all selected Employees, skip the first one, i.e should lock\n         // Employee(2)\n         query.setLockMode(LockModeType.PESSIMISTIC_READ);\n-        query.setHint(\"javax.persistence.query.timeout\", 1000);\n+        query.setHint(\"javax.persistence.query.timeout\", lockWaitTime);\n         try {\n             List<Employee> q = query.getResultList();\n             fail(\"Unexcpected find succeeded. Should throw a PessimisticLockException.\");\n         } catch (Exception e) {\n-            assertError(e, PessimisticLockException.class);\n+            if (!dict.supportsLockingWithMultipleTables)\n+                assertError(e, PessimisticLockException.class);\n+            else\n+                assertError(e, QueryTimeoutException.class);\n         } finally {\n             if (em1.getTransaction().isActive())\n                 em1.getTransaction().rollback();\n@@ -282,23 +316,26 @@ public void testQueryOrderByAfterFindWithPessimisticLocks() {\n         EntityManager em2 = emf.createEntityManager();\n         em2.getTransaction().begin();\n         Map<String, Object> map = new HashMap<String, Object>();\n-        map.put(\"javax.persistence.lock.timeout\", 2000);\n+        map.put(\"javax.persistence.lock.timeout\", lockWaitTime);\n         // Lock Emplyee(1), no department should be locked\n         em2.find(Employee.class, 1, LockModeType.PESSIMISTIC_READ, map);\n \n         em1.getTransaction().begin();\n         Query query = em1.createQuery(\"select e.department from Employee e where e.id < 10 order by e.department.id\")\n                 .setFirstResult(1);\n         query.setLockMode(LockModeType.PESSIMISTIC_READ);\n-        query.setHint(\"javax.persistence.query.timeout\", 2000);\n+        query.setHint(\"javax.persistence.query.timeout\", lockWaitTime);\n         // Lock all selected Department but skip the first, i.e. lock\n         // Department(20), should query successfully.\n         try {\n             List<Department> q = query.getResultList();\n             assertEquals(\"Expected 1 element with department id=20\", q.size(), 1);\n             assertEquals(\"Test department name = 'D20'\", q.get(0).getName(), \"D20\");\n         } catch (Exception ex) {\n-            fail(\"Caught unexpected \" + ex.getClass().getName() + \":\" + ex.getMessage());\n+            if (!dict.supportsLockingWithMultipleTables)\n+                fail(\"Caught unexpected \" + ex.getClass().getName() + \":\" + ex.getMessage());\n+            else \n+                assertError(ex, QueryTimeoutException.class);\n         } finally {\n             if (em1.getTransaction().isActive())\n                 em1.getTransaction().rollback();\n@@ -309,7 +346,7 @@ public void testQueryOrderByAfterFindWithPessimisticLocks() {\n         em2.getTransaction().begin();\n \n         map.clear();\n-        map.put(\"javax.persistence.lock.timeout\", 2000);\n+        map.put(\"javax.persistence.lock.timeout\", lockWaitTime);\n         // Lock Emplyee(2), no department should be locked\n         em2.find(Employee.class, 2, LockModeType.PESSIMISTIC_READ, map);\n \n@@ -318,12 +355,15 @@ public void testQueryOrderByAfterFindWithPessimisticLocks() {\n         // Lock all selected Employees, skip the first one, i.e should lock\n         // Employee(2)\n         query.setLockMode(LockModeType.PESSIMISTIC_READ);\n-        query.setHint(\"javax.persistence.query.timeout\", 2000);\n+        query.setHint(\"javax.persistence.query.timeout\", lockWaitTime);\n         try {\n             List<?> q = query.getResultList();\n             fail(\"Unexcpected find succeeded. Should throw a PessimisticLockException.\");\n         } catch (Exception e) {\n-            assertError(e, PessimisticLockException.class);\n+            if (!dict.supportsLockingWithMultipleTables)\n+                assertError(e, PessimisticLockException.class);\n+            else \n+                assertError(e, QueryTimeoutException.class);\n         } finally {\n             if (em1.getTransaction().isActive())\n                 em1.getTransaction().rollback();"},{"sha":"413371fed7e1ffe00d5bd00fb06ac3afbaa72b9c","filename":"openjpa-persistence/pom.xml","status":"modified","additions":10,"deletions":25,"changes":35,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/pom.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -21,23 +21,26 @@\n     Maven release plugin requires the project tag to be on a single line. \n -->\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n     <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <groupId>org.apache.openjpa</groupId>\n+        <artifactId>openjpa-parent</artifactId>\n+        <version>2.0.1</version>\n+    </parent>\n+\n     <groupId>org.apache.openjpa</groupId>\n     <artifactId>openjpa-persistence</artifactId>\n     <packaging>jar</packaging>\n     <name>OpenJPA Persistence</name>\n     <description>OpenJPA Persistence</description>\n-    <url>http://openjpa.apache.org</url>\n-    <parent>\n-        <groupId>org.apache.openjpa</groupId>\n-        <artifactId>openjpa-parent</artifactId>\n-        <version>2.0.0</version>\n-    </parent>\n+\n     <dependencies>\n         <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa-kernel</artifactId>\n-            <version>${pom.version}</version>\n+            <version>${project.version}</version>\n         </dependency>\n         <dependency>\n             <groupId>org.apache.geronimo.specs</groupId>\n@@ -56,22 +59,4 @@\n             <scope>provided</scope>\n         </dependency>\n     </dependencies>\n-    \n-    <build>\n-        <plugins>\n-            <plugin>\n-                <groupId>org.apache.maven.plugins</groupId>\n-                <artifactId>maven-jar-plugin</artifactId>\n-                <executions>\n-                    <execution>\n-                        <id>attach-tests</id>\n-                        <phase>verify</phase>\n-                        <goals>\n-                            <goal>test-jar</goal>\n-                        </goals>\n-                    </execution>\n-                </executions>\n-            </plugin>\n-        </plugins>\n-    </build>\n </project>"},{"sha":"a2e20fbd216e1abc87a1a500f29fb1be908042e3","filename":"openjpa-persistence/src/main/appended-resources/META-INF/LICENSE.vm","status":"modified","additions":229,"deletions":67,"changes":296,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence/src/main/appended-resources/META-INF/LICENSE.vm","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence/src/main/appended-resources/META-INF/LICENSE.vm","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/appended-resources/META-INF/LICENSE.vm?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -1,3 +1,22 @@\n+##\n+## Licensed to the Apache Software Foundation (ASF) under one\n+## or more contributor license agreements.  See the NOTICE file\n+## distributed with this work for additional information\n+## regarding copyright ownership.  The ASF licenses this file\n+## to you under the Apache License, Version 2.0 (the\n+## \"License\"); you may not use this file except in compliance\n+## with the License.  You may obtain a copy of the License at\n+##\n+##  http://www.apache.org/licenses/LICENSE-2.0\n+##\n+## Unless required by applicable law or agreed to in writing,\n+## software distributed under the License is distributed on an\n+## \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+## KIND, either express or implied.  See the License for the\n+## specific language governing permissions and limitations\n+## under the License.\n+##\n+\n \n ======================================\n   LICENSES FOR INCLUDED DEPENDENCIES\n@@ -12,134 +31,277 @@ and resource files are also released under the ASF license above.\n The exceptions are as follows:\n \n ===========================\n-  orm-xsd.rsrc - included in the openjpa jar, taken from:\n+openjpa-persistence -\n+  orm-xsd.rsrc - CDDL 1.0 - included in the openjpa jar, taken from:\n     http://java.sun.com/xml/ns/persistence/orm_1_0.xsd)\n-  orm_2_0-xsd.rsrc - included in the openjpa jar, taken from:\n+  orm_2_0-xsd.rsrc - CDDL 1.0 - included in the openjpa jar, taken from:\n     http://java.sun.com/xml/ns/persistence/orm_2_0.xsd)\n-  persistence-xsd.rsrc - included in the openjpa jar, taken from:\n+  persistence-xsd.rsrc - CDDL 1.0 - included in the openjpa jar, taken from:\n     http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd)\n-  persistence_2_0-xsd.rsrc - included in the openjpa jar, taken from:\n-    http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd)\n-  websphere-uow-api.jar - this jar file contains WebSphere proprietary\n-    API code which is licensed for use when compiling OpenJPA. The\n-    jar is not distributed with OpenJPA and is only included with the\n-    source archive in order to resolve compilation dependencies. \n+  persistence_2_0-xsd.rsrc - CDDL 1.0 - included in the openjpa jar, taken from:\n+    http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd). \n ===========================\n \n COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL) Version 1.0\n \n 1. Definitions.\n \n-1.1. Contributor means each individual or entity that creates or contributes to the creation of Modifications.\n+   1.1. Contributor. means each individual or entity that creates or contributes to the creation of Modifications.\n \n-1.2. Contributor Version means the combination of the Original Software, prior Modifications used by a Contributor (if any), and the Modifications made by that particular Contributor.\n+   1.2. Contributor Version. means the combination of the Original Software, prior Modifications used by a Contributor (if any), and the Modifications made by that particular Contributor.\n \n-1.3. Covered Software means (a) the Original Software, or (b) Modifications, or (c) the combination of files containing Original Software with files containing Modifications, in each case including portions thereof.\n+   1.3. Covered Software. means (a) the Original Software, or (b) Modifications, or (c) the combination of files containing Original Software with files containing Modifications, in each case including portions thereof.\n \n-1.4. Executable means the Covered Software in any form other than Source Code.\n+   1.4. Executable. means the Covered Software in any form other than Source Code.\n \n-1.5. Initial Developer means the individual or entity that first makes Original Software available under this License.\n+   1.5. Initial Developer. means the individual or entity that first makes Original Software available under this License.\n \n-1.6. Larger Work means a work which combines Covered Software or portions thereof with code not governed by the terms of this License.\n+   1.6. Larger Work. means a work which combines Covered Software or portions thereof with code not governed by the terms of this License.\n \n-1.7. License means this document.\n+   1.7. License. means this document.\n \n-1.8. Licensable means having the right to grant, to the maximum extent possible, whether at the time of the initial grant or subsequently acquired, any and all of the rights conveyed herein.\n+   1.8. Licensable. means having the right to grant, to the maximum extent possible, whether at the time of the initial grant or subsequently acquired, any and all of the rights conveyed herein.\n \n-1.9. Modifications means the Source Code and Executable form of any of the following:\n+   1.9. Modifications. means the Source Code and Executable form of any of the following:\n \n-A. Any file that results from an addition to, deletion from or modification of the contents of a file containing Original Software or previous Modifications;\n+        A. Any file that results from an addition to, deletion from or modification of the contents of a file containing Original Software or previous Modifications;\n \n-B. Any new file that contains any part of the Original Software or previous Modification; or\n+        B. Any new file that contains any part of the Original Software or previous Modification; or\n \n-C. Any new file that is contributed or otherwise made available under the terms of this License.\n+        C. Any new file that is contributed or otherwise made available under the terms of this License.\n \n-1.10. Original Software means the Source Code and Executable form of computer software code that is originally released under this License.\n+   1.10. Original Software. means the Source Code and Executable form of computer software code that is originally released under this License.\n \n-1.11. Patent Claims means any patent claim(s), now owned or hereafter acquired, including without limitation, method, process, and apparatus claims, in any patent Licensable by grantor.\n+   1.11. Patent Claims. means any patent claim(s), now owned or hereafter acquired, including without limitation, method, process, and apparatus claims, in any patent Licensable by grantor.\n \n-1.12. Source Code means (a) the common form of computer software code in which modifications are made and (b) associated documentation included in or with such code.\n+   1.12. Source Code. means (a) the common form of computer software code in which modifications are made and (b) associated documentation included in or with such code.\n \n-1.13. You (or Your) means an individual or a legal entity exercising rights under, and complying with all of the terms of, this License. For legal entities, You includes any entity which controls, is controlled by, or is under common control with You. For purposes of this definition, control means (a)�the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (b)�ownership of more than fifty percent (50%) of the outstanding shares or beneficial ownership of such entity.\n+   1.13. You. (or .Your.) means an individual or a legal entity exercising rights under, and complying with all of the terms of, this License. For legal entities, .You. includes any entity which controls, is controlled by, or is under common control with You. For purposes of this definition, .control. means (a) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (b) ownership of more than fifty percent (50%) of the outstanding shares or beneficial ownership of such entity.\n \n 2. License Grants.\n \n-2.1. The Initial Developer Grant.\n-Conditioned upon Your compliance with Section 3.1 below and subject to third party intellectual property claims, the Initial Developer hereby grants You a world-wide, royalty-free, non-exclusive license:\n-(a) under intellectual property rights (other than patent or trademark) Licensable by Initial Developer, to use, reproduce, modify, display, perform, sublicense and distribute the Original Software (or portions thereof), with or without Modifications, and/or as part of a Larger Work; and\n-(b) under Patent Claims infringed by the making, using or selling of Original Software, to make, have made, use, practice, sell, and offer for sale, and/or otherwise dispose of the Original Software (or portions thereof).\n-(c) The licenses granted in Sections�2.1(a) and (b) are effective on the date Initial Developer first distributes or otherwise makes the Original Software available to a third party under the terms of this License.\n-(d) Notwithstanding Section�2.1(b) above, no patent license is granted: (1)�for code that You delete from the Original Software, or (2)�for infringements caused by: (i)�the modification of the Original Software, or (ii)�the combination of the Original Software with other software or devices.\n+      2.1. The Initial Developer Grant.\n \n-2.2. Contributor Grant.\n-Conditioned upon Your compliance with Section 3.1 below and subject to third party intellectual property claims, each Contributor hereby grants You a world-wide, royalty-free, non-exclusive license:\n-(a) under intellectual property rights (other than patent or trademark) Licensable by Contributor to use, reproduce, modify, display, perform, sublicense and distribute the Modifications created by such Contributor (or portions thereof), either on an unmodified basis, with other Modifications, as Covered Software and/or as part of a Larger Work; and\n-(b) under Patent Claims infringed by the making, using, or selling of Modifications made by that Contributor either alone and/or in combination with its Contributor Version (or portions of such combination), to make, use, sell, offer for sale, have made, and/or otherwise dispose of: (1)�Modifications made by that Contributor (or portions thereof); and (2)�the combination of Modifications made by that Contributor with its Contributor Version (or portions of such combination).\n-(c) The licenses granted in Sections�2.2(a) and 2.2(b) are effective on the date Contributor first distributes or otherwise makes the Modifications available to a third party.\n-(d) Notwithstanding Section�2.2(b) above, no patent license is granted: (1)�for any code that Contributor has deleted from the Contributor Version; (2)�for infringements caused by: (i)�third party modifications of Contributor Version, or (ii)�the combination of Modifications made by that Contributor with other software (except as part of the Contributor Version) or other devices; or (3)�under Patent Claims infringed by Covered Software in the absence of Modifications made by that Contributor.\n+      Conditioned upon Your compliance with Section 3.1 below and subject to third party intellectual property claims, the Initial Developer hereby grants You a world-wide, royalty-free, non-exclusive license:\n \n-3. Distribution Obligations.\n+         (a) under intellectual property rights (other than patent or trademark) Licensable by Initial Developer, to use, reproduce, modify, display, perform, sublicense and distribute the Original Software (or portions thereof), with or without Modifications, and/or as part of a Larger Work; and\n \n-3.1. Availability of Source Code.\n+         (b) under Patent Claims infringed by the making, using or selling of Original Software, to make, have made, use, practice, sell, and offer for sale, and/or otherwise dispose of the Original Software (or portions thereof).\n \n-Any Covered Software that You distribute or otherwise make available in Executable form must also be made available in Source Code form and that Source Code form must be distributed only under the terms of this License. You must include a copy of this License with every copy of the Source Code form of the Covered Software You distribute or otherwise make available. You must inform recipients of any such Covered Software in Executable form as to how they can obtain such Covered Software in Source Code form in a reasonable manner on or through a medium customarily used for software exchange.\n+        (c) The licenses granted in Sections 2.1(a) and (b) are effective on the date Initial Developer first distributes or otherwise makes the Original Software available to a third party under the terms of this License.\n \n-3.2. Modifications.\n+        (d) Notwithstanding Section 2.1(b) above, no patent license is granted: (1) for code that You delete from the Original Software, or (2) for infringements caused by: (i) the modification of the Original Software, or (ii) the combination of the Original Software with other software or devices.\n \n-The Modifications that You create or to which You contribute are governed by the terms of this License. You represent that You believe Your Modifications are Your original creation(s) and/or You have sufficient rights to grant the rights conveyed by this License.\n+    2.2. Contributor Grant.\n \n-3.3. Required Notices.\n-You must include a notice in each of Your Modifications that identifies You as the Contributor of the Modification. You may not remove or alter any copyright, patent or trademark notices contained within the Covered Software, or any notices of licensing or any descriptive text giving attribution to any Contributor or the Initial Developer.\n+    Conditioned upon Your compliance with Section 3.1 below and subject to third party intellectual property claims, each Contributor hereby grants You a world-wide, royalty-free, non-exclusive license:\n \n-3.4. Application of Additional Terms.\n-You may not offer or impose any terms on any Covered Software in Source Code form that alters or restricts the applicable version of this License or the recipients rights hereunder. You may choose to offer, and to charge a fee for, warranty, support, indemnity or liability obligations to one or more recipients of Covered Software. However, you may do so only on Your own behalf, and not on behalf of the Initial Developer or any Contributor. You must make it absolutely clear that any such warranty, support, indemnity or liability obligation is offered by You alone, and You hereby agree to indemnify the Initial Developer and every Contributor for any liability incurred by the Initial Developer or such Contributor as a result of warranty, support, indemnity or liability terms You offer.\n+        (a) under intellectual property rights (other than patent or trademark) Licensable by Contributor to use, reproduce, modify, display, perform, sublicense and distribute the Modifications created by such Contributor (or portions thereof), either on an unmodified basis, with other Modifications, as Covered Software and/or as part of a Larger Work; and\n \n-3.5. Distribution of Executable Versions.\n-You may distribute the Executable form of the Covered Software under the terms of this License or under the terms of a license of Your choice, which may contain terms different from this License, provided that You are in compliance with the terms of this License and that the license for the Executable form does not attempt to limit or alter the recipients rights in the Source Code form from the rights set forth in this License. If You distribute the Covered Software in Executable form under a different license, You must make it absolutely clear that any terms which differ from this License are offered by You alone, not by the Initial Developer or Contributor. You hereby agree to indemnify the Initial Developer and every Contributor for any liability incurred by the Initial Developer or such Contributor as a result of any such terms You offer.\n+        (b) under Patent Claims infringed by the making, using, or selling of Modifications made by that Contributor either alone and/or in combination with its Contributor Version (or portions of such combination), to make, use, sell, offer for sale, have made, and/or otherwise dispose of: (1) Modifications made by that Contributor (or portions thereof); and (2) the combination of Modifications made by that Contributor with its Contributor Version (or portions of such combination).\n \n-3.6. Larger Works.\n-You may create a Larger Work by combining Covered Software with other code not governed by the terms of this License and distribute the Larger Work as a single product. In such a case, You must make sure the requirements of this License are fulfilled for the Covered Software.\n+        (c) The licenses granted in Sections 2.2(a) and 2.2(b) are effective on the date Contributor first distributes or otherwise makes the Modifications available to a third party.\n \n-4. Versions of the License.\n+        (d) Notwithstanding Section 2.2(b) above, no patent license is granted: (1) for any code that Contributor has deleted from the Contributor Version; (2) for infringements caused by: (i) third party modifications of Contributor Version, or (ii) the combination of Modifications made by that Contributor with other software (except as part of the Contributor Version) or other devices; or (3) under Patent Claims infringed by Covered Software in the absence of Modifications made by that Contributor.\n+\n+3. Distribution Obligations.\n+\n+      3.1. Availability of Source Code.\n+      Any Covered Software that You distribute or otherwise make available in Executable form must also be made available in Source Code form and that Source Code form must be distributed only under the terms of this License. You must include a copy of this License with every copy of the Source Code form of the Covered Software You distribute or otherwise make available. You must inform recipients of any such Covered Software in Executable form as to how they can obtain such Covered Software in Source Code form in a reasonable manner on or through a medium customarily used for software exchange.\n \n-4.1. New Versions.\n-Sun Microsystems, Inc. is the initial license steward and may publish revised and/or new versions of this License from time to time. Each version will be given a distinguishing version number. Except as provided in Section 4.3, no one other than the license steward has the right to modify this License.\n+      3.2. Modifications.\n+      The Modifications that You create or to which You contribute are governed by the terms of this License. You represent that You believe Your Modifications are Your original creation(s) and/or You have sufficient rights to grant the rights conveyed by this License.\n \n-4.2. Effect of New Versions.\n+      3.3. Required Notices.\n+      You must include a notice in each of Your Modifications that identifies You as the Contributor of the Modification. You may not remove or alter any copyright, patent or trademark notices contained within the Covered Software, or any notices of licensing or any descriptive text giving attribution to any Contributor or the Initial Developer.\n+\n+      3.4. Application of Additional Terms.\n+      You may not offer or impose any terms on any Covered Software in Source Code form that alters or restricts the applicable version of this License or the recipients. rights hereunder. You may choose to offer, and to charge a fee for, warranty, support, indemnity or liability obligations to one or more recipients of Covered Software. However, you may do so only on Your own behalf, and not on behalf of the Initial Developer or any Contributor. You must make it absolutely clear that any such warranty, support, indemnity or liability obligation is offered by You alone, and You hereby agree to indemnify the Initial Developer and every Contributor for any liability incurred by the Initial Developer or such Contributor as a result of warranty, support, indemnity or liability terms You offer.\n+\n+      3.5. Distribution of Executable Versions.\n+      You may distribute the Executable form of the Covered Software under the terms of this License or under the terms of a license of Your choice, which may contain terms different from this License, provided that You are in compliance with the terms of this License and that the license for the Executable form does not attempt to limit or alter the recipient.s rights in the Source Code form from the rights set forth in this License. If You distribute the Covered Software in Executable form under a different license, You must make it absolutely clear that any terms which differ from this License are offered by You alone, not by the Initial Developer or Contributor. You hereby agree to indemnify the Initial Developer and every Contributor for any liability incurred by the Initial Developer or such Contributor as a result of any such terms You offer.\n+\n+      3.6. Larger Works.\n+      You may create a Larger Work by combining Covered Software with other code not governed by the terms of this License and distribute the Larger Work as a single product. In such a case, You must make sure the requirements of this License are fulfilled for the Covered Software.\n+\n+4. Versions of the License.\n \n-You may always continue to use, distribute or otherwise make the Covered Software available under the terms of the version of the License under which You originally received the Covered Software. If the Initial Developer includes a notice in the Original Software prohibiting it from being distributed or otherwise made available under any subsequent version of the License, You must distribute and make the Covered Software available under the terms of the version of the License under which You originally received the Covered Software. Otherwise, You may also choose to use, distribute or otherwise make the Covered Software available under the terms of any subsequent version of the License published by the license steward.\n-4.3. Modified Versions.\n+      4.1. New Versions.\n+      Sun Microsystems, Inc. is the initial license steward and may publish revised and/or new versions of this License from time to time. Each version will be given a distinguishing version number. Except as provided in Section 4.3, no one other than the license steward has the right to modify this License.\n \n-When You are an Initial Developer and You want to create a new license for Your Original Software, You may create and use a modified version of this License if You: (a)�rename the license and remove any references to the name of the license steward (except to note that the license differs from this License); and (b)�otherwise make it clear that the license contains terms which differ from this License.\n+      4.2. Effect of New Versions.\n+      You may always continue to use, distribute or otherwise make the Covered Software available under the terms of the version of the License under which You originally received the Covered Software. If the Initial Developer includes a notice in the Original Software prohibiting it from being distributed or otherwise made available under any subsequent version of the License, You must distribute and make the Covered Software available under the terms of the version of the License under which You originally received the Covered Software. Otherwise, You may also choose to use, distribute or otherwise make the Covered Software available under the terms of any subsequent version of the License published by the license steward.\n+\n+      4.3. Modified Versions.\n+      When You are an Initial Developer and You want to create a new license for Your Original Software, You may create and use a modified version of this License if You: (a) rename the license and remove any references to the name of the license steward (except to note that the license differs from this License); and (b) otherwise make it clear that the license contains terms which differ from this License.\n \n 5. DISCLAIMER OF WARRANTY.\n \n-COVERED SOFTWARE IS PROVIDED UNDER THIS LICENSE ON AN AS IS BASIS, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, WITHOUT LIMITATION, WARRANTIES THAT THE COVERED SOFTWARE IS FREE OF DEFECTS, MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE OR NON-INFRINGING. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE COVERED SOFTWARE IS WITH YOU. SHOULD ANY COVERED SOFTWARE PROVE DEFECTIVE IN ANY RESPECT, YOU (NOT THE INITIAL DEVELOPER OR ANY OTHER CONTRIBUTOR) ASSUME THE COST OF ANY NECESSARY SERVICING, REPAIR OR CORRECTION. THIS DISCLAIMER OF WARRANTY CONSTITUTES AN ESSENTIAL PART OF THIS LICENSE. NO USE OF ANY COVERED SOFTWARE IS AUTHORIZED HEREUNDER EXCEPT UNDER THIS DISCLAIMER.\n+   COVERED SOFTWARE IS PROVIDED UNDER THIS LICENSE ON AN .AS IS. BASIS, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, WITHOUT LIMITATION, WARRANTIES THAT THE COVERED SOFTWARE IS FREE OF DEFECTS, MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE OR NON-INFRINGING. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE COVERED SOFTWARE IS WITH YOU. SHOULD ANY COVERED SOFTWARE PROVE DEFECTIVE IN ANY RESPECT, YOU (NOT THE INITIAL DEVELOPER OR ANY OTHER CONTRIBUTOR) ASSUME THE COST OF ANY NECESSARY SERVICING, REPAIR OR CORRECTION. THIS DISCLAIMER OF WARRANTY CONSTITUTES AN ESSENTIAL PART OF THIS LICENSE. NO USE OF ANY COVERED SOFTWARE IS AUTHORIZED HEREUNDER EXCEPT UNDER THIS DISCLAIMER.\n \n 6. TERMINATION.\n \n-6.1. This License and the rights granted hereunder will terminate automatically if You fail to comply with terms herein and fail to cure such breach within 30 days of becoming aware of the breach. Provisions which, by their nature, must remain in effect beyond the termination of this License shall survive.\n+      6.1. This License and the rights granted hereunder will terminate automatically if You fail to comply with terms herein and fail to cure such breach within 30 days of becoming aware of the breach. Provisions which, by their nature, must remain in effect beyond the termination of this License shall survive.\n \n-6.2. If You assert a patent infringement claim (excluding declaratory judgment actions) against Initial Developer or a Contributor (the Initial Developer or Contributor against whom You assert such claim is referred to as Participant) alleging that the Participant Software (meaning the Contributor Version where the Participant is a Contributor or the Original Software where the Participant is the Initial Developer) directly or indirectly infringes any patent, then any and all rights granted directly or indirectly to You by such Participant, the Initial Developer (if the Initial Developer is not the Participant) and all Contributors under Sections�2.1 and/or 2.2 of this License shall, upon 60 days notice from Participant terminate prospectively and automatically at the expiration of such 60 day notice period, unless if within such 60 day period You withdraw Your claim with respect to the Participant Software against such Participant either unilaterally or pursuant to a written agreement with Participant.\n+      6.2. If You assert a patent infringement claim (excluding declaratory judgment actions) against Initial Developer or a Contributor (the Initial Developer or Contributor against whom You assert such claim is referred to as .Participant.) alleging that the Participant Software (meaning the Contributor Version where the Participant is a Contributor or the Original Software where the Participant is the Initial Developer) directly or indirectly infringes any patent, then any and all rights granted directly or indirectly to You by such Participant, the Initial Developer (if the Initial Developer is not the Participant) and all Contributors under Sections 2.1 and/or 2.2 of this License shall, upon 60 days notice from Participant terminate prospectively and automatically at the expiration of such 60 day notice period, unless if within such 60 day period You withdraw Your claim with respect to the Participant Software against such Participant either unilaterally or pursuant to a written agreement with Participant.\n \n-6.3. In the event of termination under Sections�6.1 or 6.2 above, all end user licenses that have been validly granted by You or any distributor hereunder prior to termination (excluding licenses granted to You by any distributor) shall survive termination.\n+      6.3. In the event of termination under Sections 6.1 or 6.2 above, all end user licenses that have been validly granted by You or any distributor hereunder prior to termination (excluding licenses granted to You by any distributor) shall survive termination.\n \n 7. LIMITATION OF LIABILITY.\n \n-UNDER NO CIRCUMSTANCES AND UNDER NO LEGAL THEORY, WHETHER TORT (INCLUDING NEGLIGENCE), CONTRACT, OR OTHERWISE, SHALL YOU, THE INITIAL DEVELOPER, ANY OTHER CONTRIBUTOR, OR ANY DISTRIBUTOR OF COVERED SOFTWARE, OR ANY SUPPLIER OF ANY OF SUCH PARTIES, BE LIABLE TO ANY PERSON FOR ANY INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES OF ANY CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOST PROFITS, LOSS OF GOODWILL, WORK STOPPAGE, COMPUTER FAILURE OR MALFUNCTION, OR ANY AND ALL OTHER COMMERCIAL DAMAGES OR LOSSES, EVEN IF SUCH PARTY SHALL HAVE BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES. THIS LIMITATION OF LIABILITY SHALL NOT APPLY TO LIABILITY FOR DEATH OR PERSONAL INJURY RESULTING FROM SUCH PARTYS NEGLIGENCE TO THE EXTENT APPLICABLE LAW PROHIBITS SUCH LIMITATION. SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL OR CONSEQUENTIAL DAMAGES, SO THIS EXCLUSION AND LIMITATION MAY NOT APPLY TO YOU.\n+   UNDER NO CIRCUMSTANCES AND UNDER NO LEGAL THEORY, WHETHER TORT (INCLUDING NEGLIGENCE), CONTRACT, OR OTHERWISE, SHALL YOU, THE INITIAL DEVELOPER, ANY OTHER CONTRIBUTOR, OR ANY DISTRIBUTOR OF COVERED SOFTWARE, OR ANY SUPPLIER OF ANY OF SUCH PARTIES, BE LIABLE TO ANY PERSON FOR ANY INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES OF ANY CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOST PROFITS, LOSS OF GOODWILL, WORK STOPPAGE, COMPUTER FAILURE OR MALFUNCTION, OR ANY AND ALL OTHER COMMERCIAL DAMAGES OR LOSSES, EVEN IF SUCH PARTY SHALL HAVE BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES. THIS LIMITATION OF LIABILITY SHALL NOT APPLY TO LIABILITY FOR DEATH OR PERSONAL INJURY RESULTING FROM SUCH PARTY.S NEGLIGENCE TO THE EXTENT APPLICABLE LAW PROHIBITS SUCH LIMITATION. SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL OR CONSEQUENTIAL DAMAGES, SO THIS EXCLUSION AND LIMITATION MAY NOT APPLY TO YOU.\n \n 8. U.S. GOVERNMENT END USERS.\n \n-The Covered Software is a commercial item, as that term is defined in 48�C.F.R.�2.101 (Oct. 1995), consisting of commercial computer software (as that term is defined at 48 C.F.R. �252.227-7014(a)(1)) and commercial computer software documentation as such terms are used in 48�C.F.R.�12.212 (Sept. 1995). Consistent with 48 C.F.R. 12.212 and 48 C.F.R. 227.7202-1 through 227.7202-4 (June 1995), all U.S. Government End Users acquire Covered Software with only those rights set forth herein. This U.S. Government Rights clause is in lieu of, and supersedes, any other FAR, DFAR, or other clause or provision that addresses Government rights in computer software under this License.\n+   The Covered Software is a .commercial item,. as that term is defined in 48 C.F.R. 2.101 (Oct. 1995), consisting of .commercial computer software. (as that term is defined at 48 C.F.R. ? 252.227-7014(a)(1)) and .commercial computer software documentation. as such terms are used in 48 C.F.R. 12.212 (Sept. 1995). Consistent with 48 C.F.R. 12.212 and 48 C.F.R. 227.7202-1 through 227.7202-4 (June 1995), all U.S. Government End Users acquire Covered Software with only those rights set forth herein. This U.S. Government Rights clause is in lieu of, and supersedes, any other FAR, DFAR, or other clause or provision that addresses Government rights in computer software under this License.\n \n 9. MISCELLANEOUS.\n \n-This License represents the complete agreement concerning subject matter hereof. If any provision of this License is held to be unenforceable, such provision shall be reformed only to the extent necessary to make it enforceable. This License shall be governed by the law of the jurisdiction specified in a notice contained within the Original Software (except to the extent applicable law, if any, provides otherwise), excluding such jurisdictions conflict-of-law provisions. Any litigation relating to this License shall be subject to the jurisdiction of the courts located in the jurisdiction and venue specified in a notice contained within the Original Software, with the losing party responsible for costs, including, without limitation, court costs and reasonable attorneys fees and expenses. The application of the United Nations Convention on Contracts for the International Sale of Goods is expressly excluded. Any law or regulation which provides that the language of a contract shall be construed against the drafter shall not apply to this License. You agree that You alone are responsible for compliance with the United States export administration regulations (and the export control laws and regulation of any other countries) when You use, distribute or otherwise make available any Covered Software.\n+   This License represents the complete agreement concerning subject matter hereof. If any provision of this License is held to be unenforceable, such provision shall be reformed only to the extent necessary to make it enforceable. This License shall be governed by the law of the jurisdiction specified in a notice contained within the Original Software (except to the extent applicable law, if any, provides otherwise), excluding such jurisdiction.s conflict-of-law provisions. Any litigation relating to this License shall be subject to the jurisdiction of the courts located in the jurisdiction and venue specified in a notice contained within the Original Software, with the losing party responsible for costs, including, without limitation, court costs and reasonable attorneys. fees and expenses. The application of the United Nations Convention on Contracts for the International Sale of Goods is expressly excluded. Any law or regulation which provides that the language of a contract shall be construed against the drafter shall not apply to this License. You agree that You alone are responsible for compliance with the United States export administration regulations (and the export control laws and regulation of any other countries) when You use, distribute or otherwise make available any Covered Software.\n \n 10. RESPONSIBILITY FOR CLAIMS.\n \n-As between Initial Developer and the Contributors, each party is responsible for claims and damages arising, directly or indirectly, out of its utilization of rights under this License and You agree to work with Initial Developer and Contributors to distribute such responsibility on an equitable basis. Nothing herein is intended or shall be deemed to constitute any admission of liability.\n+   As between Initial Developer and the Contributors, each party is responsible for claims and damages arising, directly or indirectly, out of its utilization of rights under this License and You agree to work with Initial Developer and Contributors to distribute such responsibility on an equitable basis. Nothing herein is intended or shall be deemed to constitute any admission of liability.\n+\n+   NOTICE PURSUANT TO SECTION 9 OF THE COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL)\n+\n+   The code released under the CDDL shall be governed by the laws of the State of California (excluding conflict-of-law provisions). Any litigation relating to this License shall be subject to the jurisdiction of the Federal Courts of the Northern District of California and the state courts of the State of California, with venue lying in Santa Clara County, California.\n+\n+\n+The GNU General Public License (GPL) Version 2, June 1991\n+\n+\n+Copyright (C) 1989, 1991 Free Software Foundation, Inc. 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n+\n+Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.\n+\n+Preamble\n+\n+The licenses for most software are designed to take away your freedom to share and change it. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users. This General Public License applies to most of the Free Software Foundation's software and to any other program whose authors commit to using it. (Some other Free Software Foundation software is covered by the GNU Library General Public License instead.) You can apply it to your programs, too.\n+\n+When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs; and that you know you can do these things.\n+\n+To protect your rights, we need to make restrictions that forbid anyone to deny you these rights or to ask you to surrender the rights. These restrictions translate to certain responsibilities for you if you distribute copies of the software, or if you modify it.\n+\n+For example, if you distribute copies of such a program, whether gratis or for a fee, you must give the recipients all the rights that you have. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights.\n+\n+We protect your rights with two steps: (1) copyright the software, and (2) offer you this license which gives you legal permission to copy, distribute and/or modify the software.\n+\n+Also, for each author's protection and ours, we want to make certain that everyone understands that there is no warranty for this free software. If the software is modified by someone else and passed on, we want its recipients to know that what they have is not the original, so that any problems introduced by others will not reflect on the original authors' reputations.\n+\n+Finally, any free program is threatened constantly by software patents. We wish to avoid the danger that redistributors of a free program will individually obtain patent licenses, in effect making the program proprietary. To prevent this, we have made it clear that any patent must be licensed for everyone's free use or not licensed at all.\n+\n+The precise terms and conditions for copying, distribution and modification follow.\n+\n+\n+TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n+\n+0. This License applies to any program or other work which contains a notice placed by the copyright holder saying it may be distributed under the terms of this General Public License. The \"Program\", below, refers to any such program or work, and a \"work based on the Program\" means either the Program or any derivative work under copyright law: that is to say, a work containing the Program or a portion of it, either verbatim or with modifications and/or translated into another language. (Hereinafter, translation is included without limitation in the term \"modification\".) Each licensee is addressed as \"you\".\n+\n+Activities other than copying, distribution and modification are not covered by this License; they are outside its scope. The act of running the Program is not restricted, and the output from the Program is covered only if its contents constitute a work based on the Program (independent of having been made by running the Program). Whether that is true depends on what the Program does.\n+\n+1. You may copy and distribute verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and give any other recipients of the Program a copy of this License along with the Program.\n+\n+You may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee.\n+\n+2. You may modify your copy or copies of the Program or any portion of it, thus forming a work based on the Program, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions:\n+\n+   a) You must cause the modified files to carry prominent notices stating that you changed the files and the date of any change.\n+\n+   b) You must cause any work that you distribute or publish, that in whole or in part contains or is derived from the Program or any part thereof, to be licensed as a whole at no charge to all third parties under the terms of this License.\n+\n+   c) If the modified program normally reads commands interactively when run, you must cause it, when started running for such interactive use in the most ordinary way, to print or display an announcement including an appropriate copyright notice and a notice that there is no warranty (or else, saying that you provide a warranty) and that users may redistribute the program under these conditions, and telling the user how to view a copy of this License. (Exception: if the Program itself is interactive but does not normally print such an announcement, your work based on the Program is not required to print an announcement.)\n+\n+These requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Program, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Program, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it.\n+\n+Thus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Program.\n+\n+In addition, mere aggregation of another work not based on the Program with the Program (or with a work based on the Program) on a volume of a storage or distribution medium does not bring the other work under the scope of this License.\n+\n+3. You may copy and distribute the Program (or a work based on it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you also do one of the following:\n+\n+   a) Accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or,\n+\n+   b) Accompany it with a written offer, valid for at least three years, to give any third party, for a charge no more than your cost of physically performing source distribution, a complete machine-readable copy of the corresponding source code, to be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or,\n+\n+   c) Accompany it with the information you received as to the offer to distribute corresponding source code. (This alternative is allowed only for noncommercial distribution and only if you received the program in object code or executable form with such an offer, in accord with Subsection b above.)\n+\n+The source code for a work means the preferred form of the work for making modifications to it. For an executable work, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the executable. However, as a special exception, the source code distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable.\n+\n+If distribution of executable or object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place counts as distribution of the source code, even though third parties are not compelled to copy the source along with the object code.\n+\n+4. You may not copy, modify, sublicense, or distribute the Program except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense or distribute the Program is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance.\n+\n+5. You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Program or its derivative works. These actions are prohibited by law if you do not accept this License. Therefore, by modifying or distributing the Program (or any work based on the Program), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Program or works based on it.\n+\n+6. Each time you redistribute the Program (or any work based on the Program), the recipient automatically receives a license from the original licensor to copy, distribute or modify the Program subject to these terms and conditions. You may not impose any further restrictions on the recipients' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties to this License.\n+\n+7. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Program at all. For example, if a patent license would not permit royalty-free redistribution of the Program by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Program.\n+\n+If any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply and the section as a whole is intended to apply in other circumstances.\n+\n+It is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system, which is implemented by public license practices. Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice.\n+\n+This section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License.\n+\n+8. If the distribution and/or use of the Program is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Program under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded. In such case, this License incorporates the limitation as if written in the body of this License.\n+\n+9. The Free Software Foundation may publish revised and/or new versions of the General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.\n+\n+Each version is given a distinguishing version number. If the Program specifies a version number of this License which applies to it and \"any later version\", you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of this License, you may choose any version ever published by the Free Software Foundation.\n+\n+10. If you wish to incorporate parts of the Program into other free programs whose distribution conditions are different, write to the author to ask for permission. For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this. Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally.\n+\n+NO WARRANTY\n+\n+11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n+\n+12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n+\n+END OF TERMS AND CONDITIONS\n+\n+\n+How to Apply These Terms to Your New Programs\n+\n+If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.\n+\n+To do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively convey the exclusion of warranty; and each file should have at least the \"copyright\" line and a pointer to where the full notice is found.\n+\n+   One line to give the program's name and a brief idea of what it does.\n+\n+   Copyright (C)\n+\n+   This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n+\n+Also add information on how to contact you by electronic and paper mail.\n+\n+If the program is interactive, make it output a short notice like this when it starts in an interactive mode:\n+\n+   Gnomovision version 69, Copyright (C) year name of author\n+   Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details.\n+\n+The hypothetical commands `show w' and `show c' should show the appropriate parts of the General Public License. Of course, the commands you use may be called something other than `show w' and `show c'; they could even be mouse-clicks or menu items--whatever suits your program.\n+\n+You should also get your employer (if you work as a programmer) or your school, if any, to sign a \"copyright disclaimer\" for the program, if necessary. Here is a sample; alter the names:\n+\n+   Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.\n+\n+   signature of Ty Coon, 1 April 1989\n+   Ty Coon, President of Vice\n+\n+This General Public License does not permit incorporating your program into proprietary programs. If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library. If this is what you want to do, use the GNU Library General Public License instead of this License.\n+\n+\n+\"CLASSPATH\" EXCEPTION TO THE GPL VERSION 2\n+\n+Certain source files distributed by Sun Microsystems, Inc. are subject to the following clarification and special exception to the GPL Version 2, but only where Sun has expressly included in the particular source file's header the words\n+\n+\"Sun designates this particular file as subject to the \"Classpath\" exception as provided by Sun in the License file that accompanied this code.\"\n \n-NOTICE PURSUANT TO SECTION 9 OF THE COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL)\n-The GlassFish code released under the CDDL shall be governed by the laws of the State of California (excluding conflict-of-law provisions). Any litigation relating to this License shall be subject to the jurisdiction of the Federal Courts of the Northern District of California and the state courts of the State of California, with venue lying in Santa Clara County, California. \n+Linking this library statically or dynamically with other modules is making a combined work based on this library. Thus, the terms and conditions of the GNU General Public License Version 2 cover the whole combination.\n \n+As a special exception, the copyright holders of this library give you permission to link this library with independent modules to produce an executable, regardless of the license terms of these independent modules, and to copy and distribute the resulting executable under terms of your choice, provided that you also meet, for each linked independent module, the terms and conditions of the license of that module.? An independent module is a module which is not derived from or based on this library.? If you modify this library, you may extend this exception to your version of the library, but you are not obligated to do so.? If you do not wish to do so, delete this exception statement from your version."},{"sha":"f6a871524ae4ab2edfd362e51e7894fb39e608b6","filename":"openjpa-persistence/src/main/appended-resources/META-INF/NOTICE.vm","status":"modified","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence/src/main/appended-resources/META-INF/NOTICE.vm","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence/src/main/appended-resources/META-INF/NOTICE.vm","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/appended-resources/META-INF/NOTICE.vm?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -1,3 +1,21 @@\n+##\n+## Licensed to the Apache Software Foundation (ASF) under one\n+## or more contributor license agreements.  See the NOTICE file\n+## distributed with this work for additional information\n+## regarding copyright ownership.  The ASF licenses this file\n+## to you under the Apache License, Version 2.0 (the\n+## \"License\"); you may not use this file except in compliance\n+## with the License.  You may obtain a copy of the License at\n+##\n+##  http://www.apache.org/licenses/LICENSE-2.0\n+##\n+## Unless required by applicable law or agreed to in writing,\n+## software distributed under the License is distributed on an\n+## \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+## KIND, either express or implied.  See the License for the\n+## specific language governing permissions and limitations\n+## under the License.\n+##\n \n OpenJPA includes the persistence and orm schemas from the JPA specifications.\n Copyright 2005-2009 Sun Microsystems, Inc. All rights reserved."},{"sha":"862625c39fb68e883a5fbec258fc96dbce1abc71","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java","status":"modified","additions":2,"deletions":1,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/AnnotationPersistenceMetaDataParser.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -1848,10 +1848,11 @@ private LockModeType processNamedQueryLockModeType(NamedQuery query) {\n         LockModeType lmt = query.lockMode();\n         if (query.lockMode() != null) {\n             String lm = _conf.getLockManager();\n+            boolean optimistic = _conf.getOptimistic();\n             if (lm != null) {\n                 lm = lm.toLowerCase();\n                 if (lm.contains(\"pessimistic\")) {\n-                    if (lmt == LockModeType.NONE) {\n+                    if (lmt == LockModeType.NONE && !optimistic) {\n                         if (_log.isWarnEnabled() == true) {\n                             _log.warn(_loc.get(\"override-named-query-lock-mode\", new String[] { \"annotation\",\n                                 query.name(), _cls.getName() }));"},{"sha":"4c61022a01bf98aac9df2d16eb38f0483d880c8e","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerFactoryImpl.java","status":"modified","additions":39,"deletions":0,"changes":39,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerFactoryImpl.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerFactoryImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerFactoryImpl.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -30,6 +30,7 @@\n import javax.persistence.PersistenceUnitUtil;\n import javax.persistence.spi.LoadState;\n \n+import org.apache.commons.lang.StringUtils;\n import org.apache.openjpa.conf.OpenJPAConfiguration;\n import org.apache.openjpa.kernel.AutoDetach;\n import org.apache.openjpa.kernel.Broker;\n@@ -39,13 +40,15 @@\n import org.apache.openjpa.kernel.FetchConfiguration;\n import org.apache.openjpa.lib.conf.Configurations;\n import org.apache.openjpa.lib.conf.Value;\n+import org.apache.openjpa.lib.log.Log;\n import org.apache.openjpa.lib.util.Closeable;\n import org.apache.openjpa.lib.util.Localizer;\n import org.apache.openjpa.persistence.criteria.CriteriaBuilderImpl;\n import org.apache.openjpa.persistence.criteria.OpenJPACriteriaBuilder;\n import org.apache.openjpa.persistence.meta.MetamodelImpl;\n import org.apache.openjpa.persistence.query.OpenJPAQueryBuilder;\n import org.apache.openjpa.persistence.query.QueryBuilderImpl;\n+import org.apache.openjpa.util.UserException;\n \n /**\n  * Implementation of {@link EntityManagerFactory} that acts as a\n@@ -165,6 +168,7 @@ else if (!props.isEmpty())\n             props = new HashMap(props);\n \n         OpenJPAConfiguration conf = getConfiguration();\n+        Log log = conf.getLog(OpenJPAConfiguration.LOG_RUNTIME);\n         String user = (String) Configurations.removeProperty(\"ConnectionUserName\", props);\n         if (user == null)\n             user = conf.getConnectionUserName();\n@@ -210,6 +214,16 @@ else if (!props.isEmpty())\n             cf2Name = (String) Configurations.removeProperty(\"ConnectionFactory2Name\", props);\n         }\n         \n+        if (log != null && log.isTraceEnabled()) {\n+            if(StringUtils.isNotEmpty(cfName)) {\n+                log.trace(\"Found ConnectionFactoryName from props: \" + cfName);\n+            }\n+            if(StringUtils.isNotEmpty(cf2Name)) { \n+                log.trace(\"Found ConnectionFactory2Name from props: \" + cf2Name);\n+            }\n+        }\n+        validateCfNameProps(conf, cfName, cf2Name);\n+\n         Broker broker = _factory.newBroker(user, pass, managed, retainMode, false, cfName, cf2Name);\n             \n         // add autodetach for close and rollback conditions to the configuration\n@@ -350,4 +364,29 @@ public boolean isLoaded(Object entity, String attribute) {\n         return (OpenJPAPersistenceUtil.isManagedBy(this, entity) &&\n                 (OpenJPAPersistenceUtil.isLoaded(entity, attribute) == LoadState.LOADED));\n     }\n+    \n+    private void validateCfNameProps(OpenJPAConfiguration conf, String cfName, String cf2Name) {\n+        if (StringUtils.isNotEmpty(cfName) || StringUtils.isNotEmpty(cf2Name)) {\n+            if (conf.getDataCache() != \"false\" && conf.getDataCache() != null) {\n+                throw new ArgumentException(_loc.get(\"invalid-cfname-prop\", new Object[] {\n+                    \"openjpa.DataCache (L2 Cache)\",\n+                    cfName,\n+                    cf2Name }), null, null, true);\n+\n+            }\n+            if (conf.getQueryCache() != \"false\" && conf.getQueryCache() != null) {\n+                throw new ArgumentException(_loc.get(\"invalid-cfname-prop\", new Object[] {\n+                    \"openjpa.QueryCache\",\n+                    cfName,\n+                    cf2Name }), null, null, true);\n+            }\n+            Object syncMap = conf.toProperties(false).get(\"openjpa.jdbc.SynchronizeMappings\");\n+            if(syncMap != null) { \n+                throw new ArgumentException(_loc.get(\"invalid-cfname-prop\", new Object[] {\n+                    \"openjpa.jdbc.SynchronizeMappings\",\n+                    cfName,\n+                    cf2Name }), null, null, true);\n+            }\n+        }\n+    }\n }"},{"sha":"f0fc8c4c52f21c40e53e492dddb11d33b8162294","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/EntityManagerImpl.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -176,6 +176,7 @@ public void popFetchPlan() {\n         assertNotCloseInvoked();\n         _broker.lock();\n         try {\n+            _plans.remove(_broker.getFetchConfiguration());\n             _broker.popFetchConfiguration();\n         } finally {\n             _broker.unlock();"},{"sha":"32c9bcdb671cdd8c64e5d9099efdc38488c38d09","filename":"openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","status":"modified","additions":3,"deletions":1,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/java/org/apache/openjpa/persistence/XMLPersistenceMetaDataParser.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -1708,10 +1708,11 @@ private LockModeType processNamedQueryLockModeType(Log log, String lockModeStrin\n         }\n         LockModeType lmt = LockModeType.valueOf(lockModeString);\n         String lm = _conf.getLockManager();\n+        boolean optimistic = _conf.getOptimistic();\n         if (lm != null) {\n             lm = lm.toLowerCase();\n             if (lm.contains(\"pessimistic\")) {\n-                if (lmt == LockModeType.NONE) {\n+                if (lmt == LockModeType.NONE && !optimistic) {\n                     if (log != null && log.isWarnEnabled() == true) {\n                         log.warn(_loc.get(\"override-named-query-lock-mode\", new String[] { \"xml\", queryName,\n                             _cls.getName() }));\n@@ -1724,6 +1725,7 @@ private LockModeType processNamedQueryLockModeType(Log log, String lockModeStrin\n         return lmt;\n     }\n \n+\n     protected void endNamedQuery()\n         throws SAXException {\n         popElement();"},{"sha":"fc6b1201bb7506308d085dcb2e344e0cb2371cd2","filename":"openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/localizer.properties?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -232,3 +232,5 @@ cache-retrieve-override: The setting of CacheRetrieveMode.USE is ignored and set\n null-detach: Can not detach null entity\n override-named-query-lock-mode: Encountered a read lock level less than LockModeType.READ when processing the \\\n NamedQuery {0} \"{1}\" in class \"{2}\". Setting query lock level to LockModeType.READ.\n+invalid-cfname-prop: The \"{0}\" configuration option is not valid when the DataSource JNDI name(s) are provided \\\n+\twhen you create an EntityManager. Found jtaDataSource: \"{1}\", nonJtaDataSource: \"{2}\". "},{"sha":"a255dbedfdbf7b54268fe18db77b244aa5881a4f","filename":"openjpa-project/BUILDING.txt","status":"modified","additions":23,"deletions":39,"changes":62,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/BUILDING.txt","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/BUILDING.txt","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/BUILDING.txt?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -1,21 +1,6 @@\n-Licensed to the Apache Software Foundation (ASF) under one or more\n-contributor license agreements.  See the NOTICE file distributed with\n-this work for additional information regarding copyright ownership.\n-The ASF licenses this file to you under the Apache License, Version 2.0\n-(the \"License\"); you may not use this file except in compliance with\n-the License.  You may obtain a copy of the License at\n-\n-    http://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing, software\n-distributed under the License is distributed on an \"AS IS\" BASIS,\n-WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-See the License for the specific language governing permissions and\n-limitations under the License.\n-\n- \n-                     Building OpenJPA\n-===============================================================================\n+Building Apache OpenJPA\n+Licensed under Apache License 2.0 - http://www.apache.org/licenses/LICENSE-2.0\n+--------------------------------------------------------------------------------\n \n These instructions describe how to build OpenJPA from source code using the\n Apache Maven 2 build tool. They are written for use from the console, and are \n@@ -29,14 +14,14 @@ website at http://openjpa.apache.org/building-openjpa.html\n       OpenJPA requires Java 1.6 or later to build, but still supports using\n       Java SE 5 for runtime even though some features are only available\n       with Java SE 6.\n-   2. Install the build tool Apache Maven 2.0.9 or later, from:\n+   2. Install the build tool Apache Maven 2.2.1 or later, from:\n           http://maven.apache.org/\n       If it is installed correctly, typing mvn -v from the console will result\n-      in the text \"Maven version: 2.0.9\"\n+      in the text \"Maven version: 2.2.1\"\n    3. Extract the source archive if you have not already done so. \n       The source will create a new directory named:\n       openjpa-<version>-source. Where <version> is the openjpa \n-      version, for example apache-openjpa-2.0.0-source.\n+      version, for example apache-openjpa-2.0.1-source.\n    4. Change to the openjpa source directory, which has already been created in\n       the previous step.\n    5. Build OpenJPA by running: mvn package or better mvn install. \n@@ -70,31 +55,30 @@ Java(TM) SE Runtime Environment (build 1.6.0_17-b04-248-10M3025)\n Java HotSpot(TM) 64-Bit Server VM (build 14.3-b01-101, mixed mode)\n \n $ mvn -v\n-Maven version: 2.0.10\n+Maven version: 2.2.1\n \n $ svn --version\n svn, version 1.5.5 (r34862)\n    compiled Jan  5 2009, 12:30:39\n \n-$ svn co https://svn.apache.org/repos/asf/openjpa/trunk/\n-A  trunk/openjpa-lib\n-A  trunk/openjpa-lib/src\n-A  trunk/openjpa-lib/src/test\n-A  trunk/openjpa-lib/src/test/java\n-A  trunk/openjpa-lib/src/test/java/org\n-A  trunk/openjpa-lib/src/test/java/org/apache\n-A  trunk/openjpa-lib/src/test/java/org/apache/openjpa\n-A  trunk/openjpa-lib/src/test/java/org/apache/openjpa/lib\n-A  trunk/openjpa-lib/src/test/java/org/apache/openjpa/lib/test\n-A  trunk/openjpa-lib/src/test/java/org/apache/openjpa/lib/test/AbstractTestCase.\n-java\n+$ svn co https://svn.apache.org/repos/asf/openjpa/tags/2.0.1\n+A  2.0.1/openjpa-lib\n+A  2.0.1/openjpa-lib/src\n+A  2.0.1/openjpa-lib/src/test\n+A  2.0.1/openjpa-lib/src/test/java\n+A  2.0.1/openjpa-lib/src/test/java/org\n+A  2.0.1/openjpa-lib/src/test/java/org/apache\n+A  2.0.1/openjpa-lib/src/test/java/org/apache/openjpa\n+A  2.0.1/openjpa-lib/src/test/java/org/apache/openjpa/lib\n+A  2.0.1/openjpa-lib/src/test/java/org/apache/openjpa/lib/test\n+A  2.0.1/openjpa-lib/src/test/java/org/apache/openjpa/lib/test/AbstractTestCase.java\n \n  ...\n \n-A  trunk/openjpa-persistence/pom.xml\n-Checked out revision 915725.\n+A  2.0.1/openjpa-persistence/pom.xml\n+Checked out revision 986101.\n \n-$ cd trunk/\n+$ cd 2.0.1/\n \n $ mvn clean install -DfailIfNoTests=false -Dtest= \n \n@@ -156,6 +140,6 @@ $ mvn clean install -DfailIfNoTests=false -Dtest=\n \n $ ls openjpa-project/target/site/downloads/\n \n-apache-openjpa-2.0.0-SNAPSHOT-binary.zip\n-apache-openjpa-2.0.0-SNAPSHOT-source.zip\n+apache-openjpa-2.0.1-binary.zip\n+apache-openjpa-2.0.1-source.zip\n  "},{"sha":"3533784cb8fa2f4fa73d1f8ff6ee45831cce7b1e","filename":"openjpa-project/CHANGES.txt","status":"modified","additions":46,"deletions":3,"changes":49,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/CHANGES.txt","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/CHANGES.txt?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -1,5 +1,6 @@\n-                            Apache OpenJPA 2.0.0\n-                            --------------------\n+Apache OpenJPA 2.0.1\n+Licensed under Apache License 2.0 - http://www.apache.org/licenses/LICENSE-2.0\n+--------------------------------------------------------------------------------\n \n Content\n -------\n@@ -19,7 +20,7 @@ Content\n \n Overview\n --------\n-   The Apache OpenJPA community is proud to release a 2.0.0 distribution of\n+   The Apache OpenJPA community is proud to release a 2.0.1 distribution of\n    OpenJPA. This distribution is based on the final JSR 317 Java \n    Persistence API, Version 2.0 specification and passes the JPA 2.0 TCK,\n    while remaining backwards compatiable with prior releases based on the\n@@ -163,6 +164,47 @@ Getting Involved\n         * Bugs and other issues can be posted on the project JIRA.\n \n \n+Included Changes in OpenJPA 2.0.1\n+---------------------------------\n+\n+Sub-task\n+--------\n+    * [OPENJPA-1635] - Reduce lock contention in MetaDataRepository.processRegisteredClasses\n+    * [OPENJPA-1638] - Add test variation to TestNamedQueryLockMode\n+\n+Bug\n+---\n+    * [OPENJPA-1424] - Out of bounds exception using fetch plan\n+    * [OPENJPA-1641] - SybaseDictionary should try both JDBC column names and Sybase specific column names\n+    * [OPENJPA-1668] - User's ''DBDictionary.sequenceSQL' setting not being honored on zOS \n+    * [OPENJPA-1678] - SQL Parameter values may contain sensitive information and should not be logged by default.\n+    * [OPENJPA-1679] - Index name too long for DB2 zOS when schema is present\n+    * [OPENJPA-1690] - DistinctResultList is not Serializable\n+    * [OPENJPA-1704] - PCEnhancer incorrectly generates readExternal \n+    * [OPENJPA-1713] - OutOfMemory caused by EntityManagerImpl.push/popFetchPlan processing\n+    * [OPENJPA-1714] - Consider openjpa.Optimistic setting when calculating the default lock mode to apply to a named query\n+    * [OPENJPA-1715] - OpenJPA generates wrong SQL if a result variable that references an aggregate expression is used in ORDER BY clause\n+    * [OPENJPA-1719] - Prepared SQL cache ordering problem with subqueries. \n+    * [OPENJPA-1722] - Problem serializing DistinctResultList when EntityManager is closed\n+    * [OPENJPA-1737] - The openjpa-2.0.0.jar does not have its MANIFEST.MF has the first entry\n+    * [OPENJPA-1742] - Recover if connectionFactory on EntityManagerFactory is invalid but cf on EntityManager is valid. \n+    * [OPENJPA-1749] - Throw exception if using datacache / synchronize mappings and specifying datasource name at EM creation.\n+    * [OPENJPA-1753] - TestMixedLockManagerLockPermutation: Timing issue determines the pass/no-pass of the test case\n+\n+Improvement\n+-----------\n+    * [OPENJPA-1637] - Upgrade to latest Geronimo Specs for JPA2 and Bean Validation\n+    * [OPENJPA-1673] - Update MetaDataRepository docs\n+    * [OPENJPA-1712] - Upgrade builds to use Apache hosted Nexus repo\n+    * [OPENJPA-1735] - Mark commons-logging as provided in the build to remove transient maven dependency\n+    * [OPENJPA-1771] - Upgrade to latest Apache BVAL for testing and apache-rat plugin\n+\n+Test\n+----\n+    * [OPENJPA-1639] - Simple openjpa-xmlstore tests\n+    * [OPENJPA-1660] - Add support to test with Apache Bean Validation provider\n+\n+\n Included Changes in OpenJPA 2.0.0\n ---------------------------------\n \n@@ -973,6 +1015,7 @@ Improvement\n     * [OPENJPA-841] - Create structures to hold Slice information with StateManangers\n     * [OPENJPA-858] - Allow postPersist be invoked immediately after persist()\n     * [OPENJPA-968] - Change in default detach() behavior for JPA 2.0\n+    * [OPENJPA-620] - An eagerly initialized configuration with fail-fast behavior on persistent class resolution\n \n New Feature\n -----------"},{"sha":"446654486e065d694c4e33d13b22471a2bd0d3df","filename":"openjpa-project/NOTICE.txt","status":"modified","additions":0,"deletions":2,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/NOTICE.txt","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/NOTICE.txt","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/NOTICE.txt?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -5,8 +5,6 @@ Copyright 2006-2010 The Apache Software Foundation\n This product includes software developed at\n The Apache Software Foundation (http://www.apache.org/).\n \n-Apache, the Apache feather logo and OpenJPA are trademarks of The Apache Software Foundation.\n-\n The OpenJPA binary assembly includes software developed by the:\n     Apache Commons Collections project\n     Apache Commons Lang project"},{"sha":"d00a10a065f1adb36c1d28f4cbc8f271581d833b","filename":"openjpa-project/README.txt","status":"modified","additions":14,"deletions":13,"changes":27,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/README.txt","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/README.txt","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/README.txt?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -1,13 +1,14 @@\n-Apache OpenJPA README\r\n-=====================\r\n-\r\n-Thank you for downloading this release of Apache OpenJPA.\r\n-\r\n-Please refer to the following files for more information:\r\n-    BUILDING.txt\r\n-    CHANGES.txt\r\n-    RELEASE-NOTES.html\r\n-\r\n-For documentation and project information, please visit our project site:\r\n-    http://openjpa.apache.org/\r\n-\r\n+Apache OpenJPA - README.txt\n+Licensed under Apache License 2.0 - http://www.apache.org/licenses/LICENSE-2.0\n+--------------------------------------------------------------------------------\n+\n+Thank you for downloading this release of Apache OpenJPA.\n+\n+Please refer to the following files for more information:\n+    BUILDING.txt\n+    CHANGES.txt\n+    RELEASE-NOTES.html\n+\n+For documentation and project information, please visit our project site:\n+    http://openjpa.apache.org/\n+"},{"sha":"ad44055720be4957e349ad09c48cd400ad734422","filename":"openjpa-project/RELEASE-NOTES.html","status":"modified","additions":91,"deletions":3,"changes":94,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/RELEASE-NOTES.html","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/RELEASE-NOTES.html","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/RELEASE-NOTES.html?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -1,7 +1,25 @@\n+<!-- \n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+ \n+ http://www.apache.org/licenses/LICENSE- 2.0\n+ \n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License. \n+--> \n <html>\n-<title>Release Notes for Apache OpenJPA 2.0.0</title>\n+<title>Release Notes for Apache OpenJPA 2.0.1</title>\n <body>\n-<h1>Release Notes for Apache OpenJPA 2.0.0</h1>\n+<h1>Release Notes for Apache OpenJPA 2.0.1</h1>\n <p>\n <ul>\n   <li><a href=\"#Overview\">Overview</a></li>\n@@ -12,6 +30,7 @@ <h1>Release Notes for Apache OpenJPA 2.0.0</h1>\n   <li><a href=\"#Notice\">Notice</a></li>\n   <li><a href=\"#ReleaseNotes\">Release Notes</a></li>\n   <ul>\n+    <li><a href=\"#201\">2.0.1</a></li>\n     <li><a href=\"#200\">2.0.0</a></li>\n     <li><a href=\"#200beta3\">2.0.0 Beta 3</a></li>\n     <li><a href=\"#200beta2\">2.0.0 Beta 2</a></li>\n@@ -28,7 +47,7 @@ <h1>Release Notes for Apache OpenJPA 2.0.0</h1>\n <h2><a name=\"Overview\"></a>Overview</h2>\n \n <P>\n-   The Apache OpenJPA community is proud to release a 2.0.0 distribution of\n+   The Apache OpenJPA community is proud to release a 2.0.1 distribution of\n    OpenJPA. This distribution is based on the final JSR 317 Java\n    Persistence API, Version 2.0 specification and passes the JPA 2.0 TCK,\n    while remaining backwards compatiable with prior releases based on the\n@@ -230,6 +249,75 @@ <h2><a name=\"Notice\"></a>Notice</h2>\n <hr>\n <h2><a name=\"ReleaseNotes\">Release Notes</h2>\n \n+<hr>\n+<h3><a name=\"201\">OpenJPA 2.0.1</h3>\n+<h4>Sub-task</h4>\n+<ul>\n+<li>[<a href='https://issues.apache.org/jira/browse/OPENJPA-1635'>OPENJPA-1635</a>] -         Reduce lock contention in MetaDataRepository.processRegisteredClasses\n+</li>\n+<li>[<a href='https://issues.apache.org/jira/browse/OPENJPA-1638'>OPENJPA-1638</a>] -         Add test variation to TestNamedQueryLockMode\n+</li>\n+</ul>\n+\n+<h4>Bug</h4>\n+<ul>\n+<li>[<a href='https://issues.apache.org/jira/browse/OPENJPA-1424'>OPENJPA-1424</a>] -         Out of bounds exception using fetch plan\n+</li>\n+<li>[<a href='https://issues.apache.org/jira/browse/OPENJPA-1641'>OPENJPA-1641</a>] -         SybaseDictionary should try both JDBC column names and Sybase specific column names\n+</li>\n+<li>[<a href='https://issues.apache.org/jira/browse/OPENJPA-1668'>OPENJPA-1668</a>] -         User's ''DBDictionary.sequenceSQL' setting not being honored on zOS \n+</li>\n+<li>[<a href='https://issues.apache.org/jira/browse/OPENJPA-1678'>OPENJPA-1678</a>] -         SQL Parameter values may contain sensitive information and should not be logged by default.\n+</li>\n+<li>[<a href='https://issues.apache.org/jira/browse/OPENJPA-1679'>OPENJPA-1679</a>] -         Index name too long for DB2 zOS when schema is present\n+</li>\n+<li>[<a href='https://issues.apache.org/jira/browse/OPENJPA-1690'>OPENJPA-1690</a>] -         DistinctResultList is not Serializable\n+</li>\n+<li>[<a href='https://issues.apache.org/jira/browse/OPENJPA-1704'>OPENJPA-1704</a>] -         PCEnhancer incorrectly generates readExternal \n+</li>\n+<li>[<a href='https://issues.apache.org/jira/browse/OPENJPA-1713'>OPENJPA-1713</a>] -         OutOfMemory caused by EntityManagerImpl.push/popFetchPlan processing\n+</li>\n+<li>[<a href='https://issues.apache.org/jira/browse/OPENJPA-1714'>OPENJPA-1714</a>] -         Consider openjpa.Optimistic setting when calculating the default lock mode to apply to a named query\n+</li>\n+<li>[<a href='https://issues.apache.org/jira/browse/OPENJPA-1715'>OPENJPA-1715</a>] -         OpenJPA generates wrong SQL if a result variable that references an aggregate expression is used in ORDER BY clause\n+</li>\n+<li>[<a href='https://issues.apache.org/jira/browse/OPENJPA-1719'>OPENJPA-1719</a>] -         Prepared SQL cache ordering problem with subqueries. \n+</li>\n+<li>[<a href='https://issues.apache.org/jira/browse/OPENJPA-1722'>OPENJPA-1722</a>] -         Problem serializing DistinctResultList when EntityManager is closed\n+</li>\n+<li>[<a href='https://issues.apache.org/jira/browse/OPENJPA-1737'>OPENJPA-1737</a>] -         The openjpa-2.0.0.jar does not have its MANIFEST.MF has the first entry\n+</li>\n+<li>[<a href='https://issues.apache.org/jira/browse/OPENJPA-1742'>OPENJPA-1742</a>] -         Recover if connectionFactory on EntityManagerFactory is invalid but cf on EntityManager is valid. \n+</li>\n+<li>[<a href='https://issues.apache.org/jira/browse/OPENJPA-1749'>OPENJPA-1749</a>] -         Throw exception if using datacache / synchronize mappings and specifying datasource name at EM creation.\n+</li>\n+<li>[<a href='https://issues.apache.org/jira/browse/OPENJPA-1753'>OPENJPA-1753</a>] -         TestMixedLockManagerLockPermutation: Timing issue determines the pass/no-pass of the test case\n+</li>\n+</ul>\n+\n+<h4>Improvement</h4>\n+<ul>\n+<li>[<a href='https://issues.apache.org/jira/browse/OPENJPA-1637'>OPENJPA-1637</a>] -         Upgrade to latest Geronimo Specs for JPA2 and Bean Validation\n+</li>\n+<li>[<a href='https://issues.apache.org/jira/browse/OPENJPA-1673'>OPENJPA-1673</a>] -         Update MetaDataRepository docs\n+</li>\n+<li>[<a href='https://issues.apache.org/jira/browse/OPENJPA-1712'>OPENJPA-1712</a>] -         Upgrade builds to use Apache hosted Nexus repo\n+</li>\n+<li>[<a href='https://issues.apache.org/jira/browse/OPENJPA-1735'>OPENJPA-1735</a>] -         Mark commons-logging as provided in the build to remove transient maven dependency\n+</li>\n+<li>[<a href='https://issues.apache.org/jira/browse/OPENJPA-1771'>OPENJPA-1771</a>] -         Upgrade to latest Apache BVAL for testing and apache-rat plugin\n+</li>\n+</ul>\n+\n+<h4>Test</h4>\n+<ul>\n+<li>[<a href='https://issues.apache.org/jira/browse/OPENJPA-1639'>OPENJPA-1639</a>] -         Simple openjpa-xmlstore tests\n+</li>\n+<li>[<a href='https://issues.apache.org/jira/browse/OPENJPA-1660'>OPENJPA-1660</a>] -         Add support to test with Apache Bean Validation provider\n+</li>\n+</ul>\n+\n+\n <hr>\n <h3><a name=\"200\">OpenJPA 2.0.0</h3>\n <h4>Sub-task</h4>"},{"sha":"d6bd765b7d259dea1f1a84d5eb5605a8cfd566ce","filename":"openjpa-project/assembly.xml","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/assembly.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/assembly.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/assembly.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -94,6 +94,7 @@\n                 <include>commons-lang:commons-lang</include>\n                 <include>commons-collections:commons-collections</include>\n                 <include>commons-pool:commons-pool</include>\n+                <include>commons-logging:commons-logging</include>\n \n                 <include>org.apache.geronimo.specs:geronimo-jta_1.1_spec</include>\n                 <include>org.apache.geronimo.specs:geronimo-jpa_2.0_spec</include>"},{"sha":"3733b346a930f107f6994c21d7d51be73a2c64ef","filename":"openjpa-project/pom.xml","status":"modified","additions":22,"deletions":11,"changes":33,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/pom.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -26,24 +26,28 @@\n \n         mvn clean compile package -Dtest=false -DfailIfNoTests=false\n \n-        To build and deploy a full digned release with docs, run:\n+        To build and deploy a fully signed release with docs, run:\n \n-            mvn clean deploy -Pjavadoc-profile,docbook-profile,sign-release\n+            mvn clean deploy -Papache-release,docbook-profile\n \n         Note that to sign the release, you need to have \"gpg\" installed and\n         create a key. See http://apache.org/dev/release-signing.html\n     -->\n+\n     <modelVersion>4.0.0</modelVersion>\n-    <artifactId>apache-openjpa</artifactId>\n-    <packaging>pom</packaging>\n-    <name>OpenJPA Project Docs and Assemblies</name>\n-    <description>OpenJPA Project Docs and Assemblies</description>\n+\n     <parent>\n         <groupId>org.apache.openjpa</groupId>\n         <artifactId>openjpa-parent</artifactId>\n-        <version>2.0.0</version>\n+        <version>2.0.1</version>\n     </parent>\n \n+    <groupId>org.apache.openjpa</groupId>\n+    <artifactId>apache-openjpa</artifactId>\n+    <packaging>pom</packaging>\n+    <name>OpenJPA Project Docs and Assemblies</name>\n+    <description>OpenJPA Project Docs and Assemblies</description>\n+\n     <properties>\n         <openjpa.release.keyAlias>\n             ${user.name}@apache.org\n@@ -132,7 +136,9 @@\n                             <goal>attached</goal>\n                         </goals>\n                         <configuration>\n-                            <descriptor>assembly.xml</descriptor>\n+                            <descriptors>\n+                                <descriptor>assembly.xml</descriptor>\n+                            </descriptors>\n                             <outputDirectory>${openjpa.assembly.outputDirectory}</outputDirectory>\n                             <workDirectory>target/work</workDirectory>\n                         </configuration>\n@@ -395,7 +401,7 @@\n                                             <property name=\"nightly.user.name\" value=\"${nightly.user.name}\" />\n                                             <property name=\"nightly.password\" value=\"${nightly.password}\" />\n                                             <property name=\"nightly.version\" value=\"${nightly.version}\" />\n-                                            <property name=\"pom.version\" value=\"${pom.version}\" />\n+                                            <property name=\"project.version\" value=\"${project.version}\" />\n                                         </ant>\n                                     </tasks>\n                                 </configuration>\n@@ -415,19 +421,24 @@\n         <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa</artifactId>\n-            <version>${pom.version}</version>\n+            <version>${project.version}</version>\n         </dependency>\n         <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa-all</artifactId>\n-            <version>${pom.version}</version>\n+            <version>${project.version}</version>\n         </dependency>\n \n         <!-- included so we can include it in the distribution -->\n         <dependency>\n             <groupId>org.apache.derby</groupId>\n             <artifactId>derby</artifactId>\n         </dependency>\n+        <dependency>\n+            <groupId>commons-logging</groupId>\n+            <artifactId>commons-logging</artifactId>\n+        </dependency>\n+\n         <!-- excluded optional dependency that user should provide with BV impl\n         <dependency>\n             <groupId>org.apache.geronimo.specs</groupId>"},{"sha":"8c062fa712a8f1b986d49685fd74bf20a4edd42e","filename":"openjpa-project/source-assembly.xml","status":"modified","additions":2,"deletions":0,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/source-assembly.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/source-assembly.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/source-assembly.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -36,6 +36,8 @@\n             <excludes>\n                 <exclude>**/target/**</exclude>\n                 <exclude>**/*.log</exclude>\n+                <exclude>**/.*</exclude>\n+                <exclude>**/.*/**</exclude>\n             </excludes>\n         </fileSet>\n "},{"sha":"58f8c00e8170f5f3c7ba5ab698f48636d974fa20","filename":"openjpa-project/src/doc/manual/jpa_overview_criteria.xml","status":"modified","additions":4,"deletions":16,"changes":20,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/src/doc/manual/jpa_overview_criteria.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/src/doc/manual/jpa_overview_criteria.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_criteria.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -59,7 +59,7 @@\n     \t<programlisting>\n EntityManager em = ... ; \n CriteriaBuilder queryBuilder = em.getCriteriaBuilder();\n-CriteriaQuery qdef = queryBuilder.createCriteriaQuery();\n+CriteriaQuery qdef = queryBuilder.createQuery();\n     \t</programlisting>\n     \tThe first step in constructing a query definition is specification of \n     \tquery roots.  Query roots specify the domain objects on which the query \n@@ -172,7 +172,9 @@ Annotation processor option <code>-Aopenjpa.metamodel=true</code> is specified.\n     <programlisting>\n  $ javac -classpath path/to/openjpa-all.jar -Aopenjpa.metamodel=true mypackage/MyEntity.java\n     </programlisting>\n-will generate source code for canonical meta-featureSelection class <code>mypackage.MyEntity_.java</code>.\n+will generate source code for canonical meta-featureSelection class <code>mypackage.MyEntity_</code>.\n+The source code is generated relative to the directory specified in <code>-s</code> option\n+of <code>javac</code> compiler and defaulted to the current directory.\n       </para>\n       \n       <para>\n@@ -206,20 +208,6 @@ the name of a meta-class given the name of the original persistent Java entity c\n                By default, adds a OpenJPA proprietary text as comment block.\n              </para>\n         </listitem>\n-        <listitem>\n-\t\t\t<para>\n-              -Aout=dir : A directory in the local file system. The generated files will be written \n-              <emphasis>relative</emphasis> to this directory according to the package structure i.e. if <code>dir</code> \n-              is specified as <code>/myproject/generated-src</code> then the generated source code will be \n-              written to <code>/myproject/generated-src/mypackage/MyEntity_.java</code>.\n-              If this option is not specified, then an attempt will be made to write the generated source file \n-              in the same directory of the source code of original class <code>mypackage.MyEntity</code>. \n-              The source code location for <code>mypackage.MyEntity</code> can only be determined for Sun JDK6 \n-              and when <code>tools.jar</code> being available to the compiler classpath. If the source code \n-              location for the original class can not be determined, and the option is not specified, then the \n-              generated source code is written relative to the current directory according to the package structure.  \n-             </para>\n-        </listitem>\n     </itemizedlist>\n        </para>\n     </section>"},{"sha":"b59dee2e53d2a0888da0f06264ca7c4fb0626d82","filename":"openjpa-project/src/doc/manual/jpa_overview_mapping.xml","status":"modified","additions":8,"deletions":0,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/src/doc/manual/jpa_overview_mapping.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/src/doc/manual/jpa_overview_mapping.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_mapping.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -99,6 +99,14 @@ JPA uses the defaults defined by the specification. As we present\n each mapping throughout this chapter, we also describe the defaults that apply\n when the mapping is absent.\n     </para>\n+    <note>\n+        <para>\n+Mapping metadata is used primarily with schema generation. This metadata should not\n+be relied upon for validation prior to communicating with the database. \n+For example using the @Column(nullable=false) annotation does not do up front validation\n+that the value in the entity is correct. \n+        </para>\n+    </note>\n     <section id=\"jpa_overview_mapping_table\">\n         <title>\n             Table"},{"sha":"2eb60c803356e26a02fdfda7a23d5b3eb41c26a2","filename":"openjpa-project/src/doc/manual/jpa_overview_meta.xml","status":"modified","additions":9,"deletions":0,"changes":9,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/src/doc/manual/jpa_overview_meta.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/src/doc/manual/jpa_overview_meta.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/jpa_overview_meta.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -107,6 +107,15 @@ in the Reference Guide for details. There are currently no XML equivalents for\n these extension annotations.\n         </para>\n     </note>\n+    <note>\n+        <para>\n+Persistence metadata may be used to validate the contents of your entities prior to communicating\n+with the database. This differs from mapping meta data which is primarily used for schema generation.\n+For example if you indicate that a relationship is not optional (e.g. @Basic(optional=false)) OpenJPA\n+will validate that the variable in your entity is not null <emphasis>before</emphasis> inserting a row \n+in the database. \n+        </para>\n+    </note>\n     <mediaobject>\n         <imageobject>\n             <!-- PNG image data, 553 x 580 (see README) -->"},{"sha":"0572b2b8a88d08af6884540804ac12357f1b4a3e","filename":"openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","status":"modified","additions":122,"deletions":1,"changes":123,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_dbsetup.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -180,6 +180,22 @@ logged SQL statements.\n each pretty-printed SQL line.\n                         </para>\n                     </listitem>\n+                    <listitem>\n+                        <para>\n+                        <indexterm>\n+                            <primary>\n+                                SQL\n+                            </primary>\n+                            <secondary>\n+                                PrintParameters\n+                            </secondary>\n+                        </indexterm>\n+<literal>PrintParameters</literal>: A boolean indicating whether SQL parameter \n+values will be included in exception text and when logging is enabled. Since \n+the parameter values may contain sensitive information the default value is \n+false. \n+                        </para>\n+                    </listitem>\n                 </itemizedlist>\n             </listitem>\n         </itemizedlist>\n@@ -193,7 +209,7 @@ each pretty-printed SQL line.\n &lt;property name=\"openjpa.ConnectionURL\" value=\"jdbc:hsqldb:db-hypersonic\"/&gt;\n &lt;property name=\"openjpa.ConnectionDriverName\" value=\"org.hsqldb.jdbcDriver\"/&gt;\n &lt;property name=\"openjpa.ConnectionFactoryProperties\" \n-    value=\"PrettyPrint=true, PrettyPrintLineLength=80\"/&gt;\n+    value=\"PrettyPrint=true, PrettyPrintLineLength=80, PrintParameters=True\"/&gt;\n </programlisting>\n         </example>\n     </section>\n@@ -354,6 +370,111 @@ properties are outlined in <xref linkend=\"ref_guide_conf\"/>.\n </programlisting>\n             </example>\n         </section>\n+        <section id=\"ref_guide_dbsetup_setDSatRuntime\">\n+            <title>Setting the DataSource at runtime</title>\n+            <indexterm zone=\"ref_guide_dbsetup_setDSatRuntime\">\n+                <primary>connections</primary>\n+                <secondary>override configuration</secondary>\n+            </indexterm>\n+            <para> \n+As mentioned above, the JTA and Non-JTA DataSources may be passed in as configuration properties\n+at EntityManagerFactory creation. Either the JPA standard properties (\n+<literal>javax.persistence.jtaDataSource</literal>, <literal>java.persistence.nonJtaDataSource</literal>) \n+or their OpenJPA specific equivalents (<literal>openjpa.ConnectionFactoryName</literal>, \n+<literal>openjpa.ConnectionFactory2Name</literal>) may be used. One usecase for this function is to \n+store production connection information in configuration files but override the value when testing. \n+            </para>\n+            <para>\n+            <example>\n+                <programlisting>Map&lt;Object,Object&gt; props = new HashMap&lt;Object,Object&gt;();\n+props.put(\"javax.persistence.jtaDataSource\", \"jdbc/myDataSource\");\n+props.put(\"javax.persistence.nonJtaDataSource\", \"jdbc/myNonJTADataSource\");\n+emf = Persistence.createEntityManagerFactory(\"example\", props);</programlisting>\n+            </example>\n+            </para>\n+                <section id=\"ref_guide_dbsetup_setDSPerEM\">\n+                <title>Using different datasources for each EntityManager</title> \n+                <para>\n+The JPA specification allows the DataSource (ConnectionFactory) to be specified on the \n+EntityManagerFactory.OpenJPA extends this support and allows each EntityManager to override the \n+DataSource from the EntityManagerFactory. It's expected that the EntityManagerFactory will also be \n+configured with a valid jta / nonJta DataSource. The DataSource configured on the \n+EntityManagerFactory will be used to obtain a DBDictionary and (rarely) to gather some information\n+about the database in use (e.g. version, JDBC driver version). \n+                </para>\n+                <para>\n+                    If the EntityManagerFactory is not configured with a valid DataSource there are\n+                    a few additional caveats. \n+                    <itemizedlist>\n+                        <listitem><para>The <literal>openjpa.DBDictionary</literal> property must be\n+                        used to ensure the correct DBDictionary is used.</para></listitem>\n+                        <listitem><para>OpenJPA will always attempt to obtain a datasource from JNDI\n+                        based on the configuration for the EntityManagerFactory. When a JNDI name is\n+                        specified on the EntityManager this lookup happens slightly earlier than \n+                        normal. If the lookup fails the JNDI name provided at EntityManager creation\n+                        will be set into the EntityManagerFactory's configuration and used in\n+                        subsequent attempts. </para></listitem>\n+                    </itemizedlist>\n+                </para>\n+                <section id=\"ref_guide_dbsetup_setDSBenefits\">\n+                    <title>Benefits</title>\n+                    <para>\n+                    In effect this option allows a single set of entity definitions to be shared \n+                    between multiple database instances or schemas within an instance. This can be\n+                    highly beneficial when there are a large number of entity definitions (e.g. >\n+                    200), or a large number of databases / schemas in use.\n+                    </para> \n+                </section>\n+                <section id=\"ref_guide_dbsetup_setDSLimitations\">\n+                    <title>Limitations</title>\n+                    <para>\n+                        <itemizedlist>\n+                            <listitem>\n+                                <para>The same database type and version must be used by each \n+                                EntityManager. OpenJPA will use the same DBDictionary for each\n+                                EntityManager and will make no attempt to alter SQL syntax \n+                                between EntityManager instances. \n+                            </para>\n+                            </listitem>\n+                            <listitem><para>It is the application's responsibility to ensure \n+                            that the schema is identical on each database.</para></listitem>\n+                            <listitem><para>The application may not specify schema names for \n+                            individual entities.</para></listitem>\n+                            <listitem>\n+                                <para>The DataSource (ConnectionFactory) name may only be \n+                                specified when the EntityManager is created. The datasource \n+                                may not be switched while an EntityManager is in use.\n+                                </para>\n+                            </listitem>\n+                            <listitem><para>The L2 cache (DataCache) should not be used if \n+                            different DataSources are specified for each EntityManager</para>\n+                            </listitem>\n+                            <listitem><para>SynchronizeMappings should not be used with this \n+                            feature.</para></listitem>\n+                            <listitem><para>Table and Sequence generators should not be used \n+                            with this feature.</para></listitem>\n+                            <listitem><para>It is not required, but is recommended that the \n+                            <literal>openjpa.DBDictionary</literal> property be specified when \n+                            using this feature</para></listitem> \n+                        </itemizedlist>\n+                    </para> \n+                </section>\n+                <section id=\"ref_guide_dbsetup_setDSError\">\n+                    <title>Error handling</title>\n+                    <para>\n+                    If a JTA DataSource is not available when the EntityManager is created an \n+                    <link linkend=\"\"><literal>ArgumentException</literal></link> will be thrown.\n+                    The EntityManager will not fall back on the JTA DataSource defined in the \n+                    configuration. \n+                    </para> \n+                    <para>\n+                    The same logic applies if a Non-JTA DataSource is not available when the \n+                    EntityManager is created. OpenJPA will not fall back to the configured \n+                    non-JTA DataSource.\n+                    </para>\n+                </section>\n+            </section>\n+        </section>\n     </section>\n     <section id=\"ref_guide_dbsetup_sqlconn\">\n         <title>"},{"sha":"bf48346c2ad806426506c4ee15b569e1db39701d","filename":"openjpa-project/src/doc/manual/ref_guide_logging.xml","status":"modified","additions":10,"deletions":0,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/src/doc/manual/ref_guide_logging.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/src/doc/manual/ref_guide_logging.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_logging.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -177,6 +177,16 @@ about possible performance concerns will be logged to the <literal>INFO\n use. Detailed information about the execution of SQL statements will be sent to\n the <literal>TRACE</literal> level. It is useful to enable this channel if you\n are curious about the exact SQL that OpenJPA issues to the datastore.\n+<note>\n+The SQL issued to the database may contain sensitive information. By default the\n+parameter values used in the prepared statements generated by OpenJPA will not \n+be printed in the SQL log - instead you will see a ? for each value. The actual \n+values may be printed by adding <literal>PrintParameters=True</literal> to the\n+<link linkend=\"openjpa.ConnectionFactoryProperties\">\n+<literal>openjpa.ConnectionFactoryProperties</literal></link> property. Also\n+see <link linkend=\"ref_guide_dbsetup_builtin\"><literal>Using the OpenJPA\n+DataSource</literal></link>\n+</note>\n                 </para>\n                 <para>\n When using the built-in OpenJPA logging facilities, you can enable SQL logging"},{"sha":"fc7bc0a4829b77d8ae7f08112a95c605d68a5d37","filename":"openjpa-project/src/doc/manual/ref_guide_meta.xml","status":"modified","additions":6,"deletions":11,"changes":17,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/src/doc/manual/ref_guide_meta.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/src/doc/manual/ref_guide_meta.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_meta.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -126,23 +126,18 @@ scanned for annotated JPA entities.\n \t\t<itemizedlist>\n \t\t<listitem><para>\n \t\t\t<literal>Preload</literal>: A boolean property. If true, OpenJPA will eagerly load the repository on \n-\t\t\tEntityManagerFactory creation. As a result, all Entity classes will be eagerly loaded by the JVM. If \n-\t\t\tfalse, the repository will be lazily loaded as Entity classes are loaded by the JVM. The default value \n-\t\t\tis false.\n+\t\t\tEntityManagerFactory creation. As a result, all Entity classes will be eagerly loaded by the JVM. \n+                        Once MetaData preloading completes, all locking is removed from the MetaDataRepository and this will \n+                        result in a much more scalable repository. If false, the repository will be lazily loaded as Entity \n+                        classes are loaded by the JVM. The default value is false.\n \t\t\t</para>\n-            \t</listitem>\n-\t\t<listitem><para>\n-\t\t\t<literal>NoLock</literal>: If true, the repository will be treated as a read only data structure and \n-\t\t\tminimal locking will be imposed on users. Preload must be set to true for OpenJPA to honor setting \n-\t\t\tNoLock to true. The default value is false.\n-\t\t\t</para>\n-            \t</listitem>            \t\n+            \t</listitem>           \t\n             \t</itemizedlist>\n         \t\n \t        <title>Metadata Repository</title>\n \t        <example id=\"ref_guide_meta_repo\">\n <programlisting>\n-&lt;property name=\"openjpa.MetaDataRepository\" value=\"Preload=true,NoLock=true\"/&gt;\n+&lt;property name=\"openjpa.MetaDataRepository\" value=\"Preload=true\"/&gt;\n </programlisting>\n \t        </example>\n \t</section>"},{"sha":"4e2b2fae70d967f43ad16bc6d59d4fcdceff3cd1","filename":"openjpa-project/src/doc/manual/ref_guide_optimization.xml","status":"modified","additions":15,"deletions":0,"changes":15,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/src/doc/manual/ref_guide_optimization.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/src/doc/manual/ref_guide_optimization.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_optimization.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -606,6 +606,21 @@ scalability problems. You can disable this protective behavior by setting the\n linkend=\"ref_guide_runtime_broker_finalization\"/> for details.\n                     </entry>\n                 </row>\n+                <row>\n+                    <entry colname=\"name\">\n+                        <emphasis role=\"bold\">\n+                            Preload MetaDataRepository\n+                        </emphasis>\n+                        <para>\n+<emphasis>scalability</emphasis>\n+                        </para>\n+                    </entry>\n+                    <entry colname=\"desc\">\n+By default, the MetaDataRepository is lazily loaded which means that fair amounts of locking\n+is used to ensure that metadata is processed properly. Enabling preloading allows OpenJPA to\n+load metadata upfront and remove locking. See <xref linkend=\"ref_guide_meta_repository\"/> for details.\n+                    </entry>\n+                </row>                \n             </tbody>\n         </tgroup>\n     </table>"},{"sha":"d6a22fc8e2cbfa0cf57d5d560431ff9adeed967a","filename":"openjpa-project/src/doc/manual/ref_guide_remote.xml","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/src/doc/manual/ref_guide_remote.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/src/doc/manual/ref_guide_remote.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_remote.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -354,7 +354,7 @@ use detached state managers, as determined by the settings above.\n DetachState setting.</emphasis> Detach all fields and relations as described by the loaded \n property when an explicit detach is requested or when a \n single Entity is being detached as part of serialization. When the entire \n-persistence context is being auto-detached(@See openjpa.AutoDetach), \n+persistence context is being auto-detached ( <literal>openjpa.AutoDetach</literal> ), \n the minimal amount of work will be completed to disassociate all Entities from \n the persistence context. <emphasis role=\"bold\">It is highly recommended that all Entities have a \n @Version field when using this property</emphasis>. In addition, care needs to be taken "},{"sha":"166d1728bfa6de28f19627e82fedc95d18be7773","filename":"openjpa-project/src/doc/manual/ref_guide_runtime.xml","status":"modified","additions":18,"deletions":0,"changes":18,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/src/doc/manual/ref_guide_runtime.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/src/doc/manual/ref_guide_runtime.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_runtime.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -936,6 +936,24 @@ state in question to circumvent the database limitations that prevent OpenJPA\n from issuing a locking SELECT in the first place.\n                     </para>\n                 </listitem>\n+                <listitem>\n+                    <para>\n+When using the pessimistic lock manager and named queries you will see the following\n+<literal>WARNING</literal> message logged if you do not specify a lockMode on the named query\n+or you explicitly set it to <literal>LockModeType.NONE</literal>. When using the pessimistic\n+lock manager a <literal>LockModeType.NONE</literal> will always be promoted to <literal>LockModeType.READ</literal>.\n+<programlisting>\n+WARN   [main] openjpa.MetaData - Encountered a read lock level less than LockModeType.READ when processing the NamedQuery annotation \"findEmployeeById\" in class \"org.apache.openjpa.persistence.lockmgr.LockEmployee\". Setting query lock level to LockModeType.READ.\n+</programlisting>\n+If you are using the pessimistic lock manager and you truly do want to set the lock mode to NONE for a\n+given query, you can use a fetch plan to do so.\n+<programlisting>\n+OpenJPAQuery q = em.createNamedQuery(\"findEmployeeById\"); \n+FetchPlan fp = q.getFetchPlan();\n+fp.setReadLockMode(LockModeType.NONE);\n+</programlisting>\n+                    </para>\n+                </listitem>                \n             </itemizedlist>\n         </section>\n     </section>"},{"sha":"e2fd859c53f16cb5ef9c0118b7e0ed3b7711ba81","filename":"openjpa-project/upload.xml","status":"modified","additions":5,"deletions":5,"changes":10,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/upload.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-project/upload.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/upload.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -55,17 +55,17 @@\n             </fileset>\n         </scp>\n         <!-- remove directories, hopefully this fails silently. mkdir does not and stops the process these exist.-->\n-        <sshexec host=\"${host}\" username=\"${nightly.user.name}\" password=\"${nightly.password}\" command=\"rm -Rf ${build.dir}/apache-openjpa-${pom.version}/docs\" trust=\"true\" />\n-        <sshexec host=\"${host}\" username=\"${nightly.user.name}\" password=\"${nightly.password}\" command=\"rm -Rf ${build.dir}/apache-openjpa-${pom.version}/downloads\" trust=\"true\" />\n+        <sshexec host=\"${host}\" username=\"${nightly.user.name}\" password=\"${nightly.password}\" command=\"rm -Rf ${build.dir}/apache-openjpa-${project.version}/docs\" trust=\"true\" />\n+        <sshexec host=\"${host}\" username=\"${nightly.user.name}\" password=\"${nightly.password}\" command=\"rm -Rf ${build.dir}/apache-openjpa-${project.version}/downloads\" trust=\"true\" />\n         <sshexec host=\"${host}\" username=\"${nightly.user.name}\" password=\"${nightly.password}\" command=\"unzip -qq -d ${build.dir}/ ${build.dir}/docs.zip\" trust=\"true\" />\n         <sshexec host=\"${host}\" username=\"${nightly.user.name}\" password=\"${nightly.password}\" command=\"rm ${build.dir}/docs.zip\" trust=\"true\" />\n-        <sshexec host=\"${host}\" username=\"${nightly.user.name}\" password=\"${nightly.password}\" command=\"mkdir ${build.dir}/apache-openjpa-${pom.version}/downloads \" trust=\"true\" />\n+        <sshexec host=\"${host}\" username=\"${nightly.user.name}\" password=\"${nightly.password}\" command=\"mkdir ${build.dir}/apache-openjpa-${project.version}/downloads \" trust=\"true\" />\n         \n-        <scp todir=\"${nightly.user.name}:${nightly.password}@${host}:${build.dir}/apache-openjpa-${pom.version}/downloads\" trust=\"true\">\n+        <scp todir=\"${nightly.user.name}:${nightly.password}@${host}:${build.dir}/apache-openjpa-${project.version}/downloads\" trust=\"true\">\n             <fileset dir=\"target/site/downloads\" />\n         </scp>\n         \n-        <sshexec host=\"${host}\" username=\"${nightly.user.name}\" password=\"${nightly.password}\" command=\"chmod -R g+w ${build.dir}/apache-openjpa-${pom.version}\" trust=\"true\" />\n+        <sshexec host=\"${host}\" username=\"${nightly.user.name}\" password=\"${nightly.password}\" command=\"chmod -R g+w ${build.dir}/apache-openjpa-${project.version}\" trust=\"true\" />\n         \n         <delete>\n             <fileset dir=\"target/site/tempDocs\" />"},{"sha":"8de8e564778beef718139a8b3bea955a53cd2fb9","filename":"openjpa-slice/pom.xml","status":"modified","additions":5,"deletions":18,"changes":23,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-slice/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-slice/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-slice/pom.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -27,7 +27,7 @@\n     <parent>\n         <groupId>org.apache.openjpa</groupId>\n         <artifactId>openjpa-parent</artifactId>\n-        <version>2.0.0</version>\n+        <version>2.0.1</version>\n     </parent>\n \n     <groupId>org.apache.openjpa</groupId>\n@@ -40,12 +40,12 @@\n         <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa-kernel</artifactId>\n-            <version>${pom.version}</version>\n+            <version>${project.version}</version>\n         </dependency>\n         <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa-jdbc</artifactId>\n-            <version>${pom.version}</version>\n+            <version>${project.version}</version>\n         </dependency>\n         <dependency>\n             <groupId>org.apache.geronimo.specs</groupId>\n@@ -55,13 +55,13 @@\n         <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa-persistence</artifactId>\n-            <version>${pom.version}</version>\n+            <version>${project.version}</version>\n             <scope>test</scope>\n         </dependency>\n         <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa-persistence-jdbc</artifactId>\n-            <version>${pom.version}</version>\n+            <version>${project.version}</version>\n             <classifier>tests</classifier>\n             <scope>test</scope>\n         </dependency>\n@@ -126,19 +126,6 @@\n                     </execution>\n                 </executions>\n             </plugin>\n-            <plugin>\n-                <groupId>org.apache.maven.plugins</groupId>\n-                <artifactId>maven-jar-plugin</artifactId>\n-                <executions>\n-                    <execution>\n-                        <id>attach-tests</id>\n-                        <phase>verify</phase>\n-                        <goals>\n-                            <goal>test-jar</goal>\n-                        </goals>\n-                    </execution>\n-                </executions>\n-            </plugin>\n             <plugin>\n                 <groupId>org.apache.maven.plugins</groupId>\n                 <artifactId>maven-surefire-plugin</artifactId>"},{"sha":"5c85d5b63c21eca253e349d1de72c9e547d86a09","filename":"openjpa-xmlstore/pom.xml","status":"modified","additions":107,"deletions":7,"changes":114,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-xmlstore/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-xmlstore/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-xmlstore/pom.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -21,23 +21,123 @@\n     Maven release plugin requires the project tag to be on a single line. \n -->\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n     <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <groupId>org.apache.openjpa</groupId>\n+        <artifactId>openjpa-parent</artifactId>\n+        <version>2.0.1</version>\n+    </parent>\n+\n     <groupId>org.apache.openjpa</groupId>\n     <artifactId>openjpa-xmlstore</artifactId>\n     <packaging>jar</packaging>\n     <name>OpenJPA XML Store</name>\n     <description>OpenJPA XML Store</description>\n-    <url>http://openjpa.apache.org</url>\n-    <parent>\n-        <groupId>org.apache.openjpa</groupId>\n-        <artifactId>openjpa-parent</artifactId>\n-        <version>2.0.0</version>\n-    </parent>\n+\n     <dependencies>\n         <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa-kernel</artifactId>\n-            <version>${pom.version}</version>\n+            <version>${project.version}</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.openjpa</groupId>\n+            <artifactId>openjpa-persistence-jdbc</artifactId>\n+            <version>${project.version}</version>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.openjpa</groupId>\n+            <artifactId>openjpa-persistence-jdbc</artifactId>\n+            <version>${project.version}</version>\n+            <type>test-jar</type>\n+            <scope>test</scope>\n         </dependency>\n     </dependencies>\n+\n+    <build>\n+        <plugins>\n+            <!-- Extract the common test support files from o-p-j-tests.jar -->\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-dependency-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>unpack</id>\n+                        <phase>test-compile</phase>\n+                        <goals>\n+                            <goal>unpack</goal>\n+                        </goals>\n+                        <configuration>\n+                            <artifactItems>\n+                                <artifactItem>\n+                                    <groupId>org.apache.openjpa</groupId>\n+                                    <artifactId>openjpa-persistence-jdbc</artifactId>\n+                                    <version>${project.version}</version>\n+                                    <type>test-jar</type>\n+                                    <outputDirectory>${project.build.testOutputDirectory}</outputDirectory>\n+                                    <includes>org/apache/openjpa/persistence/test/*.class</includes>\n+                                </artifactItem>\n+                            </artifactItems>\n+                        </configuration>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+\n+            <!-- new way of using openjpa-maven-plugin to enhance classes -->\n+            <plugin>\n+                <groupId>org.codehaus.mojo</groupId>\n+                <artifactId>openjpa-maven-plugin</artifactId>\n+                <configuration>\n+                    <excludes>org/apache/openjpa/xmlstore/**/Test*.class</excludes>\n+                    <excludes>org/apache/openjpa/persistence/**/*.class</excludes>\n+                    <addDefaultConstructor>true</addDefaultConstructor>\n+                    <enforcePropertyRestrictions>true</enforcePropertyRestrictions>\n+                </configuration>\n+                <executions>\n+                    <execution>\n+                        <id>enhancer</id>\n+                        <phase>process-test-classes</phase>\n+                        <goals>\n+                            <goal>test-enhance</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+                <dependencies>\n+                    <!-- use o-p-j instead of openjpa to avoid cyclical dependency in maven graph -->\n+                    <dependency>\n+                        <groupId>org.apache.openjpa</groupId>\n+                        <artifactId>openjpa-persistence-jdbc</artifactId>\n+                        <version>${project.version}</version>\n+                    </dependency>\n+                </dependencies>\n+            </plugin>\n+\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-surefire-plugin</artifactId>\n+                <configuration>\n+                    <argLine>${test.jvm.arguments}</argLine>\n+                    <systemProperties>\n+                        <property>\n+                            <name>openjpa.Log</name>\n+                            <value>${openjpa.Log}</value>\n+                        </property>\n+                        <property>\n+                            <name>openjpa.DynamicEnhancementAgent</name>\n+                            <value>false</value>\n+                        </property>\n+                        <property>\n+                            <name>tests.openjpa.allowfailure</name>\n+                            <value>${tests.openjpa.allowfailure}</value>\n+                        </property>\n+                    </systemProperties>\n+                </configuration>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n </project>\n+"},{"sha":"080755fbd35ff1ca71a49c809422066fa09445a2","filename":"openjpa-xmlstore/src/test/java/org/apache/openjpa/xmlstore/simple/AllFieldTypes.java","status":"added","additions":368,"deletions":0,"changes":368,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-xmlstore/src/test/java/org/apache/openjpa/xmlstore/simple/AllFieldTypes.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-xmlstore/src/test/java/org/apache/openjpa/xmlstore/simple/AllFieldTypes.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-xmlstore/src/test/java/org/apache/openjpa/xmlstore/simple/AllFieldTypes.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -0,0 +1,368 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.xmlstore.simple;\n+\n+import java.io.Serializable;\n+import java.math.BigDecimal;\n+import java.math.BigInteger;\n+import java.util.Calendar;\n+import java.util.Date;\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.List;\n+import java.util.ArrayList;\n+import javax.persistence.Entity;\n+import javax.persistence.OneToOne;\n+import javax.persistence.OneToMany;\n+\n+import org.apache.openjpa.persistence.PersistentCollection;\n+\n+@Entity\n+public class AllFieldTypes implements Serializable {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    public static enum EnumType {Value1, Value2};\n+    \n+    // @Basic types\n+    private short shortField;\n+    private int intField;\n+    private boolean booleanField;\n+    private long longField;\n+    private float floatField;\n+    private char charField;\n+    private double doubleField;\n+    private byte byteField;\n+    private Short wShortField;\n+    private Integer wIntegerField;\n+    private Boolean wBooleanField;\n+    private Long wLongField;\n+    private Float wFloatField;\n+    private Character wCharacterField;\n+    private Double wDoubleField;\n+    private Byte wByteField;\n+    private BigInteger bigIntegerField;\n+    private BigDecimal bigDecimalField;\n+    private String stringField;\n+    private Date dateField;\n+    private Calendar calendarField;\n+    private java.sql.Date sqlDateField;\n+    private java.sql.Time sqlTimeField;\n+    private java.sql.Timestamp sqlTimestampField;\n+    private byte[] byteLob;\n+    private Byte[] wByteLob;\n+    private char[] charLob;\n+    private Character[] wCharacterLob;\n+    private EnumType enumField;\n+    private Serializable serializableField;\n+    \n+    // Additional types\n+    private Set<String> setOfStrings = new HashSet<String>();\n+    private String[] arrayOfStrings;\n+\n+    @PersistentCollection\n+    private int[] arrayOfInts;\n+\n+    // one-to-one and one-to-many relations to self\n+    @OneToOne\n+    private AllFieldTypes selfOneOne;\n+    @OneToMany\n+    private List<AllFieldTypes> selfOneMany = new ArrayList<AllFieldTypes>();\n+\n+    public void setShortField(short shortField) {\n+        this.shortField = shortField;\n+    }\n+\n+    public short getShortField() {\n+        return this.shortField;\n+    }\n+\n+    public void setIntField(int intField) {\n+        this.intField = intField;\n+    }\n+\n+    public int getIntField() {\n+        return this.intField;\n+    }\n+\n+    public void setBooleanField(boolean booleanField) {\n+        this.booleanField = booleanField;\n+    }\n+\n+    public boolean getBooleanField() {\n+        return this.booleanField;\n+    }\n+\n+    public void setLongField(long longField) {\n+        this.longField = longField;\n+    }\n+\n+    public long getLongField() {\n+        return this.longField;\n+    }\n+\n+    public void setFloatField(float floatField) {\n+        this.floatField = floatField;\n+    }\n+\n+    public float getFloatField() {\n+        return this.floatField;\n+    }\n+\n+    public void setCharField(char charField) {\n+        this.charField = charField;\n+    }\n+\n+    public char getCharField() {\n+        return this.charField;\n+    }\n+\n+    public void setDoubleField(double doubleField) {\n+        this.doubleField = doubleField;\n+    }\n+\n+    public double getDoubleField() {\n+        return this.doubleField;\n+    }\n+\n+    public void setByteField(byte byteField) {\n+        this.byteField = byteField;\n+    }\n+\n+    public byte getByteField() {\n+        return this.byteField;\n+    }\n+\n+    public void setStringField(String stringField) {\n+        this.stringField = stringField;\n+    }\n+\n+    public String getStringField() {\n+        return this.stringField;\n+    }\n+\n+    public void setDateField(Date dateField) {\n+        this.dateField = dateField;\n+    }\n+\n+    public Date getDateField() {\n+        return this.dateField;\n+    }\n+\n+    public void setSetOfStrings(Set<String> setOfStrings) {\n+        this.setOfStrings = setOfStrings;\n+    }\n+\n+    public Set<String> getSetOfStrings() {\n+        return this.setOfStrings;\n+    }\n+\n+    public void setArrayOfStrings(String[] arrayOfStrings) {\n+        this.arrayOfStrings = arrayOfStrings;\n+    }\n+\n+    public String[] getArrayOfStrings() {\n+        return this.arrayOfStrings;\n+    }\n+\n+    public void setArrayOfInts(int[] arrayOfInts) {\n+        this.arrayOfInts = arrayOfInts;\n+    }\n+\n+    public int[] getArrayOfInts() {\n+        return arrayOfInts;\n+    }\n+\n+    public BigDecimal getBigDecimalField() {\n+        return bigDecimalField;\n+    }\n+\n+    public void setBigDecimalField(BigDecimal bigDecimalField) {\n+        this.bigDecimalField = bigDecimalField;\n+    }\n+\n+    public BigInteger getBigIntegerField() {\n+        return bigIntegerField;\n+    }\n+\n+    public void setBigIntegerField(BigInteger bigIntegerField) {\n+        this.bigIntegerField = bigIntegerField;\n+    }\n+\n+    public byte[] getByteLob() {\n+        return byteLob;\n+    }\n+\n+    public void setByteLob(byte[] byteLob) {\n+        this.byteLob = byteLob;\n+    }\n+\n+    public Calendar getCalendarField() {\n+        return calendarField;\n+    }\n+\n+    public void setCalendarField(Calendar calendarField) {\n+        this.calendarField = calendarField;\n+    }\n+\n+    public char[] getCharLob() {\n+        return charLob;\n+    }\n+\n+    public void setCharLob(char[] charLob) {\n+        this.charLob = charLob;\n+    }\n+\n+    public EnumType getEnumField() {\n+        return enumField;\n+    }\n+\n+    public void setEnumField(EnumType enumField) {\n+        this.enumField = enumField;\n+    }\n+\n+    public Serializable getSerializableField() {\n+        return serializableField;\n+    }\n+\n+    public void setSerializableField(Serializable serializableField) {\n+        this.serializableField = serializableField;\n+    }\n+\n+    public java.sql.Date getSqlDateField() {\n+        return sqlDateField;\n+    }\n+\n+    public void setSqlDateField(java.sql.Date sqlDateField) {\n+        this.sqlDateField = sqlDateField;\n+    }\n+\n+    public java.sql.Time getSqlTimeField() {\n+        return sqlTimeField;\n+    }\n+\n+    public void setSqlTimeField(java.sql.Time sqlTimeField) {\n+        this.sqlTimeField = sqlTimeField;\n+    }\n+\n+    public java.sql.Timestamp getSqlTimestampField() {\n+        return sqlTimestampField;\n+    }\n+\n+    public void setSqlTimestampField(java.sql.Timestamp sqlTimestampField) {\n+        this.sqlTimestampField = sqlTimestampField;\n+    }\n+\n+    public Boolean getWBooleanField() {\n+        return wBooleanField;\n+    }\n+\n+    public void setWBooleanField(Boolean booleanField) {\n+        wBooleanField = booleanField;\n+    }\n+\n+    public Byte getWByteField() {\n+        return wByteField;\n+    }\n+\n+    public void setWByteField(Byte byteField) {\n+        wByteField = byteField;\n+    }\n+\n+    public Byte[] getWByteLob() {\n+        return wByteLob;\n+    }\n+\n+    public void setWByteLob(Byte[] byteLob) {\n+        wByteLob = byteLob;\n+    }\n+\n+    public Character getWCharacterField() {\n+        return wCharacterField;\n+    }\n+\n+    public void setWCharacterField(Character characterField) {\n+        wCharacterField = characterField;\n+    }\n+\n+    public Character[] getWCharacterLob() {\n+        return wCharacterLob;\n+    }\n+\n+    public void setWCharacterLob(Character[] characterLob) {\n+        wCharacterLob = characterLob;\n+    }\n+\n+    public Double getWDoubleField() {\n+        return wDoubleField;\n+    }\n+\n+    public void setWDoubleField(Double doubleField) {\n+        wDoubleField = doubleField;\n+    }\n+\n+    public Float getWFloatField() {\n+        return wFloatField;\n+    }\n+\n+    public void setWFloatField(Float floatField) {\n+        wFloatField = floatField;\n+    }\n+\n+    public Integer getWIntegerField() {\n+        return wIntegerField;\n+    }\n+\n+    public void setWIntegerField(Integer integerField) {\n+        wIntegerField = integerField;\n+    }\n+\n+    public Long getWLongField() {\n+        return wLongField;\n+    }\n+\n+    public void setWLongField(Long longField) {\n+        wLongField = longField;\n+    }\n+\n+    public Short getWShortField() {\n+        return wShortField;\n+    }\n+\n+    public void setWShortField(Short shortField) {\n+        wShortField = shortField;\n+    }\n+\n+    public AllFieldTypes getSelfOneOne() {\n+        return selfOneOne;\n+    }\n+    \n+    public void setSelfOneOne(AllFieldTypes selfOneOne) {\n+        this.selfOneOne = selfOneOne;\n+    }\n+\n+    public List<AllFieldTypes> getSelfOneMany() {\n+        return selfOneMany;\n+    }\n+\n+    public void setSelfOneMany(List<AllFieldTypes> selfOneMany) {\n+        this.selfOneMany = selfOneMany;\n+    }\n+}\n+"},{"sha":"7d835198cf101f74f8281a639e4c2f9b296e4467","filename":"openjpa-xmlstore/src/test/java/org/apache/openjpa/xmlstore/simple/Place.java","status":"added","additions":41,"deletions":0,"changes":41,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-xmlstore/src/test/java/org/apache/openjpa/xmlstore/simple/Place.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-xmlstore/src/test/java/org/apache/openjpa/xmlstore/simple/Place.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-xmlstore/src/test/java/org/apache/openjpa/xmlstore/simple/Place.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.xmlstore.simple;\n+\n+import java.io.Serializable;\n+\n+import javax.persistence.Entity;\n+import javax.persistence.Id;\n+\n+@Entity\n+public class Place implements Serializable {\n+    private static final long serialVersionUID = 1L;\n+    \n+    private String location;\n+\n+    @Id\n+    public String getLocation() {\n+        return location;\n+    }\n+\n+    public void setLocation(String location) {\n+        this.location = location;\n+    }\n+}\n+"},{"sha":"5a6d6b9f35e85e9e5c4149ce173dadd1fb9d69bb","filename":"openjpa-xmlstore/src/test/java/org/apache/openjpa/xmlstore/simple/TestPersistence.java","status":"added","additions":132,"deletions":0,"changes":132,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-xmlstore/src/test/java/org/apache/openjpa/xmlstore/simple/TestPersistence.java","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-xmlstore/src/test/java/org/apache/openjpa/xmlstore/simple/TestPersistence.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-xmlstore/src/test/java/org/apache/openjpa/xmlstore/simple/TestPersistence.java?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -0,0 +1,132 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.    \n+ */\n+package org.apache.openjpa.xmlstore.simple;\n+\n+import javax.persistence.EntityManager;\n+import javax.persistence.EntityTransaction;\n+\n+import org.apache.openjpa.persistence.OpenJPAEntityManager;\n+import org.apache.openjpa.persistence.OpenJPAEntityManagerFactorySPI;\n+import org.apache.openjpa.persistence.test.AbstractPersistenceTestCase;\n+\n+/**\n+ * Simple XMLStore test case to get an EntityManager and perform some basic operations.\n+ */\n+public class TestPersistence extends AbstractPersistenceTestCase {\n+\n+    public void testCreateEntityManager() {\n+        OpenJPAEntityManagerFactorySPI emf = createNamedEMF(\"xmlstore-simple\");\n+        try {\n+            EntityManager em = emf.createEntityManager();\n+\n+            EntityTransaction t = em.getTransaction();\n+            assertNotNull(t);\n+            t.begin();\n+            t.setRollbackOnly();\n+            t.rollback();\n+\n+            // openjpa-facade test\n+            assertTrue(em instanceof OpenJPAEntityManager);\n+            OpenJPAEntityManager ojem = (OpenJPAEntityManager) em;\n+            ojem.getFetchPlan().setMaxFetchDepth(1);\n+            assertEquals(1, ojem.getFetchPlan().getMaxFetchDepth());\n+            em.close();\n+        } finally {\n+            closeEMF(emf);\n+        }\n+    }\n+\n+    public void testQuery() {\n+        OpenJPAEntityManagerFactorySPI emf = createNamedEMF(\"xmlstore-simple\",\n+            CLEAR_TABLES, AllFieldTypes.class);\n+        try {\n+            EntityManager em = emf.createEntityManager();\n+            em.getTransaction().begin();\n+            AllFieldTypes aft = new AllFieldTypes();\n+            aft.setStringField(\"foo\");\n+            aft.setIntField(10);\n+            em.persist(aft);\n+            em.getTransaction().commit();\n+            em.close();\n+\n+            em = emf.createEntityManager();\n+            em.getTransaction().begin();\n+            assertEquals(1, em.createQuery\n+                (\"select x from AllFieldTypes x where x.stringField = 'foo'\").\n+                getResultList().size());\n+            assertEquals(0, em.createQuery\n+                (\"select x from AllFieldTypes x where x.stringField = 'bar'\").\n+                getResultList().size());\n+            assertEquals(1, em.createQuery\n+                (\"select x from AllFieldTypes x where x.intField >= 10\").\n+                getResultList().size());\n+            em.getTransaction().rollback();\n+            em.close();\n+        } finally {\n+            closeEMF(emf);\n+        }\n+    }\n+\n+    public void testNewDeleteNew() {\n+        OpenJPAEntityManagerFactorySPI emf = createNamedEMF(\"xmlstore-simple\",\n+            CLEAR_TABLES, Place.class);\n+        try {\n+            EntityManager em = emf.createEntityManager();\n+\n+            // create new\n+            Place place = new Place();\n+            place.setLocation(\"Lexington\");\n+            assertFalse(em.contains(place));\n+            em.getTransaction().begin();\n+            em.persist(place);\n+            em.getTransaction().commit();\n+            assertTrue(em.contains(place));\n+\n+            // find and verify\n+            place = em.find(Place.class, \"Lexington\");\n+            assertNotNull(place);\n+            assertEquals(\"Lexington\", place.getLocation());\n+\n+            // delete\n+            em.getTransaction().begin();\n+            em.remove(place);\n+            em.getTransaction().commit();\n+            assertFalse(em.contains(place));\n+\n+            // recreate\n+            place = new Place();\n+            place.setLocation(\"Lexington\");\n+            assertFalse(em.contains(place));\n+            em.getTransaction().begin();\n+            em.persist(place);\n+            em.getTransaction().commit();\n+            assertTrue(em.contains(place));\n+\n+            // find and verify\n+            place = em.find(Place.class, \"Lexington\");\n+            assertNotNull(place);\n+            assertEquals(\"Lexington\", place.getLocation());\n+            em.close();\n+        } finally {\n+            closeEMF(emf);\n+        }\n+    }\n+\n+}\n+"},{"sha":"6dda6cbfa83342e7ab7960138ff28b7b5eed5808","filename":"openjpa-xmlstore/src/test/resources/META-INF/persistence.xml","status":"added","additions":46,"deletions":0,"changes":46,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa-xmlstore/src/test/resources/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa-xmlstore/src/test/resources/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-xmlstore/src/test/resources/META-INF/persistence.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -0,0 +1,46 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+ Licensed to the Apache Software Foundation (ASF) under one\n+ or more contributor license agreements.  See the NOTICE file\n+ distributed with this work for additional information\n+ regarding copyright ownership.  The ASF licenses this file\n+ to you under the Apache License, Version 2.0 (the\n+ \"License\"); you may not use this file except in compliance\n+ with the License.  You may obtain a copy of the License at\n+ \n+ http://www.apache.org/licenses/LICENSE-2.0\n+ \n+ Unless required by applicable law or agreed to in writing,\n+ software distributed under the License is distributed on an\n+ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ KIND, either express or implied.  See the License for the\n+ specific language governing permissions and limitations\n+ under the License.   \n+-->\n+<persistence xmlns=\"http://java.sun.com/xml/ns/persistence\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    version=\"2.0\">\n+\n+    <persistence-unit name=\"xmlstore-simple\">\n+        <class>org.apache.openjpa.xmlstore.simple.AllFieldTypes</class>\n+        <class>org.apache.openjpa.xmlstore.simple.Place</class>\n+        <properties>\n+            <property name=\"openjpa.ConnectionURL\"\n+                      value=\"target/openjpa-xmlstore-db\" />\n+            <property name=\"openjpa.BrokerFactory\"\n+                      value=\"org.apache.openjpa.abstractstore.AbstractStoreBrokerFactory\" />\n+            <property name=\"openjpa.abstractstore.AbstractStoreManager\"\n+                      value=\"org.apache.openjpa.xmlstore.XMLStoreManager\" /> \n+            <property name=\"openjpa.LockManager\"\n+                      value=\"org.apache.openjpa.kernel.VersionLockManager\" />\n+            <!--\n+            <property name=\"openjpa.jdbc.SynchronizeMappings\"\n+                value=\"buildSchema\" />\n+            <property name=\"openjpa.jdbc.SynchronizeMappings\"\n+                value=\"builma(ForeignKeys=true)\"/>\n+            -->\n+        </properties>\n+    </persistence-unit>\n+\n+</persistence>\n+"},{"sha":"96d4849032942e2a5e051c19f779065523d80038","filename":"openjpa/pom.xml","status":"modified","additions":37,"deletions":58,"changes":95,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa/pom.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -22,32 +22,38 @@\n     the release plugin.\n -->\n <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+\n     <modelVersion>4.0.0</modelVersion>\n-    <artifactId>openjpa</artifactId>\n-    <packaging>bundle</packaging>\n-    <name>OpenJPA Aggregate Jar</name>\n+\n     <parent>\n         <groupId>org.apache.openjpa</groupId>\n         <artifactId>openjpa-parent</artifactId>\n-        <version>2.0.0</version>\n+        <version>2.0.1</version>\n     </parent>\n \n+    <artifactId>openjpa</artifactId>\n+    <packaging>bundle</packaging>\n+    <name>OpenJPA Aggregate Jar</name>\n+\n     <build>\n         <plugins>\n-            <!--\n-                 Need to disable source plugin here, as it overwrites the shade\n-                 plugin created sources jar.\n-            -->\n+            <!-- disable creating javadoc for this module -->\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-javadoc-plugin</artifactId>\n+                <configuration>\n+                    <skip>true</skip>\n+                </configuration>\n+            </plugin>\n+            <!-- disable creating source jars for this module -->\n             <plugin>\n                 <groupId>org.apache.maven.plugins</groupId>\n                 <artifactId>maven-source-plugin</artifactId>\n-                <executions>\n-                    <execution>\n-                        <id>attach-sources</id>\n-                        <phase>none</phase> \n-                    </execution>\n-                </executions>\n+                <configuration>\n+                    <attach>false</attach>\n+                </configuration>\n             </plugin>\n+\n             <!-- Create our aggregate JAR -->\n             <plugin>\n                 <groupId>org.apache.maven.plugins</groupId>\n@@ -86,61 +92,34 @@\n                                  org.apache.openjpa.kernel.exps.ExpressionParser\n                                 -->\n                                 <transformer implementation=\"org.apache.maven.plugins.shade.resource.ServicesResourceTransformer\" />\n-                                <!-- Need to add some MANIFEST.MF metadata -->\n-                                <transformer implementation=\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\">\n-                                    <manifestEntries>\n-                                        <Main-Class>org.apache.openjpa.conf.OpenJPAVersion</Main-Class>\n-                                        <Premain-Class>org.apache.openjpa.enhance.PCEnhancerAgent</Premain-Class>\n-                                        <Agent-Class>org.apache.openjpa.enhance.InstrumentationFactory</Agent-Class>\n-                                        <Can-Redefine-Classes>true</Can-Redefine-Classes>\n-                                        <Can-Retransform-Classes>true</Can-Retransform-Classes>\n-                                        <Implementation-Title>Apache OpenJPA Aggregate JAR</Implementation-Title>\n-                                        <Specification-Title>JSR-317 Java Persistence</Specification-Title>\n-                                        <Specification-Vendor>Sun Microsystems, Inc.</Specification-Vendor>\n-                                        <Specification-Version>2.0</Specification-Version>\n-                                    </manifestEntries>\n-                                </transformer>\n                             </transformers>\n                         </configuration>\n                     </execution>\n                 </executions>\n             </plugin>\n \n-            <!-- extract the shaded jar so a bundle can be created -->\n-            <plugin>\n-                <groupId>org.apache.maven.plugins</groupId>\n-                <artifactId>maven-antrun-plugin</artifactId>\n-                <executions>\n-                    <execution>\n-                        <phase>package</phase>\n-                        <goals>\n-                            <goal>run</goal>\n-                        </goals>\n-                        <configuration>\n-                            <tasks>\n-                                <unzip src=\"${project.build.directory}/${pom.artifactId}-${pom.version}.jar\" dest=\"${project.build.directory}/classes\" />\n-                            </tasks>\n-                        </configuration>\n-                    </execution>\n-                </executions>\n-            </plugin>\n-\n             <!-- create an OSGi bundle -->\n             <plugin>\n                 <groupId>org.apache.felix</groupId>\n                 <artifactId>maven-bundle-plugin</artifactId>\n                 <extensions>true</extensions>\n                 <configuration>\n                     <instructions>\n+                        <!-- OpenJPA metadata -->\n+                        <Main-Class>org.apache.openjpa.conf.OpenJPAVersion</Main-Class>\n+                        <Premain-Class>org.apache.openjpa.enhance.PCEnhancerAgent</Premain-Class>\n+                        <Agent-Class>org.apache.openjpa.enhance.InstrumentationFactory</Agent-Class>\n+                        <Can-Redefine-Classes>true</Can-Redefine-Classes>\n+                        <Can-Retransform-Classes>true</Can-Retransform-Classes>\n+                        <Specification-Title>JSR-317 Java Persistence</Specification-Title>\n+                        <Specification-Vendor>Sun Microsystems, Inc.</Specification-Vendor>\n+                        <Specification-Version>2.0</Specification-Version>\n                         <!-- OSGi Bundle Metadata -->\n                         <Bundle-DocURL>${project.url}</Bundle-DocURL>\n                         <Bundle-Activator>org.apache.openjpa.persistence.osgi.PersistenceActivator</Bundle-Activator>\n                         <Private-Package />\n                         <Export-Package>org.apache.openjpa.*;version=${project.version}</Export-Package>\n-                        <Import-Package>com.ibm.*;resolution:=optional,org.postgresql.*;resolution:=optional,org.apache.tools.ant.*;resolution:=optional,org.apache.log4j.*;resolution:=optional,javax.activation.xa*;resolution:=optional,javax.jms.*;version=\"[1.1.0,1.2)\";resolution:=optional,javax.transaction.*;version=\"[1.1.0,1.2)\";resolution:=optional,javax.validation.*;version=\"[1.0.0,1.1)\";resolution:=optional,javax.xml.bind.*;resolution:=optional,serp.*;resolution:=optional,javax.persistence.*;version=\"[2.0.0,2.1)\",*</Import-Package>\n-                        <!-- Eclipse metadata -->\n-                        <Eclipse-Autostart>false</Eclipse-Autostart>\n-                        <Bundle-ClassPath>.</Bundle-ClassPath>\n+                        <Import-Package>com.ibm.*;resolution:=optional,org.postgresql.*;resolution:=optional,org.apache.tools.ant.*;resolution:=optional,org.apache.log4j.*;resolution:=optional,org.slf4j.*;resolution:=optional,org.apache.commons.logging.*;resolution:=optional,javax.activation.xa*;resolution:=optional,javax.jms.*;version=\"[1.1.0,1.2)\";resolution:=optional,javax.transaction.*;version=\"[1.1.0,1.2)\";resolution:=optional,javax.validation.*;version=\"[1.0.0,1.1)\";resolution:=optional,javax.xml.bind.*;resolution:=optional,serp.*;resolution:=optional,javax.persistence.*;version=\"[1.1.0,2.1)\",*</Import-Package>\n                     </instructions>\n                 </configuration>\n             </plugin>\n@@ -152,17 +131,17 @@\n         <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa-lib</artifactId>\n-            <version>${pom.version}</version>\n+            <version>${project.version}</version>\n         </dependency>\n         <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa-kernel</artifactId>\n-            <version>${pom.version}</version>\n+            <version>${project.version}</version>\n         </dependency>\n         <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa-jdbc</artifactId>\n-            <version>${pom.version}</version>\n+            <version>${project.version}</version>\n             <!-- \n                  Need to exclude jaxb, so the following will not get included\n                  as compile depends in the aggregate JAR by the shade plugin:\n@@ -219,22 +198,22 @@\n         <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa-persistence</artifactId>\n-            <version>${pom.version}</version>\n+            <version>${project.version}</version>\n         </dependency>\n         <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa-persistence-jdbc</artifactId>\n-            <version>${pom.version}</version>\n+            <version>${project.version}</version>\n         </dependency>\n         <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa-xmlstore</artifactId>\n-            <version>${pom.version}</version>\n+            <version>${project.version}</version>\n         </dependency>\n         <dependency>\n             <groupId>org.apache.openjpa</groupId>\n             <artifactId>openjpa-slice</artifactId>\n-            <version>${pom.version}</version>\n+            <version>${project.version}</version>\n         </dependency>\n     </dependencies>\n </project>"},{"sha":"a2e20fbd216e1abc87a1a500f29fb1be908042e3","filename":"openjpa/src/main/appended-resources/META-INF/LICENSE.vm","status":"modified","additions":229,"deletions":67,"changes":296,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa/src/main/appended-resources/META-INF/LICENSE.vm","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa/src/main/appended-resources/META-INF/LICENSE.vm","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa/src/main/appended-resources/META-INF/LICENSE.vm?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -1,3 +1,22 @@\n+##\n+## Licensed to the Apache Software Foundation (ASF) under one\n+## or more contributor license agreements.  See the NOTICE file\n+## distributed with this work for additional information\n+## regarding copyright ownership.  The ASF licenses this file\n+## to you under the Apache License, Version 2.0 (the\n+## \"License\"); you may not use this file except in compliance\n+## with the License.  You may obtain a copy of the License at\n+##\n+##  http://www.apache.org/licenses/LICENSE-2.0\n+##\n+## Unless required by applicable law or agreed to in writing,\n+## software distributed under the License is distributed on an\n+## \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+## KIND, either express or implied.  See the License for the\n+## specific language governing permissions and limitations\n+## under the License.\n+##\n+\n \n ======================================\n   LICENSES FOR INCLUDED DEPENDENCIES\n@@ -12,134 +31,277 @@ and resource files are also released under the ASF license above.\n The exceptions are as follows:\n \n ===========================\n-  orm-xsd.rsrc - included in the openjpa jar, taken from:\n+openjpa-persistence -\n+  orm-xsd.rsrc - CDDL 1.0 - included in the openjpa jar, taken from:\n     http://java.sun.com/xml/ns/persistence/orm_1_0.xsd)\n-  orm_2_0-xsd.rsrc - included in the openjpa jar, taken from:\n+  orm_2_0-xsd.rsrc - CDDL 1.0 - included in the openjpa jar, taken from:\n     http://java.sun.com/xml/ns/persistence/orm_2_0.xsd)\n-  persistence-xsd.rsrc - included in the openjpa jar, taken from:\n+  persistence-xsd.rsrc - CDDL 1.0 - included in the openjpa jar, taken from:\n     http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd)\n-  persistence_2_0-xsd.rsrc - included in the openjpa jar, taken from:\n-    http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd)\n-  websphere-uow-api.jar - this jar file contains WebSphere proprietary\n-    API code which is licensed for use when compiling OpenJPA. The\n-    jar is not distributed with OpenJPA and is only included with the\n-    source archive in order to resolve compilation dependencies. \n+  persistence_2_0-xsd.rsrc - CDDL 1.0 - included in the openjpa jar, taken from:\n+    http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd). \n ===========================\n \n COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL) Version 1.0\n \n 1. Definitions.\n \n-1.1. Contributor means each individual or entity that creates or contributes to the creation of Modifications.\n+   1.1. Contributor. means each individual or entity that creates or contributes to the creation of Modifications.\n \n-1.2. Contributor Version means the combination of the Original Software, prior Modifications used by a Contributor (if any), and the Modifications made by that particular Contributor.\n+   1.2. Contributor Version. means the combination of the Original Software, prior Modifications used by a Contributor (if any), and the Modifications made by that particular Contributor.\n \n-1.3. Covered Software means (a) the Original Software, or (b) Modifications, or (c) the combination of files containing Original Software with files containing Modifications, in each case including portions thereof.\n+   1.3. Covered Software. means (a) the Original Software, or (b) Modifications, or (c) the combination of files containing Original Software with files containing Modifications, in each case including portions thereof.\n \n-1.4. Executable means the Covered Software in any form other than Source Code.\n+   1.4. Executable. means the Covered Software in any form other than Source Code.\n \n-1.5. Initial Developer means the individual or entity that first makes Original Software available under this License.\n+   1.5. Initial Developer. means the individual or entity that first makes Original Software available under this License.\n \n-1.6. Larger Work means a work which combines Covered Software or portions thereof with code not governed by the terms of this License.\n+   1.6. Larger Work. means a work which combines Covered Software or portions thereof with code not governed by the terms of this License.\n \n-1.7. License means this document.\n+   1.7. License. means this document.\n \n-1.8. Licensable means having the right to grant, to the maximum extent possible, whether at the time of the initial grant or subsequently acquired, any and all of the rights conveyed herein.\n+   1.8. Licensable. means having the right to grant, to the maximum extent possible, whether at the time of the initial grant or subsequently acquired, any and all of the rights conveyed herein.\n \n-1.9. Modifications means the Source Code and Executable form of any of the following:\n+   1.9. Modifications. means the Source Code and Executable form of any of the following:\n \n-A. Any file that results from an addition to, deletion from or modification of the contents of a file containing Original Software or previous Modifications;\n+        A. Any file that results from an addition to, deletion from or modification of the contents of a file containing Original Software or previous Modifications;\n \n-B. Any new file that contains any part of the Original Software or previous Modification; or\n+        B. Any new file that contains any part of the Original Software or previous Modification; or\n \n-C. Any new file that is contributed or otherwise made available under the terms of this License.\n+        C. Any new file that is contributed or otherwise made available under the terms of this License.\n \n-1.10. Original Software means the Source Code and Executable form of computer software code that is originally released under this License.\n+   1.10. Original Software. means the Source Code and Executable form of computer software code that is originally released under this License.\n \n-1.11. Patent Claims means any patent claim(s), now owned or hereafter acquired, including without limitation, method, process, and apparatus claims, in any patent Licensable by grantor.\n+   1.11. Patent Claims. means any patent claim(s), now owned or hereafter acquired, including without limitation, method, process, and apparatus claims, in any patent Licensable by grantor.\n \n-1.12. Source Code means (a) the common form of computer software code in which modifications are made and (b) associated documentation included in or with such code.\n+   1.12. Source Code. means (a) the common form of computer software code in which modifications are made and (b) associated documentation included in or with such code.\n \n-1.13. You (or Your) means an individual or a legal entity exercising rights under, and complying with all of the terms of, this License. For legal entities, You includes any entity which controls, is controlled by, or is under common control with You. For purposes of this definition, control means (a)�the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (b)�ownership of more than fifty percent (50%) of the outstanding shares or beneficial ownership of such entity.\n+   1.13. You. (or .Your.) means an individual or a legal entity exercising rights under, and complying with all of the terms of, this License. For legal entities, .You. includes any entity which controls, is controlled by, or is under common control with You. For purposes of this definition, .control. means (a) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (b) ownership of more than fifty percent (50%) of the outstanding shares or beneficial ownership of such entity.\n \n 2. License Grants.\n \n-2.1. The Initial Developer Grant.\n-Conditioned upon Your compliance with Section 3.1 below and subject to third party intellectual property claims, the Initial Developer hereby grants You a world-wide, royalty-free, non-exclusive license:\n-(a) under intellectual property rights (other than patent or trademark) Licensable by Initial Developer, to use, reproduce, modify, display, perform, sublicense and distribute the Original Software (or portions thereof), with or without Modifications, and/or as part of a Larger Work; and\n-(b) under Patent Claims infringed by the making, using or selling of Original Software, to make, have made, use, practice, sell, and offer for sale, and/or otherwise dispose of the Original Software (or portions thereof).\n-(c) The licenses granted in Sections�2.1(a) and (b) are effective on the date Initial Developer first distributes or otherwise makes the Original Software available to a third party under the terms of this License.\n-(d) Notwithstanding Section�2.1(b) above, no patent license is granted: (1)�for code that You delete from the Original Software, or (2)�for infringements caused by: (i)�the modification of the Original Software, or (ii)�the combination of the Original Software with other software or devices.\n+      2.1. The Initial Developer Grant.\n \n-2.2. Contributor Grant.\n-Conditioned upon Your compliance with Section 3.1 below and subject to third party intellectual property claims, each Contributor hereby grants You a world-wide, royalty-free, non-exclusive license:\n-(a) under intellectual property rights (other than patent or trademark) Licensable by Contributor to use, reproduce, modify, display, perform, sublicense and distribute the Modifications created by such Contributor (or portions thereof), either on an unmodified basis, with other Modifications, as Covered Software and/or as part of a Larger Work; and\n-(b) under Patent Claims infringed by the making, using, or selling of Modifications made by that Contributor either alone and/or in combination with its Contributor Version (or portions of such combination), to make, use, sell, offer for sale, have made, and/or otherwise dispose of: (1)�Modifications made by that Contributor (or portions thereof); and (2)�the combination of Modifications made by that Contributor with its Contributor Version (or portions of such combination).\n-(c) The licenses granted in Sections�2.2(a) and 2.2(b) are effective on the date Contributor first distributes or otherwise makes the Modifications available to a third party.\n-(d) Notwithstanding Section�2.2(b) above, no patent license is granted: (1)�for any code that Contributor has deleted from the Contributor Version; (2)�for infringements caused by: (i)�third party modifications of Contributor Version, or (ii)�the combination of Modifications made by that Contributor with other software (except as part of the Contributor Version) or other devices; or (3)�under Patent Claims infringed by Covered Software in the absence of Modifications made by that Contributor.\n+      Conditioned upon Your compliance with Section 3.1 below and subject to third party intellectual property claims, the Initial Developer hereby grants You a world-wide, royalty-free, non-exclusive license:\n \n-3. Distribution Obligations.\n+         (a) under intellectual property rights (other than patent or trademark) Licensable by Initial Developer, to use, reproduce, modify, display, perform, sublicense and distribute the Original Software (or portions thereof), with or without Modifications, and/or as part of a Larger Work; and\n \n-3.1. Availability of Source Code.\n+         (b) under Patent Claims infringed by the making, using or selling of Original Software, to make, have made, use, practice, sell, and offer for sale, and/or otherwise dispose of the Original Software (or portions thereof).\n \n-Any Covered Software that You distribute or otherwise make available in Executable form must also be made available in Source Code form and that Source Code form must be distributed only under the terms of this License. You must include a copy of this License with every copy of the Source Code form of the Covered Software You distribute or otherwise make available. You must inform recipients of any such Covered Software in Executable form as to how they can obtain such Covered Software in Source Code form in a reasonable manner on or through a medium customarily used for software exchange.\n+        (c) The licenses granted in Sections 2.1(a) and (b) are effective on the date Initial Developer first distributes or otherwise makes the Original Software available to a third party under the terms of this License.\n \n-3.2. Modifications.\n+        (d) Notwithstanding Section 2.1(b) above, no patent license is granted: (1) for code that You delete from the Original Software, or (2) for infringements caused by: (i) the modification of the Original Software, or (ii) the combination of the Original Software with other software or devices.\n \n-The Modifications that You create or to which You contribute are governed by the terms of this License. You represent that You believe Your Modifications are Your original creation(s) and/or You have sufficient rights to grant the rights conveyed by this License.\n+    2.2. Contributor Grant.\n \n-3.3. Required Notices.\n-You must include a notice in each of Your Modifications that identifies You as the Contributor of the Modification. You may not remove or alter any copyright, patent or trademark notices contained within the Covered Software, or any notices of licensing or any descriptive text giving attribution to any Contributor or the Initial Developer.\n+    Conditioned upon Your compliance with Section 3.1 below and subject to third party intellectual property claims, each Contributor hereby grants You a world-wide, royalty-free, non-exclusive license:\n \n-3.4. Application of Additional Terms.\n-You may not offer or impose any terms on any Covered Software in Source Code form that alters or restricts the applicable version of this License or the recipients rights hereunder. You may choose to offer, and to charge a fee for, warranty, support, indemnity or liability obligations to one or more recipients of Covered Software. However, you may do so only on Your own behalf, and not on behalf of the Initial Developer or any Contributor. You must make it absolutely clear that any such warranty, support, indemnity or liability obligation is offered by You alone, and You hereby agree to indemnify the Initial Developer and every Contributor for any liability incurred by the Initial Developer or such Contributor as a result of warranty, support, indemnity or liability terms You offer.\n+        (a) under intellectual property rights (other than patent or trademark) Licensable by Contributor to use, reproduce, modify, display, perform, sublicense and distribute the Modifications created by such Contributor (or portions thereof), either on an unmodified basis, with other Modifications, as Covered Software and/or as part of a Larger Work; and\n \n-3.5. Distribution of Executable Versions.\n-You may distribute the Executable form of the Covered Software under the terms of this License or under the terms of a license of Your choice, which may contain terms different from this License, provided that You are in compliance with the terms of this License and that the license for the Executable form does not attempt to limit or alter the recipients rights in the Source Code form from the rights set forth in this License. If You distribute the Covered Software in Executable form under a different license, You must make it absolutely clear that any terms which differ from this License are offered by You alone, not by the Initial Developer or Contributor. You hereby agree to indemnify the Initial Developer and every Contributor for any liability incurred by the Initial Developer or such Contributor as a result of any such terms You offer.\n+        (b) under Patent Claims infringed by the making, using, or selling of Modifications made by that Contributor either alone and/or in combination with its Contributor Version (or portions of such combination), to make, use, sell, offer for sale, have made, and/or otherwise dispose of: (1) Modifications made by that Contributor (or portions thereof); and (2) the combination of Modifications made by that Contributor with its Contributor Version (or portions of such combination).\n \n-3.6. Larger Works.\n-You may create a Larger Work by combining Covered Software with other code not governed by the terms of this License and distribute the Larger Work as a single product. In such a case, You must make sure the requirements of this License are fulfilled for the Covered Software.\n+        (c) The licenses granted in Sections 2.2(a) and 2.2(b) are effective on the date Contributor first distributes or otherwise makes the Modifications available to a third party.\n \n-4. Versions of the License.\n+        (d) Notwithstanding Section 2.2(b) above, no patent license is granted: (1) for any code that Contributor has deleted from the Contributor Version; (2) for infringements caused by: (i) third party modifications of Contributor Version, or (ii) the combination of Modifications made by that Contributor with other software (except as part of the Contributor Version) or other devices; or (3) under Patent Claims infringed by Covered Software in the absence of Modifications made by that Contributor.\n+\n+3. Distribution Obligations.\n+\n+      3.1. Availability of Source Code.\n+      Any Covered Software that You distribute or otherwise make available in Executable form must also be made available in Source Code form and that Source Code form must be distributed only under the terms of this License. You must include a copy of this License with every copy of the Source Code form of the Covered Software You distribute or otherwise make available. You must inform recipients of any such Covered Software in Executable form as to how they can obtain such Covered Software in Source Code form in a reasonable manner on or through a medium customarily used for software exchange.\n \n-4.1. New Versions.\n-Sun Microsystems, Inc. is the initial license steward and may publish revised and/or new versions of this License from time to time. Each version will be given a distinguishing version number. Except as provided in Section 4.3, no one other than the license steward has the right to modify this License.\n+      3.2. Modifications.\n+      The Modifications that You create or to which You contribute are governed by the terms of this License. You represent that You believe Your Modifications are Your original creation(s) and/or You have sufficient rights to grant the rights conveyed by this License.\n \n-4.2. Effect of New Versions.\n+      3.3. Required Notices.\n+      You must include a notice in each of Your Modifications that identifies You as the Contributor of the Modification. You may not remove or alter any copyright, patent or trademark notices contained within the Covered Software, or any notices of licensing or any descriptive text giving attribution to any Contributor or the Initial Developer.\n+\n+      3.4. Application of Additional Terms.\n+      You may not offer or impose any terms on any Covered Software in Source Code form that alters or restricts the applicable version of this License or the recipients. rights hereunder. You may choose to offer, and to charge a fee for, warranty, support, indemnity or liability obligations to one or more recipients of Covered Software. However, you may do so only on Your own behalf, and not on behalf of the Initial Developer or any Contributor. You must make it absolutely clear that any such warranty, support, indemnity or liability obligation is offered by You alone, and You hereby agree to indemnify the Initial Developer and every Contributor for any liability incurred by the Initial Developer or such Contributor as a result of warranty, support, indemnity or liability terms You offer.\n+\n+      3.5. Distribution of Executable Versions.\n+      You may distribute the Executable form of the Covered Software under the terms of this License or under the terms of a license of Your choice, which may contain terms different from this License, provided that You are in compliance with the terms of this License and that the license for the Executable form does not attempt to limit or alter the recipient.s rights in the Source Code form from the rights set forth in this License. If You distribute the Covered Software in Executable form under a different license, You must make it absolutely clear that any terms which differ from this License are offered by You alone, not by the Initial Developer or Contributor. You hereby agree to indemnify the Initial Developer and every Contributor for any liability incurred by the Initial Developer or such Contributor as a result of any such terms You offer.\n+\n+      3.6. Larger Works.\n+      You may create a Larger Work by combining Covered Software with other code not governed by the terms of this License and distribute the Larger Work as a single product. In such a case, You must make sure the requirements of this License are fulfilled for the Covered Software.\n+\n+4. Versions of the License.\n \n-You may always continue to use, distribute or otherwise make the Covered Software available under the terms of the version of the License under which You originally received the Covered Software. If the Initial Developer includes a notice in the Original Software prohibiting it from being distributed or otherwise made available under any subsequent version of the License, You must distribute and make the Covered Software available under the terms of the version of the License under which You originally received the Covered Software. Otherwise, You may also choose to use, distribute or otherwise make the Covered Software available under the terms of any subsequent version of the License published by the license steward.\n-4.3. Modified Versions.\n+      4.1. New Versions.\n+      Sun Microsystems, Inc. is the initial license steward and may publish revised and/or new versions of this License from time to time. Each version will be given a distinguishing version number. Except as provided in Section 4.3, no one other than the license steward has the right to modify this License.\n \n-When You are an Initial Developer and You want to create a new license for Your Original Software, You may create and use a modified version of this License if You: (a)�rename the license and remove any references to the name of the license steward (except to note that the license differs from this License); and (b)�otherwise make it clear that the license contains terms which differ from this License.\n+      4.2. Effect of New Versions.\n+      You may always continue to use, distribute or otherwise make the Covered Software available under the terms of the version of the License under which You originally received the Covered Software. If the Initial Developer includes a notice in the Original Software prohibiting it from being distributed or otherwise made available under any subsequent version of the License, You must distribute and make the Covered Software available under the terms of the version of the License under which You originally received the Covered Software. Otherwise, You may also choose to use, distribute or otherwise make the Covered Software available under the terms of any subsequent version of the License published by the license steward.\n+\n+      4.3. Modified Versions.\n+      When You are an Initial Developer and You want to create a new license for Your Original Software, You may create and use a modified version of this License if You: (a) rename the license and remove any references to the name of the license steward (except to note that the license differs from this License); and (b) otherwise make it clear that the license contains terms which differ from this License.\n \n 5. DISCLAIMER OF WARRANTY.\n \n-COVERED SOFTWARE IS PROVIDED UNDER THIS LICENSE ON AN AS IS BASIS, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, WITHOUT LIMITATION, WARRANTIES THAT THE COVERED SOFTWARE IS FREE OF DEFECTS, MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE OR NON-INFRINGING. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE COVERED SOFTWARE IS WITH YOU. SHOULD ANY COVERED SOFTWARE PROVE DEFECTIVE IN ANY RESPECT, YOU (NOT THE INITIAL DEVELOPER OR ANY OTHER CONTRIBUTOR) ASSUME THE COST OF ANY NECESSARY SERVICING, REPAIR OR CORRECTION. THIS DISCLAIMER OF WARRANTY CONSTITUTES AN ESSENTIAL PART OF THIS LICENSE. NO USE OF ANY COVERED SOFTWARE IS AUTHORIZED HEREUNDER EXCEPT UNDER THIS DISCLAIMER.\n+   COVERED SOFTWARE IS PROVIDED UNDER THIS LICENSE ON AN .AS IS. BASIS, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, WITHOUT LIMITATION, WARRANTIES THAT THE COVERED SOFTWARE IS FREE OF DEFECTS, MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE OR NON-INFRINGING. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE COVERED SOFTWARE IS WITH YOU. SHOULD ANY COVERED SOFTWARE PROVE DEFECTIVE IN ANY RESPECT, YOU (NOT THE INITIAL DEVELOPER OR ANY OTHER CONTRIBUTOR) ASSUME THE COST OF ANY NECESSARY SERVICING, REPAIR OR CORRECTION. THIS DISCLAIMER OF WARRANTY CONSTITUTES AN ESSENTIAL PART OF THIS LICENSE. NO USE OF ANY COVERED SOFTWARE IS AUTHORIZED HEREUNDER EXCEPT UNDER THIS DISCLAIMER.\n \n 6. TERMINATION.\n \n-6.1. This License and the rights granted hereunder will terminate automatically if You fail to comply with terms herein and fail to cure such breach within 30 days of becoming aware of the breach. Provisions which, by their nature, must remain in effect beyond the termination of this License shall survive.\n+      6.1. This License and the rights granted hereunder will terminate automatically if You fail to comply with terms herein and fail to cure such breach within 30 days of becoming aware of the breach. Provisions which, by their nature, must remain in effect beyond the termination of this License shall survive.\n \n-6.2. If You assert a patent infringement claim (excluding declaratory judgment actions) against Initial Developer or a Contributor (the Initial Developer or Contributor against whom You assert such claim is referred to as Participant) alleging that the Participant Software (meaning the Contributor Version where the Participant is a Contributor or the Original Software where the Participant is the Initial Developer) directly or indirectly infringes any patent, then any and all rights granted directly or indirectly to You by such Participant, the Initial Developer (if the Initial Developer is not the Participant) and all Contributors under Sections�2.1 and/or 2.2 of this License shall, upon 60 days notice from Participant terminate prospectively and automatically at the expiration of such 60 day notice period, unless if within such 60 day period You withdraw Your claim with respect to the Participant Software against such Participant either unilaterally or pursuant to a written agreement with Participant.\n+      6.2. If You assert a patent infringement claim (excluding declaratory judgment actions) against Initial Developer or a Contributor (the Initial Developer or Contributor against whom You assert such claim is referred to as .Participant.) alleging that the Participant Software (meaning the Contributor Version where the Participant is a Contributor or the Original Software where the Participant is the Initial Developer) directly or indirectly infringes any patent, then any and all rights granted directly or indirectly to You by such Participant, the Initial Developer (if the Initial Developer is not the Participant) and all Contributors under Sections 2.1 and/or 2.2 of this License shall, upon 60 days notice from Participant terminate prospectively and automatically at the expiration of such 60 day notice period, unless if within such 60 day period You withdraw Your claim with respect to the Participant Software against such Participant either unilaterally or pursuant to a written agreement with Participant.\n \n-6.3. In the event of termination under Sections�6.1 or 6.2 above, all end user licenses that have been validly granted by You or any distributor hereunder prior to termination (excluding licenses granted to You by any distributor) shall survive termination.\n+      6.3. In the event of termination under Sections 6.1 or 6.2 above, all end user licenses that have been validly granted by You or any distributor hereunder prior to termination (excluding licenses granted to You by any distributor) shall survive termination.\n \n 7. LIMITATION OF LIABILITY.\n \n-UNDER NO CIRCUMSTANCES AND UNDER NO LEGAL THEORY, WHETHER TORT (INCLUDING NEGLIGENCE), CONTRACT, OR OTHERWISE, SHALL YOU, THE INITIAL DEVELOPER, ANY OTHER CONTRIBUTOR, OR ANY DISTRIBUTOR OF COVERED SOFTWARE, OR ANY SUPPLIER OF ANY OF SUCH PARTIES, BE LIABLE TO ANY PERSON FOR ANY INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES OF ANY CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOST PROFITS, LOSS OF GOODWILL, WORK STOPPAGE, COMPUTER FAILURE OR MALFUNCTION, OR ANY AND ALL OTHER COMMERCIAL DAMAGES OR LOSSES, EVEN IF SUCH PARTY SHALL HAVE BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES. THIS LIMITATION OF LIABILITY SHALL NOT APPLY TO LIABILITY FOR DEATH OR PERSONAL INJURY RESULTING FROM SUCH PARTYS NEGLIGENCE TO THE EXTENT APPLICABLE LAW PROHIBITS SUCH LIMITATION. SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL OR CONSEQUENTIAL DAMAGES, SO THIS EXCLUSION AND LIMITATION MAY NOT APPLY TO YOU.\n+   UNDER NO CIRCUMSTANCES AND UNDER NO LEGAL THEORY, WHETHER TORT (INCLUDING NEGLIGENCE), CONTRACT, OR OTHERWISE, SHALL YOU, THE INITIAL DEVELOPER, ANY OTHER CONTRIBUTOR, OR ANY DISTRIBUTOR OF COVERED SOFTWARE, OR ANY SUPPLIER OF ANY OF SUCH PARTIES, BE LIABLE TO ANY PERSON FOR ANY INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES OF ANY CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOST PROFITS, LOSS OF GOODWILL, WORK STOPPAGE, COMPUTER FAILURE OR MALFUNCTION, OR ANY AND ALL OTHER COMMERCIAL DAMAGES OR LOSSES, EVEN IF SUCH PARTY SHALL HAVE BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES. THIS LIMITATION OF LIABILITY SHALL NOT APPLY TO LIABILITY FOR DEATH OR PERSONAL INJURY RESULTING FROM SUCH PARTY.S NEGLIGENCE TO THE EXTENT APPLICABLE LAW PROHIBITS SUCH LIMITATION. SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OR LIMITATION OF INCIDENTAL OR CONSEQUENTIAL DAMAGES, SO THIS EXCLUSION AND LIMITATION MAY NOT APPLY TO YOU.\n \n 8. U.S. GOVERNMENT END USERS.\n \n-The Covered Software is a commercial item, as that term is defined in 48�C.F.R.�2.101 (Oct. 1995), consisting of commercial computer software (as that term is defined at 48 C.F.R. �252.227-7014(a)(1)) and commercial computer software documentation as such terms are used in 48�C.F.R.�12.212 (Sept. 1995). Consistent with 48 C.F.R. 12.212 and 48 C.F.R. 227.7202-1 through 227.7202-4 (June 1995), all U.S. Government End Users acquire Covered Software with only those rights set forth herein. This U.S. Government Rights clause is in lieu of, and supersedes, any other FAR, DFAR, or other clause or provision that addresses Government rights in computer software under this License.\n+   The Covered Software is a .commercial item,. as that term is defined in 48 C.F.R. 2.101 (Oct. 1995), consisting of .commercial computer software. (as that term is defined at 48 C.F.R. ? 252.227-7014(a)(1)) and .commercial computer software documentation. as such terms are used in 48 C.F.R. 12.212 (Sept. 1995). Consistent with 48 C.F.R. 12.212 and 48 C.F.R. 227.7202-1 through 227.7202-4 (June 1995), all U.S. Government End Users acquire Covered Software with only those rights set forth herein. This U.S. Government Rights clause is in lieu of, and supersedes, any other FAR, DFAR, or other clause or provision that addresses Government rights in computer software under this License.\n \n 9. MISCELLANEOUS.\n \n-This License represents the complete agreement concerning subject matter hereof. If any provision of this License is held to be unenforceable, such provision shall be reformed only to the extent necessary to make it enforceable. This License shall be governed by the law of the jurisdiction specified in a notice contained within the Original Software (except to the extent applicable law, if any, provides otherwise), excluding such jurisdictions conflict-of-law provisions. Any litigation relating to this License shall be subject to the jurisdiction of the courts located in the jurisdiction and venue specified in a notice contained within the Original Software, with the losing party responsible for costs, including, without limitation, court costs and reasonable attorneys fees and expenses. The application of the United Nations Convention on Contracts for the International Sale of Goods is expressly excluded. Any law or regulation which provides that the language of a contract shall be construed against the drafter shall not apply to this License. You agree that You alone are responsible for compliance with the United States export administration regulations (and the export control laws and regulation of any other countries) when You use, distribute or otherwise make available any Covered Software.\n+   This License represents the complete agreement concerning subject matter hereof. If any provision of this License is held to be unenforceable, such provision shall be reformed only to the extent necessary to make it enforceable. This License shall be governed by the law of the jurisdiction specified in a notice contained within the Original Software (except to the extent applicable law, if any, provides otherwise), excluding such jurisdiction.s conflict-of-law provisions. Any litigation relating to this License shall be subject to the jurisdiction of the courts located in the jurisdiction and venue specified in a notice contained within the Original Software, with the losing party responsible for costs, including, without limitation, court costs and reasonable attorneys. fees and expenses. The application of the United Nations Convention on Contracts for the International Sale of Goods is expressly excluded. Any law or regulation which provides that the language of a contract shall be construed against the drafter shall not apply to this License. You agree that You alone are responsible for compliance with the United States export administration regulations (and the export control laws and regulation of any other countries) when You use, distribute or otherwise make available any Covered Software.\n \n 10. RESPONSIBILITY FOR CLAIMS.\n \n-As between Initial Developer and the Contributors, each party is responsible for claims and damages arising, directly or indirectly, out of its utilization of rights under this License and You agree to work with Initial Developer and Contributors to distribute such responsibility on an equitable basis. Nothing herein is intended or shall be deemed to constitute any admission of liability.\n+   As between Initial Developer and the Contributors, each party is responsible for claims and damages arising, directly or indirectly, out of its utilization of rights under this License and You agree to work with Initial Developer and Contributors to distribute such responsibility on an equitable basis. Nothing herein is intended or shall be deemed to constitute any admission of liability.\n+\n+   NOTICE PURSUANT TO SECTION 9 OF THE COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL)\n+\n+   The code released under the CDDL shall be governed by the laws of the State of California (excluding conflict-of-law provisions). Any litigation relating to this License shall be subject to the jurisdiction of the Federal Courts of the Northern District of California and the state courts of the State of California, with venue lying in Santa Clara County, California.\n+\n+\n+The GNU General Public License (GPL) Version 2, June 1991\n+\n+\n+Copyright (C) 1989, 1991 Free Software Foundation, Inc. 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n+\n+Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.\n+\n+Preamble\n+\n+The licenses for most software are designed to take away your freedom to share and change it. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users. This General Public License applies to most of the Free Software Foundation's software and to any other program whose authors commit to using it. (Some other Free Software Foundation software is covered by the GNU Library General Public License instead.) You can apply it to your programs, too.\n+\n+When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs; and that you know you can do these things.\n+\n+To protect your rights, we need to make restrictions that forbid anyone to deny you these rights or to ask you to surrender the rights. These restrictions translate to certain responsibilities for you if you distribute copies of the software, or if you modify it.\n+\n+For example, if you distribute copies of such a program, whether gratis or for a fee, you must give the recipients all the rights that you have. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights.\n+\n+We protect your rights with two steps: (1) copyright the software, and (2) offer you this license which gives you legal permission to copy, distribute and/or modify the software.\n+\n+Also, for each author's protection and ours, we want to make certain that everyone understands that there is no warranty for this free software. If the software is modified by someone else and passed on, we want its recipients to know that what they have is not the original, so that any problems introduced by others will not reflect on the original authors' reputations.\n+\n+Finally, any free program is threatened constantly by software patents. We wish to avoid the danger that redistributors of a free program will individually obtain patent licenses, in effect making the program proprietary. To prevent this, we have made it clear that any patent must be licensed for everyone's free use or not licensed at all.\n+\n+The precise terms and conditions for copying, distribution and modification follow.\n+\n+\n+TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n+\n+0. This License applies to any program or other work which contains a notice placed by the copyright holder saying it may be distributed under the terms of this General Public License. The \"Program\", below, refers to any such program or work, and a \"work based on the Program\" means either the Program or any derivative work under copyright law: that is to say, a work containing the Program or a portion of it, either verbatim or with modifications and/or translated into another language. (Hereinafter, translation is included without limitation in the term \"modification\".) Each licensee is addressed as \"you\".\n+\n+Activities other than copying, distribution and modification are not covered by this License; they are outside its scope. The act of running the Program is not restricted, and the output from the Program is covered only if its contents constitute a work based on the Program (independent of having been made by running the Program). Whether that is true depends on what the Program does.\n+\n+1. You may copy and distribute verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and give any other recipients of the Program a copy of this License along with the Program.\n+\n+You may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee.\n+\n+2. You may modify your copy or copies of the Program or any portion of it, thus forming a work based on the Program, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions:\n+\n+   a) You must cause the modified files to carry prominent notices stating that you changed the files and the date of any change.\n+\n+   b) You must cause any work that you distribute or publish, that in whole or in part contains or is derived from the Program or any part thereof, to be licensed as a whole at no charge to all third parties under the terms of this License.\n+\n+   c) If the modified program normally reads commands interactively when run, you must cause it, when started running for such interactive use in the most ordinary way, to print or display an announcement including an appropriate copyright notice and a notice that there is no warranty (or else, saying that you provide a warranty) and that users may redistribute the program under these conditions, and telling the user how to view a copy of this License. (Exception: if the Program itself is interactive but does not normally print such an announcement, your work based on the Program is not required to print an announcement.)\n+\n+These requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Program, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Program, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it.\n+\n+Thus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Program.\n+\n+In addition, mere aggregation of another work not based on the Program with the Program (or with a work based on the Program) on a volume of a storage or distribution medium does not bring the other work under the scope of this License.\n+\n+3. You may copy and distribute the Program (or a work based on it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you also do one of the following:\n+\n+   a) Accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or,\n+\n+   b) Accompany it with a written offer, valid for at least three years, to give any third party, for a charge no more than your cost of physically performing source distribution, a complete machine-readable copy of the corresponding source code, to be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or,\n+\n+   c) Accompany it with the information you received as to the offer to distribute corresponding source code. (This alternative is allowed only for noncommercial distribution and only if you received the program in object code or executable form with such an offer, in accord with Subsection b above.)\n+\n+The source code for a work means the preferred form of the work for making modifications to it. For an executable work, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the executable. However, as a special exception, the source code distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable.\n+\n+If distribution of executable or object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place counts as distribution of the source code, even though third parties are not compelled to copy the source along with the object code.\n+\n+4. You may not copy, modify, sublicense, or distribute the Program except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense or distribute the Program is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance.\n+\n+5. You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Program or its derivative works. These actions are prohibited by law if you do not accept this License. Therefore, by modifying or distributing the Program (or any work based on the Program), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Program or works based on it.\n+\n+6. Each time you redistribute the Program (or any work based on the Program), the recipient automatically receives a license from the original licensor to copy, distribute or modify the Program subject to these terms and conditions. You may not impose any further restrictions on the recipients' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties to this License.\n+\n+7. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Program at all. For example, if a patent license would not permit royalty-free redistribution of the Program by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Program.\n+\n+If any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply and the section as a whole is intended to apply in other circumstances.\n+\n+It is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system, which is implemented by public license practices. Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice.\n+\n+This section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License.\n+\n+8. If the distribution and/or use of the Program is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Program under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded. In such case, this License incorporates the limitation as if written in the body of this License.\n+\n+9. The Free Software Foundation may publish revised and/or new versions of the General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.\n+\n+Each version is given a distinguishing version number. If the Program specifies a version number of this License which applies to it and \"any later version\", you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of this License, you may choose any version ever published by the Free Software Foundation.\n+\n+10. If you wish to incorporate parts of the Program into other free programs whose distribution conditions are different, write to the author to ask for permission. For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this. Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally.\n+\n+NO WARRANTY\n+\n+11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n+\n+12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n+\n+END OF TERMS AND CONDITIONS\n+\n+\n+How to Apply These Terms to Your New Programs\n+\n+If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.\n+\n+To do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively convey the exclusion of warranty; and each file should have at least the \"copyright\" line and a pointer to where the full notice is found.\n+\n+   One line to give the program's name and a brief idea of what it does.\n+\n+   Copyright (C)\n+\n+   This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\n+\n+Also add information on how to contact you by electronic and paper mail.\n+\n+If the program is interactive, make it output a short notice like this when it starts in an interactive mode:\n+\n+   Gnomovision version 69, Copyright (C) year name of author\n+   Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details.\n+\n+The hypothetical commands `show w' and `show c' should show the appropriate parts of the General Public License. Of course, the commands you use may be called something other than `show w' and `show c'; they could even be mouse-clicks or menu items--whatever suits your program.\n+\n+You should also get your employer (if you work as a programmer) or your school, if any, to sign a \"copyright disclaimer\" for the program, if necessary. Here is a sample; alter the names:\n+\n+   Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.\n+\n+   signature of Ty Coon, 1 April 1989\n+   Ty Coon, President of Vice\n+\n+This General Public License does not permit incorporating your program into proprietary programs. If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library. If this is what you want to do, use the GNU Library General Public License instead of this License.\n+\n+\n+\"CLASSPATH\" EXCEPTION TO THE GPL VERSION 2\n+\n+Certain source files distributed by Sun Microsystems, Inc. are subject to the following clarification and special exception to the GPL Version 2, but only where Sun has expressly included in the particular source file's header the words\n+\n+\"Sun designates this particular file as subject to the \"Classpath\" exception as provided by Sun in the License file that accompanied this code.\"\n \n-NOTICE PURSUANT TO SECTION 9 OF THE COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL)\n-The GlassFish code released under the CDDL shall be governed by the laws of the State of California (excluding conflict-of-law provisions). Any litigation relating to this License shall be subject to the jurisdiction of the Federal Courts of the Northern District of California and the state courts of the State of California, with venue lying in Santa Clara County, California. \n+Linking this library statically or dynamically with other modules is making a combined work based on this library. Thus, the terms and conditions of the GNU General Public License Version 2 cover the whole combination.\n \n+As a special exception, the copyright holders of this library give you permission to link this library with independent modules to produce an executable, regardless of the license terms of these independent modules, and to copy and distribute the resulting executable under terms of your choice, provided that you also meet, for each linked independent module, the terms and conditions of the license of that module.? An independent module is a module which is not derived from or based on this library.? If you modify this library, you may extend this exception to your version of the library, but you are not obligated to do so.? If you do not wish to do so, delete this exception statement from your version."},{"sha":"dba80e3cb40f0b0a799dc081df80cdc38781115c","filename":"openjpa/src/main/appended-resources/META-INF/NOTICE.vm","status":"modified","additions":18,"deletions":1,"changes":19,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/openjpa/src/main/appended-resources/META-INF/NOTICE.vm","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/openjpa/src/main/appended-resources/META-INF/NOTICE.vm","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa/src/main/appended-resources/META-INF/NOTICE.vm?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -1,5 +1,22 @@\n+##\n+## Licensed to the Apache Software Foundation (ASF) under one\n+## or more contributor license agreements.  See the NOTICE file\n+## distributed with this work for additional information\n+## regarding copyright ownership.  The ASF licenses this file\n+## to you under the Apache License, Version 2.0 (the\n+## \"License\"); you may not use this file except in compliance\n+## with the License.  You may obtain a copy of the License at\n+##\n+##  http://www.apache.org/licenses/LICENSE-2.0\n+##\n+## Unless required by applicable law or agreed to in writing,\n+## software distributed under the License is distributed on an\n+## \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+## KIND, either express or implied.  See the License for the\n+## specific language governing permissions and limitations\n+## under the License.\n+##\n \n-Apache, the Apache feather logo and OpenJPA are trademarks of The Apache Software Foundation.\n \n OpenJPA includes software developed by the SERP project\n Copyright (c) 2002-2006, A. Abram White. All rights reserved."},{"sha":"4293ddf920f83e1fa968149d487b07a83fc4da14","filename":"pom.xml","status":"modified","additions":289,"deletions":463,"changes":752,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/pom.xml?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -7,9 +7,9 @@\n  to you under the Apache License, Version 2.0 (the\n  \"License\"); you may not use this file except in compliance\n  with the License.  You may obtain a copy of the License at\n- \n+\n  http://www.apache.org/licenses/LICENSE-2.0\n- \n+\n  Unless required by applicable law or agreed to in writing,\n  software distributed under the License is distributed on an\n  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@@ -26,25 +26,28 @@\n     <parent>\n       <groupId>org.apache</groupId>\n       <artifactId>apache</artifactId>\n-      <version>6</version>\n+      <version>7</version>\n+      <relativePath />\n     </parent>\n \n     <groupId>org.apache.openjpa</groupId>\n     <artifactId>openjpa-parent</artifactId>\n     <packaging>pom</packaging>\n     <name>OpenJPA Parent POM</name>\n     <description>Apache OpenJPA implementation of JSR-317 JPA 2.0</description>\n+\n     <!--\n         Changing this version needs to also be done in all children poms\n         See: http://jira.codehaus.org/browse/MNG-624\n     -->\n-    <version>2.0.0</version>\n+    <version>2.0.1</version>\n \n     <properties>\n-        <openjpa.version>${pom.version}</openjpa.version>\n+        <openjpa.version>${project.version}</openjpa.version>\n         <openjpa.Log>DefaultLevel=INFO</openjpa.Log>\n         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n-        <checkstyle.config.location>../openjpa-project/checkstyle.xml</checkstyle.config.location>\n+        <checkstyle.config.location>${project.basedir}/../openjpa-project/checkstyle.xml</checkstyle.config.location>\n+        <site.deploy.url>scp://people.apache.org/home/${user.name}/public_html/openjpa/${project.version}/staging-site</site.deploy.url>\n         <!-- the test settings can be overridden my specific profiles -->\n         <test.jvm.maxpermsize>512m</test.jvm.maxpermsize>\n         <test.jvm.maxheapsize>1024m</test.jvm.maxheapsize>\n@@ -91,6 +94,11 @@\n         <url>http://issues.apache.org/jira/browse/OPENJPA</url>\n     </issueManagement>\n \n+    <ciManagement>\n+        <system>Hudson</system>\n+        <url>https://hudson.apache.org/hudson/job/OpenJPA-20x-deploy/</url>\n+    </ciManagement>\n+\n     <inceptionYear>2006</inceptionYear>\n \n     <mailingLists>\n@@ -118,25 +126,16 @@\n     </mailingLists>\n \n     <distributionManagement>\n-      <repository>\n-        <id>local-repository</id>\n-        <url>scp://people.apache.org/home/${user.name}/public_html/openjpa/${pom.version}/staging-repo</url>\n-      </repository>\n-      <snapshotRepository>\n-        <id>local-repository</id>\n-        <url>scp://people.apache.org/home/${user.name}/public_html/openjpa/${pom.version}/staging-repo</url>\n-        <uniqueVersion>false</uniqueVersion>\n-      </snapshotRepository>\n       <site>\n         <id>people.apache.org</id>\n-        <url>scp://people.apache.org/home/${user.name}/public_html/openjpa/${pom.version}/staging-site</url>\n+            <url>${site.deploy.url}</url>\n       </site>\n     </distributionManagement>\n \n     <scm>\n-        <connection>scm:svn:http://svn.apache.org/repos/asf/openjpa/tags/2.0.0</connection>\n-        <developerConnection>scm:svn:https://svn.apache.org/repos/asf/openjpa/tags/2.0.0</developerConnection>\n-        <url>http://svn.apache.org/repos/asf/openjpa/tags/2.0.0</url>\n+        <connection>scm:svn:http://svn.apache.org/repos/asf/openjpa/tags/2.0.1</connection>\n+        <developerConnection>scm:svn:https://svn.apache.org/repos/asf/openjpa/tags/2.0.1</developerConnection>\n+        <url>http://svn.apache.org/repos/asf/openjpa/tags/2.0.1</url>\n     </scm>\n \n     <modules>\n@@ -159,159 +158,51 @@\n         <!-- ================ -->\n         <!--  Build Profiles  -->\n         <!-- ================ -->\n+\n+        <!-- Override some release settings inherited from apache-7.pom -->\n         <profile>\n-            <id>release</id>\n-            <activation>\n-                <property>\n-                    <name>release</name>\n-                </property>\n-            </activation>\n-            <modules>\n-                <module>openjpa-project</module>\n-            </modules>\n+            <id>apache-release</id>\n             <build>\n                 <plugins>\n                     <plugin>\n-                    <!--\n-                        javadoc plugin doesn't copy resources like the normal jar plugin.\n-                        Unzip license,etc from normal jar and add to javadoc jar.\n-                     -->\n-                        <groupId>org.apache.maven.plugins</groupId>\n-                        <artifactId>maven-antrun-plugin</artifactId>\n-                        <executions>\n-                            <execution>\n-                                <id>javadoc.resources</id>\n-                                <phase>package</phase>\n-                                <goals>\n-                                    <goal>run</goal>\n-                                </goals>\n-                                <configuration>\n-                                    <tasks>\n-                                        <!-- create output dir for nested parent poms -->\n-                                        <mkdir dir=\"${project.build.directory}\" />\n-                                        <unzip dest=\"${project.build.directory}/apidocs\">\n-                                            <patternset>\n-                                                <include name=\"META-INF/*.txt\" />\n-                                            </patternset>\n-                                            <fileset dir=\"${project.build.directory}\">\n-                                                <include name=\"${artifactId}-${pom.version}.jar\" />\n-                                            </fileset>\n-                                        </unzip>\n-                                    </tasks>\n-                                </configuration>\n-                            </execution>\n-                        </executions>\n-                    </plugin>\n-                    <plugin>\n-                        <groupId>org.apache.maven.plugins</groupId>\n-                        <artifactId>maven-javadoc-plugin</artifactId>\n+                        <groupId>org.apache.rat</groupId>\n+                        <artifactId>apache-rat-plugin</artifactId>\n                         <executions>\n                             <execution>\n-                                <id>attach-javadoc</id>\n-                                <phase>package</phase>\n-                                <goals>\n-                                    <goal>jar</goal>\n-                                </goals>\n-                            </execution>\n-                            <execution>\n-                                <phase>process-classes</phase>\n-                                <goals><goal>javadoc</goal></goals>\n-                                <configuration>\n-                                    <additionalparam>\n-                                        ${javadoc.additionalparam}\n-                                    </additionalparam>\n-                                    <aggregate>true</aggregate>\n-                                    <subpackages>org.apache.openjpa</subpackages>\n-                                    <verbose>false</verbose>\n-                                    <maxmemory>512m</maxmemory>\n-                                    <links>\n-                                        <link>http://java.sun.com/j2se/1.5.0/docs/api</link>\n-                                        <link>http://java.sun.com/javaee/6/docs/api</link>\n-                                        <link>http://jakarta.apache.org/commons/collections/api-release</link>\n-                                    </links>\n-                                </configuration>\n-                            </execution>\n-                        </executions>\n-                    </plugin>\n-                    <plugin>\n-                        <groupId>org.apache.maven.plugins</groupId>\n-                        <artifactId>maven-gpg-plugin</artifactId>\n-                        <executions>\n-                            <execution>\n-                                <id>sign-artifacts</id>\n                                 <phase>verify</phase>\n                                 <goals>\n-                                    <goal>sign</goal>\n+                                    <goal>check</goal>\n                                 </goals>\n                             </execution>\n                         </executions>\n-                    </plugin>\n-                    <plugin>\n-                        <groupId>org.apache.maven.plugins</groupId>\n-                        <artifactId>maven-release-plugin</artifactId>\n                         <configuration>\n-                            <useReleaseProfile>false</useReleaseProfile>\n-                            <goals>deploy site site-deploy</goals>\n-                            <arguments>-Prelease,docbook-profile,test-derby -DskipTests=true</arguments>\n-                            <autoVersionSubmodules>true</autoVersionSubmodules>\n+                            <excludeSubProjects>false</excludeSubProjects>\n+                            <numUnapprovedLicenses>0</numUnapprovedLicenses>\n+                            <excludes>\n+                                <!-- comments are usupported in services files -->\n+                                <exclude>**/javax.persistence.spi.PersistenceProvider</exclude>\n+                                <exclude>**/javax.annotation.processing.Processor</exclude>\n+                                <!-- comments are usupported by our rsrc parser -->\n+                                <exclude>**/*.rsrc</exclude>\n+                                <!-- comments are usupported in these files -->\n+                                <exclude>**/org.apache.openjpa.revision.properties</exclude>\n+                                <exclude>scripts/*.list</exclude>\n+                                <exclude>scripts/*.options</exclude>\n+                                <exclude>scripts/*.dict</exclude>\n+                                <!-- generated content -->\n+                                <exclude>**/.*/**</exclude>\n+                                <exclude>**/target/**/*</exclude>\n+                                <exclude>**/dependency-reduced-pom.xml</exclude>\n+                                <exclude>**/*.log</exclude>\n+                                <exclude>**/maven-eclipse.xml</exclude>\n+                                <exclude>**/rat.txt</exclude>\n+                                <exclude>release.properties</exclude>\n+                                <exclude>DEPENDENCIES</exclude>\n+                                <!-- Exclude internal build-only repository -->\n+                                <exclude>**/internal-repository/**</exclude>\n+                            </excludes>\n                         </configuration>\n                     </plugin>\n-                        <plugin>\n-                            <groupId>org.codehaus.mojo</groupId>\n-                            <artifactId>rat-maven-plugin</artifactId>\n-                            <executions>\n-                                <execution>\n-                                    <phase>verify</phase>\n-                                    <goals>\n-                                        <goal>check</goal>\n-                                    </goals>\n-                                </execution>\n-                            </executions>\n-                            <configuration>\n-                                <excludes>\n-                                    <!--\n-                                        comments are usupported by\n-                                        javax.persistence.Persistence\n-                                    -->\n-                                    <exclude>**/javax.persistence.spi.PersistenceProvider</exclude>\n-                                    <exclude>**/javax.annotation.processing.Processor</exclude>\n-\n-                                    <!--\n-                                        comments are usupported by our rsrc parser\n-                                    -->\n-                                    <exclude>**/*.rsrc</exclude>\n-\n-                                    <!-- General informational files -->\n-                                    <exclude>openjpa-project/*.txt</exclude>\n-                                    <exclude>README.txt</exclude>\n-                                    <exclude>BUILDRELEASE</exclude>\n-                                    <exclude>scripts/*.list</exclude>\n-                                    <exclude>scripts/*.options</exclude>\n-                                    <exclude>scripts/*.dict</exclude>\n-\n-                                    <!-- generated content -->\n-                                    <exclude>**/*.log</exclude>\n-                                    <exclude>**/rat.txt</exclude>\n-                                    <exclude>**/*.txt</exclude>\n-                                    <exclude>**/org.apache.openjpa.revision.properties</exclude>\n-                                    <exclude>**/target/**/*</exclude>\n-                                    <exclude>release.properties</exclude>\n-                                    <exclude>**/NOTICE.vm</exclude>\n-                                    <exclude>**/LICENSE.vm</exclude>\n-                                    <exclude>**/dependency-reduced-pom.xml</exclude>\n-\n-                                    <!-- Exclude Eclipse generated files -->\n-                                    <exclude>**/.*/**</exclude>\n-\n-                                    <!--\n-                                        Exclude internal repository. These files\n-                                        are generated by Maven or only used for\n-                                        build purposes.\n-                                     -->\n-                                    <exclude>**/internal-repository/**</exclude>\n-                                </excludes>\n-                            </configuration>\n-                    </plugin>\n                 </plugins>\n             </build>\n         </profile>\n@@ -328,15 +219,6 @@\n                     <plugin>\n                         <groupId>org.apache.maven.plugins</groupId>\n                         <artifactId>maven-gpg-plugin</artifactId>\n-                        <executions>\n-                            <execution>\n-                                <id>sign-artifacts</id>\n-                                <phase>verify</phase>\n-                                <goals>\n-                                    <goal>sign</goal>\n-                                </goals>\n-                            </execution>\n-                        </executions>\n                     </plugin>\n                 </plugins>\n             </build>\n@@ -380,29 +262,6 @@\n                     <plugin>\n                         <groupId>org.apache.maven.plugins</groupId>\n                         <artifactId>maven-javadoc-plugin</artifactId>\n-                        <version>2.2</version>\n-                        <executions>\n-                            <execution>\n-                                <phase>process-classes</phase>\n-                                <goals><goal>javadoc</goal></goals>\n-                                <configuration>\n-                                    <additionalparam>\n-                                        ${javadoc.additionalparam}\n-                                    </additionalparam>\n-                                    <aggregate>true</aggregate>\n-                                    <subpackages>org.apache.openjpa</subpackages>\n-\n-                                    <verbose>false</verbose>\n-                                    <!-- <linksource>true</linksource> -->\n-                                    <maxmemory>512m</maxmemory>\n-                                    <links>\n-                                        <link>http://java.sun.com/j2se/1.5.0/docs/api</link>\n-                                        <link>http://java.sun.com/javaee/6/docs/api</link>\n-                                        <link>http://jakarta.apache.org/commons/collections/api-release</link>\n-                                    </links>\n-                                </configuration>\n-                            </execution>\n-                        </executions>\n                     </plugin>\n                 </plugins>\n             </build>\n@@ -414,77 +273,6 @@\n             </activation>\n         </profile>\n \n-        <profile>\n-            <!--                        \n-                Apache License check plugin. Run manually with:\n-                    mvn rat:check\n-                Or add it to the verify phase with:\n-                    mvn verify -Plicense-verify-profile\n-            -->  \n-            <id>license-verify-profile</id>\n-            <build>\n-                <plugins>\n-                    <plugin>\n-                        <groupId>org.codehaus.mojo</groupId>\n-                        <artifactId>rat-maven-plugin</artifactId>\n-                        <executions>\n-                            <execution>\n-                                <phase>verify</phase>\n-                                <goals>\n-                                    <goal>check</goal>\n-                                </goals>\n-                            </execution>\n-                        </executions>\n-                        <configuration>\n-                            <excludes>\n-                                <!--\n-                                    comments are usupported by\n-                                    javax.persistence.Persistence\n-                                -->\n-                                <exclude>**/javax.persistence.spi.PersistenceProvider</exclude>\n-                                <exclude>**/javax.annotation.processing.Processor</exclude>\n-\n-                                <!--\n-                                    comments are usupported by our rsrc parser\n-                                -->\n-                                <exclude>**/*.rsrc</exclude>\n-\n-                                <!-- General informational files -->\n-                                <exclude>openjpa-project/*.txt</exclude>\n-                                <exclude>README.txt</exclude>\n-                                <exclude>BUILDRELEASE</exclude>\n-                                <exclude>scripts/*.list</exclude>\n-                                <exclude>scripts/*.options</exclude>\n-                                <exclude>scripts/*.dict</exclude>\n-\n-\n-                                <!-- generated content -->\n-                                <exclude>**/*.log</exclude>\n-                                <exclude>**/rat.txt</exclude>\n-                                <exclude>**/*.txt</exclude>\n-                                <exclude>**/org.apache.openjpa.revision.properties</exclude>\n-                                <exclude>**/target/**/*</exclude>\n-                                <exclude>release.properties</exclude>\n-                                <exclude>**/NOTICE.vm</exclude>\n-                                <exclude>**/LICENSE.vm</exclude>\n-                                <exclude>**/dependency-reduced-pom.xml</exclude>\n-\n-                                <!-- Exclude Eclipse generated files -->\n-                                <exclude>**/.*/**</exclude>\n-\n-                                <!--\n-                                    Exclude internal repository. These files\n-                                    are generated by Maven or only used for\n-                                    build purposes.\n-                                 -->\n-                                <exclude>**/internal-repository/**</exclude>\n-                            </excludes>\n-                        </configuration>\n-                    </plugin>\n-                </plugins>\n-            </build>\n-        </profile>\n-\n         <!-- =============== -->\n         <!--  Test Profiles  -->\n         <!-- =============== -->\n@@ -551,39 +339,39 @@\n             <build>\n                 <pluginManagement>\n                     <plugins>\n-                <plugin>\n-                    <groupId>org.apache.maven.plugins</groupId>\n-                    <artifactId>maven-compiler-plugin</artifactId>\n-                    <configuration>\n-                        <source>1.5</source>\n-                        <target>1.5</target>\n-                        <excludes>\n-                            <exclude>none</exclude>\n-                        </excludes>\n-                        <testExcludes>\n-                            <exclude>**</exclude>\n-                        </testExcludes>\n-                    </configuration>\n-                    <executions>\n-                        <execution>\n-                            <id>compile-java5</id>\n+                        <plugin>\n+                            <groupId>org.apache.maven.plugins</groupId>\n+                            <artifactId>maven-compiler-plugin</artifactId>\n                             <configuration>\n-                                <fork>true</fork>\n-                                <executable>${java5.home}/bin/javac</executable>\n-                                <compilerVersion>1.5</compilerVersion>\n-                                <maxmem>${test.jvm.maxheapsize}</maxmem>\n+                                <source>1.5</source>\n+                                <target>1.5</target>\n                                 <excludes>\n-                                    <exclude>**</exclude>\n+                                    <exclude>none</exclude>\n                                 </excludes>\n                                 <testExcludes>\n-                                    <exclude>none</exclude>\n+                                    <exclude>**</exclude>\n                                 </testExcludes>\n                             </configuration>\n-                            <goals>\n-                                <goal>testCompile</goal>\n-                            </goals>\n-                        </execution>\n-                    </executions>\n+                            <executions>\n+                                <execution>\n+                                    <id>compile-java5</id>\n+                                    <configuration>\n+                                        <fork>true</fork>\n+                                        <executable>${java5.home}/bin/javac</executable>\n+                                        <compilerVersion>1.5</compilerVersion>\n+                                        <maxmem>${test.jvm.maxheapsize}</maxmem>\n+                                        <excludes>\n+                                            <exclude>**</exclude>\n+                                        </excludes>\n+                                        <testExcludes>\n+                                            <exclude>none</exclude>\n+                                        </testExcludes>\n+                                    </configuration>\n+                                    <goals>\n+                                        <goal>testCompile</goal>\n+                                    </goals>\n+                                </execution>\n+                            </executions>\n                         </plugin>\n                         <plugin>\n                             <groupId>org.apache.maven.plugins</groupId>\n@@ -728,7 +516,7 @@\n             <dependency>\n                 <groupId>org.apache.geronimo.specs</groupId>\n                 <artifactId>geronimo-jpa_2.0_spec</artifactId>\n-                <version>1.0</version>\n+                <version>1.1</version>\n             </dependency>\n             <dependency>\n                 <groupId>org.apache.geronimo.specs</groupId>\n@@ -743,8 +531,18 @@\n             <dependency>\n                 <groupId>org.apache.geronimo.specs</groupId>\n                 <artifactId>geronimo-validation_1.0_spec</artifactId>\n-                <version>1.0</version>\n+                <version>1.1</version>\n             </dependency>            \n+            <dependency>\n+                <groupId>org.apache.bval</groupId>\n+                <artifactId>org.apache.bval.bundle</artifactId>\n+                <version>0.2-incubating</version>\n+            </dependency>\n+            <dependency>\n+                <groupId>commons-beanutils</groupId>\n+                <artifactId>commons-beanutils</artifactId>\n+                <version>1.8.3</version>\n+            </dependency>\n             <dependency>\n                 <groupId>org.apache.derby</groupId>\n                 <artifactId>derby</artifactId>\n@@ -795,119 +593,118 @@\n                 <artifactId>jmock-junit3</artifactId>\n                 <version>2.5.1</version>\n             </dependency>\n+            <dependency>\n+                <groupId>junit</groupId>\n+                <artifactId>junit</artifactId>\n+                <version>3.8.1</version>\n+            </dependency>\n+            <dependency>\n+                <groupId>net.sourceforge.findbugs</groupId>\n+                <artifactId>annotations</artifactId>\n+                <version>1.3.2</version>\n+            </dependency>\n         </dependencies>\n     </dependencyManagement>\n \n     <dependencies>\n+        <dependency>\n+            <groupId>net.sourceforge.findbugs</groupId>\n+            <artifactId>annotations</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n         <dependency>\n             <groupId>junit</groupId>\n             <artifactId>junit</artifactId>\n-            <version>3.8.1</version>\n             <scope>test</scope>\n         </dependency>\n     </dependencies>\n \n     <build>\n+        <defaultGoal>install</defaultGoal>\n+\n+        <resources>\n+            <resource>\n+                <directory>src/main/resources</directory>\n+            </resource>\n+        </resources>\n+\n+        <testResources>\n+            <testResource>\n+                <directory>src/test/resources</directory>\n+            </testResource>\n+        </testResources>\n+\n         <pluginManagement>\n             <plugins>\n+                <!-- apache-7.pom default of 2.0.2 fails for JDK5 testing -->\n                 <plugin>\n                     <groupId>org.apache.maven.plugins</groupId>\n                     <artifactId>maven-compiler-plugin</artifactId>\n-                    <version>2.1</version>\n+                    <version>2.3.1</version>\n                     <configuration>\n                         <source>1.5</source>\n                         <target>1.5</target>\n-                    </configuration>\n-                </plugin>\n-                <plugin>\n-                    <groupId>org.apache.maven.plugins</groupId>\n-                    <artifactId>maven-jar-plugin</artifactId>\n-                    <version>2.3</version>\n-                    <configuration>\n-                        <archive>\n-                            <manifest>\n-                                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>\n-                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>\n-                            </manifest>\n-                        </archive>\n+                        <encoding>${project.build.sourceEncoding}</encoding>\n                     </configuration>\n                 </plugin>\n                 <plugin>\n                     <groupId>org.apache.maven.plugins</groupId>\n                     <artifactId>maven-surefire-plugin</artifactId>\n-                    <version>2.4.3</version>\n+                    <version>2.6</version>\n                     <configuration>\n                         <argLine>${surefire.jvm.args}</argLine>\n                         <useFile>false</useFile>\n                         <trimStackTrace>false</trimStackTrace>\n                         <useSystemClassLoader>true</useSystemClassLoader>\n                     </configuration>\n                 </plugin>\n+                <plugin>\n+                    <groupId>org.apache.maven.plugins</groupId>\n+                    <artifactId>maven-surefire-report-plugin</artifactId>\n+                    <version>2.5</version>\n+                </plugin>\n+                <plugin>\n+                    <groupId>org.codehaus.mojo</groupId>\n+                    <artifactId>findbugs-maven-plugin</artifactId>\n+                    <version>2.3.1</version>\n+                </plugin>\n                 <plugin>\n                     <groupId>org.codehaus.mojo</groupId>\n-                    <artifactId>rat-maven-plugin</artifactId>\n-                    <version>1.0-alpha-3</version>\n+                    <artifactId>buildnumber-maven-plugin</artifactId>\n+                    <version>1.0-beta-4</version>\n                     <configuration>\n-                        <excludeSubProjects>false</excludeSubProjects>\n-                        <numUnapprovedLicenses>0</numUnapprovedLicenses>\n-                        <excludes>\n-                            <!--\n-                                comments are usupported by\n-                                javax.persistence.Persistence\n-                            -->\n-                            <exclude>**/javax.persistence.spi.PersistenceProvider</exclude>\n-                            <exclude>**/javax.annotation.processing.Processor</exclude>\n-\n-                            <!--\n-                                comments are usupported by our rsrc parser\n-                            -->\n-                            <exclude>**/*.rsrc</exclude>\n-\n-                            <!-- General informational files -->\n-                            <exclude>openjpa-project/*.txt</exclude>\n-                            <exclude>README.txt</exclude>\n-                            <exclude>BUILDRELEASE</exclude>\n-                            <exclude>scripts/*.list</exclude>\n-                            <exclude>scripts/*.options</exclude>\n-                            <exclude>scripts/*.dict</exclude>\n-\n-                            <!-- generated content -->\n-                            <exclude>**/*.log</exclude>\n-                            <exclude>**/rat.txt</exclude>\n-                            <exclude>**/*.txt</exclude>\n-                            <exclude>**/org.apache.openjpa.revision.properties</exclude>\n-                            <exclude>**/target/**/*</exclude>\n-                            <exclude>release.properties</exclude>\n-                            <exclude>**/NOTICE.vm</exclude>\n-                            <exclude>**/LICENSE.vm</exclude>\n-                            <exclude>**/dependency-reduced-pom.xml</exclude>\n-\n-                            <!-- Exclude Eclipse generated files -->\n-                            <exclude>**/.*/**</exclude>\n-\n-                            <!--\n-                                Exclude internal repository. These files\n-                                are generated by Maven or only used for\n-                                build purposes.\n-                             -->\n-                            <exclude>**/internal-repository/**</exclude>\n-                        </excludes>\n+                        <getRevisionOnlyOnce>true</getRevisionOnlyOnce>\n+                        <revisionOnScmFailure>offline</revisionOnScmFailure>\n                     </configuration>\n+                    <executions>\n+                        <execution>\n+                            <phase>validate</phase>\n+                            <goals>\n+                                <goal>create</goal>\n+                            </goals>\n+                        </execution>\n+                    </executions>\n                 </plugin>\n                 <plugin>\n-                    <groupId>org.apache.maven.plugins</groupId>\n-                    <artifactId>maven-resources-plugin</artifactId>\n-                    <version>2.4.2</version>\n+                    <groupId>org.apache.rat</groupId>\n+                    <artifactId>apache-rat-plugin</artifactId>\n+                    <version>0.7</version>\n                 </plugin>\n                 <plugin>\n                     <groupId>org.apache.maven.plugins</groupId>\n-                    <artifactId>maven-site-plugin</artifactId>\n-                    <version>2.0.1</version>\n+                    <artifactId>maven-dependency-plugin</artifactId>\n+                    <version>2.1</version>\n                 </plugin>\n+                <!-- inherited from apache-7.pom, but need config updates -->\n                 <plugin>\n                     <groupId>org.apache.maven.plugins</groupId>\n-                    <artifactId>maven-assembly-plugin</artifactId>\n-                    <version>2.2-beta-5</version>\n+                    <artifactId>maven-release-plugin</artifactId>\n+                    <configuration>\n+                        <useReleaseProfile>false</useReleaseProfile>\n+                        <goals>deploy site site-deploy</goals>\n+                        <arguments>-Papache-release,docbook-profile,test-derby,bval -DskipTests</arguments>\n+                        <autoVersionSubmodules>true</autoVersionSubmodules>\n+                    </configuration>\n                 </plugin>\n                 <plugin>\n                     <groupId>org.apache.maven.plugins</groupId>\n@@ -921,58 +718,27 @@\n                         </dependency>\n                     </dependencies>\n                 </plugin>\n-                <plugin>\n-                    <groupId>org.apache.maven.plugins</groupId>\n-                    <artifactId>maven-gpg-plugin</artifactId>\n-                    <version>1.0</version>\n-                </plugin>\n-                <plugin>\n-                    <groupId>org.apache.maven.plugins</groupId>\n-                    <artifactId>maven-javadoc-plugin</artifactId>\n-                    <version>2.6.1</version>\n-                </plugin>\n-                <plugin>\n-                    <groupId>org.apache.maven.plugins</groupId>\n-                    <artifactId>maven-release-plugin</artifactId>\n-                    <version>2.0</version>\n-                </plugin>\n-                <plugin>\n-                    <groupId>org.apache.maven.plugins</groupId>\n-                    <artifactId>maven-source-plugin</artifactId>\n-                    <version>2.1.1</version>\n-                </plugin>\n-                <plugin>\n-                    <groupId>org.apache.maven.plugins</groupId>\n-                    <artifactId>maven-project-info-reports-plugin</artifactId>\n-                    <version>2.1.2</version>\n-                </plugin>\n                 <plugin>\n                     <groupId>org.codehaus.mojo</groupId>\n                     <artifactId>taglist-maven-plugin</artifactId>\n                     <version>2.3</version>\n                 </plugin>\n                 <plugin>\n-                    <groupId>org.apache.maven.plugins</groupId>\n-                    <artifactId>maven-remote-resources-plugin</artifactId>\n-                    <version>1.0</version>\n+                    <groupId>org.codehaus.mojo</groupId>\n+                    <artifactId>ianal-maven-plugin</artifactId>\n+                    <version>1.0-alpha-1</version>\n                     <executions>\n                         <execution>\n                             <goals>\n-                                <goal>process</goal>\n+                                <goal>verify-legal-files</goal>\n                             </goals>\n                             <configuration>\n-                                <resourceBundles>\n-                                    <resourceBundle>org.apache:apache-jar-resource-bundle:1.4</resourceBundle>\n-                                </resourceBundles>\n+                                <!-- Fail the build if any artifacts are missing legal files -->\n+                                <strict>true</strict>\n                             </configuration>\n                         </execution>\n                     </executions>\n                 </plugin>\n-                <plugin>\n-                    <groupId>org.codehaus.mojo</groupId>\n-                    <artifactId>ianal-maven-plugin</artifactId>\n-                    <version>1.0-alpha-1</version>\n-                </plugin>\n                 <plugin>\n                     <groupId>org.apache.maven.plugins</groupId>\n                     <artifactId>maven-shade-plugin</artifactId>\n@@ -990,56 +756,105 @@\n                         </dependency>\n                     </dependencies>\n                 </plugin>\n+                <plugin>\n+                    <groupId>org.apache.maven.plugins</groupId>\n+                    <artifactId>maven-jar-plugin</artifactId>\n+                    <executions>\n+                        <execution>\n+                            <id>default-jar</id>\n+                            <goals>\n+                                <goal>jar</goal>\n+                            </goals>\n+                            <configuration>\n+                                <archive>\n+                                    <manifest>\n+                                       <addDefaultImplementationEntries>true</addDefaultImplementationEntries>\n+                                    </manifest>\n+                                    <manifestEntries>\n+                                        <Implementation-Build>${buildNumber}</Implementation-Build>\n+                                    </manifestEntries>\n+                                </archive>\n+                            </configuration>\n+                        </execution>\n+                        <execution>\n+                            <id>attach-tests</id>\n+                            <goals>\n+                                <goal>test-jar</goal>\n+                            </goals>\n+                        </execution>\n+                    </executions>\n+                </plugin>\n                 <plugin>\n                     <groupId>org.apache.felix</groupId>\n                     <artifactId>maven-bundle-plugin</artifactId>\n-                    <version>2.0.0</version>\n+                    <version>2.0.1</version>\n+                    <extensions>true</extensions>\n+                    <configuration>\n+                        <instructions>\n+                            <Implementation-Title>${project.name}</Implementation-Title>\n+                            <Implementation-Version>${project.version}</Implementation-Version>\n+                            <Bundle-DocURL>${project.url}</Bundle-DocURL>\n+                        </instructions>\n+                    </configuration>\n+                </plugin>\n+                <plugin>\n+                    <groupId>org.codehaus.mojo</groupId>\n+                    <artifactId>openjpa-maven-plugin</artifactId>\n+                    <version>1.1</version>\n                 </plugin>\n                 <plugin>\n                     <groupId>org.apache.maven.plugins</groupId>\n-                    <artifactId>maven-enforcer-plugin</artifactId>\n-                    <version>1.0-beta-1</version>\n+                    <artifactId>maven-javadoc-plugin</artifactId>\n+                    <version>2.7</version>\n+                    <configuration>\n+                        <encoding>${project.build.sourceEncoding}</encoding>\n+                    </configuration>\n+                    <executions>\n+                        <execution>\n+                            <id>attach-javadoc</id>\n+                            <phase>package</phase>\n+                            <goals>\n+                                <goal>jar</goal>\n+                            </goals>\n+                        </execution>\n+                        <execution>\n+                            <phase>process-classes</phase>\n+                            <goals>\n+                                <goal>javadoc</goal>\n+                            </goals>\n+                            <configuration>\n+                                <additionalparam>\n+                                    ${javadoc.additionalparam}\n+                                </additionalparam>\n+                                <aggregate>true</aggregate>\n+                                <subpackages>org.apache.openjpa</subpackages>\n+                                <verbose>false</verbose>\n+                                <maxmemory>512m</maxmemory>\n+                                <links>\n+                                    <link>http://java.sun.com/j2se/1.5.0/docs/api</link>\n+                                    <link>http://java.sun.com/javaee/6/docs/api</link>\n+                                    <link>http://jakarta.apache.org/commons/collections/api-release</link>\n+                                </links>\n+                            </configuration>\n+                        </execution>\n+                    </executions>\n+                </plugin>\n+                <plugin>\n+                    <groupId>org.codehaus.mojo</groupId>\n+                    <artifactId>findbugs-maven-plugin</artifactId>\n+                    <version>2.3.1</version>\n                 </plugin>\n             </plugins>\n         </pluginManagement>\n \n         <plugins>\n             <plugin>\n-                <groupId>org.apache.maven.plugins</groupId>\n-                <artifactId>maven-compiler-plugin</artifactId>\n-            </plugin>\n-            <plugin>\n-                <groupId>org.apache.maven.plugins</groupId>\n-                <artifactId>maven-remote-resources-plugin</artifactId>\n-            </plugin>\n-            <plugin>\n-                <groupId>org.apache.maven.plugins</groupId>\n-                <artifactId>maven-source-plugin</artifactId>\n-                <executions>\n-                    <execution>\n-                        <id>attach-sources</id>\n-                        <phase>${createSource}</phase>\n-                        <goals>\n-                            <goal>jar</goal>\n-                            <goal>test-jar</goal>\n-                        </goals>\n-                    </execution>\n-                </executions>\n+                <groupId>org.codehaus.mojo</groupId>\n+                <artifactId>ianal-maven-plugin</artifactId>\n             </plugin>\n             <plugin>\n                 <groupId>org.codehaus.mojo</groupId>\n-                <artifactId>ianal-maven-plugin</artifactId>\n-                <executions>\n-                    <execution>\n-                        <goals>\n-                            <goal>verify-legal-files</goal>\n-                        </goals>\n-                        <configuration>\n-                            <!-- Fail the build if any artifacts are missing legal files -->\n-                            <strict>true</strict>\n-                        </configuration>\n-                    </execution>\n-                </executions>\n+                <artifactId>buildnumber-maven-plugin</artifactId>\n             </plugin>\n             <plugin>\n                 <groupId>org.apache.maven.plugins</groupId>\n@@ -1082,22 +897,41 @@\n                     </execution>\n                 </executions>\n             </plugin>\n-            <!-- this has to be done in each module so we don't generate\n-                 tests.jar artifacts that fail the IANAL check\n             <plugin>\n-                <groupId>org.apache.maven.plugins</groupId>\n-                <artifactId>maven-jar-plugin</artifactId>\n+                <groupId>org.apache.rat</groupId>\n+                <artifactId>apache-rat-plugin</artifactId>\n                 <executions>\n                     <execution>\n-                        <id>attach-tests</id>\n                         <phase>verify</phase>\n                         <goals>\n-                            <goal>test-jar</goal>\n+                            <goal>check</goal>\n                         </goals>\n                     </execution>\n                 </executions>\n+                <configuration>\n+                    <excludeSubProjects>false</excludeSubProjects>\n+                    <numUnapprovedLicenses>0</numUnapprovedLicenses>\n+                    <excludes>\n+                        <!-- generated content -->\n+                        <exclude>**/.*/**</exclude>\n+                        <exclude>**/target/**/*</exclude>\n+                    </excludes>\n+                    <includes>\n+                        <!-- only check common source files -->\n+                        <include>**/src/**/*.bat</include>\n+                        <include>**/src/**/*.css</include>\n+                        <include>**/src/**/*.html</include>\n+                        <include>**/src/**/*.java</include>\n+                        <include>**/src/**/*.js</include>\n+                        <include>**/src/**/*.jsp</include>\n+                        <include>**/src/**/*.properties</include>\n+                        <include>**/src/**/*.sh</include>\n+                        <include>**/src/**/*.txt</include>\n+                        <include>**/src/**/*.vm</include>\n+                        <include>**/src/**/*.xml</include>\n+                    </includes>\n+                </configuration>\n             </plugin>\n-            -->\n         </plugins>\n     </build>\n \n@@ -1106,38 +940,30 @@\n             <plugin>\n                 <groupId>org.apache.maven.plugins</groupId>\n                 <artifactId>maven-project-info-reports-plugin</artifactId>\n+                <version>2.1.1</version>\n+            </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-javadoc-plugin</artifactId>\n+                <version>2.7</version>\n+                <configuration>\n+                    <show>package</show>\n+                    <quiet>true</quiet>\n+                    <source>1.5</source>\n+                    <links>\n+                        <link>http://java.sun.com/j2se/1.5.0/docs/api</link>\n+                        <link>http://java.sun.com/javaee/6/docs/api</link>\n+                        <link>http://jakarta.apache.org/commons/collections/api-release</link>\n+                    </links>\n+                </configuration>\n                 <reportSets>\n                     <reportSet>\n                         <reports>\n-                            <report>jdepend-maven-plugin</report>\n-                            <!-- <report>jxr-maven-plugin</report> -->\n-                            <report>surefire-report-maven-plugin</report>\n-                            <report>maven-javadoc-plugin</report>\n-                            <report>mailing-list</report>\n-                            <report>issue-tracking</report>\n-                            <report>license</report>\n+                            <report>javadoc</report>\n                         </reports>\n                     </reportSet>\n                 </reportSets>\n             </plugin>\n-            <plugin>\n-                <groupId>org.apache.maven.plugins</groupId>\n-                <artifactId>maven-surefire-plugin</artifactId>\n-            </plugin>\n-            <plugin>\n-                <groupId>org.codehaus.mojo</groupId>\n-                <artifactId>taglist-maven-plugin</artifactId>\n-            </plugin>\n-            <plugin>\n-                <groupId>org.apache.maven.plugins</groupId>\n-                <artifactId>maven-checkstyle-plugin</artifactId>\n-                <version>2.2</version>\n-                <configuration>\n-                    <configLocation>${checkstyle.config.location}</configLocation>\n-                    <includeTestSourceDirectory>true</includeTestSourceDirectory> \n-                    <excludes>**/*_.java</excludes>\n-                </configuration>\n-            </plugin>\n         </plugins>\n     </reporting>\n "},{"sha":"06c9a828477a128f42fb079c450069ce9cd89518","filename":"scripts/mmg.readme.txt","status":"modified","additions":27,"deletions":21,"changes":48,"blob_url":"https://github.com/apache/openjpa/blob/805f554ba1896e417b28a547388ec059ba990f31/scripts/mmg.readme.txt","raw_url":"https://github.com/apache/openjpa/raw/805f554ba1896e417b28a547388ec059ba990f31/scripts/mmg.readme.txt","contents_url":"https://api.github.com/repos/apache/openjpa/contents/scripts/mmg.readme.txt?ref=805f554ba1896e417b28a547388ec059ba990f31","patch":"@@ -1,35 +1,41 @@\n-Metamodel generator (mmg)\n+Apache OpenJPA - Metamodel generator (mmg) README\n+Licensed under Apache License 2.0 - http://www.apache.org/licenses/LICENSE-2.0\n+--------------------------------------------------------------------------------\n \n-JPA 2.0 provides an utility to generate canonical metamodel for each persistent domain entity.\n-This brief note describes how to generate these canonical metamodel classes.\n+JPA 2.0 provides an utility to generate canonical metamodel for each persistent\n+domain entity.  This brief note describes how to generate these canonical\n+metamodel classes.\n \n-The canonical metamodel classes are generated during compilation of persistent domain entity classes.\n-The generation process depends on Annotation Processing facility available in JDK6. Naturally, this\n-process *only* works if the persistent domain entity classes are compiled with a JDK6 compiler.\n+The canonical metamodel classes are generated during compilation of persistent\n+domain entity classes.  The generation process depends on Annotation Processing\n+facility available in JDK6. Naturally, this process *only* works if the\n+persistent domain entity classes are compiled with a JDK6 compiler.\n+\n+Effectively, the process appears to be normal compilation process with a\n+specialized Annotation Processor:\n+\n+    $ javac -classpath %CLASSPATH% <javac options> <mmg options> <*.java source files>\n \n-Effectively, the process appears to be normal compilation process with a specialized Annotation Processor\n \n-  $ javac -classpath %CLASSPATH% <javac options> <mmg options> <*.java source files>\n-  \n-  \n Compiler Classpath\n ------------------\n-   The compiler classpath must include OpenJPA libraries. \n+The compiler classpath must include OpenJPA libraries. \n \n mmg options\n -----------\n-   These options specify the Annotation processor to be used as well as options for the processor. The only mandatory \n-   option is \n-          -processor org.apache.openjpa.persistence.meta.AnnotationProcessor6\n+These options specify the Annotation processor to be used as well as options\n+for the processor. The only mandatory option is:\n+    -processor org.apache.openjpa.persistence.meta.AnnotationProcessor6\n           \n-The other options qualify the  Annotation processor itself and specified with -A<option>=<value> syntax\n+The other options qualify the  Annotation processor itself and specified\n+with -A<option>=<value> syntax:\n \n -Alog     log level. Permissible values are TRACE, INFO and WARN. \n           Default is INFO.\n--Aout     the directory location of the generated canonical featureSelection source output files. \n-          Default is the current directory.\n--Asource  compatibility level of the generated canonical featureSelection source code. Permissible values are 5 and 6. \n-          Default is 6.\n--Aheader  flags if a header is created for the generated source code. Permissible values are true and false. \n-          Default is true.\n+-Aout     the directory location of the generated canonical featureSelection source output\n+          files.  Default is the current directory.\n+-Asource  compatibility level of the generated canonical featureSelection source code.\n+          Permissible values are 5 and 6.  Default is 6.\n+-Aheader  flags if a header is created for the generated source code.\n+          Permissible values are true and false.  Default is true.\n  "}]}

