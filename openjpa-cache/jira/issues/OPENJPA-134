{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12362266","self":"https://issues.apache.org/jira/rest/api/2/issue/12362266","key":"OPENJPA-134","fields":{"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312340","id":"12312340","description":"","name":"0.9.7","archived":true,"released":true,"releaseDate":"2007-04-27"}],"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12312323":null,"customfield_12312320":null,"customfield_12310420":"160469","customfield_12312321":null,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12312331":null,"customfield_12312332":null,"aggregatetimeoriginalestimate":null,"timeestimate":null,"customfield_12312330":null,"versions":[],"customfield_12311120":null,"customfield_12313826":null,"customfield_12312339":null,"issuelinks":[{"id":"12360549","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12360549","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12615441","key":"OPENJPA-2296","self":"https://issues.apache.org/jira/rest/api/2/issue/12615441","fields":{"summary":"N+1 select problems when eager fetching OneToOne and ManyToOne fields","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/2","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/critical.svg","name":"Critical","id":"2"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"customfield_12313825":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=faywang","name":"faywang","key":"faywang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Fay Wang","active":true,"timeZone":"Etc/UTC"},"customfield_12312337":null,"customfield_12313823":null,"customfield_12312338":null,"customfield_12311920":null,"customfield_12313822":null,"customfield_12312335":null,"customfield_12313821":null,"customfield_12312336":null,"customfield_12313820":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12311310","id":"12311310","name":"sql","description":"Issues to do with SQL, including generation of SQL. Issues that have to do with JDBC (i.e., execution of SQL statements and result set processing) should be filed in the jdbc component."}],"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"121294","customfield_12312823":null,"creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fancy","name":"fancy","key":"fancy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Catalina Wei","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fancy","name":"fancy","key":"fancy","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Catalina Wei","active":true,"timeZone":"Etc/UTC"},"aggregateprogress":{"progress":0,"total":0},"customfield_12313520":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"customfield_12313924":null,"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/OPENJPA-134/votes","votes":1,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12313920":null,"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"customfield_12314020":"{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@75d1dc1[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@55fde36d[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@102bb2a6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2af7cd45[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@24f8a598[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@631471e0[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2e6751a6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3aee2cca[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5b5b9a6a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1b807b90[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@f7ef327[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@44bd067e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}","customfield_12314141":null,"customfield_12314140":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310351","id":"12310351","key":"OPENJPA","name":"OpenJPA","projectTypeKey":"software","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310351&avatarId=10043","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310351&avatarId=10043","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310351&avatarId=10043","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310351&avatarId=10043"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10252","id":"10252","description":"","name":"OpenJPA"}},"aggregatetimespent":null,"customfield_12312520":null,"customfield_12314422":null,"customfield_12314421":null,"customfield_12314146":null,"customfield_12314420":null,"customfield_12314145":null,"customfield_12314144":null,"customfield_12314143":null,"resolutiondate":"2007-04-11T16:26:31.868+0000","workratio":-1,"customfield_12312923":null,"customfield_12312920":null,"customfield_12312921":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/OPENJPA-134/watchers","watchCount":4,"isWatching":false},"created":"2007-02-08T01:47:21.351+0000","updated":"2012-11-20T08:43:07.804+0000","timeoriginalestimate":null,"description":"Running JPAConfiguration default setting for EagerFetchMode (FetchModeValue.EAGER_PARALLEL), \nthe SQL generated is sub-optimal.\nConsider the following entities:\n\n                                     lineitems( OneToMany ) \n            Order  <===========================> OrderItem\n                                    order ( ManyToOne )\n\n\nCase 1:  why not combining 2 SQL to 1 SQL ?\n=================================================================================================\nOrder.lineitmes(EAGER):\nOrderItem.order(LAZY):\n\nExecuting query: select o from Order o\n2173  demo  TRACE  [main] openjpa.jdbc.SQL - <t 1094730048, conn 1318342292> executing prepstmnt 1299336562 \nSELECT t0.oid, t0.version, t0.amount, t0.customer_countryCode, t0.customer_id, t0.delivered, t0.shipaddr FROM Order t0\n2213  demo  TRACE  [main] openjpa.jdbc.SQL - <t 1094730048, conn 1318342292> [40 ms] spent\n2223  demo  TRACE  [main] openjpa.jdbc.SQL - <t 1094730048, conn 1318342292> executing prepstmnt 1406424020 \nSELECT t0.oid, t1.lid, t1.version, t1.cost, t1.order_oid, t1.part_partno, t1.quantity FROM Order t0 INNER JOIN OrderItem t1 ON t0.oid = t1.order_oid ORDER BY t0.oid ASC\n\n\nCase 2: extra unneeded LEFT OUTER JOIN,  if eliminated, the selection aliase t2 should change to t1:\n=============================================================================================\nOrder.lineitmes(EAGER):\nOrderItem.order(LAZY):\n\nExecuting query: select o from Order o left join fetch o.lineitems\n2403  demo  TRACE  [main] openjpa.jdbc.SQL - <t 1094730048, conn 1314410072> executing prepstmnt 1500797300 \nSELECT t0.oid, t0.version, t0.amount, t0.customer_countryCode, t0.customer_id, t0.delivered, t0.shipaddr, t2.order_oid, t2.lid, t2.version, t2.cost, t2.part_partno, t2.quantity FROM Order t0 LEFT OUTER JOIN OrderItem t1 ON t0.oid = t1.order_oid LEFT OUTER JOIN OrderItem t2 ON t0.oid = t2.order_oid ORDER BY t2.order_oid ASC\n\n\nCase  3: why not generating 1 SQL ?\n==================================================================================================\nOrder.lineitmes(EAGER):\nOrderItem.order(EAGER):\n\nExecuting query: select o from Order o\n2343  demo  TRACE  [main] openjpa.jdbc.SQL - <t 1094730048, conn 1318342292> executing prepstmnt 384833264 SELECT t0.oid, t0.version, t0.amount, t0.customer_countryCode, t0.customer_id, t0.delivered, t0.shipaddr FROM Order t0\n2383  demo  TRACE  [main] openjpa.jdbc.SQL - <t 1094730048, conn 1318342292> [40 ms] spent\n2393  demo  TRACE  [main] openjpa.jdbc.SQL - <t 1094730048, conn 1318342292> executing prepstmnt 1722705582 \nSELECT t0.oid, t1.lid, t1.version, t1.cost, t2.oid, t2.version, t2.amount, t2.customer_countryCode, t2.customer_id, t2.delivered, t2.shipaddr, t1.part_partno, t1.quantity FROM Order t0 INNER JOIN OrderItem t1 ON t0.oid = t1.order_oid LEFT OUTER JOIN Order t2 ON t1.order_oid = t2.oid ORDER BY t0.oid ASC\n2393  demo  TRACE  [main] openjpa.jdbc.SQL - <t 1094730048, conn 1318342292> [0 ms] spent\n3134  demo  TRACE  [main] openjpa.jdbc.SQL - <t 1094730048, conn 1318342292> executing prepstmnt 950548648 \nSELECT t0.lid, t0.version, t0.cost, t1.oid, t1.version, t1.amount, t1.customer_countryCode, t1.customer_id, t1.delivered, t1.shipaddr, t0.part_partno, t0.quantity FROM OrderItem t0 LEFT OUTER JOIN Order t1 ON t0.order_oid = t1.oid WHERE t0.order_oid = ? [params=(int) 88]\n3134  demo  TRACE  [main] openjpa.jdbc.SQL - <t 1094730048, conn 1318342292> [0 ms] spent\n\n\nCase 4:  duplicate selections and redundant joins\n==================================================================================================\nOrder.lineitmes(EAGER):\nOrderItem.order(EAGER):\n\nExecuting query: select o from Order o left join fetch o.lineitems\n2273  demo  TRACE  [main] openjpa.jdbc.SQL - <t 1094730048, conn 1307463150> executing prepstmnt 1565154634 \nSELECT t0.oid, t0.version, t0.amount, t0.customer_countryCode, t0.customer_id, t0.delivered, t0.shipaddr, t2.order_oid, t2.lid, t2.version, t2.cost, t3.oid, t3.version, t3.amount, t3.customer_countryCode, t3.customer_id, t3.delivered, t3.shipaddr, t2.part_partno, t2.quantity FROM Order t0 LEFT OUTER JOIN OrderItem t1 ON t0.oid = t1.order_oid LEFT OUTER JOIN OrderItem t2 ON t0.oid = t2.order_oid LEFT OUTER JOIN Order t3 ON t2.order_oid = t3.oid ORDER BY t2.order_oid ASC","customfield_10010":null,"timetracking":{},"customfield_12314523":null,"customfield_12314127":null,"customfield_12314522":null,"customfield_12314126":null,"customfield_12314521":null,"customfield_12314125":null,"customfield_12314520":null,"customfield_12314124":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12386501","id":"12386501","filename":"openjpa134_3.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=faywang","name":"faywang","key":"faywang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Fay Wang","active":true,"timeZone":"Etc/UTC"},"created":"2008-07-21T02:40:05.354+0000","size":7986,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12386501/openjpa134_3.patch"}],"customfield_12312340":null,"customfield_12314123":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12314122":null,"customfield_12314121":null,"customfield_12310041":null,"customfield_12314120":null,"customfield_12314129":null,"customfield_12314524":null,"customfield_12314128":null,"summary":"Extra unneeded SQL joins for OneToMany relationship with fetch type EAGER","customfield_12314130":null,"customfield_12310291":null,"customfield_12310290":null,"customfield_12314138":null,"customfield_12314137":null,"environment":null,"customfield_12314136":null,"customfield_12314135":null,"customfield_12311020":null,"customfield_12314134":null,"duedate":null,"customfield_12314132":null,"customfield_12314131":null,"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12362266/comment/12476027","id":"12476027","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jstecher","name":"jstecher","key":"jstecher","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Stecher","active":true,"timeZone":"Etc/UTC"},"body":"Just curious if there has been any movement on this JIRA.  This problem actually presents itself in the test bucket that IBM has been running trying to work through the performance issues of OpenJPA and puts the OpenJPA runtime behind the competitive implementations in the scenarios above.  I am interested in getting some feedback from those that understand the code a little more about this bug and getting a possible fix generated for it.  \n\nIn my mind there is no reason that the the Orderlines->Orders Eager,Eager relationship should ever issues a 2 join query.  It should be a single left outer join with the eager back pointer filled by the initial orderline query.\n\nThoughts?\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jstecher","name":"jstecher","key":"jstecher","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Stecher","active":true,"timeZone":"Etc/UTC"},"created":"2007-02-26T22:43:42.895+0000","updated":"2007-02-26T22:43:42.895+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12362266/comment/12476029","id":"12476029","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pcl","name":"pcl","key":"pcl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Patrick Linskey","active":true,"timeZone":"America/Los_Angeles"},"body":"Could you attach a test case that demonstrates this problem?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pcl","name":"pcl","key":"pcl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Patrick Linskey","active":true,"timeZone":"America/Los_Angeles"},"created":"2007-02-26T22:54:46.934+0000","updated":"2007-02-26T22:54:46.934+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12362266/comment/12476054","id":"12476054","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kwsutter","name":"kwsutter","key":"kwsutter","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kevin W. Sutter","active":true,"timeZone":"America/Chicago"},"body":"The following conversation has also been recorded in the dev mailing list concerning this OPENJPA-134 Issue:\n\nhttp://www.nabble.com/extraneous-joins-OPENJPA-134-tf3230933.html#a8977476","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=kwsutter","name":"kwsutter","key":"kwsutter","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Kevin W. Sutter","active":true,"timeZone":"America/Chicago"},"created":"2007-02-27T01:48:38.295+0000","updated":"2007-02-27T01:48:38.295+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12362266/comment/12476232","id":"12476232","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jstecher","name":"jstecher","key":"jstecher","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Stecher","active":true,"timeZone":"Etc/UTC"},"body":"I think the links to the mailing list post that Kevin has shows a good example of the code causing the problem.  In reality any one to many relationship with a back pointer generates two joins when only one is necessary to pull in all the information needed for the query.\n\nDave's example in the mailing list should be something you can run pretty quick and see the problem.  Catalina's original JIRA entry contains a pretty good example of the SQL. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jstecher","name":"jstecher","key":"jstecher","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Stecher","active":true,"timeZone":"Etc/UTC"},"created":"2007-02-27T17:17:23.695+0000","updated":"2007-02-27T17:17:23.695+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12362266/comment/12478917","id":"12478917","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dangalvin","name":"dangalvin","key":"dangalvin","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dan Galvin","active":true,"timeZone":"Etc/UTC"},"body":"We find that this case also occurs on the getReference() call as well, I assume because associated fetch is eager? ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=dangalvin","name":"dangalvin","key":"dangalvin","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Dan Galvin","active":true,"timeZone":"Etc/UTC"},"created":"2007-03-07T21:45:55.811+0000","updated":"2007-03-07T21:45:55.811+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12362266/comment/12485235","id":"12485235","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jstecher","name":"jstecher","key":"jstecher","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Stecher","active":true,"timeZone":"Etc/UTC"},"body":"Any update on where we stand with getting this issue addressed?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jstecher","name":"jstecher","key":"jstecher","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"John Stecher","active":true,"timeZone":"Etc/UTC"},"created":"2007-03-29T16:10:29.825+0000","updated":"2007-03-29T16:10:29.825+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12362266/comment/12488111","id":"12488111","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=awhite","name":"awhite","key":"awhite","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A. Abram White","active":true,"timeZone":"Etc/UTC"},"body":"Fixed the most egregious issue, which was the cyclic fetching of eager bidirectional relations.  Changed to cut off SELECTs when we're traversing the back-ptr to the owning side of a relation we've already fetched.  I'm not convinced all the other issues mentioned are bugs given the eager fetch settings used.  Please open new JIRAs for any individual issues that you believe remain.  Fixed in revision 527565.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=awhite","name":"awhite","key":"awhite","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A. Abram White","active":true,"timeZone":"Etc/UTC"},"created":"2007-04-11T16:26:31.851+0000","updated":"2007-04-11T16:26:31.851+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12362266/comment/12488520","id":"12488520","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rob.wisniewski","name":"rob.wisniewski","key":"rob.wisniewski","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rob Wisniewski","active":true,"timeZone":"Etc/UTC"},"body":"I did some performance testing and things look good here.  My 'one to many eager' scenario, which would be affected the most by this looping query behavior, improved in performance by 6%, and verified by sql dumps.\n\nI did notice that my lazy scenarios are almost 50% slower now, but looking at the sql dumps it appears that we were fetching eagerly even in those scenarios and this (or another JIRA?) seems to have fixed that functional error.  Does that seem like something your changes would resolve?  Did you run into anything that would cause an eager fetch even when lazy was specified?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rob.wisniewski","name":"rob.wisniewski","key":"rob.wisniewski","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rob Wisniewski","active":true,"timeZone":"Etc/UTC"},"created":"2007-04-12T22:15:58.935+0000","updated":"2007-04-12T22:15:58.935+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12362266/comment/12488521","id":"12488521","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rob.wisniewski","name":"rob.wisniewski","key":"rob.wisniewski","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rob Wisniewski","active":true,"timeZone":"Etc/UTC"},"body":"To illustrate the 'eager despite lazy' behavior...  here's the before and after sql:\n\nsvn 04/03/2007:\n\nexecuted once:\n\nSELECT t0.HOLDINGID, t1.ACCOUNTID, t1.PROFILE_USERID, t1.BALANCE, t1.CREATIONDATE, t1.LASTLOGIN, t1.LOGINCOUNT, t1.LOGOUTCOUNT, t1.OPENBALANCE, t0.PURCHASEDATE, t0.PURCHASEPRICE, t0.QUANTI\nTY, t2.SYMBOL, t2.CHANGE1, t2.COMPANYNAME, t2.HIGH, t2.LOW, t2.OPEN1, t2.PRICE, t2.VOLUME FROM HOLDINGEJB t0 LEFT OUTER JOIN ACCOUNTEJB t1 ON t0.ACCOUNT_ACCOUNTID = t1.ACCOUNTID LEFT OUTER JOIN QUOTEEJB t2 ON t0.QUOTE_SYMBOL =\n t2.SYMBOL WHERE t0.ACCOUNT_ACCOUNTID = ?\n\nexecuted once:\n\nSELECT t0.PROFILE_USERID, t0.BALANCE, t0.CREATIONDATE, t0.LASTLOGIN, t0.LOGINCOUNT, t0.LOGOUTCOUNT, t0.OPENBALANCE FROM ACCOUNTEJB t0 WHERE t0.ACCOUNTID = ? optimize for 1 row\n\nCORRECT svn 04/12/2007:\n\nexecuted once:\n\nSELECT t0.PROFILE_USERID, t0.BALANCE, t0.CREATIONDATE, t0.LASTLOGIN, t0.LOGINCOUNT, t0.LOGOUTCOUNT, t0.OPENBALANCE FROM ACCOUNTEJB t0 WHERE t0.ACCOUNTID = ?  FOR READ ONLY  optimize for 1\nrow\n\nexecuted 4 times:\n\nSELECT t1.ACCOUNTID, t1.PROFILE_USERID, t1.BALANCE, t1.CREATIONDATE, t1.LASTLOGIN, t1.LOGINCOUNT, t1.LOGOUTCOUNT, t1.OPENBALANCE FROM HOLDINGEJB t0 INNER JOIN ACCOUNTEJB t1 ON t0.ACCOUNT_A\nCCOUNTID = t1.ACCOUNTID WHERE t0.HOLDINGID = ?  FOR READ ONLY  optimize for 1 row","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rob.wisniewski","name":"rob.wisniewski","key":"rob.wisniewski","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rob Wisniewski","active":true,"timeZone":"Etc/UTC"},"created":"2007-04-12T22:19:32.665+0000","updated":"2007-04-12T22:19:32.665+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12362266/comment/12615141","id":"12615141","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=faywang","name":"faywang","key":"faywang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Fay Wang","active":true,"timeZone":"Etc/UTC"},"body":"I have tested the following scenario:\n\n@Entity\npublic class Customer {\n..\n   @OneToMany(fetch=FetchType.EAGER, mappedBy=\"customer\")\n    private Collection<Order> orders = new ArrayList<Order>();\n...\n}\n\n@Entity\npublic class Order {\n\t@Id \n\t@GeneratedValue(strategy=GenerationType.IDENTITY)\n\t int oid;\n\n\t double amount;\n\t boolean delivered;\n\t \n\t @ManyToOne (fetch=FetchType.EAGER)\n\t Customer customer;\n\n...\n\n}\n\nA JPQL :\n   Select c from Customer c\n\ngenerates the following SQL:\n\n(1) SELECT t0.countryCode, t0.id, t0.version, t0.city, t0.state, t0.street, t0.zip \n      FROM PdqCustomer t0 \n\n(2) SELECT t0.countryCode, t0.id, t1.oid, t1.version, t1.amount, t1.delivered \n      FROM PdqCustomer t0 \n      INNER JOIN PdqOrder t1 ON t0.countryCode = t1.CUSTOMER_COUNTRYCODE AND \n                             t0.id = t1.CUSTOMER_ID ORDER BY t0.countryCode ASC, t0.id ASC \n\n(3) SELECT t1.countryCode, t1.id, t1.version, t1.city, t1.state, t1.street, t1.zip \n      FROM PdqOrder t0 \n      INNER JOIN PdqCustomer t1 ON t0.CUSTOMER_COUNTRYCODE = t1.countryCode \n                             AND t0.CUSTOMER_ID = t1.id WHERE t0.oid = ?  optimize for 1 row\n\n(4) SELECT t1.countryCode, t1.id, t1.version, t1.city, t1.state, t1.street, t1.zip \n      FROM PdqOrder t0 \n      INNER JOIN PdqCustomer t1 ON t0.CUSTOMER_COUNTRYCODE = t1.countryCode \n                              AND t0.CUSTOMER_ID = t1.id WHERE t0.oid = ?  optimize for 1 row\n\n(5) SELECT t1.countryCode, t1.id, t1.version, t1.city, t1.state, t1.street, t1.zip \n      FROM PdqOrder t0 \n      INNER JOIN PdqCustomer t1 ON t0.CUSTOMER_COUNTRYCODE = t1.countryCode \n                             AND t0.CUSTOMER_ID = t1.id WHERE t0.oid = ?  optimize for 1 row\n\n(6) SELECT t1.countryCode, t1.id, t1.version, t1.city, t1.state, t1.street, t1.zip \n      FROM PdqOrder t0 \n      INNER JOIN PdqCustomer t1 ON t0.CUSTOMER_COUNTRYCODE = t1.countryCode \n                              AND t0.CUSTOMER_ID = t1.id WHERE t0.oid = ?  optimize for 1 row\n\nNote that the last four sql are the same ((3) -(6)). This is because there are four orders for the customer and each loading of order will load its inverse relationship with customer.\n\nThis case is most similar to the case (3) described by Catalina. The attached patch detects the inverse relationship and get rid of sql (3) to (6). \n\n\n\n\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=faywang","name":"faywang","key":"faywang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Fay Wang","active":true,"timeZone":"Etc/UTC"},"created":"2008-07-21T02:40:05.381+0000","updated":"2008-07-21T02:40:05.381+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12362266/comment/12618881","id":"12618881","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=faywang","name":"faywang","key":"faywang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Fay Wang","active":true,"timeZone":"Etc/UTC"},"body":"Scenario (2) could no longer be reproduced with r680566:\n\n@Entity\npublic class Order {\n\t@Id \n\t@GeneratedValue(strategy=GenerationType.IDENTITY)\n\t int oid;\n\t\n\t double amount;\n\t boolean delivered;\n\t \n\t@ManyToOne (fetch=FetchType.LAZY)\n\t Customer customer;\n\t\n\t@OneToMany (fetch=FetchType.EAGER , mappedBy=\"order\")\n\t Collection<OrderItem> lineitems = new ArrayList<OrderItem>();\n...\n}\n\n@Entity\n\npublic class OrderItem {\n\t@Id \n\t@GeneratedValue(strategy=GenerationType.IDENTITY)\n\tint lid;\n\t\n\tint quantity;\n\tdouble cost;\n\t \n\t@ManyToOne (fetch=FetchType.LAZY)\n\tOrder order;\n...\n}\n\nJPQL:\n--------\nselect o from Order o left join fetch o.lineitems\n\nGenerated SQL:\n----------------------\nSELECT t0.oid, t0.version, t0.amount, t0.CUSTOMER_COUNTRYCODE, t0.CUSTOMER_ID, \nt0.delivered, t1.ORDER_OID, t1.lid, t1.version, t1.cost, t1.PART_PARTNO, t1.quantity \nFROM Order t0  LEFT OUTER JOIN OrderItem t1 ON t0.oid = t1.ORDER_OID ORDER BY t1.ORDER_OID ASC \n\nNote that the unneeded LEFT OUTER JOIN is gone .\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=faywang","name":"faywang","key":"faywang","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Fay Wang","active":true,"timeZone":"Etc/UTC"},"created":"2008-07-31T22:10:00.391+0000","updated":"2008-07-31T22:10:00.391+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12362266/comment/13500920","id":"13500920","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slowstrider","name":"slowstrider","key":"slowstrider","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vermeulen","active":true,"timeZone":"Europe/Berlin"},"body":"Unfortunately for the above eager bidirectional Order and Customer example, when selecting from Order instead of Customer, OpenJPA still uses \"load field\" for Customer.orders for each Customer that was fetched. Another problem (very similar, both A and C are Order and B is Customer) happens when selecting A from A *..1 B 1..* C. OpenJPA loads B's List<C> using a \"load field\" for each B. See OPENJPA-2296.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=slowstrider","name":"slowstrider","key":"slowstrider","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Vermeulen","active":true,"timeZone":"Europe/Berlin"},"created":"2012-11-20T08:43:07.804+0000","updated":"2012-11-20T08:43:07.804+0000"}],"maxResults":12,"total":12,"startAt":0},"customfield_12311820":"0|i0l3z3:","customfield_12314139":null}}

