{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12654693","self":"https://issues.apache.org/jira/rest/api/2/issue/12654693","key":"OPENJPA-2405","fields":{"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12319463","id":"12319463","description":"OpenJPA 2.3.0","name":"2.3.0","archived":false,"released":true,"releaseDate":"2013-11-24"}],"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12312323":null,"customfield_12312320":null,"customfield_12310420":"334970","customfield_12312321":null,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12312331":null,"customfield_12312332":null,"aggregatetimeoriginalestimate":7200,"timeestimate":7200,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12324305","id":"12324305","description":"OpenJPA 2.2.x Maintenance Release","name":"2.2.3","archived":false,"released":false}],"customfield_12311120":null,"customfield_12313826":null,"customfield_12312339":null,"issuelinks":[{"id":"12536234","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12536234","type":{"id":"10020","name":"Cloners","inward":"is cloned by","outward":"is a clone of","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10020"},"inwardIssue":{"id":"13165476","key":"OPENJPA-2741","self":"https://issues.apache.org/jira/rest/api/2/issue/13165476","fields":{"summary":"CLONE - EntityManager.merge does not work for entity that is managed by another EntityManager","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133}}}}],"customfield_12313825":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fyrewyld","name":"fyrewyld","key":"fyrewyld","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fyrewyld&avatarId=28040","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fyrewyld&avatarId=28040","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fyrewyld&avatarId=28040","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fyrewyld&avatarId=28040"},"displayName":"Jody Grassel","active":true,"timeZone":"America/Chicago"},"customfield_12312337":null,"customfield_12313823":null,"customfield_12312338":null,"customfield_12311920":null,"customfield_12313822":null,"customfield_12312335":null,"customfield_12313821":null,"customfield_12312336":null,"customfield_12313820":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12311302","id":"12311302","name":"kernel","description":"Kernel"}],"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"aggregatetimeestimate":7200,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"335294","customfield_12312823":null,"creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arne","name":"arne","key":"arne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arne Limburg","active":true,"timeZone":"Europe/Berlin"},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arne","name":"arne","key":"arne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arne Limburg","active":true,"timeZone":"Europe/Berlin"},"aggregateprogress":{"progress":0,"total":7200,"percent":0},"customfield_12313520":null,"customfield_12310250":null,"progress":{"progress":0,"total":7200,"percent":0},"customfield_12313924":null,"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/OPENJPA-2405/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12313920":null,"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"customfield_12314020":"{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1d964a1d[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@670f405f[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@c3a2e76[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@112a9a16[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@456328d1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@7c7c4018[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@21e8987f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@64575c7e[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@38aec585[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@264c3e08[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@438261de[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1d68717c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}","customfield_12314141":null,"customfield_12314140":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310351","id":"12310351","key":"OPENJPA","name":"OpenJPA","projectTypeKey":"software","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310351&avatarId=10043","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310351&avatarId=10043","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310351&avatarId=10043","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310351&avatarId=10043"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10252","id":"10252","description":"","name":"OpenJPA"}},"aggregatetimespent":null,"customfield_12312520":null,"customfield_12314422":null,"customfield_12314421":null,"customfield_12314146":null,"customfield_12314420":null,"customfield_12314145":null,"customfield_12314144":null,"customfield_12314143":null,"resolutiondate":"2013-07-01T17:04:14.674+0000","workratio":0,"customfield_12312923":null,"customfield_12312920":null,"customfield_12312921":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/OPENJPA-2405/watchers","watchCount":6,"isWatching":false},"created":"2013-06-25T09:38:19.523+0000","updated":"2018-06-12T02:29:26.281+0000","timeoriginalestimate":7200,"description":"EntityManager.merge does not work for entity that is managed by another EntityManager. Instead of updating that entity OpenJPA tries to persist the entity a second time","customfield_10010":null,"timetracking":{"originalEstimate":"2h","remainingEstimate":"2h","originalEstimateSeconds":7200,"remainingEstimateSeconds":7200},"customfield_12314523":null,"customfield_12314127":null,"customfield_12314522":null,"customfield_12314126":null,"customfield_12314521":null,"customfield_12314125":null,"customfield_12314520":null,"customfield_12314124":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12589574","id":"12589574","filename":"OPENJPA-2405.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arne","name":"arne","key":"arne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arne Limburg","active":true,"timeZone":"Europe/Berlin"},"created":"2013-06-25T09:40:06.814+0000","size":2530,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12589574/OPENJPA-2405.patch"}],"customfield_12312340":null,"customfield_12314123":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12314122":null,"customfield_12314121":null,"customfield_12310041":null,"customfield_12314120":null,"customfield_12314129":null,"customfield_12314524":null,"customfield_12314128":null,"summary":"EntityManager.merge does not work for entity that is managed by another EntityManager","customfield_12314130":null,"customfield_12310291":null,"customfield_12310290":null,"customfield_12314138":null,"customfield_12314137":null,"environment":null,"customfield_12314136":null,"customfield_12314135":null,"customfield_12311020":null,"customfield_12314134":null,"duedate":null,"customfield_12314132":null,"customfield_12314131":null,"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12654693/comment/13692893","id":"13692893","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arne","name":"arne","key":"arne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arne Limburg","active":true,"timeZone":"Europe/Berlin"},"body":"Added test that reproduces the problem","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arne","name":"arne","key":"arne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arne Limburg","active":true,"timeZone":"Europe/Berlin"},"created":"2013-06-25T09:40:06.817+0000","updated":"2013-06-25T09:40:06.817+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12654693/comment/13693020","id":"13693020","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=allee8285","name":"allee8285","key":"allee8285","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Albert Lee","active":true,"timeZone":"America/Chicago"},"body":"Per Spec:\n====================\n3.2.7.1 Merging Detached Entity State\nThe merge operation allows for the propagation of state from detached entities onto persistent entities\nmanaged by the entity manager.\nThe semantics of the merge operation applied to an entity X are as follows:\n........\n• If X is a managed entity, it is ignored by the merge operation, however, the merge operation is\ncascaded to entities referenced by relationships from X if these relationships have been annotated\nwith the cascade element value cascade=MERGE or cascade=ALL annotation.\n====================\n\nmerge() is for \"detached\" entity only. If it is \"managed\", it is IGNORED.....\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=allee8285","name":"allee8285","key":"allee8285","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Albert Lee","active":true,"timeZone":"America/Chicago"},"created":"2013-06-25T13:25:22.675+0000","updated":"2013-06-25T14:16:18.645+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12654693/comment/13693671","id":"13693671","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arne","name":"arne","key":"arne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arne Limburg","active":true,"timeZone":"Europe/Berlin"},"body":"1. So you agree with me that it is a BUG that OpenJPA tries to INSERT the entity and throws an exception due to the duplicate key?\n\n2. Yes, I have read that chapter of the spec, too. And I come to the conclusion, that the only way to interpret it, is that managed entities of the SAME persistence context are meant.\nYour way of reading the spec simply does not work. Think of the following situation:\n a. Entity A is loaded by EntityManager X. Entity A has a Cascade.ALL relation to Entity B.\n b. Entity B is newly created and assigned to A\n c. Entity A is merged to EntityManager Y.\nNow Entity B would be managed by EntityManager Y due to the cascading behavior you cited. In addition Entity B would be managed by EntityManager X due to 3.2.4\n\nSpec 3.24\n=====================\nThe semantics of the flush operation, applied to an entity X are as follows:\n- If X is a managed entity, it is synchronized to the database.\n   - For all entities Y referenced by a relationship from X, if the relationship to Y has been annotated with the cascade element value cascade=PERSIST or cascade=ALL, the persist operation is applied to Y.\n=====================\nHow do you think OpenJPA should behave in such situation? Should Entity B be managed by two persistence contexts?\n\nBtw. Any other persistence provider returns a managed copy of Entity A in such situation, no matter if A is managed by another persistence context or detached. And this is the expected behavior, I guess.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arne","name":"arne","key":"arne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arne Limburg","active":true,"timeZone":"Europe/Berlin"},"created":"2013-06-26T06:01:39.725+0000","updated":"2013-06-26T06:01:39.725+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12654693/comment/13694802","id":"13694802","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=allee8285","name":"allee8285","key":"allee8285","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Albert Lee","active":true,"timeZone":"America/Chicago"},"body":"I am just pointing out that merge() is meant for merging DETACHED entity into a persistence context. If an entity is managed by the SAME persistence context, there is nothing to merge since the state of X is already maintained, hence the merge operation is ignored. However, the child relationship is still processed if proper cascade is specified.\n\nThe spec also spelled out the following;\n=================================\n3.2.8 Managed Instances\nIt is the responsibility of the application to insure that an instance is managed in only a single persistence\ncontext. The behavior is undefined if the same Java instance is made managed in more than one\npersistence context.\n=================================\n\nIn the original test case,  A (managed by em, not detached) is merged to em2 and there is no managed A in em2. Since A is marked managed and not managed in em2, OpenJPA creates a new managed instance in em2 and eventually \"INSERT\" to the database. I am not saying this is the right or wrong behavior but this use case is undefined.\n\nIf you wants to merge changed content in A to a different persistence context, you may have to do:\n- em.find(A);\n- detach A from em2\n- make changes to A\n- em2.find(A);\n- em2.merge(A);\n- commit/flush em2\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=allee8285","name":"allee8285","key":"allee8285","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Albert Lee","active":true,"timeZone":"America/Chicago"},"created":"2013-06-27T15:37:16.313+0000","updated":"2013-06-27T15:37:16.313+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12654693/comment/13694882","id":"13694882","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arne","name":"arne","key":"arne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arne Limburg","active":true,"timeZone":"Europe/Berlin"},"body":"Yes, I know how I could make it work in the test case.\nUnfortunately this is not true for real life applications.\nThe problem occured in a web-app with concurrent requests.\nI load the entity within one request and the EntityManager is closed after that request.\nIn the second request I merge that entity to have an attached instance again.\nUnfortunately from time to time the second request comes in when the first is not completely finished and the first EntityManager is still open. Then the problem occures.\n\nSo, until this behavior of OpenJPA is not fixed, I cannot have concurrent requests with JPA?\n\nBtw. I am willing to help fixing this issue.\n\nIs it common sense that the best behavior in the described case would be that OpenJPA simply copies the state of the entity?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arne","name":"arne","key":"arne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arne Limburg","active":true,"timeZone":"Europe/Berlin"},"created":"2013-06-27T17:16:17.697+0000","updated":"2013-06-27T17:16:17.697+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12654693/comment/13695338","id":"13695338","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=struberg","name":"struberg","key":"struberg","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=struberg&avatarId=41313","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=struberg&avatarId=41313","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=struberg&avatarId=41313","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=struberg&avatarId=41313"},"displayName":"Mark Struberg","active":true,"timeZone":"Europe/Berlin"},"body":"Well, imo it's an OpenJPA bug in any case. If we simply ignore managed entities in em.merge() than we must not insert the children into the database twice neither.\n\nRegarding 3.2.8: In this paragraph 'instance' clearly does not mean 'entity identity' but 'java identity' as indicated by the sentence: \"The behavior is undefined if the same Java instance is made managed in more than one persistence context.\"\n\nIn any case I'm not sure if 'fixing' this would help you, Arne.\n\nI guess it's all about the entitymanager-per-request pattern and a premature redirect().\nIn this case it might happen that finishing the first request (the one with the redirect) takes longer to end than the new request to hit the server (in a parallel thread now).\nIn this case the flush() on the first request might change your records in the db and also update the @Version in those Entities. So even if you would get the entity merged into another EM in the 2nd request it would contain the old @Version and you will blow up at the end of the 2nd request with an OptimisticLockException. Doesn't sound good neither, right? :)\n\nThere are now 2 ways to solve this issue in your application (even without changing OpenJPA)\n\n1.) Use a Servlet Filter to synchronize on your Session for those requests. Be careful as this might cause unnecessary locks ...\n\n2.) explicitly invoke em.flush() and em.close() before you do the redirect. And hope that your @Transactional Interceptor can deal with it :) For JSF apps we might be able to register a hook for the redirect in the FacesContext. Need to check...\n\nThis might btw also work a bit different depending if you use synchronized or unsynchronized EM (see JTA-2.1 and em.joinTransaction()).\n\nSummary: multi-page 'wizard' style pages without DTOs suck at this time. We need this new pattern we've talked about last week where we use em.joinTransaction() to explicitly store the entity in the 'save' action on the last page - without having the em.merge() operations automagically prematurely store all changes into the database on the intermediate pages. Still thinking about how this can be done best with OpenJPA\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=struberg","name":"struberg","key":"struberg","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=struberg&avatarId=41313","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=struberg&avatarId=41313","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=struberg&avatarId=41313","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=struberg&avatarId=41313"},"displayName":"Mark Struberg","active":true,"timeZone":"Europe/Berlin"},"created":"2013-06-28T09:24:21.996+0000","updated":"2013-06-28T09:24:21.996+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12654693/comment/13695643","id":"13695643","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fyrewyld","name":"fyrewyld","key":"fyrewyld","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fyrewyld&avatarId=28040","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fyrewyld&avatarId=28040","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fyrewyld&avatarId=28040","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fyrewyld&avatarId=28040"},"displayName":"Jody Grassel","active":true,"timeZone":"America/Chicago"},"body":"Just reviewing this JIRA and wanted to post my own thoughts.  First, some clips from the JPA Specification that I think are relevant:\n\n3.2 Entity Instance’s Life Cycle\nThis section describes the EntityManager operations for managing an entity instance’s lifecycle. An entity instance can be characterized as being new, managed, detached, or removed.\n￼￼￼￼• • • •\nA new entity instance has no persistent identity, and is not yet associated with a persistence context.\nA managed entity instance is an instance with a persistent identity that is currently associated with a persistence context.\nA detached entity instance is an instance with a persistent identity that is not (or no longer) associated with a persistence context.\nA removed entity instance is an instance with a persistent identity, associated with a persistence context, that will be removed from the database upon transaction commit.\n\n-- What I take from this is that an Entity Class that has been freshly created by its constructor (ie, not created by em.find() or a JPA query) and has never, ever been touched by an em.persist() or em.merge() operation is a \"new entity\".  Such an object will not have any StateManager (DetachedStateManager or otherwise, it is simply null) associated with its internal state (internal state being the hidden variables added by enhancement.)\n\n-- A \"managed entity\" is an Entity Class instance that has a link to a live StateManager in its internal state -- and there's caveats to that.  A StateManager is associated to one and only one Persistence Context (ie, EntityManager instance) - to those and only those Persistence Contexts is the entity a \"managed entity\".  A new entity becomes a managed entity when em.persist() or em.merge() is called on it.  (Managed entities are also provided by find/query operations (though it would return a detached entity if it's a CMTS entitymanager invocation outside of a transaction.))\n\n-- To any other Persistence Context, because it is not \"new\" (because it has a StateManager object associated with it) and has a non DetachedStateManager that is associated with another Persistence Context, it should be interpreted as a \"detached entity\" (even if the StateManager associated with the Entity Object instance's internal state is not a DetachedStateManager.)  So calling em.merge(entityWithSomeOtherPCsStateManager) should be treated as a detached entity, and return a new Entity Object instance.  Which could create \"interesting problems\" if the original entity doesn't have a committed row on the database yet (because the two different PCs will have two different db connections, and a merge operation will trigger a fetch operation from the database/cache.)  Remember the JPA spec requires Read-Committed to be the minimum isolation level.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fyrewyld","name":"fyrewyld","key":"fyrewyld","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fyrewyld&avatarId=28040","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fyrewyld&avatarId=28040","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fyrewyld&avatarId=28040","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fyrewyld&avatarId=28040"},"displayName":"Jody Grassel","active":true,"timeZone":"America/Chicago"},"created":"2013-06-28T18:29:42.305+0000","updated":"2013-06-28T18:29:42.305+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12654693/comment/13695651","id":"13695651","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fyrewyld","name":"fyrewyld","key":"fyrewyld","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fyrewyld&avatarId=28040","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fyrewyld&avatarId=28040","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fyrewyld&avatarId=28040","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fyrewyld&avatarId=28040"},"displayName":"Jody Grassel","active":true,"timeZone":"America/Chicago"},"body":"Further Thoughts, as I realize the statement \"A managed entity instance is an instance with a persistent identity that is currently associated with a persistence context.\" could be read differently than how I read it (using the 2.1 spec, which should not be different from previous spec iterations.)\n\n3.2.8 Managed Instances\nIt is the responsibility of the application to insure that an instance is managed in only a single persistence context. The behavior is undefined if the same Java instance is made managed in more than one persistence context.\n\nThe contains() method can be used to determine whether an entity instance is managed in the current persistence context.\n\n-- What I take from here is that from the perspective of a Persistence Context, an entity is managed if and only if it is actively associated with it.  So an Entity Object instance with a StateManager associated with PCtx#1 is a \"managed entity\" only from the perspective of PCtx#1 (emPCTX1.contains(entity) returns true).  Any other PCtxs, such as PCtx#2 would see that it has a StateManager that is not associated with it so it is neither \"new\" nor \"managed\" (by PCtx#2) and should consider it to be unmanaged (detached, since it cannot be a \"new\" entity for reasons previously stated) - in this case emPCTX2(entity) returns false.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fyrewyld","name":"fyrewyld","key":"fyrewyld","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fyrewyld&avatarId=28040","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fyrewyld&avatarId=28040","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fyrewyld&avatarId=28040","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fyrewyld&avatarId=28040"},"displayName":"Jody Grassel","active":true,"timeZone":"America/Chicago"},"created":"2013-06-28T18:39:51.334+0000","updated":"2013-06-28T18:39:51.334+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12654693/comment/13695657","id":"13695657","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=struberg","name":"struberg","key":"struberg","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=struberg&avatarId=41313","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=struberg&avatarId=41313","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=struberg&avatarId=41313","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=struberg&avatarId=41313"},"displayName":"Mark Struberg","active":true,"timeZone":"Europe/Berlin"},"body":"> Managed entities are also provided by find/query operations (though it would return a detached entity if it's a CMTS entitymanager invocation outside of a transaction.)\n\nWell, this is not quite what I do read from the JPA and JTA specs. The spec says that in such cases all query operations must succeed (thus also lacy loading shall work) but all write operations must get queued until the EntityManager joins a transaction.\nAnd this mechanism is lacking in OpenJPA I fear. At least I'm not aware that we can do this somehow.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=struberg","name":"struberg","key":"struberg","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=struberg&avatarId=41313","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=struberg&avatarId=41313","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=struberg&avatarId=41313","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=struberg&avatarId=41313"},"displayName":"Mark Struberg","active":true,"timeZone":"Europe/Berlin"},"created":"2013-06-28T18:44:13.129+0000","updated":"2013-06-28T18:44:13.129+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12654693/comment/13695672","id":"13695672","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fyrewyld","name":"fyrewyld","key":"fyrewyld","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fyrewyld&avatarId=28040","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fyrewyld&avatarId=28040","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fyrewyld&avatarId=28040","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fyrewyld&avatarId=28040"},"displayName":"Jody Grassel","active":true,"timeZone":"America/Chicago"},"body":"Outside of a tran, a CMTS EM find/query will work, the spec/javadoc just requires that the entities returned are detached.  Anyways, that really isn't relevant to this JIRA.\n\nAnd I focused a bit too much on the first part and gave just a partial answer.\n\nAs I interpret it, write operations are queued, and it's up to the persistence provider to decide when to flush them to the database (with em.flush() and tran commit being the \"push everything to the database and do it Now\" tools.)  However, because of the Read Committed isolation policy, a new Entity that has been persisted and made managed by EM#1, even if flushed () (but not tran committed yet) will not be detectable to any other EM because EM#(not 1) doesn't share the same JDBC connection.  So EM#1 could conceivably automatically sync every mutation as it comes in from the application to the database, but it's invisible until that critical tran.commit() takes place.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fyrewyld","name":"fyrewyld","key":"fyrewyld","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fyrewyld&avatarId=28040","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fyrewyld&avatarId=28040","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fyrewyld&avatarId=28040","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fyrewyld&avatarId=28040"},"displayName":"Jody Grassel","active":true,"timeZone":"America/Chicago"},"created":"2013-06-28T18:54:22.233+0000","updated":"2013-06-28T19:00:40.696+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12654693/comment/13695690","id":"13695690","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=struberg","name":"struberg","key":"struberg","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=struberg&avatarId=41313","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=struberg&avatarId=41313","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=struberg&avatarId=41313","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=struberg&avatarId=41313"},"displayName":"Mark Struberg","active":true,"timeZone":"Europe/Berlin"},"body":"Jody, I'm not sure if the Entity of such a unsynchronized CMTS EM would be 'detached'. At least according to what I talked with Mike Keith (assuming that I didn't misunderstand him) lazy loading and graph traversal would work for such entitites.\n\nI agree with your 2nd part. Having the same db row managed in 2 different EMs will either not see each other properly or if they do (update case) most likely cause an OptimisticLockingException in one of them - at least if both write!","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=struberg","name":"struberg","key":"struberg","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=struberg&avatarId=41313","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=struberg&avatarId=41313","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=struberg&avatarId=41313","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=struberg&avatarId=41313"},"displayName":"Mark Struberg","active":true,"timeZone":"Europe/Berlin"},"created":"2013-06-28T19:15:22.963+0000","updated":"2013-06-28T19:15:22.963+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12654693/comment/13695705","id":"13695705","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fyrewyld","name":"fyrewyld","key":"fyrewyld","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fyrewyld&avatarId=28040","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fyrewyld&avatarId=28040","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fyrewyld&avatarId=28040","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fyrewyld&avatarId=28040"},"displayName":"Jody Grassel","active":true,"timeZone":"America/Chicago"},"body":"Looking at the attached test, my opinion is that the following should happen:\n\n1) The call to populate(), before the test begins, creates a new em, adds a row to the database, commits, and destroys the em.\n2) Enter testMergeManagedParent()\n3) Parent parent = em.find(Parent.class, pk); - returns an instance of Parent (id=K1) with an address of, say, @0000001.\n4) Parent mergedParent = em2.merge(parent); - sees parent is not \"new\" (because it has a StateManager), and that its associated StateManager belongs to em and not em2, should view parent as a detached entity - so it should perform a fetch from the database, create a new object, say, @0000002, and bring in any fields which have been mutated in @0000001 (which in this case, are none), and return @0000002 to the caller which is saved in the mergedParent field.\n\nIt's a little different scenario than what I was initially led to believe (I thought the scenario would have been the em from step #3 was creating a new entity object instance, here, the row already exists on the db before the test logic runs.)\n\nDoes anyone disagree with this?","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fyrewyld","name":"fyrewyld","key":"fyrewyld","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fyrewyld&avatarId=28040","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fyrewyld&avatarId=28040","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fyrewyld&avatarId=28040","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fyrewyld&avatarId=28040"},"displayName":"Jody Grassel","active":true,"timeZone":"America/Chicago"},"created":"2013-06-28T19:28:28.271+0000","updated":"2013-06-28T19:29:03.256+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12654693/comment/13695758","id":"13695758","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fyrewyld","name":"fyrewyld","key":"fyrewyld","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fyrewyld&avatarId=28040","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fyrewyld&avatarId=28040","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fyrewyld&avatarId=28040","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fyrewyld&avatarId=28040"},"displayName":"Jody Grassel","active":true,"timeZone":"America/Chicago"},"body":"I propose the attached fix for this issue, which allows the reporter's sample test to pass.\n\nBasically the idea is simple: check if the object to be merged (toAttach) has a StateManager associated with it.  If it does and that StateManager is a StateManagerImpl (which DetachedStateManager is not a descendent of) then grab its broker reference.\n\nIf this broker reference is different than the broker being used to perform the merge() operation, then set isManagedByAnotherPCtx=true.\n\nThen modify isNew to the following logic:\n\nboolean isNew = !broker.isDetached(pc) && !isManagedByAnotherPCtx;\n\nBasically, if toAttach is not detached and it is not managed by another persistence context, then it is to be considered a new object.  If toAttach is not detached (because pc.isDetached() is not broker context aware) but if it is managed by some other broker,t hen it should NOT be considered a new object.\n\n(Disclaimer: have not run the full junit suite yet, will do so after posting this.)","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fyrewyld","name":"fyrewyld","key":"fyrewyld","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fyrewyld&avatarId=28040","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fyrewyld&avatarId=28040","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fyrewyld&avatarId=28040","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fyrewyld&avatarId=28040"},"displayName":"Jody Grassel","active":true,"timeZone":"America/Chicago"},"created":"2013-06-28T20:31:52.947+0000","updated":"2013-06-28T20:37:28.449+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12654693/comment/13695767","id":"13695767","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fyrewyld","name":"fyrewyld","key":"fyrewyld","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fyrewyld&avatarId=28040","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fyrewyld&avatarId=28040","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fyrewyld&avatarId=28040","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fyrewyld&avatarId=28040"},"displayName":"Jody Grassel","active":true,"timeZone":"America/Chicago"},"body":"I would also like to take the time to make the reminder that the 2.2.x is managed by IBM, any changes to this branch will need to go through the PMR process.  Otherwise, if the general consensus decides that this is an appropriate fix it will have to go into trunk.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fyrewyld","name":"fyrewyld","key":"fyrewyld","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fyrewyld&avatarId=28040","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fyrewyld&avatarId=28040","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fyrewyld&avatarId=28040","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fyrewyld&avatarId=28040"},"displayName":"Jody Grassel","active":true,"timeZone":"America/Chicago"},"created":"2013-06-28T20:39:27.681+0000","updated":"2013-06-28T20:39:27.681+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12654693/comment/13696961","id":"13696961","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","key":"jira-bot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true,"timeZone":"Etc/UTC"},"body":"Commit 1498565 from [~fyrewyld]\n[ https://svn.apache.org/r1498565 ]\n\nOPENJPA-2405: EntityManager.merge does not work for entity that is managed by another EntityManager","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=jira-bot","name":"jira-bot","key":"jira-bot","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"ASF subversion and git services","active":true,"timeZone":"Etc/UTC"},"created":"2013-07-01T16:58:12.419+0000","updated":"2013-07-01T16:58:12.419+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12654693/comment/13696964","id":"13696964","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fyrewyld","name":"fyrewyld","key":"fyrewyld","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fyrewyld&avatarId=28040","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fyrewyld&avatarId=28040","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fyrewyld&avatarId=28040","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fyrewyld&avatarId=28040"},"displayName":"Jody Grassel","active":true,"timeZone":"America/Chicago"},"body":"Fix has been checked into trunk.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=fyrewyld","name":"fyrewyld","key":"fyrewyld","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=fyrewyld&avatarId=28040","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fyrewyld&avatarId=28040","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fyrewyld&avatarId=28040","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fyrewyld&avatarId=28040"},"displayName":"Jody Grassel","active":true,"timeZone":"America/Chicago"},"created":"2013-07-01T16:58:53.005+0000","updated":"2013-07-01T16:58:53.005+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12654693/comment/13697068","id":"13697068","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arne","name":"arne","key":"arne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arne Limburg","active":true,"timeZone":"Europe/Berlin"},"body":"Thanks for fixing this, Jody. Your suggested (and implemented) behavior matches my expectation :-)\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=arne","name":"arne","key":"arne","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Arne Limburg","active":true,"timeZone":"Europe/Berlin"},"created":"2013-07-01T18:59:08.674+0000","updated":"2013-07-01T18:59:08.674+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12654693/comment/16509048","id":"16509048","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rengels%40ix.netcom.com","name":"rengels@ix.netcom.com","key":"rengels@ix.netcom.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"robert engels","active":true,"timeZone":"America/Chicago"},"body":"I don't think this is working correctly in 2.4.2. I have TomEE 7.0.4 installed, which uses version 2.4.2.\r\n\r\nI have any entity, that has a many to one reference - Customer, contains and Address, which has a many to one reference to Country.\r\n\r\nIn the process of editing, and persisting the Customer (an update) - I load an Country using another EntityManager (via a drop down list search), because I want to change the Country on the customer.\r\n\r\nWhen I use the following code:\r\n\r\n \r\n\r\n \r\n{code:java}\r\npublic String update()\r\n{\r\n   this.conversation.end();\r\n\r\n   try\r\n   {\r\n      if (this.id == null)\r\n      {\r\n         this.entityManager.persist(this.customer);\r\n         return \"search?faces-redirect=true\";\r\n      }\r\n      else\r\n      {\r\n         this.entityManager.merge(customer);\r\n         return \"view?faces-redirect=true&id=\" + this.customer.getId();\r\n      }\r\n   }\r\n   catch (Exception e)\r\n   {\r\n      FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(e.getMessage()));\r\n      return null;\r\n   }\r\n}\r\n\r\n{code}\r\n \r\n\r\n \r\n\r\nI get the following exception:\r\n\r\n \r\n\r\nIf I change the JPA to be eclipselink, it works fine without error, saving properly.\r\n\r\nBtw, this is the standard petstore sample for JaveEE 7 available at [https://github.com/agoncal/agoncal-application-petstore-ee7]\r\n\r\nAlso, it would seem that I should be able to mark the 'many to one' as cascade NEVER and have this work. I would never want to delete the Country when a Customer is deleted ??? Also, the 'Country' entries are maintained in a standalone fashion. It seems like something is broken here in OpenJPA.\r\n\r\n{{11-Jun-2018 20:31:17.191 WARNING [http-nio-8080-exec-3] org.apache.geronimo.transaction.manager.TransactionImpl.beforeCompletion Unexpected exception from beforeCompletion; transaction will roll back}}\r\n{{ <openjpa-2.4.2-r422266:1777108 nonfatal user error> org.apache.openjpa.persistence.ArgumentException: The given instance \"org.agoncal.application.petstore.featureSelection.Country-1225\" is not managed by this context.}}\r\n{{FailedObject: org.agoncal.application.petstore.featureSelection.Country-1225}}\r\n{{ at org.apache.openjpa.kernel.BrokerImpl.getStateManagerImpl(BrokerImpl.java:4650)}}\r\n{{ at org.apache.openjpa.kernel.BrokerImpl.persistInternal(BrokerImpl.java:2614)}}\r\n{{ at org.apache.openjpa.kernel.BrokerImpl.persist(BrokerImpl.java:2602)}}\r\n{{ at org.apache.openjpa.kernel.BrokerImpl.persist(BrokerImpl.java:2585)}}\r\n{{ at org.apache.openjpa.kernel.SingleFieldManager.preFlushPC(SingleFieldManager.java:800)}}\r\n{{ at org.apache.openjpa.kernel.SingleFieldManager.preFlush(SingleFieldManager.java:621)}}\r\n{{ at org.apache.openjpa.kernel.SingleFieldManager.preFlush(SingleFieldManager.java:589)}}\r\n{{ at org.apache.openjpa.kernel.SingleFieldManager.preFlush(SingleFieldManager.java:510)}}\r\n{{ at org.apache.openjpa.kernel.StateManagerImpl.preFlush(StateManagerImpl.java:3055)}}\r\n{{ at org.apache.openjpa.kernel.ECopyState.beforeFlush(ECopyState.java:42)}}\r\n{{ at org.apache.openjpa.kernel.StateManagerImpl.beforeFlush(StateManagerImpl.java:1072)}}\r\n{{ at org.apache.openjpa.kernel.BrokerImpl.flushTransAdditions(BrokerImpl.java:2283)}}\r\n{{ at org.apache.openjpa.kernel.BrokerImpl.flushAdditions(BrokerImpl.java:2262)}}\r\n{{ at org.apache.openjpa.kernel.BrokerImpl.flush(BrokerImpl.java:2144)}}\r\n{{ at org.apache.openjpa.kernel.BrokerImpl.flushSafe(BrokerImpl.java:2103)}}\r\n{{ at org.apache.openjpa.kernel.BrokerImpl.beforeCompletion(BrokerImpl.java:2021)}}\r\n{{ at org.apache.geronimo.transaction.manager.TransactionImpl.beforeCompletion(TransactionImpl.java:527)}}\r\n{{ at org.apache.geronimo.transaction.manager.TransactionImpl.beforeCompletion(TransactionImpl.java:512)}}\r\n{{ at org.apache.geronimo.transaction.manager.TransactionImpl.beforePrepare(TransactionImpl.java:413)}}\r\n{{ at org.apache.geronimo.transaction.manager.TransactionImpl.commit(TransactionImpl.java:262)}}\r\n{{ at org.apache.geronimo.transaction.manager.TransactionManagerImpl.commit(TransactionManagerImpl.java:252)}}\r\n{{ at org.apache.openejb.core.transaction.JtaTransactionPolicy.completeTransaction(JtaTransactionPolicy.java:331)}}\r\n{{ at org.apache.openejb.core.transaction.TxRequired.commit(TxRequired.java:76)}}\r\n{{ at org.apache.openejb.core.transaction.EjbTransactionUtil.afterInvoke(EjbTransactionUtil.java:77)}}\r\n{{ at org.apache.openejb.core.stateful.StatefulContainer.afterInvoke(StatefulContainer.java:930)}}\r\n{{ at org.apache.openejb.core.stateful.StatefulContainer.businessMethod(StatefulContainer.java:737)}}\r\n{{ at org.apache.openejb.core.stateful.StatefulContainer.invoke(StatefulContainer.java:379)}}\r\n{{ at org.apache.openejb.core.ivm.EjbObjectProxyHandler.synchronizedBusinessMethod(EjbObjectProxyHandler.java:265)}}\r\n{{ at org.apache.openejb.core.ivm.EjbObjectProxyHandler.businessMethod(EjbObjectProxyHandler.java:260)}}\r\n{{ at org.apache.openejb.core.ivm.EjbObjectProxyHandler._invoke(EjbObjectProxyHandler.java:89)}}\r\n{{ at org.apache.openejb.core.ivm.BaseEjbProxyHandler.invoke(BaseEjbProxyHandler.java:347)}}\r\n{{ at org.agoncal.application.petstore.view.admin.CustomerBean$$LocalBeanProxy.update(org/agoncal/application/petstore/view/admin/CustomerBean.java)}}\r\n{{ at org.agoncal.application.petstore.view.admin.CustomerBean$$OwbNormalScopeProxy0.update(org/agoncal/application/petstore/view/admin/CustomerBean.java)}}\r\n{{ at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)}}\r\n{{ at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)}}\r\n{{ at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)}}\r\n{{ at java.lang.reflect.Method.invoke(Method.java:498)}}\r\n{{ at org.apache.el.parser.AstValue.invoke(AstValue.java:247)}}\r\n{{ at org.apache.el.MethodExpressionImpl.invoke(MethodExpressionImpl.java:267)}}\r\n{{ at org.apache.webbeans.el22.WrappedMethodExpression.invoke(WrappedMethodExpression.java:52)}}\r\n{{ at com.sun.faces.facelets.el.TagMethodExpression.invoke(TagMethodExpression.java:105)}}\r\n{{ at javax.faces.component.MethodBindingMethodExpressionAdapter.invoke(MethodBindingMethodExpressionAdapter.java:87)}}\r\n{{ at com.sun.faces.application.ActionListenerImpl.processAction(ActionListenerImpl.java:102)}}\r\n{{ at javax.faces.component.UICommand.broadcast(UICommand.java:315)}}\r\n{{ at javax.faces.component.UIViewRoot.broadcastEvents(UIViewRoot.java:790)}}\r\n{{ at javax.faces.component.UIViewRoot.processApplication(UIViewRoot.java:1282)}}\r\n{{ at com.sun.faces.lifecycle.InvokeApplicationPhase.execute(InvokeApplicationPhase.java:81)}}\r\n{{ at com.sun.faces.lifecycle.Phase.doPhase(Phase.java:101)}}\r\n{{ at com.sun.faces.lifecycle.LifecycleImpl.execute(LifecycleImpl.java:198)}}\r\n{{ at javax.faces.webapp.FacesServlet.service(FacesServlet.java:658)}}\r\n{{ at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)}}\r\n{{ at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)}}\r\n{{ at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)}}\r\n{{ at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)}}\r\n{{ at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)}}\r\n{{ at org.apache.openejb.server.httpd.EEFilter.doFilter(EEFilter.java:65)}}\r\n{{ at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)}}\r\n{{ at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)}}\r\n{{ at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)}}\r\n{{ at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)}}\r\n{{ at org.apache.tomee.catalina.OpenEJBValve.invoke(OpenEJBValve.java:44)}}\r\n{{ at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)}}\r\n{{ at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)}}\r\n{{ at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)}}\r\n{{ at org.apache.tomee.catalina.OpenEJBSecurityListener$RequestCapturer.invoke(OpenEJBSecurityListener.java:97)}}\r\n{{ at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:650)}}\r\n{{ at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)}}\r\n{{ at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)}}\r\n{{ at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)}}\r\n{{ at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)}}\r\n{{ at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)}}\r\n{{ at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1457)}}\r\n{{ at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)}}\r\n{{ at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)}}\r\n{{ at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)}}\r\n{{ at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)}}\r\n{{ at java.lang.Thread.run(Thread.java:748)}}\r\n\r\n \r\n\r\n ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rengels%40ix.netcom.com","name":"rengels@ix.netcom.com","key":"rengels@ix.netcom.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"robert engels","active":true,"timeZone":"America/Chicago"},"created":"2018-06-12T01:33:12.361+0000","updated":"2018-06-12T01:33:12.361+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12654693/comment/16509075","id":"16509075","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rengels%40ix.netcom.com","name":"rengels@ix.netcom.com","key":"rengels@ix.netcom.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"robert engels","active":true,"timeZone":"America/Chicago"},"body":"If I change the update code to the following, it works as expected - but again, no need to do this with EclipseLink, and it certainly seems like a bug. If cascading is not enabled for the ManyToOne relationship, it shouldn't even care about the persisted state of the Country object, it should just be using it's ID to form the relation. Only if the Country object had no ID should there be a failure.\r\n\r\n \r\n{code:java}\r\ncustomer.getHomeAddress().setCountry(entityManager.merge(customer.getHomeAddress().getCountry()));\r\nthis.entityManager.merge(customer);\r\nreturn \"view?faces-redirect=true&id=\" + this.customer.getId();\r\n\r\n{code}","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rengels%40ix.netcom.com","name":"rengels@ix.netcom.com","key":"rengels@ix.netcom.com","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"robert engels","active":true,"timeZone":"America/Chicago"},"created":"2018-06-12T02:03:35.044+0000","updated":"2018-06-12T02:03:35.044+0000"}],"maxResults":19,"total":19,"startAt":0},"customfield_12311820":"0|i1ls4v:","customfield_12314139":null}}

