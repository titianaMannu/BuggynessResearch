{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12374560","self":"https://issues.apache.org/jira/rest/api/2/issue/12374560","key":"OPENJPA-295","fields":{"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312687","id":"12312687","description":"","name":"1.0.1","archived":false,"released":true,"releaseDate":"2007-11-09"},{"self":"https://issues.apache.org/jira/rest/api/2/version/12312344","id":"12312344","description":"","name":"1.1.0","archived":false,"released":true,"releaseDate":"2008-05-22"}],"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12312323":null,"customfield_12312320":null,"customfield_12310420":"160621","customfield_12312321":null,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12312331":null,"customfield_12312332":null,"aggregatetimeoriginalestimate":null,"timeestimate":null,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312342","id":"12312342","description":"","name":"0.9.6","archived":true,"released":true,"releaseDate":"2006-11-29"}],"customfield_12311120":null,"customfield_12313826":null,"customfield_12312339":null,"issuelinks":[{"id":"12317054","self":"https://issues.apache.org/jira/rest/api/2/issueLink/12317054","type":{"id":"10030","name":"Reference","inward":"is related to","outward":"relates to","self":"https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"},"outwardIssue":{"id":"12375541","key":"OPENJPA-310","self":"https://issues.apache.org/jira/rest/api/2/issue/12375541","fields":{"summary":"Rework ManagedRuntime to make better use of TransactionSynchronizationRegistry","status":{"self":"https://issues.apache.org/jira/rest/api/2/status/1","description":"The issue is open and ready for the assignee to start work on it.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/open.png","name":"Open","id":"1","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/2","id":2,"key":"new","colorName":"blue-gray","name":"To Do"}},"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/4","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/minor.svg","name":"Minor","id":"4"},"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/4","id":"4","description":"An improvement or enhancement to an existing feature or task.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype","name":"Improvement","subtask":false,"avatarId":21140}}}}],"customfield_12313825":null,"assignee":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikedd","name":"mikedd","key":"mikedd","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Dick","active":true,"timeZone":"America/Chicago"},"customfield_12312337":null,"customfield_12313823":null,"customfield_12312338":null,"customfield_12311920":null,"customfield_12313822":null,"customfield_12312335":null,"customfield_12313821":null,"customfield_12312336":null,"customfield_12313820":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12311304","id":"12311304","name":"jpa","description":"Java Persistence API interface"}],"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"aggregatetimeestimate":null,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"203432","customfield_12312823":null,"creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rob.wisniewski","name":"rob.wisniewski","key":"rob.wisniewski","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rob Wisniewski","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rob.wisniewski","name":"rob.wisniewski","key":"rob.wisniewski","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rob Wisniewski","active":true,"timeZone":"Etc/UTC"},"aggregateprogress":{"progress":0,"total":0},"customfield_12313520":null,"customfield_12310250":null,"progress":{"progress":0,"total":0},"customfield_12313924":null,"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/OPENJPA-295/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12313920":null,"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"customfield_12314020":"{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@45db9ec1[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2e40a96d[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@684a8c12[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@436a5bb7[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7db9309b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@7d0cf3bf[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@419aca10[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@50bc8677[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@64b55913[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7e3ecf31[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@69e340ac[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5dd8fcd9[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}","customfield_12314141":null,"customfield_12314140":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310351","id":"12310351","key":"OPENJPA","name":"OpenJPA","projectTypeKey":"software","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310351&avatarId=10043","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310351&avatarId=10043","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310351&avatarId=10043","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310351&avatarId=10043"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10252","id":"10252","description":"","name":"OpenJPA"}},"aggregatetimespent":null,"customfield_12312520":null,"customfield_12314422":null,"customfield_12314421":null,"customfield_12314146":null,"customfield_12314420":null,"customfield_12314145":null,"customfield_12314144":null,"customfield_12314143":null,"resolutiondate":"2007-08-08T17:50:31.439+0000","workratio":-1,"customfield_12312923":null,"customfield_12312920":null,"customfield_12312921":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/OPENJPA-295/watchers","watchCount":0,"isWatching":false},"created":"2007-07-25T16:15:24.423+0000","updated":"2007-10-12T15:59:16.188+0000","timeoriginalestimate":null,"description":"Recent development builds of our WAS products as well as the Geronimo project are seeing exceptions when running under load.  An example of the exception is below:\n\nCaused by: \njava.lang.ArrayIndexOutOfBoundsException\n\tat java.util.ArrayList.add(ArrayList.java:378)\n\tat org.apache.openjpa.kernel.AbstractBrokerFactory.syncWithManagedTransaction(AbstractBrokerFactory.java:684)\n\t... 39 more\n\nThis is the deepest trace I can get with the actual exception, but the wrappering exception shows this stack trace for geronimo:\n\n<1.0.0-SNAPSHOT-SNAPSHOT nonfatal general error> org.apache.openjpa.persistence.PersistenceException: null\n\tat org.apache.openjpa.kernel.AbstractBrokerFactory.syncWithManagedTransaction(AbstractBrokerFactory.java:690)\n\tat org.apache.openjpa.kernel.BrokerImpl.initialize(BrokerImpl.java:304)\n\tat org.apache.openjpa.kernel.AbstractBrokerFactory.newBroker(AbstractBrokerFactory.java:182)\n\tat org.apache.openjpa.kernel.DelegatingBrokerFactory.newBroker(DelegatingBrokerFactory.java:142)\n\tat org.apache.openjpa.persistence.EntityManagerFactoryImpl.createEntityManager(EntityManagerFactoryImpl.java:190)\n\tat org.apache.openjpa.persistence.EntityManagerFactoryImpl.createEntityManager(EntityManagerFactoryImpl.java:55)\n\tat org.apache.geronimo.persistence.CMPEntityManagerTxScoped.createEntityManager(CMPEntityManagerTxScoped.java:74)\n\tat org.apache.geronimo.persistence.CMPEntityManagerTxScoped.getEntityManager(CMPEntityManagerTxScoped.java:55)\n\tat org.apache.geronimo.persistence.CMPEntityManagerTxScoped.createNamedQuery(CMPEntityManagerTxScoped.java:259)\n\tat org.apache.geronimo.samples.daytrader.ejb3.TradeSLSBBean.getClosedOrders(TradeSLSBBean.java:335)\n\nThis is happening in two separate products with two different JTA implementations, and also both of these products were working at one point.\n\nAny ideas?\n","customfield_10010":null,"timetracking":{},"customfield_12314523":null,"customfield_12314127":null,"customfield_12314522":null,"customfield_12314126":null,"customfield_12314521":null,"customfield_12314125":null,"customfield_12314520":null,"customfield_12314124":null,"attachment":[{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12363140","id":"12363140","filename":"OPENJPA-295.diff.txt","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikedd","name":"mikedd","key":"mikedd","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Dick","active":true,"timeZone":"America/Chicago"},"created":"2007-08-03T16:48:00.536+0000","size":12893,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12363140/OPENJPA-295.diff.txt"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12363077","id":"12363077","filename":"OPENJPA295.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mprudhom","name":"mprudhom","key":"mprudhom","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mprudhom&avatarId=45285","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mprudhom&avatarId=45285","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mprudhom&avatarId=45285","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mprudhom&avatarId=45285"},"displayName":"Marc Prud'hommeaux","active":true,"timeZone":"America/New_York"},"created":"2007-08-02T17:51:21.054+0000","size":5898,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12363077/OPENJPA295.patch"},{"self":"https://issues.apache.org/jira/rest/api/2/attachment/12363101","id":"12363101","filename":"openjpa-295.patch","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","key":"clr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=clr&avatarId=38583","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=clr&avatarId=38583","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=clr&avatarId=38583","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=clr&avatarId=38583"},"displayName":"Craig L Russell","active":true,"timeZone":"America/Los_Angeles"},"created":"2007-08-03T04:32:34.132+0000","size":11065,"mimeType":"text/plain","content":"https://issues.apache.org/jira/secure/attachment/12363101/openjpa-295.patch"}],"customfield_12312340":null,"customfield_12314123":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12314122":null,"customfield_12314121":null,"customfield_12310041":null,"customfield_12314120":null,"customfield_12314129":null,"customfield_12314524":null,"customfield_12314128":null,"summary":"ArrayIndexOutofBoundsException when under load and within a managed Transaction","customfield_12314130":null,"customfield_12310291":null,"customfield_12310290":null,"customfield_12314138":null,"customfield_12314137":null,"environment":"openjpa running under WebSphere development builds, as well as Geronimo development builds","customfield_12314136":null,"customfield_12314135":null,"customfield_12311020":null,"customfield_12314134":null,"duedate":null,"customfield_12314132":null,"customfield_12314131":null,"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12374560/comment/12515344","id":"12515344","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pcl","name":"pcl","key":"pcl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Patrick Linskey","active":true,"timeZone":"America/Los_Angeles"},"body":"We should be creating a concurrent data structure instead of an ArrayList a couple of lines above where you're getting the exception. I can't create a patch easily right now as I've made significant uncommitted changes to that file.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pcl","name":"pcl","key":"pcl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Patrick Linskey","active":true,"timeZone":"America/Los_Angeles"},"created":"2007-07-25T16:40:52.618+0000","updated":"2007-07-25T16:40:52.618+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12374560/comment/12515355","id":"12515355","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mprudhom","name":"mprudhom","key":"mprudhom","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mprudhom&avatarId=45285","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mprudhom&avatarId=45285","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mprudhom&avatarId=45285","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mprudhom&avatarId=45285"},"displayName":"Marc Prud'hommeaux","active":true,"timeZone":"America/New_York"},"body":"Could the application somehow be using the same JTA transaction from different threads? The reason we don't synchronize at AbstractBrokerFactory:684 is that we don't expect to ever be able to have multiple threads accessing the list of brokers, since it is keyed off of the JTA transaction (which is supposed to be thread-bound).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mprudhom","name":"mprudhom","key":"mprudhom","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mprudhom&avatarId=45285","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mprudhom&avatarId=45285","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mprudhom&avatarId=45285","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mprudhom&avatarId=45285"},"displayName":"Marc Prud'hommeaux","active":true,"timeZone":"America/New_York"},"created":"2007-07-25T17:21:40.677+0000","updated":"2007-07-25T17:21:40.677+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12374560/comment/12515389","id":"12515389","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rob.wisniewski","name":"rob.wisniewski","key":"rob.wisniewski","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rob Wisniewski","active":true,"timeZone":"Etc/UTC"},"body":"It's a long shot that both of these products would be having the same problem..  we're trying to switch out jpa implementations and see if the problem goes away.  earlier builds of the products built on 0.9.7 work fine while the 1.0.0 based builds fail.. trying to retrofit 0.9.7 into the newer builds.  Also synchonizing the set locally here to see if that gets rid of the problem.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=rob.wisniewski","name":"rob.wisniewski","key":"rob.wisniewski","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Rob Wisniewski","active":true,"timeZone":"Etc/UTC"},"created":"2007-07-25T19:15:11.687+0000","updated":"2007-07-25T19:15:11.687+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12374560/comment/12515430","id":"12515430","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikedd","name":"mikedd","key":"mikedd","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Dick","active":true,"timeZone":"America/Chicago"},"body":"Attaching a simple patch based on Patrick's comments. The patch uses a ConcurrentSet (arbitrarily chosen) instead of an ArrayList. \n\nI also sent a jar containing this change to Rob earlier today and it looks like it resolved the problem. \n\nI'm hesitating to commit the fix until we understand what else changed between 0.9.7 and now. A quick diff shows no changes to the AbstractBrokerFactory.syncWithManagedTransaction method and only a few in AbstractBrokerFactory as a whole. \n\nI believe the current builds are faster than 0.9.7 (at least for Rob's application) so it's possible that we're just hitting a timing window that we couldn't before.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikedd","name":"mikedd","key":"mikedd","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Dick","active":true,"timeZone":"America/Chicago"},"created":"2007-07-25T21:43:41.427+0000","updated":"2007-07-25T21:43:41.427+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12374560/comment/12517291","id":"12517291","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikedd","name":"mikedd","key":"mikedd","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Dick","active":true,"timeZone":"America/Chicago"},"body":"Getting back to Marc's comment. I think the difference in this case is that WebSphere Application Server (and I'm guessing Geronimo) use the TransactionSynchronizationRegistry. \n\nWhen we use the TSR to get a TransactionManager it returns a TransactionManagerFacade (a singleton), calling getTransaction() on the facade returns a singleton (itself) as well. If I haven't misread the code, we'll hit this problem fairly quickly with any Application Server that uses the TSR.\n\nI can think of two potential fixes (assuming I've identified the problem correctly) : \n\n1. Use a concurrent set (similar to the patch I attached earlier). \n\n2. The TSR API provides a getTransactionKey() method. The TransactionManagerFacade could be modified to return a new \"TransactionFacade\" Object when getTransaction is called. The TransactionFacade could use the transactionKey's hashcode (which should be unique to each transaction), and we'll avoid the collision. \n\nDoes anyone see a problem with either approach (or something I've missed) ? \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikedd","name":"mikedd","key":"mikedd","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Dick","active":true,"timeZone":"America/Chicago"},"created":"2007-08-02T15:23:54.345+0000","updated":"2007-08-02T15:23:54.345+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12374560/comment/12517324","id":"12517324","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mprudhom","name":"mprudhom","key":"mprudhom","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mprudhom&avatarId=45285","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mprudhom&avatarId=45285","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mprudhom&avatarId=45285","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mprudhom&avatarId=45285"},"displayName":"Marc Prud'hommeaux","active":true,"timeZone":"America/New_York"},"body":"I bet you're right. Good catch!\n\nAnother solution might be to use the following patch: it changes RegistryManagedRuntime.java to use a ThreadLocal to hold its Transaction facades, rather than just having a single global one, which should mean that multiple threads never get the same Transaction facade. I would be interested in hearing if the patch works for you.\n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mprudhom","name":"mprudhom","key":"mprudhom","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mprudhom&avatarId=45285","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mprudhom&avatarId=45285","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mprudhom&avatarId=45285","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mprudhom&avatarId=45285"},"displayName":"Marc Prud'hommeaux","active":true,"timeZone":"America/New_York"},"created":"2007-08-02T17:51:21.256+0000","updated":"2007-08-02T17:51:21.256+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12374560/comment/12517373","id":"12517373","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","key":"clr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=clr&avatarId=38583","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=clr&avatarId=38583","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=clr&avatarId=38583","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=clr&avatarId=38583"},"displayName":"Craig L Russell","active":true,"timeZone":"America/Los_Angeles"},"body":"Hi Marc,\n\nThere should not be any issue using the identical instance of TSR for the registerSynchronization, get/setRollbackOnly, and getStatus methods. The issue is the assumption that the Transaction instance is different for each transaction.\n\nI think that Michael Dick's #2 solution is needed. The _transactional is already a concurrent map but all the keys are identical so the basic premise doesn't work.\n\nMore basic, the AbstractBrokerFactory method findTransactionalBroker should have a different implementation for TSR, which has direct support for this functionality via the getResource and putResource methods. I think I'd rather delegate the \"findTransactionalBroker\" to the ManagedRuntime, which could do the current behavior in other than TSR environments but delegate to the TSR behavior in the app server.\n\nBack to the current problem how about adding Object getTransactionKey() to ManagedRuntime which in non-TSR implementations returns \"this\" and in TSR returns \"this.getTransactionKey()\".","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","key":"clr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=clr&avatarId=38583","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=clr&avatarId=38583","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=clr&avatarId=38583","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=clr&avatarId=38583"},"displayName":"Craig L Russell","active":true,"timeZone":"America/Los_Angeles"},"created":"2007-08-02T21:14:00.114+0000","updated":"2007-08-02T21:14:00.114+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12374560/comment/12517384","id":"12517384","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mprudhom","name":"mprudhom","key":"mprudhom","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mprudhom&avatarId=45285","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mprudhom&avatarId=45285","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mprudhom&avatarId=45285","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mprudhom&avatarId=45285"},"displayName":"Marc Prud'hommeaux","active":true,"timeZone":"America/New_York"},"body":"My patch doesn't use a different TSR per thread, it just put a different instance of the javax.transaction.Transaction into the ThreadLocal, so that a different Transaction is used per thread (as per the JTA spec). \n\nThat being said, there are plenty of other solutions to this problem. The advantage I see to my solution is that it doesn't introduce additional unnecessary synchronizatin into the findTransactionalBroker() method. However, even if a different solution is desired, my patch should probably be applied anyway, since having the same Transaction instance being used from multiple threads might break other assumptions elsewhere.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mprudhom","name":"mprudhom","key":"mprudhom","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=mprudhom&avatarId=45285","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=mprudhom&avatarId=45285","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=mprudhom&avatarId=45285","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=mprudhom&avatarId=45285"},"displayName":"Marc Prud'hommeaux","active":true,"timeZone":"America/New_York"},"created":"2007-08-02T21:40:45.546+0000","updated":"2007-08-02T21:40:45.546+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12374560/comment/12517388","id":"12517388","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","key":"clr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=clr&avatarId=38583","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=clr&avatarId=38583","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=clr&avatarId=38583","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=clr&avatarId=38583"},"displayName":"Craig L Russell","active":true,"timeZone":"America/Los_Angeles"},"body":"The attached patch adds a new method getTransactionKey to ManagedRuntime and uses this key to manage the Map<Transaction, Broker> map. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","key":"clr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=clr&avatarId=38583","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=clr&avatarId=38583","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=clr&avatarId=38583","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=clr&avatarId=38583"},"displayName":"Craig L Russell","active":true,"timeZone":"America/Los_Angeles"},"created":"2007-08-02T22:11:50.224+0000","updated":"2007-08-02T22:11:50.224+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12374560/comment/12517394","id":"12517394","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikedd","name":"mikedd","key":"mikedd","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Dick","active":true,"timeZone":"America/Chicago"},"body":"I agree with Marc and Craig that some variation of solution 2 is the best option (I see Marc's patch as one of these variations).\n\nThat being said I think there are cases where we will need to return a separate TransactionFacade instance if the transaction key is different. \n\nIf the container has suspended that current transaction and started a new one (a bean method with TX_REQUIRES_NEW calls another bean method with TX_REQUIRES_NEW) we'll need a separate key to the _transactions collection. If they used the same key then we'd run into problems the first time an AfterCompletion event is fired. \n\nBetween Marc and Craig's patches I think we're pretty close, I just haven't had a change to play with it much (yet) today. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikedd","name":"mikedd","key":"mikedd","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Dick","active":true,"timeZone":"America/Chicago"},"created":"2007-08-02T22:27:03.151+0000","updated":"2007-08-02T22:27:03.151+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12374560/comment/12517395","id":"12517395","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","key":"clr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=clr&avatarId=38583","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=clr&avatarId=38583","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=clr&avatarId=38583","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=clr&avatarId=38583"},"displayName":"Craig L Russell","active":true,"timeZone":"America/Los_Angeles"},"body":"> My patch doesn't use a different TSR per thread, it just put a different instance of the javax.transaction.Transaction into the ThreadLocal, so that a different Transaction is used per thread (as per the JTA spec). \n\nWell, we are only using the Transaction interface to do a small number of things, and while it may seem attractive to use a ThreadLocal for this, it's a bit bizarre because the same ThreadLocal is permanently assigned to the thread so the Transaction never changes. This is not per the JTA spec ;-)\n\n> That being said, there are plenty of other solutions to this problem. The advantage I see to my solution is that it doesn't introduce additional unnecessary synchronizatin into the findTransactionalBroker() method. However, even if a different solution is desired, my patch should probably be applied anyway, since having the same Transaction instance being used from multiple threads might break other assumptions elsewhere.\n\nI think in the case of TSR, there is a much more elegant solution to findTransactionalBroker, by using the getResource and setResource methods. These methods should be much more efficient than our own synchronized _transactional.get(key). Then the only use for _transactional is to make sure that there are no outstanding transactions in progress when we try to close the EntityManagerFactory.\n\nSo I'd like to extend ManagedRuntime with a findTransactionalBroker method that would allow the RegistryManagedRuntime to be more efficient, and put the current AbstractBrokerFactory's implementation into AbstractManagedRuntime.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","key":"clr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=clr&avatarId=38583","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=clr&avatarId=38583","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=clr&avatarId=38583","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=clr&avatarId=38583"},"displayName":"Craig L Russell","active":true,"timeZone":"America/Los_Angeles"},"created":"2007-08-02T22:30:36.828+0000","updated":"2007-08-02T22:30:36.828+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12374560/comment/12517420","id":"12517420","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pcl","name":"pcl","key":"pcl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Patrick Linskey","active":true,"timeZone":"America/Los_Angeles"},"body":"> So I'd like to extend ManagedRuntime with a findTransactionalBroker method \n> that would allow the RegistryManagedRuntime to be more efficient, and put the \n> current AbstractBrokerFactory's implementation into AbstractManagedRuntime.\n\n+1","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pcl","name":"pcl","key":"pcl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Patrick Linskey","active":true,"timeZone":"America/Los_Angeles"},"created":"2007-08-03T01:13:02.723+0000","updated":"2007-08-03T01:13:02.723+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12374560/comment/12517424","id":"12517424","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","key":"clr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=clr&avatarId=38583","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=clr&avatarId=38583","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=clr&avatarId=38583","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=clr&avatarId=38583"},"displayName":"Craig L Russell","active":true,"timeZone":"America/Los_Angeles"},"body":"Michael said:\n>That being said I think there are cases where we will need to return a separate TransactionFacade instance if the transaction key is different. \n\nTSR was designed so this is not needed. Getting the transaction key is supposed to be a trivial operation so there's no need to remember (cache) it.\n\n>If the container has suspended that current transaction and started a new one (a bean method with TX_REQUIRES_NEW calls another bean method with TX_REQUIRES_NEW) we'll need a separate key to the _transactions collection. If they used the same key then we'd run into problems the first time an AfterCompletion event is fired. \n\nAs long as we never cache the transaction key, but look it up each time we need it, we're good. That is, any time you need to do anything with the transaction key, get it from the ManagedRuntime. It's guaranteed to give you the *current* transaction key. \n\nThe usage of the cached key in RemoveTransactionSync is ok because it's called after the transaction which was registered has completed. And the broker you want to remove from _transactional has that key.\n\nI've attached a new patch that makes the internally cached transaction key an Object instead of a Transaction.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","key":"clr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=clr&avatarId=38583","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=clr&avatarId=38583","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=clr&avatarId=38583","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=clr&avatarId=38583"},"displayName":"Craig L Russell","active":true,"timeZone":"America/Los_Angeles"},"created":"2007-08-03T02:16:48.242+0000","updated":"2007-08-03T02:16:48.242+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12374560/comment/12517427","id":"12517427","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikedd","name":"mikedd","key":"mikedd","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Dick","active":true,"timeZone":"America/Chicago"},"body":"I deleted the original bad patch. \n\n+1 to Craig's approach (now that I see what he meant). AbstractManagedRuntime seems to be missing from the patch. I'm guessing LocalManagedRuntime will also extend AbstractManagedRuntime. \n\nI'll run a sniff test with WebSphere Application Server in the morning. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikedd","name":"mikedd","key":"mikedd","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Dick","active":true,"timeZone":"America/Chicago"},"created":"2007-08-03T03:22:11.642+0000","updated":"2007-08-03T03:22:11.642+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12374560/comment/12517436","id":"12517436","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","key":"clr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=clr&avatarId=38583","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=clr&avatarId=38583","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=clr&avatarId=38583","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=clr&avatarId=38583"},"displayName":"Craig L Russell","active":true,"timeZone":"America/Los_Angeles"},"body":"Sorry, forgot to svn add the new abstract class before svn diff. The new patch includes the new class.\n\nI still have not put the findBroker method into the ManagedRuntime pending a bit more discussion.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","key":"clr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=clr&avatarId=38583","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=clr&avatarId=38583","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=clr&avatarId=38583","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=clr&avatarId=38583"},"displayName":"Craig L Russell","active":true,"timeZone":"America/Los_Angeles"},"created":"2007-08-03T04:32:34.270+0000","updated":"2007-08-03T04:32:34.270+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12374560/comment/12517555","id":"12517555","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikedd","name":"mikedd","key":"mikedd","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Dick","active":true,"timeZone":"America/Chicago"},"body":"The attached patch is very similar to Craig's last one. I changed the type of\nRegistryManagedRuntime._tm to TransactionManagerRegistryFacade, and made LocalManagedRuntime extend AbstractManagedRuntime. \n\nOf course there could be better solutions, but this worked for me. A very simple test with WebSphere Application Server proved that we aren't missing anything terribly obvious, but it'd be nice to get validation that this did resolve the issue (I've never reproduced the problem).","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikedd","name":"mikedd","key":"mikedd","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Dick","active":true,"timeZone":"America/Chicago"},"created":"2007-08-03T15:01:24.391+0000","updated":"2007-08-03T15:01:24.391+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12374560/comment/12517576","id":"12517576","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikedd","name":"mikedd","key":"mikedd","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Dick","active":true,"timeZone":"America/Chicago"},"body":"Previous patch had a bug in AutomaticManagedRuntime - it wasn't delegating to the real ManagedRuntime's getTransactionKey method. \n","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikedd","name":"mikedd","key":"mikedd","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Dick","active":true,"timeZone":"America/Chicago"},"created":"2007-08-03T16:48:00.609+0000","updated":"2007-08-03T16:48:00.609+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12374560/comment/12517592","id":"12517592","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikedd","name":"mikedd","key":"mikedd","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Dick","active":true,"timeZone":"America/Chicago"},"body":"I sent the OPENJPA-295.diff.txt patch to Rob and he confirmed that it does resolve the problem. I'll commit those changes but leave the JIRA open in case we want to discus the findBroker change here too. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikedd","name":"mikedd","key":"mikedd","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Dick","active":true,"timeZone":"America/Chicago"},"created":"2007-08-03T17:27:53.105+0000","updated":"2007-08-03T17:27:53.105+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12374560/comment/12517676","id":"12517676","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","key":"clr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=clr&avatarId=38583","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=clr&avatarId=38583","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=clr&avatarId=38583","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=clr&avatarId=38583"},"displayName":"Craig L Russell","active":true,"timeZone":"America/Los_Angeles"},"body":"Looking at how to use the TSR map of object->object instead of the _transactional, we would need to make a change to the AbstractBrokerFactory method BrokerImpl findTransactionalBroker(String user, String pass). The change would delegate to the ManagedRuntime which might have a better way to look up the Broker in the context of the current transaction.\n\nThe _transactional map is a map of TransactionKey to Broker. This is needed for a completely different purpose (keeping track of whether there are any Brokers with open transactions). \n\nThe issue is separation of concerns. Currently the ManagedRuntime doesn't really know anything about Brokers or transaction maps. To implement the findTransactionalBroker entirely in ManagedRuntime would introduce a lot of broker-aware code. We could simply have ManagedRuntime know about a Map of Transaction to Object, and do the rest of the processing in AbstractBrokerFactory. This would separate functionality but not completely.\n\nWith this separation, the ManagedRuntime would have a new method Object getByTransactionKey(Object brokerFactory, Map transactional) that returns the entry associated with the current transaction (which it knows how to get) in the Map parameter (Abstract implementation) or the entry associated with the TSR Map using the brokerFactory as the key. This is not completely abstract but pretty close.\n\nBut if we do all that, we should probably look at delegating most of the syncWithManagedTransaction to the ManagedRuntime as well...","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","key":"clr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=clr&avatarId=38583","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=clr&avatarId=38583","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=clr&avatarId=38583","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=clr&avatarId=38583"},"displayName":"Craig L Russell","active":true,"timeZone":"America/Los_Angeles"},"created":"2007-08-04T00:52:46.854+0000","updated":"2007-08-04T00:52:46.854+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12374560/comment/12518513","id":"12518513","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pcl","name":"pcl","key":"pcl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Patrick Linskey","active":true,"timeZone":"America/Los_Angeles"},"body":"It looks like the main feature is resolved here, and the issue is open for follow-on work. I'm going to remove the 1.0.0 designation and downgrade the issue to \"Major\" from \"Blocking\".","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=pcl","name":"pcl","key":"pcl","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Patrick Linskey","active":true,"timeZone":"America/Los_Angeles"},"created":"2007-08-08T17:21:58.971+0000","updated":"2007-08-08T17:21:58.971+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12374560/comment/12518522","id":"12518522","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","key":"clr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=clr&avatarId=38583","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=clr&avatarId=38583","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=clr&avatarId=38583","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=clr&avatarId=38583"},"displayName":"Craig L Russell","active":true,"timeZone":"America/Los_Angeles"},"body":"This issue is resolved. See OPENJPA-310 for more discussion on possible refactoring of the implementation.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=clr","name":"clr","key":"clr","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?ownerId=clr&avatarId=38583","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=clr&avatarId=38583","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=clr&avatarId=38583","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=clr&avatarId=38583"},"displayName":"Craig L Russell","active":true,"timeZone":"America/Los_Angeles"},"created":"2007-08-08T17:50:31.427+0000","updated":"2007-08-08T17:50:31.427+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12374560/comment/12528484","id":"12528484","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikedd","name":"mikedd","key":"mikedd","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Dick","active":true,"timeZone":"America/Chicago"},"body":"Already fixed in 1.0.1. ","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=mikedd","name":"mikedd","key":"mikedd","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Michael Dick","active":true,"timeZone":"America/Chicago"},"created":"2007-09-18T18:14:56.962+0000","updated":"2007-09-18T18:14:56.962+0000"}],"maxResults":22,"total":22,"startAt":0},"customfield_12311820":"0|i0z6z3:","customfield_12314139":null}}

