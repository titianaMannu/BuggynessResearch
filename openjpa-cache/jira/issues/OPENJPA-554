{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"12392967","self":"https://issues.apache.org/jira/rest/api/2/issue/12392967","key":"OPENJPA-554","fields":{"fixVersions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312969","id":"12312969","description":"","name":"1.0.3","archived":false,"released":true,"releaseDate":"2008-07-23"}],"resolution":{"self":"https://issues.apache.org/jira/rest/api/2/resolution/1","id":"1","description":"A fix for this issue is checked into the tree and tested.","name":"Fixed"},"customfield_12312322":null,"customfield_12312323":null,"customfield_12312320":null,"customfield_12310420":"160870","customfield_12312321":null,"customfield_12312328":null,"customfield_12312329":null,"customfield_12312326":null,"customfield_12310300":null,"customfield_12312327":null,"customfield_12312324":null,"customfield_12312720":null,"customfield_12312325":null,"lastViewed":null,"priority":{"self":"https://issues.apache.org/jira/rest/api/2/priority/3","iconUrl":"https://issues.apache.org/jira/images/icons/priorities/major.svg","name":"Major","id":"3"},"labels":[],"customfield_12312333":null,"customfield_12312334":null,"customfield_12313422":"false","customfield_12312331":null,"customfield_12312332":null,"aggregatetimeoriginalestimate":172800,"timeestimate":172800,"customfield_12312330":null,"versions":[{"self":"https://issues.apache.org/jira/rest/api/2/version/12312846","id":"12312846","description":"","name":"1.0.2","archived":false,"released":true,"releaseDate":"2008-02-18"}],"customfield_12311120":null,"customfield_12313826":null,"customfield_12312339":null,"issuelinks":[],"customfield_12313825":null,"assignee":null,"customfield_12312337":null,"customfield_12313823":null,"customfield_12312338":null,"customfield_12311920":null,"customfield_12313822":null,"customfield_12312335":null,"customfield_12313821":null,"customfield_12312336":null,"customfield_12313820":null,"status":{"self":"https://issues.apache.org/jira/rest/api/2/status/6","description":"The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.","iconUrl":"https://issues.apache.org/jira/images/icons/statuses/closed.png","name":"Closed","id":"6","statusCategory":{"self":"https://issues.apache.org/jira/rest/api/2/statuscategory/3","id":3,"key":"done","colorName":"green","name":"Done"}},"components":[{"self":"https://issues.apache.org/jira/rest/api/2/component/12311300","id":"12311300","name":"jdbc","description":"jdbc interface"}],"customfield_12312026":null,"customfield_12312023":null,"customfield_12312024":null,"aggregatetimeestimate":172800,"customfield_12312022":null,"customfield_12310921":null,"customfield_12310920":"203472","customfield_12312823":null,"creator":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=joe+weinstein","name":"joe weinstein","key":"joe weinstein","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Joe Weinstein","active":true,"timeZone":"Etc/UTC"},"subtasks":[],"reporter":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=joe+weinstein","name":"joe weinstein","key":"joe weinstein","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Joe Weinstein","active":true,"timeZone":"Etc/UTC"},"aggregateprogress":{"progress":0,"total":172800,"percent":0},"customfield_12313520":null,"customfield_12310250":null,"progress":{"progress":0,"total":172800,"percent":0},"customfield_12313924":null,"votes":{"self":"https://issues.apache.org/jira/rest/api/2/issue/OPENJPA-554/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]},"customfield_12313920":null,"issuetype":{"self":"https://issues.apache.org/jira/rest/api/2/issuetype/1","id":"1","description":"A problem which impairs or prevents the functions of the product.","iconUrl":"https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype","name":"Bug","subtask":false,"avatarId":21133},"timespent":null,"customfield_12314020":"{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6fd78f1f[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4001289b[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1ada50f0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5356e6c0[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@b9e4b0e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@76c810a0[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3e5d8359[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5a5902b4[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@23e6f4ca[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@151dad06[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4788b3b7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@55565550[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}","customfield_12314141":null,"customfield_12314140":null,"project":{"self":"https://issues.apache.org/jira/rest/api/2/project/12310351","id":"12310351","key":"OPENJPA","name":"OpenJPA","projectTypeKey":"software","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/projectavatar?pid=12310351&avatarId=10043","24x24":"https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12310351&avatarId=10043","16x16":"https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12310351&avatarId=10043","32x32":"https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12310351&avatarId=10043"},"projectCategory":{"self":"https://issues.apache.org/jira/rest/api/2/projectCategory/10252","id":"10252","description":"","name":"OpenJPA"}},"aggregatetimespent":null,"customfield_12312520":null,"customfield_12314422":null,"customfield_12314421":null,"customfield_12314146":null,"customfield_12314420":null,"customfield_12314145":null,"customfield_12314144":null,"customfield_12314143":null,"resolutiondate":"2008-04-07T16:27:09.262+0000","workratio":0,"customfield_12312923":null,"customfield_12312920":null,"customfield_12312921":null,"watches":{"self":"https://issues.apache.org/jira/rest/api/2/issue/OPENJPA-554/watchers","watchCount":0,"isWatching":false},"created":"2008-04-02T19:47:11.213+0000","updated":"2010-03-09T18:32:49.819+0000","timeoriginalestimate":172800,"description":"A generated select query asks for one of it's columns returned as\na subselect, and then asks that the results be ordered by that subselect.\nThe DBMS is throwing a spurious error message, saying that in order to\ndo a SELECT DISTINCT/ORDER BY, the select list has to contain the\ncolumn to be ordered by. It's spurious because the query clearly does\nlist the identical subselect in the select list and the order-by, but the DBMS\nis apparently not smart enough to equate those.\n\nHere is a slightly simplified example:\n\n      s.executeQuery(\"SELECT DISTINCT \"\n              + \"    t0.id, \"\n              + \"    (SELECT PMH_testPCKeyStringValue.value \"\n              + \"     FROM PMH_testPCKeyStringValue \"\n              + \"     WHERE PMH_testPCKeyStringValue.PERSISTENTMAPHOLDER_ID = t0.id \"\n              + \"     AND PMH_testPCKeyStringValue.testPCKeyStringValue = 1) \"\n              + \"FROM PMH t0 \"\n              + \"INNER JOIN PMH_testPCKeyStringValue t1 ON t0.id = t1.PERSISTENTMAPHOLDER_ID \"\n              + \"WHERE (\"\n              + \"    (SELECT PMH_testPCKeyStringValue.value \"\n              + \"     FROM PMH_testPCKeyStringValue \"\n              + \"     WHERE PMH_testPCKeyStringValue.PERSISTENTMAPHOLDER_ID = t0.id \"\n              + \"     AND PMH_testPCKeyStringValue.testPCKeyStringValue = 1) \"\n              + \"     IS NOT NULL) \"\n              + \"ORDER BY \"\n              + \"    (SELECT PMH_testPCKeyStringValue.value \"\n              + \"     FROM PMH_testPCKeyStringValue \"\n              + \"     WHERE PMH_testPCKeyStringValue.PERSISTENTMAPHOLDER_ID = t0.id \"\n              + \"     AND PMH_testPCKeyStringValue.testPCKeyStringValue = 1) \"\n              + \"DESC\");\n\nThe actual SQL generated has parameter markers for the testPCKeyStringValue\nvalue, and is executed with a prepared statement.\n\n  A modified query that works, which initially simply enough, involves declaring\na column name for the subselect, and then using that column name in the order-by:\n\n      s.executeQuery(\"SELECT DISTINCT \"\n              + \"    t0.id, \"\n              + \"    (SELECT PMH_testPCKeyStringValue.value \"\n              + \"     FROM PMH_testPCKeyStringValue \"\n              + \"     WHERE PMH_testPCKeyStringValue.PERSISTENTMAPHOLDER_ID = t0.id \"\n              + \"     AND PMH_testPCKeyStringValue.testPCKeyStringValue = 1) AS MY_COL_ALIAS \"\n              + \"FROM PMH t0 \"\n              + \"INNER JOIN PMH_testPCKeyStringValue t1 ON t0.id = t1.PERSISTENTMAPHOLDER_ID \"\n              + \"WHERE (\"\n              + \"    (SELECT PMH_testPCKeyStringValue.value \"\n              + \"     FROM PMH_testPCKeyStringValue \"\n              + \"     WHERE PMH_testPCKeyStringValue.PERSISTENTMAPHOLDER_ID = t0.id \"\n              + \"     AND PMH_testPCKeyStringValue.testPCKeyStringValue = 1) \"\n              + \"     IS NOT NULL) \"\n              + \"ORDER BY MY_COL_ALIAS \"\n              + \"DESC\");\n\nThe fix, suggested by Abe White, and tested successfully by me (in this case/DBMS only) is:\n\n\" - When we find JDOQL of the form \"<map>.get(<value>)\", we add the result\nof ExpressionFactory.getMapValue(...) to the expression tree. \n\n- In the case we're concerned with the ExpressionFactory in question is\nthe org.apache.openjpa.jdbc.kernel.exps.JDBCExpressionFactory, and the\nreturn value is an org.apache.openjpa.jdbc.kernel.exps.GetMapValue.\n\n- The GetMapValue class manually constructs the SQL subselect to\nretrieve the value for the given key.\n\nOur goal is to alias the subselect in the SELECT portion of the query,\nto keep the subselect unaliased in the WHERE portion, and to use the\nSELECT alias in place of the subselect in the ORDER BY portion.\nLuckily, I believe this can be accomplished easily with a few\nmodifcations to the GetMapValue class:\n\n- Add a \"String _alias\" member to GetMapValue.  This will be a unique\nalias within the select for the subselect we'll produce.  I recommend\ngenerating this value with a monotonically-increasing int in\nJDBCExpressionFactory and passing it to the GetMapValue constructor.\nI.e.:\n\nclass JDBCExpressionFactory {\n  private int _getMapValueAlias = 0;\n  ...\n  Value getMapValue(...) {\n    return new GetMapValue(..., \"gmv\" + _getMapValueAlias++);\n  }\n}\n\n- In GetMapValue.select(...), append \" AS \" + the _alias member to the\nSQLBuffer returned by newSQLBuffer(...).\n\n- In GetMapValue.orderBy(...), just order by the _alias member, not the\nresult of newSQLBuffer(...).    \n\nThis should work because when we construct the select (see\norg.apache.openjpa.jdbc.exps.SelectConstructor) we automatically call\nselect(...) for any ordering value, in addition to orderBy(...).  So the\nsame GetMapValue instance will have a chance to create both its SELECT\nSQL and its ORDER BY SQL.  \n\nNotes:\n- You might only want to use subselect aliasing at all if the\nDBDictionary in use (accessible through ctx.store.getDBDictionary()) has\nits requiresAliasForSubselect field set to true.  Or maybe it would be\nbest for all dictionaries.  I don't know -- it would require a test run\non all our supported databases to see what each one likes.  My hunch\nwould be to do it for all dictionaries.\"","customfield_10010":null,"timetracking":{"originalEstimate":"48h","remainingEstimate":"48h","originalEstimateSeconds":172800,"remainingEstimateSeconds":172800},"customfield_12314523":null,"customfield_12314127":null,"customfield_12314522":null,"customfield_12314126":null,"customfield_12314521":null,"customfield_12314125":null,"customfield_12314520":null,"customfield_12314124":null,"attachment":[],"customfield_12312340":null,"customfield_12314123":null,"customfield_12312341":null,"customfield_12312220":null,"customfield_12314122":null,"customfield_12314121":null,"customfield_12310041":null,"customfield_12314120":null,"customfield_12314129":null,"customfield_12314524":null,"customfield_12314128":null,"summary":"The GetMapValue class should have/supply an alias for ORDER-BY clauses.","customfield_12314130":null,"customfield_12310291":null,"customfield_12310290":null,"customfield_12314138":null,"customfield_12314137":null,"environment":"MS SQLServer","customfield_12314136":null,"customfield_12314135":null,"customfield_12311020":null,"customfield_12314134":null,"duedate":null,"customfield_12314132":null,"customfield_12314131":null,"comment":{"comments":[{"self":"https://issues.apache.org/jira/rest/api/2/issue/12392967/comment/12584741","id":"12584741","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=joe+weinstein","name":"joe weinstein","key":"joe weinstein","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Joe Weinstein","active":true,"timeZone":"Etc/UTC"},"body":"Here is the svn diff that solves my example:\n\nIndex: openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/JDBCExpressionFactory.java\n===================================================================\n--- openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/JDBCExpressionFactory.java\n(revision 633245)\n+++ openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/JDBCExpressionFactory.java\n(working copy)\n@@ -59,6 +59,8 @@\n     private final ClassMapping _type;\n     private final SelectConstructor _cons = new SelectConstructor();\n\n+    private int _getMapValueAlias = 0;\n+\n     /**\n      * Constructor. Supply the type we're querying against.\n      */\n@@ -396,6 +398,6 @@\n     }\n\n     public Value getMapValue(Value map, Value arg) {\n-        return new GetMapValue((Val) map, (Val) arg);\n+        return new GetMapValue((Val) map, (Val) arg, \"gmv\" + _getMapValueAlias++);\n     }\n }\nIndex: openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/GetMapValue.java\n===================================================================\n--- openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/GetMapValue.java\n(revision 633245)\n+++ openjpa-jdbc/src/main/java/org/apache/openjpa/jdbc/kernel/exps/GetMapValue.java\n(working copy)\n@@ -47,13 +47,15 @@\n     private final Val _key;\n     private ClassMetaData _meta = null;\n     private Class _cast = null;\n+    private String _alias = null;\n\n     /**\n      * Constructor. Provide the map and key to operate on.\n      */\n-    public GetMapValue(Val map, Val key) {\n+    public GetMapValue(Val map, Val key, String alias) {\n         _map = map;\n         _key = key;\n+        _alias = alias;\n     }\n\n     public ClassMetaData getMetaData() {\n@@ -111,7 +113,9 @@\n\n     public void select(Select sel, ExpContext ctx, ExpState state,\n         boolean pks) {\n-        sel.select(newSQLBuffer(sel, ctx, state), this);\n+        SQLBuffer sqb = newSQLBuffer(sel, ctx, state);\n+        sqb.append(\" AS \" + _alias );\n+        sel.select(sqb, this);\n     }\n\n     public void selectColumns(Select sel, ExpContext ctx, ExpState state,\n@@ -127,7 +131,7 @@\n\n     public void orderBy(Select sel, ExpContext ctx, ExpState state,\n         boolean asc) {\n-        sel.orderBy(newSQLBuffer(sel, ctx, state), asc, false);\n+        sel.orderBy(_alias, asc, false);\n     }\n\n     private SQLBuffer newSQLBuffer(Select sel, ExpContext ctx, ExpState state) {","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=joe+weinstein","name":"joe weinstein","key":"joe weinstein","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"Joe Weinstein","active":true,"timeZone":"Etc/UTC"},"created":"2008-04-02T19:52:24.285+0000","updated":"2008-04-02T19:52:24.285+0000"},{"self":"https://issues.apache.org/jira/rest/api/2/issue/12392967/comment/12586456","id":"12586456","author":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=awhite","name":"awhite","key":"awhite","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A. Abram White","active":true,"timeZone":"Etc/UTC"},"body":"Applied suggested fix in revision 645589.","updateAuthor":{"self":"https://issues.apache.org/jira/rest/api/2/user?username=awhite","name":"awhite","key":"awhite","avatarUrls":{"48x48":"https://issues.apache.org/jira/secure/useravatar?avatarId=10452","24x24":"https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452","16x16":"https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452","32x32":"https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"},"displayName":"A. Abram White","active":true,"timeZone":"Etc/UTC"},"created":"2008-04-07T16:27:09.172+0000","updated":"2008-04-07T16:27:09.172+0000"}],"maxResults":2,"total":2,"startAt":0},"customfield_12311820":"0|i0z77z:","customfield_12314139":null}}

