{"sha":"d0a60af74613ffe2bf4f591f84453d8e5b298d93","node_id":"MDY6Q29tbWl0MjA2MzY0OmQwYTYwYWY3NDYxM2ZmZTJiZjRmNTkxZjg0NDUzZDhlNWIyOThkOTM=","commit":{"author":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2013-04-16T21:28:40Z"},"committer":{"name":"Albert Lee","email":"allee8285@apache.org","date":"2013-04-16T21:28:40Z"},"message":"[maven-release-plugin]  copy for tag 2.2.2\n\ngit-svn-id: https://svn.apache.org/repos/asf/openjpa/tags/2.2.2@1468616 13f79535-47bb-0310-9956-ffa450edef68","tree":{"sha":"af8616c29d83b9b6415a823d12c7f13f17a351bf","url":"https://api.github.com/repos/apache/openjpa/git/trees/af8616c29d83b9b6415a823d12c7f13f17a351bf"},"url":"https://api.github.com/repos/apache/openjpa/git/commits/d0a60af74613ffe2bf4f591f84453d8e5b298d93","comment_count":0,"verification":{"verified":false,"reason":"unsigned","signature":null,"payload":null}},"url":"https://api.github.com/repos/apache/openjpa/commits/d0a60af74613ffe2bf4f591f84453d8e5b298d93","html_url":"https://github.com/apache/openjpa/commit/d0a60af74613ffe2bf4f591f84453d8e5b298d93","comments_url":"https://api.github.com/repos/apache/openjpa/commits/d0a60af74613ffe2bf4f591f84453d8e5b298d93/comments","author":null,"committer":null,"parents":[{"sha":"eb08d154977d267ddfa244d2f11fe6a79aff9243","url":"https://api.github.com/repos/apache/openjpa/commits/eb08d154977d267ddfa244d2f11fe6a79aff9243","html_url":"https://github.com/apache/openjpa/commit/eb08d154977d267ddfa244d2f11fe6a79aff9243"},{"sha":"5501d1b8dcb698a5d3a3ff0e4ea9210b3fd0c879","url":"https://api.github.com/repos/apache/openjpa/commits/5501d1b8dcb698a5d3a3ff0e4ea9210b3fd0c879","html_url":"https://github.com/apache/openjpa/commit/5501d1b8dcb698a5d3a3ff0e4ea9210b3fd0c879"}],"stats":{"total":234,"additions":182,"deletions":52},"files":[{"sha":"567900df22215eafb1190b43a208bb62ad9f5a9b","filename":"LICENSE","status":"modified","additions":65,"deletions":0,"changes":65,"blob_url":"https://github.com/apache/openjpa/blob/d0a60af74613ffe2bf4f591f84453d8e5b298d93/LICENSE","raw_url":"https://github.com/apache/openjpa/raw/d0a60af74613ffe2bf4f591f84453d8e5b298d93/LICENSE","contents_url":"https://api.github.com/repos/apache/openjpa/contents/LICENSE?ref=d0a60af74613ffe2bf4f591f84453d8e5b298d93","patch":"@@ -516,3 +516,68 @@ Certain source files distributed by Sun Microsystems, Inc. are subject to the fo\n Linking this library statically or dynamically with other modules is making a combined work based on this library. Thus, the terms and conditions of the GNU General Public License Version 2 cover the whole combination.\n \n As a special exception, the copyright holders of this library give you permission to link this library with independent modules to produce an executable, regardless of the license terms of these independent modules, and to copy and distribute the resulting executable under terms of your choice, provided that you also meet, for each linked independent module, the terms and conditions of the license of that module.? An independent module is a module which is not derived from or based on this library.? If you modify this library, you may extend this exception to your version of the library, but you are not obligated to do so.? If you do not wish to do so, delete this exception statement from your version.\n+\n+\n+\n+serp-1.13.1.jar - BSD License\n+=============================\n+\n+Copyright (c) 2002, A. Abram White\n+All rights reserved.\n+\n+Redistribution and use in source and binary forms, with or without \n+modification, are permitted provided that the following conditions are met:\n+\n+* Redistributions of source code must retain the above copyright notice, this \n+  list of conditions and the following disclaimer.\n+* Redistributions in binary form must reproduce the above copyright notice, \n+  this list of conditions and the following disclaimer in the documentation \n+  and/or other materials provided with the distribution.\n+* Neither the name of 'serp' nor the names of its contributors may\n+  be used to endorse or promote products derived from this software without \n+  specific prior written permission.\n+\n+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n+ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED \n+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE \n+DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\n+ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n+(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; \n+LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON \n+ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT \n+(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS \n+SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n+\n+\n+asm-3.2.jar - License\n+=====================\n+\n+Copyright (c) 2000-2011 INRIA, France Telecom\n+All rights reserved.\n+\n+Redistribution and use in source and binary forms, with or without\n+modification, are permitted provided that the following conditions\n+are met:\n+\n+1. Redistributions of source code must retain the above copyright\n+   notice, this list of conditions and the following disclaimer.\n+\n+2. Redistributions in binary form must reproduce the above copyright\n+   notice, this list of conditions and the following disclaimer in the\n+   documentation and/or other materials provided with the distribution.\n+\n+3. Neither the name of the copyright holders nor the names of its\n+   contributors may be used to endorse or promote products derived from\n+   this software without specific prior written permission.\n+\n+THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n+AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n+IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n+ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n+LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n+CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n+SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n+INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n+CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n+ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF\n+THE POSSIBILITY OF SUCH DAMAGE."},{"sha":"a0d9c68670db7df5ee6d2dc49eeb72356a4453e7","filename":"openjpa-all/pom.xml","status":"modified","additions":0,"deletions":5,"changes":5,"blob_url":"https://github.com/apache/openjpa/blob/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-all/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-all/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-all/pom.xml?ref=d0a60af74613ffe2bf4f591f84453d8e5b298d93","patch":"@@ -150,10 +150,5 @@\n             <groupId>commons-beanutils</groupId>\n             <artifactId>commons-beanutils</artifactId>\n         </dependency>\n-        <dependency>\n-            <groupId>org.slf4j</groupId>\n-            <artifactId>slf4j-simple</artifactId>\n-            <version>${slf4jVersion}</version>\n-        </dependency>\n     </dependencies>\n </project>"},{"sha":"0cb48631bdc30500e47650e5d231fc360805017c","filename":"openjpa-examples/openbooks/build.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-examples/openbooks/build.properties","raw_url":"https://github.com/apache/openjpa/raw/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-examples/openbooks/build.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-examples/openbooks/build.properties?ref=d0a60af74613ffe2bf4f591f84453d8e5b298d93","patch":"@@ -21,7 +21,7 @@\n # Directory location of maven repository\n maven.repos=${user.home}/.m2/repository\n # OpenJPA runtime artifact\n-openjpa.version=2.2.1-SNAPSHOT\n+openjpa.version=2.2.2-SNAPSHOT\n \n # This is the variable of interest. \n # Notice that the variable points to a directory, not a *.jar file."},{"sha":"394d005ee6a5af3163c286a8f74df0bfab096996","filename":"openjpa-examples/openbooks/run.properties","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-examples/openbooks/run.properties","raw_url":"https://github.com/apache/openjpa/raw/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-examples/openbooks/run.properties","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-examples/openbooks/run.properties?ref=d0a60af74613ffe2bf4f591f84453d8e5b298d93","patch":"@@ -21,7 +21,7 @@\n # Directory location of maven repository\n maven.repos=${user.home}/.m2/repository\n # OpenJPA runtime artifact\n-openjpa.version=2.2.1-SNAPSHOT\n+openjpa.version=2.2.2-SNAPSHOT\n openjpa.lib=${maven.repos}/org/apache/openjpa/openjpa-all/${openjpa.version}\n # Other depends\n # MySQL"},{"sha":"e634dd7b0b106dbaaf34eade5a8ce541e1e63799","filename":"openjpa-examples/openbooks/src/main/resources/META-INF/persistence.jee.liberty.xml","status":"modified","additions":5,"deletions":1,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-examples/openbooks/src/main/resources/META-INF/persistence.jee.liberty.xml","raw_url":"https://github.com/apache/openjpa/raw/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-examples/openbooks/src/main/resources/META-INF/persistence.jee.liberty.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-examples/openbooks/src/main/resources/META-INF/persistence.jee.liberty.xml?ref=d0a60af74613ffe2bf4f591f84453d8e5b298d93","patch":"@@ -19,7 +19,9 @@\n -->\r\n <persistence xmlns=\"http://java.sun.com/xml/ns/persistence\"\r\n     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n-    version=\"1.0\">\r\n+    xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\r\n+        http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\"\r\n+    version=\"2.0\">\r\n     <persistence-unit name=\"OpenBooks\">\r\n         <jta-data-source>java:comp/env/jdbc/OpenBooks</jta-data-source>\r\n         <non-jta-data-source>java:comp/env/jdbc/NonTxOpenBooks</non-jta-data-source>\r\n@@ -31,6 +33,8 @@\n         <class>openbook.domain.Customer</class>\r\n         <class>openbook.domain.Author</class>\r\n         \r\n+        <validation-mode>NONE</validation-mode> \r\n+        \r\n         <properties>            \r\n             <property name=\"openjpa.DataCache\"                value=\"true\"/>        \r\n             <property name=\"openjpa.RemoteCommitProvider\"     value=\"sjvm\"/>\r"},{"sha":"05c56a1b5cc7a32743049b25df5f54f8f4fd19d0","filename":"openjpa-examples/openbooks/src/main/resources/META-INF/persistence.jee.was.xml","status":"modified","additions":23,"deletions":19,"changes":42,"blob_url":"https://github.com/apache/openjpa/blob/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-examples/openbooks/src/main/resources/META-INF/persistence.jee.was.xml","raw_url":"https://github.com/apache/openjpa/raw/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-examples/openbooks/src/main/resources/META-INF/persistence.jee.was.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-examples/openbooks/src/main/resources/META-INF/persistence.jee.was.xml?ref=d0a60af74613ffe2bf4f591f84453d8e5b298d93","patch":"@@ -19,28 +19,32 @@\n -->\n <persistence xmlns=\"http://java.sun.com/xml/ns/persistence\"\n     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n-    version=\"1.0\">\n+    xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\n+        http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\"\n+    version=\"2.0\">\n     <persistence-unit name=\"OpenBooks\">\n-    \t<jta-data-source>jdbc/OpenBooks</jta-data-source>\n-    \t<non-jta-data-source>jdbc/NonTxOpenBooks</non-jta-data-source>\n+        <jta-data-source>jdbc/OpenBooks</jta-data-source>\n+        <non-jta-data-source>jdbc/NonTxOpenBooks</non-jta-data-source>\n \n-    \t<class>openbook.domain.Book</class>\n-    \t<class>openbook.domain.Inventory</class>\n-    \t<class>openbook.domain.PurchaseOrder</class>\n-    \t<class>openbook.domain.LineItem</class>\n-    \t<class>openbook.domain.Customer</class>\n-    \t<class>openbook.domain.Author</class>\n-    \t\n-    \t<properties>    \t\t\n-    \t\t<property name=\"openjpa.DataCache\"                value=\"true\"/> \t\t\n-    \t\t<property name=\"openjpa.RemoteCommitProvider\"     value=\"sjvm\"/>\n-    \t\t<property name=\"openjpa.DynamicEnhancementAgent\"  value=\"false\"/>\n-    \t\t<property name=\"openjpa.RuntimeUnenhancedClasses\" value=\"unsupported\"/>\n+        <class>openbook.domain.Book</class>\n+        <class>openbook.domain.Inventory</class>\n+        <class>openbook.domain.PurchaseOrder</class>\n+        <class>openbook.domain.LineItem</class>\n+        <class>openbook.domain.Customer</class>\n+        <class>openbook.domain.Author</class>\n \n-    \t\t<property name=\"openjpa.jdbc.SynchronizeMappings\" value=\"buildSchema(ForeignKeys=true)\"/>\n-    \t\t<property name=\"openjpa.jdbc.QuerySQLCache\"       value=\"true(EnableStatistics=true)\"/>\n-    \t\t\n-    \t</properties>\n+        <validation-mode>NONE</validation-mode> \n+        \n+        <properties>            \n+            <property name=\"openjpa.DataCache\"                value=\"true\"/>        \n+            <property name=\"openjpa.RemoteCommitProvider\"     value=\"sjvm\"/>\n+            <property name=\"openjpa.DynamicEnhancementAgent\"  value=\"false\"/>\n+            <property name=\"openjpa.RuntimeUnenhancedClasses\" value=\"unsupported\"/>\n+\n+            <property name=\"openjpa.jdbc.SynchronizeMappings\" value=\"buildSchema(ForeignKeys=true)\"/>\n+            <property name=\"openjpa.jdbc.QuerySQLCache\"       value=\"true(EnableStatistics=true)\"/>\n+            \n+        </properties>\n     </persistence-unit>\n     \n </persistence>"},{"sha":"4d79a79d8a793b00866da4c553bcc6d5d0b44436","filename":"openjpa-examples/openbooks/src/main/resources/META-INF/persistence.xml","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-examples/openbooks/src/main/resources/META-INF/persistence.xml","raw_url":"https://github.com/apache/openjpa/raw/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-examples/openbooks/src/main/resources/META-INF/persistence.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-examples/openbooks/src/main/resources/META-INF/persistence.xml?ref=d0a60af74613ffe2bf4f591f84453d8e5b298d93","patch":"@@ -19,6 +19,8 @@\n -->\n <persistence xmlns=\"http://java.sun.com/xml/ns/persistence\"\n     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence\n+        http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd\"\n     version=\"2.0\">\n     <persistence-unit name=\"OpenBooks\">\n         <provider>org.apache.openjpa.persistence.PersistenceProviderImpl</provider>\n@@ -30,6 +32,8 @@\n         <class>openbook.domain.Customer</class>\n         <class>openbook.domain.Author</class>\n         \n+        <validation-mode>NONE</validation-mode> \n+        \n         <properties>\n         <!-- Use these for MySQL\n             <property name=\"javax.persistence.jdbc.driver\"   value=\"com.mysql.jdbc.Driver\"/>"},{"sha":"8087e14226601a2f9e497da7cf2244b46ab0281b","filename":"openjpa-integration/tck/pom.xml","status":"modified","additions":7,"deletions":0,"changes":7,"blob_url":"https://github.com/apache/openjpa/blob/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-integration/tck/pom.xml","raw_url":"https://github.com/apache/openjpa/raw/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-integration/tck/pom.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-integration/tck/pom.xml?ref=d0a60af74613ffe2bf4f591f84453d8e5b298d93","patch":"@@ -223,6 +223,13 @@\n             <artifactId>openjpa-all</artifactId>\n             <version>${project.version}</version>\n           </dependency>\n+          <!-- The slf4j dependency is for bval 0.3-incubating -->\n+          <!-- This can be removed if we move to bval 0.5, where the slf4j dependency is removed -->\n+          <dependency>\n+            <groupId>org.slf4j</groupId>\n+            <artifactId>slf4j-simple</artifactId>\n+            <version>${slf4jVersion}</version>\n+          </dependency>\n         </dependencies>\n \n         <!-- ^^^^^^^^^^^^^^^^^^^ -->"},{"sha":"29ba4ceec42b5bf41f50b717a6fc8ed9c3d23b27","filename":"openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/XMLMetaDataParser.java","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/XMLMetaDataParser.java","raw_url":"https://github.com/apache/openjpa/raw/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/XMLMetaDataParser.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-lib/src/main/java/org/apache/openjpa/lib/meta/XMLMetaDataParser.java?ref=d0a60af74613ffe2bf4f591f84453d8e5b298d93","patch":"@@ -65,7 +65,7 @@\n         (XMLMetaDataParser.class);\n     private static boolean _schemaBug;\n     \n-    private static final String OPENJPA_NAMESPACE = \"http://www.apache.org/openjpa/ns/orm\";\n+    private static final String OPENJPA_NAMESPACE = \"http://openjpa.apache.org/ns/orm\";\n     protected int _extendedNamespace = 0;\n     protected int _openjpaNamespace = 0;\n "},{"sha":"8b3f0aaef9c1f679d6f215da728ca6b2c0fd10e1","filename":"openjpa-persistence-jdbc/src/test/resources/META-INF/fetch-groups-orm.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-persistence-jdbc/src/test/resources/META-INF/fetch-groups-orm.xml","raw_url":"https://github.com/apache/openjpa/raw/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-persistence-jdbc/src/test/resources/META-INF/fetch-groups-orm.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/META-INF/fetch-groups-orm.xml?ref=d0a60af74613ffe2bf4f591f84453d8e5b298d93","patch":"@@ -17,8 +17,8 @@\n  specific language governing permissions and limitations\n  under the License.   \n -->\n-<entity-mappings xmlns=\"http://www.apache.org/openjpa/ns/orm/extendable\" \n-\txmlns:openjpa=\"http://www.apache.org/openjpa/ns/orm\" \n+<entity-mappings xmlns=\"http://openjpa.apache.org/ns/orm/extendable\" \n+\txmlns:openjpa=\"http://openjpa.apache.org/ns/orm\" \n \txmlns:orm=\"http://java.sun.com/xml/ns/persistence/orm\" \n \txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n \tversion=\"2.0\">"},{"sha":"0abe76dd75317af2d4c719e57c3661a4874ed71c","filename":"openjpa-persistence-jdbc/src/test/resources/META-INF/foreign-key-orm.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-persistence-jdbc/src/test/resources/META-INF/foreign-key-orm.xml","raw_url":"https://github.com/apache/openjpa/raw/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-persistence-jdbc/src/test/resources/META-INF/foreign-key-orm.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/META-INF/foreign-key-orm.xml?ref=d0a60af74613ffe2bf4f591f84453d8e5b298d93","patch":"@@ -17,8 +17,8 @@\n  specific language governing permissions and limitations\n  under the License.   \n -->\n-<entity-mappings xmlns=\"http://www.apache.org/openjpa/ns/orm/extendable\" \n-\txmlns:openjpa=\"http://www.apache.org/openjpa/ns/orm\" \n+<entity-mappings xmlns=\"http://openjpa.apache.org/ns/orm/extendable\" \n+\txmlns:openjpa=\"http://openjpa.apache.org/ns/orm\" \n \txmlns:orm=\"http://java.sun.com/xml/ns/persistence/orm\" \n \txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n \tversion=\"2.0\">"},{"sha":"93b374d914442e24b0d4b1345582543faa56e16c","filename":"openjpa-persistence-jdbc/src/test/resources/META-INF/nonstandard-orm.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-persistence-jdbc/src/test/resources/META-INF/nonstandard-orm.xml","raw_url":"https://github.com/apache/openjpa/raw/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-persistence-jdbc/src/test/resources/META-INF/nonstandard-orm.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/META-INF/nonstandard-orm.xml?ref=d0a60af74613ffe2bf4f591f84453d8e5b298d93","patch":"@@ -17,8 +17,8 @@\n  specific language governing permissions and limitations\n  under the License.   \n -->\n-<entity-mappings xmlns=\"http://www.apache.org/openjpa/ns/orm/extendable\" \n-\txmlns:openjpa=\"http://www.apache.org/openjpa/ns/orm\" \n+<entity-mappings xmlns=\"http://openjpa.apache.org/ns/orm/extendable\" \n+\txmlns:openjpa=\"http://openjpa.apache.org/ns/orm\" \n \txmlns:orm=\"http://java.sun.com/xml/ns/persistence/orm\" \n \txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n \tversion=\"2.0\">"},{"sha":"974553b43511a4e6738a1f019e5bb005dd2ce0bc","filename":"openjpa-persistence-jdbc/src/test/resources/META-INF/version-columns-orm.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-persistence-jdbc/src/test/resources/META-INF/version-columns-orm.xml","raw_url":"https://github.com/apache/openjpa/raw/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-persistence-jdbc/src/test/resources/META-INF/version-columns-orm.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/META-INF/version-columns-orm.xml?ref=d0a60af74613ffe2bf4f591f84453d8e5b298d93","patch":"@@ -17,8 +17,8 @@\n  specific language governing permissions and limitations\n  under the License.   \n -->\n-<entity-mappings xmlns=\"http://www.apache.org/openjpa/ns/orm/extendable\" \n-\txmlns:openjpa=\"http://www.apache.org/openjpa/ns/orm\" \n+<entity-mappings xmlns=\"http://openjpa.apache.org/ns/orm/extendable\" \n+\txmlns:openjpa=\"http://openjpa.apache.org/ns/orm\" \n \txmlns:orm=\"http://java.sun.com/xml/ns/persistence/orm\" \n \txmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n \tversion=\"2.0\">"},{"sha":"23ae380341898498530e97c5bb14b80af11f55ca","filename":"openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/embed/lazy/embed-lazy-orm.xml","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/embed/lazy/embed-lazy-orm.xml","raw_url":"https://github.com/apache/openjpa/raw/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/embed/lazy/embed-lazy-orm.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-jdbc/src/test/resources/org/apache/openjpa/persistence/embed/lazy/embed-lazy-orm.xml?ref=d0a60af74613ffe2bf4f591f84453d8e5b298d93","patch":"@@ -17,8 +17,8 @@\n  specific language governing permissions and limitations\n  under the License.\n -->\n-<entity-mappings xmlns=\"http://www.apache.org/openjpa/ns/orm/extendable\" \n-    xmlns:openjpa=\"http://www.apache.org/openjpa/ns/orm\" \n+<entity-mappings xmlns=\"http://openjpa.apache.org/ns/orm/extendable\" \n+    xmlns:openjpa=\"http://openjpa.apache.org/ns/orm\" \n     xmlns:orm=\"http://java.sun.com/xml/ns/persistence/orm\" \n     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n     version=\"2.0\">"},{"sha":"dd2c1813bc576d2ebac74636b1427ed74812097c","filename":"openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/SequencedActionsTest.java","status":"modified","additions":48,"deletions":4,"changes":52,"blob_url":"https://github.com/apache/openjpa/blob/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/SequencedActionsTest.java","raw_url":"https://github.com/apache/openjpa/raw/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/SequencedActionsTest.java","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence-locking/src/test/java/org/apache/openjpa/persistence/lockmgr/SequencedActionsTest.java?ref=d0a60af74613ffe2bf4f591f84453d8e5b298d93","patch":"@@ -31,6 +31,7 @@\n import java.util.List;\n import java.util.Map;\n \n+import javax.persistence.Cache;\n import javax.persistence.EntityManager;\n import javax.persistence.LockModeType;\n import javax.persistence.Query;\n@@ -171,14 +172,22 @@ protected Log getLog() {\n     }\n \n     protected Log getDumpStackLog() {\n-        return emf.getConfiguration().getLog(\"DumpStack\");\n+        if (emf != null) {\n+            return emf.getConfiguration().getLog(\"DumpStack\");\n+        } else {\n+            return null;\n+        }\n     }\n \n     protected void logStack(Throwable t) {\n         StringWriter str = new StringWriter();\n         PrintWriter print = new PrintWriter(str);\n         t.printStackTrace(print);\n-        getDumpStackLog().trace(str.toString());\n+        if (getDumpStackLog() != null) {\n+            getDumpStackLog().trace(str.toString());\n+        } else {\n+            System.err.println(str.toString());\n+        }\n     }\n \n     private void notifyParent() {\n@@ -216,6 +225,9 @@ private void notifyParent() {\n         // OpenJPA entity manager API\n         Detach,            // ();\n \n+        // OpenJPA entity manager factory API\n+        ClearCache,        // ()\n+\n         // Transaction API\n         StartTx,           // ()\n         CommitTx,          // ()\n@@ -247,6 +259,7 @@ private void notifyParent() {\n         SaveVersion,       // ([int id])\n         TestVersion,       // (int id, int increment)\n         TestLockMode,      // (int id, LockModeType lockMode)\n+        TestInCache,       // ([int id[, boolean expectedInCache]])\n \n         Test,              // Open-ended testing actions\n     };\n@@ -530,6 +543,13 @@ private void launchCommonSequence(TestThread thisThread ) {\n                     log.trace(\"Employee (after)  :\" + detEmployee);\n                     break;\n \n+                case ClearCache:\n+                    Cache cache = em.getEntityManagerFactory().getCache();\n+                    if (cache != null) {\n+                        cache.evictAll();\n+                    }      \n+                    break;\n+\n                 case StartTx:\n                     em.getTransaction().begin();\n                     break;\n@@ -577,7 +597,7 @@ private void launchCommonSequence(TestThread thisThread ) {\n                     }\n                     if (waitTime < MinThreadWaitInMs / 2)\n                         waitTime = MinThreadWaitInMs / 2;\n-                    log.trace(\">> Started wait for \" + waitTime + \" ms\");\n+                    log.trace(\">> Started thread \" + waitThreadid + \" wait for \" + waitTime + \" ms\");\n                     if( waitThreadid != 0) {\n                         thisThread.wait(waitTime);\n                     } else {\n@@ -773,6 +793,26 @@ private void launchCommonSequence(TestThread thisThread ) {\n                     }\n                     break;\n \n+                case TestInCache:\n+                    id = 1;\n+                    boolean expectedInCache = false;\n+                    if (args.length > 1) {\n+                        id = (Integer)args[1];\n+                    }\n+                    if (args.length > 2) {\n+                        expectedInCache = (Boolean)args[2];\n+                    }\n+                    Cache testCache = em.getEntityManagerFactory().getCache();\n+                    if (testCache != null) {\n+                        boolean inCache = testCache.contains(LockEmployee.class, id);                        \n+                        log.trace(\"cache.contains(Employee(\"+id+\")) = \" + inCache);\n+                        assertTrue(curAct + \":TestInCache Expecting=\" + expectedInCache\n+                                + \", Testing=\" + inCache + \"]\", inCache == expectedInCache);\n+                    } else {\n+                        log.info(curAct+\":TestInCache - No Cache found.\");\n+                    }\n+                    break;\n+\n                 case WaitAllChildren:\n                     // wait for threads to die or timeout\n                     log.trace(\"checking if thread is alive for \" +\n@@ -833,7 +873,11 @@ private void launchCommonSequence(TestThread thisThread ) {\n                     break;\n \n                 case Sleep:\n-                    Thread.sleep((Integer) args[1]);\n+                    int sleepMS = 5000;\n+                    if (args.length > 1) {\n+                        sleepMS = (Integer) args[1];\n+                    }\n+                    Thread.sleep(sleepMS);\n                     break;\n                 case DetachSerialize:\n                     id = 1;"},{"sha":"33dd0bd05655414d95583b6bfb5ca59bcecc80ca","filename":"openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/extendable-orm.xsd","status":"modified","additions":2,"deletions":2,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/extendable-orm.xsd","raw_url":"https://github.com/apache/openjpa/raw/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/extendable-orm.xsd","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/extendable-orm.xsd?ref=d0a60af74613ffe2bf4f591f84453d8e5b298d93","patch":"@@ -18,8 +18,8 @@\n  under the License.   \n -->\n <xsd:schema xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \n-\ttargetNamespace=\"http://www.apache.org/openjpa/ns/orm/extendable\"\n-\txmlns:extendable-orm=\"http://www.apache.org/openjpa/ns/orm/extendable\"\n+\ttargetNamespace=\"http://openjpa.apache.org/ns/orm/extendable\"\n+\txmlns:extendable-orm=\"http://openjpa.apache.org/ns/orm/extendable\"\n \txmlns:orm=\"http://java.sun.com/xml/ns/persistence/orm\" \n \telementFormDefault=\"qualified\"\n \tattributeFormDefault=\"unqualified\""},{"sha":"5cb2fa458e4337ba984ec5b864471701096eb177","filename":"openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/openjpa-orm.xsd","status":"modified","additions":4,"deletions":4,"changes":8,"blob_url":"https://github.com/apache/openjpa/blob/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/openjpa-orm.xsd","raw_url":"https://github.com/apache/openjpa/raw/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/openjpa-orm.xsd","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-persistence/src/main/resources/org/apache/openjpa/persistence/openjpa-orm.xsd?ref=d0a60af74613ffe2bf4f591f84453d8e5b298d93","patch":"@@ -18,15 +18,15 @@\n  under the License.   \n -->\n <xsd:schema xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" \n-\ttargetNamespace=\"http://www.apache.org/openjpa/ns/orm\" \n-\txmlns:openjpa-orm=\"http://www.apache.org/openjpa/ns/orm\"\n-\txmlns:extendable-orm=\"http://www.apache.org/openjpa/ns/orm/extendable\" \n+\ttargetNamespace=\"http://openjpa.apache.org/ns/orm\" \n+\txmlns:openjpa-orm=\"http://openjpa.apache.org/ns/orm\"\n+\txmlns:extendable-orm=\"http://openjpa.apache.org/ns/orm/extendable\" \n \txmlns:orm=\"http://java.sun.com/xml/ns/persistence/orm\"\n \telementFormDefault=\"qualified\"\n \tattributeFormDefault=\"unqualified\"\n \tversion=\"1.0\">\n \t\n-\t<xsd:import namespace=\"http://www.apache.org/openjpa/ns/orm/extendable\"/>\n+\t<xsd:import namespace=\"http://openjpa.apache.org/ns/orm/extendable\"/>\n \t<xsd:import namespace=\"http://java.sun.com/xml/ns/persistence/orm\"/>\n \t\n \t<!-- **************************************************** -->"},{"sha":"ffbf752c0b136d01cad4982af39519ee35705b0e","filename":"openjpa-project/CHANGES.txt","status":"modified","additions":3,"deletions":0,"changes":3,"blob_url":"https://github.com/apache/openjpa/blob/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-project/CHANGES.txt","raw_url":"https://github.com/apache/openjpa/raw/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-project/CHANGES.txt","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/CHANGES.txt?ref=d0a60af74613ffe2bf4f591f84453d8e5b298d93","patch":"@@ -117,6 +117,7 @@ Included Changes in OpenJPA 2.2.2\n \n Bug\n \n+    [OPENJPA-2172] - openjpa-all jar is missing slf4j runtime dependency\n     [OPENJPA-2196] - Create Sequence Postgres 9.1\n     [OPENJPA-2233] - Failed to invoke pcGetIDOwningClass method on embeddable entity with ID annotation\n     [OPENJPA-2235] - \"READ_UNCOMMITTED\" setting for the fetch plan isolation level is ignored in DB2Dictionary\n@@ -146,6 +147,8 @@ Improvement\n     [OPENJPA-2348] - Cache calculated hashCode in OpenJPAId\n     [OPENJPA-2353] - Reduce object allocations\n     [OPENJPA-2354] - Removed synchronized from enhancer added pcReplaceStateManager method\n+    [OPENJPA-2368] - Move www.apache.org/openjpa/ns/orm to openjpa.apache.org/ns/orm\n+    \n \n New Feature\n "},{"sha":"1cbe28b226fc97bab3a1a6dc44c4dc49c6e7c960","filename":"openjpa-project/LICENSE","status":"modified","additions":1,"deletions":1,"changes":2,"blob_url":"https://github.com/apache/openjpa/blob/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-project/LICENSE","raw_url":"https://github.com/apache/openjpa/raw/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-project/LICENSE","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/LICENSE?ref=d0a60af74613ffe2bf4f591f84453d8e5b298d93","patch":"@@ -415,4 +415,4 @@ SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF\n-THE POSSIBILITY OF SUCH DAMAGE.\n\\ No newline at end of file\n+THE POSSIBILITY OF SUCH DAMAGE."},{"sha":"17139d39f093ff60ca35f7534485895a0cc4ff63","filename":"openjpa-project/RELEASE-NOTES.html","status":"modified","additions":4,"deletions":0,"changes":4,"blob_url":"https://github.com/apache/openjpa/blob/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-project/RELEASE-NOTES.html","raw_url":"https://github.com/apache/openjpa/raw/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-project/RELEASE-NOTES.html","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/RELEASE-NOTES.html?ref=d0a60af74613ffe2bf4f591f84453d8e5b298d93","patch":"@@ -134,6 +134,8 @@ <h2><a name=\"221\">OpenJPA 2.2.2</h2>\n <h2>        Bug\n </h2>\n <ul>\n+<li>[<a href='https://issues.apache.org/jira/browse/OPENJPA-2172'>OPENJPA-2172</a>] -         openjpa-all jar is missing slf4j runtime dependency\n+</li>\n <li>[<a href='https://issues.apache.org/jira/browse/OPENJPA-2196'>OPENJPA-2196</a>] -         Create Sequence Postgres 9.1\n </li>\n <li>[<a href='https://issues.apache.org/jira/browse/OPENJPA-2233'>OPENJPA-2233</a>] -         Failed to invoke pcGetIDOwningClass method on embeddable entity with ID annotation\n@@ -191,6 +193,8 @@ <h2>        Improvement\n </li>\n <li>[<a href='https://issues.apache.org/jira/browse/OPENJPA-2354'>OPENJPA-2354</a>] -         Removed synchronized from enhancer added pcReplaceStateManager method\n </li>\n+<li>[<a href='https://issues.apache.org/jira/browse/OPENJPA-2368'>OPENJPA-2368</a>] -         Move www.apache.org/openjpa/ns/orm to openjpa.apache.org/ns/orm\n+</li>\n </ul>\n     \n <h2>        New Feature"},{"sha":"f72dd414413fa9b5a869cca006520ab92b686e17","filename":"openjpa-project/src/doc/manual/ref_guide_meta.xml","status":"modified","additions":3,"deletions":3,"changes":6,"blob_url":"https://github.com/apache/openjpa/blob/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-project/src/doc/manual/ref_guide_meta.xml","raw_url":"https://github.com/apache/openjpa/raw/d0a60af74613ffe2bf4f591f84453d8e5b298d93/openjpa-project/src/doc/manual/ref_guide_meta.xml","contents_url":"https://api.github.com/repos/apache/openjpa/contents/openjpa-project/src/doc/manual/ref_guide_meta.xml?ref=d0a60af74613ffe2bf4f591f84453d8e5b298d93","patch":"@@ -987,7 +987,7 @@ public class Magazine\n         \t<para>\n OpenJPA has extended the JPA 2.0 schema to include elements and attributes corresponding\n to OpenJPA extended metadata and mapping annotations. The schema are contained in 2\n-files: <ulink url=\"http://openjpa.apache.org/builds/latest/docs/schema/extendable-orm.xsd\">\n+files: <ulink url=\"http://openjpa.apache.org/builds/latest/docs/schema/extendable/extendable-orm.xsd\">\n extendable-orm.xsd</ulink> and\n <ulink url=\"http://openjpa.apache.org/builds/latest/docs/schema/openjpa-orm.xsd\">openjpa-orm.xsd</ulink>.\n The extendable-orm.xsd file provides copies of some of the JPA 2.0 schema elements with additional schema to make it \n@@ -1007,8 +1007,8 @@ schemas as well as for the schema for JPA 2.0, as shown in the following example\n         \t\t\tOpenJPA Schema Extensions\n         \t\t</title>\n <programlisting>\n-&lt;entity-mappings xmlns=\"http://www.apache.org/openjpa/ns/orm/extendable\" \n-    xmlns:openjpa=\"http://www.apache.org/openjpa/ns/orm\" \n+&lt;entity-mappings xmlns=\"http://openjpa.apache.org/ns/orm/extendable\" \n+    xmlns:openjpa=\"http://openjpa.apache.org/ns/orm\" \n     xmlns:orm=\"http://java.sun.com/xml/ns/persistence/orm\" \n     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n     version=\"2.0\"&gt;"}]}

